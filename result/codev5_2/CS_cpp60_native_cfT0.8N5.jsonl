{"src_uid": "bd5912fe2c5c37658f28f6b159b39645", "id": 1, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': 'yandex\\r\\n6\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yahoo\\r\\n5\\r\\n', 'output': ['1\\r\\n']}, {'input': 'google\\r\\n7\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'a\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'z\\r\\n2\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'fwgfrwgkuwghfiruhewgirueguhergiqrbvgrgf\\r\\n26\\r\\n', 'output': ['14\\r\\n']}, {'input': 'nfevghreuoghrueighoqghbnebvnejbvnbgneluqe\\r\\n26\\r\\n', 'output': ['12\\r\\n']}, {'input': 'a\\r\\n3\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'smaxpqplaqqbxuqxalqmbmmgubbpspxhawbxsuqhhegpmmpebqmqpbbeplwaepxmsahuepuhuhwxeqmmlgqubuaxehwuwasgxpqmugbmuawuhwqlswllssueglbxepbmwgs\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'cuguccgcugcugucgggggcgcgucgucugcuuuccccuugccg\\r\\n4\\r\\n', 'output': ['1\\r\\n']}, {'input': 'fcfccfcfccfcfcffcffffffcfccfccfcffccccfcffffccfccfcffcfcccccffcfffcccffcfccfffffcccfccffffffccfccccf\\r\\n20\\r\\n', 'output': ['18\\r\\n']}, {'input': 'swmkwaruyv\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'tnbqpsuhkczmejirvyfdolxwga\\r\\n22\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n3\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abb\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aaaa\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yandex\\r\\n4\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aaabbbccc\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcd\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'asdfgh\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aab\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'mynameissako\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcd\\r\\n3\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcdef\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcdefg\\r\\n4\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abc\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'asdafjsgljdllgjdgkl\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yaay\\r\\n3\\r\\n', 'output': ['1\\r\\n']}, {'input': 'yaay\\r\\n4\\r\\n', 'output': ['2\\r\\n']}, {'input': 'zzzzzz\\r\\n2\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int sz = 2e5 + 10;\nstring s;\nint k;\nint main() {\n  cin >> s >> k;\n  if (s.size() < k) {\n    cout << \"impossible\\n\";\n    return 0;\n  }\n  int f = 0, cnt = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (!f &&!cnt) {\n      f = 1;\n      cnt++;\n    } else if (!f) {\n      if (s[i]!= s[i - 1]) {\n        f = 1;\n        cnt++;\n      }\n    } else {\n      if (s[i]!= s[i - 1]) {\n        cnt++;\n      }\n    }\n  }\n  cout << s.size() - cnt << endl;\n}\n"}
{"src_uid": "bd5912fe2c5c37658f28f6b159b39645", "id": 1, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': 'yandex\\r\\n6\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yahoo\\r\\n5\\r\\n', 'output': ['1\\r\\n']}, {'input': 'google\\r\\n7\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'a\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'z\\r\\n2\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'fwgfrwgkuwghfiruhewgirueguhergiqrbvgrgf\\r\\n26\\r\\n', 'output': ['14\\r\\n']}, {'input': 'nfevghreuoghrueighoqghbnebvnejbvnbgneluqe\\r\\n26\\r\\n', 'output': ['12\\r\\n']}, {'input': 'a\\r\\n3\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'smaxpqplaqqbxuqxalqmbmmgubbpspxhawbxsuqhhegpmmpebqmqpbbeplwaepxmsahuepuhuhwxeqmmlgqubuaxehwuwasgxpqmugbmuawuhwqlswllssueglbxepbmwgs\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'cuguccgcugcugucgggggcgcgucgucugcuuuccccuugccg\\r\\n4\\r\\n', 'output': ['1\\r\\n']}, {'input': 'fcfccfcfccfcfcffcffffffcfccfccfcffccccfcffffccfccfcffcfcccccffcfffcccffcfccfffffcccfccffffffccfccccf\\r\\n20\\r\\n', 'output': ['18\\r\\n']}, {'input': 'swmkwaruyv\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'tnbqpsuhkczmejirvyfdolxwga\\r\\n22\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n3\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abb\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aaaa\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yandex\\r\\n4\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aaabbbccc\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcd\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'asdfgh\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aab\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'mynameissako\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcd\\r\\n3\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcdef\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcdefg\\r\\n4\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abc\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'asdafjsgljdllgjdgkl\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yaay\\r\\n3\\r\\n', 'output': ['1\\r\\n']}, {'input': 'yaay\\r\\n4\\r\\n', 'output': ['2\\r\\n']}, {'input': 'zzzzzz\\r\\n2\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a[26];\nint main() {\n  string s;\n  int k;\n  cin >> s >> k;\n  int l = s.length();\n  int ans = 0;\n  for (int i = 0; i < l; i++) {\n    a[s[i] - 'a']++;\n  }\n  sort(a, a + 26);\n  int d = accumulate(a, a + 26, 0);\n  if (d < k) {\n    cout << \"impossible\";\n  } else {\n    if (k >= l) {\n      cout << 0;\n    } else {\n      cout << min(26 - k, l - k) << endl;\n    }\n  }\n}\n"}
{"src_uid": "bd5912fe2c5c37658f28f6b159b39645", "id": 1, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': 'yandex\\r\\n6\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yahoo\\r\\n5\\r\\n', 'output': ['1\\r\\n']}, {'input': 'google\\r\\n7\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'a\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'z\\r\\n2\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'fwgfrwgkuwghfiruhewgirueguhergiqrbvgrgf\\r\\n26\\r\\n', 'output': ['14\\r\\n']}, {'input': 'nfevghreuoghrueighoqghbnebvnejbvnbgneluqe\\r\\n26\\r\\n', 'output': ['12\\r\\n']}, {'input': 'a\\r\\n3\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'smaxpqplaqqbxuqxalqmbmmgubbpspxhawbxsuqhhegpmmpebqmqpbbeplwaepxmsahuepuhuhwxeqmmlgqubuaxehwuwasgxpqmugbmuawuhwqlswllssueglbxepbmwgs\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'cuguccgcugcugucgggggcgcgucgucugcuuuccccuugccg\\r\\n4\\r\\n', 'output': ['1\\r\\n']}, {'input': 'fcfccfcfccfcfcffcffffffcfccfccfcffccccfcffffccfccfcffcfcccccffcfffcccffcfccfffffcccfccffffffccfccccf\\r\\n20\\r\\n', 'output': ['18\\r\\n']}, {'input': 'swmkwaruyv\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'tnbqpsuhkczmejirvyfdolxwga\\r\\n22\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n3\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abb\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aaaa\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yandex\\r\\n4\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aaabbbccc\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcd\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'asdfgh\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aab\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'mynameissako\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcd\\r\\n3\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcdef\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcdefg\\r\\n4\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abc\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'asdafjsgljdllgjdgkl\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yaay\\r\\n3\\r\\n', 'output': ['1\\r\\n']}, {'input': 'yaay\\r\\n4\\r\\n', 'output': ['2\\r\\n']}, {'input': 'zzzzzz\\r\\n2\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s;\n  int k;\n  cin >> s >> k;\n  int n = s.size();\n  int counter[26] = {};\n  for (int i = 0; i < s.size(); i++) {\n    counter[s[i] - 'a']++;\n  }\n  sort(counter, counter + 26);\n  reverse(counter, counter + 26);\n  if (counter[0] < k) {\n    cout << \"impossible\" << endl;\n    return 0;\n  }\n  int ans = 0;\n  int c = 0;\n  for (int i = 1; i < 26; i++) {\n    ans += k - counter[i];\n  }\n  cout << ans << endl;\n  return 0;\n}\n"}
{"src_uid": "bd5912fe2c5c37658f28f6b159b39645", "id": 1, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': 'yandex\\r\\n6\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yahoo\\r\\n5\\r\\n', 'output': ['1\\r\\n']}, {'input': 'google\\r\\n7\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'a\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'z\\r\\n2\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'fwgfrwgkuwghfiruhewgirueguhergiqrbvgrgf\\r\\n26\\r\\n', 'output': ['14\\r\\n']}, {'input': 'nfevghreuoghrueighoqghbnebvnejbvnbgneluqe\\r\\n26\\r\\n', 'output': ['12\\r\\n']}, {'input': 'a\\r\\n3\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'smaxpqplaqqbxuqxalqmbmmgubbpspxhawbxsuqhhegpmmpebqmqpbbeplwaepxmsahuepuhuhwxeqmmlgqubuaxehwuwasgxpqmugbmuawuhwqlswllssueglbxepbmwgs\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'cuguccgcugcugucgggggcgcgucgucugcuuuccccuugccg\\r\\n4\\r\\n', 'output': ['1\\r\\n']}, {'input': 'fcfccfcfccfcfcffcffffffcfccfccfcffccccfcffffccfccfcffcfcccccffcfffcccffcfccfffffcccfccffffffccfccccf\\r\\n20\\r\\n', 'output': ['18\\r\\n']}, {'input': 'swmkwaruyv\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'tnbqpsuhkczmejirvyfdolxwga\\r\\n22\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n3\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abb\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aaaa\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yandex\\r\\n4\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aaabbbccc\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcd\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'asdfgh\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aab\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'mynameissako\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcd\\r\\n3\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcdef\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcdefg\\r\\n4\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abc\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'asdafjsgljdllgjdgkl\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yaay\\r\\n3\\r\\n', 'output': ['1\\r\\n']}, {'input': 'yaay\\r\\n4\\r\\n', 'output': ['2\\r\\n']}, {'input': 'zzzzzz\\r\\n2\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[] = {0, 0, -1, 1};\nint dy[] = {1, -1, 0, 0};\nint n, m, k;\nstring s;\nbool mark[300000];\nint sum[300000];\nint main() {\n  cin >> s >> k;\n  n = s.size();\n  if (k > 26) {\n    cout << \"impossible\" << endl;\n    return 0;\n  }\n  int need = k - n;\n  memset(sum, 0, sizeof(sum));\n  for (int i = 0; i < s.size(); i++) sum[s[i]]++;\n  int count = 0;\n  for (int i = 0; i < 256; i++) {\n    if (!sum[i] && count < need) {\n      count++;\n    }\n  }\n  if (n >= k) {\n    cout << 0 << endl;\n    return 0;\n  }\n  if (count == 0) {\n    cout << \"impossible\" << endl;\n    return 0;\n  }\n  cout << count << endl;\n  return 0;\n}\n"}
{"src_uid": "bd5912fe2c5c37658f28f6b159b39645", "id": 1, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': 'yandex\\r\\n6\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yahoo\\r\\n5\\r\\n', 'output': ['1\\r\\n']}, {'input': 'google\\r\\n7\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'a\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'z\\r\\n2\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'fwgfrwgkuwghfiruhewgirueguhergiqrbvgrgf\\r\\n26\\r\\n', 'output': ['14\\r\\n']}, {'input': 'nfevghreuoghrueighoqghbnebvnejbvnbgneluqe\\r\\n26\\r\\n', 'output': ['12\\r\\n']}, {'input': 'a\\r\\n3\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'smaxpqplaqqbxuqxalqmbmmgubbpspxhawbxsuqhhegpmmpebqmqpbbeplwaepxmsahuepuhuhwxeqmmlgqubuaxehwuwasgxpqmugbmuawuhwqlswllssueglbxepbmwgs\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'cuguccgcugcugucgggggcgcgucgucugcuuuccccuugccg\\r\\n4\\r\\n', 'output': ['1\\r\\n']}, {'input': 'fcfccfcfccfcfcffcffffffcfccfccfcffccccfcffffccfccfcffcfcccccffcfffcccffcfccfffffcccfccffffffccfccccf\\r\\n20\\r\\n', 'output': ['18\\r\\n']}, {'input': 'swmkwaruyv\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'tnbqpsuhkczmejirvyfdolxwga\\r\\n22\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n3\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abb\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aaaa\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yandex\\r\\n4\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aaabbbccc\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcd\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'asdfgh\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aab\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'mynameissako\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcd\\r\\n3\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcdef\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcdefg\\r\\n4\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abc\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'asdafjsgljdllgjdgkl\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yaay\\r\\n3\\r\\n', 'output': ['1\\r\\n']}, {'input': 'yaay\\r\\n4\\r\\n', 'output': ['2\\r\\n']}, {'input': 'zzzzzz\\r\\n2\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nstring s;\nlong long int k;\nbool ok(long long int x) {\n  vector<bool> vec(256);\n  for (char c : s) {\n    vec[c] = true;\n  }\n  x -= vec.size();\n  return (x >= 0);\n}\nint main() {\n  cin >> s;\n  cin >> k;\n  long long int i = 1, l = s.size(), r = 1e9 + 1000, cnt = 0, mid;\n  while (i <= r) {\n    mid = (i + r) / 2;\n    if (ok(mid)) {\n      r = mid - 1;\n      cnt = mid;\n    } else\n      i = mid + 1;\n  }\n  if (cnt < k)\n    cout << \"impossible\";\n  else\n    cout << (k - cnt);\n  return 0;\n}\n"}
{"src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "id": 2, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1300, "testcases": "[{'input': '6\\r\\n+ 12001\\r\\n- 12001\\r\\n- 1\\r\\n- 1200\\r\\n+ 1\\r\\n+ 7\\r\\n', 'output': ['3']}, {'input': '2\\r\\n- 1\\r\\n- 2\\r\\n', 'output': ['2']}, {'input': '2\\r\\n+ 1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '5\\r\\n+ 1\\r\\n- 1\\r\\n+ 2\\r\\n+ 3\\r\\n- 4\\r\\n', 'output': ['3']}, {'input': '3\\r\\n- 1\\r\\n- 2\\r\\n- 3\\r\\n', 'output': ['3']}, {'input': '4\\r\\n+ 1\\r\\n+ 2\\r\\n- 1\\r\\n+ 3\\r\\n', 'output': ['2']}, {'input': '6\\r\\n+ 1\\r\\n+ 2\\r\\n- 1\\r\\n+ 3\\r\\n- 2\\r\\n+ 4\\r\\n', 'output': ['2']}, {'input': '3\\r\\n+ 1\\r\\n+ 2\\r\\n- 3\\r\\n', 'output': ['3']}, {'input': '3\\r\\n- 1\\r\\n+ 2\\r\\n- 2\\r\\n', 'output': ['1']}, {'input': '4\\r\\n- 1\\r\\n- 2\\r\\n+ 3\\r\\n+ 4\\r\\n', 'output': ['2']}, {'input': '1\\r\\n+ 1\\r\\n', 'output': ['1']}, {'input': '1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '3\\r\\n- 1\\r\\n+ 1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '10\\r\\n+ 1\\r\\n+ 2\\r\\n+ 3\\r\\n+ 4\\r\\n+ 5\\r\\n+ 6\\r\\n+ 7\\r\\n+ 8\\r\\n+ 9\\r\\n+ 10\\r\\n', 'output': ['10']}, {'input': '5\\r\\n+ 5\\r\\n+ 4\\r\\n- 4\\r\\n- 5\\r\\n+ 5\\r\\n', 'output': ['2']}, {'input': '50\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n', 'output': ['1']}, {'input': '10\\r\\n- 8\\r\\n- 4\\r\\n+ 8\\r\\n+ 10\\r\\n+ 6\\r\\n- 8\\r\\n+ 9\\r\\n- 2\\r\\n- 7\\r\\n+ 4\\r\\n', 'output': ['5']}, {'input': '20\\r\\n+ 3\\r\\n- 3\\r\\n- 2\\r\\n+ 2\\r\\n+ 3\\r\\n- 5\\r\\n- 1\\r\\n+ 1\\r\\n- 3\\r\\n+ 4\\r\\n- 1\\r\\n+ 1\\r\\n+ 3\\r\\n- 3\\r\\n+ 5\\r\\n- 2\\r\\n- 1\\r\\n+ 2\\r\\n+ 1\\r\\n- 5\\r\\n', 'output': ['4']}, {'input': '50\\r\\n+ 4\\r\\n+ 5\\r\\n+ 3\\r\\n+ 2\\r\\n- 2\\r\\n- 3\\r\\n- 4\\r\\n+ 3\\r\\n+ 2\\r\\n- 3\\r\\n+ 4\\r\\n- 2\\r\\n- 4\\r\\n+ 2\\r\\n+ 3\\r\\n- 3\\r\\n- 5\\r\\n- 1\\r\\n+ 4\\r\\n+ 5\\r\\n- 5\\r\\n+ 3\\r\\n- 4\\r\\n- 3\\r\\n- 2\\r\\n+ 4\\r\\n+ 3\\r\\n+ 2\\r\\n- 2\\r\\n- 4\\r\\n+ 5\\r\\n+ 1\\r\\n+ 4\\r\\n+ 2\\r\\n- 2\\r\\n+ 2\\r\\n- 3\\r\\n- 5\\r\\n- 4\\r\\n- 1\\r\\n+ 5\\r\\n- 2\\r\\n- 5\\r\\n+ 5\\r\\n+ 3\\r\\n- 3\\r\\n+ 1\\r\\n+ 3\\r\\n+ 2\\r\\n- 1\\r\\n', 'output': ['5']}, {'input': '10\\r\\n- 2\\r\\n+ 1\\r\\n- 1\\r\\n+ 2\\r\\n- 2\\r\\n+ 2\\r\\n+ 1\\r\\n- 1\\r\\n- 2\\r\\n+ 1\\r\\n', 'output': ['2']}, {'input': '50\\r\\n+ 1\\r\\n+ 2\\r\\n+ 3\\r\\n+ 4\\r\\n+ 5\\r\\n+ 6\\r\\n+ 7\\r\\n+ 8\\r\\n+ 9\\r\\n+ 10\\r\\n+ 11\\r\\n+ 12\\r\\n+ 13\\r\\n+ 14\\r\\n+ 15\\r\\n+ 16\\r\\n+ 17\\r\\n+ 18\\r\\n+ 19\\r\\n+ 20\\r\\n+ 21\\r\\n+ 22\\r\\n+ 23\\r\\n+ 24\\r\\n+ 25\\r\\n+ 26\\r\\n+ 27\\r\\n+ 28\\r\\n+ 29\\r\\n+ 30\\r\\n+ 31\\r\\n+ 32\\r\\n+ 33\\r\\n+ 34\\r\\n+ 35\\r\\n+ 36\\r\\n+ 37\\r\\n+ 38\\r\\n+ 39\\r\\n+ 40\\r\\n+ 41\\r\\n+ 42\\r\\n+ 43\\r\\n+ 44\\r\\n+ 45\\r\\n+ 46\\r\\n+ 47\\r\\n+ 48\\r\\n+ 49\\r\\n+ 50\\r\\n', 'output': ['50']}, {'input': '50\\r\\n- 1\\r\\n- 2\\r\\n- 3\\r\\n- 4\\r\\n- 5\\r\\n- 6\\r\\n- 7\\r\\n- 8\\r\\n- 9\\r\\n- 10\\r\\n- 11\\r\\n- 12\\r\\n- 13\\r\\n- 14\\r\\n- 15\\r\\n- 16\\r\\n- 17\\r\\n- 18\\r\\n- 19\\r\\n- 20\\r\\n- 21\\r\\n- 22\\r\\n- 23\\r\\n- 24\\r\\n- 25\\r\\n- 26\\r\\n- 27\\r\\n- 28\\r\\n- 29\\r\\n- 30\\r\\n- 31\\r\\n- 32\\r\\n- 33\\r\\n- 34\\r\\n- 35\\r\\n- 36\\r\\n- 37\\r\\n- 38\\r\\n- 39\\r\\n- 40\\r\\n- 41\\r\\n- 42\\r\\n- 43\\r\\n- 44\\r\\n- 45\\r\\n- 46\\r\\n- 47\\r\\n- 48\\r\\n- 49\\r\\n- 50\\r\\n', 'output': ['50']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nset<int> e;\nset<int> l;\nset<int>::iterator it, it1;\nint n;\nint c;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    char c;\n    int num;\n    scanf(\"%c\", &c);\n    scanf(\"%d\", &num);\n    if (c == '+')\n      e.insert(num);\n    else\n      l.insert(num);\n    c++;\n  }\n  int i = 1;\n  int k = 0;\n  while (true) {\n    it = l.find(i);\n    if (it == l.end()) {\n      c++;\n      k++;\n    } else {\n      it1 = e.find(i);\n      if (it1 == e.end()) {\n        c++;\n        k++;\n      }\n    }\n    if (e.size() + l.size() - k == c) break;\n    i++;\n  }\n  cout << c << endl;\n}\n"}
{"src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "id": 2, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1300, "testcases": "[{'input': '6\\r\\n+ 12001\\r\\n- 12001\\r\\n- 1\\r\\n- 1200\\r\\n+ 1\\r\\n+ 7\\r\\n', 'output': ['3']}, {'input': '2\\r\\n- 1\\r\\n- 2\\r\\n', 'output': ['2']}, {'input': '2\\r\\n+ 1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '5\\r\\n+ 1\\r\\n- 1\\r\\n+ 2\\r\\n+ 3\\r\\n- 4\\r\\n', 'output': ['3']}, {'input': '3\\r\\n- 1\\r\\n- 2\\r\\n- 3\\r\\n', 'output': ['3']}, {'input': '4\\r\\n+ 1\\r\\n+ 2\\r\\n- 1\\r\\n+ 3\\r\\n', 'output': ['2']}, {'input': '6\\r\\n+ 1\\r\\n+ 2\\r\\n- 1\\r\\n+ 3\\r\\n- 2\\r\\n+ 4\\r\\n', 'output': ['2']}, {'input': '3\\r\\n+ 1\\r\\n+ 2\\r\\n- 3\\r\\n', 'output': ['3']}, {'input': '3\\r\\n- 1\\r\\n+ 2\\r\\n- 2\\r\\n', 'output': ['1']}, {'input': '4\\r\\n- 1\\r\\n- 2\\r\\n+ 3\\r\\n+ 4\\r\\n', 'output': ['2']}, {'input': '1\\r\\n+ 1\\r\\n', 'output': ['1']}, {'input': '1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '3\\r\\n- 1\\r\\n+ 1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '10\\r\\n+ 1\\r\\n+ 2\\r\\n+ 3\\r\\n+ 4\\r\\n+ 5\\r\\n+ 6\\r\\n+ 7\\r\\n+ 8\\r\\n+ 9\\r\\n+ 10\\r\\n', 'output': ['10']}, {'input': '5\\r\\n+ 5\\r\\n+ 4\\r\\n- 4\\r\\n- 5\\r\\n+ 5\\r\\n', 'output': ['2']}, {'input': '50\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n', 'output': ['1']}, {'input': '10\\r\\n- 8\\r\\n- 4\\r\\n+ 8\\r\\n+ 10\\r\\n+ 6\\r\\n- 8\\r\\n+ 9\\r\\n- 2\\r\\n- 7\\r\\n+ 4\\r\\n', 'output': ['5']}, {'input': '20\\r\\n+ 3\\r\\n- 3\\r\\n- 2\\r\\n+ 2\\r\\n+ 3\\r\\n- 5\\r\\n- 1\\r\\n+ 1\\r\\n- 3\\r\\n+ 4\\r\\n- 1\\r\\n+ 1\\r\\n+ 3\\r\\n- 3\\r\\n+ 5\\r\\n- 2\\r\\n- 1\\r\\n+ 2\\r\\n+ 1\\r\\n- 5\\r\\n', 'output': ['4']}, {'input': '50\\r\\n+ 4\\r\\n+ 5\\r\\n+ 3\\r\\n+ 2\\r\\n- 2\\r\\n- 3\\r\\n- 4\\r\\n+ 3\\r\\n+ 2\\r\\n- 3\\r\\n+ 4\\r\\n- 2\\r\\n- 4\\r\\n+ 2\\r\\n+ 3\\r\\n- 3\\r\\n- 5\\r\\n- 1\\r\\n+ 4\\r\\n+ 5\\r\\n- 5\\r\\n+ 3\\r\\n- 4\\r\\n- 3\\r\\n- 2\\r\\n+ 4\\r\\n+ 3\\r\\n+ 2\\r\\n- 2\\r\\n- 4\\r\\n+ 5\\r\\n+ 1\\r\\n+ 4\\r\\n+ 2\\r\\n- 2\\r\\n+ 2\\r\\n- 3\\r\\n- 5\\r\\n- 4\\r\\n- 1\\r\\n+ 5\\r\\n- 2\\r\\n- 5\\r\\n+ 5\\r\\n+ 3\\r\\n- 3\\r\\n+ 1\\r\\n+ 3\\r\\n+ 2\\r\\n- 1\\r\\n', 'output': ['5']}, {'input': '10\\r\\n- 2\\r\\n+ 1\\r\\n- 1\\r\\n+ 2\\r\\n- 2\\r\\n+ 2\\r\\n+ 1\\r\\n- 1\\r\\n- 2\\r\\n+ 1\\r\\n', 'output': ['2']}, {'input': '50\\r\\n+ 1\\r\\n+ 2\\r\\n+ 3\\r\\n+ 4\\r\\n+ 5\\r\\n+ 6\\r\\n+ 7\\r\\n+ 8\\r\\n+ 9\\r\\n+ 10\\r\\n+ 11\\r\\n+ 12\\r\\n+ 13\\r\\n+ 14\\r\\n+ 15\\r\\n+ 16\\r\\n+ 17\\r\\n+ 18\\r\\n+ 19\\r\\n+ 20\\r\\n+ 21\\r\\n+ 22\\r\\n+ 23\\r\\n+ 24\\r\\n+ 25\\r\\n+ 26\\r\\n+ 27\\r\\n+ 28\\r\\n+ 29\\r\\n+ 30\\r\\n+ 31\\r\\n+ 32\\r\\n+ 33\\r\\n+ 34\\r\\n+ 35\\r\\n+ 36\\r\\n+ 37\\r\\n+ 38\\r\\n+ 39\\r\\n+ 40\\r\\n+ 41\\r\\n+ 42\\r\\n+ 43\\r\\n+ 44\\r\\n+ 45\\r\\n+ 46\\r\\n+ 47\\r\\n+ 48\\r\\n+ 49\\r\\n+ 50\\r\\n', 'output': ['50']}, {'input': '50\\r\\n- 1\\r\\n- 2\\r\\n- 3\\r\\n- 4\\r\\n- 5\\r\\n- 6\\r\\n- 7\\r\\n- 8\\r\\n- 9\\r\\n- 10\\r\\n- 11\\r\\n- 12\\r\\n- 13\\r\\n- 14\\r\\n- 15\\r\\n- 16\\r\\n- 17\\r\\n- 18\\r\\n- 19\\r\\n- 20\\r\\n- 21\\r\\n- 22\\r\\n- 23\\r\\n- 24\\r\\n- 25\\r\\n- 26\\r\\n- 27\\r\\n- 28\\r\\n- 29\\r\\n- 30\\r\\n- 31\\r\\n- 32\\r\\n- 33\\r\\n- 34\\r\\n- 35\\r\\n- 36\\r\\n- 37\\r\\n- 38\\r\\n- 39\\r\\n- 40\\r\\n- 41\\r\\n- 42\\r\\n- 43\\r\\n- 44\\r\\n- 45\\r\\n- 46\\r\\n- 47\\r\\n- 48\\r\\n- 49\\r\\n- 50\\r\\n', 'output': ['50']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nmap<long long, int> vis;\nint main() {\n  int n;\n  cin >> n;\n  int cnt = 0;\n  for (int i = 1; i <= n; i++) {\n    string s;\n    long long x;\n    cin >> s >> x;\n    if (s == \"+\") {\n      vis[x]++;\n      cnt = max(cnt, vis[x]);\n    } else {\n      vis[x]--;\n    }\n  }\n  cout << cnt << endl;\n  return 0;\n}\n"}
{"src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "id": 2, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1300, "testcases": "[{'input': '6\\r\\n+ 12001\\r\\n- 12001\\r\\n- 1\\r\\n- 1200\\r\\n+ 1\\r\\n+ 7\\r\\n', 'output': ['3']}, {'input': '2\\r\\n- 1\\r\\n- 2\\r\\n', 'output': ['2']}, {'input': '2\\r\\n+ 1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '5\\r\\n+ 1\\r\\n- 1\\r\\n+ 2\\r\\n+ 3\\r\\n- 4\\r\\n', 'output': ['3']}, {'input': '3\\r\\n- 1\\r\\n- 2\\r\\n- 3\\r\\n', 'output': ['3']}, {'input': '4\\r\\n+ 1\\r\\n+ 2\\r\\n- 1\\r\\n+ 3\\r\\n', 'output': ['2']}, {'input': '6\\r\\n+ 1\\r\\n+ 2\\r\\n- 1\\r\\n+ 3\\r\\n- 2\\r\\n+ 4\\r\\n', 'output': ['2']}, {'input': '3\\r\\n+ 1\\r\\n+ 2\\r\\n- 3\\r\\n', 'output': ['3']}, {'input': '3\\r\\n- 1\\r\\n+ 2\\r\\n- 2\\r\\n', 'output': ['1']}, {'input': '4\\r\\n- 1\\r\\n- 2\\r\\n+ 3\\r\\n+ 4\\r\\n', 'output': ['2']}, {'input': '1\\r\\n+ 1\\r\\n', 'output': ['1']}, {'input': '1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '3\\r\\n- 1\\r\\n+ 1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '10\\r\\n+ 1\\r\\n+ 2\\r\\n+ 3\\r\\n+ 4\\r\\n+ 5\\r\\n+ 6\\r\\n+ 7\\r\\n+ 8\\r\\n+ 9\\r\\n+ 10\\r\\n', 'output': ['10']}, {'input': '5\\r\\n+ 5\\r\\n+ 4\\r\\n- 4\\r\\n- 5\\r\\n+ 5\\r\\n', 'output': ['2']}, {'input': '50\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n', 'output': ['1']}, {'input': '10\\r\\n- 8\\r\\n- 4\\r\\n+ 8\\r\\n+ 10\\r\\n+ 6\\r\\n- 8\\r\\n+ 9\\r\\n- 2\\r\\n- 7\\r\\n+ 4\\r\\n', 'output': ['5']}, {'input': '20\\r\\n+ 3\\r\\n- 3\\r\\n- 2\\r\\n+ 2\\r\\n+ 3\\r\\n- 5\\r\\n- 1\\r\\n+ 1\\r\\n- 3\\r\\n+ 4\\r\\n- 1\\r\\n+ 1\\r\\n+ 3\\r\\n- 3\\r\\n+ 5\\r\\n- 2\\r\\n- 1\\r\\n+ 2\\r\\n+ 1\\r\\n- 5\\r\\n', 'output': ['4']}, {'input': '50\\r\\n+ 4\\r\\n+ 5\\r\\n+ 3\\r\\n+ 2\\r\\n- 2\\r\\n- 3\\r\\n- 4\\r\\n+ 3\\r\\n+ 2\\r\\n- 3\\r\\n+ 4\\r\\n- 2\\r\\n- 4\\r\\n+ 2\\r\\n+ 3\\r\\n- 3\\r\\n- 5\\r\\n- 1\\r\\n+ 4\\r\\n+ 5\\r\\n- 5\\r\\n+ 3\\r\\n- 4\\r\\n- 3\\r\\n- 2\\r\\n+ 4\\r\\n+ 3\\r\\n+ 2\\r\\n- 2\\r\\n- 4\\r\\n+ 5\\r\\n+ 1\\r\\n+ 4\\r\\n+ 2\\r\\n- 2\\r\\n+ 2\\r\\n- 3\\r\\n- 5\\r\\n- 4\\r\\n- 1\\r\\n+ 5\\r\\n- 2\\r\\n- 5\\r\\n+ 5\\r\\n+ 3\\r\\n- 3\\r\\n+ 1\\r\\n+ 3\\r\\n+ 2\\r\\n- 1\\r\\n', 'output': ['5']}, {'input': '10\\r\\n- 2\\r\\n+ 1\\r\\n- 1\\r\\n+ 2\\r\\n- 2\\r\\n+ 2\\r\\n+ 1\\r\\n- 1\\r\\n- 2\\r\\n+ 1\\r\\n', 'output': ['2']}, {'input': '50\\r\\n+ 1\\r\\n+ 2\\r\\n+ 3\\r\\n+ 4\\r\\n+ 5\\r\\n+ 6\\r\\n+ 7\\r\\n+ 8\\r\\n+ 9\\r\\n+ 10\\r\\n+ 11\\r\\n+ 12\\r\\n+ 13\\r\\n+ 14\\r\\n+ 15\\r\\n+ 16\\r\\n+ 17\\r\\n+ 18\\r\\n+ 19\\r\\n+ 20\\r\\n+ 21\\r\\n+ 22\\r\\n+ 23\\r\\n+ 24\\r\\n+ 25\\r\\n+ 26\\r\\n+ 27\\r\\n+ 28\\r\\n+ 29\\r\\n+ 30\\r\\n+ 31\\r\\n+ 32\\r\\n+ 33\\r\\n+ 34\\r\\n+ 35\\r\\n+ 36\\r\\n+ 37\\r\\n+ 38\\r\\n+ 39\\r\\n+ 40\\r\\n+ 41\\r\\n+ 42\\r\\n+ 43\\r\\n+ 44\\r\\n+ 45\\r\\n+ 46\\r\\n+ 47\\r\\n+ 48\\r\\n+ 49\\r\\n+ 50\\r\\n', 'output': ['50']}, {'input': '50\\r\\n- 1\\r\\n- 2\\r\\n- 3\\r\\n- 4\\r\\n- 5\\r\\n- 6\\r\\n- 7\\r\\n- 8\\r\\n- 9\\r\\n- 10\\r\\n- 11\\r\\n- 12\\r\\n- 13\\r\\n- 14\\r\\n- 15\\r\\n- 16\\r\\n- 17\\r\\n- 18\\r\\n- 19\\r\\n- 20\\r\\n- 21\\r\\n- 22\\r\\n- 23\\r\\n- 24\\r\\n- 25\\r\\n- 26\\r\\n- 27\\r\\n- 28\\r\\n- 29\\r\\n- 30\\r\\n- 31\\r\\n- 32\\r\\n- 33\\r\\n- 34\\r\\n- 35\\r\\n- 36\\r\\n- 37\\r\\n- 38\\r\\n- 39\\r\\n- 40\\r\\n- 41\\r\\n- 42\\r\\n- 43\\r\\n- 44\\r\\n- 45\\r\\n- 46\\r\\n- 47\\r\\n- 48\\r\\n- 49\\r\\n- 50\\r\\n', 'output': ['50']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  vector<int> v;\n  map<int, int> a;\n  int n;\n  cin >> n;\n  string s;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    if (s[0] == '+') {\n      v.push_back(stoi(s.substr(1)));\n      a[stoi(s.substr(1))]++;\n    } else {\n      a[stoi(s.substr(1))]--;\n      for (int i = 0; i < v.size(); i++) {\n        if (a[v[i]] == 0) {\n          v.erase(v.begin() + i);\n          break;\n        }\n      }\n    }\n  }\n  cout << v.size() << endl;\n}\n"}
{"src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "id": 2, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1300, "testcases": "[{'input': '6\\r\\n+ 12001\\r\\n- 12001\\r\\n- 1\\r\\n- 1200\\r\\n+ 1\\r\\n+ 7\\r\\n', 'output': ['3']}, {'input': '2\\r\\n- 1\\r\\n- 2\\r\\n', 'output': ['2']}, {'input': '2\\r\\n+ 1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '5\\r\\n+ 1\\r\\n- 1\\r\\n+ 2\\r\\n+ 3\\r\\n- 4\\r\\n', 'output': ['3']}, {'input': '3\\r\\n- 1\\r\\n- 2\\r\\n- 3\\r\\n', 'output': ['3']}, {'input': '4\\r\\n+ 1\\r\\n+ 2\\r\\n- 1\\r\\n+ 3\\r\\n', 'output': ['2']}, {'input': '6\\r\\n+ 1\\r\\n+ 2\\r\\n- 1\\r\\n+ 3\\r\\n- 2\\r\\n+ 4\\r\\n', 'output': ['2']}, {'input': '3\\r\\n+ 1\\r\\n+ 2\\r\\n- 3\\r\\n', 'output': ['3']}, {'input': '3\\r\\n- 1\\r\\n+ 2\\r\\n- 2\\r\\n', 'output': ['1']}, {'input': '4\\r\\n- 1\\r\\n- 2\\r\\n+ 3\\r\\n+ 4\\r\\n', 'output': ['2']}, {'input': '1\\r\\n+ 1\\r\\n', 'output': ['1']}, {'input': '1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '3\\r\\n- 1\\r\\n+ 1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '10\\r\\n+ 1\\r\\n+ 2\\r\\n+ 3\\r\\n+ 4\\r\\n+ 5\\r\\n+ 6\\r\\n+ 7\\r\\n+ 8\\r\\n+ 9\\r\\n+ 10\\r\\n', 'output': ['10']}, {'input': '5\\r\\n+ 5\\r\\n+ 4\\r\\n- 4\\r\\n- 5\\r\\n+ 5\\r\\n', 'output': ['2']}, {'input': '50\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n', 'output': ['1']}, {'input': '10\\r\\n- 8\\r\\n- 4\\r\\n+ 8\\r\\n+ 10\\r\\n+ 6\\r\\n- 8\\r\\n+ 9\\r\\n- 2\\r\\n- 7\\r\\n+ 4\\r\\n', 'output': ['5']}, {'input': '20\\r\\n+ 3\\r\\n- 3\\r\\n- 2\\r\\n+ 2\\r\\n+ 3\\r\\n- 5\\r\\n- 1\\r\\n+ 1\\r\\n- 3\\r\\n+ 4\\r\\n- 1\\r\\n+ 1\\r\\n+ 3\\r\\n- 3\\r\\n+ 5\\r\\n- 2\\r\\n- 1\\r\\n+ 2\\r\\n+ 1\\r\\n- 5\\r\\n', 'output': ['4']}, {'input': '50\\r\\n+ 4\\r\\n+ 5\\r\\n+ 3\\r\\n+ 2\\r\\n- 2\\r\\n- 3\\r\\n- 4\\r\\n+ 3\\r\\n+ 2\\r\\n- 3\\r\\n+ 4\\r\\n- 2\\r\\n- 4\\r\\n+ 2\\r\\n+ 3\\r\\n- 3\\r\\n- 5\\r\\n- 1\\r\\n+ 4\\r\\n+ 5\\r\\n- 5\\r\\n+ 3\\r\\n- 4\\r\\n- 3\\r\\n- 2\\r\\n+ 4\\r\\n+ 3\\r\\n+ 2\\r\\n- 2\\r\\n- 4\\r\\n+ 5\\r\\n+ 1\\r\\n+ 4\\r\\n+ 2\\r\\n- 2\\r\\n+ 2\\r\\n- 3\\r\\n- 5\\r\\n- 4\\r\\n- 1\\r\\n+ 5\\r\\n- 2\\r\\n- 5\\r\\n+ 5\\r\\n+ 3\\r\\n- 3\\r\\n+ 1\\r\\n+ 3\\r\\n+ 2\\r\\n- 1\\r\\n', 'output': ['5']}, {'input': '10\\r\\n- 2\\r\\n+ 1\\r\\n- 1\\r\\n+ 2\\r\\n- 2\\r\\n+ 2\\r\\n+ 1\\r\\n- 1\\r\\n- 2\\r\\n+ 1\\r\\n', 'output': ['2']}, {'input': '50\\r\\n+ 1\\r\\n+ 2\\r\\n+ 3\\r\\n+ 4\\r\\n+ 5\\r\\n+ 6\\r\\n+ 7\\r\\n+ 8\\r\\n+ 9\\r\\n+ 10\\r\\n+ 11\\r\\n+ 12\\r\\n+ 13\\r\\n+ 14\\r\\n+ 15\\r\\n+ 16\\r\\n+ 17\\r\\n+ 18\\r\\n+ 19\\r\\n+ 20\\r\\n+ 21\\r\\n+ 22\\r\\n+ 23\\r\\n+ 24\\r\\n+ 25\\r\\n+ 26\\r\\n+ 27\\r\\n+ 28\\r\\n+ 29\\r\\n+ 30\\r\\n+ 31\\r\\n+ 32\\r\\n+ 33\\r\\n+ 34\\r\\n+ 35\\r\\n+ 36\\r\\n+ 37\\r\\n+ 38\\r\\n+ 39\\r\\n+ 40\\r\\n+ 41\\r\\n+ 42\\r\\n+ 43\\r\\n+ 44\\r\\n+ 45\\r\\n+ 46\\r\\n+ 47\\r\\n+ 48\\r\\n+ 49\\r\\n+ 50\\r\\n', 'output': ['50']}, {'input': '50\\r\\n- 1\\r\\n- 2\\r\\n- 3\\r\\n- 4\\r\\n- 5\\r\\n- 6\\r\\n- 7\\r\\n- 8\\r\\n- 9\\r\\n- 10\\r\\n- 11\\r\\n- 12\\r\\n- 13\\r\\n- 14\\r\\n- 15\\r\\n- 16\\r\\n- 17\\r\\n- 18\\r\\n- 19\\r\\n- 20\\r\\n- 21\\r\\n- 22\\r\\n- 23\\r\\n- 24\\r\\n- 25\\r\\n- 26\\r\\n- 27\\r\\n- 28\\r\\n- 29\\r\\n- 30\\r\\n- 31\\r\\n- 32\\r\\n- 33\\r\\n- 34\\r\\n- 35\\r\\n- 36\\r\\n- 37\\r\\n- 38\\r\\n- 39\\r\\n- 40\\r\\n- 41\\r\\n- 42\\r\\n- 43\\r\\n- 44\\r\\n- 45\\r\\n- 46\\r\\n- 47\\r\\n- 48\\r\\n- 49\\r\\n- 50\\r\\n', 'output': ['50']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, t, cnt[1000100], ans, mx;\nmap<int, int> mp;\nint main() {\n  scanf(\"%d\", &n);\n  while (n--) {\n    scanf(\" %c%d\", &t, &cnt[1]);\n    if (t == '+')\n      mp[cnt[1]]++;\n    else\n      mp[cnt[1]]--;\n    int tmp = 0;\n    for (int i = 1; i < 1000100; i++) tmp += (cnt[i]!= 0);\n    if (tmp > mx) mx = tmp;\n  }\n  for (auto p : mp) {\n    ans += p.second;\n    if (p.second > 0) mx += 2 * p.second;\n  }\n  printf(\"%d\", mx - ans);\n}\n"}
{"src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "id": 2, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1300, "testcases": "[{'input': '6\\r\\n+ 12001\\r\\n- 12001\\r\\n- 1\\r\\n- 1200\\r\\n+ 1\\r\\n+ 7\\r\\n', 'output': ['3']}, {'input': '2\\r\\n- 1\\r\\n- 2\\r\\n', 'output': ['2']}, {'input': '2\\r\\n+ 1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '5\\r\\n+ 1\\r\\n- 1\\r\\n+ 2\\r\\n+ 3\\r\\n- 4\\r\\n', 'output': ['3']}, {'input': '3\\r\\n- 1\\r\\n- 2\\r\\n- 3\\r\\n', 'output': ['3']}, {'input': '4\\r\\n+ 1\\r\\n+ 2\\r\\n- 1\\r\\n+ 3\\r\\n', 'output': ['2']}, {'input': '6\\r\\n+ 1\\r\\n+ 2\\r\\n- 1\\r\\n+ 3\\r\\n- 2\\r\\n+ 4\\r\\n', 'output': ['2']}, {'input': '3\\r\\n+ 1\\r\\n+ 2\\r\\n- 3\\r\\n', 'output': ['3']}, {'input': '3\\r\\n- 1\\r\\n+ 2\\r\\n- 2\\r\\n', 'output': ['1']}, {'input': '4\\r\\n- 1\\r\\n- 2\\r\\n+ 3\\r\\n+ 4\\r\\n', 'output': ['2']}, {'input': '1\\r\\n+ 1\\r\\n', 'output': ['1']}, {'input': '1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '3\\r\\n- 1\\r\\n+ 1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '10\\r\\n+ 1\\r\\n+ 2\\r\\n+ 3\\r\\n+ 4\\r\\n+ 5\\r\\n+ 6\\r\\n+ 7\\r\\n+ 8\\r\\n+ 9\\r\\n+ 10\\r\\n', 'output': ['10']}, {'input': '5\\r\\n+ 5\\r\\n+ 4\\r\\n- 4\\r\\n- 5\\r\\n+ 5\\r\\n', 'output': ['2']}, {'input': '50\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n', 'output': ['1']}, {'input': '10\\r\\n- 8\\r\\n- 4\\r\\n+ 8\\r\\n+ 10\\r\\n+ 6\\r\\n- 8\\r\\n+ 9\\r\\n- 2\\r\\n- 7\\r\\n+ 4\\r\\n', 'output': ['5']}, {'input': '20\\r\\n+ 3\\r\\n- 3\\r\\n- 2\\r\\n+ 2\\r\\n+ 3\\r\\n- 5\\r\\n- 1\\r\\n+ 1\\r\\n- 3\\r\\n+ 4\\r\\n- 1\\r\\n+ 1\\r\\n+ 3\\r\\n- 3\\r\\n+ 5\\r\\n- 2\\r\\n- 1\\r\\n+ 2\\r\\n+ 1\\r\\n- 5\\r\\n', 'output': ['4']}, {'input': '50\\r\\n+ 4\\r\\n+ 5\\r\\n+ 3\\r\\n+ 2\\r\\n- 2\\r\\n- 3\\r\\n- 4\\r\\n+ 3\\r\\n+ 2\\r\\n- 3\\r\\n+ 4\\r\\n- 2\\r\\n- 4\\r\\n+ 2\\r\\n+ 3\\r\\n- 3\\r\\n- 5\\r\\n- 1\\r\\n+ 4\\r\\n+ 5\\r\\n- 5\\r\\n+ 3\\r\\n- 4\\r\\n- 3\\r\\n- 2\\r\\n+ 4\\r\\n+ 3\\r\\n+ 2\\r\\n- 2\\r\\n- 4\\r\\n+ 5\\r\\n+ 1\\r\\n+ 4\\r\\n+ 2\\r\\n- 2\\r\\n+ 2\\r\\n- 3\\r\\n- 5\\r\\n- 4\\r\\n- 1\\r\\n+ 5\\r\\n- 2\\r\\n- 5\\r\\n+ 5\\r\\n+ 3\\r\\n- 3\\r\\n+ 1\\r\\n+ 3\\r\\n+ 2\\r\\n- 1\\r\\n', 'output': ['5']}, {'input': '10\\r\\n- 2\\r\\n+ 1\\r\\n- 1\\r\\n+ 2\\r\\n- 2\\r\\n+ 2\\r\\n+ 1\\r\\n- 1\\r\\n- 2\\r\\n+ 1\\r\\n', 'output': ['2']}, {'input': '50\\r\\n+ 1\\r\\n+ 2\\r\\n+ 3\\r\\n+ 4\\r\\n+ 5\\r\\n+ 6\\r\\n+ 7\\r\\n+ 8\\r\\n+ 9\\r\\n+ 10\\r\\n+ 11\\r\\n+ 12\\r\\n+ 13\\r\\n+ 14\\r\\n+ 15\\r\\n+ 16\\r\\n+ 17\\r\\n+ 18\\r\\n+ 19\\r\\n+ 20\\r\\n+ 21\\r\\n+ 22\\r\\n+ 23\\r\\n+ 24\\r\\n+ 25\\r\\n+ 26\\r\\n+ 27\\r\\n+ 28\\r\\n+ 29\\r\\n+ 30\\r\\n+ 31\\r\\n+ 32\\r\\n+ 33\\r\\n+ 34\\r\\n+ 35\\r\\n+ 36\\r\\n+ 37\\r\\n+ 38\\r\\n+ 39\\r\\n+ 40\\r\\n+ 41\\r\\n+ 42\\r\\n+ 43\\r\\n+ 44\\r\\n+ 45\\r\\n+ 46\\r\\n+ 47\\r\\n+ 48\\r\\n+ 49\\r\\n+ 50\\r\\n', 'output': ['50']}, {'input': '50\\r\\n- 1\\r\\n- 2\\r\\n- 3\\r\\n- 4\\r\\n- 5\\r\\n- 6\\r\\n- 7\\r\\n- 8\\r\\n- 9\\r\\n- 10\\r\\n- 11\\r\\n- 12\\r\\n- 13\\r\\n- 14\\r\\n- 15\\r\\n- 16\\r\\n- 17\\r\\n- 18\\r\\n- 19\\r\\n- 20\\r\\n- 21\\r\\n- 22\\r\\n- 23\\r\\n- 24\\r\\n- 25\\r\\n- 26\\r\\n- 27\\r\\n- 28\\r\\n- 29\\r\\n- 30\\r\\n- 31\\r\\n- 32\\r\\n- 33\\r\\n- 34\\r\\n- 35\\r\\n- 36\\r\\n- 37\\r\\n- 38\\r\\n- 39\\r\\n- 40\\r\\n- 41\\r\\n- 42\\r\\n- 43\\r\\n- 44\\r\\n- 45\\r\\n- 46\\r\\n- 47\\r\\n- 48\\r\\n- 49\\r\\n- 50\\r\\n', 'output': ['50']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int ans = 0;\n  string str;\n  vector<int> V;\n  vector<pair<int, int>> A;\n  int cnt = 0;\n  while (cin >> str) {\n    int x = 0;\n    for (int i = 2; i < str.size(); i++) {\n      x *= 10;\n      x += str[i] - '0';\n    }\n    if (str[0] == '-')\n      ans = max(ans, ++cnt - A.size() - 1);\n    else {\n      A.push_back({x, cnt});\n    }\n  }\n  cout << ans + A.size() << endl;\n  return 0;\n}\n"}
{"src_uid": "a6e9405bc3d4847fe962446bc1c457b4", "id": 3, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '0 0\\r\\n4 5\\r\\n', 'output': ['5']}, {'input': '3 4\\r\\n6 1\\r\\n', 'output': ['3']}, {'input': '0 0\\r\\n4 6\\r\\n', 'output': ['6']}, {'input': '1 1\\r\\n-3 -5\\r\\n', 'output': ['6']}, {'input': '-1 -1\\r\\n-10 100\\r\\n', 'output': ['101']}, {'input': '1 -1\\r\\n100 -100\\r\\n', 'output': ['99']}, {'input': '-1000000000 -1000000000\\r\\n1000000000 1000000000\\r\\n', 'output': ['2000000000']}, {'input': '-1000000000 -1000000000\\r\\n0 999999999\\r\\n', 'output': ['1999999999']}, {'input': '0 0\\r\\n2 1\\r\\n', 'output': ['2']}, {'input': '10 0\\r\\n100 0\\r\\n', 'output': ['90']}, {'input': '1 5\\r\\n6 4\\r\\n', 'output': ['5']}, {'input': '0 0\\r\\n5 4\\r\\n', 'output': ['5']}, {'input': '10 1\\r\\n20 1\\r\\n', 'output': ['10']}, {'input': '1 1\\r\\n-3 4\\r\\n', 'output': ['4']}, {'input': '-863407280 504312726\\r\\n786535210 -661703810\\r\\n', 'output': ['1649942490']}, {'input': '-588306085 -741137832\\r\\n341385643 152943311\\r\\n', 'output': ['929691728']}, {'input': '0 0\\r\\n4 0\\r\\n', 'output': ['4']}, {'input': '93097194 -48405232\\r\\n-716984003 -428596062\\r\\n', 'output': ['810081197']}, {'input': '9 1\\r\\n1 1\\r\\n', 'output': ['8']}, {'input': '4 6\\r\\n0 4\\r\\n', 'output': ['4']}, {'input': '2 4\\r\\n5 2\\r\\n', 'output': ['3']}, {'input': '-100000000 -100000000\\r\\n100000000 100000123\\r\\n', 'output': ['200000123']}, {'input': '5 6\\r\\n5 7\\r\\n', 'output': ['1']}, {'input': '12 16\\r\\n12 1\\r\\n', 'output': ['15']}, {'input': '0 0\\r\\n5 1\\r\\n', 'output': ['5']}, {'input': '0 1\\r\\n1 1\\r\\n', 'output': ['1']}, {'input': '-44602634 913365223\\r\\n-572368780 933284951\\r\\n', 'output': ['527766146']}, {'input': '-2 0\\r\\n2 -2\\r\\n', 'output': ['4']}, {'input': '0 0\\r\\n3 1\\r\\n', 'output': ['3']}, {'input': '-458 2\\r\\n1255 4548\\r\\n', 'output': ['4546']}, {'input': '-5 -4\\r\\n-3 -3\\r\\n', 'output': ['2']}, {'input': '4 5\\r\\n7 3\\r\\n', 'output': ['3']}, {'input': '-1000000000 -999999999\\r\\n1000000000 999999998\\r\\n', 'output': ['2000000000']}, {'input': '-1000000000 -1000000000\\r\\n1000000000 -1000000000\\r\\n', 'output': ['2000000000']}, {'input': '-464122675 -898521847\\r\\n656107323 -625340409\\r\\n', 'output': ['1120229998']}, {'input': '-463154699 -654742385\\r\\n-699179052 -789004997\\r\\n', 'output': ['236024353']}, {'input': '982747270 -593488945\\r\\n342286841 -593604186\\r\\n', 'output': ['640460429']}, {'input': '-80625246 708958515\\r\\n468950878 574646184\\r\\n', 'output': ['549576124']}, {'input': '0 0\\r\\n1 0\\r\\n', 'output': ['1']}, {'input': '109810 1\\r\\n2 3\\r\\n', 'output': ['109808']}, {'input': '-9 0\\r\\n9 9\\r\\n', 'output': ['18']}, {'input': '9 9\\r\\n9 9\\r\\n', 'output': ['0']}, {'input': '1 1\\r\\n4 3\\r\\n', 'output': ['3']}, {'input': '1 2\\r\\n45 1\\r\\n', 'output': ['44']}, {'input': '207558188 -313753260\\r\\n-211535387 -721675423\\r\\n', 'output': ['419093575']}, {'input': '-11 0\\r\\n0 0\\r\\n', 'output': ['11']}, {'input': '-1000000000 1000000000\\r\\n1000000000 -1000000000\\r\\n', 'output': ['2000000000']}, {'input': '0 0\\r\\n1 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n0 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 0\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 -1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n0 -1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n1 -1\\r\\n', 'output': ['1']}, {'input': '10 90\\r\\n90 10\\r\\n', 'output': ['80']}, {'input': '851016864 573579544\\r\\n-761410925 -380746263\\r\\n', 'output': ['1612427789']}, {'input': '1 9\\r\\n9 9\\r\\n', 'output': ['8']}, {'input': '1000 1000\\r\\n1000 1000\\r\\n', 'output': ['0']}, {'input': '1 9\\r\\n9 1\\r\\n', 'output': ['8']}, {'input': '1 90\\r\\n90 90\\r\\n', 'output': ['89']}, {'input': '100 100\\r\\n1000 1000\\r\\n', 'output': ['900']}, {'input': '-1 0\\r\\n0 0\\r\\n', 'output': ['1']}, {'input': '-750595959 -2984043\\r\\n649569876 -749608783\\r\\n', 'output': ['1400165835']}, {'input': '958048496 712083589\\r\\n423286949 810566863\\r\\n', 'output': ['534761547']}, {'input': '146316710 53945094\\r\\n-523054748 147499505\\r\\n', 'output': ['669371458']}, {'input': '50383856 -596516251\\r\\n-802950224 -557916272\\r\\n', 'output': ['853334080']}, {'input': '-637204864 -280290367\\r\\n-119020929 153679771\\r\\n', 'output': ['518183935']}, {'input': '-100 -100\\r\\n-60 -91\\r\\n', 'output': ['40']}, {'input': '337537326 74909428\\r\\n-765558776 167951547\\r\\n', 'output': ['1103096102']}, {'input': '0 81\\r\\n18 90\\r\\n', 'output': ['18']}, {'input': '283722202 -902633305\\r\\n-831696497 -160868946\\r\\n', 'output': ['1115418699']}, {'input': '1000 1000\\r\\n-1000 1000\\r\\n', 'output': ['2000']}, {'input': '5 6\\r\\n4 8\\r\\n', 'output': ['2']}, {'input': '40572000 597493595\\r\\n-935051731 368493185\\r\\n', 'output': ['975623731']}, {'input': '-5 5\\r\\n5 5\\r\\n', 'output': ['10']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  long long int a, b, c, d;\n  cin >> a >> b >> c >> d;\n  cout << max(abs(a - c), abs(b - d));\n}\n"}
{"src_uid": "a6e9405bc3d4847fe962446bc1c457b4", "id": 3, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '0 0\\r\\n4 5\\r\\n', 'output': ['5']}, {'input': '3 4\\r\\n6 1\\r\\n', 'output': ['3']}, {'input': '0 0\\r\\n4 6\\r\\n', 'output': ['6']}, {'input': '1 1\\r\\n-3 -5\\r\\n', 'output': ['6']}, {'input': '-1 -1\\r\\n-10 100\\r\\n', 'output': ['101']}, {'input': '1 -1\\r\\n100 -100\\r\\n', 'output': ['99']}, {'input': '-1000000000 -1000000000\\r\\n1000000000 1000000000\\r\\n', 'output': ['2000000000']}, {'input': '-1000000000 -1000000000\\r\\n0 999999999\\r\\n', 'output': ['1999999999']}, {'input': '0 0\\r\\n2 1\\r\\n', 'output': ['2']}, {'input': '10 0\\r\\n100 0\\r\\n', 'output': ['90']}, {'input': '1 5\\r\\n6 4\\r\\n', 'output': ['5']}, {'input': '0 0\\r\\n5 4\\r\\n', 'output': ['5']}, {'input': '10 1\\r\\n20 1\\r\\n', 'output': ['10']}, {'input': '1 1\\r\\n-3 4\\r\\n', 'output': ['4']}, {'input': '-863407280 504312726\\r\\n786535210 -661703810\\r\\n', 'output': ['1649942490']}, {'input': '-588306085 -741137832\\r\\n341385643 152943311\\r\\n', 'output': ['929691728']}, {'input': '0 0\\r\\n4 0\\r\\n', 'output': ['4']}, {'input': '93097194 -48405232\\r\\n-716984003 -428596062\\r\\n', 'output': ['810081197']}, {'input': '9 1\\r\\n1 1\\r\\n', 'output': ['8']}, {'input': '4 6\\r\\n0 4\\r\\n', 'output': ['4']}, {'input': '2 4\\r\\n5 2\\r\\n', 'output': ['3']}, {'input': '-100000000 -100000000\\r\\n100000000 100000123\\r\\n', 'output': ['200000123']}, {'input': '5 6\\r\\n5 7\\r\\n', 'output': ['1']}, {'input': '12 16\\r\\n12 1\\r\\n', 'output': ['15']}, {'input': '0 0\\r\\n5 1\\r\\n', 'output': ['5']}, {'input': '0 1\\r\\n1 1\\r\\n', 'output': ['1']}, {'input': '-44602634 913365223\\r\\n-572368780 933284951\\r\\n', 'output': ['527766146']}, {'input': '-2 0\\r\\n2 -2\\r\\n', 'output': ['4']}, {'input': '0 0\\r\\n3 1\\r\\n', 'output': ['3']}, {'input': '-458 2\\r\\n1255 4548\\r\\n', 'output': ['4546']}, {'input': '-5 -4\\r\\n-3 -3\\r\\n', 'output': ['2']}, {'input': '4 5\\r\\n7 3\\r\\n', 'output': ['3']}, {'input': '-1000000000 -999999999\\r\\n1000000000 999999998\\r\\n', 'output': ['2000000000']}, {'input': '-1000000000 -1000000000\\r\\n1000000000 -1000000000\\r\\n', 'output': ['2000000000']}, {'input': '-464122675 -898521847\\r\\n656107323 -625340409\\r\\n', 'output': ['1120229998']}, {'input': '-463154699 -654742385\\r\\n-699179052 -789004997\\r\\n', 'output': ['236024353']}, {'input': '982747270 -593488945\\r\\n342286841 -593604186\\r\\n', 'output': ['640460429']}, {'input': '-80625246 708958515\\r\\n468950878 574646184\\r\\n', 'output': ['549576124']}, {'input': '0 0\\r\\n1 0\\r\\n', 'output': ['1']}, {'input': '109810 1\\r\\n2 3\\r\\n', 'output': ['109808']}, {'input': '-9 0\\r\\n9 9\\r\\n', 'output': ['18']}, {'input': '9 9\\r\\n9 9\\r\\n', 'output': ['0']}, {'input': '1 1\\r\\n4 3\\r\\n', 'output': ['3']}, {'input': '1 2\\r\\n45 1\\r\\n', 'output': ['44']}, {'input': '207558188 -313753260\\r\\n-211535387 -721675423\\r\\n', 'output': ['419093575']}, {'input': '-11 0\\r\\n0 0\\r\\n', 'output': ['11']}, {'input': '-1000000000 1000000000\\r\\n1000000000 -1000000000\\r\\n', 'output': ['2000000000']}, {'input': '0 0\\r\\n1 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n0 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 0\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 -1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n0 -1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n1 -1\\r\\n', 'output': ['1']}, {'input': '10 90\\r\\n90 10\\r\\n', 'output': ['80']}, {'input': '851016864 573579544\\r\\n-761410925 -380746263\\r\\n', 'output': ['1612427789']}, {'input': '1 9\\r\\n9 9\\r\\n', 'output': ['8']}, {'input': '1000 1000\\r\\n1000 1000\\r\\n', 'output': ['0']}, {'input': '1 9\\r\\n9 1\\r\\n', 'output': ['8']}, {'input': '1 90\\r\\n90 90\\r\\n', 'output': ['89']}, {'input': '100 100\\r\\n1000 1000\\r\\n', 'output': ['900']}, {'input': '-1 0\\r\\n0 0\\r\\n', 'output': ['1']}, {'input': '-750595959 -2984043\\r\\n649569876 -749608783\\r\\n', 'output': ['1400165835']}, {'input': '958048496 712083589\\r\\n423286949 810566863\\r\\n', 'output': ['534761547']}, {'input': '146316710 53945094\\r\\n-523054748 147499505\\r\\n', 'output': ['669371458']}, {'input': '50383856 -596516251\\r\\n-802950224 -557916272\\r\\n', 'output': ['853334080']}, {'input': '-637204864 -280290367\\r\\n-119020929 153679771\\r\\n', 'output': ['518183935']}, {'input': '-100 -100\\r\\n-60 -91\\r\\n', 'output': ['40']}, {'input': '337537326 74909428\\r\\n-765558776 167951547\\r\\n', 'output': ['1103096102']}, {'input': '0 81\\r\\n18 90\\r\\n', 'output': ['18']}, {'input': '283722202 -902633305\\r\\n-831696497 -160868946\\r\\n', 'output': ['1115418699']}, {'input': '1000 1000\\r\\n-1000 1000\\r\\n', 'output': ['2000']}, {'input': '5 6\\r\\n4 8\\r\\n', 'output': ['2']}, {'input': '40572000 597493595\\r\\n-935051731 368493185\\r\\n', 'output': ['975623731']}, {'input': '-5 5\\r\\n5 5\\r\\n', 'output': ['10']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int a, b;\n  cin >> a >> b;\n  int x, y;\n  cin >> x >> y;\n  int ans = abs(a - x) + abs(b - y);\n  cout << ans << \"\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  solve();\n  return 0;\n}\n"}
{"src_uid": "a6e9405bc3d4847fe962446bc1c457b4", "id": 3, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '0 0\\r\\n4 5\\r\\n', 'output': ['5']}, {'input': '3 4\\r\\n6 1\\r\\n', 'output': ['3']}, {'input': '0 0\\r\\n4 6\\r\\n', 'output': ['6']}, {'input': '1 1\\r\\n-3 -5\\r\\n', 'output': ['6']}, {'input': '-1 -1\\r\\n-10 100\\r\\n', 'output': ['101']}, {'input': '1 -1\\r\\n100 -100\\r\\n', 'output': ['99']}, {'input': '-1000000000 -1000000000\\r\\n1000000000 1000000000\\r\\n', 'output': ['2000000000']}, {'input': '-1000000000 -1000000000\\r\\n0 999999999\\r\\n', 'output': ['1999999999']}, {'input': '0 0\\r\\n2 1\\r\\n', 'output': ['2']}, {'input': '10 0\\r\\n100 0\\r\\n', 'output': ['90']}, {'input': '1 5\\r\\n6 4\\r\\n', 'output': ['5']}, {'input': '0 0\\r\\n5 4\\r\\n', 'output': ['5']}, {'input': '10 1\\r\\n20 1\\r\\n', 'output': ['10']}, {'input': '1 1\\r\\n-3 4\\r\\n', 'output': ['4']}, {'input': '-863407280 504312726\\r\\n786535210 -661703810\\r\\n', 'output': ['1649942490']}, {'input': '-588306085 -741137832\\r\\n341385643 152943311\\r\\n', 'output': ['929691728']}, {'input': '0 0\\r\\n4 0\\r\\n', 'output': ['4']}, {'input': '93097194 -48405232\\r\\n-716984003 -428596062\\r\\n', 'output': ['810081197']}, {'input': '9 1\\r\\n1 1\\r\\n', 'output': ['8']}, {'input': '4 6\\r\\n0 4\\r\\n', 'output': ['4']}, {'input': '2 4\\r\\n5 2\\r\\n', 'output': ['3']}, {'input': '-100000000 -100000000\\r\\n100000000 100000123\\r\\n', 'output': ['200000123']}, {'input': '5 6\\r\\n5 7\\r\\n', 'output': ['1']}, {'input': '12 16\\r\\n12 1\\r\\n', 'output': ['15']}, {'input': '0 0\\r\\n5 1\\r\\n', 'output': ['5']}, {'input': '0 1\\r\\n1 1\\r\\n', 'output': ['1']}, {'input': '-44602634 913365223\\r\\n-572368780 933284951\\r\\n', 'output': ['527766146']}, {'input': '-2 0\\r\\n2 -2\\r\\n', 'output': ['4']}, {'input': '0 0\\r\\n3 1\\r\\n', 'output': ['3']}, {'input': '-458 2\\r\\n1255 4548\\r\\n', 'output': ['4546']}, {'input': '-5 -4\\r\\n-3 -3\\r\\n', 'output': ['2']}, {'input': '4 5\\r\\n7 3\\r\\n', 'output': ['3']}, {'input': '-1000000000 -999999999\\r\\n1000000000 999999998\\r\\n', 'output': ['2000000000']}, {'input': '-1000000000 -1000000000\\r\\n1000000000 -1000000000\\r\\n', 'output': ['2000000000']}, {'input': '-464122675 -898521847\\r\\n656107323 -625340409\\r\\n', 'output': ['1120229998']}, {'input': '-463154699 -654742385\\r\\n-699179052 -789004997\\r\\n', 'output': ['236024353']}, {'input': '982747270 -593488945\\r\\n342286841 -593604186\\r\\n', 'output': ['640460429']}, {'input': '-80625246 708958515\\r\\n468950878 574646184\\r\\n', 'output': ['549576124']}, {'input': '0 0\\r\\n1 0\\r\\n', 'output': ['1']}, {'input': '109810 1\\r\\n2 3\\r\\n', 'output': ['109808']}, {'input': '-9 0\\r\\n9 9\\r\\n', 'output': ['18']}, {'input': '9 9\\r\\n9 9\\r\\n', 'output': ['0']}, {'input': '1 1\\r\\n4 3\\r\\n', 'output': ['3']}, {'input': '1 2\\r\\n45 1\\r\\n', 'output': ['44']}, {'input': '207558188 -313753260\\r\\n-211535387 -721675423\\r\\n', 'output': ['419093575']}, {'input': '-11 0\\r\\n0 0\\r\\n', 'output': ['11']}, {'input': '-1000000000 1000000000\\r\\n1000000000 -1000000000\\r\\n', 'output': ['2000000000']}, {'input': '0 0\\r\\n1 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n0 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 0\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 -1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n0 -1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n1 -1\\r\\n', 'output': ['1']}, {'input': '10 90\\r\\n90 10\\r\\n', 'output': ['80']}, {'input': '851016864 573579544\\r\\n-761410925 -380746263\\r\\n', 'output': ['1612427789']}, {'input': '1 9\\r\\n9 9\\r\\n', 'output': ['8']}, {'input': '1000 1000\\r\\n1000 1000\\r\\n', 'output': ['0']}, {'input': '1 9\\r\\n9 1\\r\\n', 'output': ['8']}, {'input': '1 90\\r\\n90 90\\r\\n', 'output': ['89']}, {'input': '100 100\\r\\n1000 1000\\r\\n', 'output': ['900']}, {'input': '-1 0\\r\\n0 0\\r\\n', 'output': ['1']}, {'input': '-750595959 -2984043\\r\\n649569876 -749608783\\r\\n', 'output': ['1400165835']}, {'input': '958048496 712083589\\r\\n423286949 810566863\\r\\n', 'output': ['534761547']}, {'input': '146316710 53945094\\r\\n-523054748 147499505\\r\\n', 'output': ['669371458']}, {'input': '50383856 -596516251\\r\\n-802950224 -557916272\\r\\n', 'output': ['853334080']}, {'input': '-637204864 -280290367\\r\\n-119020929 153679771\\r\\n', 'output': ['518183935']}, {'input': '-100 -100\\r\\n-60 -91\\r\\n', 'output': ['40']}, {'input': '337537326 74909428\\r\\n-765558776 167951547\\r\\n', 'output': ['1103096102']}, {'input': '0 81\\r\\n18 90\\r\\n', 'output': ['18']}, {'input': '283722202 -902633305\\r\\n-831696497 -160868946\\r\\n', 'output': ['1115418699']}, {'input': '1000 1000\\r\\n-1000 1000\\r\\n', 'output': ['2000']}, {'input': '5 6\\r\\n4 8\\r\\n', 'output': ['2']}, {'input': '40572000 597493595\\r\\n-935051731 368493185\\r\\n', 'output': ['975623731']}, {'input': '-5 5\\r\\n5 5\\r\\n', 'output': ['10']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int x1, y1, x2, y2;\n  cin >> x1 >> y1 >> x2 >> y2;\n  cout << abs(x1 - x2) + abs(y1 - y2) << endl;\n  return 0;\n}\n"}
{"src_uid": "a6e9405bc3d4847fe962446bc1c457b4", "id": 3, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '0 0\\r\\n4 5\\r\\n', 'output': ['5']}, {'input': '3 4\\r\\n6 1\\r\\n', 'output': ['3']}, {'input': '0 0\\r\\n4 6\\r\\n', 'output': ['6']}, {'input': '1 1\\r\\n-3 -5\\r\\n', 'output': ['6']}, {'input': '-1 -1\\r\\n-10 100\\r\\n', 'output': ['101']}, {'input': '1 -1\\r\\n100 -100\\r\\n', 'output': ['99']}, {'input': '-1000000000 -1000000000\\r\\n1000000000 1000000000\\r\\n', 'output': ['2000000000']}, {'input': '-1000000000 -1000000000\\r\\n0 999999999\\r\\n', 'output': ['1999999999']}, {'input': '0 0\\r\\n2 1\\r\\n', 'output': ['2']}, {'input': '10 0\\r\\n100 0\\r\\n', 'output': ['90']}, {'input': '1 5\\r\\n6 4\\r\\n', 'output': ['5']}, {'input': '0 0\\r\\n5 4\\r\\n', 'output': ['5']}, {'input': '10 1\\r\\n20 1\\r\\n', 'output': ['10']}, {'input': '1 1\\r\\n-3 4\\r\\n', 'output': ['4']}, {'input': '-863407280 504312726\\r\\n786535210 -661703810\\r\\n', 'output': ['1649942490']}, {'input': '-588306085 -741137832\\r\\n341385643 152943311\\r\\n', 'output': ['929691728']}, {'input': '0 0\\r\\n4 0\\r\\n', 'output': ['4']}, {'input': '93097194 -48405232\\r\\n-716984003 -428596062\\r\\n', 'output': ['810081197']}, {'input': '9 1\\r\\n1 1\\r\\n', 'output': ['8']}, {'input': '4 6\\r\\n0 4\\r\\n', 'output': ['4']}, {'input': '2 4\\r\\n5 2\\r\\n', 'output': ['3']}, {'input': '-100000000 -100000000\\r\\n100000000 100000123\\r\\n', 'output': ['200000123']}, {'input': '5 6\\r\\n5 7\\r\\n', 'output': ['1']}, {'input': '12 16\\r\\n12 1\\r\\n', 'output': ['15']}, {'input': '0 0\\r\\n5 1\\r\\n', 'output': ['5']}, {'input': '0 1\\r\\n1 1\\r\\n', 'output': ['1']}, {'input': '-44602634 913365223\\r\\n-572368780 933284951\\r\\n', 'output': ['527766146']}, {'input': '-2 0\\r\\n2 -2\\r\\n', 'output': ['4']}, {'input': '0 0\\r\\n3 1\\r\\n', 'output': ['3']}, {'input': '-458 2\\r\\n1255 4548\\r\\n', 'output': ['4546']}, {'input': '-5 -4\\r\\n-3 -3\\r\\n', 'output': ['2']}, {'input': '4 5\\r\\n7 3\\r\\n', 'output': ['3']}, {'input': '-1000000000 -999999999\\r\\n1000000000 999999998\\r\\n', 'output': ['2000000000']}, {'input': '-1000000000 -1000000000\\r\\n1000000000 -1000000000\\r\\n', 'output': ['2000000000']}, {'input': '-464122675 -898521847\\r\\n656107323 -625340409\\r\\n', 'output': ['1120229998']}, {'input': '-463154699 -654742385\\r\\n-699179052 -789004997\\r\\n', 'output': ['236024353']}, {'input': '982747270 -593488945\\r\\n342286841 -593604186\\r\\n', 'output': ['640460429']}, {'input': '-80625246 708958515\\r\\n468950878 574646184\\r\\n', 'output': ['549576124']}, {'input': '0 0\\r\\n1 0\\r\\n', 'output': ['1']}, {'input': '109810 1\\r\\n2 3\\r\\n', 'output': ['109808']}, {'input': '-9 0\\r\\n9 9\\r\\n', 'output': ['18']}, {'input': '9 9\\r\\n9 9\\r\\n', 'output': ['0']}, {'input': '1 1\\r\\n4 3\\r\\n', 'output': ['3']}, {'input': '1 2\\r\\n45 1\\r\\n', 'output': ['44']}, {'input': '207558188 -313753260\\r\\n-211535387 -721675423\\r\\n', 'output': ['419093575']}, {'input': '-11 0\\r\\n0 0\\r\\n', 'output': ['11']}, {'input': '-1000000000 1000000000\\r\\n1000000000 -1000000000\\r\\n', 'output': ['2000000000']}, {'input': '0 0\\r\\n1 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n0 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 0\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 -1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n0 -1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n1 -1\\r\\n', 'output': ['1']}, {'input': '10 90\\r\\n90 10\\r\\n', 'output': ['80']}, {'input': '851016864 573579544\\r\\n-761410925 -380746263\\r\\n', 'output': ['1612427789']}, {'input': '1 9\\r\\n9 9\\r\\n', 'output': ['8']}, {'input': '1000 1000\\r\\n1000 1000\\r\\n', 'output': ['0']}, {'input': '1 9\\r\\n9 1\\r\\n', 'output': ['8']}, {'input': '1 90\\r\\n90 90\\r\\n', 'output': ['89']}, {'input': '100 100\\r\\n1000 1000\\r\\n', 'output': ['900']}, {'input': '-1 0\\r\\n0 0\\r\\n', 'output': ['1']}, {'input': '-750595959 -2984043\\r\\n649569876 -749608783\\r\\n', 'output': ['1400165835']}, {'input': '958048496 712083589\\r\\n423286949 810566863\\r\\n', 'output': ['534761547']}, {'input': '146316710 53945094\\r\\n-523054748 147499505\\r\\n', 'output': ['669371458']}, {'input': '50383856 -596516251\\r\\n-802950224 -557916272\\r\\n', 'output': ['853334080']}, {'input': '-637204864 -280290367\\r\\n-119020929 153679771\\r\\n', 'output': ['518183935']}, {'input': '-100 -100\\r\\n-60 -91\\r\\n', 'output': ['40']}, {'input': '337537326 74909428\\r\\n-765558776 167951547\\r\\n', 'output': ['1103096102']}, {'input': '0 81\\r\\n18 90\\r\\n', 'output': ['18']}, {'input': '283722202 -902633305\\r\\n-831696497 -160868946\\r\\n', 'output': ['1115418699']}, {'input': '1000 1000\\r\\n-1000 1000\\r\\n', 'output': ['2000']}, {'input': '5 6\\r\\n4 8\\r\\n', 'output': ['2']}, {'input': '40572000 597493595\\r\\n-935051731 368493185\\r\\n', 'output': ['975623731']}, {'input': '-5 5\\r\\n5 5\\r\\n', 'output': ['10']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long x1, y1, x2, y2;\n  cin >> x1 >> y1;\n  cin >> x2 >> y2;\n  long long a1 = abs(x2 - x1);\n  long long a2 = abs(y2 - y1);\n  cout << a1 + a2;\n}\n"}
{"src_uid": "a6e9405bc3d4847fe962446bc1c457b4", "id": 3, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '0 0\\r\\n4 5\\r\\n', 'output': ['5']}, {'input': '3 4\\r\\n6 1\\r\\n', 'output': ['3']}, {'input': '0 0\\r\\n4 6\\r\\n', 'output': ['6']}, {'input': '1 1\\r\\n-3 -5\\r\\n', 'output': ['6']}, {'input': '-1 -1\\r\\n-10 100\\r\\n', 'output': ['101']}, {'input': '1 -1\\r\\n100 -100\\r\\n', 'output': ['99']}, {'input': '-1000000000 -1000000000\\r\\n1000000000 1000000000\\r\\n', 'output': ['2000000000']}, {'input': '-1000000000 -1000000000\\r\\n0 999999999\\r\\n', 'output': ['1999999999']}, {'input': '0 0\\r\\n2 1\\r\\n', 'output': ['2']}, {'input': '10 0\\r\\n100 0\\r\\n', 'output': ['90']}, {'input': '1 5\\r\\n6 4\\r\\n', 'output': ['5']}, {'input': '0 0\\r\\n5 4\\r\\n', 'output': ['5']}, {'input': '10 1\\r\\n20 1\\r\\n', 'output': ['10']}, {'input': '1 1\\r\\n-3 4\\r\\n', 'output': ['4']}, {'input': '-863407280 504312726\\r\\n786535210 -661703810\\r\\n', 'output': ['1649942490']}, {'input': '-588306085 -741137832\\r\\n341385643 152943311\\r\\n', 'output': ['929691728']}, {'input': '0 0\\r\\n4 0\\r\\n', 'output': ['4']}, {'input': '93097194 -48405232\\r\\n-716984003 -428596062\\r\\n', 'output': ['810081197']}, {'input': '9 1\\r\\n1 1\\r\\n', 'output': ['8']}, {'input': '4 6\\r\\n0 4\\r\\n', 'output': ['4']}, {'input': '2 4\\r\\n5 2\\r\\n', 'output': ['3']}, {'input': '-100000000 -100000000\\r\\n100000000 100000123\\r\\n', 'output': ['200000123']}, {'input': '5 6\\r\\n5 7\\r\\n', 'output': ['1']}, {'input': '12 16\\r\\n12 1\\r\\n', 'output': ['15']}, {'input': '0 0\\r\\n5 1\\r\\n', 'output': ['5']}, {'input': '0 1\\r\\n1 1\\r\\n', 'output': ['1']}, {'input': '-44602634 913365223\\r\\n-572368780 933284951\\r\\n', 'output': ['527766146']}, {'input': '-2 0\\r\\n2 -2\\r\\n', 'output': ['4']}, {'input': '0 0\\r\\n3 1\\r\\n', 'output': ['3']}, {'input': '-458 2\\r\\n1255 4548\\r\\n', 'output': ['4546']}, {'input': '-5 -4\\r\\n-3 -3\\r\\n', 'output': ['2']}, {'input': '4 5\\r\\n7 3\\r\\n', 'output': ['3']}, {'input': '-1000000000 -999999999\\r\\n1000000000 999999998\\r\\n', 'output': ['2000000000']}, {'input': '-1000000000 -1000000000\\r\\n1000000000 -1000000000\\r\\n', 'output': ['2000000000']}, {'input': '-464122675 -898521847\\r\\n656107323 -625340409\\r\\n', 'output': ['1120229998']}, {'input': '-463154699 -654742385\\r\\n-699179052 -789004997\\r\\n', 'output': ['236024353']}, {'input': '982747270 -593488945\\r\\n342286841 -593604186\\r\\n', 'output': ['640460429']}, {'input': '-80625246 708958515\\r\\n468950878 574646184\\r\\n', 'output': ['549576124']}, {'input': '0 0\\r\\n1 0\\r\\n', 'output': ['1']}, {'input': '109810 1\\r\\n2 3\\r\\n', 'output': ['109808']}, {'input': '-9 0\\r\\n9 9\\r\\n', 'output': ['18']}, {'input': '9 9\\r\\n9 9\\r\\n', 'output': ['0']}, {'input': '1 1\\r\\n4 3\\r\\n', 'output': ['3']}, {'input': '1 2\\r\\n45 1\\r\\n', 'output': ['44']}, {'input': '207558188 -313753260\\r\\n-211535387 -721675423\\r\\n', 'output': ['419093575']}, {'input': '-11 0\\r\\n0 0\\r\\n', 'output': ['11']}, {'input': '-1000000000 1000000000\\r\\n1000000000 -1000000000\\r\\n', 'output': ['2000000000']}, {'input': '0 0\\r\\n1 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n0 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 0\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 -1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n0 -1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n1 -1\\r\\n', 'output': ['1']}, {'input': '10 90\\r\\n90 10\\r\\n', 'output': ['80']}, {'input': '851016864 573579544\\r\\n-761410925 -380746263\\r\\n', 'output': ['1612427789']}, {'input': '1 9\\r\\n9 9\\r\\n', 'output': ['8']}, {'input': '1000 1000\\r\\n1000 1000\\r\\n', 'output': ['0']}, {'input': '1 9\\r\\n9 1\\r\\n', 'output': ['8']}, {'input': '1 90\\r\\n90 90\\r\\n', 'output': ['89']}, {'input': '100 100\\r\\n1000 1000\\r\\n', 'output': ['900']}, {'input': '-1 0\\r\\n0 0\\r\\n', 'output': ['1']}, {'input': '-750595959 -2984043\\r\\n649569876 -749608783\\r\\n', 'output': ['1400165835']}, {'input': '958048496 712083589\\r\\n423286949 810566863\\r\\n', 'output': ['534761547']}, {'input': '146316710 53945094\\r\\n-523054748 147499505\\r\\n', 'output': ['669371458']}, {'input': '50383856 -596516251\\r\\n-802950224 -557916272\\r\\n', 'output': ['853334080']}, {'input': '-637204864 -280290367\\r\\n-119020929 153679771\\r\\n', 'output': ['518183935']}, {'input': '-100 -100\\r\\n-60 -91\\r\\n', 'output': ['40']}, {'input': '337537326 74909428\\r\\n-765558776 167951547\\r\\n', 'output': ['1103096102']}, {'input': '0 81\\r\\n18 90\\r\\n', 'output': ['18']}, {'input': '283722202 -902633305\\r\\n-831696497 -160868946\\r\\n', 'output': ['1115418699']}, {'input': '1000 1000\\r\\n-1000 1000\\r\\n', 'output': ['2000']}, {'input': '5 6\\r\\n4 8\\r\\n', 'output': ['2']}, {'input': '40572000 597493595\\r\\n-935051731 368493185\\r\\n', 'output': ['975623731']}, {'input': '-5 5\\r\\n5 5\\r\\n', 'output': ['10']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint dx[] = {1, 1, 1, -1, 0, 0, -1, -1};\nint dy[] = {0, -1, 1, 0, 1, -1, -1, 1};\nint main() {\n  long long int x1, x2, y1, y2;\n  cin >> x1 >> y1 >> x2 >> y2;\n  long long int xx, yy;\n  xx = abs(x1 - x2);\n  yy = abs(y1 - y2);\n  long long int ans;\n  if (xx >= yy) {\n    ans = xx;\n  } else {\n    ans = yy;\n  }\n  cout << ans;\n}\n"}
{"src_uid": "6e0dafeaf85e92f959c388c72e158f68", "id": 4, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '3 2 2\\r\\n', 'output': ['1 2 \\r\\n0 3 \\r\\n']}, {'input': '8 4 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 0 \\r\\n0 0 0 \\r\\n']}, {'input': '10 2 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1\\r\\n', 'output': ['1 \\r\\n']}, {'input': '8 3 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 0 \\r\\n']}, {'input': '1 1 100\\r\\n', 'output': ['1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\r\\n']}, {'input': '1 100 1\\r\\n', 'output': ['1 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n']}, {'input': '12 4 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 9 \\r\\n10 11 12 \\r\\n']}, {'input': '64 8 9\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 \\r\\n10 11 12 13 14 15 16 17 18 \\r\\n19 20 21 22 23 24 25 26 27 \\r\\n28 29 30 31 32 33 34 35 36 \\r\\n37 38 39 40 41 42 43 44 45 \\r\\n46 47 48 49 50 51 52 53 54 \\r\\n55 56 57 58 59 60 61 62 63 \\r\\n64 0 0 0 0 0 0 0 0 \\r\\n']}, {'input': '13 2 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '41 6 7\\r\\n', 'output': ['1 2 3 4 5 6 7 \\r\\n8 9 10 11 12 13 14 \\r\\n15 16 17 18 19 20 21 \\r\\n22 23 24 25 26 27 28 \\r\\n29 30 31 32 33 34 35 \\r\\n36 37 38 39 40 41 0 \\r\\n']}, {'input': '10000 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '26 1 33\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 0 0 0 0 0 0 0 \\r\\n']}, {'input': '3 1 6\\r\\n', 'output': ['1 2 3 0 0 0 \\r\\n']}, {'input': '109 37 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 9 \\r\\n10 11 12 \\r\\n13 14 15 \\r\\n16 17 18 \\r\\n19 20 21 \\r\\n22 23 24 \\r\\n25 26 27 \\r\\n28 29 30 \\r\\n31 32 33 \\r\\n34 35 36 \\r\\n37 38 39 \\r\\n40 41 42 \\r\\n43 44 45 \\r\\n46 47 48 \\r\\n49 50 51 \\r\\n52 53 54 \\r\\n55 56 57 \\r\\n58 59 60 \\r\\n61 62 63 \\r\\n64 65 66 \\r\\n67 68 69 \\r\\n70 71 72 \\r\\n73 74 75 \\r\\n76 77 78 \\r\\n79 80 81 \\r\\n82 83 84 \\r\\n85 86 87 \\r\\n88 89 90 \\r\\n91 92 93 \\r\\n94 95 96 \\r\\n97 98 99 \\r\\n100 101 102 \\r\\n103 104 105 \\r\\n106 107 108 \\r\\n109 0 0 \\r\\n']}, {'input': '15 2 8\\r\\n', 'output': ['1 2 3 4 5 6 7 8 \\r\\n10 9 12 11 14 13 0 15 \\r\\n']}, {'input': '29 3 11\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 \\r\\n12 13 14 15 16 17 18 19 20 21 22 \\r\\n23 24 25 26 27 28 29 0 0 0 0 \\r\\n']}, {'input': '16 18 1\\r\\n', 'output': ['1 \\r\\n2 \\r\\n3 \\r\\n4 \\r\\n5 \\r\\n6 \\r\\n7 \\r\\n8 \\r\\n9 \\r\\n10 \\r\\n11 \\r\\n12 \\r\\n13 \\r\\n14 \\r\\n15 \\r\\n16 \\r\\n0 \\r\\n0 \\r\\n']}, {'input': '46 3 16\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \\r\\n18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 \\r\\n33 34 35 36 37 38 39 40 41 42 43 44 45 46 0 0 \\r\\n']}, {'input': '4206 86 12\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2358 14 56\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5420 35 96\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7758 63 41\\r\\n', 'output': ['-1\\r\\n']}, {'input': '9806 87 93\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99 1 97\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1053 25 42\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4217 49 86\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2312 77 30\\r\\n', 'output': ['-1\\r\\n']}, {'input': '74 1 71\\r\\n', 'output': ['-1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false);\n  int n, a, b;\n  cin >> n >> a >> b;\n  if (n > a * b) {\n    cout << -1 << endl;\n    return 0;\n  }\n  int x, y;\n  x = (n + a - 1) / a;\n  y = n - (x - 1) * a;\n  if (y == 0) {\n    y = a;\n    x--;\n  }\n  vector<vector<int> > ans(a, vector<int>(b));\n  for (int i = 0; i < a; i++) {\n    for (int j = 0; j < b; j++) {\n      int u = a * y;\n      u += (i + j + 1) * (a - y);\n      if (u > n) continue;\n      ans[i][j] = u;\n    }\n  }\n  if (n < a * b) {\n    for (int i = 0; i < x; i++) {\n      for (int j = 0; j < b; j++) {\n        ans[i][j] = 0;\n      }\n    }\n  }\n  for (int i = 0; i < a; i++) {\n    for (int j = 0; j < b; j++) {\n      cout << ans[i][j] << \" \";\n    }\n    cout << endl;\n  }\n}\n"}
{"src_uid": "6e0dafeaf85e92f959c388c72e158f68", "id": 4, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '3 2 2\\r\\n', 'output': ['1 2 \\r\\n0 3 \\r\\n']}, {'input': '8 4 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 0 \\r\\n0 0 0 \\r\\n']}, {'input': '10 2 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1\\r\\n', 'output': ['1 \\r\\n']}, {'input': '8 3 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 0 \\r\\n']}, {'input': '1 1 100\\r\\n', 'output': ['1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\r\\n']}, {'input': '1 100 1\\r\\n', 'output': ['1 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n']}, {'input': '12 4 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 9 \\r\\n10 11 12 \\r\\n']}, {'input': '64 8 9\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 \\r\\n10 11 12 13 14 15 16 17 18 \\r\\n19 20 21 22 23 24 25 26 27 \\r\\n28 29 30 31 32 33 34 35 36 \\r\\n37 38 39 40 41 42 43 44 45 \\r\\n46 47 48 49 50 51 52 53 54 \\r\\n55 56 57 58 59 60 61 62 63 \\r\\n64 0 0 0 0 0 0 0 0 \\r\\n']}, {'input': '13 2 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '41 6 7\\r\\n', 'output': ['1 2 3 4 5 6 7 \\r\\n8 9 10 11 12 13 14 \\r\\n15 16 17 18 19 20 21 \\r\\n22 23 24 25 26 27 28 \\r\\n29 30 31 32 33 34 35 \\r\\n36 37 38 39 40 41 0 \\r\\n']}, {'input': '10000 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '26 1 33\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 0 0 0 0 0 0 0 \\r\\n']}, {'input': '3 1 6\\r\\n', 'output': ['1 2 3 0 0 0 \\r\\n']}, {'input': '109 37 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 9 \\r\\n10 11 12 \\r\\n13 14 15 \\r\\n16 17 18 \\r\\n19 20 21 \\r\\n22 23 24 \\r\\n25 26 27 \\r\\n28 29 30 \\r\\n31 32 33 \\r\\n34 35 36 \\r\\n37 38 39 \\r\\n40 41 42 \\r\\n43 44 45 \\r\\n46 47 48 \\r\\n49 50 51 \\r\\n52 53 54 \\r\\n55 56 57 \\r\\n58 59 60 \\r\\n61 62 63 \\r\\n64 65 66 \\r\\n67 68 69 \\r\\n70 71 72 \\r\\n73 74 75 \\r\\n76 77 78 \\r\\n79 80 81 \\r\\n82 83 84 \\r\\n85 86 87 \\r\\n88 89 90 \\r\\n91 92 93 \\r\\n94 95 96 \\r\\n97 98 99 \\r\\n100 101 102 \\r\\n103 104 105 \\r\\n106 107 108 \\r\\n109 0 0 \\r\\n']}, {'input': '15 2 8\\r\\n', 'output': ['1 2 3 4 5 6 7 8 \\r\\n10 9 12 11 14 13 0 15 \\r\\n']}, {'input': '29 3 11\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 \\r\\n12 13 14 15 16 17 18 19 20 21 22 \\r\\n23 24 25 26 27 28 29 0 0 0 0 \\r\\n']}, {'input': '16 18 1\\r\\n', 'output': ['1 \\r\\n2 \\r\\n3 \\r\\n4 \\r\\n5 \\r\\n6 \\r\\n7 \\r\\n8 \\r\\n9 \\r\\n10 \\r\\n11 \\r\\n12 \\r\\n13 \\r\\n14 \\r\\n15 \\r\\n16 \\r\\n0 \\r\\n0 \\r\\n']}, {'input': '46 3 16\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \\r\\n18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 \\r\\n33 34 35 36 37 38 39 40 41 42 43 44 45 46 0 0 \\r\\n']}, {'input': '4206 86 12\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2358 14 56\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5420 35 96\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7758 63 41\\r\\n', 'output': ['-1\\r\\n']}, {'input': '9806 87 93\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99 1 97\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1053 25 42\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4217 49 86\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2312 77 30\\r\\n', 'output': ['-1\\r\\n']}, {'input': '74 1 71\\r\\n', 'output': ['-1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n, a, b;\n  cin >> n >> a >> b;\n  if (n > a * b) return cout << -1 << endl, 0;\n  for (int i = 0; i < a; i++)\n    for (int j = 0; j < b; j++) cout << (i & 1? n - j - 1 : j) << \" \";\n  return cout << endl, 0;\n}\n"}
{"src_uid": "6e0dafeaf85e92f959c388c72e158f68", "id": 4, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '3 2 2\\r\\n', 'output': ['1 2 \\r\\n0 3 \\r\\n']}, {'input': '8 4 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 0 \\r\\n0 0 0 \\r\\n']}, {'input': '10 2 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1\\r\\n', 'output': ['1 \\r\\n']}, {'input': '8 3 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 0 \\r\\n']}, {'input': '1 1 100\\r\\n', 'output': ['1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\r\\n']}, {'input': '1 100 1\\r\\n', 'output': ['1 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n']}, {'input': '12 4 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 9 \\r\\n10 11 12 \\r\\n']}, {'input': '64 8 9\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 \\r\\n10 11 12 13 14 15 16 17 18 \\r\\n19 20 21 22 23 24 25 26 27 \\r\\n28 29 30 31 32 33 34 35 36 \\r\\n37 38 39 40 41 42 43 44 45 \\r\\n46 47 48 49 50 51 52 53 54 \\r\\n55 56 57 58 59 60 61 62 63 \\r\\n64 0 0 0 0 0 0 0 0 \\r\\n']}, {'input': '13 2 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '41 6 7\\r\\n', 'output': ['1 2 3 4 5 6 7 \\r\\n8 9 10 11 12 13 14 \\r\\n15 16 17 18 19 20 21 \\r\\n22 23 24 25 26 27 28 \\r\\n29 30 31 32 33 34 35 \\r\\n36 37 38 39 40 41 0 \\r\\n']}, {'input': '10000 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '26 1 33\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 0 0 0 0 0 0 0 \\r\\n']}, {'input': '3 1 6\\r\\n', 'output': ['1 2 3 0 0 0 \\r\\n']}, {'input': '109 37 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 9 \\r\\n10 11 12 \\r\\n13 14 15 \\r\\n16 17 18 \\r\\n19 20 21 \\r\\n22 23 24 \\r\\n25 26 27 \\r\\n28 29 30 \\r\\n31 32 33 \\r\\n34 35 36 \\r\\n37 38 39 \\r\\n40 41 42 \\r\\n43 44 45 \\r\\n46 47 48 \\r\\n49 50 51 \\r\\n52 53 54 \\r\\n55 56 57 \\r\\n58 59 60 \\r\\n61 62 63 \\r\\n64 65 66 \\r\\n67 68 69 \\r\\n70 71 72 \\r\\n73 74 75 \\r\\n76 77 78 \\r\\n79 80 81 \\r\\n82 83 84 \\r\\n85 86 87 \\r\\n88 89 90 \\r\\n91 92 93 \\r\\n94 95 96 \\r\\n97 98 99 \\r\\n100 101 102 \\r\\n103 104 105 \\r\\n106 107 108 \\r\\n109 0 0 \\r\\n']}, {'input': '15 2 8\\r\\n', 'output': ['1 2 3 4 5 6 7 8 \\r\\n10 9 12 11 14 13 0 15 \\r\\n']}, {'input': '29 3 11\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 \\r\\n12 13 14 15 16 17 18 19 20 21 22 \\r\\n23 24 25 26 27 28 29 0 0 0 0 \\r\\n']}, {'input': '16 18 1\\r\\n', 'output': ['1 \\r\\n2 \\r\\n3 \\r\\n4 \\r\\n5 \\r\\n6 \\r\\n7 \\r\\n8 \\r\\n9 \\r\\n10 \\r\\n11 \\r\\n12 \\r\\n13 \\r\\n14 \\r\\n15 \\r\\n16 \\r\\n0 \\r\\n0 \\r\\n']}, {'input': '46 3 16\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \\r\\n18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 \\r\\n33 34 35 36 37 38 39 40 41 42 43 44 45 46 0 0 \\r\\n']}, {'input': '4206 86 12\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2358 14 56\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5420 35 96\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7758 63 41\\r\\n', 'output': ['-1\\r\\n']}, {'input': '9806 87 93\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99 1 97\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1053 25 42\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4217 49 86\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2312 77 30\\r\\n', 'output': ['-1\\r\\n']}, {'input': '74 1 71\\r\\n', 'output': ['-1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a, b;\nint s[200][200];\nint main() {\n  cin >> n >> a >> b;\n  if (n > a * b) {\n    puts(\"-1\");\n    return 0;\n  }\n  int k = 0;\n  int c = 0;\n  int t = n;\n  while (n > 0) {\n    if (k % 2 == 0) {\n      for (int i = 0; i < b && n > 0; i++, c++) {\n        if (i < a) {\n          s[0][c] = t;\n          t--;\n          n--;\n        } else {\n          s[a][c] = 0;\n        }\n      }\n    } else {\n      for (int i = 0; i < b && n > 0; i++, c++) {\n        if (i >= a) {\n          s[0][c] = 0;\n        } else {\n          s[a][c] = t;\n          t--;\n          n--;\n        }\n      }\n    }\n    k++;\n  }\n  for (int i = 0; i < a; i++) {\n    for (int j = 0; j < b; j++) {\n      printf(\"%d \", s[i][j]);\n    }\n    printf(\"\\n\");\n  }\n}\n"}
{"src_uid": "6e0dafeaf85e92f959c388c72e158f68", "id": 4, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '3 2 2\\r\\n', 'output': ['1 2 \\r\\n0 3 \\r\\n']}, {'input': '8 4 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 0 \\r\\n0 0 0 \\r\\n']}, {'input': '10 2 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1\\r\\n', 'output': ['1 \\r\\n']}, {'input': '8 3 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 0 \\r\\n']}, {'input': '1 1 100\\r\\n', 'output': ['1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\r\\n']}, {'input': '1 100 1\\r\\n', 'output': ['1 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n']}, {'input': '12 4 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 9 \\r\\n10 11 12 \\r\\n']}, {'input': '64 8 9\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 \\r\\n10 11 12 13 14 15 16 17 18 \\r\\n19 20 21 22 23 24 25 26 27 \\r\\n28 29 30 31 32 33 34 35 36 \\r\\n37 38 39 40 41 42 43 44 45 \\r\\n46 47 48 49 50 51 52 53 54 \\r\\n55 56 57 58 59 60 61 62 63 \\r\\n64 0 0 0 0 0 0 0 0 \\r\\n']}, {'input': '13 2 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '41 6 7\\r\\n', 'output': ['1 2 3 4 5 6 7 \\r\\n8 9 10 11 12 13 14 \\r\\n15 16 17 18 19 20 21 \\r\\n22 23 24 25 26 27 28 \\r\\n29 30 31 32 33 34 35 \\r\\n36 37 38 39 40 41 0 \\r\\n']}, {'input': '10000 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '26 1 33\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 0 0 0 0 0 0 0 \\r\\n']}, {'input': '3 1 6\\r\\n', 'output': ['1 2 3 0 0 0 \\r\\n']}, {'input': '109 37 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 9 \\r\\n10 11 12 \\r\\n13 14 15 \\r\\n16 17 18 \\r\\n19 20 21 \\r\\n22 23 24 \\r\\n25 26 27 \\r\\n28 29 30 \\r\\n31 32 33 \\r\\n34 35 36 \\r\\n37 38 39 \\r\\n40 41 42 \\r\\n43 44 45 \\r\\n46 47 48 \\r\\n49 50 51 \\r\\n52 53 54 \\r\\n55 56 57 \\r\\n58 59 60 \\r\\n61 62 63 \\r\\n64 65 66 \\r\\n67 68 69 \\r\\n70 71 72 \\r\\n73 74 75 \\r\\n76 77 78 \\r\\n79 80 81 \\r\\n82 83 84 \\r\\n85 86 87 \\r\\n88 89 90 \\r\\n91 92 93 \\r\\n94 95 96 \\r\\n97 98 99 \\r\\n100 101 102 \\r\\n103 104 105 \\r\\n106 107 108 \\r\\n109 0 0 \\r\\n']}, {'input': '15 2 8\\r\\n', 'output': ['1 2 3 4 5 6 7 8 \\r\\n10 9 12 11 14 13 0 15 \\r\\n']}, {'input': '29 3 11\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 \\r\\n12 13 14 15 16 17 18 19 20 21 22 \\r\\n23 24 25 26 27 28 29 0 0 0 0 \\r\\n']}, {'input': '16 18 1\\r\\n', 'output': ['1 \\r\\n2 \\r\\n3 \\r\\n4 \\r\\n5 \\r\\n6 \\r\\n7 \\r\\n8 \\r\\n9 \\r\\n10 \\r\\n11 \\r\\n12 \\r\\n13 \\r\\n14 \\r\\n15 \\r\\n16 \\r\\n0 \\r\\n0 \\r\\n']}, {'input': '46 3 16\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \\r\\n18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 \\r\\n33 34 35 36 37 38 39 40 41 42 43 44 45 46 0 0 \\r\\n']}, {'input': '4206 86 12\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2358 14 56\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5420 35 96\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7758 63 41\\r\\n', 'output': ['-1\\r\\n']}, {'input': '9806 87 93\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99 1 97\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1053 25 42\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4217 49 86\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2312 77 30\\r\\n', 'output': ['-1\\r\\n']}, {'input': '74 1 71\\r\\n', 'output': ['-1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nint a[1000010];\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  if (m * k < n) {\n    printf(\"-1\\n\");\n    return 0;\n  }\n  int c = n;\n  int cur = 1, l = 1;\n  while (c) {\n    if (cur > m)\n      for (int i = 0; i < k; i++) a[l++] = 0;\n    else\n      a[cur] = n - c + 1;\n    c--;\n    cur++;\n    if (cur > m * k) cur = 1;\n  }\n  for (int i = 1; i <= m * k; i++) {\n    if (i % k == 0)\n      printf(\"\\n\");\n    else\n      printf(\" \");\n    printf(\"%d\", a[i]);\n  }\n  return 0;\n}\n"}
{"src_uid": "6e0dafeaf85e92f959c388c72e158f68", "id": 4, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '3 2 2\\r\\n', 'output': ['1 2 \\r\\n0 3 \\r\\n']}, {'input': '8 4 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 0 \\r\\n0 0 0 \\r\\n']}, {'input': '10 2 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1\\r\\n', 'output': ['1 \\r\\n']}, {'input': '8 3 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 0 \\r\\n']}, {'input': '1 1 100\\r\\n', 'output': ['1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\r\\n']}, {'input': '1 100 1\\r\\n', 'output': ['1 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n']}, {'input': '12 4 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 9 \\r\\n10 11 12 \\r\\n']}, {'input': '64 8 9\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 \\r\\n10 11 12 13 14 15 16 17 18 \\r\\n19 20 21 22 23 24 25 26 27 \\r\\n28 29 30 31 32 33 34 35 36 \\r\\n37 38 39 40 41 42 43 44 45 \\r\\n46 47 48 49 50 51 52 53 54 \\r\\n55 56 57 58 59 60 61 62 63 \\r\\n64 0 0 0 0 0 0 0 0 \\r\\n']}, {'input': '13 2 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '41 6 7\\r\\n', 'output': ['1 2 3 4 5 6 7 \\r\\n8 9 10 11 12 13 14 \\r\\n15 16 17 18 19 20 21 \\r\\n22 23 24 25 26 27 28 \\r\\n29 30 31 32 33 34 35 \\r\\n36 37 38 39 40 41 0 \\r\\n']}, {'input': '10000 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '26 1 33\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 0 0 0 0 0 0 0 \\r\\n']}, {'input': '3 1 6\\r\\n', 'output': ['1 2 3 0 0 0 \\r\\n']}, {'input': '109 37 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 9 \\r\\n10 11 12 \\r\\n13 14 15 \\r\\n16 17 18 \\r\\n19 20 21 \\r\\n22 23 24 \\r\\n25 26 27 \\r\\n28 29 30 \\r\\n31 32 33 \\r\\n34 35 36 \\r\\n37 38 39 \\r\\n40 41 42 \\r\\n43 44 45 \\r\\n46 47 48 \\r\\n49 50 51 \\r\\n52 53 54 \\r\\n55 56 57 \\r\\n58 59 60 \\r\\n61 62 63 \\r\\n64 65 66 \\r\\n67 68 69 \\r\\n70 71 72 \\r\\n73 74 75 \\r\\n76 77 78 \\r\\n79 80 81 \\r\\n82 83 84 \\r\\n85 86 87 \\r\\n88 89 90 \\r\\n91 92 93 \\r\\n94 95 96 \\r\\n97 98 99 \\r\\n100 101 102 \\r\\n103 104 105 \\r\\n106 107 108 \\r\\n109 0 0 \\r\\n']}, {'input': '15 2 8\\r\\n', 'output': ['1 2 3 4 5 6 7 8 \\r\\n10 9 12 11 14 13 0 15 \\r\\n']}, {'input': '29 3 11\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 \\r\\n12 13 14 15 16 17 18 19 20 21 22 \\r\\n23 24 25 26 27 28 29 0 0 0 0 \\r\\n']}, {'input': '16 18 1\\r\\n', 'output': ['1 \\r\\n2 \\r\\n3 \\r\\n4 \\r\\n5 \\r\\n6 \\r\\n7 \\r\\n8 \\r\\n9 \\r\\n10 \\r\\n11 \\r\\n12 \\r\\n13 \\r\\n14 \\r\\n15 \\r\\n16 \\r\\n0 \\r\\n0 \\r\\n']}, {'input': '46 3 16\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \\r\\n18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 \\r\\n33 34 35 36 37 38 39 40 41 42 43 44 45 46 0 0 \\r\\n']}, {'input': '4206 86 12\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2358 14 56\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5420 35 96\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7758 63 41\\r\\n', 'output': ['-1\\r\\n']}, {'input': '9806 87 93\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99 1 97\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1053 25 42\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4217 49 86\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2312 77 30\\r\\n', 'output': ['-1\\r\\n']}, {'input': '74 1 71\\r\\n', 'output': ['-1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100], n, x;\nint main() {\n  cin >> n >> x;\n  int ans[n];\n  int cur = 0;\n  if (n % x) {\n    cout << -1;\n    return 0;\n  }\n  for (int i = 1; i <= x; i++) a[i] = (i * n / x - 1) % x + 1;\n  for (int i = 1; i <= n; i++) {\n    int index = i % x;\n    if (!a[index]) a[index] = i;\n  }\n  for (int i = 1; i < x; i++) {\n    if (a[i] && a[i + 1]) {\n      a[i] = 0;\n      a[i + 1] = 0;\n    }\n  }\n  for (int i = 1; i <= x; i++) {\n    cout << (a[i]? a[i] : 0) << \" \";\n    if (i == x) cout << endl;\n  }\n}\n"}
{"src_uid": "a35a27754c9c095c6f1b2d4adccbfe93", "id": 5, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '4 2 3\\r\\n1 2\\r\\n2 3 4\\r\\n', 'output': ['1 1 2 2', '1  1  2  2', '1 2 2 2']}, {'input': '5 5 2\\r\\n3 4 1 2 5\\r\\n2 3\\r\\n', 'output': ['1 1 1 1 1', '1  1  1  1  1', '1 2 2 1 1']}, {'input': '100 69 31\\r\\n1 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 24 26 27 29 31 37 38 39 40 44 46 48 49 50 51 53 55 56 57 58 59 60 61 63 64 65 66 67 68 69 70 71 72 74 76 77 78 79 80 81 82 83 89 92 94 95 97 98 99 100\\r\\n2 13 22 23 25 28 30 32 33 34 35 36 41 42 43 45 47 52 54 62 73 75 84 85 86 87 88 90 91 93 96\\r\\n', 'output': ['1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 2 1 1 2 1 2 1 2 2 2 2 2 1 1 1 1 2 2 2 1 2 1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 2 2 2 2 1 2 2 1 2 1 1 2 1 1 1 1', '1  2  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  2  1  2  1  1  2  1  2  1  2  2  2  2  2  1  1  1  1  2  2  2  1  2  1  2  1  1  1  1  2  1  2  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  2  1  2  1  1  1  1  1  1  1  1  2  2  2  2  2  1  2  2  1  2  1  1  2  1  1  1  1']}, {'input': '100 56 44\\r\\n1 2 5 8 14 15 17 18 20 21 23 24 25 27 30 33 34 35 36 38 41 42 44 45 46 47 48 49 50 53 56 58 59 60 62 63 64 65 68 69 71 75 76 80 81 84 87 88 90 91 92 94 95 96 98 100\\r\\n3 4 6 7 9 10 11 12 13 16 19 22 26 28 29 31 32 37 39 40 43 51 52 54 55 57 61 66 67 70 72 73 74 77 78 79 82 83 85 86 89 93 97 99\\r\\n', 'output': ['1  1  2  2  1  2  2  1  2  2  2  2  2  1  1  2  1  1  2  1  1  2  1  1  1  2  1  2  2  1  2  2  1  1  1  1  2  1  2  2  1  1  2  1  1  1  1  1  1  1  2  2  1  2  2  1  2  1  1  1  2  1  1  1  1  2  2  1  1  2  1  2  2  2  1  1  2  2  2  1  1  2  2  1  2  2  1  1  2  1  1  1  2  1  1  1  2  1  2  1', '1 1 2 2 1 2 2 1 2 2 2 2 2 1 1 2 1 1 2 1 1 2 1 1 1 2 1 2 2 1 2 2 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 2 2 1 2 2 1 2 1 1 1 2 1 1 1 1 2 2 1 1 2 1 2 2 2 1 1 2 2 2 1 1 2 2 1 2 2 1 1 2 1 1 1 2 1 1 1 2 1 2 1']}, {'input': '100 82 18\\r\\n1 2 3 4 5 6 7 8 9 10 11 13 14 15 16 17 18 19 20 22 23 25 27 29 30 31 32 33 34 35 36 37 38 42 43 44 45 46 47 48 49 50 51 53 54 55 57 58 59 60 61 62 63 64 65 66 67 68 69 71 72 73 74 75 77 78 79 80 82 83 86 88 90 91 92 93 94 96 97 98 99 100\\r\\n12 21 24 26 28 39 40 41 52 56 70 76 81 84 85 87 89 95\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 1 2 1 2 1 1 1 1 1 2 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  2  1  2  1  2  1  1  1  1  1  1  1  1  1  1  2  2  2  1  1  1  1  1  1  1  1  1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  2  1  1  1  1  2  1  1  2  2  1  2  1  2  1  1  1  1  1  2  1  1  1  1  1']}, {'input': '99 72 27\\r\\n1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 17 20 23 25 26 28 29 30 32 33 34 35 36 39 41 42 43 44 45 46 47 50 51 52 54 55 56 58 59 60 61 62 67 70 71 72 74 75 76 77 80 81 82 84 85 86 88 90 91 92 93 94 95 96 97 98 99\\r\\n9 18 19 21 22 24 27 31 37 38 40 48 49 53 57 63 64 65 66 68 69 73 78 79 83 87 89\\r\\n', 'output': ['1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 2 2 1 2 1 1 2 1 1 1 2 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 1 2 1 1 1 1 1 2 2 2 2 1 2 2 1 1 1 2 1 1 1 1 2 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  2  1  2  2  1  2  1  1  2  1  1  1  2  1  1  1  1  1  2  2  1  2  1  1  1  1  1  1  1  2  2  1  1  1  2  1  1  1  2  1  1  1  1  1  2  2  2  2  1  2  2  1  1  1  2  1  1  1  1  2  2  1  1  1  2  1  1  1  2  1  2  1  1  1  1  1  1  1  1  1  1']}, {'input': '99 38 61\\r\\n1 3 10 15 16 22 23 28 31 34 35 36 37 38 39 43 44 49 50 53 56 60 63 68 69 70 72 74 75 77 80 81 83 85 96 97 98 99\\r\\n2 4 5 6 7 8 9 11 12 13 14 17 18 19 20 21 24 25 26 27 29 30 32 33 40 41 42 45 46 47 48 51 52 54 55 57 58 59 61 62 64 65 66 67 71 73 76 78 79 82 84 86 87 88 89 90 91 92 93 94 95\\r\\n', 'output': ['1  2  1  2  2  2  2  2  2  1  2  2  2  2  1  1  2  2  2  2  2  1  1  2  2  2  2  1  2  2  1  2  2  1  1  1  1  1  1  2  2  2  1  1  2  2  2  2  1  1  2  2  1  2  2  1  2  2  2  1  2  2  1  2  2  2  2  1  1  1  2  1  2  1  1  2  1  2  2  1  1  2  1  2  1  2  2  2  2  2  2  2  2  2  2  1  1  1  1', '1 2 1 2 2 2 2 2 2 1 2 2 2 2 1 1 2 2 2 2 2 1 1 2 2 2 2 1 2 2 1 2 2 1 1 1 1 1 1 2 2 2 1 1 2 2 2 2 1 1 2 2 1 2 2 1 2 2 2 1 2 2 1 2 2 2 2 1 1 1 2 1 2 1 1 2 1 2 2 1 1 2 1 2 1 2 2 2 2 2 2 2 2 2 2 1 1 1 1']}, {'input': '99 84 15\\r\\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 47 48 50 51 52 53 55 56 58 59 60 61 62 63 64 65 68 69 70 71 72 73 74 75 77 79 80 81 82 83 84 85 86 87 89 90 91 92 93 94 97 98 99\\r\\n4 18 33 45 46 49 54 57 66 67 76 78 88 95 96\\r\\n', 'output': ['1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  2  2  1  1  2  1  1  1  1  2  1  1  2  1  1  1  1  1  1  1  1  2  2  1  1  1  1  1  1  1  1  2  1  2  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  2  2  1  1  1', '1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 2 1 1 1']}, {'input': '4 3 1\\r\\n1 3 4\\r\\n2\\r\\n', 'output': ['1  2  1  1', '1 2 1 1']}, {'input': '4 3 1\\r\\n1 2 4\\r\\n3\\r\\n', 'output': ['1 1 2 1', '1  1  2  1']}, {'input': '4 2 2\\r\\n2 3\\r\\n1 4\\r\\n', 'output': ['2  1  1  2', '2 1 1 2']}, {'input': '4 3 1\\r\\n2 3 4\\r\\n1\\r\\n', 'output': ['2 1 1 1', '2  1  1  1']}, {'input': '1 1 1\\r\\n1\\r\\n1\\r\\n', 'output': ['1', '2']}, {'input': '2 1 1\\r\\n2\\r\\n1\\r\\n', 'output': ['2 1', '2  1']}, {'input': '2 1 1\\r\\n1\\r\\n2\\r\\n', 'output': ['1 2', '1  2']}, {'input': '3 3 1\\r\\n1 2 3\\r\\n1\\r\\n', 'output': ['2 1 1', '1 1 1', '1  1  1']}, {'input': '3 3 1\\r\\n1 2 3\\r\\n3\\r\\n', 'output': ['1 1 2', '1 1 1', '1  1  1']}, {'input': '3 2 1\\r\\n1 3\\r\\n2\\r\\n', 'output': ['1 2 1', '1  2  1']}, {'input': '100 1 100\\r\\n84\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n', 'output': ['2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2', '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2', '2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2']}, {'input': '100 100 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n17\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}, {'input': '98 51 47\\r\\n1 2 3 4 6 7 8 10 13 15 16 18 19 21 22 23 25 26 27 29 31 32 36 37 39 40 41 43 44 48 49 50 51 52 54 56 58 59 65 66 68 79 80 84 86 88 89 90 94 95 97\\r\\n5 9 11 12 14 17 20 24 28 30 33 34 35 38 42 45 46 47 53 55 57 60 61 62 63 64 67 69 70 71 72 73 74 75 76 77 78 81 82 83 85 87 91 92 93 96 98\\r\\n', 'output': ['1 1 1 1 2 1 1 1 2 1 2 2 1 2 1 1 2 1 1 2 1 1 1 2 1 1 1 2 1 2 1 1 2 2 2 1 1 2 1 1 1 2 1 1 2 2 2 1 1 1 1 1 2 1 2 1 2 1 1 2 2 2 2 2 1 1 2 1 2 2 2 2 2 2 2 2 2 2 1 1 2 2 2 1 2 1 2 1 1 1 2 2 2 1 1 2 1 2', '1  1  1  1  2  1  1  1  2  1  2  2  1  2  1  1  2  1  1  2  1  1  1  2  1  1  1  2  1  2  1  1  2  2  2  1  1  2  1  1  1  2  1  1  2  2  2  1  1  1  1  1  2  1  2  1  2  1  1  2  2  2  2  2  1  1  2  1  2  2  2  2  2  2  2  2  2  2  1  1  2  2  2  1  2  1  2  1  1  1  2  2  2  1  1  2  1  2']}, {'input': '98 28 70\\r\\n1 13 15 16 19 27 28 40 42 43 46 53 54 57 61 63 67 68 69 71 75 76 78 80 88 93 97 98\\r\\n2 3 4 5 6 7 8 9 10 11 12 14 17 18 20 21 22 23 24 25 26 29 30 31 32 33 34 35 36 37 38 39 41 44 45 47 48 49 50 51 52 55 56 58 59 60 62 64 65 66 70 72 73 74 77 79 81 82 83 84 85 86 87 89 90 91 92 94 95 96\\r\\n', 'output': ['1  2  2  2  2  2  2  2  2  2  2  2  1  2  1  1  2  2  1  2  2  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  2  1  2  1  1  2  2  1  2  2  2  2  2  2  1  1  2  2  1  2  2  2  1  2  1  2  2  2  1  1  1  2  1  2  2  2  1  1  2  1  2  1  2  2  2  2  2  2  2  1  2  2  2  2  1  2  2  2  1  1', '1 2 2 2 2 2 2 2 2 2 2 2 1 2 1 1 2 2 1 2 2 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 2 1 2 1 1 2 2 1 2 2 2 2 2 2 1 1 2 2 1 2 2 2 1 2 1 2 2 2 1 1 1 2 1 2 2 2 1 1 2 1 2 1 2 2 2 2 2 2 2 1 2 2 2 2 1 2 2 2 1 1']}, {'input': '97 21 76\\r\\n7 10 16 17 26 30 34 39 40 42 44 46 53 54 56 64 67 72 78 79 94\\r\\n1 2 3 4 5 6 8 9 11 12 13 14 15 18 19 20 21 22 23 24 25 27 28 29 31 32 33 35 36 37 38 41 43 45 47 48 49 50 51 52 55 57 58 59 60 61 62 63 65 66 68 69 70 71 73 74 75 76 77 80 81 82 83 84 85 86 87 88 89 90 91 92 93 95 96 97\\r\\n', 'output': ['2 2 2 2 2 2 1 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 1 2 2 2 1 2 2 2 1 2 2 2 2 1 1 2 1 2 1 2 1 2 2 2 2 2 2 1 1 2 1 2 2 2 2 2 2 2 1 2 2 1 2 2 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2', '2  2  2  2  2  2  1  2  2  1  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  1  2  2  2  1  2  2  2  1  2  2  2  2  1  1  2  1  2  1  2  1  2  2  2  2  2  2  1  1  2  1  2  2  2  2  2  2  2  1  2  2  1  2  2  2  2  1  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2']}, {'input': '97 21 76\\r\\n1 10 12 13 17 18 22 25 31 48 50 54 61 64 67 74 78 81 86 88 94\\r\\n2 3 4 5 6 7 8 9 11 14 15 16 19 20 21 23 24 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 49 51 52 53 55 56 57 58 59 60 62 63 65 66 68 69 70 71 72 73 75 76 77 79 80 82 83 84 85 87 89 90 91 92 93 95 96 97\\r\\n', 'output': ['1  2  2  2  2  2  2  2  2  1  2  1  1  2  2  2  1  1  2  2  2  1  2  2  1  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  1  2  2  2  1  2  2  2  2  2  2  1  2  2  1  2  2  1  2  2  2  2  2  2  1  2  2  2  1  2  2  1  2  2  2  2  1  2  1  2  2  2  2  2  1  2  2  2', '1 2 2 2 2 2 2 2 2 1 2 1 1 2 2 2 1 1 2 2 2 1 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 1 2 2 2 1 2 2 2 2 2 2 1 2 2 1 2 2 1 2 2 2 2 2 2 1 2 2 2 1 2 2 1 2 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2']}, {'input': '96 10 86\\r\\n2 5 31 37 68 69 80 82 90 91\\r\\n1 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 36 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 70 71 72 73 74 75 76 77 78 79 81 83 84 85 86 87 88 89 92 93 94 95 96\\r\\n', 'output': ['2 1 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 1 2 1 2 2 2 2 2 2 2 1 1 2 2 2 2 2', '2  1  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  1  2  1  2  2  2  2  2  2  2  1  1  2  2  2  2  2']}, {'input': '95 4 91\\r\\n58 65 70 93\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 59 60 61 62 63 64 66 67 68 69 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 94 95\\r\\n', 'output': ['2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  2  1  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2', '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 1 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2']}, {'input': '98 88 10\\r\\n1 2 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 62 63 64 65 66 67 68 69 71 72 73 74 75 76 77 79 80 81 83 84 85 86 87 88 89 90 92 93 94 95 96 97 98\\r\\n3 7 32 37 42 61 70 78 82 91\\r\\n', 'output': ['1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1', '1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  2  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1']}, {'input': '98 96 2\\r\\n1 2 3 4 5 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98\\r\\n6 7\\r\\n', 'output': ['1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  2  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '97 97 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97\\r\\n94\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '97 97 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97\\r\\n20\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '96 96 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96\\r\\n48\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}, {'input': '95 95 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95\\r\\n55\\r\\n', 'output': ['1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a, b;\nbool app[101];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cin >> n >> a >> b;\n  for (int i = 0; i < a; i++) {\n    int num;\n    cin >> num;\n    app[num] = true;\n  }\n  for (int i = 0; i < b; i++) {\n    int num;\n    cin >> num;\n    app[num] = true;\n  }\n  for (int i = 1; i <= n; i++) {\n    if (app[i])\n      cout << 1;\n    else\n      cout << 2;\n  }\n  return 0;\n}\n"}
{"src_uid": "a35a27754c9c095c6f1b2d4adccbfe93", "id": 5, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '4 2 3\\r\\n1 2\\r\\n2 3 4\\r\\n', 'output': ['1 1 2 2', '1  1  2  2', '1 2 2 2']}, {'input': '5 5 2\\r\\n3 4 1 2 5\\r\\n2 3\\r\\n', 'output': ['1 1 1 1 1', '1  1  1  1  1', '1 2 2 1 1']}, {'input': '100 69 31\\r\\n1 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 24 26 27 29 31 37 38 39 40 44 46 48 49 50 51 53 55 56 57 58 59 60 61 63 64 65 66 67 68 69 70 71 72 74 76 77 78 79 80 81 82 83 89 92 94 95 97 98 99 100\\r\\n2 13 22 23 25 28 30 32 33 34 35 36 41 42 43 45 47 52 54 62 73 75 84 85 86 87 88 90 91 93 96\\r\\n', 'output': ['1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 2 1 1 2 1 2 1 2 2 2 2 2 1 1 1 1 2 2 2 1 2 1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 2 2 2 2 1 2 2 1 2 1 1 2 1 1 1 1', '1  2  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  2  1  2  1  1  2  1  2  1  2  2  2  2  2  1  1  1  1  2  2  2  1  2  1  2  1  1  1  1  2  1  2  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  2  1  2  1  1  1  1  1  1  1  1  2  2  2  2  2  1  2  2  1  2  1  1  2  1  1  1  1']}, {'input': '100 56 44\\r\\n1 2 5 8 14 15 17 18 20 21 23 24 25 27 30 33 34 35 36 38 41 42 44 45 46 47 48 49 50 53 56 58 59 60 62 63 64 65 68 69 71 75 76 80 81 84 87 88 90 91 92 94 95 96 98 100\\r\\n3 4 6 7 9 10 11 12 13 16 19 22 26 28 29 31 32 37 39 40 43 51 52 54 55 57 61 66 67 70 72 73 74 77 78 79 82 83 85 86 89 93 97 99\\r\\n', 'output': ['1  1  2  2  1  2  2  1  2  2  2  2  2  1  1  2  1  1  2  1  1  2  1  1  1  2  1  2  2  1  2  2  1  1  1  1  2  1  2  2  1  1  2  1  1  1  1  1  1  1  2  2  1  2  2  1  2  1  1  1  2  1  1  1  1  2  2  1  1  2  1  2  2  2  1  1  2  2  2  1  1  2  2  1  2  2  1  1  2  1  1  1  2  1  1  1  2  1  2  1', '1 1 2 2 1 2 2 1 2 2 2 2 2 1 1 2 1 1 2 1 1 2 1 1 1 2 1 2 2 1 2 2 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 2 2 1 2 2 1 2 1 1 1 2 1 1 1 1 2 2 1 1 2 1 2 2 2 1 1 2 2 2 1 1 2 2 1 2 2 1 1 2 1 1 1 2 1 1 1 2 1 2 1']}, {'input': '100 82 18\\r\\n1 2 3 4 5 6 7 8 9 10 11 13 14 15 16 17 18 19 20 22 23 25 27 29 30 31 32 33 34 35 36 37 38 42 43 44 45 46 47 48 49 50 51 53 54 55 57 58 59 60 61 62 63 64 65 66 67 68 69 71 72 73 74 75 77 78 79 80 82 83 86 88 90 91 92 93 94 96 97 98 99 100\\r\\n12 21 24 26 28 39 40 41 52 56 70 76 81 84 85 87 89 95\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 1 2 1 2 1 1 1 1 1 2 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  2  1  2  1  2  1  1  1  1  1  1  1  1  1  1  2  2  2  1  1  1  1  1  1  1  1  1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  2  1  1  1  1  2  1  1  2  2  1  2  1  2  1  1  1  1  1  2  1  1  1  1  1']}, {'input': '99 72 27\\r\\n1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 17 20 23 25 26 28 29 30 32 33 34 35 36 39 41 42 43 44 45 46 47 50 51 52 54 55 56 58 59 60 61 62 67 70 71 72 74 75 76 77 80 81 82 84 85 86 88 90 91 92 93 94 95 96 97 98 99\\r\\n9 18 19 21 22 24 27 31 37 38 40 48 49 53 57 63 64 65 66 68 69 73 78 79 83 87 89\\r\\n', 'output': ['1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 2 2 1 2 1 1 2 1 1 1 2 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 1 2 1 1 1 1 1 2 2 2 2 1 2 2 1 1 1 2 1 1 1 1 2 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  2  1  2  2  1  2  1  1  2  1  1  1  2  1  1  1  1  1  2  2  1  2  1  1  1  1  1  1  1  2  2  1  1  1  2  1  1  1  2  1  1  1  1  1  2  2  2  2  1  2  2  1  1  1  2  1  1  1  1  2  2  1  1  1  2  1  1  1  2  1  2  1  1  1  1  1  1  1  1  1  1']}, {'input': '99 38 61\\r\\n1 3 10 15 16 22 23 28 31 34 35 36 37 38 39 43 44 49 50 53 56 60 63 68 69 70 72 74 75 77 80 81 83 85 96 97 98 99\\r\\n2 4 5 6 7 8 9 11 12 13 14 17 18 19 20 21 24 25 26 27 29 30 32 33 40 41 42 45 46 47 48 51 52 54 55 57 58 59 61 62 64 65 66 67 71 73 76 78 79 82 84 86 87 88 89 90 91 92 93 94 95\\r\\n', 'output': ['1  2  1  2  2  2  2  2  2  1  2  2  2  2  1  1  2  2  2  2  2  1  1  2  2  2  2  1  2  2  1  2  2  1  1  1  1  1  1  2  2  2  1  1  2  2  2  2  1  1  2  2  1  2  2  1  2  2  2  1  2  2  1  2  2  2  2  1  1  1  2  1  2  1  1  2  1  2  2  1  1  2  1  2  1  2  2  2  2  2  2  2  2  2  2  1  1  1  1', '1 2 1 2 2 2 2 2 2 1 2 2 2 2 1 1 2 2 2 2 2 1 1 2 2 2 2 1 2 2 1 2 2 1 1 1 1 1 1 2 2 2 1 1 2 2 2 2 1 1 2 2 1 2 2 1 2 2 2 1 2 2 1 2 2 2 2 1 1 1 2 1 2 1 1 2 1 2 2 1 1 2 1 2 1 2 2 2 2 2 2 2 2 2 2 1 1 1 1']}, {'input': '99 84 15\\r\\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 47 48 50 51 52 53 55 56 58 59 60 61 62 63 64 65 68 69 70 71 72 73 74 75 77 79 80 81 82 83 84 85 86 87 89 90 91 92 93 94 97 98 99\\r\\n4 18 33 45 46 49 54 57 66 67 76 78 88 95 96\\r\\n', 'output': ['1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  2  2  1  1  2  1  1  1  1  2  1  1  2  1  1  1  1  1  1  1  1  2  2  1  1  1  1  1  1  1  1  2  1  2  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  2  2  1  1  1', '1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 2 1 1 1']}, {'input': '4 3 1\\r\\n1 3 4\\r\\n2\\r\\n', 'output': ['1  2  1  1', '1 2 1 1']}, {'input': '4 3 1\\r\\n1 2 4\\r\\n3\\r\\n', 'output': ['1 1 2 1', '1  1  2  1']}, {'input': '4 2 2\\r\\n2 3\\r\\n1 4\\r\\n', 'output': ['2  1  1  2', '2 1 1 2']}, {'input': '4 3 1\\r\\n2 3 4\\r\\n1\\r\\n', 'output': ['2 1 1 1', '2  1  1  1']}, {'input': '1 1 1\\r\\n1\\r\\n1\\r\\n', 'output': ['1', '2']}, {'input': '2 1 1\\r\\n2\\r\\n1\\r\\n', 'output': ['2 1', '2  1']}, {'input': '2 1 1\\r\\n1\\r\\n2\\r\\n', 'output': ['1 2', '1  2']}, {'input': '3 3 1\\r\\n1 2 3\\r\\n1\\r\\n', 'output': ['2 1 1', '1 1 1', '1  1  1']}, {'input': '3 3 1\\r\\n1 2 3\\r\\n3\\r\\n', 'output': ['1 1 2', '1 1 1', '1  1  1']}, {'input': '3 2 1\\r\\n1 3\\r\\n2\\r\\n', 'output': ['1 2 1', '1  2  1']}, {'input': '100 1 100\\r\\n84\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n', 'output': ['2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2', '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2', '2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2']}, {'input': '100 100 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n17\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}, {'input': '98 51 47\\r\\n1 2 3 4 6 7 8 10 13 15 16 18 19 21 22 23 25 26 27 29 31 32 36 37 39 40 41 43 44 48 49 50 51 52 54 56 58 59 65 66 68 79 80 84 86 88 89 90 94 95 97\\r\\n5 9 11 12 14 17 20 24 28 30 33 34 35 38 42 45 46 47 53 55 57 60 61 62 63 64 67 69 70 71 72 73 74 75 76 77 78 81 82 83 85 87 91 92 93 96 98\\r\\n', 'output': ['1 1 1 1 2 1 1 1 2 1 2 2 1 2 1 1 2 1 1 2 1 1 1 2 1 1 1 2 1 2 1 1 2 2 2 1 1 2 1 1 1 2 1 1 2 2 2 1 1 1 1 1 2 1 2 1 2 1 1 2 2 2 2 2 1 1 2 1 2 2 2 2 2 2 2 2 2 2 1 1 2 2 2 1 2 1 2 1 1 1 2 2 2 1 1 2 1 2', '1  1  1  1  2  1  1  1  2  1  2  2  1  2  1  1  2  1  1  2  1  1  1  2  1  1  1  2  1  2  1  1  2  2  2  1  1  2  1  1  1  2  1  1  2  2  2  1  1  1  1  1  2  1  2  1  2  1  1  2  2  2  2  2  1  1  2  1  2  2  2  2  2  2  2  2  2  2  1  1  2  2  2  1  2  1  2  1  1  1  2  2  2  1  1  2  1  2']}, {'input': '98 28 70\\r\\n1 13 15 16 19 27 28 40 42 43 46 53 54 57 61 63 67 68 69 71 75 76 78 80 88 93 97 98\\r\\n2 3 4 5 6 7 8 9 10 11 12 14 17 18 20 21 22 23 24 25 26 29 30 31 32 33 34 35 36 37 38 39 41 44 45 47 48 49 50 51 52 55 56 58 59 60 62 64 65 66 70 72 73 74 77 79 81 82 83 84 85 86 87 89 90 91 92 94 95 96\\r\\n', 'output': ['1  2  2  2  2  2  2  2  2  2  2  2  1  2  1  1  2  2  1  2  2  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  2  1  2  1  1  2  2  1  2  2  2  2  2  2  1  1  2  2  1  2  2  2  1  2  1  2  2  2  1  1  1  2  1  2  2  2  1  1  2  1  2  1  2  2  2  2  2  2  2  1  2  2  2  2  1  2  2  2  1  1', '1 2 2 2 2 2 2 2 2 2 2 2 1 2 1 1 2 2 1 2 2 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 2 1 2 1 1 2 2 1 2 2 2 2 2 2 1 1 2 2 1 2 2 2 1 2 1 2 2 2 1 1 1 2 1 2 2 2 1 1 2 1 2 1 2 2 2 2 2 2 2 1 2 2 2 2 1 2 2 2 1 1']}, {'input': '97 21 76\\r\\n7 10 16 17 26 30 34 39 40 42 44 46 53 54 56 64 67 72 78 79 94\\r\\n1 2 3 4 5 6 8 9 11 12 13 14 15 18 19 20 21 22 23 24 25 27 28 29 31 32 33 35 36 37 38 41 43 45 47 48 49 50 51 52 55 57 58 59 60 61 62 63 65 66 68 69 70 71 73 74 75 76 77 80 81 82 83 84 85 86 87 88 89 90 91 92 93 95 96 97\\r\\n', 'output': ['2 2 2 2 2 2 1 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 1 2 2 2 1 2 2 2 1 2 2 2 2 1 1 2 1 2 1 2 1 2 2 2 2 2 2 1 1 2 1 2 2 2 2 2 2 2 1 2 2 1 2 2 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2', '2  2  2  2  2  2  1  2  2  1  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  1  2  2  2  1  2  2  2  1  2  2  2  2  1  1  2  1  2  1  2  1  2  2  2  2  2  2  1  1  2  1  2  2  2  2  2  2  2  1  2  2  1  2  2  2  2  1  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2']}, {'input': '97 21 76\\r\\n1 10 12 13 17 18 22 25 31 48 50 54 61 64 67 74 78 81 86 88 94\\r\\n2 3 4 5 6 7 8 9 11 14 15 16 19 20 21 23 24 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 49 51 52 53 55 56 57 58 59 60 62 63 65 66 68 69 70 71 72 73 75 76 77 79 80 82 83 84 85 87 89 90 91 92 93 95 96 97\\r\\n', 'output': ['1  2  2  2  2  2  2  2  2  1  2  1  1  2  2  2  1  1  2  2  2  1  2  2  1  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  1  2  2  2  1  2  2  2  2  2  2  1  2  2  1  2  2  1  2  2  2  2  2  2  1  2  2  2  1  2  2  1  2  2  2  2  1  2  1  2  2  2  2  2  1  2  2  2', '1 2 2 2 2 2 2 2 2 1 2 1 1 2 2 2 1 1 2 2 2 1 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 1 2 2 2 1 2 2 2 2 2 2 1 2 2 1 2 2 1 2 2 2 2 2 2 1 2 2 2 1 2 2 1 2 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2']}, {'input': '96 10 86\\r\\n2 5 31 37 68 69 80 82 90 91\\r\\n1 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 36 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 70 71 72 73 74 75 76 77 78 79 81 83 84 85 86 87 88 89 92 93 94 95 96\\r\\n', 'output': ['2 1 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 1 2 1 2 2 2 2 2 2 2 1 1 2 2 2 2 2', '2  1  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  1  2  1  2  2  2  2  2  2  2  1  1  2  2  2  2  2']}, {'input': '95 4 91\\r\\n58 65 70 93\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 59 60 61 62 63 64 66 67 68 69 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 94 95\\r\\n', 'output': ['2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  2  1  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2', '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 1 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2']}, {'input': '98 88 10\\r\\n1 2 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 62 63 64 65 66 67 68 69 71 72 73 74 75 76 77 79 80 81 83 84 85 86 87 88 89 90 92 93 94 95 96 97 98\\r\\n3 7 32 37 42 61 70 78 82 91\\r\\n', 'output': ['1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1', '1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  2  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1']}, {'input': '98 96 2\\r\\n1 2 3 4 5 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98\\r\\n6 7\\r\\n', 'output': ['1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  2  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '97 97 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97\\r\\n94\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '97 97 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97\\r\\n20\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '96 96 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96\\r\\n48\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}, {'input': '95 95 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95\\r\\n55\\r\\n', 'output': ['1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a, b;\n  scanf(\"%d %d %d\", &n, &a, &b);\n  int ans[110] = {0};\n  int aa[110] = {0};\n  int bb[110] = {0};\n  for (int i = 0; i < a; i++) scanf(\"%d\", &aa[i]);\n  for (int i = 0; i < b; i++) scanf(\"%d\", &bb[i]);\n  for (int i = 0; i < n; i++)\n    if (aa[find(aa, a, i + 1)] && bb[find(bb, b, i + 1)]) ans[i] = 1;\n  for (int i = 0; i < n; i++) printf(\"%d \", ans[i]);\n  printf(\"\\n\");\n}\nint find(int *a, int n, int b) {\n  for (int i = 0; i < n; i++)\n    if (a[i] == b) return i;\n}\n"}
{"src_uid": "a35a27754c9c095c6f1b2d4adccbfe93", "id": 5, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '4 2 3\\r\\n1 2\\r\\n2 3 4\\r\\n', 'output': ['1 1 2 2', '1  1  2  2', '1 2 2 2']}, {'input': '5 5 2\\r\\n3 4 1 2 5\\r\\n2 3\\r\\n', 'output': ['1 1 1 1 1', '1  1  1  1  1', '1 2 2 1 1']}, {'input': '100 69 31\\r\\n1 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 24 26 27 29 31 37 38 39 40 44 46 48 49 50 51 53 55 56 57 58 59 60 61 63 64 65 66 67 68 69 70 71 72 74 76 77 78 79 80 81 82 83 89 92 94 95 97 98 99 100\\r\\n2 13 22 23 25 28 30 32 33 34 35 36 41 42 43 45 47 52 54 62 73 75 84 85 86 87 88 90 91 93 96\\r\\n', 'output': ['1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 2 1 1 2 1 2 1 2 2 2 2 2 1 1 1 1 2 2 2 1 2 1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 2 2 2 2 1 2 2 1 2 1 1 2 1 1 1 1', '1  2  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  2  1  2  1  1  2  1  2  1  2  2  2  2  2  1  1  1  1  2  2  2  1  2  1  2  1  1  1  1  2  1  2  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  2  1  2  1  1  1  1  1  1  1  1  2  2  2  2  2  1  2  2  1  2  1  1  2  1  1  1  1']}, {'input': '100 56 44\\r\\n1 2 5 8 14 15 17 18 20 21 23 24 25 27 30 33 34 35 36 38 41 42 44 45 46 47 48 49 50 53 56 58 59 60 62 63 64 65 68 69 71 75 76 80 81 84 87 88 90 91 92 94 95 96 98 100\\r\\n3 4 6 7 9 10 11 12 13 16 19 22 26 28 29 31 32 37 39 40 43 51 52 54 55 57 61 66 67 70 72 73 74 77 78 79 82 83 85 86 89 93 97 99\\r\\n', 'output': ['1  1  2  2  1  2  2  1  2  2  2  2  2  1  1  2  1  1  2  1  1  2  1  1  1  2  1  2  2  1  2  2  1  1  1  1  2  1  2  2  1  1  2  1  1  1  1  1  1  1  2  2  1  2  2  1  2  1  1  1  2  1  1  1  1  2  2  1  1  2  1  2  2  2  1  1  2  2  2  1  1  2  2  1  2  2  1  1  2  1  1  1  2  1  1  1  2  1  2  1', '1 1 2 2 1 2 2 1 2 2 2 2 2 1 1 2 1 1 2 1 1 2 1 1 1 2 1 2 2 1 2 2 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 2 2 1 2 2 1 2 1 1 1 2 1 1 1 1 2 2 1 1 2 1 2 2 2 1 1 2 2 2 1 1 2 2 1 2 2 1 1 2 1 1 1 2 1 1 1 2 1 2 1']}, {'input': '100 82 18\\r\\n1 2 3 4 5 6 7 8 9 10 11 13 14 15 16 17 18 19 20 22 23 25 27 29 30 31 32 33 34 35 36 37 38 42 43 44 45 46 47 48 49 50 51 53 54 55 57 58 59 60 61 62 63 64 65 66 67 68 69 71 72 73 74 75 77 78 79 80 82 83 86 88 90 91 92 93 94 96 97 98 99 100\\r\\n12 21 24 26 28 39 40 41 52 56 70 76 81 84 85 87 89 95\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 1 2 1 2 1 1 1 1 1 2 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  2  1  2  1  2  1  1  1  1  1  1  1  1  1  1  2  2  2  1  1  1  1  1  1  1  1  1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  2  1  1  1  1  2  1  1  2  2  1  2  1  2  1  1  1  1  1  2  1  1  1  1  1']}, {'input': '99 72 27\\r\\n1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 17 20 23 25 26 28 29 30 32 33 34 35 36 39 41 42 43 44 45 46 47 50 51 52 54 55 56 58 59 60 61 62 67 70 71 72 74 75 76 77 80 81 82 84 85 86 88 90 91 92 93 94 95 96 97 98 99\\r\\n9 18 19 21 22 24 27 31 37 38 40 48 49 53 57 63 64 65 66 68 69 73 78 79 83 87 89\\r\\n', 'output': ['1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 2 2 1 2 1 1 2 1 1 1 2 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 1 2 1 1 1 1 1 2 2 2 2 1 2 2 1 1 1 2 1 1 1 1 2 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  2  1  2  2  1  2  1  1  2  1  1  1  2  1  1  1  1  1  2  2  1  2  1  1  1  1  1  1  1  2  2  1  1  1  2  1  1  1  2  1  1  1  1  1  2  2  2  2  1  2  2  1  1  1  2  1  1  1  1  2  2  1  1  1  2  1  1  1  2  1  2  1  1  1  1  1  1  1  1  1  1']}, {'input': '99 38 61\\r\\n1 3 10 15 16 22 23 28 31 34 35 36 37 38 39 43 44 49 50 53 56 60 63 68 69 70 72 74 75 77 80 81 83 85 96 97 98 99\\r\\n2 4 5 6 7 8 9 11 12 13 14 17 18 19 20 21 24 25 26 27 29 30 32 33 40 41 42 45 46 47 48 51 52 54 55 57 58 59 61 62 64 65 66 67 71 73 76 78 79 82 84 86 87 88 89 90 91 92 93 94 95\\r\\n', 'output': ['1  2  1  2  2  2  2  2  2  1  2  2  2  2  1  1  2  2  2  2  2  1  1  2  2  2  2  1  2  2  1  2  2  1  1  1  1  1  1  2  2  2  1  1  2  2  2  2  1  1  2  2  1  2  2  1  2  2  2  1  2  2  1  2  2  2  2  1  1  1  2  1  2  1  1  2  1  2  2  1  1  2  1  2  1  2  2  2  2  2  2  2  2  2  2  1  1  1  1', '1 2 1 2 2 2 2 2 2 1 2 2 2 2 1 1 2 2 2 2 2 1 1 2 2 2 2 1 2 2 1 2 2 1 1 1 1 1 1 2 2 2 1 1 2 2 2 2 1 1 2 2 1 2 2 1 2 2 2 1 2 2 1 2 2 2 2 1 1 1 2 1 2 1 1 2 1 2 2 1 1 2 1 2 1 2 2 2 2 2 2 2 2 2 2 1 1 1 1']}, {'input': '99 84 15\\r\\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 47 48 50 51 52 53 55 56 58 59 60 61 62 63 64 65 68 69 70 71 72 73 74 75 77 79 80 81 82 83 84 85 86 87 89 90 91 92 93 94 97 98 99\\r\\n4 18 33 45 46 49 54 57 66 67 76 78 88 95 96\\r\\n', 'output': ['1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  2  2  1  1  2  1  1  1  1  2  1  1  2  1  1  1  1  1  1  1  1  2  2  1  1  1  1  1  1  1  1  2  1  2  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  2  2  1  1  1', '1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 2 1 1 1']}, {'input': '4 3 1\\r\\n1 3 4\\r\\n2\\r\\n', 'output': ['1  2  1  1', '1 2 1 1']}, {'input': '4 3 1\\r\\n1 2 4\\r\\n3\\r\\n', 'output': ['1 1 2 1', '1  1  2  1']}, {'input': '4 2 2\\r\\n2 3\\r\\n1 4\\r\\n', 'output': ['2  1  1  2', '2 1 1 2']}, {'input': '4 3 1\\r\\n2 3 4\\r\\n1\\r\\n', 'output': ['2 1 1 1', '2  1  1  1']}, {'input': '1 1 1\\r\\n1\\r\\n1\\r\\n', 'output': ['1', '2']}, {'input': '2 1 1\\r\\n2\\r\\n1\\r\\n', 'output': ['2 1', '2  1']}, {'input': '2 1 1\\r\\n1\\r\\n2\\r\\n', 'output': ['1 2', '1  2']}, {'input': '3 3 1\\r\\n1 2 3\\r\\n1\\r\\n', 'output': ['2 1 1', '1 1 1', '1  1  1']}, {'input': '3 3 1\\r\\n1 2 3\\r\\n3\\r\\n', 'output': ['1 1 2', '1 1 1', '1  1  1']}, {'input': '3 2 1\\r\\n1 3\\r\\n2\\r\\n', 'output': ['1 2 1', '1  2  1']}, {'input': '100 1 100\\r\\n84\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n', 'output': ['2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2', '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2', '2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2']}, {'input': '100 100 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n17\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}, {'input': '98 51 47\\r\\n1 2 3 4 6 7 8 10 13 15 16 18 19 21 22 23 25 26 27 29 31 32 36 37 39 40 41 43 44 48 49 50 51 52 54 56 58 59 65 66 68 79 80 84 86 88 89 90 94 95 97\\r\\n5 9 11 12 14 17 20 24 28 30 33 34 35 38 42 45 46 47 53 55 57 60 61 62 63 64 67 69 70 71 72 73 74 75 76 77 78 81 82 83 85 87 91 92 93 96 98\\r\\n', 'output': ['1 1 1 1 2 1 1 1 2 1 2 2 1 2 1 1 2 1 1 2 1 1 1 2 1 1 1 2 1 2 1 1 2 2 2 1 1 2 1 1 1 2 1 1 2 2 2 1 1 1 1 1 2 1 2 1 2 1 1 2 2 2 2 2 1 1 2 1 2 2 2 2 2 2 2 2 2 2 1 1 2 2 2 1 2 1 2 1 1 1 2 2 2 1 1 2 1 2', '1  1  1  1  2  1  1  1  2  1  2  2  1  2  1  1  2  1  1  2  1  1  1  2  1  1  1  2  1  2  1  1  2  2  2  1  1  2  1  1  1  2  1  1  2  2  2  1  1  1  1  1  2  1  2  1  2  1  1  2  2  2  2  2  1  1  2  1  2  2  2  2  2  2  2  2  2  2  1  1  2  2  2  1  2  1  2  1  1  1  2  2  2  1  1  2  1  2']}, {'input': '98 28 70\\r\\n1 13 15 16 19 27 28 40 42 43 46 53 54 57 61 63 67 68 69 71 75 76 78 80 88 93 97 98\\r\\n2 3 4 5 6 7 8 9 10 11 12 14 17 18 20 21 22 23 24 25 26 29 30 31 32 33 34 35 36 37 38 39 41 44 45 47 48 49 50 51 52 55 56 58 59 60 62 64 65 66 70 72 73 74 77 79 81 82 83 84 85 86 87 89 90 91 92 94 95 96\\r\\n', 'output': ['1  2  2  2  2  2  2  2  2  2  2  2  1  2  1  1  2  2  1  2  2  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  2  1  2  1  1  2  2  1  2  2  2  2  2  2  1  1  2  2  1  2  2  2  1  2  1  2  2  2  1  1  1  2  1  2  2  2  1  1  2  1  2  1  2  2  2  2  2  2  2  1  2  2  2  2  1  2  2  2  1  1', '1 2 2 2 2 2 2 2 2 2 2 2 1 2 1 1 2 2 1 2 2 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 2 1 2 1 1 2 2 1 2 2 2 2 2 2 1 1 2 2 1 2 2 2 1 2 1 2 2 2 1 1 1 2 1 2 2 2 1 1 2 1 2 1 2 2 2 2 2 2 2 1 2 2 2 2 1 2 2 2 1 1']}, {'input': '97 21 76\\r\\n7 10 16 17 26 30 34 39 40 42 44 46 53 54 56 64 67 72 78 79 94\\r\\n1 2 3 4 5 6 8 9 11 12 13 14 15 18 19 20 21 22 23 24 25 27 28 29 31 32 33 35 36 37 38 41 43 45 47 48 49 50 51 52 55 57 58 59 60 61 62 63 65 66 68 69 70 71 73 74 75 76 77 80 81 82 83 84 85 86 87 88 89 90 91 92 93 95 96 97\\r\\n', 'output': ['2 2 2 2 2 2 1 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 1 2 2 2 1 2 2 2 1 2 2 2 2 1 1 2 1 2 1 2 1 2 2 2 2 2 2 1 1 2 1 2 2 2 2 2 2 2 1 2 2 1 2 2 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2', '2  2  2  2  2  2  1  2  2  1  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  1  2  2  2  1  2  2  2  1  2  2  2  2  1  1  2  1  2  1  2  1  2  2  2  2  2  2  1  1  2  1  2  2  2  2  2  2  2  1  2  2  1  2  2  2  2  1  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2']}, {'input': '97 21 76\\r\\n1 10 12 13 17 18 22 25 31 48 50 54 61 64 67 74 78 81 86 88 94\\r\\n2 3 4 5 6 7 8 9 11 14 15 16 19 20 21 23 24 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 49 51 52 53 55 56 57 58 59 60 62 63 65 66 68 69 70 71 72 73 75 76 77 79 80 82 83 84 85 87 89 90 91 92 93 95 96 97\\r\\n', 'output': ['1  2  2  2  2  2  2  2  2  1  2  1  1  2  2  2  1  1  2  2  2  1  2  2  1  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  1  2  2  2  1  2  2  2  2  2  2  1  2  2  1  2  2  1  2  2  2  2  2  2  1  2  2  2  1  2  2  1  2  2  2  2  1  2  1  2  2  2  2  2  1  2  2  2', '1 2 2 2 2 2 2 2 2 1 2 1 1 2 2 2 1 1 2 2 2 1 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 1 2 2 2 1 2 2 2 2 2 2 1 2 2 1 2 2 1 2 2 2 2 2 2 1 2 2 2 1 2 2 1 2 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2']}, {'input': '96 10 86\\r\\n2 5 31 37 68 69 80 82 90 91\\r\\n1 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 36 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 70 71 72 73 74 75 76 77 78 79 81 83 84 85 86 87 88 89 92 93 94 95 96\\r\\n', 'output': ['2 1 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 1 2 1 2 2 2 2 2 2 2 1 1 2 2 2 2 2', '2  1  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  1  2  1  2  2  2  2  2  2  2  1  1  2  2  2  2  2']}, {'input': '95 4 91\\r\\n58 65 70 93\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 59 60 61 62 63 64 66 67 68 69 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 94 95\\r\\n', 'output': ['2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  2  1  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2', '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 1 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2']}, {'input': '98 88 10\\r\\n1 2 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 62 63 64 65 66 67 68 69 71 72 73 74 75 76 77 79 80 81 83 84 85 86 87 88 89 90 92 93 94 95 96 97 98\\r\\n3 7 32 37 42 61 70 78 82 91\\r\\n', 'output': ['1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1', '1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  2  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1']}, {'input': '98 96 2\\r\\n1 2 3 4 5 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98\\r\\n6 7\\r\\n', 'output': ['1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  2  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '97 97 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97\\r\\n94\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '97 97 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97\\r\\n20\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '96 96 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96\\r\\n48\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}, {'input': '95 95 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95\\r\\n55\\r\\n', 'output': ['1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a, b;\n  cin >> n >> a >> b;\n  vector<int> v1(a), v2(b);\n  for (int i = 0; i < a; ++i) cin >> v1[i];\n  for (int i = 0; i < b; ++i) cin >> v2[i];\n  vector<int> v(n, 1), apos(a, 1), bpos(b, 1);\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < v1.size(); ++j)\n      if (v1[j] == i + 1) apos[j] = 0;\n    for (int j = 0; j < v2.size(); ++j)\n      if (v2[j] == i + 1) bpos[j] = 0;\n    if (apos[0] == 0 || bpos[0] == 0) v[i] = 2;\n    for (int j = 0; j < apos.size(); ++j)\n      if (apos[j] == 0) apos[j] = -1;\n    for (int j = 0; j < bpos.size(); ++j)\n      if (bpos[j] == 0) bpos[j] = -1;\n    if (apos[0] == -1 && bpos[0] == -1) v[i] = 1;\n  }\n  for (int i = 0; i < n; ++i) cout << v[i] << \" \";\n  return 0;\n}\n"}
{"src_uid": "a35a27754c9c095c6f1b2d4adccbfe93", "id": 5, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '4 2 3\\r\\n1 2\\r\\n2 3 4\\r\\n', 'output': ['1 1 2 2', '1  1  2  2', '1 2 2 2']}, {'input': '5 5 2\\r\\n3 4 1 2 5\\r\\n2 3\\r\\n', 'output': ['1 1 1 1 1', '1  1  1  1  1', '1 2 2 1 1']}, {'input': '100 69 31\\r\\n1 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 24 26 27 29 31 37 38 39 40 44 46 48 49 50 51 53 55 56 57 58 59 60 61 63 64 65 66 67 68 69 70 71 72 74 76 77 78 79 80 81 82 83 89 92 94 95 97 98 99 100\\r\\n2 13 22 23 25 28 30 32 33 34 35 36 41 42 43 45 47 52 54 62 73 75 84 85 86 87 88 90 91 93 96\\r\\n', 'output': ['1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 2 1 1 2 1 2 1 2 2 2 2 2 1 1 1 1 2 2 2 1 2 1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 2 2 2 2 1 2 2 1 2 1 1 2 1 1 1 1', '1  2  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  2  1  2  1  1  2  1  2  1  2  2  2  2  2  1  1  1  1  2  2  2  1  2  1  2  1  1  1  1  2  1  2  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  2  1  2  1  1  1  1  1  1  1  1  2  2  2  2  2  1  2  2  1  2  1  1  2  1  1  1  1']}, {'input': '100 56 44\\r\\n1 2 5 8 14 15 17 18 20 21 23 24 25 27 30 33 34 35 36 38 41 42 44 45 46 47 48 49 50 53 56 58 59 60 62 63 64 65 68 69 71 75 76 80 81 84 87 88 90 91 92 94 95 96 98 100\\r\\n3 4 6 7 9 10 11 12 13 16 19 22 26 28 29 31 32 37 39 40 43 51 52 54 55 57 61 66 67 70 72 73 74 77 78 79 82 83 85 86 89 93 97 99\\r\\n', 'output': ['1  1  2  2  1  2  2  1  2  2  2  2  2  1  1  2  1  1  2  1  1  2  1  1  1  2  1  2  2  1  2  2  1  1  1  1  2  1  2  2  1  1  2  1  1  1  1  1  1  1  2  2  1  2  2  1  2  1  1  1  2  1  1  1  1  2  2  1  1  2  1  2  2  2  1  1  2  2  2  1  1  2  2  1  2  2  1  1  2  1  1  1  2  1  1  1  2  1  2  1', '1 1 2 2 1 2 2 1 2 2 2 2 2 1 1 2 1 1 2 1 1 2 1 1 1 2 1 2 2 1 2 2 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 2 2 1 2 2 1 2 1 1 1 2 1 1 1 1 2 2 1 1 2 1 2 2 2 1 1 2 2 2 1 1 2 2 1 2 2 1 1 2 1 1 1 2 1 1 1 2 1 2 1']}, {'input': '100 82 18\\r\\n1 2 3 4 5 6 7 8 9 10 11 13 14 15 16 17 18 19 20 22 23 25 27 29 30 31 32 33 34 35 36 37 38 42 43 44 45 46 47 48 49 50 51 53 54 55 57 58 59 60 61 62 63 64 65 66 67 68 69 71 72 73 74 75 77 78 79 80 82 83 86 88 90 91 92 93 94 96 97 98 99 100\\r\\n12 21 24 26 28 39 40 41 52 56 70 76 81 84 85 87 89 95\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 1 2 1 2 1 1 1 1 1 2 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  2  1  2  1  2  1  1  1  1  1  1  1  1  1  1  2  2  2  1  1  1  1  1  1  1  1  1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  2  1  1  1  1  2  1  1  2  2  1  2  1  2  1  1  1  1  1  2  1  1  1  1  1']}, {'input': '99 72 27\\r\\n1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 17 20 23 25 26 28 29 30 32 33 34 35 36 39 41 42 43 44 45 46 47 50 51 52 54 55 56 58 59 60 61 62 67 70 71 72 74 75 76 77 80 81 82 84 85 86 88 90 91 92 93 94 95 96 97 98 99\\r\\n9 18 19 21 22 24 27 31 37 38 40 48 49 53 57 63 64 65 66 68 69 73 78 79 83 87 89\\r\\n', 'output': ['1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 2 2 1 2 1 1 2 1 1 1 2 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 1 2 1 1 1 1 1 2 2 2 2 1 2 2 1 1 1 2 1 1 1 1 2 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  2  1  2  2  1  2  1  1  2  1  1  1  2  1  1  1  1  1  2  2  1  2  1  1  1  1  1  1  1  2  2  1  1  1  2  1  1  1  2  1  1  1  1  1  2  2  2  2  1  2  2  1  1  1  2  1  1  1  1  2  2  1  1  1  2  1  1  1  2  1  2  1  1  1  1  1  1  1  1  1  1']}, {'input': '99 38 61\\r\\n1 3 10 15 16 22 23 28 31 34 35 36 37 38 39 43 44 49 50 53 56 60 63 68 69 70 72 74 75 77 80 81 83 85 96 97 98 99\\r\\n2 4 5 6 7 8 9 11 12 13 14 17 18 19 20 21 24 25 26 27 29 30 32 33 40 41 42 45 46 47 48 51 52 54 55 57 58 59 61 62 64 65 66 67 71 73 76 78 79 82 84 86 87 88 89 90 91 92 93 94 95\\r\\n', 'output': ['1  2  1  2  2  2  2  2  2  1  2  2  2  2  1  1  2  2  2  2  2  1  1  2  2  2  2  1  2  2  1  2  2  1  1  1  1  1  1  2  2  2  1  1  2  2  2  2  1  1  2  2  1  2  2  1  2  2  2  1  2  2  1  2  2  2  2  1  1  1  2  1  2  1  1  2  1  2  2  1  1  2  1  2  1  2  2  2  2  2  2  2  2  2  2  1  1  1  1', '1 2 1 2 2 2 2 2 2 1 2 2 2 2 1 1 2 2 2 2 2 1 1 2 2 2 2 1 2 2 1 2 2 1 1 1 1 1 1 2 2 2 1 1 2 2 2 2 1 1 2 2 1 2 2 1 2 2 2 1 2 2 1 2 2 2 2 1 1 1 2 1 2 1 1 2 1 2 2 1 1 2 1 2 1 2 2 2 2 2 2 2 2 2 2 1 1 1 1']}, {'input': '99 84 15\\r\\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 47 48 50 51 52 53 55 56 58 59 60 61 62 63 64 65 68 69 70 71 72 73 74 75 77 79 80 81 82 83 84 85 86 87 89 90 91 92 93 94 97 98 99\\r\\n4 18 33 45 46 49 54 57 66 67 76 78 88 95 96\\r\\n', 'output': ['1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  2  2  1  1  2  1  1  1  1  2  1  1  2  1  1  1  1  1  1  1  1  2  2  1  1  1  1  1  1  1  1  2  1  2  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  2  2  1  1  1', '1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 2 1 1 1']}, {'input': '4 3 1\\r\\n1 3 4\\r\\n2\\r\\n', 'output': ['1  2  1  1', '1 2 1 1']}, {'input': '4 3 1\\r\\n1 2 4\\r\\n3\\r\\n', 'output': ['1 1 2 1', '1  1  2  1']}, {'input': '4 2 2\\r\\n2 3\\r\\n1 4\\r\\n', 'output': ['2  1  1  2', '2 1 1 2']}, {'input': '4 3 1\\r\\n2 3 4\\r\\n1\\r\\n', 'output': ['2 1 1 1', '2  1  1  1']}, {'input': '1 1 1\\r\\n1\\r\\n1\\r\\n', 'output': ['1', '2']}, {'input': '2 1 1\\r\\n2\\r\\n1\\r\\n', 'output': ['2 1', '2  1']}, {'input': '2 1 1\\r\\n1\\r\\n2\\r\\n', 'output': ['1 2', '1  2']}, {'input': '3 3 1\\r\\n1 2 3\\r\\n1\\r\\n', 'output': ['2 1 1', '1 1 1', '1  1  1']}, {'input': '3 3 1\\r\\n1 2 3\\r\\n3\\r\\n', 'output': ['1 1 2', '1 1 1', '1  1  1']}, {'input': '3 2 1\\r\\n1 3\\r\\n2\\r\\n', 'output': ['1 2 1', '1  2  1']}, {'input': '100 1 100\\r\\n84\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n', 'output': ['2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2', '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2', '2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2']}, {'input': '100 100 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n17\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}, {'input': '98 51 47\\r\\n1 2 3 4 6 7 8 10 13 15 16 18 19 21 22 23 25 26 27 29 31 32 36 37 39 40 41 43 44 48 49 50 51 52 54 56 58 59 65 66 68 79 80 84 86 88 89 90 94 95 97\\r\\n5 9 11 12 14 17 20 24 28 30 33 34 35 38 42 45 46 47 53 55 57 60 61 62 63 64 67 69 70 71 72 73 74 75 76 77 78 81 82 83 85 87 91 92 93 96 98\\r\\n', 'output': ['1 1 1 1 2 1 1 1 2 1 2 2 1 2 1 1 2 1 1 2 1 1 1 2 1 1 1 2 1 2 1 1 2 2 2 1 1 2 1 1 1 2 1 1 2 2 2 1 1 1 1 1 2 1 2 1 2 1 1 2 2 2 2 2 1 1 2 1 2 2 2 2 2 2 2 2 2 2 1 1 2 2 2 1 2 1 2 1 1 1 2 2 2 1 1 2 1 2', '1  1  1  1  2  1  1  1  2  1  2  2  1  2  1  1  2  1  1  2  1  1  1  2  1  1  1  2  1  2  1  1  2  2  2  1  1  2  1  1  1  2  1  1  2  2  2  1  1  1  1  1  2  1  2  1  2  1  1  2  2  2  2  2  1  1  2  1  2  2  2  2  2  2  2  2  2  2  1  1  2  2  2  1  2  1  2  1  1  1  2  2  2  1  1  2  1  2']}, {'input': '98 28 70\\r\\n1 13 15 16 19 27 28 40 42 43 46 53 54 57 61 63 67 68 69 71 75 76 78 80 88 93 97 98\\r\\n2 3 4 5 6 7 8 9 10 11 12 14 17 18 20 21 22 23 24 25 26 29 30 31 32 33 34 35 36 37 38 39 41 44 45 47 48 49 50 51 52 55 56 58 59 60 62 64 65 66 70 72 73 74 77 79 81 82 83 84 85 86 87 89 90 91 92 94 95 96\\r\\n', 'output': ['1  2  2  2  2  2  2  2  2  2  2  2  1  2  1  1  2  2  1  2  2  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  2  1  2  1  1  2  2  1  2  2  2  2  2  2  1  1  2  2  1  2  2  2  1  2  1  2  2  2  1  1  1  2  1  2  2  2  1  1  2  1  2  1  2  2  2  2  2  2  2  1  2  2  2  2  1  2  2  2  1  1', '1 2 2 2 2 2 2 2 2 2 2 2 1 2 1 1 2 2 1 2 2 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 2 1 2 1 1 2 2 1 2 2 2 2 2 2 1 1 2 2 1 2 2 2 1 2 1 2 2 2 1 1 1 2 1 2 2 2 1 1 2 1 2 1 2 2 2 2 2 2 2 1 2 2 2 2 1 2 2 2 1 1']}, {'input': '97 21 76\\r\\n7 10 16 17 26 30 34 39 40 42 44 46 53 54 56 64 67 72 78 79 94\\r\\n1 2 3 4 5 6 8 9 11 12 13 14 15 18 19 20 21 22 23 24 25 27 28 29 31 32 33 35 36 37 38 41 43 45 47 48 49 50 51 52 55 57 58 59 60 61 62 63 65 66 68 69 70 71 73 74 75 76 77 80 81 82 83 84 85 86 87 88 89 90 91 92 93 95 96 97\\r\\n', 'output': ['2 2 2 2 2 2 1 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 1 2 2 2 1 2 2 2 1 2 2 2 2 1 1 2 1 2 1 2 1 2 2 2 2 2 2 1 1 2 1 2 2 2 2 2 2 2 1 2 2 1 2 2 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2', '2  2  2  2  2  2  1  2  2  1  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  1  2  2  2  1  2  2  2  1  2  2  2  2  1  1  2  1  2  1  2  1  2  2  2  2  2  2  1  1  2  1  2  2  2  2  2  2  2  1  2  2  1  2  2  2  2  1  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2']}, {'input': '97 21 76\\r\\n1 10 12 13 17 18 22 25 31 48 50 54 61 64 67 74 78 81 86 88 94\\r\\n2 3 4 5 6 7 8 9 11 14 15 16 19 20 21 23 24 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 49 51 52 53 55 56 57 58 59 60 62 63 65 66 68 69 70 71 72 73 75 76 77 79 80 82 83 84 85 87 89 90 91 92 93 95 96 97\\r\\n', 'output': ['1  2  2  2  2  2  2  2  2  1  2  1  1  2  2  2  1  1  2  2  2  1  2  2  1  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  1  2  2  2  1  2  2  2  2  2  2  1  2  2  1  2  2  1  2  2  2  2  2  2  1  2  2  2  1  2  2  1  2  2  2  2  1  2  1  2  2  2  2  2  1  2  2  2', '1 2 2 2 2 2 2 2 2 1 2 1 1 2 2 2 1 1 2 2 2 1 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 1 2 2 2 1 2 2 2 2 2 2 1 2 2 1 2 2 1 2 2 2 2 2 2 1 2 2 2 1 2 2 1 2 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2']}, {'input': '96 10 86\\r\\n2 5 31 37 68 69 80 82 90 91\\r\\n1 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 36 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 70 71 72 73 74 75 76 77 78 79 81 83 84 85 86 87 88 89 92 93 94 95 96\\r\\n', 'output': ['2 1 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 1 2 1 2 2 2 2 2 2 2 1 1 2 2 2 2 2', '2  1  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  1  2  1  2  2  2  2  2  2  2  1  1  2  2  2  2  2']}, {'input': '95 4 91\\r\\n58 65 70 93\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 59 60 61 62 63 64 66 67 68 69 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 94 95\\r\\n', 'output': ['2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  2  1  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2', '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 1 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2']}, {'input': '98 88 10\\r\\n1 2 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 62 63 64 65 66 67 68 69 71 72 73 74 75 76 77 79 80 81 83 84 85 86 87 88 89 90 92 93 94 95 96 97 98\\r\\n3 7 32 37 42 61 70 78 82 91\\r\\n', 'output': ['1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1', '1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  2  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1']}, {'input': '98 96 2\\r\\n1 2 3 4 5 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98\\r\\n6 7\\r\\n', 'output': ['1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  2  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '97 97 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97\\r\\n94\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '97 97 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97\\r\\n20\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '96 96 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96\\r\\n48\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}, {'input': '95 95 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95\\r\\n55\\r\\n', 'output': ['1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n, a, b;\n  vector<long long> aa;\n  cin >> n >> a >> b;\n  for (long long i = 0; i < a; i++) {\n    long long t;\n    cin >> t;\n    aa.push_back(t);\n  }\n  for (long long i = 0; i < b; i++) {\n    long long t;\n    cin >> t;\n  }\n  for (long long i = 0; i < n; i++) {\n    for (long long j = 0; j < aa.size(); j++) {\n      if (i + 1 == aa[j]) {\n        cout << 1 << \" \";\n        break;\n      }\n    }\n    if (i + 1!= aa[0]) {\n      cout << 2 << \" \";\n    }\n  }\n}\n"}
{"src_uid": "a35a27754c9c095c6f1b2d4adccbfe93", "id": 5, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '4 2 3\\r\\n1 2\\r\\n2 3 4\\r\\n', 'output': ['1 1 2 2', '1  1  2  2', '1 2 2 2']}, {'input': '5 5 2\\r\\n3 4 1 2 5\\r\\n2 3\\r\\n', 'output': ['1 1 1 1 1', '1  1  1  1  1', '1 2 2 1 1']}, {'input': '100 69 31\\r\\n1 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 24 26 27 29 31 37 38 39 40 44 46 48 49 50 51 53 55 56 57 58 59 60 61 63 64 65 66 67 68 69 70 71 72 74 76 77 78 79 80 81 82 83 89 92 94 95 97 98 99 100\\r\\n2 13 22 23 25 28 30 32 33 34 35 36 41 42 43 45 47 52 54 62 73 75 84 85 86 87 88 90 91 93 96\\r\\n', 'output': ['1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 2 1 1 2 1 2 1 2 2 2 2 2 1 1 1 1 2 2 2 1 2 1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 2 2 2 2 1 2 2 1 2 1 1 2 1 1 1 1', '1  2  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  2  1  2  1  1  2  1  2  1  2  2  2  2  2  1  1  1  1  2  2  2  1  2  1  2  1  1  1  1  2  1  2  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  2  1  2  1  1  1  1  1  1  1  1  2  2  2  2  2  1  2  2  1  2  1  1  2  1  1  1  1']}, {'input': '100 56 44\\r\\n1 2 5 8 14 15 17 18 20 21 23 24 25 27 30 33 34 35 36 38 41 42 44 45 46 47 48 49 50 53 56 58 59 60 62 63 64 65 68 69 71 75 76 80 81 84 87 88 90 91 92 94 95 96 98 100\\r\\n3 4 6 7 9 10 11 12 13 16 19 22 26 28 29 31 32 37 39 40 43 51 52 54 55 57 61 66 67 70 72 73 74 77 78 79 82 83 85 86 89 93 97 99\\r\\n', 'output': ['1  1  2  2  1  2  2  1  2  2  2  2  2  1  1  2  1  1  2  1  1  2  1  1  1  2  1  2  2  1  2  2  1  1  1  1  2  1  2  2  1  1  2  1  1  1  1  1  1  1  2  2  1  2  2  1  2  1  1  1  2  1  1  1  1  2  2  1  1  2  1  2  2  2  1  1  2  2  2  1  1  2  2  1  2  2  1  1  2  1  1  1  2  1  1  1  2  1  2  1', '1 1 2 2 1 2 2 1 2 2 2 2 2 1 1 2 1 1 2 1 1 2 1 1 1 2 1 2 2 1 2 2 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 2 2 1 2 2 1 2 1 1 1 2 1 1 1 1 2 2 1 1 2 1 2 2 2 1 1 2 2 2 1 1 2 2 1 2 2 1 1 2 1 1 1 2 1 1 1 2 1 2 1']}, {'input': '100 82 18\\r\\n1 2 3 4 5 6 7 8 9 10 11 13 14 15 16 17 18 19 20 22 23 25 27 29 30 31 32 33 34 35 36 37 38 42 43 44 45 46 47 48 49 50 51 53 54 55 57 58 59 60 61 62 63 64 65 66 67 68 69 71 72 73 74 75 77 78 79 80 82 83 86 88 90 91 92 93 94 96 97 98 99 100\\r\\n12 21 24 26 28 39 40 41 52 56 70 76 81 84 85 87 89 95\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 1 2 1 2 1 1 1 1 1 2 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  2  1  2  1  2  1  1  1  1  1  1  1  1  1  1  2  2  2  1  1  1  1  1  1  1  1  1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  2  1  1  1  1  2  1  1  2  2  1  2  1  2  1  1  1  1  1  2  1  1  1  1  1']}, {'input': '99 72 27\\r\\n1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 17 20 23 25 26 28 29 30 32 33 34 35 36 39 41 42 43 44 45 46 47 50 51 52 54 55 56 58 59 60 61 62 67 70 71 72 74 75 76 77 80 81 82 84 85 86 88 90 91 92 93 94 95 96 97 98 99\\r\\n9 18 19 21 22 24 27 31 37 38 40 48 49 53 57 63 64 65 66 68 69 73 78 79 83 87 89\\r\\n', 'output': ['1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 2 2 1 2 1 1 2 1 1 1 2 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 1 2 1 1 1 1 1 2 2 2 2 1 2 2 1 1 1 2 1 1 1 1 2 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  2  1  2  2  1  2  1  1  2  1  1  1  2  1  1  1  1  1  2  2  1  2  1  1  1  1  1  1  1  2  2  1  1  1  2  1  1  1  2  1  1  1  1  1  2  2  2  2  1  2  2  1  1  1  2  1  1  1  1  2  2  1  1  1  2  1  1  1  2  1  2  1  1  1  1  1  1  1  1  1  1']}, {'input': '99 38 61\\r\\n1 3 10 15 16 22 23 28 31 34 35 36 37 38 39 43 44 49 50 53 56 60 63 68 69 70 72 74 75 77 80 81 83 85 96 97 98 99\\r\\n2 4 5 6 7 8 9 11 12 13 14 17 18 19 20 21 24 25 26 27 29 30 32 33 40 41 42 45 46 47 48 51 52 54 55 57 58 59 61 62 64 65 66 67 71 73 76 78 79 82 84 86 87 88 89 90 91 92 93 94 95\\r\\n', 'output': ['1  2  1  2  2  2  2  2  2  1  2  2  2  2  1  1  2  2  2  2  2  1  1  2  2  2  2  1  2  2  1  2  2  1  1  1  1  1  1  2  2  2  1  1  2  2  2  2  1  1  2  2  1  2  2  1  2  2  2  1  2  2  1  2  2  2  2  1  1  1  2  1  2  1  1  2  1  2  2  1  1  2  1  2  1  2  2  2  2  2  2  2  2  2  2  1  1  1  1', '1 2 1 2 2 2 2 2 2 1 2 2 2 2 1 1 2 2 2 2 2 1 1 2 2 2 2 1 2 2 1 2 2 1 1 1 1 1 1 2 2 2 1 1 2 2 2 2 1 1 2 2 1 2 2 1 2 2 2 1 2 2 1 2 2 2 2 1 1 1 2 1 2 1 1 2 1 2 2 1 1 2 1 2 1 2 2 2 2 2 2 2 2 2 2 1 1 1 1']}, {'input': '99 84 15\\r\\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 47 48 50 51 52 53 55 56 58 59 60 61 62 63 64 65 68 69 70 71 72 73 74 75 77 79 80 81 82 83 84 85 86 87 89 90 91 92 93 94 97 98 99\\r\\n4 18 33 45 46 49 54 57 66 67 76 78 88 95 96\\r\\n', 'output': ['1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  2  2  1  1  2  1  1  1  1  2  1  1  2  1  1  1  1  1  1  1  1  2  2  1  1  1  1  1  1  1  1  2  1  2  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  2  2  1  1  1', '1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 2 1 1 1']}, {'input': '4 3 1\\r\\n1 3 4\\r\\n2\\r\\n', 'output': ['1  2  1  1', '1 2 1 1']}, {'input': '4 3 1\\r\\n1 2 4\\r\\n3\\r\\n', 'output': ['1 1 2 1', '1  1  2  1']}, {'input': '4 2 2\\r\\n2 3\\r\\n1 4\\r\\n', 'output': ['2  1  1  2', '2 1 1 2']}, {'input': '4 3 1\\r\\n2 3 4\\r\\n1\\r\\n', 'output': ['2 1 1 1', '2  1  1  1']}, {'input': '1 1 1\\r\\n1\\r\\n1\\r\\n', 'output': ['1', '2']}, {'input': '2 1 1\\r\\n2\\r\\n1\\r\\n', 'output': ['2 1', '2  1']}, {'input': '2 1 1\\r\\n1\\r\\n2\\r\\n', 'output': ['1 2', '1  2']}, {'input': '3 3 1\\r\\n1 2 3\\r\\n1\\r\\n', 'output': ['2 1 1', '1 1 1', '1  1  1']}, {'input': '3 3 1\\r\\n1 2 3\\r\\n3\\r\\n', 'output': ['1 1 2', '1 1 1', '1  1  1']}, {'input': '3 2 1\\r\\n1 3\\r\\n2\\r\\n', 'output': ['1 2 1', '1  2  1']}, {'input': '100 1 100\\r\\n84\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n', 'output': ['2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2', '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2', '2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2']}, {'input': '100 100 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n17\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}, {'input': '98 51 47\\r\\n1 2 3 4 6 7 8 10 13 15 16 18 19 21 22 23 25 26 27 29 31 32 36 37 39 40 41 43 44 48 49 50 51 52 54 56 58 59 65 66 68 79 80 84 86 88 89 90 94 95 97\\r\\n5 9 11 12 14 17 20 24 28 30 33 34 35 38 42 45 46 47 53 55 57 60 61 62 63 64 67 69 70 71 72 73 74 75 76 77 78 81 82 83 85 87 91 92 93 96 98\\r\\n', 'output': ['1 1 1 1 2 1 1 1 2 1 2 2 1 2 1 1 2 1 1 2 1 1 1 2 1 1 1 2 1 2 1 1 2 2 2 1 1 2 1 1 1 2 1 1 2 2 2 1 1 1 1 1 2 1 2 1 2 1 1 2 2 2 2 2 1 1 2 1 2 2 2 2 2 2 2 2 2 2 1 1 2 2 2 1 2 1 2 1 1 1 2 2 2 1 1 2 1 2', '1  1  1  1  2  1  1  1  2  1  2  2  1  2  1  1  2  1  1  2  1  1  1  2  1  1  1  2  1  2  1  1  2  2  2  1  1  2  1  1  1  2  1  1  2  2  2  1  1  1  1  1  2  1  2  1  2  1  1  2  2  2  2  2  1  1  2  1  2  2  2  2  2  2  2  2  2  2  1  1  2  2  2  1  2  1  2  1  1  1  2  2  2  1  1  2  1  2']}, {'input': '98 28 70\\r\\n1 13 15 16 19 27 28 40 42 43 46 53 54 57 61 63 67 68 69 71 75 76 78 80 88 93 97 98\\r\\n2 3 4 5 6 7 8 9 10 11 12 14 17 18 20 21 22 23 24 25 26 29 30 31 32 33 34 35 36 37 38 39 41 44 45 47 48 49 50 51 52 55 56 58 59 60 62 64 65 66 70 72 73 74 77 79 81 82 83 84 85 86 87 89 90 91 92 94 95 96\\r\\n', 'output': ['1  2  2  2  2  2  2  2  2  2  2  2  1  2  1  1  2  2  1  2  2  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  2  1  2  1  1  2  2  1  2  2  2  2  2  2  1  1  2  2  1  2  2  2  1  2  1  2  2  2  1  1  1  2  1  2  2  2  1  1  2  1  2  1  2  2  2  2  2  2  2  1  2  2  2  2  1  2  2  2  1  1', '1 2 2 2 2 2 2 2 2 2 2 2 1 2 1 1 2 2 1 2 2 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 2 1 2 1 1 2 2 1 2 2 2 2 2 2 1 1 2 2 1 2 2 2 1 2 1 2 2 2 1 1 1 2 1 2 2 2 1 1 2 1 2 1 2 2 2 2 2 2 2 1 2 2 2 2 1 2 2 2 1 1']}, {'input': '97 21 76\\r\\n7 10 16 17 26 30 34 39 40 42 44 46 53 54 56 64 67 72 78 79 94\\r\\n1 2 3 4 5 6 8 9 11 12 13 14 15 18 19 20 21 22 23 24 25 27 28 29 31 32 33 35 36 37 38 41 43 45 47 48 49 50 51 52 55 57 58 59 60 61 62 63 65 66 68 69 70 71 73 74 75 76 77 80 81 82 83 84 85 86 87 88 89 90 91 92 93 95 96 97\\r\\n', 'output': ['2 2 2 2 2 2 1 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 1 2 2 2 1 2 2 2 1 2 2 2 2 1 1 2 1 2 1 2 1 2 2 2 2 2 2 1 1 2 1 2 2 2 2 2 2 2 1 2 2 1 2 2 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2', '2  2  2  2  2  2  1  2  2  1  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  1  2  2  2  1  2  2  2  1  2  2  2  2  1  1  2  1  2  1  2  1  2  2  2  2  2  2  1  1  2  1  2  2  2  2  2  2  2  1  2  2  1  2  2  2  2  1  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2']}, {'input': '97 21 76\\r\\n1 10 12 13 17 18 22 25 31 48 50 54 61 64 67 74 78 81 86 88 94\\r\\n2 3 4 5 6 7 8 9 11 14 15 16 19 20 21 23 24 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 49 51 52 53 55 56 57 58 59 60 62 63 65 66 68 69 70 71 72 73 75 76 77 79 80 82 83 84 85 87 89 90 91 92 93 95 96 97\\r\\n', 'output': ['1  2  2  2  2  2  2  2  2  1  2  1  1  2  2  2  1  1  2  2  2  1  2  2  1  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  1  2  2  2  1  2  2  2  2  2  2  1  2  2  1  2  2  1  2  2  2  2  2  2  1  2  2  2  1  2  2  1  2  2  2  2  1  2  1  2  2  2  2  2  1  2  2  2', '1 2 2 2 2 2 2 2 2 1 2 1 1 2 2 2 1 1 2 2 2 1 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 1 2 2 2 1 2 2 2 2 2 2 1 2 2 1 2 2 1 2 2 2 2 2 2 1 2 2 2 1 2 2 1 2 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2']}, {'input': '96 10 86\\r\\n2 5 31 37 68 69 80 82 90 91\\r\\n1 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 36 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 70 71 72 73 74 75 76 77 78 79 81 83 84 85 86 87 88 89 92 93 94 95 96\\r\\n', 'output': ['2 1 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 1 2 1 2 2 2 2 2 2 2 1 1 2 2 2 2 2', '2  1  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  1  2  1  2  2  2  2  2  2  2  1  1  2  2  2  2  2']}, {'input': '95 4 91\\r\\n58 65 70 93\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 59 60 61 62 63 64 66 67 68 69 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 94 95\\r\\n', 'output': ['2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  2  1  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2', '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 1 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2']}, {'input': '98 88 10\\r\\n1 2 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 62 63 64 65 66 67 68 69 71 72 73 74 75 76 77 79 80 81 83 84 85 86 87 88 89 90 92 93 94 95 96 97 98\\r\\n3 7 32 37 42 61 70 78 82 91\\r\\n', 'output': ['1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1', '1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  2  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1']}, {'input': '98 96 2\\r\\n1 2 3 4 5 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98\\r\\n6 7\\r\\n', 'output': ['1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  2  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '97 97 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97\\r\\n94\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '97 97 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97\\r\\n20\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '96 96 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96\\r\\n48\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}, {'input': '95 95 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95\\r\\n55\\r\\n', 'output': ['1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a, b;\n  cin >> n >> a >> b;\n  int *masA = new int[a];\n  int *masB = new int[b];\n  for (int i = 0; i < a; i++) {\n    cin >> masA[i];\n  }\n  for (int i = 0; i < b; i++) {\n    cin >> masB[i];\n  }\n  int t = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 0; j < a; j++) {\n      if (masA[j] == i) {\n        cout << 1 << \" \";\n        t++;\n        break;\n      }\n    }\n    for (int j = 0; j < b; j++) {\n      if (masB[j] == i) {\n        cout << 2 << \" \";\n        t++;\n        break;\n      }\n    }\n  }\n  while (t!= n) {\n    for (int i = 0; i < a; i++) {\n      if (masA[i] == n) {\n        cout << 1 << \" \";\n        t++;\n        masA[i] = 0;\n        break;\n      }\n    }\n    for (int i = 0; i < b; i++) {\n      if (masB[i] == n) {\n        cout << 2 << \" \";\n        t++;\n        masB[i] = 0;\n        break;\n      }\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "bdd86c8bc54bbac6e2bb5a9d68b6eb1c", "id": 6, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '3\\r\\n3 1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n2 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n5 3 3 3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '5\\r\\n6 6 6 6 6\\r\\n', 'output': ['5\\r\\n']}, {'input': '10\\r\\n1 1 2 2 8 8 7 7 9 9\\r\\n', 'output': ['5\\r\\n']}, {'input': '8\\r\\n9 8 7 6 5 4 3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '15\\r\\n1 2 3 4 5 5 4 3 2 1 1 2 3 4 5\\r\\n', 'output': ['10\\r\\n']}, {'input': '1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '1\\r\\n5000\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n5000 5000 5000 5000\\r\\n', 'output': ['4\\r\\n']}, {'input': '5\\r\\n3366 3461 4 5 4370\\r\\n', 'output': ['3\\r\\n']}, {'input': '10\\r\\n8 2 10 3 4 6 1 7 9 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '10\\r\\n551 3192 3213 2846 3068 1224 3447 1 10 9\\r\\n', 'output': ['7\\r\\n']}, {'input': '15\\r\\n4 1459 12 4281 3241 2748 10 3590 14 845 3518 1721 2 2880 1974\\r\\n', 'output': ['10\\r\\n']}, {'input': '15\\r\\n15 1 8 2 13 11 12 7 3 14 6 10 9 4 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '15\\r\\n2436 2354 4259 1210 2037 2665 700 3578 2880 973 1317 1024 24 3621 4142\\r\\n', 'output': ['15\\r\\n']}, {'input': '30\\r\\n28 1 3449 9 3242 4735 26 3472 15 21 2698 7 4073 3190 10 3 29 1301 4526 22 345 3876 19 12 4562 2535 2 630 18 27\\r\\n', 'output': ['14\\r\\n']}, {'input': '100\\r\\n50 39 95 30 66 78 2169 4326 81 31 74 34 80 40 19 48 97 63 82 6 88 16 21 57 92 77 10 1213 17 93 32 91 38 4375 29 75 44 22 4 45 14 2395 3254 59 3379 2 85 96 8 83 27 94 1512 2960 100 9 73 79 7 25 55 69 90 99 51 87 98 62 18 35 43 4376 4668 28 72 56 4070 61 65 36 54 4106 11 24 15 86 70 71 4087 23 13 76 20 4694 26 4962 4726 37 14 64\\r\\n', 'output': ['18\\r\\n']}, {'input': '100\\r\\n340 14 3275 2283 2673 1107 817 2243 1226 32 2382 3638 4652 418 68 4962 387 764 4647 159 1846 225 2760 4904 3150 403 3 2439 91 4428 92 4705 75 348 1566 1465 69 6 49 4 62 4643 564 1090 3447 1871 2255 139 24 99 2669 969 86 61 4550 158 4537 3993 1589 872 2907 1888 401 80 1825 1483 63 1 2264 4068 4113 2548 41 885 4806 36 67 167 4447 34 1248 2593 82 202 81 1783 1284 4973 16 43 95 7 865 2091 3008 1793 20 947 4912 3604\\r\\n', 'output': ['70\\r\\n']}, {'input': '1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n5000 5000\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n1 2 3 4 5 6 7 1000 10 10\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long power(long long x, long long y, long long p) {\n  long long res = 1;\n  x = x % p;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % p;\n    y = y >> 1;\n    x = (x * x) % p;\n  }\n  return res;\n}\nint main() {\n  int i, j, n, m, k;\n  scanf(\"%d\", &n);\n  int arr[5005];\n  int count = 0;\n  for (int i = 0; i < n; i++) scanf(\"%d\", &arr[i]);\n  for (int i = 1; i <= n; i++) {\n    int f = 0;\n    for (int j = 0; j < n; j++) {\n      if (arr[j] == i) f = 1;\n    }\n    if (!f) count++;\n  }\n  printf(\"%d\\n\", count);\n}\n"}
{"src_uid": "bdd86c8bc54bbac6e2bb5a9d68b6eb1c", "id": 6, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '3\\r\\n3 1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n2 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n5 3 3 3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '5\\r\\n6 6 6 6 6\\r\\n', 'output': ['5\\r\\n']}, {'input': '10\\r\\n1 1 2 2 8 8 7 7 9 9\\r\\n', 'output': ['5\\r\\n']}, {'input': '8\\r\\n9 8 7 6 5 4 3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '15\\r\\n1 2 3 4 5 5 4 3 2 1 1 2 3 4 5\\r\\n', 'output': ['10\\r\\n']}, {'input': '1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '1\\r\\n5000\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n5000 5000 5000 5000\\r\\n', 'output': ['4\\r\\n']}, {'input': '5\\r\\n3366 3461 4 5 4370\\r\\n', 'output': ['3\\r\\n']}, {'input': '10\\r\\n8 2 10 3 4 6 1 7 9 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '10\\r\\n551 3192 3213 2846 3068 1224 3447 1 10 9\\r\\n', 'output': ['7\\r\\n']}, {'input': '15\\r\\n4 1459 12 4281 3241 2748 10 3590 14 845 3518 1721 2 2880 1974\\r\\n', 'output': ['10\\r\\n']}, {'input': '15\\r\\n15 1 8 2 13 11 12 7 3 14 6 10 9 4 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '15\\r\\n2436 2354 4259 1210 2037 2665 700 3578 2880 973 1317 1024 24 3621 4142\\r\\n', 'output': ['15\\r\\n']}, {'input': '30\\r\\n28 1 3449 9 3242 4735 26 3472 15 21 2698 7 4073 3190 10 3 29 1301 4526 22 345 3876 19 12 4562 2535 2 630 18 27\\r\\n', 'output': ['14\\r\\n']}, {'input': '100\\r\\n50 39 95 30 66 78 2169 4326 81 31 74 34 80 40 19 48 97 63 82 6 88 16 21 57 92 77 10 1213 17 93 32 91 38 4375 29 75 44 22 4 45 14 2395 3254 59 3379 2 85 96 8 83 27 94 1512 2960 100 9 73 79 7 25 55 69 90 99 51 87 98 62 18 35 43 4376 4668 28 72 56 4070 61 65 36 54 4106 11 24 15 86 70 71 4087 23 13 76 20 4694 26 4962 4726 37 14 64\\r\\n', 'output': ['18\\r\\n']}, {'input': '100\\r\\n340 14 3275 2283 2673 1107 817 2243 1226 32 2382 3638 4652 418 68 4962 387 764 4647 159 1846 225 2760 4904 3150 403 3 2439 91 4428 92 4705 75 348 1566 1465 69 6 49 4 62 4643 564 1090 3447 1871 2255 139 24 99 2669 969 86 61 4550 158 4537 3993 1589 872 2907 1888 401 80 1825 1483 63 1 2264 4068 4113 2548 41 885 4806 36 67 167 4447 34 1248 2593 82 202 81 1783 1284 4973 16 43 95 7 865 2091 3008 1793 20 947 4912 3604\\r\\n', 'output': ['70\\r\\n']}, {'input': '1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n5000 5000\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n1 2 3 4 5 6 7 1000 10 10\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[5001], cnt[5001];\nbool visited[5001];\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    cnt[a[i]]++;\n  }\n  int ans = 0;\n  for (int i = 1; i <= 5000; i++)\n    if (cnt[i] < i) ans += i - cnt[i];\n  cout << ans;\n  return 0;\n}\n"}
{"src_uid": "bdd86c8bc54bbac6e2bb5a9d68b6eb1c", "id": 6, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '3\\r\\n3 1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n2 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n5 3 3 3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '5\\r\\n6 6 6 6 6\\r\\n', 'output': ['5\\r\\n']}, {'input': '10\\r\\n1 1 2 2 8 8 7 7 9 9\\r\\n', 'output': ['5\\r\\n']}, {'input': '8\\r\\n9 8 7 6 5 4 3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '15\\r\\n1 2 3 4 5 5 4 3 2 1 1 2 3 4 5\\r\\n', 'output': ['10\\r\\n']}, {'input': '1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '1\\r\\n5000\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n5000 5000 5000 5000\\r\\n', 'output': ['4\\r\\n']}, {'input': '5\\r\\n3366 3461 4 5 4370\\r\\n', 'output': ['3\\r\\n']}, {'input': '10\\r\\n8 2 10 3 4 6 1 7 9 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '10\\r\\n551 3192 3213 2846 3068 1224 3447 1 10 9\\r\\n', 'output': ['7\\r\\n']}, {'input': '15\\r\\n4 1459 12 4281 3241 2748 10 3590 14 845 3518 1721 2 2880 1974\\r\\n', 'output': ['10\\r\\n']}, {'input': '15\\r\\n15 1 8 2 13 11 12 7 3 14 6 10 9 4 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '15\\r\\n2436 2354 4259 1210 2037 2665 700 3578 2880 973 1317 1024 24 3621 4142\\r\\n', 'output': ['15\\r\\n']}, {'input': '30\\r\\n28 1 3449 9 3242 4735 26 3472 15 21 2698 7 4073 3190 10 3 29 1301 4526 22 345 3876 19 12 4562 2535 2 630 18 27\\r\\n', 'output': ['14\\r\\n']}, {'input': '100\\r\\n50 39 95 30 66 78 2169 4326 81 31 74 34 80 40 19 48 97 63 82 6 88 16 21 57 92 77 10 1213 17 93 32 91 38 4375 29 75 44 22 4 45 14 2395 3254 59 3379 2 85 96 8 83 27 94 1512 2960 100 9 73 79 7 25 55 69 90 99 51 87 98 62 18 35 43 4376 4668 28 72 56 4070 61 65 36 54 4106 11 24 15 86 70 71 4087 23 13 76 20 4694 26 4962 4726 37 14 64\\r\\n', 'output': ['18\\r\\n']}, {'input': '100\\r\\n340 14 3275 2283 2673 1107 817 2243 1226 32 2382 3638 4652 418 68 4962 387 764 4647 159 1846 225 2760 4904 3150 403 3 2439 91 4428 92 4705 75 348 1566 1465 69 6 49 4 62 4643 564 1090 3447 1871 2255 139 24 99 2669 969 86 61 4550 158 4537 3993 1589 872 2907 1888 401 80 1825 1483 63 1 2264 4068 4113 2548 41 885 4806 36 67 167 4447 34 1248 2593 82 202 81 1783 1284 4973 16 43 95 7 865 2091 3008 1793 20 947 4912 3604\\r\\n', 'output': ['70\\r\\n']}, {'input': '1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n5000 5000\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n1 2 3 4 5 6 7 1000 10 10\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint N, a[5005], s;\nint main() {\n  scanf(\"%d\", &N);\n  for (int i = 1; i <= N; i++) {\n    scanf(\"%d\", &a[i]);\n    if (a[i] == i) s++;\n  }\n  printf(\"%d\", max(N - s, 0));\n}\n"}
{"src_uid": "bdd86c8bc54bbac6e2bb5a9d68b6eb1c", "id": 6, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '3\\r\\n3 1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n2 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n5 3 3 3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '5\\r\\n6 6 6 6 6\\r\\n', 'output': ['5\\r\\n']}, {'input': '10\\r\\n1 1 2 2 8 8 7 7 9 9\\r\\n', 'output': ['5\\r\\n']}, {'input': '8\\r\\n9 8 7 6 5 4 3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '15\\r\\n1 2 3 4 5 5 4 3 2 1 1 2 3 4 5\\r\\n', 'output': ['10\\r\\n']}, {'input': '1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '1\\r\\n5000\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n5000 5000 5000 5000\\r\\n', 'output': ['4\\r\\n']}, {'input': '5\\r\\n3366 3461 4 5 4370\\r\\n', 'output': ['3\\r\\n']}, {'input': '10\\r\\n8 2 10 3 4 6 1 7 9 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '10\\r\\n551 3192 3213 2846 3068 1224 3447 1 10 9\\r\\n', 'output': ['7\\r\\n']}, {'input': '15\\r\\n4 1459 12 4281 3241 2748 10 3590 14 845 3518 1721 2 2880 1974\\r\\n', 'output': ['10\\r\\n']}, {'input': '15\\r\\n15 1 8 2 13 11 12 7 3 14 6 10 9 4 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '15\\r\\n2436 2354 4259 1210 2037 2665 700 3578 2880 973 1317 1024 24 3621 4142\\r\\n', 'output': ['15\\r\\n']}, {'input': '30\\r\\n28 1 3449 9 3242 4735 26 3472 15 21 2698 7 4073 3190 10 3 29 1301 4526 22 345 3876 19 12 4562 2535 2 630 18 27\\r\\n', 'output': ['14\\r\\n']}, {'input': '100\\r\\n50 39 95 30 66 78 2169 4326 81 31 74 34 80 40 19 48 97 63 82 6 88 16 21 57 92 77 10 1213 17 93 32 91 38 4375 29 75 44 22 4 45 14 2395 3254 59 3379 2 85 96 8 83 27 94 1512 2960 100 9 73 79 7 25 55 69 90 99 51 87 98 62 18 35 43 4376 4668 28 72 56 4070 61 65 36 54 4106 11 24 15 86 70 71 4087 23 13 76 20 4694 26 4962 4726 37 14 64\\r\\n', 'output': ['18\\r\\n']}, {'input': '100\\r\\n340 14 3275 2283 2673 1107 817 2243 1226 32 2382 3638 4652 418 68 4962 387 764 4647 159 1846 225 2760 4904 3150 403 3 2439 91 4428 92 4705 75 348 1566 1465 69 6 49 4 62 4643 564 1090 3447 1871 2255 139 24 99 2669 969 86 61 4550 158 4537 3993 1589 872 2907 1888 401 80 1825 1483 63 1 2264 4068 4113 2548 41 885 4806 36 67 167 4447 34 1248 2593 82 202 81 1783 1284 4973 16 43 95 7 865 2091 3008 1793 20 947 4912 3604\\r\\n', 'output': ['70\\r\\n']}, {'input': '1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n5000 5000\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n1 2 3 4 5 6 7 1000 10 10\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[5000];\nint main() {\n  int n;\n  cin >> n;\n  set<int> set;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    set.insert(arr[i]);\n  }\n  sort(arr, arr + n);\n  int ans = 0;\n  int p = 1;\n  for (int i = 0; i < n; i++) {\n    if (arr[i]!= p) ans++;\n    p++;\n    p = min(p, n + 1);\n  }\n  int num = n - set.size();\n  cout << num + ans << endl;\n  return 0;\n}\n"}
{"src_uid": "bdd86c8bc54bbac6e2bb5a9d68b6eb1c", "id": 6, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '3\\r\\n3 1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n2 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n5 3 3 3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '5\\r\\n6 6 6 6 6\\r\\n', 'output': ['5\\r\\n']}, {'input': '10\\r\\n1 1 2 2 8 8 7 7 9 9\\r\\n', 'output': ['5\\r\\n']}, {'input': '8\\r\\n9 8 7 6 5 4 3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '15\\r\\n1 2 3 4 5 5 4 3 2 1 1 2 3 4 5\\r\\n', 'output': ['10\\r\\n']}, {'input': '1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '1\\r\\n5000\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n5000 5000 5000 5000\\r\\n', 'output': ['4\\r\\n']}, {'input': '5\\r\\n3366 3461 4 5 4370\\r\\n', 'output': ['3\\r\\n']}, {'input': '10\\r\\n8 2 10 3 4 6 1 7 9 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '10\\r\\n551 3192 3213 2846 3068 1224 3447 1 10 9\\r\\n', 'output': ['7\\r\\n']}, {'input': '15\\r\\n4 1459 12 4281 3241 2748 10 3590 14 845 3518 1721 2 2880 1974\\r\\n', 'output': ['10\\r\\n']}, {'input': '15\\r\\n15 1 8 2 13 11 12 7 3 14 6 10 9 4 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '15\\r\\n2436 2354 4259 1210 2037 2665 700 3578 2880 973 1317 1024 24 3621 4142\\r\\n', 'output': ['15\\r\\n']}, {'input': '30\\r\\n28 1 3449 9 3242 4735 26 3472 15 21 2698 7 4073 3190 10 3 29 1301 4526 22 345 3876 19 12 4562 2535 2 630 18 27\\r\\n', 'output': ['14\\r\\n']}, {'input': '100\\r\\n50 39 95 30 66 78 2169 4326 81 31 74 34 80 40 19 48 97 63 82 6 88 16 21 57 92 77 10 1213 17 93 32 91 38 4375 29 75 44 22 4 45 14 2395 3254 59 3379 2 85 96 8 83 27 94 1512 2960 100 9 73 79 7 25 55 69 90 99 51 87 98 62 18 35 43 4376 4668 28 72 56 4070 61 65 36 54 4106 11 24 15 86 70 71 4087 23 13 76 20 4694 26 4962 4726 37 14 64\\r\\n', 'output': ['18\\r\\n']}, {'input': '100\\r\\n340 14 3275 2283 2673 1107 817 2243 1226 32 2382 3638 4652 418 68 4962 387 764 4647 159 1846 225 2760 4904 3150 403 3 2439 91 4428 92 4705 75 348 1566 1465 69 6 49 4 62 4643 564 1090 3447 1871 2255 139 24 99 2669 969 86 61 4550 158 4537 3993 1589 872 2907 1888 401 80 1825 1483 63 1 2264 4068 4113 2548 41 885 4806 36 67 167 4447 34 1248 2593 82 202 81 1783 1284 4973 16 43 95 7 865 2091 3008 1793 20 947 4912 3604\\r\\n', 'output': ['70\\r\\n']}, {'input': '1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n5000 5000\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n1 2 3 4 5 6 7 1000 10 10\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a[5001];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  int num[10000];\n  memset(num, 0, sizeof(num));\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n    num[a[i]]++;\n  }\n  int ans = 0;\n  for (int i = 1; i <= n; ++i) {\n    if (num[i] == 0) ans++;\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "46bfdec9bfc1e91bd2f5022f3d3c8ce7", "id": 7, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1\\r\\n2\\r\\n3\\r\\n4\\r\\n12\\r\\n', 'output': ['12']}, {'input': '2\\r\\n3\\r\\n4\\r\\n5\\r\\n24\\r\\n', 'output': ['17']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n100000\\r\\n', 'output': ['100000']}, {'input': '10\\r\\n9\\r\\n8\\r\\n7\\r\\n6\\r\\n', 'output': ['0']}, {'input': '8\\r\\n4\\r\\n4\\r\\n3\\r\\n65437\\r\\n', 'output': ['32718']}, {'input': '8\\r\\n4\\r\\n1\\r\\n10\\r\\n59392\\r\\n', 'output': ['59392']}, {'input': '4\\r\\n1\\r\\n8\\r\\n7\\r\\n44835\\r\\n', 'output': ['44835']}, {'input': '6\\r\\n1\\r\\n7\\r\\n2\\r\\n62982\\r\\n', 'output': ['62982']}, {'input': '2\\r\\n7\\r\\n4\\r\\n9\\r\\n56937\\r\\n', 'output': ['35246']}, {'input': '2\\r\\n9\\r\\n8\\r\\n1\\r\\n75083\\r\\n', 'output': ['75083']}, {'input': '8\\r\\n7\\r\\n7\\r\\n6\\r\\n69038\\r\\n', 'output': ['24656']}, {'input': '4\\r\\n4\\r\\n2\\r\\n3\\r\\n54481\\r\\n', 'output': ['36320']}, {'input': '6\\r\\n4\\r\\n9\\r\\n8\\r\\n72628\\r\\n', 'output': ['28244']}, {'input': '9\\r\\n7\\r\\n8\\r\\n10\\r\\n42357\\r\\n', 'output': ['16540']}, {'input': '5\\r\\n6\\r\\n4\\r\\n3\\r\\n60504\\r\\n', 'output': ['36302']}, {'input': '7\\r\\n2\\r\\n3\\r\\n8\\r\\n21754\\r\\n', 'output': ['15539']}, {'input': '1\\r\\n2\\r\\n10\\r\\n4\\r\\n39901\\r\\n', 'output': ['39901']}, {'input': '3\\r\\n4\\r\\n7\\r\\n1\\r\\n58048\\r\\n', 'output': ['58048']}, {'input': '9\\r\\n10\\r\\n4\\r\\n6\\r\\n52003\\r\\n', 'output': ['21956']}, {'input': '5\\r\\n10\\r\\n9\\r\\n3\\r\\n70149\\r\\n', 'output': ['32736']}, {'input': '5\\r\\n5\\r\\n5\\r\\n10\\r\\n55592\\r\\n', 'output': ['11118']}, {'input': '1\\r\\n5\\r\\n2\\r\\n6\\r\\n49547\\r\\n', 'output': ['49547']}, {'input': '3\\r\\n7\\r\\n7\\r\\n7\\r\\n84046\\r\\n', 'output': ['36019']}, {'input': '10\\r\\n2\\r\\n1\\r\\n8\\r\\n63537\\r\\n', 'output': ['63537']}, {'input': '7\\r\\n2\\r\\n10\\r\\n5\\r\\n81684\\r\\n', 'output': ['53678']}, {'input': '7\\r\\n1\\r\\n6\\r\\n8\\r\\n99831\\r\\n', 'output': ['99831']}, {'input': '3\\r\\n9\\r\\n3\\r\\n3\\r\\n61082\\r\\n', 'output': ['20360']}, {'input': '5\\r\\n5\\r\\n8\\r\\n9\\r\\n79228\\r\\n', 'output': ['29931']}, {'input': '1\\r\\n5\\r\\n5\\r\\n6\\r\\n89535\\r\\n', 'output': ['89535']}, {'input': '5\\r\\n5\\r\\n2\\r\\n1\\r\\n7682\\r\\n', 'output': ['7682']}, {'input': '7\\r\\n4\\r\\n8\\r\\n8\\r\\n25829\\r\\n', 'output': ['9224']}, {'input': '3\\r\\n4\\r\\n3\\r\\n3\\r\\n87079\\r\\n', 'output': ['43539']}, {'input': '5\\r\\n8\\r\\n4\\r\\n9\\r\\n5226\\r\\n', 'output': ['2438']}, {'input': '4\\r\\n9\\r\\n6\\r\\n6\\r\\n1070\\r\\n', 'output': ['415']}, {'input': '10\\r\\n10\\r\\n10\\r\\n10\\r\\n100000\\r\\n', 'output': ['10000']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'output': ['1']}, {'input': '10\\r\\n10\\r\\n10\\r\\n10\\r\\n1\\r\\n', 'output': ['0']}, {'input': '10\\r\\n10\\r\\n1\\r\\n10\\r\\n10\\r\\n', 'output': ['10']}, {'input': '10\\r\\n10\\r\\n1\\r\\n10\\r\\n100\\r\\n', 'output': ['100']}, {'input': '2\\r\\n2\\r\\n2\\r\\n2\\r\\n1\\r\\n', 'output': ['0']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int arr[] = {0,  2,  4,  6,  8, 10, 12, 14, 16, 18, 20};\n  int a, b, c, d, e;\n  cin >> a >> b >> c >> d >> e;\n  cout << e - (e - 1) / arr[a] * arr[b] * arr[c] * arr[d] << endl;\n  return 0;\n}\n"}
{"src_uid": "46bfdec9bfc1e91bd2f5022f3d3c8ce7", "id": 7, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1\\r\\n2\\r\\n3\\r\\n4\\r\\n12\\r\\n', 'output': ['12']}, {'input': '2\\r\\n3\\r\\n4\\r\\n5\\r\\n24\\r\\n', 'output': ['17']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n100000\\r\\n', 'output': ['100000']}, {'input': '10\\r\\n9\\r\\n8\\r\\n7\\r\\n6\\r\\n', 'output': ['0']}, {'input': '8\\r\\n4\\r\\n4\\r\\n3\\r\\n65437\\r\\n', 'output': ['32718']}, {'input': '8\\r\\n4\\r\\n1\\r\\n10\\r\\n59392\\r\\n', 'output': ['59392']}, {'input': '4\\r\\n1\\r\\n8\\r\\n7\\r\\n44835\\r\\n', 'output': ['44835']}, {'input': '6\\r\\n1\\r\\n7\\r\\n2\\r\\n62982\\r\\n', 'output': ['62982']}, {'input': '2\\r\\n7\\r\\n4\\r\\n9\\r\\n56937\\r\\n', 'output': ['35246']}, {'input': '2\\r\\n9\\r\\n8\\r\\n1\\r\\n75083\\r\\n', 'output': ['75083']}, {'input': '8\\r\\n7\\r\\n7\\r\\n6\\r\\n69038\\r\\n', 'output': ['24656']}, {'input': '4\\r\\n4\\r\\n2\\r\\n3\\r\\n54481\\r\\n', 'output': ['36320']}, {'input': '6\\r\\n4\\r\\n9\\r\\n8\\r\\n72628\\r\\n', 'output': ['28244']}, {'input': '9\\r\\n7\\r\\n8\\r\\n10\\r\\n42357\\r\\n', 'output': ['16540']}, {'input': '5\\r\\n6\\r\\n4\\r\\n3\\r\\n60504\\r\\n', 'output': ['36302']}, {'input': '7\\r\\n2\\r\\n3\\r\\n8\\r\\n21754\\r\\n', 'output': ['15539']}, {'input': '1\\r\\n2\\r\\n10\\r\\n4\\r\\n39901\\r\\n', 'output': ['39901']}, {'input': '3\\r\\n4\\r\\n7\\r\\n1\\r\\n58048\\r\\n', 'output': ['58048']}, {'input': '9\\r\\n10\\r\\n4\\r\\n6\\r\\n52003\\r\\n', 'output': ['21956']}, {'input': '5\\r\\n10\\r\\n9\\r\\n3\\r\\n70149\\r\\n', 'output': ['32736']}, {'input': '5\\r\\n5\\r\\n5\\r\\n10\\r\\n55592\\r\\n', 'output': ['11118']}, {'input': '1\\r\\n5\\r\\n2\\r\\n6\\r\\n49547\\r\\n', 'output': ['49547']}, {'input': '3\\r\\n7\\r\\n7\\r\\n7\\r\\n84046\\r\\n', 'output': ['36019']}, {'input': '10\\r\\n2\\r\\n1\\r\\n8\\r\\n63537\\r\\n', 'output': ['63537']}, {'input': '7\\r\\n2\\r\\n10\\r\\n5\\r\\n81684\\r\\n', 'output': ['53678']}, {'input': '7\\r\\n1\\r\\n6\\r\\n8\\r\\n99831\\r\\n', 'output': ['99831']}, {'input': '3\\r\\n9\\r\\n3\\r\\n3\\r\\n61082\\r\\n', 'output': ['20360']}, {'input': '5\\r\\n5\\r\\n8\\r\\n9\\r\\n79228\\r\\n', 'output': ['29931']}, {'input': '1\\r\\n5\\r\\n5\\r\\n6\\r\\n89535\\r\\n', 'output': ['89535']}, {'input': '5\\r\\n5\\r\\n2\\r\\n1\\r\\n7682\\r\\n', 'output': ['7682']}, {'input': '7\\r\\n4\\r\\n8\\r\\n8\\r\\n25829\\r\\n', 'output': ['9224']}, {'input': '3\\r\\n4\\r\\n3\\r\\n3\\r\\n87079\\r\\n', 'output': ['43539']}, {'input': '5\\r\\n8\\r\\n4\\r\\n9\\r\\n5226\\r\\n', 'output': ['2438']}, {'input': '4\\r\\n9\\r\\n6\\r\\n6\\r\\n1070\\r\\n', 'output': ['415']}, {'input': '10\\r\\n10\\r\\n10\\r\\n10\\r\\n100000\\r\\n', 'output': ['10000']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'output': ['1']}, {'input': '10\\r\\n10\\r\\n10\\r\\n10\\r\\n1\\r\\n', 'output': ['0']}, {'input': '10\\r\\n10\\r\\n1\\r\\n10\\r\\n10\\r\\n', 'output': ['10']}, {'input': '10\\r\\n10\\r\\n1\\r\\n10\\r\\n100\\r\\n', 'output': ['100']}, {'input': '2\\r\\n2\\r\\n2\\r\\n2\\r\\n1\\r\\n', 'output': ['0']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  ;\n  int k, l, m, n;\n  int d, ans;\n  cin >> k >> l >> m >> n >> d;\n  ans = d;\n  ans -= d / k;\n  ans -= d / l;\n  ans -= d / m;\n  ans -= d / n;\n  cout << ans << '\\n';\n}\n"}
{"src_uid": "46bfdec9bfc1e91bd2f5022f3d3c8ce7", "id": 7, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1\\r\\n2\\r\\n3\\r\\n4\\r\\n12\\r\\n', 'output': ['12']}, {'input': '2\\r\\n3\\r\\n4\\r\\n5\\r\\n24\\r\\n', 'output': ['17']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n100000\\r\\n', 'output': ['100000']}, {'input': '10\\r\\n9\\r\\n8\\r\\n7\\r\\n6\\r\\n', 'output': ['0']}, {'input': '8\\r\\n4\\r\\n4\\r\\n3\\r\\n65437\\r\\n', 'output': ['32718']}, {'input': '8\\r\\n4\\r\\n1\\r\\n10\\r\\n59392\\r\\n', 'output': ['59392']}, {'input': '4\\r\\n1\\r\\n8\\r\\n7\\r\\n44835\\r\\n', 'output': ['44835']}, {'input': '6\\r\\n1\\r\\n7\\r\\n2\\r\\n62982\\r\\n', 'output': ['62982']}, {'input': '2\\r\\n7\\r\\n4\\r\\n9\\r\\n56937\\r\\n', 'output': ['35246']}, {'input': '2\\r\\n9\\r\\n8\\r\\n1\\r\\n75083\\r\\n', 'output': ['75083']}, {'input': '8\\r\\n7\\r\\n7\\r\\n6\\r\\n69038\\r\\n', 'output': ['24656']}, {'input': '4\\r\\n4\\r\\n2\\r\\n3\\r\\n54481\\r\\n', 'output': ['36320']}, {'input': '6\\r\\n4\\r\\n9\\r\\n8\\r\\n72628\\r\\n', 'output': ['28244']}, {'input': '9\\r\\n7\\r\\n8\\r\\n10\\r\\n42357\\r\\n', 'output': ['16540']}, {'input': '5\\r\\n6\\r\\n4\\r\\n3\\r\\n60504\\r\\n', 'output': ['36302']}, {'input': '7\\r\\n2\\r\\n3\\r\\n8\\r\\n21754\\r\\n', 'output': ['15539']}, {'input': '1\\r\\n2\\r\\n10\\r\\n4\\r\\n39901\\r\\n', 'output': ['39901']}, {'input': '3\\r\\n4\\r\\n7\\r\\n1\\r\\n58048\\r\\n', 'output': ['58048']}, {'input': '9\\r\\n10\\r\\n4\\r\\n6\\r\\n52003\\r\\n', 'output': ['21956']}, {'input': '5\\r\\n10\\r\\n9\\r\\n3\\r\\n70149\\r\\n', 'output': ['32736']}, {'input': '5\\r\\n5\\r\\n5\\r\\n10\\r\\n55592\\r\\n', 'output': ['11118']}, {'input': '1\\r\\n5\\r\\n2\\r\\n6\\r\\n49547\\r\\n', 'output': ['49547']}, {'input': '3\\r\\n7\\r\\n7\\r\\n7\\r\\n84046\\r\\n', 'output': ['36019']}, {'input': '10\\r\\n2\\r\\n1\\r\\n8\\r\\n63537\\r\\n', 'output': ['63537']}, {'input': '7\\r\\n2\\r\\n10\\r\\n5\\r\\n81684\\r\\n', 'output': ['53678']}, {'input': '7\\r\\n1\\r\\n6\\r\\n8\\r\\n99831\\r\\n', 'output': ['99831']}, {'input': '3\\r\\n9\\r\\n3\\r\\n3\\r\\n61082\\r\\n', 'output': ['20360']}, {'input': '5\\r\\n5\\r\\n8\\r\\n9\\r\\n79228\\r\\n', 'output': ['29931']}, {'input': '1\\r\\n5\\r\\n5\\r\\n6\\r\\n89535\\r\\n', 'output': ['89535']}, {'input': '5\\r\\n5\\r\\n2\\r\\n1\\r\\n7682\\r\\n', 'output': ['7682']}, {'input': '7\\r\\n4\\r\\n8\\r\\n8\\r\\n25829\\r\\n', 'output': ['9224']}, {'input': '3\\r\\n4\\r\\n3\\r\\n3\\r\\n87079\\r\\n', 'output': ['43539']}, {'input': '5\\r\\n8\\r\\n4\\r\\n9\\r\\n5226\\r\\n', 'output': ['2438']}, {'input': '4\\r\\n9\\r\\n6\\r\\n6\\r\\n1070\\r\\n', 'output': ['415']}, {'input': '10\\r\\n10\\r\\n10\\r\\n10\\r\\n100000\\r\\n', 'output': ['10000']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'output': ['1']}, {'input': '10\\r\\n10\\r\\n10\\r\\n10\\r\\n1\\r\\n', 'output': ['0']}, {'input': '10\\r\\n10\\r\\n1\\r\\n10\\r\\n10\\r\\n', 'output': ['10']}, {'input': '10\\r\\n10\\r\\n1\\r\\n10\\r\\n100\\r\\n', 'output': ['100']}, {'input': '2\\r\\n2\\r\\n2\\r\\n2\\r\\n1\\r\\n', 'output': ['0']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int k, l, m, n, d, r = 0;\n  cin >> k >> l >> m >> n >> d;\n  for (int i = 1; i <= d; i++) {\n    if (i % k == 0 || i % l == 0 || i % m == 0 || i % n == 0) r++;\n  }\n  cout << d - r << endl;\n  return 0;\n}\n"}
{"src_uid": "46bfdec9bfc1e91bd2f5022f3d3c8ce7", "id": 7, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1\\r\\n2\\r\\n3\\r\\n4\\r\\n12\\r\\n', 'output': ['12']}, {'input': '2\\r\\n3\\r\\n4\\r\\n5\\r\\n24\\r\\n', 'output': ['17']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n100000\\r\\n', 'output': ['100000']}, {'input': '10\\r\\n9\\r\\n8\\r\\n7\\r\\n6\\r\\n', 'output': ['0']}, {'input': '8\\r\\n4\\r\\n4\\r\\n3\\r\\n65437\\r\\n', 'output': ['32718']}, {'input': '8\\r\\n4\\r\\n1\\r\\n10\\r\\n59392\\r\\n', 'output': ['59392']}, {'input': '4\\r\\n1\\r\\n8\\r\\n7\\r\\n44835\\r\\n', 'output': ['44835']}, {'input': '6\\r\\n1\\r\\n7\\r\\n2\\r\\n62982\\r\\n', 'output': ['62982']}, {'input': '2\\r\\n7\\r\\n4\\r\\n9\\r\\n56937\\r\\n', 'output': ['35246']}, {'input': '2\\r\\n9\\r\\n8\\r\\n1\\r\\n75083\\r\\n', 'output': ['75083']}, {'input': '8\\r\\n7\\r\\n7\\r\\n6\\r\\n69038\\r\\n', 'output': ['24656']}, {'input': '4\\r\\n4\\r\\n2\\r\\n3\\r\\n54481\\r\\n', 'output': ['36320']}, {'input': '6\\r\\n4\\r\\n9\\r\\n8\\r\\n72628\\r\\n', 'output': ['28244']}, {'input': '9\\r\\n7\\r\\n8\\r\\n10\\r\\n42357\\r\\n', 'output': ['16540']}, {'input': '5\\r\\n6\\r\\n4\\r\\n3\\r\\n60504\\r\\n', 'output': ['36302']}, {'input': '7\\r\\n2\\r\\n3\\r\\n8\\r\\n21754\\r\\n', 'output': ['15539']}, {'input': '1\\r\\n2\\r\\n10\\r\\n4\\r\\n39901\\r\\n', 'output': ['39901']}, {'input': '3\\r\\n4\\r\\n7\\r\\n1\\r\\n58048\\r\\n', 'output': ['58048']}, {'input': '9\\r\\n10\\r\\n4\\r\\n6\\r\\n52003\\r\\n', 'output': ['21956']}, {'input': '5\\r\\n10\\r\\n9\\r\\n3\\r\\n70149\\r\\n', 'output': ['32736']}, {'input': '5\\r\\n5\\r\\n5\\r\\n10\\r\\n55592\\r\\n', 'output': ['11118']}, {'input': '1\\r\\n5\\r\\n2\\r\\n6\\r\\n49547\\r\\n', 'output': ['49547']}, {'input': '3\\r\\n7\\r\\n7\\r\\n7\\r\\n84046\\r\\n', 'output': ['36019']}, {'input': '10\\r\\n2\\r\\n1\\r\\n8\\r\\n63537\\r\\n', 'output': ['63537']}, {'input': '7\\r\\n2\\r\\n10\\r\\n5\\r\\n81684\\r\\n', 'output': ['53678']}, {'input': '7\\r\\n1\\r\\n6\\r\\n8\\r\\n99831\\r\\n', 'output': ['99831']}, {'input': '3\\r\\n9\\r\\n3\\r\\n3\\r\\n61082\\r\\n', 'output': ['20360']}, {'input': '5\\r\\n5\\r\\n8\\r\\n9\\r\\n79228\\r\\n', 'output': ['29931']}, {'input': '1\\r\\n5\\r\\n5\\r\\n6\\r\\n89535\\r\\n', 'output': ['89535']}, {'input': '5\\r\\n5\\r\\n2\\r\\n1\\r\\n7682\\r\\n', 'output': ['7682']}, {'input': '7\\r\\n4\\r\\n8\\r\\n8\\r\\n25829\\r\\n', 'output': ['9224']}, {'input': '3\\r\\n4\\r\\n3\\r\\n3\\r\\n87079\\r\\n', 'output': ['43539']}, {'input': '5\\r\\n8\\r\\n4\\r\\n9\\r\\n5226\\r\\n', 'output': ['2438']}, {'input': '4\\r\\n9\\r\\n6\\r\\n6\\r\\n1070\\r\\n', 'output': ['415']}, {'input': '10\\r\\n10\\r\\n10\\r\\n10\\r\\n100000\\r\\n', 'output': ['10000']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'output': ['1']}, {'input': '10\\r\\n10\\r\\n10\\r\\n10\\r\\n1\\r\\n', 'output': ['0']}, {'input': '10\\r\\n10\\r\\n1\\r\\n10\\r\\n10\\r\\n', 'output': ['10']}, {'input': '10\\r\\n10\\r\\n1\\r\\n10\\r\\n100\\r\\n', 'output': ['100']}, {'input': '2\\r\\n2\\r\\n2\\r\\n2\\r\\n1\\r\\n', 'output': ['0']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long k, l, m, n, d, ans = 0;\n  cin >> k >> l >> m >> n >> d;\n  for (long long i = 0; i < d; i++) {\n    if (i % k == 0 || i % l == 0 || i % m == 0 || i % n == 0) ans++;\n  }\n  cout << d - ans << endl;\n}\n"}
{"src_uid": "46bfdec9bfc1e91bd2f5022f3d3c8ce7", "id": 7, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1\\r\\n2\\r\\n3\\r\\n4\\r\\n12\\r\\n', 'output': ['12']}, {'input': '2\\r\\n3\\r\\n4\\r\\n5\\r\\n24\\r\\n', 'output': ['17']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n100000\\r\\n', 'output': ['100000']}, {'input': '10\\r\\n9\\r\\n8\\r\\n7\\r\\n6\\r\\n', 'output': ['0']}, {'input': '8\\r\\n4\\r\\n4\\r\\n3\\r\\n65437\\r\\n', 'output': ['32718']}, {'input': '8\\r\\n4\\r\\n1\\r\\n10\\r\\n59392\\r\\n', 'output': ['59392']}, {'input': '4\\r\\n1\\r\\n8\\r\\n7\\r\\n44835\\r\\n', 'output': ['44835']}, {'input': '6\\r\\n1\\r\\n7\\r\\n2\\r\\n62982\\r\\n', 'output': ['62982']}, {'input': '2\\r\\n7\\r\\n4\\r\\n9\\r\\n56937\\r\\n', 'output': ['35246']}, {'input': '2\\r\\n9\\r\\n8\\r\\n1\\r\\n75083\\r\\n', 'output': ['75083']}, {'input': '8\\r\\n7\\r\\n7\\r\\n6\\r\\n69038\\r\\n', 'output': ['24656']}, {'input': '4\\r\\n4\\r\\n2\\r\\n3\\r\\n54481\\r\\n', 'output': ['36320']}, {'input': '6\\r\\n4\\r\\n9\\r\\n8\\r\\n72628\\r\\n', 'output': ['28244']}, {'input': '9\\r\\n7\\r\\n8\\r\\n10\\r\\n42357\\r\\n', 'output': ['16540']}, {'input': '5\\r\\n6\\r\\n4\\r\\n3\\r\\n60504\\r\\n', 'output': ['36302']}, {'input': '7\\r\\n2\\r\\n3\\r\\n8\\r\\n21754\\r\\n', 'output': ['15539']}, {'input': '1\\r\\n2\\r\\n10\\r\\n4\\r\\n39901\\r\\n', 'output': ['39901']}, {'input': '3\\r\\n4\\r\\n7\\r\\n1\\r\\n58048\\r\\n', 'output': ['58048']}, {'input': '9\\r\\n10\\r\\n4\\r\\n6\\r\\n52003\\r\\n', 'output': ['21956']}, {'input': '5\\r\\n10\\r\\n9\\r\\n3\\r\\n70149\\r\\n', 'output': ['32736']}, {'input': '5\\r\\n5\\r\\n5\\r\\n10\\r\\n55592\\r\\n', 'output': ['11118']}, {'input': '1\\r\\n5\\r\\n2\\r\\n6\\r\\n49547\\r\\n', 'output': ['49547']}, {'input': '3\\r\\n7\\r\\n7\\r\\n7\\r\\n84046\\r\\n', 'output': ['36019']}, {'input': '10\\r\\n2\\r\\n1\\r\\n8\\r\\n63537\\r\\n', 'output': ['63537']}, {'input': '7\\r\\n2\\r\\n10\\r\\n5\\r\\n81684\\r\\n', 'output': ['53678']}, {'input': '7\\r\\n1\\r\\n6\\r\\n8\\r\\n99831\\r\\n', 'output': ['99831']}, {'input': '3\\r\\n9\\r\\n3\\r\\n3\\r\\n61082\\r\\n', 'output': ['20360']}, {'input': '5\\r\\n5\\r\\n8\\r\\n9\\r\\n79228\\r\\n', 'output': ['29931']}, {'input': '1\\r\\n5\\r\\n5\\r\\n6\\r\\n89535\\r\\n', 'output': ['89535']}, {'input': '5\\r\\n5\\r\\n2\\r\\n1\\r\\n7682\\r\\n', 'output': ['7682']}, {'input': '7\\r\\n4\\r\\n8\\r\\n8\\r\\n25829\\r\\n', 'output': ['9224']}, {'input': '3\\r\\n4\\r\\n3\\r\\n3\\r\\n87079\\r\\n', 'output': ['43539']}, {'input': '5\\r\\n8\\r\\n4\\r\\n9\\r\\n5226\\r\\n', 'output': ['2438']}, {'input': '4\\r\\n9\\r\\n6\\r\\n6\\r\\n1070\\r\\n', 'output': ['415']}, {'input': '10\\r\\n10\\r\\n10\\r\\n10\\r\\n100000\\r\\n', 'output': ['10000']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'output': ['1']}, {'input': '10\\r\\n10\\r\\n10\\r\\n10\\r\\n1\\r\\n', 'output': ['0']}, {'input': '10\\r\\n10\\r\\n1\\r\\n10\\r\\n10\\r\\n', 'output': ['10']}, {'input': '10\\r\\n10\\r\\n1\\r\\n10\\r\\n100\\r\\n', 'output': ['100']}, {'input': '2\\r\\n2\\r\\n2\\r\\n2\\r\\n1\\r\\n', 'output': ['0']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int k, l, m, n, d, i, j;\n  bool b[1000000] = {false};\n  for (i = 0; i < 1000000; i++) {\n    b[i] = true;\n  }\n  scanf(\"%d\", &k);\n  scanf(\"%d\", &l);\n  scanf(\"%d\", &m);\n  scanf(\"%d\", &n);\n  scanf(\"%d\", &d);\n  for (i = 0; i < d; i++) {\n    if (b[(i + 1) / k % 10 + 1] && b[(i + 1) / l % 10 + 1] &&\n        b[(i + 1) / m % 10 + 1] && b[(i + 1) / n % 10 + 1]) {\n      b[i + 1] = false;\n    }\n  }\n  j = 0;\n  for (i = 1; i <= d; i++) {\n    if (b[i]) {\n      j++;\n    }\n  }\n  printf(\"%d\\n\", j);\n  return 0;\n}\n"}
{"src_uid": "9c90974a0bb860a5e180760042fd5045", "id": 8, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '3 3\\r\\ncba\\r\\nbcd\\r\\ncbc\\r\\n', 'output': ['abcd']}, {'input': '5 5\\r\\nfcofd\\r\\nooedo\\r\\nafaoa\\r\\nrdcdf\\r\\neofsf\\r\\n', 'output': ['codeforces']}, {'input': '4 4\\r\\nusah\\r\\nusha\\r\\nhasu\\r\\nsuha\\r\\n', 'output': ['ahhasusu']}, {'input': '7 5\\r\\naabcd\\r\\neffgh\\r\\niijkk\\r\\nlmnoo\\r\\npqqrs\\r\\nttuvw\\r\\nxxyyz\\r\\n', 'output': ['bcdeghjlmnprsuvwz']}, {'input': '10 10\\r\\naaaaaaaaaa\\r\\nbccceeeeee\\r\\ncdfffffffe\\r\\ncdfiiiiile\\r\\ncdfjjjjile\\r\\ndddddddile\\r\\nedfkkkkile\\r\\nedddddddde\\r\\ngggggggggg\\r\\nhhhhhhhhhe\\r\\n', 'output': ['b']}, {'input': '15 3\\r\\njhg\\r\\njkn\\r\\njui\\r\\nfth\\r\\noij\\r\\nyuf\\r\\nyfb\\r\\nugd\\r\\nhgd\\r\\noih\\r\\nhvc\\r\\nugg\\r\\nyvv\\r\\ntdg\\r\\nhgf\\r\\n', 'output': ['hkniftjfbctd']}, {'input': '17 19\\r\\nbmzbmweyydiadtlcoue\\r\\ngmdbyfwurpwbpuvhifn\\r\\nuapwyndmhtqvkgkbhty\\r\\ntszotwflegsjzzszfwt\\r\\nzfpnscguemwrczqxyci\\r\\nvdqnkypnxnnpmuduhzn\\r\\noaquudhavrncwfwujpc\\r\\nmiggjmcmkkbnjfeodxk\\r\\ngjgwxtrxingiqquhuwq\\r\\nhdswxxrxuzzfhkplwun\\r\\nfagppcoildagktgdarv\\r\\neusjuqfistulgbglwmf\\r\\ngzrnyxryetwzhlnfewc\\r\\nzmnoozlqatugmdjwgzc\\r\\nfabbkoxyjxkatjmpprs\\r\\nwkdkobdagwdwxsufees\\r\\nrvncbszcepigpbzuzoo\\r\\n', 'output': ['lcorviunqvgblgjfsgmrqxyivyxodhvrjpicbneodxjtfkpolvejqmllqadjwotmbgxrvs']}, {'input': '1 1\\r\\na\\r\\n', 'output': ['a']}, {'input': '2 2\\r\\nzx\\r\\nxz\\r\\n', 'output': ['zxxz']}, {'input': '1 2\\r\\nfg\\r\\n', 'output': ['fg']}, {'input': '2 1\\r\\nh\\r\\nj\\r\\n', 'output': ['hj']}, {'input': '1 3\\r\\niji\\r\\n', 'output': ['j']}, {'input': '3 1\\r\\nk\\r\\np\\r\\nk\\r\\n', 'output': ['p']}, {'input': '2 3\\r\\nmhw\\r\\nbfq\\r\\n', 'output': ['mhwbfq']}, {'input': '3 2\\r\\nxe\\r\\ner\\r\\nwb\\r\\n', 'output': ['xeerwb']}, {'input': '3 7\\r\\nnutuvjg\\r\\ntgqutfn\\r\\nyfjeiot\\r\\n', 'output': ['ntvjggqfnyfjeiot']}, {'input': '5 4\\r\\nuzvs\\r\\namfz\\r\\nwypl\\r\\nxizp\\r\\nfhmf\\r\\n', 'output': ['uzvsamfzwyplxizphm']}, {'input': '8 9\\r\\ntjqrtgrem\\r\\nrwjcfuoey\\r\\nywrjgpzca\\r\\nwabzggojv\\r\\najqmmcclh\\r\\nozilebskd\\r\\nqmgnbmtcq\\r\\nwakptzkjr\\r\\n', 'output': ['mrjcfuyyrjpzabzvalhozilebskdgnbtpzr']}, {'input': '9 3\\r\\njel\\r\\njws\\r\\ntab\\r\\nvyo\\r\\nkgm\\r\\npls\\r\\nabq\\r\\nbjx\\r\\nljt\\r\\n', 'output': ['elwtabvyokgmplabqbxlt']}, {'input': '7 6\\r\\neklgxi\\r\\nxmpzgf\\r\\nxvwcmr\\r\\nrqssed\\r\\nouiqpt\\r\\ndueiok\\r\\nbbuorv\\r\\n', 'output': ['eklgximpzgfvwcmrrqedoiqptdeiokuorv']}, {'input': '14 27\\r\\npzoshpvvjdpmwfoeojapmkxjrnk\\r\\nitoojpcorxjdxrwyewtmmlhjxhx\\r\\ndoyopbwusgsmephixzcilxpskxh\\r\\nygpvepeuxjbnezdrnjfwdhjwjka\\r\\nrfjlbypoalbtjwrpjxzenmeipfg\\r\\nkhjhrtktcnajrnbefhpavxxfnlx\\r\\nvwlwumqpfegjgvoezevqsolaqhh\\r\\npdrvrtzqsoujqfeitkqgtxwckrl\\r\\nxtepjflcxcrfomhqimhimnzfxzg\\r\\nwhkfkfvvjwkmwhfgeovwowshyhw\\r\\nolchgmhiehumivswgtfyhqfagbp\\r\\ntdudrkttpkryvaiepsijuejqvmq\\r\\nmuratfqqdbfpefmhjzercortroh\\r\\nwxkebkzchupxumfizftgqvuwgau\\r\\n', 'output': ['zshdanicdyldybwgclygzrhkayatwxznmicbpvlupfsoewcleploqngsyolceswtyqbpyasmuadbpcehqva']}, {'input': '1 100\\r\\nysijllpanprcrrtvokqmmupuptvawhvnekeybdkzqaduotmkfwybqvytkbjfzyqztmxckizheorvkhtyoohbswcmhknyzlgxordu\\r\\n', 'output': ['g']}, {'input': '2 100\\r\\ngplwoaggwuxzutpwnmxhotbexntzmitmcvnvmuxknwvcrnsagvdojdgaccfbheqojgcqievijxapvepwqolmnjqsbejtnkaifstp\\r\\noictcmphxbrylaarcwpruiastazvmfhlcgticvwhpxyiiqokxcjgwlnfykkqdsfmrfaedzchrfzlwdclqjxvidhomhxqnlmuoowg\\r\\n', 'output': ['rbe']}, {'input': '3 100\\r\\nonmhsoxoexfwavmamoecptondioxdjsoxfuqxkjviqnjukwqjwfadnohueaxrkreycicgxpmogijgejxsprwiweyvwembluwwqhj\\r\\nuofldyjyuhzgmkeurawgsrburovdppzjiyddpzxslhyesvmuwlgdjvzjqqcpubfgxliulyvxxloqyhxspoxvhllbrajlommpghlv\\r\\nvdohhghjlvihrzmwskxfatoodupmnouwyyfarhihxpdnbwrvrysrpxxptdidpqabwbfnxhiziiiqtozqjtnitgepxjxosspsjldo\\r\\n', 'output': ['blkck']}, {'input': '100 1\\r\\na\\r\\nm\\r\\nn\\r\\nh\\r\\na\\r\\nx\\r\\nt\\r\\na\\r\\no\\r\\np\\r\\nj\\r\\nz\\r\\nr\\r\\nk\\r\\nq\\r\\nl\\r\\nb\\r\\nr\\r\\no\\r\\ni\\r\\ny\\r\\ni\\r\\np\\r\\ni\\r\\nt\\r\\nn\\r\\nd\\r\\nc\\r\\nz\\r\\np\\r\\nu\\r\\nn\\r\\nw\\r\\ny\\r\\ng\\r\\ns\\r\\nt\\r\\nm\\r\\nz\\r\\ne\\r\\nv\\r\\ng\\r\\ny\\r\\nj\\r\\nd\\r\\nz\\r\\ny\\r\\na\\r\\nn\\r\\nx\\r\\nk\\r\\nd\\r\\nq\\r\\nn\\r\\nv\\r\\ng\\r\\nk\\r\\ni\\r\\nk\\r\\nf\\r\\na\\r\\nb\\r\\nw\\r\\no\\r\\nu\\r\\nw\\r\\nk\\r\\nk\\r\\nb\\r\\nz\\r\\nu\\r\\ni\\r\\nu\\r\\nv\\r\\ng\\r\\nv\\r\\nx\\r\\ng\\r\\np\\r\\ni\\r\\nz\\r\\ns\\r\\nv\\r\\nq\\r\\ns\\r\\nb\\r\\nw\\r\\ne\\r\\np\\r\\nk\\r\\nt\\r\\np\\r\\nd\\r\\nr\\r\\ng\\r\\nd\\r\\nk\\r\\nm\\r\\nf\\r\\nd\\r\\n', 'output': ['hlc']}, {'input': '100 2\\r\\nhd\\r\\ngx\\r\\nmz\\r\\nbq\\r\\nof\\r\\nst\\r\\nzc\\r\\ndg\\r\\nth\\r\\nba\\r\\new\\r\\nbw\\r\\noc\\r\\now\\r\\nvh\\r\\nqp\\r\\nin\\r\\neh\\r\\npj\\r\\nat\\r\\nnn\\r\\nbr\\r\\nij\\r\\nco\\r\\nlv\\r\\nsa\\r\\ntb\\r\\nbl\\r\\nsr\\r\\nxa\\r\\nbz\\r\\nrp\\r\\nsz\\r\\noi\\r\\nec\\r\\npw\\r\\nhf\\r\\njm\\r\\nwu\\r\\nhq\\r\\nra\\r\\npv\\r\\ntc\\r\\ngv\\r\\nik\\r\\nux\\r\\ntz\\r\\nbf\\r\\nty\\r\\ndk\\r\\nwo\\r\\nor\\r\\nza\\r\\nkv\\r\\nqt\\r\\nfa\\r\\njy\\r\\nbk\\r\\nuv\\r\\ngk\\r\\ncz\\r\\nds\\r\\nie\\r\\noq\\r\\nmf\\r\\nxn\\r\\nql\\r\\nxs\\r\\nfb\\r\\niv\\r\\ncj\\r\\nkn\\r\\nns\\r\\nlg\\r\\nji\\r\\nha\\r\\naj\\r\\ndg\\r\\nfj\\r\\nut\\r\\nsg\\r\\nju\\r\\noc\\r\\nov\\r\\nhe\\r\\nnw\\r\\nbl\\r\\nlp\\r\\nbx\\r\\nnm\\r\\nyq\\r\\ncw\\r\\nov\\r\\nxk\\r\\npg\\r\\noh\\r\\npl\\r\\nuo\\r\\ngf\\r\\nul\\r\\n', 'output': ['dvy']}, {'input': '100 3\\r\\nruy\\r\\nmye\\r\\njgp\\r\\nscn\\r\\nktq\\r\\nalx\\r\\nmvk\\r\\nlpm\\r\\nkry\\r\\norb\\r\\nmpu\\r\\nzcv\\r\\nlge\\r\\nkft\\r\\ndzp\\r\\ntfb\\r\\nhqz\\r\\nuur\\r\\nhry\\r\\nzjx\\r\\ncuo\\r\\nqqc\\r\\ntih\\r\\nenj\\r\\nvnp\\r\\nbwi\\r\\nzzh\\r\\nhkc\\r\\nwdr\\r\\nldh\\r\\nvel\\r\\nizj\\r\\nfhb\\r\\nqrn\\r\\nqpp\\r\\nvzs\\r\\nlhg\\r\\nkee\\r\\nlbq\\r\\nzhy\\r\\nwcl\\r\\nyaa\\r\\nton\\r\\nfly\\r\\nkyw\\r\\nept\\r\\ngwq\\r\\ncoe\\r\\nopd\\r\\neez\\r\\nnmx\\r\\nnjg\\r\\nwhy\\r\\nvel\\r\\nafq\\r\\nnbq\\r\\nulx\\r\\noxs\\r\\nbbo\\r\\nyhx\\r\\nfmz\\r\\nnrg\\r\\nnfm\\r\\njek\\r\\nbeu\\r\\ntya\\r\\nxgs\\r\\nsgg\\r\\nnkq\\r\\nbbv\\r\\nwkd\\r\\ntns\\r\\nfdt\\r\\neox\\r\\nobc\\r\\neab\\r\\nkkj\\r\\noub\\r\\ngji\\r\\nrht\\r\\nozv\\r\\nysk\\r\\nsbt\\r\\nflf\\r\\npbu\\r\\nlxb\\r\\npzs\\r\\nrzh\\r\\ncea\\r\\nkmi\\r\\nuea\\r\\nncc\\r\\nzng\\r\\nvkn\\r\\njhn\\r\\njqw\\r\\nlqc\\r\\nmbt\\r\\nlov\\r\\ngam\\r\\n', 'output': ['tvdiixs']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m;\nchar mat[101][101];\nbool used[26];\nvoid solve() {\n  cin >> n >> m;\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++) cin >> mat[i][j];\n  for (int i = 0; i < m; i++)\n    for (int j = 0; j < n; j++) {\n      int c = mat[j][i] - 'a';\n      if (used[c]) continue;\n      bool flag = true;\n      for (int i1 = 0; i1 < m; i1++) {\n        if (i1 == i) continue;\n        int c1 = mat[j][i1] - 'a';\n        if (used[c1]) {\n          flag = false;\n          break;\n        }\n      }\n      if (!flag) continue;\n      for (int j1 = 0; j1 < n; j1++) {\n        if (j1 == j) continue;\n        int c1 = mat[j1][i] - 'a';\n        if (used[c1]) {\n          flag = false;\n          break;\n        }\n      }\n      if (!flag) continue;\n      used[c] = true;\n    }\n  for (int c = 0; c < 26; c++) {\n    if (used[c]) cout << (char)(c + 'a');\n  }\n  cout << endl;\n}\nint main() {\n  solve();\n  return 0;\n}\n"}
{"src_uid": "9c90974a0bb860a5e180760042fd5045", "id": 8, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '3 3\\r\\ncba\\r\\nbcd\\r\\ncbc\\r\\n', 'output': ['abcd']}, {'input': '5 5\\r\\nfcofd\\r\\nooedo\\r\\nafaoa\\r\\nrdcdf\\r\\neofsf\\r\\n', 'output': ['codeforces']}, {'input': '4 4\\r\\nusah\\r\\nusha\\r\\nhasu\\r\\nsuha\\r\\n', 'output': ['ahhasusu']}, {'input': '7 5\\r\\naabcd\\r\\neffgh\\r\\niijkk\\r\\nlmnoo\\r\\npqqrs\\r\\nttuvw\\r\\nxxyyz\\r\\n', 'output': ['bcdeghjlmnprsuvwz']}, {'input': '10 10\\r\\naaaaaaaaaa\\r\\nbccceeeeee\\r\\ncdfffffffe\\r\\ncdfiiiiile\\r\\ncdfjjjjile\\r\\ndddddddile\\r\\nedfkkkkile\\r\\nedddddddde\\r\\ngggggggggg\\r\\nhhhhhhhhhe\\r\\n', 'output': ['b']}, {'input': '15 3\\r\\njhg\\r\\njkn\\r\\njui\\r\\nfth\\r\\noij\\r\\nyuf\\r\\nyfb\\r\\nugd\\r\\nhgd\\r\\noih\\r\\nhvc\\r\\nugg\\r\\nyvv\\r\\ntdg\\r\\nhgf\\r\\n', 'output': ['hkniftjfbctd']}, {'input': '17 19\\r\\nbmzbmweyydiadtlcoue\\r\\ngmdbyfwurpwbpuvhifn\\r\\nuapwyndmhtqvkgkbhty\\r\\ntszotwflegsjzzszfwt\\r\\nzfpnscguemwrczqxyci\\r\\nvdqnkypnxnnpmuduhzn\\r\\noaquudhavrncwfwujpc\\r\\nmiggjmcmkkbnjfeodxk\\r\\ngjgwxtrxingiqquhuwq\\r\\nhdswxxrxuzzfhkplwun\\r\\nfagppcoildagktgdarv\\r\\neusjuqfistulgbglwmf\\r\\ngzrnyxryetwzhlnfewc\\r\\nzmnoozlqatugmdjwgzc\\r\\nfabbkoxyjxkatjmpprs\\r\\nwkdkobdagwdwxsufees\\r\\nrvncbszcepigpbzuzoo\\r\\n', 'output': ['lcorviunqvgblgjfsgmrqxyivyxodhvrjpicbneodxjtfkpolvejqmllqadjwotmbgxrvs']}, {'input': '1 1\\r\\na\\r\\n', 'output': ['a']}, {'input': '2 2\\r\\nzx\\r\\nxz\\r\\n', 'output': ['zxxz']}, {'input': '1 2\\r\\nfg\\r\\n', 'output': ['fg']}, {'input': '2 1\\r\\nh\\r\\nj\\r\\n', 'output': ['hj']}, {'input': '1 3\\r\\niji\\r\\n', 'output': ['j']}, {'input': '3 1\\r\\nk\\r\\np\\r\\nk\\r\\n', 'output': ['p']}, {'input': '2 3\\r\\nmhw\\r\\nbfq\\r\\n', 'output': ['mhwbfq']}, {'input': '3 2\\r\\nxe\\r\\ner\\r\\nwb\\r\\n', 'output': ['xeerwb']}, {'input': '3 7\\r\\nnutuvjg\\r\\ntgqutfn\\r\\nyfjeiot\\r\\n', 'output': ['ntvjggqfnyfjeiot']}, {'input': '5 4\\r\\nuzvs\\r\\namfz\\r\\nwypl\\r\\nxizp\\r\\nfhmf\\r\\n', 'output': ['uzvsamfzwyplxizphm']}, {'input': '8 9\\r\\ntjqrtgrem\\r\\nrwjcfuoey\\r\\nywrjgpzca\\r\\nwabzggojv\\r\\najqmmcclh\\r\\nozilebskd\\r\\nqmgnbmtcq\\r\\nwakptzkjr\\r\\n', 'output': ['mrjcfuyyrjpzabzvalhozilebskdgnbtpzr']}, {'input': '9 3\\r\\njel\\r\\njws\\r\\ntab\\r\\nvyo\\r\\nkgm\\r\\npls\\r\\nabq\\r\\nbjx\\r\\nljt\\r\\n', 'output': ['elwtabvyokgmplabqbxlt']}, {'input': '7 6\\r\\neklgxi\\r\\nxmpzgf\\r\\nxvwcmr\\r\\nrqssed\\r\\nouiqpt\\r\\ndueiok\\r\\nbbuorv\\r\\n', 'output': ['eklgximpzgfvwcmrrqedoiqptdeiokuorv']}, {'input': '14 27\\r\\npzoshpvvjdpmwfoeojapmkxjrnk\\r\\nitoojpcorxjdxrwyewtmmlhjxhx\\r\\ndoyopbwusgsmephixzcilxpskxh\\r\\nygpvepeuxjbnezdrnjfwdhjwjka\\r\\nrfjlbypoalbtjwrpjxzenmeipfg\\r\\nkhjhrtktcnajrnbefhpavxxfnlx\\r\\nvwlwumqpfegjgvoezevqsolaqhh\\r\\npdrvrtzqsoujqfeitkqgtxwckrl\\r\\nxtepjflcxcrfomhqimhimnzfxzg\\r\\nwhkfkfvvjwkmwhfgeovwowshyhw\\r\\nolchgmhiehumivswgtfyhqfagbp\\r\\ntdudrkttpkryvaiepsijuejqvmq\\r\\nmuratfqqdbfpefmhjzercortroh\\r\\nwxkebkzchupxumfizftgqvuwgau\\r\\n', 'output': ['zshdanicdyldybwgclygzrhkayatwxznmicbpvlupfsoewcleploqngsyolceswtyqbpyasmuadbpcehqva']}, {'input': '1 100\\r\\nysijllpanprcrrtvokqmmupuptvawhvnekeybdkzqaduotmkfwybqvytkbjfzyqztmxckizheorvkhtyoohbswcmhknyzlgxordu\\r\\n', 'output': ['g']}, {'input': '2 100\\r\\ngplwoaggwuxzutpwnmxhotbexntzmitmcvnvmuxknwvcrnsagvdojdgaccfbheqojgcqievijxapvepwqolmnjqsbejtnkaifstp\\r\\noictcmphxbrylaarcwpruiastazvmfhlcgticvwhpxyiiqokxcjgwlnfykkqdsfmrfaedzchrfzlwdclqjxvidhomhxqnlmuoowg\\r\\n', 'output': ['rbe']}, {'input': '3 100\\r\\nonmhsoxoexfwavmamoecptondioxdjsoxfuqxkjviqnjukwqjwfadnohueaxrkreycicgxpmogijgejxsprwiweyvwembluwwqhj\\r\\nuofldyjyuhzgmkeurawgsrburovdppzjiyddpzxslhyesvmuwlgdjvzjqqcpubfgxliulyvxxloqyhxspoxvhllbrajlommpghlv\\r\\nvdohhghjlvihrzmwskxfatoodupmnouwyyfarhihxpdnbwrvrysrpxxptdidpqabwbfnxhiziiiqtozqjtnitgepxjxosspsjldo\\r\\n', 'output': ['blkck']}, {'input': '100 1\\r\\na\\r\\nm\\r\\nn\\r\\nh\\r\\na\\r\\nx\\r\\nt\\r\\na\\r\\no\\r\\np\\r\\nj\\r\\nz\\r\\nr\\r\\nk\\r\\nq\\r\\nl\\r\\nb\\r\\nr\\r\\no\\r\\ni\\r\\ny\\r\\ni\\r\\np\\r\\ni\\r\\nt\\r\\nn\\r\\nd\\r\\nc\\r\\nz\\r\\np\\r\\nu\\r\\nn\\r\\nw\\r\\ny\\r\\ng\\r\\ns\\r\\nt\\r\\nm\\r\\nz\\r\\ne\\r\\nv\\r\\ng\\r\\ny\\r\\nj\\r\\nd\\r\\nz\\r\\ny\\r\\na\\r\\nn\\r\\nx\\r\\nk\\r\\nd\\r\\nq\\r\\nn\\r\\nv\\r\\ng\\r\\nk\\r\\ni\\r\\nk\\r\\nf\\r\\na\\r\\nb\\r\\nw\\r\\no\\r\\nu\\r\\nw\\r\\nk\\r\\nk\\r\\nb\\r\\nz\\r\\nu\\r\\ni\\r\\nu\\r\\nv\\r\\ng\\r\\nv\\r\\nx\\r\\ng\\r\\np\\r\\ni\\r\\nz\\r\\ns\\r\\nv\\r\\nq\\r\\ns\\r\\nb\\r\\nw\\r\\ne\\r\\np\\r\\nk\\r\\nt\\r\\np\\r\\nd\\r\\nr\\r\\ng\\r\\nd\\r\\nk\\r\\nm\\r\\nf\\r\\nd\\r\\n', 'output': ['hlc']}, {'input': '100 2\\r\\nhd\\r\\ngx\\r\\nmz\\r\\nbq\\r\\nof\\r\\nst\\r\\nzc\\r\\ndg\\r\\nth\\r\\nba\\r\\new\\r\\nbw\\r\\noc\\r\\now\\r\\nvh\\r\\nqp\\r\\nin\\r\\neh\\r\\npj\\r\\nat\\r\\nnn\\r\\nbr\\r\\nij\\r\\nco\\r\\nlv\\r\\nsa\\r\\ntb\\r\\nbl\\r\\nsr\\r\\nxa\\r\\nbz\\r\\nrp\\r\\nsz\\r\\noi\\r\\nec\\r\\npw\\r\\nhf\\r\\njm\\r\\nwu\\r\\nhq\\r\\nra\\r\\npv\\r\\ntc\\r\\ngv\\r\\nik\\r\\nux\\r\\ntz\\r\\nbf\\r\\nty\\r\\ndk\\r\\nwo\\r\\nor\\r\\nza\\r\\nkv\\r\\nqt\\r\\nfa\\r\\njy\\r\\nbk\\r\\nuv\\r\\ngk\\r\\ncz\\r\\nds\\r\\nie\\r\\noq\\r\\nmf\\r\\nxn\\r\\nql\\r\\nxs\\r\\nfb\\r\\niv\\r\\ncj\\r\\nkn\\r\\nns\\r\\nlg\\r\\nji\\r\\nha\\r\\naj\\r\\ndg\\r\\nfj\\r\\nut\\r\\nsg\\r\\nju\\r\\noc\\r\\nov\\r\\nhe\\r\\nnw\\r\\nbl\\r\\nlp\\r\\nbx\\r\\nnm\\r\\nyq\\r\\ncw\\r\\nov\\r\\nxk\\r\\npg\\r\\noh\\r\\npl\\r\\nuo\\r\\ngf\\r\\nul\\r\\n', 'output': ['dvy']}, {'input': '100 3\\r\\nruy\\r\\nmye\\r\\njgp\\r\\nscn\\r\\nktq\\r\\nalx\\r\\nmvk\\r\\nlpm\\r\\nkry\\r\\norb\\r\\nmpu\\r\\nzcv\\r\\nlge\\r\\nkft\\r\\ndzp\\r\\ntfb\\r\\nhqz\\r\\nuur\\r\\nhry\\r\\nzjx\\r\\ncuo\\r\\nqqc\\r\\ntih\\r\\nenj\\r\\nvnp\\r\\nbwi\\r\\nzzh\\r\\nhkc\\r\\nwdr\\r\\nldh\\r\\nvel\\r\\nizj\\r\\nfhb\\r\\nqrn\\r\\nqpp\\r\\nvzs\\r\\nlhg\\r\\nkee\\r\\nlbq\\r\\nzhy\\r\\nwcl\\r\\nyaa\\r\\nton\\r\\nfly\\r\\nkyw\\r\\nept\\r\\ngwq\\r\\ncoe\\r\\nopd\\r\\neez\\r\\nnmx\\r\\nnjg\\r\\nwhy\\r\\nvel\\r\\nafq\\r\\nnbq\\r\\nulx\\r\\noxs\\r\\nbbo\\r\\nyhx\\r\\nfmz\\r\\nnrg\\r\\nnfm\\r\\njek\\r\\nbeu\\r\\ntya\\r\\nxgs\\r\\nsgg\\r\\nnkq\\r\\nbbv\\r\\nwkd\\r\\ntns\\r\\nfdt\\r\\neox\\r\\nobc\\r\\neab\\r\\nkkj\\r\\noub\\r\\ngji\\r\\nrht\\r\\nozv\\r\\nysk\\r\\nsbt\\r\\nflf\\r\\npbu\\r\\nlxb\\r\\npzs\\r\\nrzh\\r\\ncea\\r\\nkmi\\r\\nuea\\r\\nncc\\r\\nzng\\r\\nvkn\\r\\njhn\\r\\njqw\\r\\nlqc\\r\\nmbt\\r\\nlov\\r\\ngam\\r\\n', 'output': ['tvdiixs']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  string s;\n  int n, m;\n  cin >> n >> m;\n  vector<string> v(n);\n  vector<string> a(m);\n  for (int i = 0; i < n; i++) {\n    cin >> v[i];\n  }\n  for (int i = 0; i < m; i++) {\n    string s;\n    for (int j = 0; j < n; j++) {\n      s += v[j][i];\n    }\n    a[i] = s;\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      int c = 0;\n      for (int k = j + 1; k < m; k++) {\n        c += a[k][i] == a[j][i];\n      }\n      if (c == 0) {\n        cout << a[j][i];\n      }\n    }\n  }\n}\nint main() {\n  solve();\n}\n"}
{"src_uid": "9c90974a0bb860a5e180760042fd5045", "id": 8, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '3 3\\r\\ncba\\r\\nbcd\\r\\ncbc\\r\\n', 'output': ['abcd']}, {'input': '5 5\\r\\nfcofd\\r\\nooedo\\r\\nafaoa\\r\\nrdcdf\\r\\neofsf\\r\\n', 'output': ['codeforces']}, {'input': '4 4\\r\\nusah\\r\\nusha\\r\\nhasu\\r\\nsuha\\r\\n', 'output': ['ahhasusu']}, {'input': '7 5\\r\\naabcd\\r\\neffgh\\r\\niijkk\\r\\nlmnoo\\r\\npqqrs\\r\\nttuvw\\r\\nxxyyz\\r\\n', 'output': ['bcdeghjlmnprsuvwz']}, {'input': '10 10\\r\\naaaaaaaaaa\\r\\nbccceeeeee\\r\\ncdfffffffe\\r\\ncdfiiiiile\\r\\ncdfjjjjile\\r\\ndddddddile\\r\\nedfkkkkile\\r\\nedddddddde\\r\\ngggggggggg\\r\\nhhhhhhhhhe\\r\\n', 'output': ['b']}, {'input': '15 3\\r\\njhg\\r\\njkn\\r\\njui\\r\\nfth\\r\\noij\\r\\nyuf\\r\\nyfb\\r\\nugd\\r\\nhgd\\r\\noih\\r\\nhvc\\r\\nugg\\r\\nyvv\\r\\ntdg\\r\\nhgf\\r\\n', 'output': ['hkniftjfbctd']}, {'input': '17 19\\r\\nbmzbmweyydiadtlcoue\\r\\ngmdbyfwurpwbpuvhifn\\r\\nuapwyndmhtqvkgkbhty\\r\\ntszotwflegsjzzszfwt\\r\\nzfpnscguemwrczqxyci\\r\\nvdqnkypnxnnpmuduhzn\\r\\noaquudhavrncwfwujpc\\r\\nmiggjmcmkkbnjfeodxk\\r\\ngjgwxtrxingiqquhuwq\\r\\nhdswxxrxuzzfhkplwun\\r\\nfagppcoildagktgdarv\\r\\neusjuqfistulgbglwmf\\r\\ngzrnyxryetwzhlnfewc\\r\\nzmnoozlqatugmdjwgzc\\r\\nfabbkoxyjxkatjmpprs\\r\\nwkdkobdagwdwxsufees\\r\\nrvncbszcepigpbzuzoo\\r\\n', 'output': ['lcorviunqvgblgjfsgmrqxyivyxodhvrjpicbneodxjtfkpolvejqmllqadjwotmbgxrvs']}, {'input': '1 1\\r\\na\\r\\n', 'output': ['a']}, {'input': '2 2\\r\\nzx\\r\\nxz\\r\\n', 'output': ['zxxz']}, {'input': '1 2\\r\\nfg\\r\\n', 'output': ['fg']}, {'input': '2 1\\r\\nh\\r\\nj\\r\\n', 'output': ['hj']}, {'input': '1 3\\r\\niji\\r\\n', 'output': ['j']}, {'input': '3 1\\r\\nk\\r\\np\\r\\nk\\r\\n', 'output': ['p']}, {'input': '2 3\\r\\nmhw\\r\\nbfq\\r\\n', 'output': ['mhwbfq']}, {'input': '3 2\\r\\nxe\\r\\ner\\r\\nwb\\r\\n', 'output': ['xeerwb']}, {'input': '3 7\\r\\nnutuvjg\\r\\ntgqutfn\\r\\nyfjeiot\\r\\n', 'output': ['ntvjggqfnyfjeiot']}, {'input': '5 4\\r\\nuzvs\\r\\namfz\\r\\nwypl\\r\\nxizp\\r\\nfhmf\\r\\n', 'output': ['uzvsamfzwyplxizphm']}, {'input': '8 9\\r\\ntjqrtgrem\\r\\nrwjcfuoey\\r\\nywrjgpzca\\r\\nwabzggojv\\r\\najqmmcclh\\r\\nozilebskd\\r\\nqmgnbmtcq\\r\\nwakptzkjr\\r\\n', 'output': ['mrjcfuyyrjpzabzvalhozilebskdgnbtpzr']}, {'input': '9 3\\r\\njel\\r\\njws\\r\\ntab\\r\\nvyo\\r\\nkgm\\r\\npls\\r\\nabq\\r\\nbjx\\r\\nljt\\r\\n', 'output': ['elwtabvyokgmplabqbxlt']}, {'input': '7 6\\r\\neklgxi\\r\\nxmpzgf\\r\\nxvwcmr\\r\\nrqssed\\r\\nouiqpt\\r\\ndueiok\\r\\nbbuorv\\r\\n', 'output': ['eklgximpzgfvwcmrrqedoiqptdeiokuorv']}, {'input': '14 27\\r\\npzoshpvvjdpmwfoeojapmkxjrnk\\r\\nitoojpcorxjdxrwyewtmmlhjxhx\\r\\ndoyopbwusgsmephixzcilxpskxh\\r\\nygpvepeuxjbnezdrnjfwdhjwjka\\r\\nrfjlbypoalbtjwrpjxzenmeipfg\\r\\nkhjhrtktcnajrnbefhpavxxfnlx\\r\\nvwlwumqpfegjgvoezevqsolaqhh\\r\\npdrvrtzqsoujqfeitkqgtxwckrl\\r\\nxtepjflcxcrfomhqimhimnzfxzg\\r\\nwhkfkfvvjwkmwhfgeovwowshyhw\\r\\nolchgmhiehumivswgtfyhqfagbp\\r\\ntdudrkttpkryvaiepsijuejqvmq\\r\\nmuratfqqdbfpefmhjzercortroh\\r\\nwxkebkzchupxumfizftgqvuwgau\\r\\n', 'output': ['zshdanicdyldybwgclygzrhkayatwxznmicbpvlupfsoewcleploqngsyolceswtyqbpyasmuadbpcehqva']}, {'input': '1 100\\r\\nysijllpanprcrrtvokqmmupuptvawhvnekeybdkzqaduotmkfwybqvytkbjfzyqztmxckizheorvkhtyoohbswcmhknyzlgxordu\\r\\n', 'output': ['g']}, {'input': '2 100\\r\\ngplwoaggwuxzutpwnmxhotbexntzmitmcvnvmuxknwvcrnsagvdojdgaccfbheqojgcqievijxapvepwqolmnjqsbejtnkaifstp\\r\\noictcmphxbrylaarcwpruiastazvmfhlcgticvwhpxyiiqokxcjgwlnfykkqdsfmrfaedzchrfzlwdclqjxvidhomhxqnlmuoowg\\r\\n', 'output': ['rbe']}, {'input': '3 100\\r\\nonmhsoxoexfwavmamoecptondioxdjsoxfuqxkjviqnjukwqjwfadnohueaxrkreycicgxpmogijgejxsprwiweyvwembluwwqhj\\r\\nuofldyjyuhzgmkeurawgsrburovdppzjiyddpzxslhyesvmuwlgdjvzjqqcpubfgxliulyvxxloqyhxspoxvhllbrajlommpghlv\\r\\nvdohhghjlvihrzmwskxfatoodupmnouwyyfarhihxpdnbwrvrysrpxxptdidpqabwbfnxhiziiiqtozqjtnitgepxjxosspsjldo\\r\\n', 'output': ['blkck']}, {'input': '100 1\\r\\na\\r\\nm\\r\\nn\\r\\nh\\r\\na\\r\\nx\\r\\nt\\r\\na\\r\\no\\r\\np\\r\\nj\\r\\nz\\r\\nr\\r\\nk\\r\\nq\\r\\nl\\r\\nb\\r\\nr\\r\\no\\r\\ni\\r\\ny\\r\\ni\\r\\np\\r\\ni\\r\\nt\\r\\nn\\r\\nd\\r\\nc\\r\\nz\\r\\np\\r\\nu\\r\\nn\\r\\nw\\r\\ny\\r\\ng\\r\\ns\\r\\nt\\r\\nm\\r\\nz\\r\\ne\\r\\nv\\r\\ng\\r\\ny\\r\\nj\\r\\nd\\r\\nz\\r\\ny\\r\\na\\r\\nn\\r\\nx\\r\\nk\\r\\nd\\r\\nq\\r\\nn\\r\\nv\\r\\ng\\r\\nk\\r\\ni\\r\\nk\\r\\nf\\r\\na\\r\\nb\\r\\nw\\r\\no\\r\\nu\\r\\nw\\r\\nk\\r\\nk\\r\\nb\\r\\nz\\r\\nu\\r\\ni\\r\\nu\\r\\nv\\r\\ng\\r\\nv\\r\\nx\\r\\ng\\r\\np\\r\\ni\\r\\nz\\r\\ns\\r\\nv\\r\\nq\\r\\ns\\r\\nb\\r\\nw\\r\\ne\\r\\np\\r\\nk\\r\\nt\\r\\np\\r\\nd\\r\\nr\\r\\ng\\r\\nd\\r\\nk\\r\\nm\\r\\nf\\r\\nd\\r\\n', 'output': ['hlc']}, {'input': '100 2\\r\\nhd\\r\\ngx\\r\\nmz\\r\\nbq\\r\\nof\\r\\nst\\r\\nzc\\r\\ndg\\r\\nth\\r\\nba\\r\\new\\r\\nbw\\r\\noc\\r\\now\\r\\nvh\\r\\nqp\\r\\nin\\r\\neh\\r\\npj\\r\\nat\\r\\nnn\\r\\nbr\\r\\nij\\r\\nco\\r\\nlv\\r\\nsa\\r\\ntb\\r\\nbl\\r\\nsr\\r\\nxa\\r\\nbz\\r\\nrp\\r\\nsz\\r\\noi\\r\\nec\\r\\npw\\r\\nhf\\r\\njm\\r\\nwu\\r\\nhq\\r\\nra\\r\\npv\\r\\ntc\\r\\ngv\\r\\nik\\r\\nux\\r\\ntz\\r\\nbf\\r\\nty\\r\\ndk\\r\\nwo\\r\\nor\\r\\nza\\r\\nkv\\r\\nqt\\r\\nfa\\r\\njy\\r\\nbk\\r\\nuv\\r\\ngk\\r\\ncz\\r\\nds\\r\\nie\\r\\noq\\r\\nmf\\r\\nxn\\r\\nql\\r\\nxs\\r\\nfb\\r\\niv\\r\\ncj\\r\\nkn\\r\\nns\\r\\nlg\\r\\nji\\r\\nha\\r\\naj\\r\\ndg\\r\\nfj\\r\\nut\\r\\nsg\\r\\nju\\r\\noc\\r\\nov\\r\\nhe\\r\\nnw\\r\\nbl\\r\\nlp\\r\\nbx\\r\\nnm\\r\\nyq\\r\\ncw\\r\\nov\\r\\nxk\\r\\npg\\r\\noh\\r\\npl\\r\\nuo\\r\\ngf\\r\\nul\\r\\n', 'output': ['dvy']}, {'input': '100 3\\r\\nruy\\r\\nmye\\r\\njgp\\r\\nscn\\r\\nktq\\r\\nalx\\r\\nmvk\\r\\nlpm\\r\\nkry\\r\\norb\\r\\nmpu\\r\\nzcv\\r\\nlge\\r\\nkft\\r\\ndzp\\r\\ntfb\\r\\nhqz\\r\\nuur\\r\\nhry\\r\\nzjx\\r\\ncuo\\r\\nqqc\\r\\ntih\\r\\nenj\\r\\nvnp\\r\\nbwi\\r\\nzzh\\r\\nhkc\\r\\nwdr\\r\\nldh\\r\\nvel\\r\\nizj\\r\\nfhb\\r\\nqrn\\r\\nqpp\\r\\nvzs\\r\\nlhg\\r\\nkee\\r\\nlbq\\r\\nzhy\\r\\nwcl\\r\\nyaa\\r\\nton\\r\\nfly\\r\\nkyw\\r\\nept\\r\\ngwq\\r\\ncoe\\r\\nopd\\r\\neez\\r\\nnmx\\r\\nnjg\\r\\nwhy\\r\\nvel\\r\\nafq\\r\\nnbq\\r\\nulx\\r\\noxs\\r\\nbbo\\r\\nyhx\\r\\nfmz\\r\\nnrg\\r\\nnfm\\r\\njek\\r\\nbeu\\r\\ntya\\r\\nxgs\\r\\nsgg\\r\\nnkq\\r\\nbbv\\r\\nwkd\\r\\ntns\\r\\nfdt\\r\\neox\\r\\nobc\\r\\neab\\r\\nkkj\\r\\noub\\r\\ngji\\r\\nrht\\r\\nozv\\r\\nysk\\r\\nsbt\\r\\nflf\\r\\npbu\\r\\nlxb\\r\\npzs\\r\\nrzh\\r\\ncea\\r\\nkmi\\r\\nuea\\r\\nncc\\r\\nzng\\r\\nvkn\\r\\njhn\\r\\njqw\\r\\nlqc\\r\\nmbt\\r\\nlov\\r\\ngam\\r\\n', 'output': ['tvdiixs']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nchar mapa[110][110];\nint main() {\n  int n, m;\n  cin >> n >> m;\n  for (int i = 0; i < n; ++i)\n    for (int j = 0; j < m; ++j) cin >> mapa[i][j];\n  for (int i = 0; i < m; ++i) {\n    for (int j = 0; j < n; ++j) {\n      bool repeat = false;\n      for (int k = 0; k < n; ++k) {\n        if (mapa[j][i] == mapa[k][i] && k!= j) {\n          repeat = true;\n          break;\n        }\n      }\n      for (int k = 0; k < m; ++k) {\n        if (mapa[j][i] == mapa[j][k] && k!= i) {\n          repeat = true;\n          break;\n        }\n      }\n      if (repeat) mapa[j][i] = '.';\n    }\n  }\n  int ct = 0;\n  string s;\n  for (int i = 0; i < n; ++i)\n    for (int j = 0; j < m; ++j) {\n      if (ct > 0 && mapa[i][j] == '.') continue;\n      if (mapa[i][j]!= '.') s += mapa[i][j], ++ct;\n    }\n  cout << s;\n}\n"}
{"src_uid": "9c90974a0bb860a5e180760042fd5045", "id": 8, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '3 3\\r\\ncba\\r\\nbcd\\r\\ncbc\\r\\n', 'output': ['abcd']}, {'input': '5 5\\r\\nfcofd\\r\\nooedo\\r\\nafaoa\\r\\nrdcdf\\r\\neofsf\\r\\n', 'output': ['codeforces']}, {'input': '4 4\\r\\nusah\\r\\nusha\\r\\nhasu\\r\\nsuha\\r\\n', 'output': ['ahhasusu']}, {'input': '7 5\\r\\naabcd\\r\\neffgh\\r\\niijkk\\r\\nlmnoo\\r\\npqqrs\\r\\nttuvw\\r\\nxxyyz\\r\\n', 'output': ['bcdeghjlmnprsuvwz']}, {'input': '10 10\\r\\naaaaaaaaaa\\r\\nbccceeeeee\\r\\ncdfffffffe\\r\\ncdfiiiiile\\r\\ncdfjjjjile\\r\\ndddddddile\\r\\nedfkkkkile\\r\\nedddddddde\\r\\ngggggggggg\\r\\nhhhhhhhhhe\\r\\n', 'output': ['b']}, {'input': '15 3\\r\\njhg\\r\\njkn\\r\\njui\\r\\nfth\\r\\noij\\r\\nyuf\\r\\nyfb\\r\\nugd\\r\\nhgd\\r\\noih\\r\\nhvc\\r\\nugg\\r\\nyvv\\r\\ntdg\\r\\nhgf\\r\\n', 'output': ['hkniftjfbctd']}, {'input': '17 19\\r\\nbmzbmweyydiadtlcoue\\r\\ngmdbyfwurpwbpuvhifn\\r\\nuapwyndmhtqvkgkbhty\\r\\ntszotwflegsjzzszfwt\\r\\nzfpnscguemwrczqxyci\\r\\nvdqnkypnxnnpmuduhzn\\r\\noaquudhavrncwfwujpc\\r\\nmiggjmcmkkbnjfeodxk\\r\\ngjgwxtrxingiqquhuwq\\r\\nhdswxxrxuzzfhkplwun\\r\\nfagppcoildagktgdarv\\r\\neusjuqfistulgbglwmf\\r\\ngzrnyxryetwzhlnfewc\\r\\nzmnoozlqatugmdjwgzc\\r\\nfabbkoxyjxkatjmpprs\\r\\nwkdkobdagwdwxsufees\\r\\nrvncbszcepigpbzuzoo\\r\\n', 'output': ['lcorviunqvgblgjfsgmrqxyivyxodhvrjpicbneodxjtfkpolvejqmllqadjwotmbgxrvs']}, {'input': '1 1\\r\\na\\r\\n', 'output': ['a']}, {'input': '2 2\\r\\nzx\\r\\nxz\\r\\n', 'output': ['zxxz']}, {'input': '1 2\\r\\nfg\\r\\n', 'output': ['fg']}, {'input': '2 1\\r\\nh\\r\\nj\\r\\n', 'output': ['hj']}, {'input': '1 3\\r\\niji\\r\\n', 'output': ['j']}, {'input': '3 1\\r\\nk\\r\\np\\r\\nk\\r\\n', 'output': ['p']}, {'input': '2 3\\r\\nmhw\\r\\nbfq\\r\\n', 'output': ['mhwbfq']}, {'input': '3 2\\r\\nxe\\r\\ner\\r\\nwb\\r\\n', 'output': ['xeerwb']}, {'input': '3 7\\r\\nnutuvjg\\r\\ntgqutfn\\r\\nyfjeiot\\r\\n', 'output': ['ntvjggqfnyfjeiot']}, {'input': '5 4\\r\\nuzvs\\r\\namfz\\r\\nwypl\\r\\nxizp\\r\\nfhmf\\r\\n', 'output': ['uzvsamfzwyplxizphm']}, {'input': '8 9\\r\\ntjqrtgrem\\r\\nrwjcfuoey\\r\\nywrjgpzca\\r\\nwabzggojv\\r\\najqmmcclh\\r\\nozilebskd\\r\\nqmgnbmtcq\\r\\nwakptzkjr\\r\\n', 'output': ['mrjcfuyyrjpzabzvalhozilebskdgnbtpzr']}, {'input': '9 3\\r\\njel\\r\\njws\\r\\ntab\\r\\nvyo\\r\\nkgm\\r\\npls\\r\\nabq\\r\\nbjx\\r\\nljt\\r\\n', 'output': ['elwtabvyokgmplabqbxlt']}, {'input': '7 6\\r\\neklgxi\\r\\nxmpzgf\\r\\nxvwcmr\\r\\nrqssed\\r\\nouiqpt\\r\\ndueiok\\r\\nbbuorv\\r\\n', 'output': ['eklgximpzgfvwcmrrqedoiqptdeiokuorv']}, {'input': '14 27\\r\\npzoshpvvjdpmwfoeojapmkxjrnk\\r\\nitoojpcorxjdxrwyewtmmlhjxhx\\r\\ndoyopbwusgsmephixzcilxpskxh\\r\\nygpvepeuxjbnezdrnjfwdhjwjka\\r\\nrfjlbypoalbtjwrpjxzenmeipfg\\r\\nkhjhrtktcnajrnbefhpavxxfnlx\\r\\nvwlwumqpfegjgvoezevqsolaqhh\\r\\npdrvrtzqsoujqfeitkqgtxwckrl\\r\\nxtepjflcxcrfomhqimhimnzfxzg\\r\\nwhkfkfvvjwkmwhfgeovwowshyhw\\r\\nolchgmhiehumivswgtfyhqfagbp\\r\\ntdudrkttpkryvaiepsijuejqvmq\\r\\nmuratfqqdbfpefmhjzercortroh\\r\\nwxkebkzchupxumfizftgqvuwgau\\r\\n', 'output': ['zshdanicdyldybwgclygzrhkayatwxznmicbpvlupfsoewcleploqngsyolceswtyqbpyasmuadbpcehqva']}, {'input': '1 100\\r\\nysijllpanprcrrtvokqmmupuptvawhvnekeybdkzqaduotmkfwybqvytkbjfzyqztmxckizheorvkhtyoohbswcmhknyzlgxordu\\r\\n', 'output': ['g']}, {'input': '2 100\\r\\ngplwoaggwuxzutpwnmxhotbexntzmitmcvnvmuxknwvcrnsagvdojdgaccfbheqojgcqievijxapvepwqolmnjqsbejtnkaifstp\\r\\noictcmphxbrylaarcwpruiastazvmfhlcgticvwhpxyiiqokxcjgwlnfykkqdsfmrfaedzchrfzlwdclqjxvidhomhxqnlmuoowg\\r\\n', 'output': ['rbe']}, {'input': '3 100\\r\\nonmhsoxoexfwavmamoecptondioxdjsoxfuqxkjviqnjukwqjwfadnohueaxrkreycicgxpmogijgejxsprwiweyvwembluwwqhj\\r\\nuofldyjyuhzgmkeurawgsrburovdppzjiyddpzxslhyesvmuwlgdjvzjqqcpubfgxliulyvxxloqyhxspoxvhllbrajlommpghlv\\r\\nvdohhghjlvihrzmwskxfatoodupmnouwyyfarhihxpdnbwrvrysrpxxptdidpqabwbfnxhiziiiqtozqjtnitgepxjxosspsjldo\\r\\n', 'output': ['blkck']}, {'input': '100 1\\r\\na\\r\\nm\\r\\nn\\r\\nh\\r\\na\\r\\nx\\r\\nt\\r\\na\\r\\no\\r\\np\\r\\nj\\r\\nz\\r\\nr\\r\\nk\\r\\nq\\r\\nl\\r\\nb\\r\\nr\\r\\no\\r\\ni\\r\\ny\\r\\ni\\r\\np\\r\\ni\\r\\nt\\r\\nn\\r\\nd\\r\\nc\\r\\nz\\r\\np\\r\\nu\\r\\nn\\r\\nw\\r\\ny\\r\\ng\\r\\ns\\r\\nt\\r\\nm\\r\\nz\\r\\ne\\r\\nv\\r\\ng\\r\\ny\\r\\nj\\r\\nd\\r\\nz\\r\\ny\\r\\na\\r\\nn\\r\\nx\\r\\nk\\r\\nd\\r\\nq\\r\\nn\\r\\nv\\r\\ng\\r\\nk\\r\\ni\\r\\nk\\r\\nf\\r\\na\\r\\nb\\r\\nw\\r\\no\\r\\nu\\r\\nw\\r\\nk\\r\\nk\\r\\nb\\r\\nz\\r\\nu\\r\\ni\\r\\nu\\r\\nv\\r\\ng\\r\\nv\\r\\nx\\r\\ng\\r\\np\\r\\ni\\r\\nz\\r\\ns\\r\\nv\\r\\nq\\r\\ns\\r\\nb\\r\\nw\\r\\ne\\r\\np\\r\\nk\\r\\nt\\r\\np\\r\\nd\\r\\nr\\r\\ng\\r\\nd\\r\\nk\\r\\nm\\r\\nf\\r\\nd\\r\\n', 'output': ['hlc']}, {'input': '100 2\\r\\nhd\\r\\ngx\\r\\nmz\\r\\nbq\\r\\nof\\r\\nst\\r\\nzc\\r\\ndg\\r\\nth\\r\\nba\\r\\new\\r\\nbw\\r\\noc\\r\\now\\r\\nvh\\r\\nqp\\r\\nin\\r\\neh\\r\\npj\\r\\nat\\r\\nnn\\r\\nbr\\r\\nij\\r\\nco\\r\\nlv\\r\\nsa\\r\\ntb\\r\\nbl\\r\\nsr\\r\\nxa\\r\\nbz\\r\\nrp\\r\\nsz\\r\\noi\\r\\nec\\r\\npw\\r\\nhf\\r\\njm\\r\\nwu\\r\\nhq\\r\\nra\\r\\npv\\r\\ntc\\r\\ngv\\r\\nik\\r\\nux\\r\\ntz\\r\\nbf\\r\\nty\\r\\ndk\\r\\nwo\\r\\nor\\r\\nza\\r\\nkv\\r\\nqt\\r\\nfa\\r\\njy\\r\\nbk\\r\\nuv\\r\\ngk\\r\\ncz\\r\\nds\\r\\nie\\r\\noq\\r\\nmf\\r\\nxn\\r\\nql\\r\\nxs\\r\\nfb\\r\\niv\\r\\ncj\\r\\nkn\\r\\nns\\r\\nlg\\r\\nji\\r\\nha\\r\\naj\\r\\ndg\\r\\nfj\\r\\nut\\r\\nsg\\r\\nju\\r\\noc\\r\\nov\\r\\nhe\\r\\nnw\\r\\nbl\\r\\nlp\\r\\nbx\\r\\nnm\\r\\nyq\\r\\ncw\\r\\nov\\r\\nxk\\r\\npg\\r\\noh\\r\\npl\\r\\nuo\\r\\ngf\\r\\nul\\r\\n', 'output': ['dvy']}, {'input': '100 3\\r\\nruy\\r\\nmye\\r\\njgp\\r\\nscn\\r\\nktq\\r\\nalx\\r\\nmvk\\r\\nlpm\\r\\nkry\\r\\norb\\r\\nmpu\\r\\nzcv\\r\\nlge\\r\\nkft\\r\\ndzp\\r\\ntfb\\r\\nhqz\\r\\nuur\\r\\nhry\\r\\nzjx\\r\\ncuo\\r\\nqqc\\r\\ntih\\r\\nenj\\r\\nvnp\\r\\nbwi\\r\\nzzh\\r\\nhkc\\r\\nwdr\\r\\nldh\\r\\nvel\\r\\nizj\\r\\nfhb\\r\\nqrn\\r\\nqpp\\r\\nvzs\\r\\nlhg\\r\\nkee\\r\\nlbq\\r\\nzhy\\r\\nwcl\\r\\nyaa\\r\\nton\\r\\nfly\\r\\nkyw\\r\\nept\\r\\ngwq\\r\\ncoe\\r\\nopd\\r\\neez\\r\\nnmx\\r\\nnjg\\r\\nwhy\\r\\nvel\\r\\nafq\\r\\nnbq\\r\\nulx\\r\\noxs\\r\\nbbo\\r\\nyhx\\r\\nfmz\\r\\nnrg\\r\\nnfm\\r\\njek\\r\\nbeu\\r\\ntya\\r\\nxgs\\r\\nsgg\\r\\nnkq\\r\\nbbv\\r\\nwkd\\r\\ntns\\r\\nfdt\\r\\neox\\r\\nobc\\r\\neab\\r\\nkkj\\r\\noub\\r\\ngji\\r\\nrht\\r\\nozv\\r\\nysk\\r\\nsbt\\r\\nflf\\r\\npbu\\r\\nlxb\\r\\npzs\\r\\nrzh\\r\\ncea\\r\\nkmi\\r\\nuea\\r\\nncc\\r\\nzng\\r\\nvkn\\r\\njhn\\r\\njqw\\r\\nlqc\\r\\nmbt\\r\\nlov\\r\\ngam\\r\\n', 'output': ['tvdiixs']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 110;\nint n, m;\nint a[N][N];\nint b[N];\nint flag[N];\nchar str[N];\nint main() {\n  int i, j;\n  scanf(\"%d %d\", &n, &m);\n  for (i = 0; i < n; i++) {\n    getchar();\n    for (j = 0; j < m; j++) {\n      scanf(\"%c\", &str[j]);\n      a[i][j] = str[j];\n    }\n  }\n  for (i = 0; i < n; i++) {\n    memset(flag, 0, sizeof(flag));\n    for (j = 0; j < m; j++) {\n      if (!flag[a[i][j]]) {\n        b[a[i][j]]++;\n        flag[a[i][j]] = 1;\n      }\n    }\n  }\n  for (i = 0; i < m; i++) {\n    memset(flag, 0, sizeof(flag));\n    for (j = 0; j < n; j++) {\n      if (!flag[a[j][i]]) {\n        b[a[j][i]]++;\n        flag[a[j][i]] = 1;\n      }\n    }\n  }\n  char ans = 1;\n  for (i = 'a'; i <= 'z'; i++) {\n    if (b[i] > 1) {\n      printf(\"%c\", ans);\n      ans++;\n    }\n  }\n  printf(\"\\n\");\n  return 0;\n}\n"}
{"src_uid": "9c90974a0bb860a5e180760042fd5045", "id": 8, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '3 3\\r\\ncba\\r\\nbcd\\r\\ncbc\\r\\n', 'output': ['abcd']}, {'input': '5 5\\r\\nfcofd\\r\\nooedo\\r\\nafaoa\\r\\nrdcdf\\r\\neofsf\\r\\n', 'output': ['codeforces']}, {'input': '4 4\\r\\nusah\\r\\nusha\\r\\nhasu\\r\\nsuha\\r\\n', 'output': ['ahhasusu']}, {'input': '7 5\\r\\naabcd\\r\\neffgh\\r\\niijkk\\r\\nlmnoo\\r\\npqqrs\\r\\nttuvw\\r\\nxxyyz\\r\\n', 'output': ['bcdeghjlmnprsuvwz']}, {'input': '10 10\\r\\naaaaaaaaaa\\r\\nbccceeeeee\\r\\ncdfffffffe\\r\\ncdfiiiiile\\r\\ncdfjjjjile\\r\\ndddddddile\\r\\nedfkkkkile\\r\\nedddddddde\\r\\ngggggggggg\\r\\nhhhhhhhhhe\\r\\n', 'output': ['b']}, {'input': '15 3\\r\\njhg\\r\\njkn\\r\\njui\\r\\nfth\\r\\noij\\r\\nyuf\\r\\nyfb\\r\\nugd\\r\\nhgd\\r\\noih\\r\\nhvc\\r\\nugg\\r\\nyvv\\r\\ntdg\\r\\nhgf\\r\\n', 'output': ['hkniftjfbctd']}, {'input': '17 19\\r\\nbmzbmweyydiadtlcoue\\r\\ngmdbyfwurpwbpuvhifn\\r\\nuapwyndmhtqvkgkbhty\\r\\ntszotwflegsjzzszfwt\\r\\nzfpnscguemwrczqxyci\\r\\nvdqnkypnxnnpmuduhzn\\r\\noaquudhavrncwfwujpc\\r\\nmiggjmcmkkbnjfeodxk\\r\\ngjgwxtrxingiqquhuwq\\r\\nhdswxxrxuzzfhkplwun\\r\\nfagppcoildagktgdarv\\r\\neusjuqfistulgbglwmf\\r\\ngzrnyxryetwzhlnfewc\\r\\nzmnoozlqatugmdjwgzc\\r\\nfabbkoxyjxkatjmpprs\\r\\nwkdkobdagwdwxsufees\\r\\nrvncbszcepigpbzuzoo\\r\\n', 'output': ['lcorviunqvgblgjfsgmrqxyivyxodhvrjpicbneodxjtfkpolvejqmllqadjwotmbgxrvs']}, {'input': '1 1\\r\\na\\r\\n', 'output': ['a']}, {'input': '2 2\\r\\nzx\\r\\nxz\\r\\n', 'output': ['zxxz']}, {'input': '1 2\\r\\nfg\\r\\n', 'output': ['fg']}, {'input': '2 1\\r\\nh\\r\\nj\\r\\n', 'output': ['hj']}, {'input': '1 3\\r\\niji\\r\\n', 'output': ['j']}, {'input': '3 1\\r\\nk\\r\\np\\r\\nk\\r\\n', 'output': ['p']}, {'input': '2 3\\r\\nmhw\\r\\nbfq\\r\\n', 'output': ['mhwbfq']}, {'input': '3 2\\r\\nxe\\r\\ner\\r\\nwb\\r\\n', 'output': ['xeerwb']}, {'input': '3 7\\r\\nnutuvjg\\r\\ntgqutfn\\r\\nyfjeiot\\r\\n', 'output': ['ntvjggqfnyfjeiot']}, {'input': '5 4\\r\\nuzvs\\r\\namfz\\r\\nwypl\\r\\nxizp\\r\\nfhmf\\r\\n', 'output': ['uzvsamfzwyplxizphm']}, {'input': '8 9\\r\\ntjqrtgrem\\r\\nrwjcfuoey\\r\\nywrjgpzca\\r\\nwabzggojv\\r\\najqmmcclh\\r\\nozilebskd\\r\\nqmgnbmtcq\\r\\nwakptzkjr\\r\\n', 'output': ['mrjcfuyyrjpzabzvalhozilebskdgnbtpzr']}, {'input': '9 3\\r\\njel\\r\\njws\\r\\ntab\\r\\nvyo\\r\\nkgm\\r\\npls\\r\\nabq\\r\\nbjx\\r\\nljt\\r\\n', 'output': ['elwtabvyokgmplabqbxlt']}, {'input': '7 6\\r\\neklgxi\\r\\nxmpzgf\\r\\nxvwcmr\\r\\nrqssed\\r\\nouiqpt\\r\\ndueiok\\r\\nbbuorv\\r\\n', 'output': ['eklgximpzgfvwcmrrqedoiqptdeiokuorv']}, {'input': '14 27\\r\\npzoshpvvjdpmwfoeojapmkxjrnk\\r\\nitoojpcorxjdxrwyewtmmlhjxhx\\r\\ndoyopbwusgsmephixzcilxpskxh\\r\\nygpvepeuxjbnezdrnjfwdhjwjka\\r\\nrfjlbypoalbtjwrpjxzenmeipfg\\r\\nkhjhrtktcnajrnbefhpavxxfnlx\\r\\nvwlwumqpfegjgvoezevqsolaqhh\\r\\npdrvrtzqsoujqfeitkqgtxwckrl\\r\\nxtepjflcxcrfomhqimhimnzfxzg\\r\\nwhkfkfvvjwkmwhfgeovwowshyhw\\r\\nolchgmhiehumivswgtfyhqfagbp\\r\\ntdudrkttpkryvaiepsijuejqvmq\\r\\nmuratfqqdbfpefmhjzercortroh\\r\\nwxkebkzchupxumfizftgqvuwgau\\r\\n', 'output': ['zshdanicdyldybwgclygzrhkayatwxznmicbpvlupfsoewcleploqngsyolceswtyqbpyasmuadbpcehqva']}, {'input': '1 100\\r\\nysijllpanprcrrtvokqmmupuptvawhvnekeybdkzqaduotmkfwybqvytkbjfzyqztmxckizheorvkhtyoohbswcmhknyzlgxordu\\r\\n', 'output': ['g']}, {'input': '2 100\\r\\ngplwoaggwuxzutpwnmxhotbexntzmitmcvnvmuxknwvcrnsagvdojdgaccfbheqojgcqievijxapvepwqolmnjqsbejtnkaifstp\\r\\noictcmphxbrylaarcwpruiastazvmfhlcgticvwhpxyiiqokxcjgwlnfykkqdsfmrfaedzchrfzlwdclqjxvidhomhxqnlmuoowg\\r\\n', 'output': ['rbe']}, {'input': '3 100\\r\\nonmhsoxoexfwavmamoecptondioxdjsoxfuqxkjviqnjukwqjwfadnohueaxrkreycicgxpmogijgejxsprwiweyvwembluwwqhj\\r\\nuofldyjyuhzgmkeurawgsrburovdppzjiyddpzxslhyesvmuwlgdjvzjqqcpubfgxliulyvxxloqyhxspoxvhllbrajlommpghlv\\r\\nvdohhghjlvihrzmwskxfatoodupmnouwyyfarhihxpdnbwrvrysrpxxptdidpqabwbfnxhiziiiqtozqjtnitgepxjxosspsjldo\\r\\n', 'output': ['blkck']}, {'input': '100 1\\r\\na\\r\\nm\\r\\nn\\r\\nh\\r\\na\\r\\nx\\r\\nt\\r\\na\\r\\no\\r\\np\\r\\nj\\r\\nz\\r\\nr\\r\\nk\\r\\nq\\r\\nl\\r\\nb\\r\\nr\\r\\no\\r\\ni\\r\\ny\\r\\ni\\r\\np\\r\\ni\\r\\nt\\r\\nn\\r\\nd\\r\\nc\\r\\nz\\r\\np\\r\\nu\\r\\nn\\r\\nw\\r\\ny\\r\\ng\\r\\ns\\r\\nt\\r\\nm\\r\\nz\\r\\ne\\r\\nv\\r\\ng\\r\\ny\\r\\nj\\r\\nd\\r\\nz\\r\\ny\\r\\na\\r\\nn\\r\\nx\\r\\nk\\r\\nd\\r\\nq\\r\\nn\\r\\nv\\r\\ng\\r\\nk\\r\\ni\\r\\nk\\r\\nf\\r\\na\\r\\nb\\r\\nw\\r\\no\\r\\nu\\r\\nw\\r\\nk\\r\\nk\\r\\nb\\r\\nz\\r\\nu\\r\\ni\\r\\nu\\r\\nv\\r\\ng\\r\\nv\\r\\nx\\r\\ng\\r\\np\\r\\ni\\r\\nz\\r\\ns\\r\\nv\\r\\nq\\r\\ns\\r\\nb\\r\\nw\\r\\ne\\r\\np\\r\\nk\\r\\nt\\r\\np\\r\\nd\\r\\nr\\r\\ng\\r\\nd\\r\\nk\\r\\nm\\r\\nf\\r\\nd\\r\\n', 'output': ['hlc']}, {'input': '100 2\\r\\nhd\\r\\ngx\\r\\nmz\\r\\nbq\\r\\nof\\r\\nst\\r\\nzc\\r\\ndg\\r\\nth\\r\\nba\\r\\new\\r\\nbw\\r\\noc\\r\\now\\r\\nvh\\r\\nqp\\r\\nin\\r\\neh\\r\\npj\\r\\nat\\r\\nnn\\r\\nbr\\r\\nij\\r\\nco\\r\\nlv\\r\\nsa\\r\\ntb\\r\\nbl\\r\\nsr\\r\\nxa\\r\\nbz\\r\\nrp\\r\\nsz\\r\\noi\\r\\nec\\r\\npw\\r\\nhf\\r\\njm\\r\\nwu\\r\\nhq\\r\\nra\\r\\npv\\r\\ntc\\r\\ngv\\r\\nik\\r\\nux\\r\\ntz\\r\\nbf\\r\\nty\\r\\ndk\\r\\nwo\\r\\nor\\r\\nza\\r\\nkv\\r\\nqt\\r\\nfa\\r\\njy\\r\\nbk\\r\\nuv\\r\\ngk\\r\\ncz\\r\\nds\\r\\nie\\r\\noq\\r\\nmf\\r\\nxn\\r\\nql\\r\\nxs\\r\\nfb\\r\\niv\\r\\ncj\\r\\nkn\\r\\nns\\r\\nlg\\r\\nji\\r\\nha\\r\\naj\\r\\ndg\\r\\nfj\\r\\nut\\r\\nsg\\r\\nju\\r\\noc\\r\\nov\\r\\nhe\\r\\nnw\\r\\nbl\\r\\nlp\\r\\nbx\\r\\nnm\\r\\nyq\\r\\ncw\\r\\nov\\r\\nxk\\r\\npg\\r\\noh\\r\\npl\\r\\nuo\\r\\ngf\\r\\nul\\r\\n', 'output': ['dvy']}, {'input': '100 3\\r\\nruy\\r\\nmye\\r\\njgp\\r\\nscn\\r\\nktq\\r\\nalx\\r\\nmvk\\r\\nlpm\\r\\nkry\\r\\norb\\r\\nmpu\\r\\nzcv\\r\\nlge\\r\\nkft\\r\\ndzp\\r\\ntfb\\r\\nhqz\\r\\nuur\\r\\nhry\\r\\nzjx\\r\\ncuo\\r\\nqqc\\r\\ntih\\r\\nenj\\r\\nvnp\\r\\nbwi\\r\\nzzh\\r\\nhkc\\r\\nwdr\\r\\nldh\\r\\nvel\\r\\nizj\\r\\nfhb\\r\\nqrn\\r\\nqpp\\r\\nvzs\\r\\nlhg\\r\\nkee\\r\\nlbq\\r\\nzhy\\r\\nwcl\\r\\nyaa\\r\\nton\\r\\nfly\\r\\nkyw\\r\\nept\\r\\ngwq\\r\\ncoe\\r\\nopd\\r\\neez\\r\\nnmx\\r\\nnjg\\r\\nwhy\\r\\nvel\\r\\nafq\\r\\nnbq\\r\\nulx\\r\\noxs\\r\\nbbo\\r\\nyhx\\r\\nfmz\\r\\nnrg\\r\\nnfm\\r\\njek\\r\\nbeu\\r\\ntya\\r\\nxgs\\r\\nsgg\\r\\nnkq\\r\\nbbv\\r\\nwkd\\r\\ntns\\r\\nfdt\\r\\neox\\r\\nobc\\r\\neab\\r\\nkkj\\r\\noub\\r\\ngji\\r\\nrht\\r\\nozv\\r\\nysk\\r\\nsbt\\r\\nflf\\r\\npbu\\r\\nlxb\\r\\npzs\\r\\nrzh\\r\\ncea\\r\\nkmi\\r\\nuea\\r\\nncc\\r\\nzng\\r\\nvkn\\r\\njhn\\r\\njqw\\r\\nlqc\\r\\nmbt\\r\\nlov\\r\\ngam\\r\\n', 'output': ['tvdiixs']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 100 + 1;\nchar s[maxn][maxn];\nbool check[maxn];\nint row[maxn];\nint col[maxn];\nint main() {\n  int n, m;\n  cin >> n >> m;\n  for (int i = 0; i < n; i++) {\n    cin >> s[i];\n    for (int j = 0; j < m; j++) check[j] = false;\n    for (int j = 0; j < m; j++) {\n      if (!check[j]) {\n        check[j] = true;\n        for (int p = i; p >= 0; p--) {\n          row[j]++;\n          if (s[p][j] == s[i][j]) {\n            check[j] = false;\n          }\n        }\n      }\n    }\n    for (int j = 0; j < m; j++) {\n      if (!check[j]) {\n        check[j] = true;\n        for (int p = i + 1; p < n; p++) {\n          col[j]++;\n          if (s[p][j] == s[i][j]) {\n            check[j] = false;\n          }\n        }\n      }\n    }\n  }\n  for (int i = 0; i < m; i++) {\n    if (col[i] == n) continue;\n    if (row[i] == n) continue;\n    if (s[0][i] == s[n - 1][i]) continue;\n    if (s[n - 1][i] == s[0][i]) continue;\n    printf(\"%c\", s[0][i]);\n  }\n  printf(\"\\n\");\n}\n"}
{"src_uid": "d90da1e932a6aa546bec4e1bd4b1fbec", "id": 9, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '3 3\\r\\n1 2 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['6\\r\\n']}, {'input': '3 2\\r\\n2 3 4\\r\\n2 3\\r\\n2 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 4\\r\\n1 1 1 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n10 10 5 1\\r\\n2 1\\r\\n3 1\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 0\\r\\n9 8 2 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 5 9 6\\r\\n3 2\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 1 10 1\\r\\n2 1\\r\\n3 2\\r\\n1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n1 2 8 6\\r\\n1 3\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['15\\r\\n']}, {'input': '4 4\\r\\n9 3 3 1\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n4 3\\r\\n', 'output': ['15\\r\\n']}, {'input': '4 3\\r\\n6 8 10 1\\r\\n2 3\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 5\\r\\n4 10 3 9\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n2 4\\r\\n4 3\\r\\n', 'output': ['17\\r\\n']}, {'input': '4 2\\r\\n2 9 8 4\\r\\n1 3\\r\\n4 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 3 4 4\\r\\n2 1\\r\\n4 1\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 6\\r\\n39 15 73 82 37 40\\r\\n2 1\\r\\n5 1\\r\\n1 6\\r\\n2 6\\r\\n6 3\\r\\n4 6\\r\\n', 'output': ['94\\r\\n']}, {'input': '6 7\\r\\n85 2 34 6 83 61\\r\\n1 2\\r\\n2 3\\r\\n4 2\\r\\n4 3\\r\\n1 5\\r\\n4 5\\r\\n6 3\\r\\n', 'output': ['42\\r\\n']}, {'input': '6 8\\r\\n64 44 5 31 14 16\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n2 5\\r\\n3 5\\r\\n6 1\\r\\n6 3\\r\\n6 4\\r\\n', 'output': ['85\\r\\n']}, {'input': '6 8\\r\\n36 19 99 8 52 77\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n4 3\\r\\n1 5\\r\\n5 4\\r\\n1 6\\r\\n6 2\\r\\n', 'output': ['132\\r\\n']}, {'input': '6 5\\r\\n59 69 52 38 93 53\\r\\n4 2\\r\\n1 5\\r\\n6 1\\r\\n4 6\\r\\n5 6\\r\\n', 'output': ['205\\r\\n']}, {'input': '6 11\\r\\n95 81 74 94 60 69\\r\\n3 2\\r\\n1 4\\r\\n4 2\\r\\n3 4\\r\\n1 5\\r\\n5 2\\r\\n5 3\\r\\n1 6\\r\\n2 6\\r\\n3 6\\r\\n4 6\\r\\n', 'output': ['215\\r\\n']}, {'input': '6 8\\r\\n69 36 41 23 91 35\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n1 4\\r\\n3 4\\r\\n3 5\\r\\n5 4\\r\\n4 6\\r\\n', 'output': ['133\\r\\n']}, {'input': '6 6\\r\\n33 76 98 59 4 69\\r\\n1 2\\r\\n3 2\\r\\n5 1\\r\\n2 5\\r\\n4 5\\r\\n6 5\\r\\n', 'output': ['113\\r\\n']}, {'input': '6 6\\r\\n92 56 15 83 30 28\\r\\n3 1\\r\\n4 1\\r\\n2 5\\r\\n5 4\\r\\n2 6\\r\\n6 3\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 10\\r\\n17 5 55 24 55 74\\r\\n1 3\\r\\n2 3\\r\\n3 4\\r\\n5 1\\r\\n5 2\\r\\n5 3\\r\\n4 5\\r\\n6 2\\r\\n6 3\\r\\n6 5\\r\\n', 'output': ['115\\r\\n']}, {'input': '3 3\\r\\n1000000 1000000 1000000\\r\\n2 1\\r\\n1 3\\r\\n3 2\\r\\n', 'output': ['3000000\\r\\n']}, {'input': '3 0\\r\\n1 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n100000 100000 100001\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['300001\\r\\n']}, {'input': '3 3\\r\\n1 1 999999\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['1000001\\r\\n']}, {'input': '3 3\\r\\n999999 1 1\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['1000001\\r\\n']}, {'input': '3 3\\r\\n1000000 1000000 1000000\\r\\n1 2\\r\\n2 3\\r\\n1 3\\r\\n', 'output': ['3000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 101;\nint dp[N];\nint a[N];\nint n;\nint m;\nint d[N][N];\nbool mark[N][N];\nvoid dfs(int u) {\n  if (u == 3) {\n    dp[u] = a[1] + a[2];\n    return;\n  }\n  for (int i = 1; i <= n; i++)\n    if (mark[u][i])\n      dfs(u + 1);\n    else {\n      dp[u] = a[u] + dp[u + 1];\n      dfs(u + 1);\n    }\n}\nint main() {\n  scanf(\"%d %d\", &n, &m);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n  for (int i = 1; i <= m; i++) {\n    int u, v;\n    scanf(\"%d %d\", &u, &v);\n    d[u][v] = 1;\n    mark[u][v] = true;\n    mark[v][u] = true;\n  }\n  dfs(1);\n  int ans = 1000000000;\n  for (int i = 1; i <= 3; i++) ans = min(ans, dp[i]);\n  if (ans == 1000000000)\n    printf(\"-1\");\n  else\n    printf(\"%d\", ans);\n  return 0;\n}\n"}
{"src_uid": "d90da1e932a6aa546bec4e1bd4b1fbec", "id": 9, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '3 3\\r\\n1 2 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['6\\r\\n']}, {'input': '3 2\\r\\n2 3 4\\r\\n2 3\\r\\n2 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 4\\r\\n1 1 1 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n10 10 5 1\\r\\n2 1\\r\\n3 1\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 0\\r\\n9 8 2 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 5 9 6\\r\\n3 2\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 1 10 1\\r\\n2 1\\r\\n3 2\\r\\n1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n1 2 8 6\\r\\n1 3\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['15\\r\\n']}, {'input': '4 4\\r\\n9 3 3 1\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n4 3\\r\\n', 'output': ['15\\r\\n']}, {'input': '4 3\\r\\n6 8 10 1\\r\\n2 3\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 5\\r\\n4 10 3 9\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n2 4\\r\\n4 3\\r\\n', 'output': ['17\\r\\n']}, {'input': '4 2\\r\\n2 9 8 4\\r\\n1 3\\r\\n4 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 3 4 4\\r\\n2 1\\r\\n4 1\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 6\\r\\n39 15 73 82 37 40\\r\\n2 1\\r\\n5 1\\r\\n1 6\\r\\n2 6\\r\\n6 3\\r\\n4 6\\r\\n', 'output': ['94\\r\\n']}, {'input': '6 7\\r\\n85 2 34 6 83 61\\r\\n1 2\\r\\n2 3\\r\\n4 2\\r\\n4 3\\r\\n1 5\\r\\n4 5\\r\\n6 3\\r\\n', 'output': ['42\\r\\n']}, {'input': '6 8\\r\\n64 44 5 31 14 16\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n2 5\\r\\n3 5\\r\\n6 1\\r\\n6 3\\r\\n6 4\\r\\n', 'output': ['85\\r\\n']}, {'input': '6 8\\r\\n36 19 99 8 52 77\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n4 3\\r\\n1 5\\r\\n5 4\\r\\n1 6\\r\\n6 2\\r\\n', 'output': ['132\\r\\n']}, {'input': '6 5\\r\\n59 69 52 38 93 53\\r\\n4 2\\r\\n1 5\\r\\n6 1\\r\\n4 6\\r\\n5 6\\r\\n', 'output': ['205\\r\\n']}, {'input': '6 11\\r\\n95 81 74 94 60 69\\r\\n3 2\\r\\n1 4\\r\\n4 2\\r\\n3 4\\r\\n1 5\\r\\n5 2\\r\\n5 3\\r\\n1 6\\r\\n2 6\\r\\n3 6\\r\\n4 6\\r\\n', 'output': ['215\\r\\n']}, {'input': '6 8\\r\\n69 36 41 23 91 35\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n1 4\\r\\n3 4\\r\\n3 5\\r\\n5 4\\r\\n4 6\\r\\n', 'output': ['133\\r\\n']}, {'input': '6 6\\r\\n33 76 98 59 4 69\\r\\n1 2\\r\\n3 2\\r\\n5 1\\r\\n2 5\\r\\n4 5\\r\\n6 5\\r\\n', 'output': ['113\\r\\n']}, {'input': '6 6\\r\\n92 56 15 83 30 28\\r\\n3 1\\r\\n4 1\\r\\n2 5\\r\\n5 4\\r\\n2 6\\r\\n6 3\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 10\\r\\n17 5 55 24 55 74\\r\\n1 3\\r\\n2 3\\r\\n3 4\\r\\n5 1\\r\\n5 2\\r\\n5 3\\r\\n4 5\\r\\n6 2\\r\\n6 3\\r\\n6 5\\r\\n', 'output': ['115\\r\\n']}, {'input': '3 3\\r\\n1000000 1000000 1000000\\r\\n2 1\\r\\n1 3\\r\\n3 2\\r\\n', 'output': ['3000000\\r\\n']}, {'input': '3 0\\r\\n1 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n100000 100000 100001\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['300001\\r\\n']}, {'input': '3 3\\r\\n1 1 999999\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['1000001\\r\\n']}, {'input': '3 3\\r\\n999999 1 1\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['1000001\\r\\n']}, {'input': '3 3\\r\\n1000000 1000000 1000000\\r\\n1 2\\r\\n2 3\\r\\n1 3\\r\\n', 'output': ['3000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MXN = 500002;\nint n, m, i, j, k, x;\nint a[MXN];\nmap<int, int> A;\nint main() {\n  cin >> n >> m;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  for (int i = 0; i < m; i++) {\n    cin >> x >> x;\n    if (A.find(x)!= A.end()) {\n      A[x]++;\n    } else {\n      A.insert(pair<int, int>(x, 1));\n    }\n  }\n  int mn = 100000000;\n  for (int i = 0; i < n; i++) {\n    int c1 = 0;\n    int c2 = 0;\n    if (A.find(i)!= A.end()) {\n      c1 = a[i];\n    }\n    if (A.find(i ^ 1)!= A.end()) {\n      c2 = a[i ^ 1];\n    }\n    if (c1 && c2) {\n      mn = min(mn, c1 + c2 + a[(i ^ 1) ^ 1]);\n    }\n  }\n  if (mn == 100000000) {\n    cout << -1 << endl;\n  } else {\n    cout << mn << endl;\n  }\n  return 0;\n}\n"}
{"src_uid": "d90da1e932a6aa546bec4e1bd4b1fbec", "id": 9, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '3 3\\r\\n1 2 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['6\\r\\n']}, {'input': '3 2\\r\\n2 3 4\\r\\n2 3\\r\\n2 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 4\\r\\n1 1 1 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n10 10 5 1\\r\\n2 1\\r\\n3 1\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 0\\r\\n9 8 2 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 5 9 6\\r\\n3 2\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 1 10 1\\r\\n2 1\\r\\n3 2\\r\\n1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n1 2 8 6\\r\\n1 3\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['15\\r\\n']}, {'input': '4 4\\r\\n9 3 3 1\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n4 3\\r\\n', 'output': ['15\\r\\n']}, {'input': '4 3\\r\\n6 8 10 1\\r\\n2 3\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 5\\r\\n4 10 3 9\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n2 4\\r\\n4 3\\r\\n', 'output': ['17\\r\\n']}, {'input': '4 2\\r\\n2 9 8 4\\r\\n1 3\\r\\n4 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 3 4 4\\r\\n2 1\\r\\n4 1\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 6\\r\\n39 15 73 82 37 40\\r\\n2 1\\r\\n5 1\\r\\n1 6\\r\\n2 6\\r\\n6 3\\r\\n4 6\\r\\n', 'output': ['94\\r\\n']}, {'input': '6 7\\r\\n85 2 34 6 83 61\\r\\n1 2\\r\\n2 3\\r\\n4 2\\r\\n4 3\\r\\n1 5\\r\\n4 5\\r\\n6 3\\r\\n', 'output': ['42\\r\\n']}, {'input': '6 8\\r\\n64 44 5 31 14 16\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n2 5\\r\\n3 5\\r\\n6 1\\r\\n6 3\\r\\n6 4\\r\\n', 'output': ['85\\r\\n']}, {'input': '6 8\\r\\n36 19 99 8 52 77\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n4 3\\r\\n1 5\\r\\n5 4\\r\\n1 6\\r\\n6 2\\r\\n', 'output': ['132\\r\\n']}, {'input': '6 5\\r\\n59 69 52 38 93 53\\r\\n4 2\\r\\n1 5\\r\\n6 1\\r\\n4 6\\r\\n5 6\\r\\n', 'output': ['205\\r\\n']}, {'input': '6 11\\r\\n95 81 74 94 60 69\\r\\n3 2\\r\\n1 4\\r\\n4 2\\r\\n3 4\\r\\n1 5\\r\\n5 2\\r\\n5 3\\r\\n1 6\\r\\n2 6\\r\\n3 6\\r\\n4 6\\r\\n', 'output': ['215\\r\\n']}, {'input': '6 8\\r\\n69 36 41 23 91 35\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n1 4\\r\\n3 4\\r\\n3 5\\r\\n5 4\\r\\n4 6\\r\\n', 'output': ['133\\r\\n']}, {'input': '6 6\\r\\n33 76 98 59 4 69\\r\\n1 2\\r\\n3 2\\r\\n5 1\\r\\n2 5\\r\\n4 5\\r\\n6 5\\r\\n', 'output': ['113\\r\\n']}, {'input': '6 6\\r\\n92 56 15 83 30 28\\r\\n3 1\\r\\n4 1\\r\\n2 5\\r\\n5 4\\r\\n2 6\\r\\n6 3\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 10\\r\\n17 5 55 24 55 74\\r\\n1 3\\r\\n2 3\\r\\n3 4\\r\\n5 1\\r\\n5 2\\r\\n5 3\\r\\n4 5\\r\\n6 2\\r\\n6 3\\r\\n6 5\\r\\n', 'output': ['115\\r\\n']}, {'input': '3 3\\r\\n1000000 1000000 1000000\\r\\n2 1\\r\\n1 3\\r\\n3 2\\r\\n', 'output': ['3000000\\r\\n']}, {'input': '3 0\\r\\n1 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n100000 100000 100001\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['300001\\r\\n']}, {'input': '3 3\\r\\n1 1 999999\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['1000001\\r\\n']}, {'input': '3 3\\r\\n999999 1 1\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['1000001\\r\\n']}, {'input': '3 3\\r\\n1000000 1000000 1000000\\r\\n1 2\\r\\n2 3\\r\\n1 3\\r\\n', 'output': ['3000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m;\n  cin >> n >> m;\n  vector<int> a(n);\n  vector<vector<bool>> mp(n, vector<bool>(n, false));\n  vector<bool> vis(n, false);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  for (int i = 0; i < m; i++) {\n    int u, v;\n    cin >> u >> v;\n    mp[u - 1][v - 1] = mp[v - 1][u - 1] = true;\n  }\n  int ans = INT_MAX;\n  for (int i = 0; i < n; i++) {\n    if (vis[i]) continue;\n    vector<int> d(n);\n    d[i] = 0;\n    queue<int> q;\n    q.push(i);\n    while (!q.empty()) {\n      int x = q.front();\n      q.pop();\n      for (int j = 0; j < n; j++) {\n        if (mp[x][j] &&!vis[j]) {\n          d[j] = d[x] + 1;\n          vis[j] = true;\n          q.push(j);\n        }\n      }\n    }\n    int s = 0;\n    for (int i = 0; i < n; i++) s += min(3, d[i]);\n    ans = min(ans, s);\n  }\n  cout << (ans < INT_MAX? ans : -1) << endl;\n  return 0;\n}\n"}
{"src_uid": "d90da1e932a6aa546bec4e1bd4b1fbec", "id": 9, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '3 3\\r\\n1 2 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['6\\r\\n']}, {'input': '3 2\\r\\n2 3 4\\r\\n2 3\\r\\n2 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 4\\r\\n1 1 1 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n10 10 5 1\\r\\n2 1\\r\\n3 1\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 0\\r\\n9 8 2 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 5 9 6\\r\\n3 2\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 1 10 1\\r\\n2 1\\r\\n3 2\\r\\n1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n1 2 8 6\\r\\n1 3\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['15\\r\\n']}, {'input': '4 4\\r\\n9 3 3 1\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n4 3\\r\\n', 'output': ['15\\r\\n']}, {'input': '4 3\\r\\n6 8 10 1\\r\\n2 3\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 5\\r\\n4 10 3 9\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n2 4\\r\\n4 3\\r\\n', 'output': ['17\\r\\n']}, {'input': '4 2\\r\\n2 9 8 4\\r\\n1 3\\r\\n4 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 3 4 4\\r\\n2 1\\r\\n4 1\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 6\\r\\n39 15 73 82 37 40\\r\\n2 1\\r\\n5 1\\r\\n1 6\\r\\n2 6\\r\\n6 3\\r\\n4 6\\r\\n', 'output': ['94\\r\\n']}, {'input': '6 7\\r\\n85 2 34 6 83 61\\r\\n1 2\\r\\n2 3\\r\\n4 2\\r\\n4 3\\r\\n1 5\\r\\n4 5\\r\\n6 3\\r\\n', 'output': ['42\\r\\n']}, {'input': '6 8\\r\\n64 44 5 31 14 16\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n2 5\\r\\n3 5\\r\\n6 1\\r\\n6 3\\r\\n6 4\\r\\n', 'output': ['85\\r\\n']}, {'input': '6 8\\r\\n36 19 99 8 52 77\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n4 3\\r\\n1 5\\r\\n5 4\\r\\n1 6\\r\\n6 2\\r\\n', 'output': ['132\\r\\n']}, {'input': '6 5\\r\\n59 69 52 38 93 53\\r\\n4 2\\r\\n1 5\\r\\n6 1\\r\\n4 6\\r\\n5 6\\r\\n', 'output': ['205\\r\\n']}, {'input': '6 11\\r\\n95 81 74 94 60 69\\r\\n3 2\\r\\n1 4\\r\\n4 2\\r\\n3 4\\r\\n1 5\\r\\n5 2\\r\\n5 3\\r\\n1 6\\r\\n2 6\\r\\n3 6\\r\\n4 6\\r\\n', 'output': ['215\\r\\n']}, {'input': '6 8\\r\\n69 36 41 23 91 35\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n1 4\\r\\n3 4\\r\\n3 5\\r\\n5 4\\r\\n4 6\\r\\n', 'output': ['133\\r\\n']}, {'input': '6 6\\r\\n33 76 98 59 4 69\\r\\n1 2\\r\\n3 2\\r\\n5 1\\r\\n2 5\\r\\n4 5\\r\\n6 5\\r\\n', 'output': ['113\\r\\n']}, {'input': '6 6\\r\\n92 56 15 83 30 28\\r\\n3 1\\r\\n4 1\\r\\n2 5\\r\\n5 4\\r\\n2 6\\r\\n6 3\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 10\\r\\n17 5 55 24 55 74\\r\\n1 3\\r\\n2 3\\r\\n3 4\\r\\n5 1\\r\\n5 2\\r\\n5 3\\r\\n4 5\\r\\n6 2\\r\\n6 3\\r\\n6 5\\r\\n', 'output': ['115\\r\\n']}, {'input': '3 3\\r\\n1000000 1000000 1000000\\r\\n2 1\\r\\n1 3\\r\\n3 2\\r\\n', 'output': ['3000000\\r\\n']}, {'input': '3 0\\r\\n1 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n100000 100000 100001\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['300001\\r\\n']}, {'input': '3 3\\r\\n1 1 999999\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['1000001\\r\\n']}, {'input': '3 3\\r\\n999999 1 1\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['1000001\\r\\n']}, {'input': '3 3\\r\\n1000000 1000000 1000000\\r\\n1 2\\r\\n2 3\\r\\n1 3\\r\\n', 'output': ['3000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, a[N], d[N][3];\nint main() {\n  cin >> n >> m;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  sort(a, a + n);\n  for (int i = 0; i < m; i++) {\n    int u, v;\n    cin >> u >> v;\n    u--;\n    v--;\n    for (int j = 0; j < 3; j++)\n      if (d[u][j] == 0) {\n        d[u][j] = a[v];\n        break;\n      }\n  }\n  for (int i = 0; i < 3; i++) {\n    if (d[0][i] == 0) {\n      for (int j = 0; j < 3; j++) {\n        if (d[1][j] == 0) {\n          d[0][i] = a[2];\n          d[1][j] = a[2];\n          break;\n        }\n      }\n    }\n  }\n  for (int i = 0; i < 3; i++) {\n    if (d[0][i] == 0) {\n      cout << -1 << endl;\n      return 0;\n    }\n  }\n  cout << d[0][0] + d[1][1] + d[2][2] << endl;\n  return 0;\n}\n"}
{"src_uid": "d90da1e932a6aa546bec4e1bd4b1fbec", "id": 9, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '3 3\\r\\n1 2 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['6\\r\\n']}, {'input': '3 2\\r\\n2 3 4\\r\\n2 3\\r\\n2 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 4\\r\\n1 1 1 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n10 10 5 1\\r\\n2 1\\r\\n3 1\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 0\\r\\n9 8 2 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 5 9 6\\r\\n3 2\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 1 10 1\\r\\n2 1\\r\\n3 2\\r\\n1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n1 2 8 6\\r\\n1 3\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['15\\r\\n']}, {'input': '4 4\\r\\n9 3 3 1\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n4 3\\r\\n', 'output': ['15\\r\\n']}, {'input': '4 3\\r\\n6 8 10 1\\r\\n2 3\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 5\\r\\n4 10 3 9\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n2 4\\r\\n4 3\\r\\n', 'output': ['17\\r\\n']}, {'input': '4 2\\r\\n2 9 8 4\\r\\n1 3\\r\\n4 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 3 4 4\\r\\n2 1\\r\\n4 1\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 6\\r\\n39 15 73 82 37 40\\r\\n2 1\\r\\n5 1\\r\\n1 6\\r\\n2 6\\r\\n6 3\\r\\n4 6\\r\\n', 'output': ['94\\r\\n']}, {'input': '6 7\\r\\n85 2 34 6 83 61\\r\\n1 2\\r\\n2 3\\r\\n4 2\\r\\n4 3\\r\\n1 5\\r\\n4 5\\r\\n6 3\\r\\n', 'output': ['42\\r\\n']}, {'input': '6 8\\r\\n64 44 5 31 14 16\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n2 5\\r\\n3 5\\r\\n6 1\\r\\n6 3\\r\\n6 4\\r\\n', 'output': ['85\\r\\n']}, {'input': '6 8\\r\\n36 19 99 8 52 77\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n4 3\\r\\n1 5\\r\\n5 4\\r\\n1 6\\r\\n6 2\\r\\n', 'output': ['132\\r\\n']}, {'input': '6 5\\r\\n59 69 52 38 93 53\\r\\n4 2\\r\\n1 5\\r\\n6 1\\r\\n4 6\\r\\n5 6\\r\\n', 'output': ['205\\r\\n']}, {'input': '6 11\\r\\n95 81 74 94 60 69\\r\\n3 2\\r\\n1 4\\r\\n4 2\\r\\n3 4\\r\\n1 5\\r\\n5 2\\r\\n5 3\\r\\n1 6\\r\\n2 6\\r\\n3 6\\r\\n4 6\\r\\n', 'output': ['215\\r\\n']}, {'input': '6 8\\r\\n69 36 41 23 91 35\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n1 4\\r\\n3 4\\r\\n3 5\\r\\n5 4\\r\\n4 6\\r\\n', 'output': ['133\\r\\n']}, {'input': '6 6\\r\\n33 76 98 59 4 69\\r\\n1 2\\r\\n3 2\\r\\n5 1\\r\\n2 5\\r\\n4 5\\r\\n6 5\\r\\n', 'output': ['113\\r\\n']}, {'input': '6 6\\r\\n92 56 15 83 30 28\\r\\n3 1\\r\\n4 1\\r\\n2 5\\r\\n5 4\\r\\n2 6\\r\\n6 3\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 10\\r\\n17 5 55 24 55 74\\r\\n1 3\\r\\n2 3\\r\\n3 4\\r\\n5 1\\r\\n5 2\\r\\n5 3\\r\\n4 5\\r\\n6 2\\r\\n6 3\\r\\n6 5\\r\\n', 'output': ['115\\r\\n']}, {'input': '3 3\\r\\n1000000 1000000 1000000\\r\\n2 1\\r\\n1 3\\r\\n3 2\\r\\n', 'output': ['3000000\\r\\n']}, {'input': '3 0\\r\\n1 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n100000 100000 100001\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['300001\\r\\n']}, {'input': '3 3\\r\\n1 1 999999\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['1000001\\r\\n']}, {'input': '3 3\\r\\n999999 1 1\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['1000001\\r\\n']}, {'input': '3 3\\r\\n1000000 1000000 1000000\\r\\n1 2\\r\\n2 3\\r\\n1 3\\r\\n', 'output': ['3000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nvector<int> g[300001], a;\nset<int> s[300001];\nbool vis[300001];\nint v[3], res = 1000000000;\nvoid dfs(int idx, int sum) {\n  vis[idx] = true;\n  if (sum == 3) {\n    for (auto it : v) res = min(res, a[it]);\n  }\n  for (auto to : g[idx])\n    if (!vis[to]) dfs(to, sum + (s[to].count(idx) > 0? 1 : 0));\n}\nint main() {\n  int n, m, u, v;\n  scanf(\"%d%d\", &n, &m);\n  for (int i = 0; i < n; i++) {\n    int x;\n    scanf(\"%d\", &x);\n    a.push_back(x);\n  }\n  for (int i = 0; i < m; i++) {\n    scanf(\"%d%d\", &u, &v);\n    u--;\n    v--;\n    g[u].push_back(v);\n    g[v].push_back(u);\n    s[u].insert(v);\n    s[v].insert(u);\n  }\n  for (int i = 0; i < n; i++)\n    if (!vis[i]) dfs(i, 0);\n  if (res == 1000000000)\n    printf(\"-1\\n\");\n  else\n    printf(\"%d\\n\", res);\n  return 0;\n}\n"}
{"src_uid": "138fd96bf5a677a6d59c20f88fd612f1", "id": 10, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1400, "testcases": "[{'input': '5 15 15\\r\\n', 'output': ['11\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '2 3 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 99 11\\r\\n', 'output': ['11\\r\\n']}, {'input': '3 254 18\\r\\n', 'output': ['16\\r\\n1\\r\\n1\\r\\n']}, {'input': '4 324 77\\r\\n', 'output': ['74\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '5 315 90\\r\\n', 'output': ['86\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '6 225 59\\r\\n', 'output': ['54\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '7 351 29\\r\\n', 'output': ['23\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '100 913723780421 955988\\r\\n', 'output': ['-1\\r\\n']}, {'input': '200 894176381082 945808\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1000 824905348050 909242\\r\\n', 'output': ['-1\\r\\n']}, {'input': '31000 819461299082 936240\\r\\n', 'output': ['-1\\r\\n']}, {'input': '44000 772772899626 923074\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99999 681508136225 925533\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99976 664640815001 915230\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100000 729199960625 953931\\r\\n', 'output': ['-1\\r\\n']}, {'input': '50 890543266647 943735\\r\\n', 'output': ['-1\\r\\n']}, {'input': '60 817630084499 904288\\r\\n', 'output': ['904229\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '99999 716046078026 946193\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10000 950051796437 984705\\r\\n', 'output': ['-1\\r\\n']}, {'input': '999 992972391401 997478\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 983300308227 991615\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 912219830404 955103\\r\\n', 'output': ['955102\\r\\n1\\r\\n']}, {'input': '3 934371623645 966631\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 857839030421 926199\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7 897398130730 947317\\r\\n', 'output': ['-1\\r\\n']}, {'input': '60 833021290059 912759\\r\\n', 'output': ['912700\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '1 860113420929 927423\\r\\n', 'output': ['927423\\r\\n']}, {'input': '2 933669982757 966267\\r\\n', 'output': ['966266\\r\\n1\\r\\n']}, {'input': '3 933157932003 966003\\r\\n', 'output': ['966001\\r\\n1\\r\\n1\\r\\n']}, {'input': '4 944626542564 971922\\r\\n', 'output': ['971919\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '7 937519681542 968262\\r\\n', 'output': ['968256\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '100000 1000000000000 1000000\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99999 999999999999 999999\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '11 10 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 5 10\\r\\n', 'output': ['10\\r\\n']}, {'input': '10 3 8\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 37 10\\r\\n', 'output': ['6\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '5 1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 1000000000000 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1000000\\r\\n', 'output': ['1000000\\r\\n']}, {'input': '100000 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100000 1000000000000 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1000000000000 1000000\\r\\n', 'output': ['1000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100005;\nlong long n, x, y;\nint main() {\n  scanf(\"%lld%lld%lld\", &n, &x, &y);\n  if (n == 1) {\n    if (x > y)\n      return printf(\"-1\"), 0;\n    else\n      return printf(\"%lld\", y), 0;\n  }\n  if (x > 1ll * (n - 1) * (n - 1) + 1) return puts(\"-1\");\n  printf(\"%lld\\n%lld\", 1, n - 1);\n  for (int i = 2; i <= n - 2; i++) printf(\"%lld\\n\", 1);\n  if (1ll * (n - 1) * (n - 1) + 1 <= x && x <= y) return puts(\"1\");\n  return 0;\n}\n"}
{"src_uid": "138fd96bf5a677a6d59c20f88fd612f1", "id": 10, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1400, "testcases": "[{'input': '5 15 15\\r\\n', 'output': ['11\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '2 3 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 99 11\\r\\n', 'output': ['11\\r\\n']}, {'input': '3 254 18\\r\\n', 'output': ['16\\r\\n1\\r\\n1\\r\\n']}, {'input': '4 324 77\\r\\n', 'output': ['74\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '5 315 90\\r\\n', 'output': ['86\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '6 225 59\\r\\n', 'output': ['54\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '7 351 29\\r\\n', 'output': ['23\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '100 913723780421 955988\\r\\n', 'output': ['-1\\r\\n']}, {'input': '200 894176381082 945808\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1000 824905348050 909242\\r\\n', 'output': ['-1\\r\\n']}, {'input': '31000 819461299082 936240\\r\\n', 'output': ['-1\\r\\n']}, {'input': '44000 772772899626 923074\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99999 681508136225 925533\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99976 664640815001 915230\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100000 729199960625 953931\\r\\n', 'output': ['-1\\r\\n']}, {'input': '50 890543266647 943735\\r\\n', 'output': ['-1\\r\\n']}, {'input': '60 817630084499 904288\\r\\n', 'output': ['904229\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '99999 716046078026 946193\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10000 950051796437 984705\\r\\n', 'output': ['-1\\r\\n']}, {'input': '999 992972391401 997478\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 983300308227 991615\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 912219830404 955103\\r\\n', 'output': ['955102\\r\\n1\\r\\n']}, {'input': '3 934371623645 966631\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 857839030421 926199\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7 897398130730 947317\\r\\n', 'output': ['-1\\r\\n']}, {'input': '60 833021290059 912759\\r\\n', 'output': ['912700\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '1 860113420929 927423\\r\\n', 'output': ['927423\\r\\n']}, {'input': '2 933669982757 966267\\r\\n', 'output': ['966266\\r\\n1\\r\\n']}, {'input': '3 933157932003 966003\\r\\n', 'output': ['966001\\r\\n1\\r\\n1\\r\\n']}, {'input': '4 944626542564 971922\\r\\n', 'output': ['971919\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '7 937519681542 968262\\r\\n', 'output': ['968256\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '100000 1000000000000 1000000\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99999 999999999999 999999\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '11 10 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 5 10\\r\\n', 'output': ['10\\r\\n']}, {'input': '10 3 8\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 37 10\\r\\n', 'output': ['6\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '5 1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 1000000000000 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1000000\\r\\n', 'output': ['1000000\\r\\n']}, {'input': '100000 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100000 1000000000000 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1000000000000 1000000\\r\\n', 'output': ['1000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, x, y;\nint ans[100010];\nint main() {\n  scanf(\"%d%d%d\", &n, &x, &y);\n  if (n == 1 && y >= x) {\n    printf(\"%d\\n\", y);\n    return 0;\n  } else if (n == 1) {\n    printf(\"-1\\n\");\n    return 0;\n  }\n  if (y == 1) {\n    printf(\"1\\n\");\n    return 0;\n  }\n  ans[1] = 1;\n  ans[2] = 1;\n  int a = 2, b = 1;\n  long long temp = (long long)a * a + (long long)b * b;\n  for (int i = 2; i < n; i++) {\n    if (temp >= x && temp <= y) {\n      ans[i] = a;\n    } else {\n      a++;\n      temp = (long long)a * a + (long long)b * b;\n    }\n    b++;\n    temp = (long long)a * a + (long long)b * b;\n  }\n  ans[n] = y;\n  for (int i = 1; i <= n; i++) {\n    printf(\"%d\\n\", ans[i]);\n  }\n  return 0;\n}\n"}
{"src_uid": "138fd96bf5a677a6d59c20f88fd612f1", "id": 10, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1400, "testcases": "[{'input': '5 15 15\\r\\n', 'output': ['11\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '2 3 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 99 11\\r\\n', 'output': ['11\\r\\n']}, {'input': '3 254 18\\r\\n', 'output': ['16\\r\\n1\\r\\n1\\r\\n']}, {'input': '4 324 77\\r\\n', 'output': ['74\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '5 315 90\\r\\n', 'output': ['86\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '6 225 59\\r\\n', 'output': ['54\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '7 351 29\\r\\n', 'output': ['23\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '100 913723780421 955988\\r\\n', 'output': ['-1\\r\\n']}, {'input': '200 894176381082 945808\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1000 824905348050 909242\\r\\n', 'output': ['-1\\r\\n']}, {'input': '31000 819461299082 936240\\r\\n', 'output': ['-1\\r\\n']}, {'input': '44000 772772899626 923074\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99999 681508136225 925533\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99976 664640815001 915230\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100000 729199960625 953931\\r\\n', 'output': ['-1\\r\\n']}, {'input': '50 890543266647 943735\\r\\n', 'output': ['-1\\r\\n']}, {'input': '60 817630084499 904288\\r\\n', 'output': ['904229\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '99999 716046078026 946193\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10000 950051796437 984705\\r\\n', 'output': ['-1\\r\\n']}, {'input': '999 992972391401 997478\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 983300308227 991615\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 912219830404 955103\\r\\n', 'output': ['955102\\r\\n1\\r\\n']}, {'input': '3 934371623645 966631\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 857839030421 926199\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7 897398130730 947317\\r\\n', 'output': ['-1\\r\\n']}, {'input': '60 833021290059 912759\\r\\n', 'output': ['912700\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '1 860113420929 927423\\r\\n', 'output': ['927423\\r\\n']}, {'input': '2 933669982757 966267\\r\\n', 'output': ['966266\\r\\n1\\r\\n']}, {'input': '3 933157932003 966003\\r\\n', 'output': ['966001\\r\\n1\\r\\n1\\r\\n']}, {'input': '4 944626542564 971922\\r\\n', 'output': ['971919\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '7 937519681542 968262\\r\\n', 'output': ['968256\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '100000 1000000000000 1000000\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99999 999999999999 999999\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '11 10 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 5 10\\r\\n', 'output': ['10\\r\\n']}, {'input': '10 3 8\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 37 10\\r\\n', 'output': ['6\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '5 1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 1000000000000 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1000000\\r\\n', 'output': ['1000000\\r\\n']}, {'input': '100000 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100000 1000000000000 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1000000000000 1000000\\r\\n', 'output': ['1000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, x, y;\nint main() {\n  cin >> n >> x >> y;\n  if (n == 1) {\n    if (y >= 1)\n      cout << y;\n    else if (x <= 1)\n      cout << \"-1\";\n    else if (x - 1 < y)\n      cout << 1 << endl << x - 1;\n    else\n      cout << y << endl << y;\n  } else {\n    if (x > (long long)y * y)\n      cout << \"-1\" << endl;\n    else {\n      for (int i = 1; i <= n - 2; i++) cout << \"1\" << endl;\n      cout << y - (n - 2);\n      cout << endl;\n      cout << y;\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "138fd96bf5a677a6d59c20f88fd612f1", "id": 10, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1400, "testcases": "[{'input': '5 15 15\\r\\n', 'output': ['11\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '2 3 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 99 11\\r\\n', 'output': ['11\\r\\n']}, {'input': '3 254 18\\r\\n', 'output': ['16\\r\\n1\\r\\n1\\r\\n']}, {'input': '4 324 77\\r\\n', 'output': ['74\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '5 315 90\\r\\n', 'output': ['86\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '6 225 59\\r\\n', 'output': ['54\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '7 351 29\\r\\n', 'output': ['23\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '100 913723780421 955988\\r\\n', 'output': ['-1\\r\\n']}, {'input': '200 894176381082 945808\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1000 824905348050 909242\\r\\n', 'output': ['-1\\r\\n']}, {'input': '31000 819461299082 936240\\r\\n', 'output': ['-1\\r\\n']}, {'input': '44000 772772899626 923074\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99999 681508136225 925533\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99976 664640815001 915230\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100000 729199960625 953931\\r\\n', 'output': ['-1\\r\\n']}, {'input': '50 890543266647 943735\\r\\n', 'output': ['-1\\r\\n']}, {'input': '60 817630084499 904288\\r\\n', 'output': ['904229\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '99999 716046078026 946193\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10000 950051796437 984705\\r\\n', 'output': ['-1\\r\\n']}, {'input': '999 992972391401 997478\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 983300308227 991615\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 912219830404 955103\\r\\n', 'output': ['955102\\r\\n1\\r\\n']}, {'input': '3 934371623645 966631\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 857839030421 926199\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7 897398130730 947317\\r\\n', 'output': ['-1\\r\\n']}, {'input': '60 833021290059 912759\\r\\n', 'output': ['912700\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '1 860113420929 927423\\r\\n', 'output': ['927423\\r\\n']}, {'input': '2 933669982757 966267\\r\\n', 'output': ['966266\\r\\n1\\r\\n']}, {'input': '3 933157932003 966003\\r\\n', 'output': ['966001\\r\\n1\\r\\n1\\r\\n']}, {'input': '4 944626542564 971922\\r\\n', 'output': ['971919\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '7 937519681542 968262\\r\\n', 'output': ['968256\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '100000 1000000000000 1000000\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99999 999999999999 999999\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '11 10 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 5 10\\r\\n', 'output': ['10\\r\\n']}, {'input': '10 3 8\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 37 10\\r\\n', 'output': ['6\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '5 1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 1000000000000 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1000000\\r\\n', 'output': ['1000000\\r\\n']}, {'input': '100000 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100000 1000000000000 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1000000000000 1000000\\r\\n', 'output': ['1000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, x, y;\nlong long sqrtx, sqtby;\nint main() {\n  cin >> n >> x >> y;\n  sqrtx = sqrt(x);\n  sqtby = (long long)sqrt(y);\n  if (n > sqtby || sqrtx * sqrtx > x || sqtby * sqtby < x || y < n) {\n    puts(\"-1\");\n    return 0;\n  }\n  for (int i = 0; i < n; i++) cout << 1 << '\\n';\n  long long t = sqrtx + 1;\n  cout << t << '\\n';\n  cout << y - n + 1 << '\\n';\n  for (int i = 0; i < t - n - 1; i++) cout << 1 << '\\n';\n  return 0;\n}\n"}
{"src_uid": "138fd96bf5a677a6d59c20f88fd612f1", "id": 10, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1400, "testcases": "[{'input': '5 15 15\\r\\n', 'output': ['11\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '2 3 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 99 11\\r\\n', 'output': ['11\\r\\n']}, {'input': '3 254 18\\r\\n', 'output': ['16\\r\\n1\\r\\n1\\r\\n']}, {'input': '4 324 77\\r\\n', 'output': ['74\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '5 315 90\\r\\n', 'output': ['86\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '6 225 59\\r\\n', 'output': ['54\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '7 351 29\\r\\n', 'output': ['23\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '100 913723780421 955988\\r\\n', 'output': ['-1\\r\\n']}, {'input': '200 894176381082 945808\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1000 824905348050 909242\\r\\n', 'output': ['-1\\r\\n']}, {'input': '31000 819461299082 936240\\r\\n', 'output': ['-1\\r\\n']}, {'input': '44000 772772899626 923074\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99999 681508136225 925533\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99976 664640815001 915230\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100000 729199960625 953931\\r\\n', 'output': ['-1\\r\\n']}, {'input': '50 890543266647 943735\\r\\n', 'output': ['-1\\r\\n']}, {'input': '60 817630084499 904288\\r\\n', 'output': ['904229\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '99999 716046078026 946193\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10000 950051796437 984705\\r\\n', 'output': ['-1\\r\\n']}, {'input': '999 992972391401 997478\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 983300308227 991615\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 912219830404 955103\\r\\n', 'output': ['955102\\r\\n1\\r\\n']}, {'input': '3 934371623645 966631\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 857839030421 926199\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7 897398130730 947317\\r\\n', 'output': ['-1\\r\\n']}, {'input': '60 833021290059 912759\\r\\n', 'output': ['912700\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '1 860113420929 927423\\r\\n', 'output': ['927423\\r\\n']}, {'input': '2 933669982757 966267\\r\\n', 'output': ['966266\\r\\n1\\r\\n']}, {'input': '3 933157932003 966003\\r\\n', 'output': ['966001\\r\\n1\\r\\n1\\r\\n']}, {'input': '4 944626542564 971922\\r\\n', 'output': ['971919\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '7 937519681542 968262\\r\\n', 'output': ['968256\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '100000 1000000000000 1000000\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99999 999999999999 999999\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '11 10 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 5 10\\r\\n', 'output': ['10\\r\\n']}, {'input': '10 3 8\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 37 10\\r\\n', 'output': ['6\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '5 1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 1000000000000 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1000000\\r\\n', 'output': ['1000000\\r\\n']}, {'input': '100000 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100000 1000000000000 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1000000000000 1000000\\r\\n', 'output': ['1000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nlong long ans = 1;\nlong long x, y;\nvoid find() {\n  if (ans * ans < x) {\n    if (ans + 1 > y) {\n      return;\n    }\n    cout << ans + 1 << endl;\n    ans++;\n    find();\n    return;\n  }\n  cout << ans << endl;\n  return;\n}\nint main() {\n  cin >> n >> x >> y;\n  if (n == 1) {\n    if (x > y) {\n      cout << -1 << endl;\n      return 0;\n    }\n    cout << y << endl;\n    return 0;\n  }\n  ans = n / 2;\n  find();\n  return 0;\n}\n"}
{"src_uid": "639b8b8d0dc42df46b139f0aeb3a7a0a", "id": 11, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '047\\r\\n', 'output': ['4']}, {'input': '16\\r\\n', 'output': ['-1']}, {'input': '472747\\r\\n', 'output': ['7']}, {'input': '1925\\r\\n', 'output': ['-1']}, {'input': '5486846414848445484\\r\\n', 'output': ['4']}, {'input': '516160414\\r\\n', 'output': ['4']}, {'input': '9458569865994896\\r\\n', 'output': ['4']}, {'input': '94894948577777777884888\\r\\n', 'output': ['7']}, {'input': '00000\\r\\n', 'output': ['-1']}, {'input': '9589\\r\\n', 'output': ['-1']}, {'input': '7665711\\r\\n', 'output': ['7']}, {'input': '538772857\\r\\n', 'output': ['7']}, {'input': '8679647744\\r\\n', 'output': ['4']}, {'input': '23607019991994\\r\\n', 'output': ['4']}, {'input': '86145305734278927901987281894864719533015270066521\\r\\n', 'output': ['7']}, {'input': '22438808523154336905543301642540261833729318191\\r\\n', 'output': ['4']}, {'input': '290732082244359495795943967215788554387079\\r\\n', 'output': ['7']}, {'input': '6363333480463521971676988087733137609715\\r\\n', 'output': ['7']}, {'input': '637789221789855555993957058\\r\\n', 'output': ['7']}, {'input': '11536708648794535307468278326553811\\r\\n', 'output': ['7']}, {'input': '619433861636130069773\\r\\n', 'output': ['7']}, {'input': '7\\r\\n', 'output': ['7']}, {'input': '00000000000000000000000000000000000000000000000000\\r\\n', 'output': ['-1']}, {'input': '0000000000000000000000000000000000000047\\r\\n', 'output': ['4']}, {'input': '8175012266795100056032281135654854227489558885698\\r\\n', 'output': ['4']}, {'input': '8862708665262955384044574268728167940741129\\r\\n', 'output': ['4']}, {'input': '538772857\\r\\n', 'output': ['7']}, {'input': '94872076199824813574576121510803\\r\\n', 'output': ['7']}, {'input': '44101164480392494025995467\\r\\n', 'output': ['4']}, {'input': '0445460407410702955646485\\r\\n', 'output': ['4']}, {'input': '91076008557028243309\\r\\n', 'output': ['7']}, {'input': '33120039\\r\\n', 'output': ['-1']}, {'input': '4\\r\\n', 'output': ['4']}, {'input': '74747474747474747474747474747474747474747474747474\\r\\n', 'output': ['4']}, {'input': '74747474747474747474747774747474747474747474747474\\r\\n', 'output': ['7']}, {'input': '74747474747474747474747474747474744474747474747474\\r\\n', 'output': ['4']}, {'input': '47474747474747474747474747474747474747474747474747\\r\\n', 'output': ['4']}, {'input': '40\\r\\n', 'output': ['4']}, {'input': '07\\r\\n', 'output': ['7']}, {'input': '007\\r\\n', 'output': ['7']}, {'input': '44\\r\\n', 'output': ['4']}, {'input': '74\\r\\n', 'output': ['4']}]", "source_code": "#include <bits/stdc++.h>\nint a[100][50], n;\nint f(char x) {\n  if (x == '4') return 1;\n  if (x == '7') return 2;\n  return 0;\n}\nint main() {\n  std::string s;\n  std::cin >> s;\n  n = s.size();\n  int z = 0, q = 0;\n  memset(a, -1, sizeof(a));\n  for (int i = 0; i < n; i++) {\n    z = f(s[i]);\n    for (int j = 0; j < i; j++) {\n      q = f(s[j]);\n      if (z > q) {\n        if (a[q][j] == -1)\n          a[z][i] = a[q][j] + 1;\n        else\n          a[z][i] = a[q][j];\n      }\n    }\n  }\n  int ans = -1;\n  for (int i = 2; i >= 0; i--) {\n    if (a[i][n - 1]!= -1 && a[i][n - 1] + 1 > ans) ans = a[i][n - 1] + 1;\n  }\n  if (ans == -1)\n    puts(\"-1\");\n  else {\n    char p = ans == 2? '7' : '4';\n    std::cout << p;\n  }\n}\n"}
{"src_uid": "639b8b8d0dc42df46b139f0aeb3a7a0a", "id": 11, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '047\\r\\n', 'output': ['4']}, {'input': '16\\r\\n', 'output': ['-1']}, {'input': '472747\\r\\n', 'output': ['7']}, {'input': '1925\\r\\n', 'output': ['-1']}, {'input': '5486846414848445484\\r\\n', 'output': ['4']}, {'input': '516160414\\r\\n', 'output': ['4']}, {'input': '9458569865994896\\r\\n', 'output': ['4']}, {'input': '94894948577777777884888\\r\\n', 'output': ['7']}, {'input': '00000\\r\\n', 'output': ['-1']}, {'input': '9589\\r\\n', 'output': ['-1']}, {'input': '7665711\\r\\n', 'output': ['7']}, {'input': '538772857\\r\\n', 'output': ['7']}, {'input': '8679647744\\r\\n', 'output': ['4']}, {'input': '23607019991994\\r\\n', 'output': ['4']}, {'input': '86145305734278927901987281894864719533015270066521\\r\\n', 'output': ['7']}, {'input': '22438808523154336905543301642540261833729318191\\r\\n', 'output': ['4']}, {'input': '290732082244359495795943967215788554387079\\r\\n', 'output': ['7']}, {'input': '6363333480463521971676988087733137609715\\r\\n', 'output': ['7']}, {'input': '637789221789855555993957058\\r\\n', 'output': ['7']}, {'input': '11536708648794535307468278326553811\\r\\n', 'output': ['7']}, {'input': '619433861636130069773\\r\\n', 'output': ['7']}, {'input': '7\\r\\n', 'output': ['7']}, {'input': '00000000000000000000000000000000000000000000000000\\r\\n', 'output': ['-1']}, {'input': '0000000000000000000000000000000000000047\\r\\n', 'output': ['4']}, {'input': '8175012266795100056032281135654854227489558885698\\r\\n', 'output': ['4']}, {'input': '8862708665262955384044574268728167940741129\\r\\n', 'output': ['4']}, {'input': '538772857\\r\\n', 'output': ['7']}, {'input': '94872076199824813574576121510803\\r\\n', 'output': ['7']}, {'input': '44101164480392494025995467\\r\\n', 'output': ['4']}, {'input': '0445460407410702955646485\\r\\n', 'output': ['4']}, {'input': '91076008557028243309\\r\\n', 'output': ['7']}, {'input': '33120039\\r\\n', 'output': ['-1']}, {'input': '4\\r\\n', 'output': ['4']}, {'input': '74747474747474747474747474747474747474747474747474\\r\\n', 'output': ['4']}, {'input': '74747474747474747474747774747474747474747474747474\\r\\n', 'output': ['7']}, {'input': '74747474747474747474747474747474744474747474747474\\r\\n', 'output': ['4']}, {'input': '47474747474747474747474747474747474747474747474747\\r\\n', 'output': ['4']}, {'input': '40\\r\\n', 'output': ['4']}, {'input': '07\\r\\n', 'output': ['7']}, {'input': '007\\r\\n', 'output': ['7']}, {'input': '44\\r\\n', 'output': ['4']}, {'input': '74\\r\\n', 'output': ['4']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint solve(string s, int n) {\n  int i = 0;\n  if (n == 0) {\n    return 4;\n  }\n  while (i <= n && s[i] == '4' && s[i] == '7') {\n    i++;\n  }\n  if (i <= n && s[i] == '4')\n    return 4;\n  else if (i <= n && s[i] == '7')\n    return 7;\n  return 0;\n}\nint main() {\n  string s;\n  cin >> s;\n  int n = s.size();\n  int num = 0;\n  if (n == 0) {\n    cout << -1;\n    return 0;\n  }\n  num = solve(s, n - 1);\n  if (num == 0) {\n    if (s[n - 1] == '4')\n      cout << 4;\n    else\n      cout << 7;\n    return 0;\n  }\n  if (num == 4) {\n    int ans = solve(s, n - 2);\n    if (ans!= 0)\n      cout << ans;\n    else\n      cout << 4;\n    return 0;\n  }\n  if (num == 7) {\n    int ans = solve(s, n - 2);\n    if (ans!= 0)\n      cout << ans;\n    else\n      cout << 7;\n    return 0;\n  }\n  return 0;\n}\n"}
{"src_uid": "639b8b8d0dc42df46b139f0aeb3a7a0a", "id": 11, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '047\\r\\n', 'output': ['4']}, {'input': '16\\r\\n', 'output': ['-1']}, {'input': '472747\\r\\n', 'output': ['7']}, {'input': '1925\\r\\n', 'output': ['-1']}, {'input': '5486846414848445484\\r\\n', 'output': ['4']}, {'input': '516160414\\r\\n', 'output': ['4']}, {'input': '9458569865994896\\r\\n', 'output': ['4']}, {'input': '94894948577777777884888\\r\\n', 'output': ['7']}, {'input': '00000\\r\\n', 'output': ['-1']}, {'input': '9589\\r\\n', 'output': ['-1']}, {'input': '7665711\\r\\n', 'output': ['7']}, {'input': '538772857\\r\\n', 'output': ['7']}, {'input': '8679647744\\r\\n', 'output': ['4']}, {'input': '23607019991994\\r\\n', 'output': ['4']}, {'input': '86145305734278927901987281894864719533015270066521\\r\\n', 'output': ['7']}, {'input': '22438808523154336905543301642540261833729318191\\r\\n', 'output': ['4']}, {'input': '290732082244359495795943967215788554387079\\r\\n', 'output': ['7']}, {'input': '6363333480463521971676988087733137609715\\r\\n', 'output': ['7']}, {'input': '637789221789855555993957058\\r\\n', 'output': ['7']}, {'input': '11536708648794535307468278326553811\\r\\n', 'output': ['7']}, {'input': '619433861636130069773\\r\\n', 'output': ['7']}, {'input': '7\\r\\n', 'output': ['7']}, {'input': '00000000000000000000000000000000000000000000000000\\r\\n', 'output': ['-1']}, {'input': '0000000000000000000000000000000000000047\\r\\n', 'output': ['4']}, {'input': '8175012266795100056032281135654854227489558885698\\r\\n', 'output': ['4']}, {'input': '8862708665262955384044574268728167940741129\\r\\n', 'output': ['4']}, {'input': '538772857\\r\\n', 'output': ['7']}, {'input': '94872076199824813574576121510803\\r\\n', 'output': ['7']}, {'input': '44101164480392494025995467\\r\\n', 'output': ['4']}, {'input': '0445460407410702955646485\\r\\n', 'output': ['4']}, {'input': '91076008557028243309\\r\\n', 'output': ['7']}, {'input': '33120039\\r\\n', 'output': ['-1']}, {'input': '4\\r\\n', 'output': ['4']}, {'input': '74747474747474747474747474747474747474747474747474\\r\\n', 'output': ['4']}, {'input': '74747474747474747474747774747474747474747474747474\\r\\n', 'output': ['7']}, {'input': '74747474747474747474747474747474744474747474747474\\r\\n', 'output': ['4']}, {'input': '47474747474747474747474747474747474747474747474747\\r\\n', 'output': ['4']}, {'input': '40\\r\\n', 'output': ['4']}, {'input': '07\\r\\n', 'output': ['7']}, {'input': '007\\r\\n', 'output': ['7']}, {'input': '44\\r\\n', 'output': ['4']}, {'input': '74\\r\\n', 'output': ['4']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  string s;\n  cin >> s;\n  vector<long long> cnt4(s.size() + 1, 0);\n  vector<long long> cnt7(s.size() + 1, 0);\n  vector<long long> sum4(s.size() + 1, 0);\n  vector<long long> sum7(s.size() + 1, 0);\n  for (int i = 0; i < s.size(); i++) {\n    cnt4[i + 1] = cnt4[i] + (s[i] == '4');\n    cnt7[i + 1] = cnt7[i] + (s[i] == '7');\n    sum4[i + 1] = sum4[i] + (s[i] == '4');\n    sum7[i + 1] = sum7[i] + (s[i] == '7');\n  }\n  int res = -1;\n  int curr4 = 0, curr7 = 0;\n  int i = 0;\n  while (i < s.size()) {\n    while (i < s.size() && s[i]!= '4') i++;\n    if (i == s.size()) break;\n    int j = i + 1;\n    while (j < s.size() && s[j]!= '7') j++;\n    int len = j - i;\n    if (curr4 + len - 1 > res) {\n      res = curr4 + len - 1;\n    }\n    curr4 += len;\n    i = j;\n  }\n  curr4 = 0;\n  i = 0;\n  while (i < s.size()) {\n    while (i < s.size() && s[i]!= '7') i++;\n    if (i == s.size()) break;\n    int j = i + 1;\n    while (j < s.size() && s[j]!= '4') j++;\n    int len = j - i;\n    if (curr7 + len - 1 > res) {\n      res = curr7 + len - 1;\n    }\n    curr7 += len;\n    i = j;\n  }\n  int ans = -1;\n  for (int i = 1; i <= s.size(); i++) {\n    if (cnt4[i] == 1 && cnt7[i] == 1 && sum4[i] == i - 1 && sum7[i] == i - 1) {\n      ans = max(i, ans);\n    }\n  }\n  if (ans == -1)\n    cout << -1 << \"\\n\";\n  else\n    cout << ans << \"\\n\";\n}\nint32_t main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  int t;\n  t = 1;\n  while (t--) solve();\n}\n"}
{"src_uid": "639b8b8d0dc42df46b139f0aeb3a7a0a", "id": 11, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '047\\r\\n', 'output': ['4']}, {'input': '16\\r\\n', 'output': ['-1']}, {'input': '472747\\r\\n', 'output': ['7']}, {'input': '1925\\r\\n', 'output': ['-1']}, {'input': '5486846414848445484\\r\\n', 'output': ['4']}, {'input': '516160414\\r\\n', 'output': ['4']}, {'input': '9458569865994896\\r\\n', 'output': ['4']}, {'input': '94894948577777777884888\\r\\n', 'output': ['7']}, {'input': '00000\\r\\n', 'output': ['-1']}, {'input': '9589\\r\\n', 'output': ['-1']}, {'input': '7665711\\r\\n', 'output': ['7']}, {'input': '538772857\\r\\n', 'output': ['7']}, {'input': '8679647744\\r\\n', 'output': ['4']}, {'input': '23607019991994\\r\\n', 'output': ['4']}, {'input': '86145305734278927901987281894864719533015270066521\\r\\n', 'output': ['7']}, {'input': '22438808523154336905543301642540261833729318191\\r\\n', 'output': ['4']}, {'input': '290732082244359495795943967215788554387079\\r\\n', 'output': ['7']}, {'input': '6363333480463521971676988087733137609715\\r\\n', 'output': ['7']}, {'input': '637789221789855555993957058\\r\\n', 'output': ['7']}, {'input': '11536708648794535307468278326553811\\r\\n', 'output': ['7']}, {'input': '619433861636130069773\\r\\n', 'output': ['7']}, {'input': '7\\r\\n', 'output': ['7']}, {'input': '00000000000000000000000000000000000000000000000000\\r\\n', 'output': ['-1']}, {'input': '0000000000000000000000000000000000000047\\r\\n', 'output': ['4']}, {'input': '8175012266795100056032281135654854227489558885698\\r\\n', 'output': ['4']}, {'input': '8862708665262955384044574268728167940741129\\r\\n', 'output': ['4']}, {'input': '538772857\\r\\n', 'output': ['7']}, {'input': '94872076199824813574576121510803\\r\\n', 'output': ['7']}, {'input': '44101164480392494025995467\\r\\n', 'output': ['4']}, {'input': '0445460407410702955646485\\r\\n', 'output': ['4']}, {'input': '91076008557028243309\\r\\n', 'output': ['7']}, {'input': '33120039\\r\\n', 'output': ['-1']}, {'input': '4\\r\\n', 'output': ['4']}, {'input': '74747474747474747474747474747474747474747474747474\\r\\n', 'output': ['4']}, {'input': '74747474747474747474747774747474747474747474747474\\r\\n', 'output': ['7']}, {'input': '74747474747474747474747474747474744474747474747474\\r\\n', 'output': ['4']}, {'input': '47474747474747474747474747474747474747474747474747\\r\\n', 'output': ['4']}, {'input': '40\\r\\n', 'output': ['4']}, {'input': '07\\r\\n', 'output': ['7']}, {'input': '007\\r\\n', 'output': ['7']}, {'input': '44\\r\\n', 'output': ['4']}, {'input': '74\\r\\n', 'output': ['4']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s;\n  cin >> s;\n  int l = 0, c = 0, c1 = 0, i;\n  for (i = 0; i < s.length(); i++) {\n    if (s[i] == '7') l++;\n    if (s[i] == '4') c++;\n  }\n  if (s.length() == 1)\n    if (s[0] == '4' || s[0] == '7')\n      cout << s[0];\n    else\n      cout << \"-1\";\n  else if (s.length() == 2) {\n    if (s[0] == '7' && s[1] == '7')\n      cout << s[0];\n    else if (s[0] == '4' && s[1] == '4')\n      cout << s[0];\n    else\n      cout << \"-1\";\n  } else {\n    int cnt = 0;\n    cnt += (l * (l - 1)) / 2;\n    cnt += c;\n    for (i = 0; i <= l - 1; i++) {\n      for (int j = i + 1; j <= l; j++) {\n        if (i < cnt && j > cnt) {\n          cout << \"4\";\n          cnt--;\n          break;\n        }\n        if (j == cnt) {\n          cout << \"7\";\n          cnt--;\n        }\n      }\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "639b8b8d0dc42df46b139f0aeb3a7a0a", "id": 11, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '047\\r\\n', 'output': ['4']}, {'input': '16\\r\\n', 'output': ['-1']}, {'input': '472747\\r\\n', 'output': ['7']}, {'input': '1925\\r\\n', 'output': ['-1']}, {'input': '5486846414848445484\\r\\n', 'output': ['4']}, {'input': '516160414\\r\\n', 'output': ['4']}, {'input': '9458569865994896\\r\\n', 'output': ['4']}, {'input': '94894948577777777884888\\r\\n', 'output': ['7']}, {'input': '00000\\r\\n', 'output': ['-1']}, {'input': '9589\\r\\n', 'output': ['-1']}, {'input': '7665711\\r\\n', 'output': ['7']}, {'input': '538772857\\r\\n', 'output': ['7']}, {'input': '8679647744\\r\\n', 'output': ['4']}, {'input': '23607019991994\\r\\n', 'output': ['4']}, {'input': '86145305734278927901987281894864719533015270066521\\r\\n', 'output': ['7']}, {'input': '22438808523154336905543301642540261833729318191\\r\\n', 'output': ['4']}, {'input': '290732082244359495795943967215788554387079\\r\\n', 'output': ['7']}, {'input': '6363333480463521971676988087733137609715\\r\\n', 'output': ['7']}, {'input': '637789221789855555993957058\\r\\n', 'output': ['7']}, {'input': '11536708648794535307468278326553811\\r\\n', 'output': ['7']}, {'input': '619433861636130069773\\r\\n', 'output': ['7']}, {'input': '7\\r\\n', 'output': ['7']}, {'input': '00000000000000000000000000000000000000000000000000\\r\\n', 'output': ['-1']}, {'input': '0000000000000000000000000000000000000047\\r\\n', 'output': ['4']}, {'input': '8175012266795100056032281135654854227489558885698\\r\\n', 'output': ['4']}, {'input': '8862708665262955384044574268728167940741129\\r\\n', 'output': ['4']}, {'input': '538772857\\r\\n', 'output': ['7']}, {'input': '94872076199824813574576121510803\\r\\n', 'output': ['7']}, {'input': '44101164480392494025995467\\r\\n', 'output': ['4']}, {'input': '0445460407410702955646485\\r\\n', 'output': ['4']}, {'input': '91076008557028243309\\r\\n', 'output': ['7']}, {'input': '33120039\\r\\n', 'output': ['-1']}, {'input': '4\\r\\n', 'output': ['4']}, {'input': '74747474747474747474747474747474747474747474747474\\r\\n', 'output': ['4']}, {'input': '74747474747474747474747774747474747474747474747474\\r\\n', 'output': ['7']}, {'input': '74747474747474747474747474747474744474747474747474\\r\\n', 'output': ['4']}, {'input': '47474747474747474747474747474747474747474747474747\\r\\n', 'output': ['4']}, {'input': '40\\r\\n', 'output': ['4']}, {'input': '07\\r\\n', 'output': ['7']}, {'input': '007\\r\\n', 'output': ['7']}, {'input': '44\\r\\n', 'output': ['4']}, {'input': '74\\r\\n', 'output': ['4']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nvoid init() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n}\nint main() {\n  init();\n  string s;\n  cin >> s;\n  int n = s.length();\n  vector<int> dp4(n + 1), dp7(n + 1), dp(n + 1);\n  dp4[0] = dp7[0] = dp[0] = 0;\n  for (int i = 1; i <= n; i++) {\n    if (s[i - 1] == '4')\n      dp4[i] = dp4[i - 1] + 1;\n    else\n      dp4[i] = dp4[i - 1];\n    if (s[i - 1] == '7')\n      dp7[i] = dp7[i - 1] + 1;\n    else\n      dp7[i] = dp7[i - 1];\n    if (s[i - 1] == '4' || s[i - 1] == '7')\n      dp[i] = dp[i - 1] + 1;\n    else\n      dp[i] = dp[i - 1];\n  }\n  int mx = 0;\n  string ans = \"\";\n  for (int i = 0; i < n; i++) {\n    if (dp4[i] > dp7[i]) {\n      mx = max(mx, dp[i + 1]);\n      ans = \"4\";\n    }\n    if (dp7[i] > dp4[i]) {\n      mx = max(mx, dp[i + 1]);\n      ans = \"7\";\n    }\n  }\n  if (mx == 0)\n    cout << -1;\n  else\n    cout << ans;\n  return 0;\n}\n"}
{"src_uid": "41dfc86d341082dd96e089ac5433dc04", "id": 12, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': ['7 2\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['59 9\\r\\n'], 'output': ['54\\r\\n']}, {'input': ['1 9\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['11 2\\r\\n'], 'output': ['7\\r\\n']}, {'input': ['747 2\\r\\n'], 'output': ['376\\r\\n']}, {'input': ['6578 2\\r\\n'], 'output': ['3293\\r\\n']}, {'input': ['37212 2\\r\\n'], 'output': ['18609\\r\\n']}, {'input': ['12357 2\\r\\n'], 'output': ['6181\\r\\n']}, {'input': ['7998332 2\\r\\n'], 'output': ['3999172\\r\\n']}, {'input': ['86275251 2\\r\\n'], 'output': ['43137632\\r\\n']}, {'input': ['75584551 2\\r\\n'], 'output': ['37792280\\r\\n']}, {'input': ['6 3\\r\\n'], 'output': ['5\\r\\n']}, {'input': ['43 4\\r\\n'], 'output': ['33\\r\\n']}, {'input': ['811 3\\r\\n'], 'output': ['543\\r\\n']}, {'input': ['3410 4\\r\\n'], 'output': ['2560\\r\\n']}, {'input': ['21341 4\\r\\n'], 'output': ['16009\\r\\n']}, {'input': ['696485 4\\r\\n'], 'output': ['522368\\r\\n']}, {'input': ['8856748 3\\r\\n'], 'output': ['5904504\\r\\n']}, {'input': ['2959379 4\\r\\n'], 'output': ['2219538\\r\\n']}, {'input': ['831410263 3\\r\\n'], 'output': ['554273516\\r\\n']}, {'input': ['2 5\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['19 6\\r\\n'], 'output': ['17\\r\\n']}, {'input': ['715 7\\r\\n'], 'output': ['615\\r\\n']}, {'input': ['9122 5\\r\\n'], 'output': ['7300\\r\\n']}, {'input': ['89117 6\\r\\n'], 'output': ['74268\\r\\n']}, {'input': ['689973 7\\r\\n'], 'output': ['591408\\r\\n']}, {'input': ['3024524 5\\r\\n'], 'output': ['2419624\\r\\n']}, {'input': ['67127156 6\\r\\n'], 'output': ['55939302\\r\\n']}, {'input': ['412262167 7\\r\\n'], 'output': ['353367574\\r\\n']}, {'input': ['6 8\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['59 9\\r\\n'], 'output': ['54\\r\\n']}, {'input': ['246 10\\r\\n'], 'output': ['222\\r\\n']}, {'input': ['5314 8\\r\\n'], 'output': ['4651\\r\\n']}, {'input': ['15309 9\\r\\n'], 'output': ['13609\\r\\n']}, {'input': ['35648 10\\r\\n'], 'output': ['32085\\r\\n']}, {'input': ['3018012 8\\r\\n'], 'output': ['2640764\\r\\n']}, {'input': ['92153348 9\\r\\n'], 'output': ['81914089\\r\\n']}, {'input': ['177583558 10\\r\\n'], 'output': ['159825206\\r\\n']}, {'input': ['1000000000 2\\r\\n'], 'output': ['500000008\\r\\n']}, {'input': ['1000000000 3\\r\\n'], 'output': ['666666672\\r\\n']}, {'input': ['1000000000 4\\r\\n'], 'output': ['750000005\\r\\n']}, {'input': ['1000000000 5\\r\\n'], 'output': ['800000003\\r\\n']}, {'input': ['1000000000 6\\r\\n'], 'output': ['833333338\\r\\n']}, {'input': ['1000000000 7\\r\\n'], 'output': ['857142861\\r\\n']}, {'input': ['1000000000 8\\r\\n'], 'output': ['875000004\\r\\n']}, {'input': ['1000000000 9\\r\\n'], 'output': ['888888894\\r\\n']}, {'input': ['1000000000 10\\r\\n'], 'output': ['900000001\\r\\n']}, {'input': ['1 4\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['2 10\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1 2\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['6 8\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['987862820 9\\r\\n'], 'output': ['878100288\\r\\n']}, {'input': ['979591791 9\\r\\n'], 'output': ['870748262\\r\\n']}, {'input': ['948889213 9\\r\\n'], 'output': ['843457081\\r\\n']}, {'input': ['8 9\\r\\n'], 'output': ['8\\r\\n']}, {'input': ['999999999 10\\r\\n'], 'output': ['900000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, k;\n  cin >> n >> k;\n  for (long long v = 0; v < 2e12; v++) {\n    if (v == 0) {\n      long long a = 0;\n      for (int i = 2; i <= k; i++) {\n        a += v / i;\n      }\n      if (a >= n) {\n        cout << v;\n        return 0;\n      }\n    } else {\n      long long a = 0;\n      for (int i = 2; i <= k; i++) {\n        a += v / i;\n      }\n      if (a >= n) {\n        cout << v - 1;\n        return 0;\n      }\n    }\n  }\n}\n"}
{"src_uid": "41dfc86d341082dd96e089ac5433dc04", "id": 12, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': ['7 2\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['59 9\\r\\n'], 'output': ['54\\r\\n']}, {'input': ['1 9\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['11 2\\r\\n'], 'output': ['7\\r\\n']}, {'input': ['747 2\\r\\n'], 'output': ['376\\r\\n']}, {'input': ['6578 2\\r\\n'], 'output': ['3293\\r\\n']}, {'input': ['37212 2\\r\\n'], 'output': ['18609\\r\\n']}, {'input': ['12357 2\\r\\n'], 'output': ['6181\\r\\n']}, {'input': ['7998332 2\\r\\n'], 'output': ['3999172\\r\\n']}, {'input': ['86275251 2\\r\\n'], 'output': ['43137632\\r\\n']}, {'input': ['75584551 2\\r\\n'], 'output': ['37792280\\r\\n']}, {'input': ['6 3\\r\\n'], 'output': ['5\\r\\n']}, {'input': ['43 4\\r\\n'], 'output': ['33\\r\\n']}, {'input': ['811 3\\r\\n'], 'output': ['543\\r\\n']}, {'input': ['3410 4\\r\\n'], 'output': ['2560\\r\\n']}, {'input': ['21341 4\\r\\n'], 'output': ['16009\\r\\n']}, {'input': ['696485 4\\r\\n'], 'output': ['522368\\r\\n']}, {'input': ['8856748 3\\r\\n'], 'output': ['5904504\\r\\n']}, {'input': ['2959379 4\\r\\n'], 'output': ['2219538\\r\\n']}, {'input': ['831410263 3\\r\\n'], 'output': ['554273516\\r\\n']}, {'input': ['2 5\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['19 6\\r\\n'], 'output': ['17\\r\\n']}, {'input': ['715 7\\r\\n'], 'output': ['615\\r\\n']}, {'input': ['9122 5\\r\\n'], 'output': ['7300\\r\\n']}, {'input': ['89117 6\\r\\n'], 'output': ['74268\\r\\n']}, {'input': ['689973 7\\r\\n'], 'output': ['591408\\r\\n']}, {'input': ['3024524 5\\r\\n'], 'output': ['2419624\\r\\n']}, {'input': ['67127156 6\\r\\n'], 'output': ['55939302\\r\\n']}, {'input': ['412262167 7\\r\\n'], 'output': ['353367574\\r\\n']}, {'input': ['6 8\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['59 9\\r\\n'], 'output': ['54\\r\\n']}, {'input': ['246 10\\r\\n'], 'output': ['222\\r\\n']}, {'input': ['5314 8\\r\\n'], 'output': ['4651\\r\\n']}, {'input': ['15309 9\\r\\n'], 'output': ['13609\\r\\n']}, {'input': ['35648 10\\r\\n'], 'output': ['32085\\r\\n']}, {'input': ['3018012 8\\r\\n'], 'output': ['2640764\\r\\n']}, {'input': ['92153348 9\\r\\n'], 'output': ['81914089\\r\\n']}, {'input': ['177583558 10\\r\\n'], 'output': ['159825206\\r\\n']}, {'input': ['1000000000 2\\r\\n'], 'output': ['500000008\\r\\n']}, {'input': ['1000000000 3\\r\\n'], 'output': ['666666672\\r\\n']}, {'input': ['1000000000 4\\r\\n'], 'output': ['750000005\\r\\n']}, {'input': ['1000000000 5\\r\\n'], 'output': ['800000003\\r\\n']}, {'input': ['1000000000 6\\r\\n'], 'output': ['833333338\\r\\n']}, {'input': ['1000000000 7\\r\\n'], 'output': ['857142861\\r\\n']}, {'input': ['1000000000 8\\r\\n'], 'output': ['875000004\\r\\n']}, {'input': ['1000000000 9\\r\\n'], 'output': ['888888894\\r\\n']}, {'input': ['1000000000 10\\r\\n'], 'output': ['900000001\\r\\n']}, {'input': ['1 4\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['2 10\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1 2\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['6 8\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['987862820 9\\r\\n'], 'output': ['878100288\\r\\n']}, {'input': ['979591791 9\\r\\n'], 'output': ['870748262\\r\\n']}, {'input': ['948889213 9\\r\\n'], 'output': ['843457081\\r\\n']}, {'input': ['8 9\\r\\n'], 'output': ['8\\r\\n']}, {'input': ['999999999 10\\r\\n'], 'output': ['900000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, k;\n  cin >> n >> k;\n  int l = 0, h = 1000000000;\n  while (l < h) {\n    int m = (l + h) / 2;\n    long long v = 0, count = 0;\n    int b = 0;\n    while (count + m < n) {\n      count += m;\n      b++;\n      if (b >= k) {\n        count -= m;\n        b -= k;\n        m = (m + 1) / k;\n      }\n    }\n    if (count + m >= n) {\n      h = m;\n    } else\n      l = m + 1;\n  }\n  cout << l << endl;\n  return 0;\n}\n"}
{"src_uid": "41dfc86d341082dd96e089ac5433dc04", "id": 12, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': ['7 2\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['59 9\\r\\n'], 'output': ['54\\r\\n']}, {'input': ['1 9\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['11 2\\r\\n'], 'output': ['7\\r\\n']}, {'input': ['747 2\\r\\n'], 'output': ['376\\r\\n']}, {'input': ['6578 2\\r\\n'], 'output': ['3293\\r\\n']}, {'input': ['37212 2\\r\\n'], 'output': ['18609\\r\\n']}, {'input': ['12357 2\\r\\n'], 'output': ['6181\\r\\n']}, {'input': ['7998332 2\\r\\n'], 'output': ['3999172\\r\\n']}, {'input': ['86275251 2\\r\\n'], 'output': ['43137632\\r\\n']}, {'input': ['75584551 2\\r\\n'], 'output': ['37792280\\r\\n']}, {'input': ['6 3\\r\\n'], 'output': ['5\\r\\n']}, {'input': ['43 4\\r\\n'], 'output': ['33\\r\\n']}, {'input': ['811 3\\r\\n'], 'output': ['543\\r\\n']}, {'input': ['3410 4\\r\\n'], 'output': ['2560\\r\\n']}, {'input': ['21341 4\\r\\n'], 'output': ['16009\\r\\n']}, {'input': ['696485 4\\r\\n'], 'output': ['522368\\r\\n']}, {'input': ['8856748 3\\r\\n'], 'output': ['5904504\\r\\n']}, {'input': ['2959379 4\\r\\n'], 'output': ['2219538\\r\\n']}, {'input': ['831410263 3\\r\\n'], 'output': ['554273516\\r\\n']}, {'input': ['2 5\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['19 6\\r\\n'], 'output': ['17\\r\\n']}, {'input': ['715 7\\r\\n'], 'output': ['615\\r\\n']}, {'input': ['9122 5\\r\\n'], 'output': ['7300\\r\\n']}, {'input': ['89117 6\\r\\n'], 'output': ['74268\\r\\n']}, {'input': ['689973 7\\r\\n'], 'output': ['591408\\r\\n']}, {'input': ['3024524 5\\r\\n'], 'output': ['2419624\\r\\n']}, {'input': ['67127156 6\\r\\n'], 'output': ['55939302\\r\\n']}, {'input': ['412262167 7\\r\\n'], 'output': ['353367574\\r\\n']}, {'input': ['6 8\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['59 9\\r\\n'], 'output': ['54\\r\\n']}, {'input': ['246 10\\r\\n'], 'output': ['222\\r\\n']}, {'input': ['5314 8\\r\\n'], 'output': ['4651\\r\\n']}, {'input': ['15309 9\\r\\n'], 'output': ['13609\\r\\n']}, {'input': ['35648 10\\r\\n'], 'output': ['32085\\r\\n']}, {'input': ['3018012 8\\r\\n'], 'output': ['2640764\\r\\n']}, {'input': ['92153348 9\\r\\n'], 'output': ['81914089\\r\\n']}, {'input': ['177583558 10\\r\\n'], 'output': ['159825206\\r\\n']}, {'input': ['1000000000 2\\r\\n'], 'output': ['500000008\\r\\n']}, {'input': ['1000000000 3\\r\\n'], 'output': ['666666672\\r\\n']}, {'input': ['1000000000 4\\r\\n'], 'output': ['750000005\\r\\n']}, {'input': ['1000000000 5\\r\\n'], 'output': ['800000003\\r\\n']}, {'input': ['1000000000 6\\r\\n'], 'output': ['833333338\\r\\n']}, {'input': ['1000000000 7\\r\\n'], 'output': ['857142861\\r\\n']}, {'input': ['1000000000 8\\r\\n'], 'output': ['875000004\\r\\n']}, {'input': ['1000000000 9\\r\\n'], 'output': ['888888894\\r\\n']}, {'input': ['1000000000 10\\r\\n'], 'output': ['900000001\\r\\n']}, {'input': ['1 4\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['2 10\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1 2\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['6 8\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['987862820 9\\r\\n'], 'output': ['878100288\\r\\n']}, {'input': ['979591791 9\\r\\n'], 'output': ['870748262\\r\\n']}, {'input': ['948889213 9\\r\\n'], 'output': ['843457081\\r\\n']}, {'input': ['8 9\\r\\n'], 'output': ['8\\r\\n']}, {'input': ['999999999 10\\r\\n'], 'output': ['900000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 7;\nconst long long mod = 1e9 + 7;\nconst double PI = acos(-1);\nlong long int n;\nint k;\nlong long int ans;\nvoid dfs(int a, int b) {\n  if (a == 0) {\n    ans += b;\n    return;\n  }\n  for (int i = k; i <= n; i *= k) {\n    if (n - (i * b) <= 0) break;\n    dfs(n - (i * b), i);\n    if (ans >= n) {\n      return;\n    }\n  }\n}\nint main() {\n  cin >> n >> k;\n  dfs(n, 1);\n  cout << ans;\n  return 0;\n}\n"}
{"src_uid": "41dfc86d341082dd96e089ac5433dc04", "id": 12, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': ['7 2\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['59 9\\r\\n'], 'output': ['54\\r\\n']}, {'input': ['1 9\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['11 2\\r\\n'], 'output': ['7\\r\\n']}, {'input': ['747 2\\r\\n'], 'output': ['376\\r\\n']}, {'input': ['6578 2\\r\\n'], 'output': ['3293\\r\\n']}, {'input': ['37212 2\\r\\n'], 'output': ['18609\\r\\n']}, {'input': ['12357 2\\r\\n'], 'output': ['6181\\r\\n']}, {'input': ['7998332 2\\r\\n'], 'output': ['3999172\\r\\n']}, {'input': ['86275251 2\\r\\n'], 'output': ['43137632\\r\\n']}, {'input': ['75584551 2\\r\\n'], 'output': ['37792280\\r\\n']}, {'input': ['6 3\\r\\n'], 'output': ['5\\r\\n']}, {'input': ['43 4\\r\\n'], 'output': ['33\\r\\n']}, {'input': ['811 3\\r\\n'], 'output': ['543\\r\\n']}, {'input': ['3410 4\\r\\n'], 'output': ['2560\\r\\n']}, {'input': ['21341 4\\r\\n'], 'output': ['16009\\r\\n']}, {'input': ['696485 4\\r\\n'], 'output': ['522368\\r\\n']}, {'input': ['8856748 3\\r\\n'], 'output': ['5904504\\r\\n']}, {'input': ['2959379 4\\r\\n'], 'output': ['2219538\\r\\n']}, {'input': ['831410263 3\\r\\n'], 'output': ['554273516\\r\\n']}, {'input': ['2 5\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['19 6\\r\\n'], 'output': ['17\\r\\n']}, {'input': ['715 7\\r\\n'], 'output': ['615\\r\\n']}, {'input': ['9122 5\\r\\n'], 'output': ['7300\\r\\n']}, {'input': ['89117 6\\r\\n'], 'output': ['74268\\r\\n']}, {'input': ['689973 7\\r\\n'], 'output': ['591408\\r\\n']}, {'input': ['3024524 5\\r\\n'], 'output': ['2419624\\r\\n']}, {'input': ['67127156 6\\r\\n'], 'output': ['55939302\\r\\n']}, {'input': ['412262167 7\\r\\n'], 'output': ['353367574\\r\\n']}, {'input': ['6 8\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['59 9\\r\\n'], 'output': ['54\\r\\n']}, {'input': ['246 10\\r\\n'], 'output': ['222\\r\\n']}, {'input': ['5314 8\\r\\n'], 'output': ['4651\\r\\n']}, {'input': ['15309 9\\r\\n'], 'output': ['13609\\r\\n']}, {'input': ['35648 10\\r\\n'], 'output': ['32085\\r\\n']}, {'input': ['3018012 8\\r\\n'], 'output': ['2640764\\r\\n']}, {'input': ['92153348 9\\r\\n'], 'output': ['81914089\\r\\n']}, {'input': ['177583558 10\\r\\n'], 'output': ['159825206\\r\\n']}, {'input': ['1000000000 2\\r\\n'], 'output': ['500000008\\r\\n']}, {'input': ['1000000000 3\\r\\n'], 'output': ['666666672\\r\\n']}, {'input': ['1000000000 4\\r\\n'], 'output': ['750000005\\r\\n']}, {'input': ['1000000000 5\\r\\n'], 'output': ['800000003\\r\\n']}, {'input': ['1000000000 6\\r\\n'], 'output': ['833333338\\r\\n']}, {'input': ['1000000000 7\\r\\n'], 'output': ['857142861\\r\\n']}, {'input': ['1000000000 8\\r\\n'], 'output': ['875000004\\r\\n']}, {'input': ['1000000000 9\\r\\n'], 'output': ['888888894\\r\\n']}, {'input': ['1000000000 10\\r\\n'], 'output': ['900000001\\r\\n']}, {'input': ['1 4\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['2 10\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1 2\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['6 8\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['987862820 9\\r\\n'], 'output': ['878100288\\r\\n']}, {'input': ['979591791 9\\r\\n'], 'output': ['870748262\\r\\n']}, {'input': ['948889213 9\\r\\n'], 'output': ['843457081\\r\\n']}, {'input': ['8 9\\r\\n'], 'output': ['8\\r\\n']}, {'input': ['999999999 10\\r\\n'], 'output': ['900000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, k;\nint ans;\nint dfs(long long v) {\n  if (v <= 0) return 1000000000;\n  int &res = ans;\n  if (res!= -1) return res;\n  res = 1000000000;\n  long long sum = 0;\n  for (int i = 1; i <= k; i++) {\n    long long t = (v - 1) * i + 1;\n    sum += (t - 1) / v * v;\n    if (t <= 1000000000 / i) {\n      int tt = sum + dfs(t);\n      if (tt < res) res = tt;\n    } else {\n      if (n <= sum) break;\n    }\n    sum += i;\n  }\n  return res;\n}\nint main() {\n  scanf(\"%d%d\", &n, &k);\n  ans = -1;\n  printf(\"%d\\n\", dfs(n));\n}\n"}
{"src_uid": "41dfc86d341082dd96e089ac5433dc04", "id": 12, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': ['7 2\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['59 9\\r\\n'], 'output': ['54\\r\\n']}, {'input': ['1 9\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['11 2\\r\\n'], 'output': ['7\\r\\n']}, {'input': ['747 2\\r\\n'], 'output': ['376\\r\\n']}, {'input': ['6578 2\\r\\n'], 'output': ['3293\\r\\n']}, {'input': ['37212 2\\r\\n'], 'output': ['18609\\r\\n']}, {'input': ['12357 2\\r\\n'], 'output': ['6181\\r\\n']}, {'input': ['7998332 2\\r\\n'], 'output': ['3999172\\r\\n']}, {'input': ['86275251 2\\r\\n'], 'output': ['43137632\\r\\n']}, {'input': ['75584551 2\\r\\n'], 'output': ['37792280\\r\\n']}, {'input': ['6 3\\r\\n'], 'output': ['5\\r\\n']}, {'input': ['43 4\\r\\n'], 'output': ['33\\r\\n']}, {'input': ['811 3\\r\\n'], 'output': ['543\\r\\n']}, {'input': ['3410 4\\r\\n'], 'output': ['2560\\r\\n']}, {'input': ['21341 4\\r\\n'], 'output': ['16009\\r\\n']}, {'input': ['696485 4\\r\\n'], 'output': ['522368\\r\\n']}, {'input': ['8856748 3\\r\\n'], 'output': ['5904504\\r\\n']}, {'input': ['2959379 4\\r\\n'], 'output': ['2219538\\r\\n']}, {'input': ['831410263 3\\r\\n'], 'output': ['554273516\\r\\n']}, {'input': ['2 5\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['19 6\\r\\n'], 'output': ['17\\r\\n']}, {'input': ['715 7\\r\\n'], 'output': ['615\\r\\n']}, {'input': ['9122 5\\r\\n'], 'output': ['7300\\r\\n']}, {'input': ['89117 6\\r\\n'], 'output': ['74268\\r\\n']}, {'input': ['689973 7\\r\\n'], 'output': ['591408\\r\\n']}, {'input': ['3024524 5\\r\\n'], 'output': ['2419624\\r\\n']}, {'input': ['67127156 6\\r\\n'], 'output': ['55939302\\r\\n']}, {'input': ['412262167 7\\r\\n'], 'output': ['353367574\\r\\n']}, {'input': ['6 8\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['59 9\\r\\n'], 'output': ['54\\r\\n']}, {'input': ['246 10\\r\\n'], 'output': ['222\\r\\n']}, {'input': ['5314 8\\r\\n'], 'output': ['4651\\r\\n']}, {'input': ['15309 9\\r\\n'], 'output': ['13609\\r\\n']}, {'input': ['35648 10\\r\\n'], 'output': ['32085\\r\\n']}, {'input': ['3018012 8\\r\\n'], 'output': ['2640764\\r\\n']}, {'input': ['92153348 9\\r\\n'], 'output': ['81914089\\r\\n']}, {'input': ['177583558 10\\r\\n'], 'output': ['159825206\\r\\n']}, {'input': ['1000000000 2\\r\\n'], 'output': ['500000008\\r\\n']}, {'input': ['1000000000 3\\r\\n'], 'output': ['666666672\\r\\n']}, {'input': ['1000000000 4\\r\\n'], 'output': ['750000005\\r\\n']}, {'input': ['1000000000 5\\r\\n'], 'output': ['800000003\\r\\n']}, {'input': ['1000000000 6\\r\\n'], 'output': ['833333338\\r\\n']}, {'input': ['1000000000 7\\r\\n'], 'output': ['857142861\\r\\n']}, {'input': ['1000000000 8\\r\\n'], 'output': ['875000004\\r\\n']}, {'input': ['1000000000 9\\r\\n'], 'output': ['888888894\\r\\n']}, {'input': ['1000000000 10\\r\\n'], 'output': ['900000001\\r\\n']}, {'input': ['1 4\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['2 10\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1 2\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['6 8\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['987862820 9\\r\\n'], 'output': ['878100288\\r\\n']}, {'input': ['979591791 9\\r\\n'], 'output': ['870748262\\r\\n']}, {'input': ['948889213 9\\r\\n'], 'output': ['843457081\\r\\n']}, {'input': ['8 9\\r\\n'], 'output': ['8\\r\\n']}, {'input': ['999999999 10\\r\\n'], 'output': ['900000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  long long n, k;\n  cin >> n >> k;\n  long long lo = 0, hi = 2e9;\n  long long v;\n  long long res = -1;\n  while (lo <= hi) {\n    long long v = (lo + hi) / 2;\n    long long s = 0;\n    long long x = v;\n    while (x!= 0) {\n      long long temp = k * x;\n      s += temp;\n      x = temp / k;\n    }\n    if (s >= n) {\n      res = v;\n      hi = v - 1;\n    } else {\n      lo = v + 1;\n    }\n  }\n  cout << res << endl;\n  return 0;\n}\n"}
{"src_uid": "65fea461d3caa5a932d1e2c13e99a59e", "id": 13, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '5 50\\r\\n1 2 3 4 5\\r\\n', 'output': ['12.000000\\r\\n11.000000\\r\\n10.000000\\r\\n9.000000\\r\\n8.000000\\r\\n']}, {'input': '2 2\\r\\n1 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 2\\r\\n1 1\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n']}, {'input': '3 2\\r\\n1 2 1\\r\\n', 'output': ['1.000000\\r\\n0.000000\\r\\n1.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 1\\r\\n', 'output': ['2.000000\\r\\n1.000000\\r\\n2.000000\\r\\n']}, {'input': '10 95\\r\\n0 0 0 0 0 1 1 1 1 1\\r\\n', 'output': ['10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 3\\r\\n', 'output': ['2.666667\\r\\n1.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n1 3 2\\r\\n', 'output': ['2.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n2 1 3\\r\\n', 'output': ['1.666667\\r\\n2.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n2 3 1\\r\\n', 'output': ['1.666667\\r\\n0.666667\\r\\n2.666667\\r\\n']}, {'input': '3 5\\r\\n3 1 2\\r\\n', 'output': ['0.666667\\r\\n2.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n3 2 1\\r\\n', 'output': ['0.666667\\r\\n1.666667\\r\\n2.666667\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '2 1\\r\\n2 2\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '3 2\\r\\n2 1 2\\r\\n', 'output': ['0.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '3 3\\r\\n2 2 1\\r\\n', 'output': ['0.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 3\\r\\n3 1 2\\r\\n', 'output': ['0.000000\\r\\n2.000000\\r\\n1.000000\\r\\n']}, {'input': '100 100\\r\\n37 97 75 52 33 29 51 22 33 37 45 96 96 60 82 58 86 71 28 73 38 50 6 6 90 17 26 76 13 41 100 47 17 93 4 1 56 16 41 74 25 17 69 61 39 37 96 73 49 93 52 14 62 24 91 30 9 97 52 100 6 16 85 8 12 26 10 3 94 63 80 27 29 78 9 48 79 64 60 18 98 75 81 35 24 81 2 100 23 70 21 60 98 38 29 29 58 37 49 72\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 100\\r\\n1 3 7 7 9 5 9 3 7 8 10 1 3 10 10 6 1 3 10 4 3 9 4 9 5 4 9 2 8 7 4 3 3 3 5 10 8 9 10 1 9 2 4 8 3 10 9 2 3 9 8 2 4 4 4 7 1 1 7 3 7 8 9 5 1 2 6 7 1 10 9 10 5 10 1 10 5 2 4 3 10 1 6 5 6 7 8 9 3 8 6 10 8 7 2 3 8 6 3 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 61\\r\\n81 80 83 72 87 76 91 92 77 93 77 94 76 73 71 88 88 76 87 73 89 73 85 81 79 90 76 73 82 93 79 93 71 75 72 71 78 85 92 89 88 93 74 87 71 94 74 87 85 89 90 93 86 94 92 87 90 91 75 73 90 84 92 94 92 79 74 85 74 74 89 76 84 84 84 83 86 84 82 71 76 74 83 81 89 73 73 74 71 77 90 94 73 94 73 75 93 89 84 92\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10 100\\r\\n52 52 51 52 52 52 51 51 52 52\\r\\n', 'output': ['9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n']}, {'input': '10 100\\r\\n13 13 13 13 12 13 12 13 12 12\\r\\n', 'output': ['9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n10.600000\\r\\n']}, {'input': '10 100\\r\\n50 51 47 51 48 46 49 51 46 51\\r\\n', 'output': ['9.000000\\r\\n8.000000\\r\\n12.000000\\r\\n8.000000\\r\\n11.000000\\r\\n13.000000\\r\\n10.000000\\r\\n8.000000\\r\\n13.000000\\r\\n8.000000\\r\\n']}, {'input': '10 100\\r\\n13 13 9 12 12 11 13 8 10 13\\r\\n', 'output': ['8.400000\\r\\n8.400000\\r\\n12.400000\\r\\n9.400000\\r\\n9.400000\\r\\n10.400000\\r\\n8.400000\\r\\n13.400000\\r\\n11.400000\\r\\n8.400000\\r\\n']}, {'input': '13 97\\r\\n52 52 51 51 52 52 51 52 51 51 52 52 52\\r\\n', 'output': ['7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n7.076923\\r\\n']}, {'input': '17 99\\r\\n13 13 12 13 11 12 12 12 13 13 11 13 13 13 13 12 13\\r\\n', 'output': ['5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n7.294118\\r\\n6.294118\\r\\n6.294118\\r\\n6.294118\\r\\n5.294118\\r\\n5.294118\\r\\n7.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n']}, {'input': '9 91\\r\\n52 51 50 52 52 51 50 48 51\\r\\n', 'output': ['8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n8.888889\\r\\n8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n12.888889\\r\\n9.888889\\r\\n']}, {'input': '17 91\\r\\n13 13 13 13 12 12 13 13 12 13 12 13 10 12 13 13 12\\r\\n', 'output': ['4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n7.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n']}, {'input': '2 3\\r\\n1 1\\r\\n', 'output': ['1.500000\\r\\n1.500000\\r\\n']}, {'input': '2 90\\r\\n0 89\\r\\n', 'output': ['89.500000\\r\\n0.500000\\r\\n']}, {'input': '4 17\\r\\n3 4 8 1\\r\\n', 'output': ['5.250000\\r\\n4.250000\\r\\n0.250000\\r\\n7.250000\\r\\n']}, {'input': '2 9\\r\\n5 5\\r\\n', 'output': ['4.500000\\r\\n4.500000\\r\\n']}, {'input': '7 28\\r\\n1 3 9 10 9 6 10\\r\\n', 'output': ['9.857143\\r\\n7.857143\\r\\n1.857143\\r\\n0.857143\\r\\n1.857143\\r\\n4.857143\\r\\n0.857143\\r\\n']}, {'input': '5 11\\r\\n1 2 3 4 5\\r\\n', 'output': ['4.200000\\r\\n3.200000\\r\\n2.200000\\r\\n1.200000\\r\\n0.200000\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '5 3\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n']}, {'input': '3 1\\r\\n100 100 100\\r\\n', 'output': ['0.333333\\r\\n0.333333\\r\\n0.333333\\r\\n']}, {'input': '5 50\\r\\n2 2 3 2 2\\r\\n', 'output': ['10.200000\\r\\n10.200000\\r\\n9.200000\\r\\n10.200000\\r\\n10.200000\\r\\n']}, {'input': '3 3\\r\\n2 2 3\\r\\n', 'output': ['1.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '2 52\\r\\n2 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 2\\r\\n2 2 3\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n0.000000\\r\\n']}, {'input': '5 1\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n']}, {'input': '2 4\\r\\n1 2\\r\\n', 'output': ['2.500000\\r\\n1.500000\\r\\n']}, {'input': '5 49\\r\\n1 2 3 4 5\\r\\n', 'output': ['11.800000\\r\\n10.800000\\r\\n9.800000\\r\\n8.800000\\r\\n7.800000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nint main() {\n  int a[1000], b[1000], b_;\n  long long n, m;\n  long long sum = 0;\n  scanf(\"%lld%lld\", &n, &m);\n  for (int i = 0; i < n; i++) scanf(\"%d\", &b[i]);\n  for (int i = 0; i < n; i++) {\n    if (b[i] <= m)\n      sum += b[i];\n    else {\n      printf(\"-1\");\n      return 0;\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    b_ = m - sum + b[i];\n    printf(\"%.6f\\n\", (double)b_ / (double)n);\n  }\n  return 0;\n}\n"}
{"src_uid": "65fea461d3caa5a932d1e2c13e99a59e", "id": 13, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '5 50\\r\\n1 2 3 4 5\\r\\n', 'output': ['12.000000\\r\\n11.000000\\r\\n10.000000\\r\\n9.000000\\r\\n8.000000\\r\\n']}, {'input': '2 2\\r\\n1 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 2\\r\\n1 1\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n']}, {'input': '3 2\\r\\n1 2 1\\r\\n', 'output': ['1.000000\\r\\n0.000000\\r\\n1.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 1\\r\\n', 'output': ['2.000000\\r\\n1.000000\\r\\n2.000000\\r\\n']}, {'input': '10 95\\r\\n0 0 0 0 0 1 1 1 1 1\\r\\n', 'output': ['10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 3\\r\\n', 'output': ['2.666667\\r\\n1.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n1 3 2\\r\\n', 'output': ['2.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n2 1 3\\r\\n', 'output': ['1.666667\\r\\n2.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n2 3 1\\r\\n', 'output': ['1.666667\\r\\n0.666667\\r\\n2.666667\\r\\n']}, {'input': '3 5\\r\\n3 1 2\\r\\n', 'output': ['0.666667\\r\\n2.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n3 2 1\\r\\n', 'output': ['0.666667\\r\\n1.666667\\r\\n2.666667\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '2 1\\r\\n2 2\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '3 2\\r\\n2 1 2\\r\\n', 'output': ['0.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '3 3\\r\\n2 2 1\\r\\n', 'output': ['0.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 3\\r\\n3 1 2\\r\\n', 'output': ['0.000000\\r\\n2.000000\\r\\n1.000000\\r\\n']}, {'input': '100 100\\r\\n37 97 75 52 33 29 51 22 33 37 45 96 96 60 82 58 86 71 28 73 38 50 6 6 90 17 26 76 13 41 100 47 17 93 4 1 56 16 41 74 25 17 69 61 39 37 96 73 49 93 52 14 62 24 91 30 9 97 52 100 6 16 85 8 12 26 10 3 94 63 80 27 29 78 9 48 79 64 60 18 98 75 81 35 24 81 2 100 23 70 21 60 98 38 29 29 58 37 49 72\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 100\\r\\n1 3 7 7 9 5 9 3 7 8 10 1 3 10 10 6 1 3 10 4 3 9 4 9 5 4 9 2 8 7 4 3 3 3 5 10 8 9 10 1 9 2 4 8 3 10 9 2 3 9 8 2 4 4 4 7 1 1 7 3 7 8 9 5 1 2 6 7 1 10 9 10 5 10 1 10 5 2 4 3 10 1 6 5 6 7 8 9 3 8 6 10 8 7 2 3 8 6 3 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 61\\r\\n81 80 83 72 87 76 91 92 77 93 77 94 76 73 71 88 88 76 87 73 89 73 85 81 79 90 76 73 82 93 79 93 71 75 72 71 78 85 92 89 88 93 74 87 71 94 74 87 85 89 90 93 86 94 92 87 90 91 75 73 90 84 92 94 92 79 74 85 74 74 89 76 84 84 84 83 86 84 82 71 76 74 83 81 89 73 73 74 71 77 90 94 73 94 73 75 93 89 84 92\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10 100\\r\\n52 52 51 52 52 52 51 51 52 52\\r\\n', 'output': ['9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n']}, {'input': '10 100\\r\\n13 13 13 13 12 13 12 13 12 12\\r\\n', 'output': ['9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n10.600000\\r\\n']}, {'input': '10 100\\r\\n50 51 47 51 48 46 49 51 46 51\\r\\n', 'output': ['9.000000\\r\\n8.000000\\r\\n12.000000\\r\\n8.000000\\r\\n11.000000\\r\\n13.000000\\r\\n10.000000\\r\\n8.000000\\r\\n13.000000\\r\\n8.000000\\r\\n']}, {'input': '10 100\\r\\n13 13 9 12 12 11 13 8 10 13\\r\\n', 'output': ['8.400000\\r\\n8.400000\\r\\n12.400000\\r\\n9.400000\\r\\n9.400000\\r\\n10.400000\\r\\n8.400000\\r\\n13.400000\\r\\n11.400000\\r\\n8.400000\\r\\n']}, {'input': '13 97\\r\\n52 52 51 51 52 52 51 52 51 51 52 52 52\\r\\n', 'output': ['7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n7.076923\\r\\n']}, {'input': '17 99\\r\\n13 13 12 13 11 12 12 12 13 13 11 13 13 13 13 12 13\\r\\n', 'output': ['5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n7.294118\\r\\n6.294118\\r\\n6.294118\\r\\n6.294118\\r\\n5.294118\\r\\n5.294118\\r\\n7.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n']}, {'input': '9 91\\r\\n52 51 50 52 52 51 50 48 51\\r\\n', 'output': ['8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n8.888889\\r\\n8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n12.888889\\r\\n9.888889\\r\\n']}, {'input': '17 91\\r\\n13 13 13 13 12 12 13 13 12 13 12 13 10 12 13 13 12\\r\\n', 'output': ['4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n7.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n']}, {'input': '2 3\\r\\n1 1\\r\\n', 'output': ['1.500000\\r\\n1.500000\\r\\n']}, {'input': '2 90\\r\\n0 89\\r\\n', 'output': ['89.500000\\r\\n0.500000\\r\\n']}, {'input': '4 17\\r\\n3 4 8 1\\r\\n', 'output': ['5.250000\\r\\n4.250000\\r\\n0.250000\\r\\n7.250000\\r\\n']}, {'input': '2 9\\r\\n5 5\\r\\n', 'output': ['4.500000\\r\\n4.500000\\r\\n']}, {'input': '7 28\\r\\n1 3 9 10 9 6 10\\r\\n', 'output': ['9.857143\\r\\n7.857143\\r\\n1.857143\\r\\n0.857143\\r\\n1.857143\\r\\n4.857143\\r\\n0.857143\\r\\n']}, {'input': '5 11\\r\\n1 2 3 4 5\\r\\n', 'output': ['4.200000\\r\\n3.200000\\r\\n2.200000\\r\\n1.200000\\r\\n0.200000\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '5 3\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n']}, {'input': '3 1\\r\\n100 100 100\\r\\n', 'output': ['0.333333\\r\\n0.333333\\r\\n0.333333\\r\\n']}, {'input': '5 50\\r\\n2 2 3 2 2\\r\\n', 'output': ['10.200000\\r\\n10.200000\\r\\n9.200000\\r\\n10.200000\\r\\n10.200000\\r\\n']}, {'input': '3 3\\r\\n2 2 3\\r\\n', 'output': ['1.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '2 52\\r\\n2 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 2\\r\\n2 2 3\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n0.000000\\r\\n']}, {'input': '5 1\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n']}, {'input': '2 4\\r\\n1 2\\r\\n', 'output': ['2.500000\\r\\n1.500000\\r\\n']}, {'input': '5 49\\r\\n1 2 3 4 5\\r\\n', 'output': ['11.800000\\r\\n10.800000\\r\\n9.800000\\r\\n8.800000\\r\\n7.800000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  double b;\n  int a[100];\n  scanf(\"%d%lf\", &n, &b);\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  for (int i = 0; i < n; i++) {\n    if (b == 0) {\n      printf(\"-1\\n\");\n      return 0;\n    } else {\n      int delta = a[i];\n      for (int j = 0; j < n; j++) {\n        if (j == i) continue;\n        b -= delta;\n        delta = b / (n - 1);\n      }\n    }\n    printf(\"%.6lf\\n\", (b - (a[i] - delta)) * (-1));\n  }\n}\n"}
{"src_uid": "65fea461d3caa5a932d1e2c13e99a59e", "id": 13, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '5 50\\r\\n1 2 3 4 5\\r\\n', 'output': ['12.000000\\r\\n11.000000\\r\\n10.000000\\r\\n9.000000\\r\\n8.000000\\r\\n']}, {'input': '2 2\\r\\n1 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 2\\r\\n1 1\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n']}, {'input': '3 2\\r\\n1 2 1\\r\\n', 'output': ['1.000000\\r\\n0.000000\\r\\n1.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 1\\r\\n', 'output': ['2.000000\\r\\n1.000000\\r\\n2.000000\\r\\n']}, {'input': '10 95\\r\\n0 0 0 0 0 1 1 1 1 1\\r\\n', 'output': ['10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 3\\r\\n', 'output': ['2.666667\\r\\n1.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n1 3 2\\r\\n', 'output': ['2.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n2 1 3\\r\\n', 'output': ['1.666667\\r\\n2.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n2 3 1\\r\\n', 'output': ['1.666667\\r\\n0.666667\\r\\n2.666667\\r\\n']}, {'input': '3 5\\r\\n3 1 2\\r\\n', 'output': ['0.666667\\r\\n2.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n3 2 1\\r\\n', 'output': ['0.666667\\r\\n1.666667\\r\\n2.666667\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '2 1\\r\\n2 2\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '3 2\\r\\n2 1 2\\r\\n', 'output': ['0.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '3 3\\r\\n2 2 1\\r\\n', 'output': ['0.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 3\\r\\n3 1 2\\r\\n', 'output': ['0.000000\\r\\n2.000000\\r\\n1.000000\\r\\n']}, {'input': '100 100\\r\\n37 97 75 52 33 29 51 22 33 37 45 96 96 60 82 58 86 71 28 73 38 50 6 6 90 17 26 76 13 41 100 47 17 93 4 1 56 16 41 74 25 17 69 61 39 37 96 73 49 93 52 14 62 24 91 30 9 97 52 100 6 16 85 8 12 26 10 3 94 63 80 27 29 78 9 48 79 64 60 18 98 75 81 35 24 81 2 100 23 70 21 60 98 38 29 29 58 37 49 72\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 100\\r\\n1 3 7 7 9 5 9 3 7 8 10 1 3 10 10 6 1 3 10 4 3 9 4 9 5 4 9 2 8 7 4 3 3 3 5 10 8 9 10 1 9 2 4 8 3 10 9 2 3 9 8 2 4 4 4 7 1 1 7 3 7 8 9 5 1 2 6 7 1 10 9 10 5 10 1 10 5 2 4 3 10 1 6 5 6 7 8 9 3 8 6 10 8 7 2 3 8 6 3 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 61\\r\\n81 80 83 72 87 76 91 92 77 93 77 94 76 73 71 88 88 76 87 73 89 73 85 81 79 90 76 73 82 93 79 93 71 75 72 71 78 85 92 89 88 93 74 87 71 94 74 87 85 89 90 93 86 94 92 87 90 91 75 73 90 84 92 94 92 79 74 85 74 74 89 76 84 84 84 83 86 84 82 71 76 74 83 81 89 73 73 74 71 77 90 94 73 94 73 75 93 89 84 92\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10 100\\r\\n52 52 51 52 52 52 51 51 52 52\\r\\n', 'output': ['9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n']}, {'input': '10 100\\r\\n13 13 13 13 12 13 12 13 12 12\\r\\n', 'output': ['9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n10.600000\\r\\n']}, {'input': '10 100\\r\\n50 51 47 51 48 46 49 51 46 51\\r\\n', 'output': ['9.000000\\r\\n8.000000\\r\\n12.000000\\r\\n8.000000\\r\\n11.000000\\r\\n13.000000\\r\\n10.000000\\r\\n8.000000\\r\\n13.000000\\r\\n8.000000\\r\\n']}, {'input': '10 100\\r\\n13 13 9 12 12 11 13 8 10 13\\r\\n', 'output': ['8.400000\\r\\n8.400000\\r\\n12.400000\\r\\n9.400000\\r\\n9.400000\\r\\n10.400000\\r\\n8.400000\\r\\n13.400000\\r\\n11.400000\\r\\n8.400000\\r\\n']}, {'input': '13 97\\r\\n52 52 51 51 52 52 51 52 51 51 52 52 52\\r\\n', 'output': ['7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n7.076923\\r\\n']}, {'input': '17 99\\r\\n13 13 12 13 11 12 12 12 13 13 11 13 13 13 13 12 13\\r\\n', 'output': ['5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n7.294118\\r\\n6.294118\\r\\n6.294118\\r\\n6.294118\\r\\n5.294118\\r\\n5.294118\\r\\n7.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n']}, {'input': '9 91\\r\\n52 51 50 52 52 51 50 48 51\\r\\n', 'output': ['8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n8.888889\\r\\n8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n12.888889\\r\\n9.888889\\r\\n']}, {'input': '17 91\\r\\n13 13 13 13 12 12 13 13 12 13 12 13 10 12 13 13 12\\r\\n', 'output': ['4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n7.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n']}, {'input': '2 3\\r\\n1 1\\r\\n', 'output': ['1.500000\\r\\n1.500000\\r\\n']}, {'input': '2 90\\r\\n0 89\\r\\n', 'output': ['89.500000\\r\\n0.500000\\r\\n']}, {'input': '4 17\\r\\n3 4 8 1\\r\\n', 'output': ['5.250000\\r\\n4.250000\\r\\n0.250000\\r\\n7.250000\\r\\n']}, {'input': '2 9\\r\\n5 5\\r\\n', 'output': ['4.500000\\r\\n4.500000\\r\\n']}, {'input': '7 28\\r\\n1 3 9 10 9 6 10\\r\\n', 'output': ['9.857143\\r\\n7.857143\\r\\n1.857143\\r\\n0.857143\\r\\n1.857143\\r\\n4.857143\\r\\n0.857143\\r\\n']}, {'input': '5 11\\r\\n1 2 3 4 5\\r\\n', 'output': ['4.200000\\r\\n3.200000\\r\\n2.200000\\r\\n1.200000\\r\\n0.200000\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '5 3\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n']}, {'input': '3 1\\r\\n100 100 100\\r\\n', 'output': ['0.333333\\r\\n0.333333\\r\\n0.333333\\r\\n']}, {'input': '5 50\\r\\n2 2 3 2 2\\r\\n', 'output': ['10.200000\\r\\n10.200000\\r\\n9.200000\\r\\n10.200000\\r\\n10.200000\\r\\n']}, {'input': '3 3\\r\\n2 2 3\\r\\n', 'output': ['1.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '2 52\\r\\n2 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 2\\r\\n2 2 3\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n0.000000\\r\\n']}, {'input': '5 1\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n']}, {'input': '2 4\\r\\n1 2\\r\\n', 'output': ['2.500000\\r\\n1.500000\\r\\n']}, {'input': '5 49\\r\\n1 2 3 4 5\\r\\n', 'output': ['11.800000\\r\\n10.800000\\r\\n9.800000\\r\\n8.800000\\r\\n7.800000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, b;\n  int a[101], t = 0;\n  scanf(\"%d %d\", &n, &b);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &a[i]);\n    t += a[i];\n  }\n  if (t < b) {\n    printf(\"-1\");\n    return 0;\n  }\n  for (int i = 1; i <= n; ++i) {\n    printf(\"%.12f\\n\", (double)(b * 1.0 / n - a[i]));\n  }\n}\n"}
{"src_uid": "65fea461d3caa5a932d1e2c13e99a59e", "id": 13, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '5 50\\r\\n1 2 3 4 5\\r\\n', 'output': ['12.000000\\r\\n11.000000\\r\\n10.000000\\r\\n9.000000\\r\\n8.000000\\r\\n']}, {'input': '2 2\\r\\n1 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 2\\r\\n1 1\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n']}, {'input': '3 2\\r\\n1 2 1\\r\\n', 'output': ['1.000000\\r\\n0.000000\\r\\n1.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 1\\r\\n', 'output': ['2.000000\\r\\n1.000000\\r\\n2.000000\\r\\n']}, {'input': '10 95\\r\\n0 0 0 0 0 1 1 1 1 1\\r\\n', 'output': ['10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 3\\r\\n', 'output': ['2.666667\\r\\n1.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n1 3 2\\r\\n', 'output': ['2.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n2 1 3\\r\\n', 'output': ['1.666667\\r\\n2.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n2 3 1\\r\\n', 'output': ['1.666667\\r\\n0.666667\\r\\n2.666667\\r\\n']}, {'input': '3 5\\r\\n3 1 2\\r\\n', 'output': ['0.666667\\r\\n2.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n3 2 1\\r\\n', 'output': ['0.666667\\r\\n1.666667\\r\\n2.666667\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '2 1\\r\\n2 2\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '3 2\\r\\n2 1 2\\r\\n', 'output': ['0.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '3 3\\r\\n2 2 1\\r\\n', 'output': ['0.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 3\\r\\n3 1 2\\r\\n', 'output': ['0.000000\\r\\n2.000000\\r\\n1.000000\\r\\n']}, {'input': '100 100\\r\\n37 97 75 52 33 29 51 22 33 37 45 96 96 60 82 58 86 71 28 73 38 50 6 6 90 17 26 76 13 41 100 47 17 93 4 1 56 16 41 74 25 17 69 61 39 37 96 73 49 93 52 14 62 24 91 30 9 97 52 100 6 16 85 8 12 26 10 3 94 63 80 27 29 78 9 48 79 64 60 18 98 75 81 35 24 81 2 100 23 70 21 60 98 38 29 29 58 37 49 72\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 100\\r\\n1 3 7 7 9 5 9 3 7 8 10 1 3 10 10 6 1 3 10 4 3 9 4 9 5 4 9 2 8 7 4 3 3 3 5 10 8 9 10 1 9 2 4 8 3 10 9 2 3 9 8 2 4 4 4 7 1 1 7 3 7 8 9 5 1 2 6 7 1 10 9 10 5 10 1 10 5 2 4 3 10 1 6 5 6 7 8 9 3 8 6 10 8 7 2 3 8 6 3 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 61\\r\\n81 80 83 72 87 76 91 92 77 93 77 94 76 73 71 88 88 76 87 73 89 73 85 81 79 90 76 73 82 93 79 93 71 75 72 71 78 85 92 89 88 93 74 87 71 94 74 87 85 89 90 93 86 94 92 87 90 91 75 73 90 84 92 94 92 79 74 85 74 74 89 76 84 84 84 83 86 84 82 71 76 74 83 81 89 73 73 74 71 77 90 94 73 94 73 75 93 89 84 92\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10 100\\r\\n52 52 51 52 52 52 51 51 52 52\\r\\n', 'output': ['9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n']}, {'input': '10 100\\r\\n13 13 13 13 12 13 12 13 12 12\\r\\n', 'output': ['9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n10.600000\\r\\n']}, {'input': '10 100\\r\\n50 51 47 51 48 46 49 51 46 51\\r\\n', 'output': ['9.000000\\r\\n8.000000\\r\\n12.000000\\r\\n8.000000\\r\\n11.000000\\r\\n13.000000\\r\\n10.000000\\r\\n8.000000\\r\\n13.000000\\r\\n8.000000\\r\\n']}, {'input': '10 100\\r\\n13 13 9 12 12 11 13 8 10 13\\r\\n', 'output': ['8.400000\\r\\n8.400000\\r\\n12.400000\\r\\n9.400000\\r\\n9.400000\\r\\n10.400000\\r\\n8.400000\\r\\n13.400000\\r\\n11.400000\\r\\n8.400000\\r\\n']}, {'input': '13 97\\r\\n52 52 51 51 52 52 51 52 51 51 52 52 52\\r\\n', 'output': ['7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n7.076923\\r\\n']}, {'input': '17 99\\r\\n13 13 12 13 11 12 12 12 13 13 11 13 13 13 13 12 13\\r\\n', 'output': ['5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n7.294118\\r\\n6.294118\\r\\n6.294118\\r\\n6.294118\\r\\n5.294118\\r\\n5.294118\\r\\n7.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n']}, {'input': '9 91\\r\\n52 51 50 52 52 51 50 48 51\\r\\n', 'output': ['8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n8.888889\\r\\n8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n12.888889\\r\\n9.888889\\r\\n']}, {'input': '17 91\\r\\n13 13 13 13 12 12 13 13 12 13 12 13 10 12 13 13 12\\r\\n', 'output': ['4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n7.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n']}, {'input': '2 3\\r\\n1 1\\r\\n', 'output': ['1.500000\\r\\n1.500000\\r\\n']}, {'input': '2 90\\r\\n0 89\\r\\n', 'output': ['89.500000\\r\\n0.500000\\r\\n']}, {'input': '4 17\\r\\n3 4 8 1\\r\\n', 'output': ['5.250000\\r\\n4.250000\\r\\n0.250000\\r\\n7.250000\\r\\n']}, {'input': '2 9\\r\\n5 5\\r\\n', 'output': ['4.500000\\r\\n4.500000\\r\\n']}, {'input': '7 28\\r\\n1 3 9 10 9 6 10\\r\\n', 'output': ['9.857143\\r\\n7.857143\\r\\n1.857143\\r\\n0.857143\\r\\n1.857143\\r\\n4.857143\\r\\n0.857143\\r\\n']}, {'input': '5 11\\r\\n1 2 3 4 5\\r\\n', 'output': ['4.200000\\r\\n3.200000\\r\\n2.200000\\r\\n1.200000\\r\\n0.200000\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '5 3\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n']}, {'input': '3 1\\r\\n100 100 100\\r\\n', 'output': ['0.333333\\r\\n0.333333\\r\\n0.333333\\r\\n']}, {'input': '5 50\\r\\n2 2 3 2 2\\r\\n', 'output': ['10.200000\\r\\n10.200000\\r\\n9.200000\\r\\n10.200000\\r\\n10.200000\\r\\n']}, {'input': '3 3\\r\\n2 2 3\\r\\n', 'output': ['1.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '2 52\\r\\n2 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 2\\r\\n2 2 3\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n0.000000\\r\\n']}, {'input': '5 1\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n']}, {'input': '2 4\\r\\n1 2\\r\\n', 'output': ['2.500000\\r\\n1.500000\\r\\n']}, {'input': '5 49\\r\\n1 2 3 4 5\\r\\n', 'output': ['11.800000\\r\\n10.800000\\r\\n9.800000\\r\\n8.800000\\r\\n7.800000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, b, x;\n  cin >> n >> b;\n  for (int i = 1; i <= n; i++) {\n    cin >> x;\n    cout << fixed << setprecision(6) << (x * (n - 1)) / n << endl;\n  }\n}\n"}
{"src_uid": "65fea461d3caa5a932d1e2c13e99a59e", "id": 13, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '5 50\\r\\n1 2 3 4 5\\r\\n', 'output': ['12.000000\\r\\n11.000000\\r\\n10.000000\\r\\n9.000000\\r\\n8.000000\\r\\n']}, {'input': '2 2\\r\\n1 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 2\\r\\n1 1\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n']}, {'input': '3 2\\r\\n1 2 1\\r\\n', 'output': ['1.000000\\r\\n0.000000\\r\\n1.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 1\\r\\n', 'output': ['2.000000\\r\\n1.000000\\r\\n2.000000\\r\\n']}, {'input': '10 95\\r\\n0 0 0 0 0 1 1 1 1 1\\r\\n', 'output': ['10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 3\\r\\n', 'output': ['2.666667\\r\\n1.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n1 3 2\\r\\n', 'output': ['2.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n2 1 3\\r\\n', 'output': ['1.666667\\r\\n2.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n2 3 1\\r\\n', 'output': ['1.666667\\r\\n0.666667\\r\\n2.666667\\r\\n']}, {'input': '3 5\\r\\n3 1 2\\r\\n', 'output': ['0.666667\\r\\n2.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n3 2 1\\r\\n', 'output': ['0.666667\\r\\n1.666667\\r\\n2.666667\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '2 1\\r\\n2 2\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '3 2\\r\\n2 1 2\\r\\n', 'output': ['0.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '3 3\\r\\n2 2 1\\r\\n', 'output': ['0.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 3\\r\\n3 1 2\\r\\n', 'output': ['0.000000\\r\\n2.000000\\r\\n1.000000\\r\\n']}, {'input': '100 100\\r\\n37 97 75 52 33 29 51 22 33 37 45 96 96 60 82 58 86 71 28 73 38 50 6 6 90 17 26 76 13 41 100 47 17 93 4 1 56 16 41 74 25 17 69 61 39 37 96 73 49 93 52 14 62 24 91 30 9 97 52 100 6 16 85 8 12 26 10 3 94 63 80 27 29 78 9 48 79 64 60 18 98 75 81 35 24 81 2 100 23 70 21 60 98 38 29 29 58 37 49 72\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 100\\r\\n1 3 7 7 9 5 9 3 7 8 10 1 3 10 10 6 1 3 10 4 3 9 4 9 5 4 9 2 8 7 4 3 3 3 5 10 8 9 10 1 9 2 4 8 3 10 9 2 3 9 8 2 4 4 4 7 1 1 7 3 7 8 9 5 1 2 6 7 1 10 9 10 5 10 1 10 5 2 4 3 10 1 6 5 6 7 8 9 3 8 6 10 8 7 2 3 8 6 3 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 61\\r\\n81 80 83 72 87 76 91 92 77 93 77 94 76 73 71 88 88 76 87 73 89 73 85 81 79 90 76 73 82 93 79 93 71 75 72 71 78 85 92 89 88 93 74 87 71 94 74 87 85 89 90 93 86 94 92 87 90 91 75 73 90 84 92 94 92 79 74 85 74 74 89 76 84 84 84 83 86 84 82 71 76 74 83 81 89 73 73 74 71 77 90 94 73 94 73 75 93 89 84 92\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10 100\\r\\n52 52 51 52 52 52 51 51 52 52\\r\\n', 'output': ['9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n']}, {'input': '10 100\\r\\n13 13 13 13 12 13 12 13 12 12\\r\\n', 'output': ['9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n10.600000\\r\\n']}, {'input': '10 100\\r\\n50 51 47 51 48 46 49 51 46 51\\r\\n', 'output': ['9.000000\\r\\n8.000000\\r\\n12.000000\\r\\n8.000000\\r\\n11.000000\\r\\n13.000000\\r\\n10.000000\\r\\n8.000000\\r\\n13.000000\\r\\n8.000000\\r\\n']}, {'input': '10 100\\r\\n13 13 9 12 12 11 13 8 10 13\\r\\n', 'output': ['8.400000\\r\\n8.400000\\r\\n12.400000\\r\\n9.400000\\r\\n9.400000\\r\\n10.400000\\r\\n8.400000\\r\\n13.400000\\r\\n11.400000\\r\\n8.400000\\r\\n']}, {'input': '13 97\\r\\n52 52 51 51 52 52 51 52 51 51 52 52 52\\r\\n', 'output': ['7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n7.076923\\r\\n']}, {'input': '17 99\\r\\n13 13 12 13 11 12 12 12 13 13 11 13 13 13 13 12 13\\r\\n', 'output': ['5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n7.294118\\r\\n6.294118\\r\\n6.294118\\r\\n6.294118\\r\\n5.294118\\r\\n5.294118\\r\\n7.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n']}, {'input': '9 91\\r\\n52 51 50 52 52 51 50 48 51\\r\\n', 'output': ['8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n8.888889\\r\\n8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n12.888889\\r\\n9.888889\\r\\n']}, {'input': '17 91\\r\\n13 13 13 13 12 12 13 13 12 13 12 13 10 12 13 13 12\\r\\n', 'output': ['4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n7.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n']}, {'input': '2 3\\r\\n1 1\\r\\n', 'output': ['1.500000\\r\\n1.500000\\r\\n']}, {'input': '2 90\\r\\n0 89\\r\\n', 'output': ['89.500000\\r\\n0.500000\\r\\n']}, {'input': '4 17\\r\\n3 4 8 1\\r\\n', 'output': ['5.250000\\r\\n4.250000\\r\\n0.250000\\r\\n7.250000\\r\\n']}, {'input': '2 9\\r\\n5 5\\r\\n', 'output': ['4.500000\\r\\n4.500000\\r\\n']}, {'input': '7 28\\r\\n1 3 9 10 9 6 10\\r\\n', 'output': ['9.857143\\r\\n7.857143\\r\\n1.857143\\r\\n0.857143\\r\\n1.857143\\r\\n4.857143\\r\\n0.857143\\r\\n']}, {'input': '5 11\\r\\n1 2 3 4 5\\r\\n', 'output': ['4.200000\\r\\n3.200000\\r\\n2.200000\\r\\n1.200000\\r\\n0.200000\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '5 3\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n']}, {'input': '3 1\\r\\n100 100 100\\r\\n', 'output': ['0.333333\\r\\n0.333333\\r\\n0.333333\\r\\n']}, {'input': '5 50\\r\\n2 2 3 2 2\\r\\n', 'output': ['10.200000\\r\\n10.200000\\r\\n9.200000\\r\\n10.200000\\r\\n10.200000\\r\\n']}, {'input': '3 3\\r\\n2 2 3\\r\\n', 'output': ['1.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '2 52\\r\\n2 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 2\\r\\n2 2 3\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n0.000000\\r\\n']}, {'input': '5 1\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n']}, {'input': '2 4\\r\\n1 2\\r\\n', 'output': ['2.500000\\r\\n1.500000\\r\\n']}, {'input': '5 49\\r\\n1 2 3 4 5\\r\\n', 'output': ['11.800000\\r\\n10.800000\\r\\n9.800000\\r\\n8.800000\\r\\n7.800000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, b;\nint arr[101];\nint main() {\n  scanf(\"%d %d\", &n, &b);\n  for (int i = 0; i < n; i++) scanf(\"%d\", &arr[i]);\n  int need = b / n;\n  int a = b - (n * need);\n  for (int i = 0; i < n; i++) {\n    if (a) {\n      printf(\"%.6f\\n\", arr[i] + need + 1);\n      a--;\n    } else {\n      printf(\"%.6f\\n\", arr[i] + need);\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "062a171cc3ea717ea95ede9d7a1c3a43", "id": 14, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1300, "testcases": "[{'input': '5 5 3 2\\r\\n', 'output': ['2']}, {'input': '7 5 5 2\\r\\n', 'output': ['2']}, {'input': '4 4 4 4\\r\\n', 'output': ['1']}, {'input': '1 1 1 1\\r\\n', 'output': ['1']}, {'input': '4000 1 2 3\\r\\n', 'output': ['4000']}, {'input': '4000 3 4 5\\r\\n', 'output': ['1333']}, {'input': '10 3 4 5\\r\\n', 'output': ['3']}, {'input': '100 23 15 50\\r\\n', 'output': ['2']}, {'input': '3119 3515 1021 7\\r\\n', 'output': ['11']}, {'input': '918 102 1327 1733\\r\\n', 'output': ['9']}, {'input': '3164 42 430 1309\\r\\n', 'output': ['15']}, {'input': '3043 317 1141 2438\\r\\n', 'output': ['7']}, {'input': '26 1 772 2683\\r\\n', 'output': ['26']}, {'input': '370 2 1 15\\r\\n', 'output': ['370']}, {'input': '734 12 6 2\\r\\n', 'output': ['367']}, {'input': '418 18 14 17\\r\\n', 'output': ['29']}, {'input': '18 16 28 9\\r\\n', 'output': ['2']}, {'input': '14 6 2 17\\r\\n', 'output': ['7']}, {'input': '29 27 18 2\\r\\n', 'output': ['2']}, {'input': '29 12 7 10\\r\\n', 'output': ['3']}, {'input': '27 23 4 3\\r\\n', 'output': ['9']}, {'input': '5 14 5 2\\r\\n', 'output': ['1']}, {'input': '5 17 26 5\\r\\n', 'output': ['1']}, {'input': '9 1 10 3\\r\\n', 'output': ['9']}, {'input': '2 19 15 1\\r\\n', 'output': ['2']}, {'input': '4 6 4 9\\r\\n', 'output': ['1']}, {'input': '10 6 2 9\\r\\n', 'output': ['5']}, {'input': '2 2 9 6\\r\\n', 'output': ['1']}, {'input': '6 2 4 1\\r\\n', 'output': ['6']}, {'input': '27 24 5 27\\r\\n', 'output': ['1']}, {'input': '2683 83 26 2709\\r\\n', 'output': ['101']}, {'input': '728 412 789 158\\r\\n', 'output': ['3']}, {'input': '3964 4 2916 176\\r\\n', 'output': ['991']}, {'input': '3399 2035 2 3334\\r\\n', 'output': ['683']}, {'input': '3455 244 3301 3\\r\\n', 'output': ['991']}, {'input': '595 2263 3625 1\\r\\n', 'output': ['595']}, {'input': '4000 1 1 1\\r\\n', 'output': ['4000']}, {'input': '3999 2 2 3999\\r\\n', 'output': ['1']}, {'input': '25 6 8 11\\r\\n', 'output': ['3']}, {'input': '4000 500 1000 2000\\r\\n', 'output': ['8']}, {'input': '53 10 11 23\\r\\n', 'output': ['5']}, {'input': '100 100 1 1\\r\\n', 'output': ['100']}, {'input': '17 3 4 10\\r\\n', 'output': ['5']}, {'input': '413 101 102 105\\r\\n', 'output': ['4']}, {'input': '490 4 49 50\\r\\n', 'output': ['111']}, {'input': '3999 2 3 3\\r\\n', 'output': ['1999']}, {'input': '8 3 8 4\\r\\n', 'output': ['2']}, {'input': '5 1 3 3\\r\\n', 'output': ['5']}, {'input': '100 3 17 22\\r\\n', 'output': ['27']}, {'input': '4000 2 3 4\\r\\n', 'output': ['2000']}, {'input': '4000 3 3 5\\r\\n', 'output': ['1332']}, {'input': '13 4 6 7\\r\\n', 'output': ['2']}, {'input': '4000 5 2 2\\r\\n', 'output': ['2000']}, {'input': '3999 2 2 3\\r\\n', 'output': ['1999']}, {'input': '4000 33 7 3333\\r\\n', 'output': ['564']}, {'input': '60 33 20 9\\r\\n', 'output': ['4']}, {'input': '100 9 11 99\\r\\n', 'output': ['10']}, {'input': '2009 6 8 9\\r\\n', 'output': ['334']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a[4005], n, A, B, C;\nint max(int a, int b) { return a > b? a : b; }\nint main() {\n  int i, ans;\n  while (scanf(\"%d%d%d%d\", &n, &A, &B, &C)!= EOF) {\n    int t, tt;\n    t = min(min(A, B), C);\n    memset(a, 0, sizeof(a));\n    tt = 0;\n    while (n >= t) {\n      a[t] += 1;\n      n = n - t;\n      t = min(n / t + 1, t);\n    }\n    ans = max(a[A], max(a[B], a[C]));\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"}
{"src_uid": "062a171cc3ea717ea95ede9d7a1c3a43", "id": 14, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1300, "testcases": "[{'input': '5 5 3 2\\r\\n', 'output': ['2']}, {'input': '7 5 5 2\\r\\n', 'output': ['2']}, {'input': '4 4 4 4\\r\\n', 'output': ['1']}, {'input': '1 1 1 1\\r\\n', 'output': ['1']}, {'input': '4000 1 2 3\\r\\n', 'output': ['4000']}, {'input': '4000 3 4 5\\r\\n', 'output': ['1333']}, {'input': '10 3 4 5\\r\\n', 'output': ['3']}, {'input': '100 23 15 50\\r\\n', 'output': ['2']}, {'input': '3119 3515 1021 7\\r\\n', 'output': ['11']}, {'input': '918 102 1327 1733\\r\\n', 'output': ['9']}, {'input': '3164 42 430 1309\\r\\n', 'output': ['15']}, {'input': '3043 317 1141 2438\\r\\n', 'output': ['7']}, {'input': '26 1 772 2683\\r\\n', 'output': ['26']}, {'input': '370 2 1 15\\r\\n', 'output': ['370']}, {'input': '734 12 6 2\\r\\n', 'output': ['367']}, {'input': '418 18 14 17\\r\\n', 'output': ['29']}, {'input': '18 16 28 9\\r\\n', 'output': ['2']}, {'input': '14 6 2 17\\r\\n', 'output': ['7']}, {'input': '29 27 18 2\\r\\n', 'output': ['2']}, {'input': '29 12 7 10\\r\\n', 'output': ['3']}, {'input': '27 23 4 3\\r\\n', 'output': ['9']}, {'input': '5 14 5 2\\r\\n', 'output': ['1']}, {'input': '5 17 26 5\\r\\n', 'output': ['1']}, {'input': '9 1 10 3\\r\\n', 'output': ['9']}, {'input': '2 19 15 1\\r\\n', 'output': ['2']}, {'input': '4 6 4 9\\r\\n', 'output': ['1']}, {'input': '10 6 2 9\\r\\n', 'output': ['5']}, {'input': '2 2 9 6\\r\\n', 'output': ['1']}, {'input': '6 2 4 1\\r\\n', 'output': ['6']}, {'input': '27 24 5 27\\r\\n', 'output': ['1']}, {'input': '2683 83 26 2709\\r\\n', 'output': ['101']}, {'input': '728 412 789 158\\r\\n', 'output': ['3']}, {'input': '3964 4 2916 176\\r\\n', 'output': ['991']}, {'input': '3399 2035 2 3334\\r\\n', 'output': ['683']}, {'input': '3455 244 3301 3\\r\\n', 'output': ['991']}, {'input': '595 2263 3625 1\\r\\n', 'output': ['595']}, {'input': '4000 1 1 1\\r\\n', 'output': ['4000']}, {'input': '3999 2 2 3999\\r\\n', 'output': ['1']}, {'input': '25 6 8 11\\r\\n', 'output': ['3']}, {'input': '4000 500 1000 2000\\r\\n', 'output': ['8']}, {'input': '53 10 11 23\\r\\n', 'output': ['5']}, {'input': '100 100 1 1\\r\\n', 'output': ['100']}, {'input': '17 3 4 10\\r\\n', 'output': ['5']}, {'input': '413 101 102 105\\r\\n', 'output': ['4']}, {'input': '490 4 49 50\\r\\n', 'output': ['111']}, {'input': '3999 2 3 3\\r\\n', 'output': ['1999']}, {'input': '8 3 8 4\\r\\n', 'output': ['2']}, {'input': '5 1 3 3\\r\\n', 'output': ['5']}, {'input': '100 3 17 22\\r\\n', 'output': ['27']}, {'input': '4000 2 3 4\\r\\n', 'output': ['2000']}, {'input': '4000 3 3 5\\r\\n', 'output': ['1332']}, {'input': '13 4 6 7\\r\\n', 'output': ['2']}, {'input': '4000 5 2 2\\r\\n', 'output': ['2000']}, {'input': '3999 2 2 3\\r\\n', 'output': ['1999']}, {'input': '4000 33 7 3333\\r\\n', 'output': ['564']}, {'input': '60 33 20 9\\r\\n', 'output': ['4']}, {'input': '100 9 11 99\\r\\n', 'output': ['10']}, {'input': '2009 6 8 9\\r\\n', 'output': ['334']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a[1000000], n, A, B, C;\nint main() {\n  scanf(\"%d%d%d%d\", &n, &A, &B, &C);\n  int f[1000000];\n  memset(f, 0, sizeof(f));\n  for (int i = 1; i <= 30000; i++) a[i] = min(min(A, B), C);\n  for (int i = 1; i <= 30000; i++) f[i] = a[i] == a[i + 1]? f[i - 1] + 1 : 0;\n  int Max = 0, ret = 0;\n  for (int i = 1; i <= 30000; i++)\n    if (a[i] == n) {\n      Max = 0;\n      for (int j = i + 1; j <= 30000; j++) {\n        f[j] = a[j] == a[j + 1]? f[j - 1] + 1 : 0;\n        Max = max(f[j], Max);\n      }\n      ret = max(ret, Max + 1);\n    }\n  printf(\"%d\\n\", ret);\n  return 0;\n}\n"}
{"src_uid": "062a171cc3ea717ea95ede9d7a1c3a43", "id": 14, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1300, "testcases": "[{'input': '5 5 3 2\\r\\n', 'output': ['2']}, {'input': '7 5 5 2\\r\\n', 'output': ['2']}, {'input': '4 4 4 4\\r\\n', 'output': ['1']}, {'input': '1 1 1 1\\r\\n', 'output': ['1']}, {'input': '4000 1 2 3\\r\\n', 'output': ['4000']}, {'input': '4000 3 4 5\\r\\n', 'output': ['1333']}, {'input': '10 3 4 5\\r\\n', 'output': ['3']}, {'input': '100 23 15 50\\r\\n', 'output': ['2']}, {'input': '3119 3515 1021 7\\r\\n', 'output': ['11']}, {'input': '918 102 1327 1733\\r\\n', 'output': ['9']}, {'input': '3164 42 430 1309\\r\\n', 'output': ['15']}, {'input': '3043 317 1141 2438\\r\\n', 'output': ['7']}, {'input': '26 1 772 2683\\r\\n', 'output': ['26']}, {'input': '370 2 1 15\\r\\n', 'output': ['370']}, {'input': '734 12 6 2\\r\\n', 'output': ['367']}, {'input': '418 18 14 17\\r\\n', 'output': ['29']}, {'input': '18 16 28 9\\r\\n', 'output': ['2']}, {'input': '14 6 2 17\\r\\n', 'output': ['7']}, {'input': '29 27 18 2\\r\\n', 'output': ['2']}, {'input': '29 12 7 10\\r\\n', 'output': ['3']}, {'input': '27 23 4 3\\r\\n', 'output': ['9']}, {'input': '5 14 5 2\\r\\n', 'output': ['1']}, {'input': '5 17 26 5\\r\\n', 'output': ['1']}, {'input': '9 1 10 3\\r\\n', 'output': ['9']}, {'input': '2 19 15 1\\r\\n', 'output': ['2']}, {'input': '4 6 4 9\\r\\n', 'output': ['1']}, {'input': '10 6 2 9\\r\\n', 'output': ['5']}, {'input': '2 2 9 6\\r\\n', 'output': ['1']}, {'input': '6 2 4 1\\r\\n', 'output': ['6']}, {'input': '27 24 5 27\\r\\n', 'output': ['1']}, {'input': '2683 83 26 2709\\r\\n', 'output': ['101']}, {'input': '728 412 789 158\\r\\n', 'output': ['3']}, {'input': '3964 4 2916 176\\r\\n', 'output': ['991']}, {'input': '3399 2035 2 3334\\r\\n', 'output': ['683']}, {'input': '3455 244 3301 3\\r\\n', 'output': ['991']}, {'input': '595 2263 3625 1\\r\\n', 'output': ['595']}, {'input': '4000 1 1 1\\r\\n', 'output': ['4000']}, {'input': '3999 2 2 3999\\r\\n', 'output': ['1']}, {'input': '25 6 8 11\\r\\n', 'output': ['3']}, {'input': '4000 500 1000 2000\\r\\n', 'output': ['8']}, {'input': '53 10 11 23\\r\\n', 'output': ['5']}, {'input': '100 100 1 1\\r\\n', 'output': ['100']}, {'input': '17 3 4 10\\r\\n', 'output': ['5']}, {'input': '413 101 102 105\\r\\n', 'output': ['4']}, {'input': '490 4 49 50\\r\\n', 'output': ['111']}, {'input': '3999 2 3 3\\r\\n', 'output': ['1999']}, {'input': '8 3 8 4\\r\\n', 'output': ['2']}, {'input': '5 1 3 3\\r\\n', 'output': ['5']}, {'input': '100 3 17 22\\r\\n', 'output': ['27']}, {'input': '4000 2 3 4\\r\\n', 'output': ['2000']}, {'input': '4000 3 3 5\\r\\n', 'output': ['1332']}, {'input': '13 4 6 7\\r\\n', 'output': ['2']}, {'input': '4000 5 2 2\\r\\n', 'output': ['2000']}, {'input': '3999 2 2 3\\r\\n', 'output': ['1999']}, {'input': '4000 33 7 3333\\r\\n', 'output': ['564']}, {'input': '60 33 20 9\\r\\n', 'output': ['4']}, {'input': '100 9 11 99\\r\\n', 'output': ['10']}, {'input': '2009 6 8 9\\r\\n', 'output': ['334']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a, b, c;\nint ans;\nvoid solve(int s, int t) {\n  if (s > n) return;\n  if (s == n) {\n    if (t) ans = max(ans, t);\n    return;\n  }\n  if (s + a <= n) solve(s + a, t);\n  if (s + b <= n) solve(s + b, t + 1);\n  if (s + c <= n) solve(s + c, t + 1);\n}\nint main() {\n  cin >> n >> a >> b >> c;\n  ans = 0;\n  solve(0, 0);\n  cout << ans << endl;\n  return 0;\n}\n"}
{"src_uid": "062a171cc3ea717ea95ede9d7a1c3a43", "id": 14, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1300, "testcases": "[{'input': '5 5 3 2\\r\\n', 'output': ['2']}, {'input': '7 5 5 2\\r\\n', 'output': ['2']}, {'input': '4 4 4 4\\r\\n', 'output': ['1']}, {'input': '1 1 1 1\\r\\n', 'output': ['1']}, {'input': '4000 1 2 3\\r\\n', 'output': ['4000']}, {'input': '4000 3 4 5\\r\\n', 'output': ['1333']}, {'input': '10 3 4 5\\r\\n', 'output': ['3']}, {'input': '100 23 15 50\\r\\n', 'output': ['2']}, {'input': '3119 3515 1021 7\\r\\n', 'output': ['11']}, {'input': '918 102 1327 1733\\r\\n', 'output': ['9']}, {'input': '3164 42 430 1309\\r\\n', 'output': ['15']}, {'input': '3043 317 1141 2438\\r\\n', 'output': ['7']}, {'input': '26 1 772 2683\\r\\n', 'output': ['26']}, {'input': '370 2 1 15\\r\\n', 'output': ['370']}, {'input': '734 12 6 2\\r\\n', 'output': ['367']}, {'input': '418 18 14 17\\r\\n', 'output': ['29']}, {'input': '18 16 28 9\\r\\n', 'output': ['2']}, {'input': '14 6 2 17\\r\\n', 'output': ['7']}, {'input': '29 27 18 2\\r\\n', 'output': ['2']}, {'input': '29 12 7 10\\r\\n', 'output': ['3']}, {'input': '27 23 4 3\\r\\n', 'output': ['9']}, {'input': '5 14 5 2\\r\\n', 'output': ['1']}, {'input': '5 17 26 5\\r\\n', 'output': ['1']}, {'input': '9 1 10 3\\r\\n', 'output': ['9']}, {'input': '2 19 15 1\\r\\n', 'output': ['2']}, {'input': '4 6 4 9\\r\\n', 'output': ['1']}, {'input': '10 6 2 9\\r\\n', 'output': ['5']}, {'input': '2 2 9 6\\r\\n', 'output': ['1']}, {'input': '6 2 4 1\\r\\n', 'output': ['6']}, {'input': '27 24 5 27\\r\\n', 'output': ['1']}, {'input': '2683 83 26 2709\\r\\n', 'output': ['101']}, {'input': '728 412 789 158\\r\\n', 'output': ['3']}, {'input': '3964 4 2916 176\\r\\n', 'output': ['991']}, {'input': '3399 2035 2 3334\\r\\n', 'output': ['683']}, {'input': '3455 244 3301 3\\r\\n', 'output': ['991']}, {'input': '595 2263 3625 1\\r\\n', 'output': ['595']}, {'input': '4000 1 1 1\\r\\n', 'output': ['4000']}, {'input': '3999 2 2 3999\\r\\n', 'output': ['1']}, {'input': '25 6 8 11\\r\\n', 'output': ['3']}, {'input': '4000 500 1000 2000\\r\\n', 'output': ['8']}, {'input': '53 10 11 23\\r\\n', 'output': ['5']}, {'input': '100 100 1 1\\r\\n', 'output': ['100']}, {'input': '17 3 4 10\\r\\n', 'output': ['5']}, {'input': '413 101 102 105\\r\\n', 'output': ['4']}, {'input': '490 4 49 50\\r\\n', 'output': ['111']}, {'input': '3999 2 3 3\\r\\n', 'output': ['1999']}, {'input': '8 3 8 4\\r\\n', 'output': ['2']}, {'input': '5 1 3 3\\r\\n', 'output': ['5']}, {'input': '100 3 17 22\\r\\n', 'output': ['27']}, {'input': '4000 2 3 4\\r\\n', 'output': ['2000']}, {'input': '4000 3 3 5\\r\\n', 'output': ['1332']}, {'input': '13 4 6 7\\r\\n', 'output': ['2']}, {'input': '4000 5 2 2\\r\\n', 'output': ['2000']}, {'input': '3999 2 2 3\\r\\n', 'output': ['1999']}, {'input': '4000 33 7 3333\\r\\n', 'output': ['564']}, {'input': '60 33 20 9\\r\\n', 'output': ['4']}, {'input': '100 9 11 99\\r\\n', 'output': ['10']}, {'input': '2009 6 8 9\\r\\n', 'output': ['334']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a, b, c;\n  cin >> n >> a >> b >> c;\n  int m[10001];\n  int l[10001];\n  int i, j, k, ln;\n  ln = 0;\n  m[0] = -1;\n  for (i = 0; i <= n / a; i++) {\n    m[i + 1] = -1;\n    l[ln++] = i;\n  }\n  for (i = 0; i <= n / b; i++) {\n    m[i + 1] = -1;\n    l[ln++] = i;\n  }\n  for (i = 0; i <= n / c; i++) {\n    m[i + 1] = -1;\n    l[ln++] = i;\n  }\n  ln = 0;\n  for (i = 1; i <= n; i++) {\n    for (j = 0; j < ln; j++) {\n      k = i - l[j];\n      if (m[k] == -1 || k < 0) {\n        m[k + 1] = max(m[k + 1], m[k] + 1);\n      }\n    }\n    ln = 0;\n    for (j = i - a + 1; j <= i; j++) {\n      if (m[j]!= -1) {\n        l[ln++] = j;\n      }\n    }\n  }\n  cout << m[n];\n  return 0;\n}\n"}
{"src_uid": "062a171cc3ea717ea95ede9d7a1c3a43", "id": 14, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1300, "testcases": "[{'input': '5 5 3 2\\r\\n', 'output': ['2']}, {'input': '7 5 5 2\\r\\n', 'output': ['2']}, {'input': '4 4 4 4\\r\\n', 'output': ['1']}, {'input': '1 1 1 1\\r\\n', 'output': ['1']}, {'input': '4000 1 2 3\\r\\n', 'output': ['4000']}, {'input': '4000 3 4 5\\r\\n', 'output': ['1333']}, {'input': '10 3 4 5\\r\\n', 'output': ['3']}, {'input': '100 23 15 50\\r\\n', 'output': ['2']}, {'input': '3119 3515 1021 7\\r\\n', 'output': ['11']}, {'input': '918 102 1327 1733\\r\\n', 'output': ['9']}, {'input': '3164 42 430 1309\\r\\n', 'output': ['15']}, {'input': '3043 317 1141 2438\\r\\n', 'output': ['7']}, {'input': '26 1 772 2683\\r\\n', 'output': ['26']}, {'input': '370 2 1 15\\r\\n', 'output': ['370']}, {'input': '734 12 6 2\\r\\n', 'output': ['367']}, {'input': '418 18 14 17\\r\\n', 'output': ['29']}, {'input': '18 16 28 9\\r\\n', 'output': ['2']}, {'input': '14 6 2 17\\r\\n', 'output': ['7']}, {'input': '29 27 18 2\\r\\n', 'output': ['2']}, {'input': '29 12 7 10\\r\\n', 'output': ['3']}, {'input': '27 23 4 3\\r\\n', 'output': ['9']}, {'input': '5 14 5 2\\r\\n', 'output': ['1']}, {'input': '5 17 26 5\\r\\n', 'output': ['1']}, {'input': '9 1 10 3\\r\\n', 'output': ['9']}, {'input': '2 19 15 1\\r\\n', 'output': ['2']}, {'input': '4 6 4 9\\r\\n', 'output': ['1']}, {'input': '10 6 2 9\\r\\n', 'output': ['5']}, {'input': '2 2 9 6\\r\\n', 'output': ['1']}, {'input': '6 2 4 1\\r\\n', 'output': ['6']}, {'input': '27 24 5 27\\r\\n', 'output': ['1']}, {'input': '2683 83 26 2709\\r\\n', 'output': ['101']}, {'input': '728 412 789 158\\r\\n', 'output': ['3']}, {'input': '3964 4 2916 176\\r\\n', 'output': ['991']}, {'input': '3399 2035 2 3334\\r\\n', 'output': ['683']}, {'input': '3455 244 3301 3\\r\\n', 'output': ['991']}, {'input': '595 2263 3625 1\\r\\n', 'output': ['595']}, {'input': '4000 1 1 1\\r\\n', 'output': ['4000']}, {'input': '3999 2 2 3999\\r\\n', 'output': ['1']}, {'input': '25 6 8 11\\r\\n', 'output': ['3']}, {'input': '4000 500 1000 2000\\r\\n', 'output': ['8']}, {'input': '53 10 11 23\\r\\n', 'output': ['5']}, {'input': '100 100 1 1\\r\\n', 'output': ['100']}, {'input': '17 3 4 10\\r\\n', 'output': ['5']}, {'input': '413 101 102 105\\r\\n', 'output': ['4']}, {'input': '490 4 49 50\\r\\n', 'output': ['111']}, {'input': '3999 2 3 3\\r\\n', 'output': ['1999']}, {'input': '8 3 8 4\\r\\n', 'output': ['2']}, {'input': '5 1 3 3\\r\\n', 'output': ['5']}, {'input': '100 3 17 22\\r\\n', 'output': ['27']}, {'input': '4000 2 3 4\\r\\n', 'output': ['2000']}, {'input': '4000 3 3 5\\r\\n', 'output': ['1332']}, {'input': '13 4 6 7\\r\\n', 'output': ['2']}, {'input': '4000 5 2 2\\r\\n', 'output': ['2000']}, {'input': '3999 2 2 3\\r\\n', 'output': ['1999']}, {'input': '4000 33 7 3333\\r\\n', 'output': ['564']}, {'input': '60 33 20 9\\r\\n', 'output': ['4']}, {'input': '100 9 11 99\\r\\n', 'output': ['10']}, {'input': '2009 6 8 9\\r\\n', 'output': ['334']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint i, j, k, m, n, a, b, c, ans;\nint p[4005];\nint main() {\n  memset(p, 0, sizeof(p));\n  scanf(\"%d%d%d%d\", &n, &a, &b, &c);\n  for (i = 1; i <= n; i++) p[i] = max(max(n % i, a % i), b % i);\n  p[0] = 1;\n  m = -1;\n  for (i = 1; i <= n; i++) {\n    j = p[i];\n    k = i - j;\n    if (k <= n && j + p[k] > m) m = j + p[k];\n  }\n  for (i = 0; i <= n; i++) ans = max(ans, n / i);\n  ans = max(ans, m);\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "102667eaa3aee012fef70f4192464674", "id": 15, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 900, "testcases": "[{'input': '2\\r\\n4 5\\r\\n3\\r\\n12 13 15\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n1 2 3 4\\r\\n5\\r\\n10 11 12 13 14\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 7 11 13\\r\\n4\\r\\n51 119 187 221\\r\\n', 'output': ['4\\r\\n']}, {'input': '4\\r\\n2 3 4 5\\r\\n3\\r\\n1 2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n6 12 13 20 48 53 74 92 96 97\\r\\n10\\r\\n1 21 32 36 47 54 69 75 95 97\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 9 10 14 15 17 19 22 24 26\\r\\n10\\r\\n2 11 17 19 21 22 24 25 27 28\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n24 53 56 126 354 432 442 740 795 856\\r\\n10\\r\\n273 438 494 619 689 711 894 947 954 958\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n3 4 6 7 8 10 14 16 19 20\\r\\n10\\r\\n3 4 5 7 8 10 15 16 18 20\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n1 6 8 14 15 17 25 27 34 39\\r\\n10\\r\\n1 8 16 17 19 22 32 39 44 50\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 21 22 23 25 32 35 36 38 39\\r\\n10\\r\\n3 7 8 9 18 21 23 24 36 38\\r\\n', 'output': ['4\\r\\n']}, {'input': '50\\r\\n5 8 13 16 19 20 21 22 24 27 28 29 30 32 33 34 35 43 45 48 50 51 54 55 58 59 60 61 62 65 70 71 72 76 78 79 80 81 83 84 85 87 89 91 92 94 97 98 99 100\\r\\n50\\r\\n2 3 5 6 7 10 15 16 17 20 23 28 29 30 31 34 36 37 40 42 45 46 48 54 55 56 58 59 61 62 69 70 71 72 75 76 78 82 84 85 86 87 88 89 90 91 92 97 99 100\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n3 5 6 8 9 11 13 19 21 23 24 32 34 35 42 50 51 52 56 58 59 69 70 72 73 75 76 77 78 80 83 88 90 95 96 100 101 102 108 109 113 119 124 135 138 141 142 143 145 150\\r\\n50\\r\\n5 8 10 11 18 19 23 30 35 43 51 53 55 58 63 68 69 71 77 78 79 82 83 86 88 89 91 92 93 94 96 102 103 105 109 110 113 114 116 123 124 126 127 132 133 135 136 137 142 149\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 16 24 25 27 33 36 40 51 60 62 65 71 72 75 77 85 87 91 93 98 102 103 106 117 118 120 121 122 123 125 131 134 136 143 148 155 157 160 161 164 166 170 178 184 187 188 192 194 197\\r\\n50\\r\\n5 9 17 23 27 34 40 44 47 59 62 70 81 82 87 88 89 90 98 101 102 110 113 114 115 116 119 122 124 128 130 137 138 140 144 150 152 155 159 164 166 169 171 175 185 186 187 189 190 193\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 22 23 31 32 35 48 63 76 79 88 97 101 102 103 104 106 113 114 115 116 126 136 138 145 152 155 156 162 170 172 173 179 180 182 203 208 210 212 222 226 229 231 232 235 237 245 246 247 248\\r\\n50\\r\\n2 5 6 16 28 44 45 46 54 55 56 63 72 80 87 93 94 96 97 100 101 103 132 135 140 160 164 165 167 168 173 180 182 185 186 192 194 198 199 202 203 211 213 216 217 227 232 233 236 245\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 19 33 35 38 41 51 54 69 70 71 73 76 80 84 94 102 104 105 106 107 113 121 128 131 168 180 181 187 191 195 201 205 207 210 216 220 238 249 251 263 271 272 275 281 283 285 286 291 294\\r\\n50\\r\\n2 3 5 20 21 35 38 40 43 48 49 52 55 64 73 77 82 97 109 113 119 121 125 132 137 139 145 146 149 180 182 197 203 229 234 241 244 251 264 271 274 281 284 285 287 291 292 293 294 298\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n2 4 5 16 18 19 22 23 25 26 34 44 48 54 67 79 80 84 92 110 116 133 138 154 163 171 174 202 205 218 228 229 234 245 247 249 250 263 270 272 274 275 277 283 289 310 312 334 339 342\\r\\n50\\r\\n1 5 17 18 25 37 46 47 48 59 67 75 80 83 84 107 115 122 137 141 159 162 175 180 184 204 221 224 240 243 247 248 249 258 259 260 264 266 269 271 274 293 294 306 329 330 334 335 342 350\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 9 11 21 28 39 42 56 60 63 81 88 91 95 105 110 117 125 149 165 174 176 185 189 193 196 205 231 233 268 278 279 281 286 289 292 298 303 305 306 334 342 350 353 361 371 372 375 376 378\\r\\n50\\r\\n6 17 20 43 45 52 58 59 82 83 88 102 111 118 121 131 145 173 190 191 200 216 224 225 232 235 243 256 260 271 290 291 321 322 323 329 331 333 334 341 343 348 351 354 356 360 366 379 387 388\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n17 239 443 467 661 1069 1823 2333 3767 4201\\r\\n20\\r\\n51 83 97 457 593 717 997 1329 1401 1459 1471 1983 2371 2539 3207 3251 3329 5469 6637 6999\\r\\n', 'output': ['8\\r\\n']}, {'input': '20\\r\\n179 359 401 467 521 601 919 941 1103 1279 1709 1913 1949 2003 2099 2143 2179 2213 2399 4673\\r\\n20\\r\\n151 181 191 251 421 967 1109 1181 1249 1447 1471 1553 1619 2327 2551 2791 3049 3727 6071 7813\\r\\n', 'output': ['3\\r\\n']}, {'input': '20\\r\\n79 113 151 709 809 983 1291 1399 1409 1429 2377 2659 2671 2897 3217 3511 3557 3797 3823 4363\\r\\n10\\r\\n19 101 659 797 1027 1963 2129 2971 3299 9217\\r\\n', 'output': ['3\\r\\n']}, {'input': '30\\r\\n19 47 109 179 307 331 389 401 461 509 547 569 617 853 883 1249 1361 1381 1511 1723 1741 1783 2459 2531 2621 3533 3821 4091 5557 6217\\r\\n20\\r\\n401 443 563 941 967 997 1535 1567 1655 1747 1787 1945 1999 2251 2305 2543 2735 4415 6245 7555\\r\\n', 'output': ['8\\r\\n']}, {'input': '30\\r\\n3 43 97 179 257 313 353 359 367 389 397 457 547 599 601 647 1013 1021 1063 1433 1481 1531 1669 3181 3373 3559 3769 4157 4549 5197\\r\\n50\\r\\n13 15 17 19 29 79 113 193 197 199 215 223 271 293 359 485 487 569 601 683 895 919 941 967 1283 1285 1289 1549 1565 1765 1795 1835 1907 1931 1945 1985 1993 2285 2731 2735 2995 3257 4049 4139 5105 5315 7165 7405 7655 8345\\r\\n', 'output': ['20\\r\\n']}, {'input': '50\\r\\n11 17 23 53 59 109 137 149 173 251 353 379 419 421 439 503 593 607 661 773 821 877 941 997 1061 1117 1153 1229 1289 1297 1321 1609 1747 2311 2389 2543 2693 3041 3083 3137 3181 3209 3331 3373 3617 3767 4201 4409 4931 6379\\r\\n50\\r\\n55 59 67 73 85 89 101 115 211 263 295 353 545 599 607 685 739 745 997 1031 1255 1493 1523 1667 1709 1895 1949 2161 2195 2965 3019 3035 3305 3361 3373 3673 3739 3865 3881 4231 4253 4385 4985 5305 5585 5765 6145 6445 8045 8735\\r\\n', 'output': ['23\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'output': ['24\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'output': ['24\\r\\n']}, {'input': '47\\r\\n66 262 357 457 513 530 538 540 592 691 707 979 1015 1242 1246 1667 1823 1886 1963 2133 2649 2679 2916 2949 3413 3523 3699 3958 4393 4922 5233 5306 5799 6036 6302 6629 7208 7282 7315 7822 7833 7927 8068 8150 8870 8962 9987\\r\\n39\\r\\n167 199 360 528 1515 1643 1986 1988 2154 2397 2856 3552 3656 3784 3980 4096 4104 4240 4320 4736 4951 5266 5656 5849 5850 6169 6517 6875 7244 7339 7689 7832 8120 8716 9503 9509 9933 9936 9968\\r\\n', 'output': ['12\\r\\n']}, {'input': '1\\r\\n94\\r\\n50\\r\\n423 446 485 1214 1468 1507 1853 1930 1999 2258 2271 2285 2425 2543 2715 2743 2992 3196 4074 4108 4448 4475 4652 5057 5250 5312 5356 5375 5731 5986 6298 6501 6521 7146 7255 7276 7332 7481 7998 8141 8413 8665 8908 9221 9336 9491 9504 9677 9693 9706\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n51 67 75 186 194 355 512 561 720 876 1077 1221 1503 1820 2153 2385 2568 2608 2937 2969 3271 3311 3481 4081 4093 4171 4255 4256 4829 5020 5192 5636 5817 6156 6712 6717 7153 7436 7608 7612 7866 7988 8264 8293 8867 9311 9879 9882 9889 9908\\r\\n1\\r\\n5394\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n26 367 495 585 675 789 855 1185 1312 1606 2037 2241 2587 2612 2628 2807 2873 2924 3774 4067 4376 4668 4902 5001 5082 5100 5104 5209 5345 5515 5661 5777 5902 5907 6155 6323 6675 6791 7503 8159 8207 8254 8740 8848 8855 8933 9069 9164 9171 9586\\r\\n5\\r\\n1557 6246 7545 8074 8284\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n25 58 91 110 2658\\r\\n50\\r\\n21 372 909 1172 1517 1554 1797 1802 1843 1977 2006 2025 2137 2225 2317 2507 2645 2754 2919 3024 3202 3212 3267 3852 4374 4487 4553 4668 4883 4911 4916 5016 5021 5068 5104 5162 5683 5856 6374 6871 7333 7531 8099 8135 8173 8215 8462 8776 9433 9790\\r\\n', 'output': ['4\\r\\n']}, {'input': '45\\r\\n37 48 56 59 69 70 79 83 85 86 99 114 131 134 135 145 156 250 1739 1947 2116 2315 2449 3104 3666 4008 4406 4723 4829 5345 5836 6262 6296 6870 7065 7110 7130 7510 7595 8092 8442 8574 9032 9091 9355\\r\\n50\\r\\n343 846 893 1110 1651 1837 2162 2331 2596 3012 3024 3131 3294 3394 3528 3717 3997 4125 4347 4410 4581 4977 5030 5070 5119 5229 5355 5413 5418 5474 5763 5940 6151 6161 6164 6237 6506 6519 6783 7182 7413 7534 8069 8253 8442 8505 9135 9308 9828 9902\\r\\n', 'output': ['17\\r\\n']}, {'input': '50\\r\\n17 20 22 28 36 38 46 47 48 50 52 57 58 62 63 69 70 74 75 78 79 81 82 86 87 90 93 95 103 202 292 442 1756 1769 2208 2311 2799 2957 3483 4280 4324 4932 5109 5204 6225 6354 6561 7136 8754 9670\\r\\n40\\r\\n68 214 957 1649 1940 2078 2134 2716 3492 3686 4462 4559 4656 4756 4850 5044 5490 5529 5592 5626 6014 6111 6693 6790 7178 7275 7566 7663 7702 7857 7954 8342 8511 8730 8957 9021 9215 9377 9445 9991\\r\\n', 'output': ['28\\r\\n']}, {'input': '39\\r\\n10 13 21 25 36 38 47 48 58 64 68 69 73 79 86 972 2012 2215 2267 2503 3717 3945 4197 4800 5266 6169 6612 6824 7023 7322 7582 7766 8381 8626 8879 9079 9088 9838 9968\\r\\n50\\r\\n432 877 970 1152 1202 1223 1261 1435 1454 1578 1843 1907 2003 2037 2183 2195 2215 2425 3065 3492 3615 3637 3686 3946 4189 4415 4559 4656 4665 4707 4886 4887 5626 5703 5955 6208 6521 6581 6596 6693 6985 7013 7081 7343 7663 8332 8342 8637 9207 9862\\r\\n', 'output': ['15\\r\\n']}, {'input': '50\\r\\n7 144 269 339 395 505 625 688 709 950 1102 1152 1350 1381 1641 1830 1977 1999 2093 2180 2718 3308 3574 4168 4232 4259 4393 4689 4982 5154 5476 5581 5635 5721 6159 6302 6741 7010 7152 7315 7417 7482 8116 8239 8640 9347 9395 9614 9661 9822\\r\\n20\\r\\n84 162 292 1728 1866 2088 3228 3470 4068 5318 5470 6060 6380 6929 7500 8256 8399 8467 8508 9691\\r\\n', 'output': ['8\\r\\n']}, {'input': '50\\r\\n159 880 1070 1139 1358 1608 1691 1841 2073 2171 2213 2597 2692 2759 2879 2931 3173 3217 3441 4201 4878 5106 5129 5253 5395 5647 5968 6019 6130 6276 6286 6330 6409 6728 7488 7713 7765 7828 7899 8064 8264 8457 8483 8685 8900 8946 8965 9133 9187 9638\\r\\n45\\r\\n57 159 1070 1139 1391 1608 1691 1841 2171 2213 2692 2759 2931 3173 3217 3441 4201 4878 5106 5129 5253 5647 5968 6130 6276 6286 6409 7488 7694 7713 7765 7828 7899 8003 8064 8081 8244 8264 8685 8900 8946 8965 9133 9638 9673\\r\\n', 'output': ['38\\r\\n']}, {'input': '3\\r\\n3 4 5\\r\\n3\\r\\n6 20 25\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n2 3 5 8\\r\\n4\\r\\n2 6 8 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 5 7 11\\r\\n4\\r\\n3 5 7 22\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n3\\r\\n20 30 50\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n4\\r\\n2 4 6 49\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n4 5\\r\\n3\\r\\n12 15 20\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n2 5 7\\r\\n3\\r\\n4 5 7\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n3 5 8\\r\\n3\\r\\n6 8 10\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 9 33\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 21 40\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n4 9 10\\r\\n3\\r\\n8 9 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n1 5 6 9 51\\r\\n5\\r\\n5 12 18 27 10000\\r\\n', 'output': ['1\\r\\n']}, {'input': '13\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\r\\n1\\r\\n14\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1e9 + 7;\nconst long long inf = 1e18;\nconst long long MOD = 998244353;\nconst long long maxn = 200002;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  ;\n  int n, m;\n  cin >> n;\n  int a[n], b[m];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  cin >> m;\n  for (int i = 0; i < m; i++) {\n    cin >> b[i];\n  }\n  map<int, int> ma, mb;\n  for (int i = 1; i <= n; i++) ma[a[i - 1]] = i;\n  for (int i = 1; i <= m; i++) mb[b[i - 1]] = i;\n  int ans = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = m; j >= 1; j--) {\n      if (ma[a[i - 1]] < mb[b[j - 1]]) {\n        ans = max(ans, j);\n      }\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"}
{"src_uid": "102667eaa3aee012fef70f4192464674", "id": 15, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 900, "testcases": "[{'input': '2\\r\\n4 5\\r\\n3\\r\\n12 13 15\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n1 2 3 4\\r\\n5\\r\\n10 11 12 13 14\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 7 11 13\\r\\n4\\r\\n51 119 187 221\\r\\n', 'output': ['4\\r\\n']}, {'input': '4\\r\\n2 3 4 5\\r\\n3\\r\\n1 2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n6 12 13 20 48 53 74 92 96 97\\r\\n10\\r\\n1 21 32 36 47 54 69 75 95 97\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 9 10 14 15 17 19 22 24 26\\r\\n10\\r\\n2 11 17 19 21 22 24 25 27 28\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n24 53 56 126 354 432 442 740 795 856\\r\\n10\\r\\n273 438 494 619 689 711 894 947 954 958\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n3 4 6 7 8 10 14 16 19 20\\r\\n10\\r\\n3 4 5 7 8 10 15 16 18 20\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n1 6 8 14 15 17 25 27 34 39\\r\\n10\\r\\n1 8 16 17 19 22 32 39 44 50\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 21 22 23 25 32 35 36 38 39\\r\\n10\\r\\n3 7 8 9 18 21 23 24 36 38\\r\\n', 'output': ['4\\r\\n']}, {'input': '50\\r\\n5 8 13 16 19 20 21 22 24 27 28 29 30 32 33 34 35 43 45 48 50 51 54 55 58 59 60 61 62 65 70 71 72 76 78 79 80 81 83 84 85 87 89 91 92 94 97 98 99 100\\r\\n50\\r\\n2 3 5 6 7 10 15 16 17 20 23 28 29 30 31 34 36 37 40 42 45 46 48 54 55 56 58 59 61 62 69 70 71 72 75 76 78 82 84 85 86 87 88 89 90 91 92 97 99 100\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n3 5 6 8 9 11 13 19 21 23 24 32 34 35 42 50 51 52 56 58 59 69 70 72 73 75 76 77 78 80 83 88 90 95 96 100 101 102 108 109 113 119 124 135 138 141 142 143 145 150\\r\\n50\\r\\n5 8 10 11 18 19 23 30 35 43 51 53 55 58 63 68 69 71 77 78 79 82 83 86 88 89 91 92 93 94 96 102 103 105 109 110 113 114 116 123 124 126 127 132 133 135 136 137 142 149\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 16 24 25 27 33 36 40 51 60 62 65 71 72 75 77 85 87 91 93 98 102 103 106 117 118 120 121 122 123 125 131 134 136 143 148 155 157 160 161 164 166 170 178 184 187 188 192 194 197\\r\\n50\\r\\n5 9 17 23 27 34 40 44 47 59 62 70 81 82 87 88 89 90 98 101 102 110 113 114 115 116 119 122 124 128 130 137 138 140 144 150 152 155 159 164 166 169 171 175 185 186 187 189 190 193\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 22 23 31 32 35 48 63 76 79 88 97 101 102 103 104 106 113 114 115 116 126 136 138 145 152 155 156 162 170 172 173 179 180 182 203 208 210 212 222 226 229 231 232 235 237 245 246 247 248\\r\\n50\\r\\n2 5 6 16 28 44 45 46 54 55 56 63 72 80 87 93 94 96 97 100 101 103 132 135 140 160 164 165 167 168 173 180 182 185 186 192 194 198 199 202 203 211 213 216 217 227 232 233 236 245\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 19 33 35 38 41 51 54 69 70 71 73 76 80 84 94 102 104 105 106 107 113 121 128 131 168 180 181 187 191 195 201 205 207 210 216 220 238 249 251 263 271 272 275 281 283 285 286 291 294\\r\\n50\\r\\n2 3 5 20 21 35 38 40 43 48 49 52 55 64 73 77 82 97 109 113 119 121 125 132 137 139 145 146 149 180 182 197 203 229 234 241 244 251 264 271 274 281 284 285 287 291 292 293 294 298\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n2 4 5 16 18 19 22 23 25 26 34 44 48 54 67 79 80 84 92 110 116 133 138 154 163 171 174 202 205 218 228 229 234 245 247 249 250 263 270 272 274 275 277 283 289 310 312 334 339 342\\r\\n50\\r\\n1 5 17 18 25 37 46 47 48 59 67 75 80 83 84 107 115 122 137 141 159 162 175 180 184 204 221 224 240 243 247 248 249 258 259 260 264 266 269 271 274 293 294 306 329 330 334 335 342 350\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 9 11 21 28 39 42 56 60 63 81 88 91 95 105 110 117 125 149 165 174 176 185 189 193 196 205 231 233 268 278 279 281 286 289 292 298 303 305 306 334 342 350 353 361 371 372 375 376 378\\r\\n50\\r\\n6 17 20 43 45 52 58 59 82 83 88 102 111 118 121 131 145 173 190 191 200 216 224 225 232 235 243 256 260 271 290 291 321 322 323 329 331 333 334 341 343 348 351 354 356 360 366 379 387 388\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n17 239 443 467 661 1069 1823 2333 3767 4201\\r\\n20\\r\\n51 83 97 457 593 717 997 1329 1401 1459 1471 1983 2371 2539 3207 3251 3329 5469 6637 6999\\r\\n', 'output': ['8\\r\\n']}, {'input': '20\\r\\n179 359 401 467 521 601 919 941 1103 1279 1709 1913 1949 2003 2099 2143 2179 2213 2399 4673\\r\\n20\\r\\n151 181 191 251 421 967 1109 1181 1249 1447 1471 1553 1619 2327 2551 2791 3049 3727 6071 7813\\r\\n', 'output': ['3\\r\\n']}, {'input': '20\\r\\n79 113 151 709 809 983 1291 1399 1409 1429 2377 2659 2671 2897 3217 3511 3557 3797 3823 4363\\r\\n10\\r\\n19 101 659 797 1027 1963 2129 2971 3299 9217\\r\\n', 'output': ['3\\r\\n']}, {'input': '30\\r\\n19 47 109 179 307 331 389 401 461 509 547 569 617 853 883 1249 1361 1381 1511 1723 1741 1783 2459 2531 2621 3533 3821 4091 5557 6217\\r\\n20\\r\\n401 443 563 941 967 997 1535 1567 1655 1747 1787 1945 1999 2251 2305 2543 2735 4415 6245 7555\\r\\n', 'output': ['8\\r\\n']}, {'input': '30\\r\\n3 43 97 179 257 313 353 359 367 389 397 457 547 599 601 647 1013 1021 1063 1433 1481 1531 1669 3181 3373 3559 3769 4157 4549 5197\\r\\n50\\r\\n13 15 17 19 29 79 113 193 197 199 215 223 271 293 359 485 487 569 601 683 895 919 941 967 1283 1285 1289 1549 1565 1765 1795 1835 1907 1931 1945 1985 1993 2285 2731 2735 2995 3257 4049 4139 5105 5315 7165 7405 7655 8345\\r\\n', 'output': ['20\\r\\n']}, {'input': '50\\r\\n11 17 23 53 59 109 137 149 173 251 353 379 419 421 439 503 593 607 661 773 821 877 941 997 1061 1117 1153 1229 1289 1297 1321 1609 1747 2311 2389 2543 2693 3041 3083 3137 3181 3209 3331 3373 3617 3767 4201 4409 4931 6379\\r\\n50\\r\\n55 59 67 73 85 89 101 115 211 263 295 353 545 599 607 685 739 745 997 1031 1255 1493 1523 1667 1709 1895 1949 2161 2195 2965 3019 3035 3305 3361 3373 3673 3739 3865 3881 4231 4253 4385 4985 5305 5585 5765 6145 6445 8045 8735\\r\\n', 'output': ['23\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'output': ['24\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'output': ['24\\r\\n']}, {'input': '47\\r\\n66 262 357 457 513 530 538 540 592 691 707 979 1015 1242 1246 1667 1823 1886 1963 2133 2649 2679 2916 2949 3413 3523 3699 3958 4393 4922 5233 5306 5799 6036 6302 6629 7208 7282 7315 7822 7833 7927 8068 8150 8870 8962 9987\\r\\n39\\r\\n167 199 360 528 1515 1643 1986 1988 2154 2397 2856 3552 3656 3784 3980 4096 4104 4240 4320 4736 4951 5266 5656 5849 5850 6169 6517 6875 7244 7339 7689 7832 8120 8716 9503 9509 9933 9936 9968\\r\\n', 'output': ['12\\r\\n']}, {'input': '1\\r\\n94\\r\\n50\\r\\n423 446 485 1214 1468 1507 1853 1930 1999 2258 2271 2285 2425 2543 2715 2743 2992 3196 4074 4108 4448 4475 4652 5057 5250 5312 5356 5375 5731 5986 6298 6501 6521 7146 7255 7276 7332 7481 7998 8141 8413 8665 8908 9221 9336 9491 9504 9677 9693 9706\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n51 67 75 186 194 355 512 561 720 876 1077 1221 1503 1820 2153 2385 2568 2608 2937 2969 3271 3311 3481 4081 4093 4171 4255 4256 4829 5020 5192 5636 5817 6156 6712 6717 7153 7436 7608 7612 7866 7988 8264 8293 8867 9311 9879 9882 9889 9908\\r\\n1\\r\\n5394\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n26 367 495 585 675 789 855 1185 1312 1606 2037 2241 2587 2612 2628 2807 2873 2924 3774 4067 4376 4668 4902 5001 5082 5100 5104 5209 5345 5515 5661 5777 5902 5907 6155 6323 6675 6791 7503 8159 8207 8254 8740 8848 8855 8933 9069 9164 9171 9586\\r\\n5\\r\\n1557 6246 7545 8074 8284\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n25 58 91 110 2658\\r\\n50\\r\\n21 372 909 1172 1517 1554 1797 1802 1843 1977 2006 2025 2137 2225 2317 2507 2645 2754 2919 3024 3202 3212 3267 3852 4374 4487 4553 4668 4883 4911 4916 5016 5021 5068 5104 5162 5683 5856 6374 6871 7333 7531 8099 8135 8173 8215 8462 8776 9433 9790\\r\\n', 'output': ['4\\r\\n']}, {'input': '45\\r\\n37 48 56 59 69 70 79 83 85 86 99 114 131 134 135 145 156 250 1739 1947 2116 2315 2449 3104 3666 4008 4406 4723 4829 5345 5836 6262 6296 6870 7065 7110 7130 7510 7595 8092 8442 8574 9032 9091 9355\\r\\n50\\r\\n343 846 893 1110 1651 1837 2162 2331 2596 3012 3024 3131 3294 3394 3528 3717 3997 4125 4347 4410 4581 4977 5030 5070 5119 5229 5355 5413 5418 5474 5763 5940 6151 6161 6164 6237 6506 6519 6783 7182 7413 7534 8069 8253 8442 8505 9135 9308 9828 9902\\r\\n', 'output': ['17\\r\\n']}, {'input': '50\\r\\n17 20 22 28 36 38 46 47 48 50 52 57 58 62 63 69 70 74 75 78 79 81 82 86 87 90 93 95 103 202 292 442 1756 1769 2208 2311 2799 2957 3483 4280 4324 4932 5109 5204 6225 6354 6561 7136 8754 9670\\r\\n40\\r\\n68 214 957 1649 1940 2078 2134 2716 3492 3686 4462 4559 4656 4756 4850 5044 5490 5529 5592 5626 6014 6111 6693 6790 7178 7275 7566 7663 7702 7857 7954 8342 8511 8730 8957 9021 9215 9377 9445 9991\\r\\n', 'output': ['28\\r\\n']}, {'input': '39\\r\\n10 13 21 25 36 38 47 48 58 64 68 69 73 79 86 972 2012 2215 2267 2503 3717 3945 4197 4800 5266 6169 6612 6824 7023 7322 7582 7766 8381 8626 8879 9079 9088 9838 9968\\r\\n50\\r\\n432 877 970 1152 1202 1223 1261 1435 1454 1578 1843 1907 2003 2037 2183 2195 2215 2425 3065 3492 3615 3637 3686 3946 4189 4415 4559 4656 4665 4707 4886 4887 5626 5703 5955 6208 6521 6581 6596 6693 6985 7013 7081 7343 7663 8332 8342 8637 9207 9862\\r\\n', 'output': ['15\\r\\n']}, {'input': '50\\r\\n7 144 269 339 395 505 625 688 709 950 1102 1152 1350 1381 1641 1830 1977 1999 2093 2180 2718 3308 3574 4168 4232 4259 4393 4689 4982 5154 5476 5581 5635 5721 6159 6302 6741 7010 7152 7315 7417 7482 8116 8239 8640 9347 9395 9614 9661 9822\\r\\n20\\r\\n84 162 292 1728 1866 2088 3228 3470 4068 5318 5470 6060 6380 6929 7500 8256 8399 8467 8508 9691\\r\\n', 'output': ['8\\r\\n']}, {'input': '50\\r\\n159 880 1070 1139 1358 1608 1691 1841 2073 2171 2213 2597 2692 2759 2879 2931 3173 3217 3441 4201 4878 5106 5129 5253 5395 5647 5968 6019 6130 6276 6286 6330 6409 6728 7488 7713 7765 7828 7899 8064 8264 8457 8483 8685 8900 8946 8965 9133 9187 9638\\r\\n45\\r\\n57 159 1070 1139 1391 1608 1691 1841 2171 2213 2692 2759 2931 3173 3217 3441 4201 4878 5106 5129 5253 5647 5968 6130 6276 6286 6409 7488 7694 7713 7765 7828 7899 8003 8064 8081 8244 8264 8685 8900 8946 8965 9133 9638 9673\\r\\n', 'output': ['38\\r\\n']}, {'input': '3\\r\\n3 4 5\\r\\n3\\r\\n6 20 25\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n2 3 5 8\\r\\n4\\r\\n2 6 8 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 5 7 11\\r\\n4\\r\\n3 5 7 22\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n3\\r\\n20 30 50\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n4\\r\\n2 4 6 49\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n4 5\\r\\n3\\r\\n12 15 20\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n2 5 7\\r\\n3\\r\\n4 5 7\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n3 5 8\\r\\n3\\r\\n6 8 10\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 9 33\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 21 40\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n4 9 10\\r\\n3\\r\\n8 9 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n1 5 6 9 51\\r\\n5\\r\\n5 12 18 27 10000\\r\\n', 'output': ['1\\r\\n']}, {'input': '13\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\r\\n1\\r\\n14\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m;\n  cin >> n;\n  vector<int> a(n), b(n);\n  for (int i = 0; i < n; i++) cin >> a[i];\n  cin >> m;\n  for (int i = 0; i < m; i++) cin >> b[i];\n  int ans = 0;\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++)\n      if ((a[i] * b[j] % (a[i] + b[j]) == 0) &&\n          (a[i] * b[j] % (a[i] + b[j])) > 0)\n        ans++;\n  cout << ans << endl;\n}\n"}
{"src_uid": "102667eaa3aee012fef70f4192464674", "id": 15, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 900, "testcases": "[{'input': '2\\r\\n4 5\\r\\n3\\r\\n12 13 15\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n1 2 3 4\\r\\n5\\r\\n10 11 12 13 14\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 7 11 13\\r\\n4\\r\\n51 119 187 221\\r\\n', 'output': ['4\\r\\n']}, {'input': '4\\r\\n2 3 4 5\\r\\n3\\r\\n1 2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n6 12 13 20 48 53 74 92 96 97\\r\\n10\\r\\n1 21 32 36 47 54 69 75 95 97\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 9 10 14 15 17 19 22 24 26\\r\\n10\\r\\n2 11 17 19 21 22 24 25 27 28\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n24 53 56 126 354 432 442 740 795 856\\r\\n10\\r\\n273 438 494 619 689 711 894 947 954 958\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n3 4 6 7 8 10 14 16 19 20\\r\\n10\\r\\n3 4 5 7 8 10 15 16 18 20\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n1 6 8 14 15 17 25 27 34 39\\r\\n10\\r\\n1 8 16 17 19 22 32 39 44 50\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 21 22 23 25 32 35 36 38 39\\r\\n10\\r\\n3 7 8 9 18 21 23 24 36 38\\r\\n', 'output': ['4\\r\\n']}, {'input': '50\\r\\n5 8 13 16 19 20 21 22 24 27 28 29 30 32 33 34 35 43 45 48 50 51 54 55 58 59 60 61 62 65 70 71 72 76 78 79 80 81 83 84 85 87 89 91 92 94 97 98 99 100\\r\\n50\\r\\n2 3 5 6 7 10 15 16 17 20 23 28 29 30 31 34 36 37 40 42 45 46 48 54 55 56 58 59 61 62 69 70 71 72 75 76 78 82 84 85 86 87 88 89 90 91 92 97 99 100\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n3 5 6 8 9 11 13 19 21 23 24 32 34 35 42 50 51 52 56 58 59 69 70 72 73 75 76 77 78 80 83 88 90 95 96 100 101 102 108 109 113 119 124 135 138 141 142 143 145 150\\r\\n50\\r\\n5 8 10 11 18 19 23 30 35 43 51 53 55 58 63 68 69 71 77 78 79 82 83 86 88 89 91 92 93 94 96 102 103 105 109 110 113 114 116 123 124 126 127 132 133 135 136 137 142 149\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 16 24 25 27 33 36 40 51 60 62 65 71 72 75 77 85 87 91 93 98 102 103 106 117 118 120 121 122 123 125 131 134 136 143 148 155 157 160 161 164 166 170 178 184 187 188 192 194 197\\r\\n50\\r\\n5 9 17 23 27 34 40 44 47 59 62 70 81 82 87 88 89 90 98 101 102 110 113 114 115 116 119 122 124 128 130 137 138 140 144 150 152 155 159 164 166 169 171 175 185 186 187 189 190 193\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 22 23 31 32 35 48 63 76 79 88 97 101 102 103 104 106 113 114 115 116 126 136 138 145 152 155 156 162 170 172 173 179 180 182 203 208 210 212 222 226 229 231 232 235 237 245 246 247 248\\r\\n50\\r\\n2 5 6 16 28 44 45 46 54 55 56 63 72 80 87 93 94 96 97 100 101 103 132 135 140 160 164 165 167 168 173 180 182 185 186 192 194 198 199 202 203 211 213 216 217 227 232 233 236 245\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 19 33 35 38 41 51 54 69 70 71 73 76 80 84 94 102 104 105 106 107 113 121 128 131 168 180 181 187 191 195 201 205 207 210 216 220 238 249 251 263 271 272 275 281 283 285 286 291 294\\r\\n50\\r\\n2 3 5 20 21 35 38 40 43 48 49 52 55 64 73 77 82 97 109 113 119 121 125 132 137 139 145 146 149 180 182 197 203 229 234 241 244 251 264 271 274 281 284 285 287 291 292 293 294 298\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n2 4 5 16 18 19 22 23 25 26 34 44 48 54 67 79 80 84 92 110 116 133 138 154 163 171 174 202 205 218 228 229 234 245 247 249 250 263 270 272 274 275 277 283 289 310 312 334 339 342\\r\\n50\\r\\n1 5 17 18 25 37 46 47 48 59 67 75 80 83 84 107 115 122 137 141 159 162 175 180 184 204 221 224 240 243 247 248 249 258 259 260 264 266 269 271 274 293 294 306 329 330 334 335 342 350\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 9 11 21 28 39 42 56 60 63 81 88 91 95 105 110 117 125 149 165 174 176 185 189 193 196 205 231 233 268 278 279 281 286 289 292 298 303 305 306 334 342 350 353 361 371 372 375 376 378\\r\\n50\\r\\n6 17 20 43 45 52 58 59 82 83 88 102 111 118 121 131 145 173 190 191 200 216 224 225 232 235 243 256 260 271 290 291 321 322 323 329 331 333 334 341 343 348 351 354 356 360 366 379 387 388\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n17 239 443 467 661 1069 1823 2333 3767 4201\\r\\n20\\r\\n51 83 97 457 593 717 997 1329 1401 1459 1471 1983 2371 2539 3207 3251 3329 5469 6637 6999\\r\\n', 'output': ['8\\r\\n']}, {'input': '20\\r\\n179 359 401 467 521 601 919 941 1103 1279 1709 1913 1949 2003 2099 2143 2179 2213 2399 4673\\r\\n20\\r\\n151 181 191 251 421 967 1109 1181 1249 1447 1471 1553 1619 2327 2551 2791 3049 3727 6071 7813\\r\\n', 'output': ['3\\r\\n']}, {'input': '20\\r\\n79 113 151 709 809 983 1291 1399 1409 1429 2377 2659 2671 2897 3217 3511 3557 3797 3823 4363\\r\\n10\\r\\n19 101 659 797 1027 1963 2129 2971 3299 9217\\r\\n', 'output': ['3\\r\\n']}, {'input': '30\\r\\n19 47 109 179 307 331 389 401 461 509 547 569 617 853 883 1249 1361 1381 1511 1723 1741 1783 2459 2531 2621 3533 3821 4091 5557 6217\\r\\n20\\r\\n401 443 563 941 967 997 1535 1567 1655 1747 1787 1945 1999 2251 2305 2543 2735 4415 6245 7555\\r\\n', 'output': ['8\\r\\n']}, {'input': '30\\r\\n3 43 97 179 257 313 353 359 367 389 397 457 547 599 601 647 1013 1021 1063 1433 1481 1531 1669 3181 3373 3559 3769 4157 4549 5197\\r\\n50\\r\\n13 15 17 19 29 79 113 193 197 199 215 223 271 293 359 485 487 569 601 683 895 919 941 967 1283 1285 1289 1549 1565 1765 1795 1835 1907 1931 1945 1985 1993 2285 2731 2735 2995 3257 4049 4139 5105 5315 7165 7405 7655 8345\\r\\n', 'output': ['20\\r\\n']}, {'input': '50\\r\\n11 17 23 53 59 109 137 149 173 251 353 379 419 421 439 503 593 607 661 773 821 877 941 997 1061 1117 1153 1229 1289 1297 1321 1609 1747 2311 2389 2543 2693 3041 3083 3137 3181 3209 3331 3373 3617 3767 4201 4409 4931 6379\\r\\n50\\r\\n55 59 67 73 85 89 101 115 211 263 295 353 545 599 607 685 739 745 997 1031 1255 1493 1523 1667 1709 1895 1949 2161 2195 2965 3019 3035 3305 3361 3373 3673 3739 3865 3881 4231 4253 4385 4985 5305 5585 5765 6145 6445 8045 8735\\r\\n', 'output': ['23\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'output': ['24\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'output': ['24\\r\\n']}, {'input': '47\\r\\n66 262 357 457 513 530 538 540 592 691 707 979 1015 1242 1246 1667 1823 1886 1963 2133 2649 2679 2916 2949 3413 3523 3699 3958 4393 4922 5233 5306 5799 6036 6302 6629 7208 7282 7315 7822 7833 7927 8068 8150 8870 8962 9987\\r\\n39\\r\\n167 199 360 528 1515 1643 1986 1988 2154 2397 2856 3552 3656 3784 3980 4096 4104 4240 4320 4736 4951 5266 5656 5849 5850 6169 6517 6875 7244 7339 7689 7832 8120 8716 9503 9509 9933 9936 9968\\r\\n', 'output': ['12\\r\\n']}, {'input': '1\\r\\n94\\r\\n50\\r\\n423 446 485 1214 1468 1507 1853 1930 1999 2258 2271 2285 2425 2543 2715 2743 2992 3196 4074 4108 4448 4475 4652 5057 5250 5312 5356 5375 5731 5986 6298 6501 6521 7146 7255 7276 7332 7481 7998 8141 8413 8665 8908 9221 9336 9491 9504 9677 9693 9706\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n51 67 75 186 194 355 512 561 720 876 1077 1221 1503 1820 2153 2385 2568 2608 2937 2969 3271 3311 3481 4081 4093 4171 4255 4256 4829 5020 5192 5636 5817 6156 6712 6717 7153 7436 7608 7612 7866 7988 8264 8293 8867 9311 9879 9882 9889 9908\\r\\n1\\r\\n5394\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n26 367 495 585 675 789 855 1185 1312 1606 2037 2241 2587 2612 2628 2807 2873 2924 3774 4067 4376 4668 4902 5001 5082 5100 5104 5209 5345 5515 5661 5777 5902 5907 6155 6323 6675 6791 7503 8159 8207 8254 8740 8848 8855 8933 9069 9164 9171 9586\\r\\n5\\r\\n1557 6246 7545 8074 8284\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n25 58 91 110 2658\\r\\n50\\r\\n21 372 909 1172 1517 1554 1797 1802 1843 1977 2006 2025 2137 2225 2317 2507 2645 2754 2919 3024 3202 3212 3267 3852 4374 4487 4553 4668 4883 4911 4916 5016 5021 5068 5104 5162 5683 5856 6374 6871 7333 7531 8099 8135 8173 8215 8462 8776 9433 9790\\r\\n', 'output': ['4\\r\\n']}, {'input': '45\\r\\n37 48 56 59 69 70 79 83 85 86 99 114 131 134 135 145 156 250 1739 1947 2116 2315 2449 3104 3666 4008 4406 4723 4829 5345 5836 6262 6296 6870 7065 7110 7130 7510 7595 8092 8442 8574 9032 9091 9355\\r\\n50\\r\\n343 846 893 1110 1651 1837 2162 2331 2596 3012 3024 3131 3294 3394 3528 3717 3997 4125 4347 4410 4581 4977 5030 5070 5119 5229 5355 5413 5418 5474 5763 5940 6151 6161 6164 6237 6506 6519 6783 7182 7413 7534 8069 8253 8442 8505 9135 9308 9828 9902\\r\\n', 'output': ['17\\r\\n']}, {'input': '50\\r\\n17 20 22 28 36 38 46 47 48 50 52 57 58 62 63 69 70 74 75 78 79 81 82 86 87 90 93 95 103 202 292 442 1756 1769 2208 2311 2799 2957 3483 4280 4324 4932 5109 5204 6225 6354 6561 7136 8754 9670\\r\\n40\\r\\n68 214 957 1649 1940 2078 2134 2716 3492 3686 4462 4559 4656 4756 4850 5044 5490 5529 5592 5626 6014 6111 6693 6790 7178 7275 7566 7663 7702 7857 7954 8342 8511 8730 8957 9021 9215 9377 9445 9991\\r\\n', 'output': ['28\\r\\n']}, {'input': '39\\r\\n10 13 21 25 36 38 47 48 58 64 68 69 73 79 86 972 2012 2215 2267 2503 3717 3945 4197 4800 5266 6169 6612 6824 7023 7322 7582 7766 8381 8626 8879 9079 9088 9838 9968\\r\\n50\\r\\n432 877 970 1152 1202 1223 1261 1435 1454 1578 1843 1907 2003 2037 2183 2195 2215 2425 3065 3492 3615 3637 3686 3946 4189 4415 4559 4656 4665 4707 4886 4887 5626 5703 5955 6208 6521 6581 6596 6693 6985 7013 7081 7343 7663 8332 8342 8637 9207 9862\\r\\n', 'output': ['15\\r\\n']}, {'input': '50\\r\\n7 144 269 339 395 505 625 688 709 950 1102 1152 1350 1381 1641 1830 1977 1999 2093 2180 2718 3308 3574 4168 4232 4259 4393 4689 4982 5154 5476 5581 5635 5721 6159 6302 6741 7010 7152 7315 7417 7482 8116 8239 8640 9347 9395 9614 9661 9822\\r\\n20\\r\\n84 162 292 1728 1866 2088 3228 3470 4068 5318 5470 6060 6380 6929 7500 8256 8399 8467 8508 9691\\r\\n', 'output': ['8\\r\\n']}, {'input': '50\\r\\n159 880 1070 1139 1358 1608 1691 1841 2073 2171 2213 2597 2692 2759 2879 2931 3173 3217 3441 4201 4878 5106 5129 5253 5395 5647 5968 6019 6130 6276 6286 6330 6409 6728 7488 7713 7765 7828 7899 8064 8264 8457 8483 8685 8900 8946 8965 9133 9187 9638\\r\\n45\\r\\n57 159 1070 1139 1391 1608 1691 1841 2171 2213 2692 2759 2931 3173 3217 3441 4201 4878 5106 5129 5253 5647 5968 6130 6276 6286 6409 7488 7694 7713 7765 7828 7899 8003 8064 8081 8244 8264 8685 8900 8946 8965 9133 9638 9673\\r\\n', 'output': ['38\\r\\n']}, {'input': '3\\r\\n3 4 5\\r\\n3\\r\\n6 20 25\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n2 3 5 8\\r\\n4\\r\\n2 6 8 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 5 7 11\\r\\n4\\r\\n3 5 7 22\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n3\\r\\n20 30 50\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n4\\r\\n2 4 6 49\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n4 5\\r\\n3\\r\\n12 15 20\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n2 5 7\\r\\n3\\r\\n4 5 7\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n3 5 8\\r\\n3\\r\\n6 8 10\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 9 33\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 21 40\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n4 9 10\\r\\n3\\r\\n8 9 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n1 5 6 9 51\\r\\n5\\r\\n5 12 18 27 10000\\r\\n', 'output': ['1\\r\\n']}, {'input': '13\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\r\\n1\\r\\n14\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a[55], b[55];\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n, m, i, j, k, cnt = 0;\n  cin >> n;\n  for (i = 1; i <= n; i++) cin >> a[i];\n  cin >> m;\n  for (i = 1; i <= m; i++) cin >> b[i];\n  int ma = 0;\n  for (i = 1; i <= n; i++) {\n    for (j = 1; j <= m; j++) {\n      if (a[i] % b[j] == 0 && (a[i] / b[j]) > ma) ma = a[i] / b[j];\n    }\n  }\n  for (i = 1; i <= n; i++) {\n    for (j = 1; j <= m; j++) {\n      if (a[i] % b[j] == 0 && a[i] / b[j] == ma) cnt++;\n    }\n  }\n  cout << cnt << '\\n';\n}\n"}
{"src_uid": "102667eaa3aee012fef70f4192464674", "id": 15, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 900, "testcases": "[{'input': '2\\r\\n4 5\\r\\n3\\r\\n12 13 15\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n1 2 3 4\\r\\n5\\r\\n10 11 12 13 14\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 7 11 13\\r\\n4\\r\\n51 119 187 221\\r\\n', 'output': ['4\\r\\n']}, {'input': '4\\r\\n2 3 4 5\\r\\n3\\r\\n1 2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n6 12 13 20 48 53 74 92 96 97\\r\\n10\\r\\n1 21 32 36 47 54 69 75 95 97\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 9 10 14 15 17 19 22 24 26\\r\\n10\\r\\n2 11 17 19 21 22 24 25 27 28\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n24 53 56 126 354 432 442 740 795 856\\r\\n10\\r\\n273 438 494 619 689 711 894 947 954 958\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n3 4 6 7 8 10 14 16 19 20\\r\\n10\\r\\n3 4 5 7 8 10 15 16 18 20\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n1 6 8 14 15 17 25 27 34 39\\r\\n10\\r\\n1 8 16 17 19 22 32 39 44 50\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 21 22 23 25 32 35 36 38 39\\r\\n10\\r\\n3 7 8 9 18 21 23 24 36 38\\r\\n', 'output': ['4\\r\\n']}, {'input': '50\\r\\n5 8 13 16 19 20 21 22 24 27 28 29 30 32 33 34 35 43 45 48 50 51 54 55 58 59 60 61 62 65 70 71 72 76 78 79 80 81 83 84 85 87 89 91 92 94 97 98 99 100\\r\\n50\\r\\n2 3 5 6 7 10 15 16 17 20 23 28 29 30 31 34 36 37 40 42 45 46 48 54 55 56 58 59 61 62 69 70 71 72 75 76 78 82 84 85 86 87 88 89 90 91 92 97 99 100\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n3 5 6 8 9 11 13 19 21 23 24 32 34 35 42 50 51 52 56 58 59 69 70 72 73 75 76 77 78 80 83 88 90 95 96 100 101 102 108 109 113 119 124 135 138 141 142 143 145 150\\r\\n50\\r\\n5 8 10 11 18 19 23 30 35 43 51 53 55 58 63 68 69 71 77 78 79 82 83 86 88 89 91 92 93 94 96 102 103 105 109 110 113 114 116 123 124 126 127 132 133 135 136 137 142 149\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 16 24 25 27 33 36 40 51 60 62 65 71 72 75 77 85 87 91 93 98 102 103 106 117 118 120 121 122 123 125 131 134 136 143 148 155 157 160 161 164 166 170 178 184 187 188 192 194 197\\r\\n50\\r\\n5 9 17 23 27 34 40 44 47 59 62 70 81 82 87 88 89 90 98 101 102 110 113 114 115 116 119 122 124 128 130 137 138 140 144 150 152 155 159 164 166 169 171 175 185 186 187 189 190 193\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 22 23 31 32 35 48 63 76 79 88 97 101 102 103 104 106 113 114 115 116 126 136 138 145 152 155 156 162 170 172 173 179 180 182 203 208 210 212 222 226 229 231 232 235 237 245 246 247 248\\r\\n50\\r\\n2 5 6 16 28 44 45 46 54 55 56 63 72 80 87 93 94 96 97 100 101 103 132 135 140 160 164 165 167 168 173 180 182 185 186 192 194 198 199 202 203 211 213 216 217 227 232 233 236 245\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 19 33 35 38 41 51 54 69 70 71 73 76 80 84 94 102 104 105 106 107 113 121 128 131 168 180 181 187 191 195 201 205 207 210 216 220 238 249 251 263 271 272 275 281 283 285 286 291 294\\r\\n50\\r\\n2 3 5 20 21 35 38 40 43 48 49 52 55 64 73 77 82 97 109 113 119 121 125 132 137 139 145 146 149 180 182 197 203 229 234 241 244 251 264 271 274 281 284 285 287 291 292 293 294 298\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n2 4 5 16 18 19 22 23 25 26 34 44 48 54 67 79 80 84 92 110 116 133 138 154 163 171 174 202 205 218 228 229 234 245 247 249 250 263 270 272 274 275 277 283 289 310 312 334 339 342\\r\\n50\\r\\n1 5 17 18 25 37 46 47 48 59 67 75 80 83 84 107 115 122 137 141 159 162 175 180 184 204 221 224 240 243 247 248 249 258 259 260 264 266 269 271 274 293 294 306 329 330 334 335 342 350\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 9 11 21 28 39 42 56 60 63 81 88 91 95 105 110 117 125 149 165 174 176 185 189 193 196 205 231 233 268 278 279 281 286 289 292 298 303 305 306 334 342 350 353 361 371 372 375 376 378\\r\\n50\\r\\n6 17 20 43 45 52 58 59 82 83 88 102 111 118 121 131 145 173 190 191 200 216 224 225 232 235 243 256 260 271 290 291 321 322 323 329 331 333 334 341 343 348 351 354 356 360 366 379 387 388\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n17 239 443 467 661 1069 1823 2333 3767 4201\\r\\n20\\r\\n51 83 97 457 593 717 997 1329 1401 1459 1471 1983 2371 2539 3207 3251 3329 5469 6637 6999\\r\\n', 'output': ['8\\r\\n']}, {'input': '20\\r\\n179 359 401 467 521 601 919 941 1103 1279 1709 1913 1949 2003 2099 2143 2179 2213 2399 4673\\r\\n20\\r\\n151 181 191 251 421 967 1109 1181 1249 1447 1471 1553 1619 2327 2551 2791 3049 3727 6071 7813\\r\\n', 'output': ['3\\r\\n']}, {'input': '20\\r\\n79 113 151 709 809 983 1291 1399 1409 1429 2377 2659 2671 2897 3217 3511 3557 3797 3823 4363\\r\\n10\\r\\n19 101 659 797 1027 1963 2129 2971 3299 9217\\r\\n', 'output': ['3\\r\\n']}, {'input': '30\\r\\n19 47 109 179 307 331 389 401 461 509 547 569 617 853 883 1249 1361 1381 1511 1723 1741 1783 2459 2531 2621 3533 3821 4091 5557 6217\\r\\n20\\r\\n401 443 563 941 967 997 1535 1567 1655 1747 1787 1945 1999 2251 2305 2543 2735 4415 6245 7555\\r\\n', 'output': ['8\\r\\n']}, {'input': '30\\r\\n3 43 97 179 257 313 353 359 367 389 397 457 547 599 601 647 1013 1021 1063 1433 1481 1531 1669 3181 3373 3559 3769 4157 4549 5197\\r\\n50\\r\\n13 15 17 19 29 79 113 193 197 199 215 223 271 293 359 485 487 569 601 683 895 919 941 967 1283 1285 1289 1549 1565 1765 1795 1835 1907 1931 1945 1985 1993 2285 2731 2735 2995 3257 4049 4139 5105 5315 7165 7405 7655 8345\\r\\n', 'output': ['20\\r\\n']}, {'input': '50\\r\\n11 17 23 53 59 109 137 149 173 251 353 379 419 421 439 503 593 607 661 773 821 877 941 997 1061 1117 1153 1229 1289 1297 1321 1609 1747 2311 2389 2543 2693 3041 3083 3137 3181 3209 3331 3373 3617 3767 4201 4409 4931 6379\\r\\n50\\r\\n55 59 67 73 85 89 101 115 211 263 295 353 545 599 607 685 739 745 997 1031 1255 1493 1523 1667 1709 1895 1949 2161 2195 2965 3019 3035 3305 3361 3373 3673 3739 3865 3881 4231 4253 4385 4985 5305 5585 5765 6145 6445 8045 8735\\r\\n', 'output': ['23\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'output': ['24\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'output': ['24\\r\\n']}, {'input': '47\\r\\n66 262 357 457 513 530 538 540 592 691 707 979 1015 1242 1246 1667 1823 1886 1963 2133 2649 2679 2916 2949 3413 3523 3699 3958 4393 4922 5233 5306 5799 6036 6302 6629 7208 7282 7315 7822 7833 7927 8068 8150 8870 8962 9987\\r\\n39\\r\\n167 199 360 528 1515 1643 1986 1988 2154 2397 2856 3552 3656 3784 3980 4096 4104 4240 4320 4736 4951 5266 5656 5849 5850 6169 6517 6875 7244 7339 7689 7832 8120 8716 9503 9509 9933 9936 9968\\r\\n', 'output': ['12\\r\\n']}, {'input': '1\\r\\n94\\r\\n50\\r\\n423 446 485 1214 1468 1507 1853 1930 1999 2258 2271 2285 2425 2543 2715 2743 2992 3196 4074 4108 4448 4475 4652 5057 5250 5312 5356 5375 5731 5986 6298 6501 6521 7146 7255 7276 7332 7481 7998 8141 8413 8665 8908 9221 9336 9491 9504 9677 9693 9706\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n51 67 75 186 194 355 512 561 720 876 1077 1221 1503 1820 2153 2385 2568 2608 2937 2969 3271 3311 3481 4081 4093 4171 4255 4256 4829 5020 5192 5636 5817 6156 6712 6717 7153 7436 7608 7612 7866 7988 8264 8293 8867 9311 9879 9882 9889 9908\\r\\n1\\r\\n5394\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n26 367 495 585 675 789 855 1185 1312 1606 2037 2241 2587 2612 2628 2807 2873 2924 3774 4067 4376 4668 4902 5001 5082 5100 5104 5209 5345 5515 5661 5777 5902 5907 6155 6323 6675 6791 7503 8159 8207 8254 8740 8848 8855 8933 9069 9164 9171 9586\\r\\n5\\r\\n1557 6246 7545 8074 8284\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n25 58 91 110 2658\\r\\n50\\r\\n21 372 909 1172 1517 1554 1797 1802 1843 1977 2006 2025 2137 2225 2317 2507 2645 2754 2919 3024 3202 3212 3267 3852 4374 4487 4553 4668 4883 4911 4916 5016 5021 5068 5104 5162 5683 5856 6374 6871 7333 7531 8099 8135 8173 8215 8462 8776 9433 9790\\r\\n', 'output': ['4\\r\\n']}, {'input': '45\\r\\n37 48 56 59 69 70 79 83 85 86 99 114 131 134 135 145 156 250 1739 1947 2116 2315 2449 3104 3666 4008 4406 4723 4829 5345 5836 6262 6296 6870 7065 7110 7130 7510 7595 8092 8442 8574 9032 9091 9355\\r\\n50\\r\\n343 846 893 1110 1651 1837 2162 2331 2596 3012 3024 3131 3294 3394 3528 3717 3997 4125 4347 4410 4581 4977 5030 5070 5119 5229 5355 5413 5418 5474 5763 5940 6151 6161 6164 6237 6506 6519 6783 7182 7413 7534 8069 8253 8442 8505 9135 9308 9828 9902\\r\\n', 'output': ['17\\r\\n']}, {'input': '50\\r\\n17 20 22 28 36 38 46 47 48 50 52 57 58 62 63 69 70 74 75 78 79 81 82 86 87 90 93 95 103 202 292 442 1756 1769 2208 2311 2799 2957 3483 4280 4324 4932 5109 5204 6225 6354 6561 7136 8754 9670\\r\\n40\\r\\n68 214 957 1649 1940 2078 2134 2716 3492 3686 4462 4559 4656 4756 4850 5044 5490 5529 5592 5626 6014 6111 6693 6790 7178 7275 7566 7663 7702 7857 7954 8342 8511 8730 8957 9021 9215 9377 9445 9991\\r\\n', 'output': ['28\\r\\n']}, {'input': '39\\r\\n10 13 21 25 36 38 47 48 58 64 68 69 73 79 86 972 2012 2215 2267 2503 3717 3945 4197 4800 5266 6169 6612 6824 7023 7322 7582 7766 8381 8626 8879 9079 9088 9838 9968\\r\\n50\\r\\n432 877 970 1152 1202 1223 1261 1435 1454 1578 1843 1907 2003 2037 2183 2195 2215 2425 3065 3492 3615 3637 3686 3946 4189 4415 4559 4656 4665 4707 4886 4887 5626 5703 5955 6208 6521 6581 6596 6693 6985 7013 7081 7343 7663 8332 8342 8637 9207 9862\\r\\n', 'output': ['15\\r\\n']}, {'input': '50\\r\\n7 144 269 339 395 505 625 688 709 950 1102 1152 1350 1381 1641 1830 1977 1999 2093 2180 2718 3308 3574 4168 4232 4259 4393 4689 4982 5154 5476 5581 5635 5721 6159 6302 6741 7010 7152 7315 7417 7482 8116 8239 8640 9347 9395 9614 9661 9822\\r\\n20\\r\\n84 162 292 1728 1866 2088 3228 3470 4068 5318 5470 6060 6380 6929 7500 8256 8399 8467 8508 9691\\r\\n', 'output': ['8\\r\\n']}, {'input': '50\\r\\n159 880 1070 1139 1358 1608 1691 1841 2073 2171 2213 2597 2692 2759 2879 2931 3173 3217 3441 4201 4878 5106 5129 5253 5395 5647 5968 6019 6130 6276 6286 6330 6409 6728 7488 7713 7765 7828 7899 8064 8264 8457 8483 8685 8900 8946 8965 9133 9187 9638\\r\\n45\\r\\n57 159 1070 1139 1391 1608 1691 1841 2171 2213 2692 2759 2931 3173 3217 3441 4201 4878 5106 5129 5253 5647 5968 6130 6276 6286 6409 7488 7694 7713 7765 7828 7899 8003 8064 8081 8244 8264 8685 8900 8946 8965 9133 9638 9673\\r\\n', 'output': ['38\\r\\n']}, {'input': '3\\r\\n3 4 5\\r\\n3\\r\\n6 20 25\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n2 3 5 8\\r\\n4\\r\\n2 6 8 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 5 7 11\\r\\n4\\r\\n3 5 7 22\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n3\\r\\n20 30 50\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n4\\r\\n2 4 6 49\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n4 5\\r\\n3\\r\\n12 15 20\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n2 5 7\\r\\n3\\r\\n4 5 7\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n3 5 8\\r\\n3\\r\\n6 8 10\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 9 33\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 21 40\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n4 9 10\\r\\n3\\r\\n8 9 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n1 5 6 9 51\\r\\n5\\r\\n5 12 18 27 10000\\r\\n', 'output': ['1\\r\\n']}, {'input': '13\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\r\\n1\\r\\n14\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m;\nint a[55], b[55];\nbool check(int x) {\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < m; j++)\n      if (b[j] % a[i]!= 0 || b[j] / a[i] < x) return false;\n  return true;\n}\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  cin >> m;\n  for (int i = 0; i < m; i++) cin >> b[i];\n  int ans = 0;\n  for (int i = 0; i <= 100000; i++)\n    if (check(i)) ans = i;\n  cout << ans << endl;\n  return 0;\n}\n"}
{"src_uid": "102667eaa3aee012fef70f4192464674", "id": 15, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 900, "testcases": "[{'input': '2\\r\\n4 5\\r\\n3\\r\\n12 13 15\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n1 2 3 4\\r\\n5\\r\\n10 11 12 13 14\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 7 11 13\\r\\n4\\r\\n51 119 187 221\\r\\n', 'output': ['4\\r\\n']}, {'input': '4\\r\\n2 3 4 5\\r\\n3\\r\\n1 2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n6 12 13 20 48 53 74 92 96 97\\r\\n10\\r\\n1 21 32 36 47 54 69 75 95 97\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 9 10 14 15 17 19 22 24 26\\r\\n10\\r\\n2 11 17 19 21 22 24 25 27 28\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n24 53 56 126 354 432 442 740 795 856\\r\\n10\\r\\n273 438 494 619 689 711 894 947 954 958\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n3 4 6 7 8 10 14 16 19 20\\r\\n10\\r\\n3 4 5 7 8 10 15 16 18 20\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n1 6 8 14 15 17 25 27 34 39\\r\\n10\\r\\n1 8 16 17 19 22 32 39 44 50\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 21 22 23 25 32 35 36 38 39\\r\\n10\\r\\n3 7 8 9 18 21 23 24 36 38\\r\\n', 'output': ['4\\r\\n']}, {'input': '50\\r\\n5 8 13 16 19 20 21 22 24 27 28 29 30 32 33 34 35 43 45 48 50 51 54 55 58 59 60 61 62 65 70 71 72 76 78 79 80 81 83 84 85 87 89 91 92 94 97 98 99 100\\r\\n50\\r\\n2 3 5 6 7 10 15 16 17 20 23 28 29 30 31 34 36 37 40 42 45 46 48 54 55 56 58 59 61 62 69 70 71 72 75 76 78 82 84 85 86 87 88 89 90 91 92 97 99 100\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n3 5 6 8 9 11 13 19 21 23 24 32 34 35 42 50 51 52 56 58 59 69 70 72 73 75 76 77 78 80 83 88 90 95 96 100 101 102 108 109 113 119 124 135 138 141 142 143 145 150\\r\\n50\\r\\n5 8 10 11 18 19 23 30 35 43 51 53 55 58 63 68 69 71 77 78 79 82 83 86 88 89 91 92 93 94 96 102 103 105 109 110 113 114 116 123 124 126 127 132 133 135 136 137 142 149\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 16 24 25 27 33 36 40 51 60 62 65 71 72 75 77 85 87 91 93 98 102 103 106 117 118 120 121 122 123 125 131 134 136 143 148 155 157 160 161 164 166 170 178 184 187 188 192 194 197\\r\\n50\\r\\n5 9 17 23 27 34 40 44 47 59 62 70 81 82 87 88 89 90 98 101 102 110 113 114 115 116 119 122 124 128 130 137 138 140 144 150 152 155 159 164 166 169 171 175 185 186 187 189 190 193\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 22 23 31 32 35 48 63 76 79 88 97 101 102 103 104 106 113 114 115 116 126 136 138 145 152 155 156 162 170 172 173 179 180 182 203 208 210 212 222 226 229 231 232 235 237 245 246 247 248\\r\\n50\\r\\n2 5 6 16 28 44 45 46 54 55 56 63 72 80 87 93 94 96 97 100 101 103 132 135 140 160 164 165 167 168 173 180 182 185 186 192 194 198 199 202 203 211 213 216 217 227 232 233 236 245\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 19 33 35 38 41 51 54 69 70 71 73 76 80 84 94 102 104 105 106 107 113 121 128 131 168 180 181 187 191 195 201 205 207 210 216 220 238 249 251 263 271 272 275 281 283 285 286 291 294\\r\\n50\\r\\n2 3 5 20 21 35 38 40 43 48 49 52 55 64 73 77 82 97 109 113 119 121 125 132 137 139 145 146 149 180 182 197 203 229 234 241 244 251 264 271 274 281 284 285 287 291 292 293 294 298\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n2 4 5 16 18 19 22 23 25 26 34 44 48 54 67 79 80 84 92 110 116 133 138 154 163 171 174 202 205 218 228 229 234 245 247 249 250 263 270 272 274 275 277 283 289 310 312 334 339 342\\r\\n50\\r\\n1 5 17 18 25 37 46 47 48 59 67 75 80 83 84 107 115 122 137 141 159 162 175 180 184 204 221 224 240 243 247 248 249 258 259 260 264 266 269 271 274 293 294 306 329 330 334 335 342 350\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 9 11 21 28 39 42 56 60 63 81 88 91 95 105 110 117 125 149 165 174 176 185 189 193 196 205 231 233 268 278 279 281 286 289 292 298 303 305 306 334 342 350 353 361 371 372 375 376 378\\r\\n50\\r\\n6 17 20 43 45 52 58 59 82 83 88 102 111 118 121 131 145 173 190 191 200 216 224 225 232 235 243 256 260 271 290 291 321 322 323 329 331 333 334 341 343 348 351 354 356 360 366 379 387 388\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n17 239 443 467 661 1069 1823 2333 3767 4201\\r\\n20\\r\\n51 83 97 457 593 717 997 1329 1401 1459 1471 1983 2371 2539 3207 3251 3329 5469 6637 6999\\r\\n', 'output': ['8\\r\\n']}, {'input': '20\\r\\n179 359 401 467 521 601 919 941 1103 1279 1709 1913 1949 2003 2099 2143 2179 2213 2399 4673\\r\\n20\\r\\n151 181 191 251 421 967 1109 1181 1249 1447 1471 1553 1619 2327 2551 2791 3049 3727 6071 7813\\r\\n', 'output': ['3\\r\\n']}, {'input': '20\\r\\n79 113 151 709 809 983 1291 1399 1409 1429 2377 2659 2671 2897 3217 3511 3557 3797 3823 4363\\r\\n10\\r\\n19 101 659 797 1027 1963 2129 2971 3299 9217\\r\\n', 'output': ['3\\r\\n']}, {'input': '30\\r\\n19 47 109 179 307 331 389 401 461 509 547 569 617 853 883 1249 1361 1381 1511 1723 1741 1783 2459 2531 2621 3533 3821 4091 5557 6217\\r\\n20\\r\\n401 443 563 941 967 997 1535 1567 1655 1747 1787 1945 1999 2251 2305 2543 2735 4415 6245 7555\\r\\n', 'output': ['8\\r\\n']}, {'input': '30\\r\\n3 43 97 179 257 313 353 359 367 389 397 457 547 599 601 647 1013 1021 1063 1433 1481 1531 1669 3181 3373 3559 3769 4157 4549 5197\\r\\n50\\r\\n13 15 17 19 29 79 113 193 197 199 215 223 271 293 359 485 487 569 601 683 895 919 941 967 1283 1285 1289 1549 1565 1765 1795 1835 1907 1931 1945 1985 1993 2285 2731 2735 2995 3257 4049 4139 5105 5315 7165 7405 7655 8345\\r\\n', 'output': ['20\\r\\n']}, {'input': '50\\r\\n11 17 23 53 59 109 137 149 173 251 353 379 419 421 439 503 593 607 661 773 821 877 941 997 1061 1117 1153 1229 1289 1297 1321 1609 1747 2311 2389 2543 2693 3041 3083 3137 3181 3209 3331 3373 3617 3767 4201 4409 4931 6379\\r\\n50\\r\\n55 59 67 73 85 89 101 115 211 263 295 353 545 599 607 685 739 745 997 1031 1255 1493 1523 1667 1709 1895 1949 2161 2195 2965 3019 3035 3305 3361 3373 3673 3739 3865 3881 4231 4253 4385 4985 5305 5585 5765 6145 6445 8045 8735\\r\\n', 'output': ['23\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'output': ['24\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'output': ['24\\r\\n']}, {'input': '47\\r\\n66 262 357 457 513 530 538 540 592 691 707 979 1015 1242 1246 1667 1823 1886 1963 2133 2649 2679 2916 2949 3413 3523 3699 3958 4393 4922 5233 5306 5799 6036 6302 6629 7208 7282 7315 7822 7833 7927 8068 8150 8870 8962 9987\\r\\n39\\r\\n167 199 360 528 1515 1643 1986 1988 2154 2397 2856 3552 3656 3784 3980 4096 4104 4240 4320 4736 4951 5266 5656 5849 5850 6169 6517 6875 7244 7339 7689 7832 8120 8716 9503 9509 9933 9936 9968\\r\\n', 'output': ['12\\r\\n']}, {'input': '1\\r\\n94\\r\\n50\\r\\n423 446 485 1214 1468 1507 1853 1930 1999 2258 2271 2285 2425 2543 2715 2743 2992 3196 4074 4108 4448 4475 4652 5057 5250 5312 5356 5375 5731 5986 6298 6501 6521 7146 7255 7276 7332 7481 7998 8141 8413 8665 8908 9221 9336 9491 9504 9677 9693 9706\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n51 67 75 186 194 355 512 561 720 876 1077 1221 1503 1820 2153 2385 2568 2608 2937 2969 3271 3311 3481 4081 4093 4171 4255 4256 4829 5020 5192 5636 5817 6156 6712 6717 7153 7436 7608 7612 7866 7988 8264 8293 8867 9311 9879 9882 9889 9908\\r\\n1\\r\\n5394\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n26 367 495 585 675 789 855 1185 1312 1606 2037 2241 2587 2612 2628 2807 2873 2924 3774 4067 4376 4668 4902 5001 5082 5100 5104 5209 5345 5515 5661 5777 5902 5907 6155 6323 6675 6791 7503 8159 8207 8254 8740 8848 8855 8933 9069 9164 9171 9586\\r\\n5\\r\\n1557 6246 7545 8074 8284\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n25 58 91 110 2658\\r\\n50\\r\\n21 372 909 1172 1517 1554 1797 1802 1843 1977 2006 2025 2137 2225 2317 2507 2645 2754 2919 3024 3202 3212 3267 3852 4374 4487 4553 4668 4883 4911 4916 5016 5021 5068 5104 5162 5683 5856 6374 6871 7333 7531 8099 8135 8173 8215 8462 8776 9433 9790\\r\\n', 'output': ['4\\r\\n']}, {'input': '45\\r\\n37 48 56 59 69 70 79 83 85 86 99 114 131 134 135 145 156 250 1739 1947 2116 2315 2449 3104 3666 4008 4406 4723 4829 5345 5836 6262 6296 6870 7065 7110 7130 7510 7595 8092 8442 8574 9032 9091 9355\\r\\n50\\r\\n343 846 893 1110 1651 1837 2162 2331 2596 3012 3024 3131 3294 3394 3528 3717 3997 4125 4347 4410 4581 4977 5030 5070 5119 5229 5355 5413 5418 5474 5763 5940 6151 6161 6164 6237 6506 6519 6783 7182 7413 7534 8069 8253 8442 8505 9135 9308 9828 9902\\r\\n', 'output': ['17\\r\\n']}, {'input': '50\\r\\n17 20 22 28 36 38 46 47 48 50 52 57 58 62 63 69 70 74 75 78 79 81 82 86 87 90 93 95 103 202 292 442 1756 1769 2208 2311 2799 2957 3483 4280 4324 4932 5109 5204 6225 6354 6561 7136 8754 9670\\r\\n40\\r\\n68 214 957 1649 1940 2078 2134 2716 3492 3686 4462 4559 4656 4756 4850 5044 5490 5529 5592 5626 6014 6111 6693 6790 7178 7275 7566 7663 7702 7857 7954 8342 8511 8730 8957 9021 9215 9377 9445 9991\\r\\n', 'output': ['28\\r\\n']}, {'input': '39\\r\\n10 13 21 25 36 38 47 48 58 64 68 69 73 79 86 972 2012 2215 2267 2503 3717 3945 4197 4800 5266 6169 6612 6824 7023 7322 7582 7766 8381 8626 8879 9079 9088 9838 9968\\r\\n50\\r\\n432 877 970 1152 1202 1223 1261 1435 1454 1578 1843 1907 2003 2037 2183 2195 2215 2425 3065 3492 3615 3637 3686 3946 4189 4415 4559 4656 4665 4707 4886 4887 5626 5703 5955 6208 6521 6581 6596 6693 6985 7013 7081 7343 7663 8332 8342 8637 9207 9862\\r\\n', 'output': ['15\\r\\n']}, {'input': '50\\r\\n7 144 269 339 395 505 625 688 709 950 1102 1152 1350 1381 1641 1830 1977 1999 2093 2180 2718 3308 3574 4168 4232 4259 4393 4689 4982 5154 5476 5581 5635 5721 6159 6302 6741 7010 7152 7315 7417 7482 8116 8239 8640 9347 9395 9614 9661 9822\\r\\n20\\r\\n84 162 292 1728 1866 2088 3228 3470 4068 5318 5470 6060 6380 6929 7500 8256 8399 8467 8508 9691\\r\\n', 'output': ['8\\r\\n']}, {'input': '50\\r\\n159 880 1070 1139 1358 1608 1691 1841 2073 2171 2213 2597 2692 2759 2879 2931 3173 3217 3441 4201 4878 5106 5129 5253 5395 5647 5968 6019 6130 6276 6286 6330 6409 6728 7488 7713 7765 7828 7899 8064 8264 8457 8483 8685 8900 8946 8965 9133 9187 9638\\r\\n45\\r\\n57 159 1070 1139 1391 1608 1691 1841 2171 2213 2692 2759 2931 3173 3217 3441 4201 4878 5106 5129 5253 5647 5968 6130 6276 6286 6409 7488 7694 7713 7765 7828 7899 8003 8064 8081 8244 8264 8685 8900 8946 8965 9133 9638 9673\\r\\n', 'output': ['38\\r\\n']}, {'input': '3\\r\\n3 4 5\\r\\n3\\r\\n6 20 25\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n2 3 5 8\\r\\n4\\r\\n2 6 8 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 5 7 11\\r\\n4\\r\\n3 5 7 22\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n3\\r\\n20 30 50\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n4\\r\\n2 4 6 49\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n4 5\\r\\n3\\r\\n12 15 20\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n2 5 7\\r\\n3\\r\\n4 5 7\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n3 5 8\\r\\n3\\r\\n6 8 10\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 9 33\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 21 40\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n4 9 10\\r\\n3\\r\\n8 9 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n1 5 6 9 51\\r\\n5\\r\\n5 12 18 27 10000\\r\\n', 'output': ['1\\r\\n']}, {'input': '13\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\r\\n1\\r\\n14\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint i, j, n, m, a[51], b[51];\nint main() {\n  while (scanf(\"%d\", &n) == 1) {\n    int ma = 0;\n    int ans = 0;\n    for (i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n    while (scanf(\"%d\", &m) == 1) {\n      int t = 0;\n      int tt = 0;\n      for (i = 1; i <= m; i++) scanf(\"%d\", &b[i]);\n      for (i = 1; i <= n; i++)\n        for (j = 1; j <= m; j++)\n          if (a[i] % b[j] == 0) {\n            t = t + b[j];\n            tt = tt > a[i] / b[j] || tt == 0? a[i] / b[j] : tt;\n          }\n      ans = ans > t - tt || ans == 0? t - tt : ans;\n      m--;\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"}
{"src_uid": "38c4864937e57b35d3cce272f655e20f", "id": 16, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1 7 3 3\\r\\n', 'output': ['1']}, {'input': '7 7 7 7\\r\\n', 'output': ['3']}, {'input': '81170865 673572653 756938629 995577259\\r\\n', 'output': ['0']}, {'input': '3491663 217797045 522540872 715355328\\r\\n', 'output': ['0']}, {'input': '251590420 586975278 916631563 586975278\\r\\n', 'output': ['1']}, {'input': '259504825 377489979 588153796 377489979\\r\\n', 'output': ['1']}, {'input': '652588203 931100304 931100304 652588203\\r\\n', 'output': ['2']}, {'input': '391958720 651507265 391958720 651507265\\r\\n', 'output': ['2']}, {'input': '90793237 90793237 90793237 90793237\\r\\n', 'output': ['3']}, {'input': '551651653 551651653 551651653 551651653\\r\\n', 'output': ['3']}, {'input': '156630260 609654355 668943582 973622757\\r\\n', 'output': ['0']}, {'input': '17061017 110313588 434481173 796661222\\r\\n', 'output': ['0']}, {'input': '24975422 256716298 337790533 690960249\\r\\n', 'output': ['0']}, {'input': '255635360 732742923 798648949 883146723\\r\\n', 'output': ['0']}, {'input': '133315691 265159773 734556507 265159773\\r\\n', 'output': ['1']}, {'input': '28442865 741657755 978106882 978106882\\r\\n', 'output': ['1']}, {'input': '131245479 174845575 497483467 131245479\\r\\n', 'output': ['1']}, {'input': '139159884 616215581 958341883 616215581\\r\\n', 'output': ['1']}, {'input': '147784432 947653080 947653080 947653080\\r\\n', 'output': ['2']}, {'input': '94055790 756126496 756126496 94055790\\r\\n', 'output': ['2']}, {'input': '240458500 511952208 240458500 511952208\\r\\n', 'output': ['2']}, {'input': '681828506 972810624 972810624 681828506\\r\\n', 'output': ['2']}, {'input': '454961014 454961014 454961014 454961014\\r\\n', 'output': ['3']}, {'input': '915819430 915819430 915819430 915819430\\r\\n', 'output': ['3']}, {'input': '671645142 671645142 671645142 671645142\\r\\n', 'output': ['3']}, {'input': '132503558 132503558 132503558 132503558\\r\\n', 'output': ['3']}, {'input': '5 5 999999 6\\r\\n', 'output': ['1']}, {'input': '1 1 2 5\\r\\n', 'output': ['1']}, {'input': '2 1 2 3\\r\\n', 'output': ['1']}, {'input': '1 1 3 5\\r\\n', 'output': ['1']}, {'input': '1 1 3 3\\r\\n', 'output': ['2']}, {'input': '2 2 2 1\\r\\n', 'output': ['2']}, {'input': '3 1 1 1\\r\\n', 'output': ['2']}, {'input': '1 2 2 2\\r\\n', 'output': ['2']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, k;\n  long long s1[200];\n  int t1[200];\n  int m1, m2;\n  long long s, sum = 0;\n  m1 = m2 = 0;\n  while (scanf(\"%I64d\", &s)!= EOF) {\n    if (t1[s] == 0) {\n      t1[s]++;\n      m1++;\n    }\n    s1[s]++;\n  }\n  for (int i = 1; i <= 200; i++) {\n    s = s1[i];\n    sum = 0;\n    if (s > 1) sum += s - 1;\n    if (t1[i] == 1) sum++;\n    if (t1[i] == 0) sum++;\n    if (sum < m1) {\n      m2 = m1;\n      m1 = sum;\n    } else if (sum < m2)\n      m2 = sum;\n  }\n  cout << m2 << endl;\n  return 0;\n}\n"}
{"src_uid": "38c4864937e57b35d3cce272f655e20f", "id": 16, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1 7 3 3\\r\\n', 'output': ['1']}, {'input': '7 7 7 7\\r\\n', 'output': ['3']}, {'input': '81170865 673572653 756938629 995577259\\r\\n', 'output': ['0']}, {'input': '3491663 217797045 522540872 715355328\\r\\n', 'output': ['0']}, {'input': '251590420 586975278 916631563 586975278\\r\\n', 'output': ['1']}, {'input': '259504825 377489979 588153796 377489979\\r\\n', 'output': ['1']}, {'input': '652588203 931100304 931100304 652588203\\r\\n', 'output': ['2']}, {'input': '391958720 651507265 391958720 651507265\\r\\n', 'output': ['2']}, {'input': '90793237 90793237 90793237 90793237\\r\\n', 'output': ['3']}, {'input': '551651653 551651653 551651653 551651653\\r\\n', 'output': ['3']}, {'input': '156630260 609654355 668943582 973622757\\r\\n', 'output': ['0']}, {'input': '17061017 110313588 434481173 796661222\\r\\n', 'output': ['0']}, {'input': '24975422 256716298 337790533 690960249\\r\\n', 'output': ['0']}, {'input': '255635360 732742923 798648949 883146723\\r\\n', 'output': ['0']}, {'input': '133315691 265159773 734556507 265159773\\r\\n', 'output': ['1']}, {'input': '28442865 741657755 978106882 978106882\\r\\n', 'output': ['1']}, {'input': '131245479 174845575 497483467 131245479\\r\\n', 'output': ['1']}, {'input': '139159884 616215581 958341883 616215581\\r\\n', 'output': ['1']}, {'input': '147784432 947653080 947653080 947653080\\r\\n', 'output': ['2']}, {'input': '94055790 756126496 756126496 94055790\\r\\n', 'output': ['2']}, {'input': '240458500 511952208 240458500 511952208\\r\\n', 'output': ['2']}, {'input': '681828506 972810624 972810624 681828506\\r\\n', 'output': ['2']}, {'input': '454961014 454961014 454961014 454961014\\r\\n', 'output': ['3']}, {'input': '915819430 915819430 915819430 915819430\\r\\n', 'output': ['3']}, {'input': '671645142 671645142 671645142 671645142\\r\\n', 'output': ['3']}, {'input': '132503558 132503558 132503558 132503558\\r\\n', 'output': ['3']}, {'input': '5 5 999999 6\\r\\n', 'output': ['1']}, {'input': '1 1 2 5\\r\\n', 'output': ['1']}, {'input': '2 1 2 3\\r\\n', 'output': ['1']}, {'input': '1 1 3 5\\r\\n', 'output': ['1']}, {'input': '1 1 3 3\\r\\n', 'output': ['2']}, {'input': '2 2 2 1\\r\\n', 'output': ['2']}, {'input': '3 1 1 1\\r\\n', 'output': ['2']}, {'input': '1 2 2 2\\r\\n', 'output': ['2']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a, b, c, d;\n  cin >> a >> b >> c >> d;\n  if (a == b or a == c or a == d or b == c or b == d or c == d)\n    cout << 1;\n  else if (a == c and b == d)\n    cout << 2;\n  else if (a == d and b == c)\n    cout << 2;\n  else if (b == c and a == d)\n    cout << 2;\n  else if (b == d and a == c)\n    cout << 2;\n  else if (a == b and c == d)\n    cout << 1;\n  else if (a == c and b == d)\n    cout << 1;\n  else if (a == d and b == c)\n    cout << 1;\n  else if (b == c and a == d)\n    cout << 1;\n  else if (b == d and a == c)\n    cout << 1;\n  else\n    cout << 0;\n}\n"}
{"src_uid": "38c4864937e57b35d3cce272f655e20f", "id": 16, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1 7 3 3\\r\\n', 'output': ['1']}, {'input': '7 7 7 7\\r\\n', 'output': ['3']}, {'input': '81170865 673572653 756938629 995577259\\r\\n', 'output': ['0']}, {'input': '3491663 217797045 522540872 715355328\\r\\n', 'output': ['0']}, {'input': '251590420 586975278 916631563 586975278\\r\\n', 'output': ['1']}, {'input': '259504825 377489979 588153796 377489979\\r\\n', 'output': ['1']}, {'input': '652588203 931100304 931100304 652588203\\r\\n', 'output': ['2']}, {'input': '391958720 651507265 391958720 651507265\\r\\n', 'output': ['2']}, {'input': '90793237 90793237 90793237 90793237\\r\\n', 'output': ['3']}, {'input': '551651653 551651653 551651653 551651653\\r\\n', 'output': ['3']}, {'input': '156630260 609654355 668943582 973622757\\r\\n', 'output': ['0']}, {'input': '17061017 110313588 434481173 796661222\\r\\n', 'output': ['0']}, {'input': '24975422 256716298 337790533 690960249\\r\\n', 'output': ['0']}, {'input': '255635360 732742923 798648949 883146723\\r\\n', 'output': ['0']}, {'input': '133315691 265159773 734556507 265159773\\r\\n', 'output': ['1']}, {'input': '28442865 741657755 978106882 978106882\\r\\n', 'output': ['1']}, {'input': '131245479 174845575 497483467 131245479\\r\\n', 'output': ['1']}, {'input': '139159884 616215581 958341883 616215581\\r\\n', 'output': ['1']}, {'input': '147784432 947653080 947653080 947653080\\r\\n', 'output': ['2']}, {'input': '94055790 756126496 756126496 94055790\\r\\n', 'output': ['2']}, {'input': '240458500 511952208 240458500 511952208\\r\\n', 'output': ['2']}, {'input': '681828506 972810624 972810624 681828506\\r\\n', 'output': ['2']}, {'input': '454961014 454961014 454961014 454961014\\r\\n', 'output': ['3']}, {'input': '915819430 915819430 915819430 915819430\\r\\n', 'output': ['3']}, {'input': '671645142 671645142 671645142 671645142\\r\\n', 'output': ['3']}, {'input': '132503558 132503558 132503558 132503558\\r\\n', 'output': ['3']}, {'input': '5 5 999999 6\\r\\n', 'output': ['1']}, {'input': '1 1 2 5\\r\\n', 'output': ['1']}, {'input': '2 1 2 3\\r\\n', 'output': ['1']}, {'input': '1 1 3 5\\r\\n', 'output': ['1']}, {'input': '1 1 3 3\\r\\n', 'output': ['2']}, {'input': '2 2 2 1\\r\\n', 'output': ['2']}, {'input': '3 1 1 1\\r\\n', 'output': ['2']}, {'input': '1 2 2 2\\r\\n', 'output': ['2']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long int s[4], c, ans = 0;\n  cin >> s[0] >> s[1] >> s[2] >> s[3];\n  sort(s, s + 4);\n  ans += s[3]!= s[1] || s[3]!= s[2]? 1 : 0;\n  ans += s[0] == s[1] || s[2] == s[3]? 1 : 0;\n  cout << ans;\n  return 0;\n}\n"}
{"src_uid": "38c4864937e57b35d3cce272f655e20f", "id": 16, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1 7 3 3\\r\\n', 'output': ['1']}, {'input': '7 7 7 7\\r\\n', 'output': ['3']}, {'input': '81170865 673572653 756938629 995577259\\r\\n', 'output': ['0']}, {'input': '3491663 217797045 522540872 715355328\\r\\n', 'output': ['0']}, {'input': '251590420 586975278 916631563 586975278\\r\\n', 'output': ['1']}, {'input': '259504825 377489979 588153796 377489979\\r\\n', 'output': ['1']}, {'input': '652588203 931100304 931100304 652588203\\r\\n', 'output': ['2']}, {'input': '391958720 651507265 391958720 651507265\\r\\n', 'output': ['2']}, {'input': '90793237 90793237 90793237 90793237\\r\\n', 'output': ['3']}, {'input': '551651653 551651653 551651653 551651653\\r\\n', 'output': ['3']}, {'input': '156630260 609654355 668943582 973622757\\r\\n', 'output': ['0']}, {'input': '17061017 110313588 434481173 796661222\\r\\n', 'output': ['0']}, {'input': '24975422 256716298 337790533 690960249\\r\\n', 'output': ['0']}, {'input': '255635360 732742923 798648949 883146723\\r\\n', 'output': ['0']}, {'input': '133315691 265159773 734556507 265159773\\r\\n', 'output': ['1']}, {'input': '28442865 741657755 978106882 978106882\\r\\n', 'output': ['1']}, {'input': '131245479 174845575 497483467 131245479\\r\\n', 'output': ['1']}, {'input': '139159884 616215581 958341883 616215581\\r\\n', 'output': ['1']}, {'input': '147784432 947653080 947653080 947653080\\r\\n', 'output': ['2']}, {'input': '94055790 756126496 756126496 94055790\\r\\n', 'output': ['2']}, {'input': '240458500 511952208 240458500 511952208\\r\\n', 'output': ['2']}, {'input': '681828506 972810624 972810624 681828506\\r\\n', 'output': ['2']}, {'input': '454961014 454961014 454961014 454961014\\r\\n', 'output': ['3']}, {'input': '915819430 915819430 915819430 915819430\\r\\n', 'output': ['3']}, {'input': '671645142 671645142 671645142 671645142\\r\\n', 'output': ['3']}, {'input': '132503558 132503558 132503558 132503558\\r\\n', 'output': ['3']}, {'input': '5 5 999999 6\\r\\n', 'output': ['1']}, {'input': '1 1 2 5\\r\\n', 'output': ['1']}, {'input': '2 1 2 3\\r\\n', 'output': ['1']}, {'input': '1 1 3 5\\r\\n', 'output': ['1']}, {'input': '1 1 3 3\\r\\n', 'output': ['2']}, {'input': '2 2 2 1\\r\\n', 'output': ['2']}, {'input': '3 1 1 1\\r\\n', 'output': ['2']}, {'input': '1 2 2 2\\r\\n', 'output': ['2']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n, c, p = 1, b = 0, i, x, y, j;\n  long long ar[100];\n  for (i = 0; i < 4; i++) cin >> x;\n  sort(x, x + 4);\n  for (i = 2; i < 5; i++)\n    if (x[i] == x[i - 1])\n      b++;\n    else {\n      if (b!= 0) p *= b + 1, b = 0;\n    }\n  cout << p;\n  return 0;\n}\n"}
{"src_uid": "38c4864937e57b35d3cce272f655e20f", "id": 16, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1 7 3 3\\r\\n', 'output': ['1']}, {'input': '7 7 7 7\\r\\n', 'output': ['3']}, {'input': '81170865 673572653 756938629 995577259\\r\\n', 'output': ['0']}, {'input': '3491663 217797045 522540872 715355328\\r\\n', 'output': ['0']}, {'input': '251590420 586975278 916631563 586975278\\r\\n', 'output': ['1']}, {'input': '259504825 377489979 588153796 377489979\\r\\n', 'output': ['1']}, {'input': '652588203 931100304 931100304 652588203\\r\\n', 'output': ['2']}, {'input': '391958720 651507265 391958720 651507265\\r\\n', 'output': ['2']}, {'input': '90793237 90793237 90793237 90793237\\r\\n', 'output': ['3']}, {'input': '551651653 551651653 551651653 551651653\\r\\n', 'output': ['3']}, {'input': '156630260 609654355 668943582 973622757\\r\\n', 'output': ['0']}, {'input': '17061017 110313588 434481173 796661222\\r\\n', 'output': ['0']}, {'input': '24975422 256716298 337790533 690960249\\r\\n', 'output': ['0']}, {'input': '255635360 732742923 798648949 883146723\\r\\n', 'output': ['0']}, {'input': '133315691 265159773 734556507 265159773\\r\\n', 'output': ['1']}, {'input': '28442865 741657755 978106882 978106882\\r\\n', 'output': ['1']}, {'input': '131245479 174845575 497483467 131245479\\r\\n', 'output': ['1']}, {'input': '139159884 616215581 958341883 616215581\\r\\n', 'output': ['1']}, {'input': '147784432 947653080 947653080 947653080\\r\\n', 'output': ['2']}, {'input': '94055790 756126496 756126496 94055790\\r\\n', 'output': ['2']}, {'input': '240458500 511952208 240458500 511952208\\r\\n', 'output': ['2']}, {'input': '681828506 972810624 972810624 681828506\\r\\n', 'output': ['2']}, {'input': '454961014 454961014 454961014 454961014\\r\\n', 'output': ['3']}, {'input': '915819430 915819430 915819430 915819430\\r\\n', 'output': ['3']}, {'input': '671645142 671645142 671645142 671645142\\r\\n', 'output': ['3']}, {'input': '132503558 132503558 132503558 132503558\\r\\n', 'output': ['3']}, {'input': '5 5 999999 6\\r\\n', 'output': ['1']}, {'input': '1 1 2 5\\r\\n', 'output': ['1']}, {'input': '2 1 2 3\\r\\n', 'output': ['1']}, {'input': '1 1 3 5\\r\\n', 'output': ['1']}, {'input': '1 1 3 3\\r\\n', 'output': ['2']}, {'input': '2 2 2 1\\r\\n', 'output': ['2']}, {'input': '3 1 1 1\\r\\n', 'output': ['2']}, {'input': '1 2 2 2\\r\\n', 'output': ['2']}]", "source_code": "#include <bits/stdc++.h>\nint n, k, b;\nstd::map<int, bool> m;\nint main() {\n  std::cin.tie(0);\n  std::ios::sync_with_stdio(0);\n  int a, cnt = 0;\n  for (int i = 0; i < 4; ++i) {\n    std::cin >> a;\n    ++cnt;\n    m[a] = true;\n  }\n  if (cnt == 4)\n    return std::cout << 0, 0;\n  else {\n    cnt = 0;\n    for (auto it : m)\n      if (!it.second) {\n        ++cnt;\n      }\n    return std::cout << cnt, 0;\n  }\n  return 0;\n}\n"}
{"src_uid": "230a3c4d7090401e5fa3c6b9d994cdf2", "id": 17, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '8\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '5\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '4\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '3\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '2\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '1\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '7\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '6\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '10\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '9\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '53\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '77\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '32\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '44\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '98\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '99\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '90\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '67\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '100\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '88\\r\\n', 'output': ['YES', 'Yes', 'yes']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int w;\n  cin >> w;\n  if (w % 2!= 0) {\n    cout << \"NO\";\n  } else if (w == 2) {\n    cout << \"NO\";\n  } else {\n    cout << \"YES\";\n  }\n  return 0;\n}\n"}
{"src_uid": "230a3c4d7090401e5fa3c6b9d994cdf2", "id": 17, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '8\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '5\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '4\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '3\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '2\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '1\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '7\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '6\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '10\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '9\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '53\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '77\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '32\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '44\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '98\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '99\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '90\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '67\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '100\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '88\\r\\n', 'output': ['YES', 'Yes', 'yes']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int w;\n  scanf(\"%d\", &w);\n  if (w % 2 == 0) {\n    cout << \"YES\";\n  } else if (w == 9) {\n    cout << \"NO\";\n  } else {\n    cout << \"YES\";\n  }\n}\n"}
{"src_uid": "230a3c4d7090401e5fa3c6b9d994cdf2", "id": 17, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '8\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '5\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '4\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '3\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '2\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '1\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '7\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '6\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '10\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '9\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '53\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '77\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '32\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '44\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '98\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '99\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '90\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '67\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '100\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '88\\r\\n', 'output': ['YES', 'Yes', 'yes']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a;\n  cin >> a;\n  if (a % 2 == 0) {\n    cout << \"YES\";\n  } else if (a % 2!= 0) {\n    cout << \"NO\";\n  }\n}\n"}
{"src_uid": "230a3c4d7090401e5fa3c6b9d994cdf2", "id": 17, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '8\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '5\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '4\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '3\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '2\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '1\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '7\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '6\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '10\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '9\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '53\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '77\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '32\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '44\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '98\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '99\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '90\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '67\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '100\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '88\\r\\n', 'output': ['YES', 'Yes', 'yes']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  if (n % 2 == 1) {\n    if (n > 2)\n      cout << \"YES\\n\";\n    else\n      cout << \"NO\\n\";\n  } else if (n == 2)\n    cout << \"NO\\n\";\n  else\n    cout << \"YES\\n\";\n  return 0;\n}\n"}
{"src_uid": "230a3c4d7090401e5fa3c6b9d994cdf2", "id": 17, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '8\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '5\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '4\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '3\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '2\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '1\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '7\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '6\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '10\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '9\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '53\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '77\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '32\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '44\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '98\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '99\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '90\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '67\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '100\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '88\\r\\n', 'output': ['YES', 'Yes', 'yes']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a, b, c;\n  cin >> a;\n  if (a % 2 == 0) {\n    cout << \"YES\";\n  } else if (a % 2 == 1) {\n    if (a == 1) {\n      cout << \"NO\";\n    } else {\n      cout << \"YES\";\n    }\n  }\n}\n"}
{"src_uid": "8b6ae2190413b23f47e2958a7d4e7bc0", "id": 18, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': 'WWWBWWBW\\r\\nBBBBBBBB\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\n', 'output': ['3']}, {'input': 'WWWWWWWW\\r\\nBBBBBBBB\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\n', 'output': ['1']}, {'input': 'WWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\n', 'output': ['0']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBW\\r\\n', 'output': ['14']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['14']}, {'input': 'BBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'BBBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\n', 'output': ['8']}, {'input': 'WWWWBBBB\\r\\nWWWWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWWWBBBB\\r\\nWWWWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'BBBBBBBB\\r\\nWBWWBBBW\\r\\nBBBBBBBB\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}, {'input': 'WBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\n', 'output': ['9']}, {'input': 'BBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['11']}, {'input': 'WWBWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\n', 'output': ['10']}, {'input': 'WBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nBBBBBBBB\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\n', 'output': ['6']}, {'input': 'BBBWBBBW\\r\\nBBBWBBBW\\r\\nBBBWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBBBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nWWWBBBBB\\r\\nWWWBBBBB\\r\\nBBBBBBBB\\r\\nWWWBBBBB\\r\\nWWWBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'WBBBBBWB\\r\\nBBBBBBBB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'WBBBWWBW\\r\\nWBBBWWBW\\r\\nBBBBBBBB\\r\\nWBBBWWBW\\r\\nBBBBBBBB\\r\\nWBBBWWBW\\r\\nWBBBWWBW\\r\\nWBBBWWBW\\r\\n', 'output': ['6']}, {'input': 'WBBBBWBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBBWBB\\r\\nWBBBBWBB\\r\\nBBBBBBBB\\r\\nWBBBBWBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\n', 'output': ['11']}, {'input': 'BBBBBBBB\\r\\nBWBBBBBW\\r\\nBWBBBBBW\\r\\nBBBBBBBB\\r\\nBWBBBBBW\\r\\nBWBBBBBW\\r\\nBBBBBBBB\\r\\nBWBBBBBW\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'BWBBBWWB\\r\\nBWBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBWBWB\\r\\n', 'output': ['12']}, {'input': 'BWBBBBWW\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBBBBBBBB\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}, {'input': 'WWBBWWBB\\r\\nBBBBBBBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\nBBBBBBBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\n', 'output': ['6']}, {'input': 'BWBBWWWW\\r\\nBWBBWWWW\\r\\nBWBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBWWWW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[10][10];\nint x, y, z;\nint main() {\n  for (int i = 0; i < 8; i++) {\n    cin >> a[i];\n  }\n  for (x = 0; x < 10; x++) {\n    y = 0;\n    z = 0;\n    for (int i = 0; i < 8; i++) {\n      if (a[i][x] == 'B') y++;\n    }\n    for (int i = 0; i < 10; i++) {\n      if (a[x][i] == 'B') z++;\n    }\n    if (max(y, z) >= 8) break;\n  }\n  cout << min(y, z) / 8 + 1 << endl;\n  return 0;\n}\n"}
{"src_uid": "8b6ae2190413b23f47e2958a7d4e7bc0", "id": 18, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': 'WWWBWWBW\\r\\nBBBBBBBB\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\n', 'output': ['3']}, {'input': 'WWWWWWWW\\r\\nBBBBBBBB\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\n', 'output': ['1']}, {'input': 'WWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\n', 'output': ['0']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBW\\r\\n', 'output': ['14']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['14']}, {'input': 'BBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'BBBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\n', 'output': ['8']}, {'input': 'WWWWBBBB\\r\\nWWWWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWWWBBBB\\r\\nWWWWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'BBBBBBBB\\r\\nWBWWBBBW\\r\\nBBBBBBBB\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}, {'input': 'WBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\n', 'output': ['9']}, {'input': 'BBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['11']}, {'input': 'WWBWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\n', 'output': ['10']}, {'input': 'WBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nBBBBBBBB\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\n', 'output': ['6']}, {'input': 'BBBWBBBW\\r\\nBBBWBBBW\\r\\nBBBWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBBBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nWWWBBBBB\\r\\nWWWBBBBB\\r\\nBBBBBBBB\\r\\nWWWBBBBB\\r\\nWWWBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'WBBBBBWB\\r\\nBBBBBBBB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'WBBBWWBW\\r\\nWBBBWWBW\\r\\nBBBBBBBB\\r\\nWBBBWWBW\\r\\nBBBBBBBB\\r\\nWBBBWWBW\\r\\nWBBBWWBW\\r\\nWBBBWWBW\\r\\n', 'output': ['6']}, {'input': 'WBBBBWBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBBWBB\\r\\nWBBBBWBB\\r\\nBBBBBBBB\\r\\nWBBBBWBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\n', 'output': ['11']}, {'input': 'BBBBBBBB\\r\\nBWBBBBBW\\r\\nBWBBBBBW\\r\\nBBBBBBBB\\r\\nBWBBBBBW\\r\\nBWBBBBBW\\r\\nBBBBBBBB\\r\\nBWBBBBBW\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'BWBBBWWB\\r\\nBWBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBWBWB\\r\\n', 'output': ['12']}, {'input': 'BWBBBBWW\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBBBBBBBB\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}, {'input': 'WWBBWWBB\\r\\nBBBBBBBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\nBBBBBBBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\n', 'output': ['6']}, {'input': 'BWBBWWWW\\r\\nBWBBWWWW\\r\\nBWBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBWWWW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a[9][9];\nint main() {\n  int ans = 0;\n  for (int i = 1; i <= 8; ++i) {\n    string s;\n    cin >> s;\n    for (int j = 1; j <= 8; ++j) {\n      a[i][j] = s[j - 1] - 'B';\n    }\n  }\n  for (int i = 1; i <= 8; ++i) {\n    int sum = 0;\n    for (int j = 1; j <= 8; ++j) {\n      if (a[i][j] == 1) ++sum;\n    }\n    ans = max(sum, ans);\n  }\n  for (int i = 1; i <= 8; ++i) {\n    int sum = 0;\n    for (int j = 1; j <= 8; ++j) {\n      if (a[j][i] == 1) ++sum;\n    }\n    ans = max(sum, ans);\n  }\n  cout << ans / 8 + 1 << endl;\n  return 0;\n}\n"}
{"src_uid": "8b6ae2190413b23f47e2958a7d4e7bc0", "id": 18, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': 'WWWBWWBW\\r\\nBBBBBBBB\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\n', 'output': ['3']}, {'input': 'WWWWWWWW\\r\\nBBBBBBBB\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\n', 'output': ['1']}, {'input': 'WWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\n', 'output': ['0']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBW\\r\\n', 'output': ['14']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['14']}, {'input': 'BBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'BBBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\n', 'output': ['8']}, {'input': 'WWWWBBBB\\r\\nWWWWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWWWBBBB\\r\\nWWWWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'BBBBBBBB\\r\\nWBWWBBBW\\r\\nBBBBBBBB\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}, {'input': 'WBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\n', 'output': ['9']}, {'input': 'BBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['11']}, {'input': 'WWBWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\n', 'output': ['10']}, {'input': 'WBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nBBBBBBBB\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\n', 'output': ['6']}, {'input': 'BBBWBBBW\\r\\nBBBWBBBW\\r\\nBBBWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBBBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nWWWBBBBB\\r\\nWWWBBBBB\\r\\nBBBBBBBB\\r\\nWWWBBBBB\\r\\nWWWBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'WBBBBBWB\\r\\nBBBBBBBB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'WBBBWWBW\\r\\nWBBBWWBW\\r\\nBBBBBBBB\\r\\nWBBBWWBW\\r\\nBBBBBBBB\\r\\nWBBBWWBW\\r\\nWBBBWWBW\\r\\nWBBBWWBW\\r\\n', 'output': ['6']}, {'input': 'WBBBBWBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBBWBB\\r\\nWBBBBWBB\\r\\nBBBBBBBB\\r\\nWBBBBWBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\n', 'output': ['11']}, {'input': 'BBBBBBBB\\r\\nBWBBBBBW\\r\\nBWBBBBBW\\r\\nBBBBBBBB\\r\\nBWBBBBBW\\r\\nBWBBBBBW\\r\\nBBBBBBBB\\r\\nBWBBBBBW\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'BWBBBWWB\\r\\nBWBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBWBWB\\r\\n', 'output': ['12']}, {'input': 'BWBBBBWW\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBBBBBBBB\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}, {'input': 'WWBBWWBB\\r\\nBBBBBBBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\nBBBBBBBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\n', 'output': ['6']}, {'input': 'BWBBWWWW\\r\\nBWBBWWWW\\r\\nBWBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBWWWW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char A[10][10];\n  for (int i = 0; i < 8; i++) {\n    for (int k = 0; k < 8; k++) cin >> A[i][k];\n  }\n  int a = 0, b = 0;\n  for (int i = 0; i < 8; i++) {\n    int j = 0;\n    while (j < 8) {\n      if (A[i][j] == 'B') {\n        if (j == 7)\n          a++;\n        else\n          b++;\n        j = 8;\n      }\n      j++;\n    }\n  }\n  if (a >= b)\n    cout << b << endl;\n  else {\n    cout << a << endl;\n  }\n}\n"}
{"src_uid": "8b6ae2190413b23f47e2958a7d4e7bc0", "id": 18, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': 'WWWBWWBW\\r\\nBBBBBBBB\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\n', 'output': ['3']}, {'input': 'WWWWWWWW\\r\\nBBBBBBBB\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\n', 'output': ['1']}, {'input': 'WWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\n', 'output': ['0']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBW\\r\\n', 'output': ['14']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['14']}, {'input': 'BBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'BBBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\n', 'output': ['8']}, {'input': 'WWWWBBBB\\r\\nWWWWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWWWBBBB\\r\\nWWWWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'BBBBBBBB\\r\\nWBWWBBBW\\r\\nBBBBBBBB\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}, {'input': 'WBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\n', 'output': ['9']}, {'input': 'BBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['11']}, {'input': 'WWBWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\n', 'output': ['10']}, {'input': 'WBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nBBBBBBBB\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\n', 'output': ['6']}, {'input': 'BBBWBBBW\\r\\nBBBWBBBW\\r\\nBBBWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBBBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nWWWBBBBB\\r\\nWWWBBBBB\\r\\nBBBBBBBB\\r\\nWWWBBBBB\\r\\nWWWBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'WBBBBBWB\\r\\nBBBBBBBB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'WBBBWWBW\\r\\nWBBBWWBW\\r\\nBBBBBBBB\\r\\nWBBBWWBW\\r\\nBBBBBBBB\\r\\nWBBBWWBW\\r\\nWBBBWWBW\\r\\nWBBBWWBW\\r\\n', 'output': ['6']}, {'input': 'WBBBBWBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBBWBB\\r\\nWBBBBWBB\\r\\nBBBBBBBB\\r\\nWBBBBWBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\n', 'output': ['11']}, {'input': 'BBBBBBBB\\r\\nBWBBBBBW\\r\\nBWBBBBBW\\r\\nBBBBBBBB\\r\\nBWBBBBBW\\r\\nBWBBBBBW\\r\\nBBBBBBBB\\r\\nBWBBBBBW\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'BWBBBWWB\\r\\nBWBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBWBWB\\r\\n', 'output': ['12']}, {'input': 'BWBBBBWW\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBBBBBBBB\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}, {'input': 'WWBBWWBB\\r\\nBBBBBBBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\nBBBBBBBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\n', 'output': ['6']}, {'input': 'BWBBWWWW\\r\\nBWBBWWWW\\r\\nBWBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBWWWW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[10][10];\nint main() {\n  for (int i = 0; i < 8; i++) {\n    cin >> a[i];\n  }\n  int ans = 8, n, n1;\n  for (int i = 0; i < 8; i++) {\n    n1 = 0;\n    for (int j = 0; j < 8; j++) {\n      if (a[j][i] == 'B') {\n        n1++;\n      }\n    }\n    if (n1 < ans) {\n      n = n1;\n      ans = n1;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"}
{"src_uid": "8b6ae2190413b23f47e2958a7d4e7bc0", "id": 18, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': 'WWWBWWBW\\r\\nBBBBBBBB\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\n', 'output': ['3']}, {'input': 'WWWWWWWW\\r\\nBBBBBBBB\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\n', 'output': ['1']}, {'input': 'WWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\n', 'output': ['0']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBW\\r\\n', 'output': ['14']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['14']}, {'input': 'BBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'BBBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\n', 'output': ['8']}, {'input': 'WWWWBBBB\\r\\nWWWWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWWWBBBB\\r\\nWWWWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'BBBBBBBB\\r\\nWBWWBBBW\\r\\nBBBBBBBB\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}, {'input': 'WBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\n', 'output': ['9']}, {'input': 'BBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['11']}, {'input': 'WWBWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\n', 'output': ['10']}, {'input': 'WBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nBBBBBBBB\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\n', 'output': ['6']}, {'input': 'BBBWBBBW\\r\\nBBBWBBBW\\r\\nBBBWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBBBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nWWWBBBBB\\r\\nWWWBBBBB\\r\\nBBBBBBBB\\r\\nWWWBBBBB\\r\\nWWWBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'WBBBBBWB\\r\\nBBBBBBBB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'WBBBWWBW\\r\\nWBBBWWBW\\r\\nBBBBBBBB\\r\\nWBBBWWBW\\r\\nBBBBBBBB\\r\\nWBBBWWBW\\r\\nWBBBWWBW\\r\\nWBBBWWBW\\r\\n', 'output': ['6']}, {'input': 'WBBBBWBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBBWBB\\r\\nWBBBBWBB\\r\\nBBBBBBBB\\r\\nWBBBBWBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\n', 'output': ['11']}, {'input': 'BBBBBBBB\\r\\nBWBBBBBW\\r\\nBWBBBBBW\\r\\nBBBBBBBB\\r\\nBWBBBBBW\\r\\nBWBBBBBW\\r\\nBBBBBBBB\\r\\nBWBBBBBW\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'BWBBBWWB\\r\\nBWBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBWBWB\\r\\n', 'output': ['12']}, {'input': 'BWBBBBWW\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBBBBBBBB\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}, {'input': 'WWBBWWBB\\r\\nBBBBBBBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\nBBBBBBBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\n', 'output': ['6']}, {'input': 'BWBBWWWW\\r\\nBWBBWWWW\\r\\nBWBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBWWWW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, count;\n  char c;\n  int num[64];\n  for (int i = 0; i < 8; i++) {\n    for (int j = 0; j < 8; j++) {\n      cin >> c;\n      num[j + i * 8] = c - '0';\n    }\n  }\n  count = 0;\n  for (int i = 0; i < 64; i++) {\n    if (num[i] == 1) count++;\n  }\n  cout << ceil(count / 8.0) << endl;\n  return 0;\n}\n"}
{"src_uid": "c3244e952830643938d51ce14f043d7d", "id": 19, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': 'atob\\r\\na\\r\\nb\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aaacaaa\\r\\naca\\r\\naa\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aaa\\r\\naa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'astalavista\\r\\nastla\\r\\nlavista\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'abacabadabacaba\\r\\nabacaba\\r\\nabacaba\\r\\n', 'output': ['both\\r\\n']}, {'input': 'a\\r\\na\\r\\na\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'ab\\r\\nb\\r\\na\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaa\\r\\naaaa\\r\\naaaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'bbabbbbababbaabaabaa\\r\\nabb\\r\\nbaab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'babaabababaaaababaabababaabababababababbababbbabbaabababaababbaabbababaababaaabababaabbaababaaababaa\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aababaaababaabbaabababaaababaabababbaabbabaabababaabbabbbababbababababababaabababaababaaaabababaabab\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaaa\\r\\naaa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzzzz\\r\\nzzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzz\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aabaa\\r\\naab\\r\\nbaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'aabaab\\r\\naba\\r\\nab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aab\\r\\nb\\r\\naa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'abacaba\\r\\naca\\r\\nba\\r\\n', 'output': ['both\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, f, b, t1, t2, s1, s2;\n  cin >> s >> f >> b;\n  sort(s.begin(), s.end());\n  sort(f.begin(), f.end());\n  sort(b.begin(), b.end());\n  int k = 0;\n  for (int i = 0; i < f.size(); i++)\n    if (f[i] == s[i]) k++;\n  t1 = f.substr(k) + f.substr(0, k);\n  for (int i = 0; i < b.size(); i++)\n    if (b[i] == s[i]) k++;\n  t2 = b.substr(k) + b.substr(0, k);\n  k = 0;\n  for (int i = 0; i < s.size(); i++)\n    if (s[i] == t1[i]) k++;\n  s1 = t1.substr(k) + t1.substr(0, k);\n  for (int i = 0; i < s.size(); i++)\n    if (s[i] == t2[i]) k++;\n  s2 = t2.substr(k) + t2.substr(0, k);\n  if (s1 == f && s2 == b)\n    cout << \"both\" << endl;\n  else if (s1 == f)\n    cout << \"forward\" << endl;\n  else if (s2 == b)\n    cout << \"backward\" << endl;\n  else\n    cout << \"fantasy\" << endl;\n}\n"}
{"src_uid": "c3244e952830643938d51ce14f043d7d", "id": 19, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': 'atob\\r\\na\\r\\nb\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aaacaaa\\r\\naca\\r\\naa\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aaa\\r\\naa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'astalavista\\r\\nastla\\r\\nlavista\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'abacabadabacaba\\r\\nabacaba\\r\\nabacaba\\r\\n', 'output': ['both\\r\\n']}, {'input': 'a\\r\\na\\r\\na\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'ab\\r\\nb\\r\\na\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaa\\r\\naaaa\\r\\naaaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'bbabbbbababbaabaabaa\\r\\nabb\\r\\nbaab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'babaabababaaaababaabababaabababababababbababbbabbaabababaababbaabbababaababaaabababaabbaababaaababaa\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aababaaababaabbaabababaaababaabababbaabbabaabababaabbabbbababbababababababaabababaababaaaabababaabab\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaaa\\r\\naaa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzzzz\\r\\nzzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzz\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aabaa\\r\\naab\\r\\nbaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'aabaab\\r\\naba\\r\\nab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aab\\r\\nb\\r\\naa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'abacaba\\r\\naca\\r\\nba\\r\\n', 'output': ['both\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nchar s[1000010], l[1010], r[1010];\nint main() {\n  int i = 0, j = 0, k = 0, cnt = 0;\n  bool a = false, b = false;\n  scanf(\"%s\", s);\n  while (s[i]) l[j++] = s[i++];\n  scanf(\"%s\", r);\n  int len1 = strlen(l), len2 = strlen(r);\n  for (i = 0; i < len1 - len2 + 1; i++) {\n    cnt = 0;\n    for (j = 0; j < len2; j++) {\n      if (l[i + j]!= r[j]) cnt++;\n    }\n    if (cnt > 3) {\n      puts(\"both\");\n      return 0;\n    } else if (cnt <= 3 &&!a) {\n      a = true;\n    }\n  }\n  if (!a)\n    puts(\"fantasy\");\n  else {\n    k = i;\n    for (i = len1 - 1; i >= k; i--) {\n      cnt = 0;\n      for (j = 0; j < len2; j++) {\n        if (l[i - j]!= r[j]) cnt++;\n      }\n      if (cnt > 3) {\n        puts(\"both\");\n        return 0;\n      } else if (cnt <= 3 &&!b) {\n        b = true;\n      }\n    }\n    if (b)\n      puts(\"backward\");\n    else\n      puts(\"fantasy\");\n  }\n  return 0;\n}\n"}
{"src_uid": "c3244e952830643938d51ce14f043d7d", "id": 19, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': 'atob\\r\\na\\r\\nb\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aaacaaa\\r\\naca\\r\\naa\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aaa\\r\\naa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'astalavista\\r\\nastla\\r\\nlavista\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'abacabadabacaba\\r\\nabacaba\\r\\nabacaba\\r\\n', 'output': ['both\\r\\n']}, {'input': 'a\\r\\na\\r\\na\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'ab\\r\\nb\\r\\na\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaa\\r\\naaaa\\r\\naaaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'bbabbbbababbaabaabaa\\r\\nabb\\r\\nbaab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'babaabababaaaababaabababaabababababababbababbbabbaabababaababbaabbababaababaaabababaabbaababaaababaa\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aababaaababaabbaabababaaababaabababbaabbabaabababaabbabbbababbababababababaabababaababaaaabababaabab\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaaa\\r\\naaa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzzzz\\r\\nzzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzz\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aabaa\\r\\naab\\r\\nbaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'aabaab\\r\\naba\\r\\nab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aab\\r\\nb\\r\\naa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'abacaba\\r\\naca\\r\\nba\\r\\n', 'output': ['both\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[100010], b[100010], s1[2][200], s2[2][200], res1[2][200], res2[2][200];\nint main() {\n  while (~scanf(\"%s\", a)) {\n    scanf(\"%s\", b);\n    int len = strlen(a);\n    for (int i = 0; i < len; i++) {\n      s1[0][res1[0]] = a[i];\n      res1[0] = (res1[0] + 1) % 2;\n    }\n    for (int i = 0; i < len; i++) {\n      s1[1][res1[1]] = a[len - i - 1];\n      res1[1] = (res1[1] + 1) % 2;\n    }\n    for (int i = 0; i < strlen(b); i++) {\n      s2[0][res2[0]] = b[i];\n      res2[0] = (res2[0] + 1) % 2;\n    }\n    for (int i = 0; i < strlen(b); i++) {\n      s2[1][res2[1]] = b[strlen(b) - i - 1];\n      res2[1] = (res2[1] + 1) % 2;\n    }\n    if (memcmp(s1[0], s2[1], 200) == 0 && memcmp(s1[1], s2[0], 200) == 0) {\n      printf(\"both\\n\");\n    } else if (memcmp(s1[0], s2[0], 200) == 0 &&\n               memcmp(s1[1], s2[1], 200) == 0) {\n      printf(\"forward\\n\");\n    } else if (memcmp(s1[0], s2[1], 200) == 0 &&\n               memcmp(s1[1], s2[0], 200) == 0) {\n      printf(\"backward\\n\");\n    } else {\n      printf(\"fantasy\\n\");\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "c3244e952830643938d51ce14f043d7d", "id": 19, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': 'atob\\r\\na\\r\\nb\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aaacaaa\\r\\naca\\r\\naa\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aaa\\r\\naa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'astalavista\\r\\nastla\\r\\nlavista\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'abacabadabacaba\\r\\nabacaba\\r\\nabacaba\\r\\n', 'output': ['both\\r\\n']}, {'input': 'a\\r\\na\\r\\na\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'ab\\r\\nb\\r\\na\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaa\\r\\naaaa\\r\\naaaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'bbabbbbababbaabaabaa\\r\\nabb\\r\\nbaab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'babaabababaaaababaabababaabababababababbababbbabbaabababaababbaabbababaababaaabababaabbaababaaababaa\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aababaaababaabbaabababaaababaabababbaabbabaabababaabbabbbababbababababababaabababaababaaaabababaabab\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaaa\\r\\naaa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzzzz\\r\\nzzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzz\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aabaa\\r\\naab\\r\\nbaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'aabaab\\r\\naba\\r\\nab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aab\\r\\nb\\r\\naa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'abacaba\\r\\naca\\r\\nba\\r\\n', 'output': ['both\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, a, b;\n  getline(cin, s);\n  getline(cin, a);\n  getline(cin, b);\n  int x = 0, y = 0;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == a[0]) x = 1;\n    if (s[i] == b[0]) y = 1;\n  }\n  if (x == 1 && y == 1)\n    cout << \"both\\n\";\n  else if (x == 1)\n    cout << \"forward\\n\";\n  else if (y == 1)\n    cout << \"backward\\n\";\n  else\n    cout << \"fantasy\\n\";\n}\n"}
{"src_uid": "c3244e952830643938d51ce14f043d7d", "id": 19, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': 'atob\\r\\na\\r\\nb\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aaacaaa\\r\\naca\\r\\naa\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aaa\\r\\naa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'astalavista\\r\\nastla\\r\\nlavista\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'abacabadabacaba\\r\\nabacaba\\r\\nabacaba\\r\\n', 'output': ['both\\r\\n']}, {'input': 'a\\r\\na\\r\\na\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'ab\\r\\nb\\r\\na\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaa\\r\\naaaa\\r\\naaaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'bbabbbbababbaabaabaa\\r\\nabb\\r\\nbaab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'babaabababaaaababaabababaabababababababbababbbabbaabababaababbaabbababaababaaabababaabbaababaaababaa\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aababaaababaabbaabababaaababaabababbaabbabaabababaabbabbbababbababababababaabababaababaaaabababaabab\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaaa\\r\\naaa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzzzz\\r\\nzzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzz\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aabaa\\r\\naab\\r\\nbaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'aabaab\\r\\naba\\r\\nab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aab\\r\\nb\\r\\naa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'abacaba\\r\\naca\\r\\nba\\r\\n', 'output': ['both\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, s1, s2;\n  cin >> s >> s1 >> s2;\n  string tmp;\n  int p = 0;\n  for (char i : s) {\n    tmp += i;\n    if (tmp == s1) {\n      p = 1;\n      break;\n    }\n  }\n  if (p)\n    tmp.clear();\n  else {\n    tmp = s;\n    reverse(tmp.begin(), tmp.end());\n  }\n  int p2 = 0;\n  p = 0;\n  for (char i : tmp) {\n    p++;\n    if (i == s2[p2]) p2++;\n    if (p2 == s2.size()) break;\n  }\n  if (p == s.size() && p2 == s2.size()) {\n    cout << \"both\" << endl;\n  } else if (p == s.size()) {\n    cout << \"forward\" << endl;\n  } else if (p2 == s2.size()) {\n    cout << \"backward\" << endl;\n  } else\n    cout << \"fantasy\" << endl;\n  return 0;\n}\n"}
{"src_uid": "15fa49860e978d3b3fb7a20bf9f8aa86", "id": 20, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '4 5 2\\r\\n0 2 4 6\\r\\n4 1\\r\\n', 'output': ['3']}, {'input': '2 1 1\\r\\n0 100000\\r\\n100000 100000\\r\\n', 'output': ['2']}, {'input': '6 5 1\\r\\n0 1 2 3 4 5\\r\\n0 0\\r\\n', 'output': ['2']}, {'input': '4 100 10\\r\\n0 118 121 178\\r\\n220 220\\r\\n', 'output': ['4']}, {'input': '4 3 3\\r\\n0 6 8 10\\r\\n7 -4\\r\\n', 'output': ['2']}, {'input': '5 900 1\\r\\n0 37474 80030 85359 97616\\r\\n-1 -1\\r\\n', 'output': ['2']}, {'input': '5 200 400\\r\\n0 8068 28563 51720 66113\\r\\n5423 -34\\r\\n', 'output': ['2']}, {'input': '6 10 3\\r\\n0 12 14 16 19 20\\r\\n14 0\\r\\n', 'output': ['3']}, {'input': '6 13 11\\r\\n0 16 27 31 39 42\\r\\n54 3\\r\\n', 'output': ['6']}, {'input': '11 853 721\\r\\n0 134 1971 2369 3381 3997 4452 6875 8983 9360 9399\\r\\n7345 333\\r\\n', 'output': ['8']}, {'input': '35 35 12\\r\\n0 90486 90543 90763 91127 91310 92047 92405 93654 93814 94633 94752 94969 94994 95287 96349 96362 96723 96855 96883 97470 97482 97683 97844 97926 98437 98724 98899 98921 99230 99253 99328 99444 99691 99947\\r\\n96233 -7777\\r\\n', 'output': ['9']}, {'input': '55 11 44\\r\\n0 3343 3387 3470 3825 3832 3971 4026 4043 4389 4492 4886 5015 5084 5161 5436 5595 5616 5677 5987 6251 6312 6369 6469 6487 6493 6507 6641 6928 7067 7159 7280 7303 7385 7387 7465 7536 7572 7664 7895 7921 7955 8110 8191 8243 8280 8523 8525 8581 8877 9221 9462 9505 9594 9596\\r\\n8000 0\\r\\n', 'output': ['2']}, {'input': '72 1000 777\\r\\n0 215 2814 5104 5226 5925 6734 9213 11697 13739 14015 16101 17234 19013 19566 19683 20283 20837 21332 21432 25490 26284 27728 29911 30112 30133 31494 31595 32499 32932 33289 36611 37736 43548 44440 44537 47656 47699 48327 50942 52178 53759 56925 57671 62024 65441 67958 70346 71606 75235 75466 75553 75905 76173 76512 77784 78183 80425 81339 81543 84537 88384 89953 90214 92107 92274 93328 93550 93987 97546 99459 99532\\r\\n63421 35\\r\\n', 'output': ['45']}, {'input': '76 1 1\\r\\n0 1000 1754 2749 3687 4983 8121 10299 11043 12986 14125 15910 17070 17189 17551 17953 17973 20816 25436 26150 27446 27788 28466 28941 29537 33965 37566 40845 40930 41304 41614 41615 43042 45098 45844 49878 50453 50936 55480 58410 59258 59287 62789 64127 64333 64450 64862 65404 66451 67626 69294 69804 71988 72165 74196 74560 75407 76611 77055 77344 79470 83566 84550 87458 87627 88205 89880 90255 90586 91970 93795 95308 99032 99442 99547 99549\\r\\n0 0\\r\\n', 'output': ['2']}, {'input': '94 2 1\\r\\n0 5000 5001 5002 5003 5004 5005 5006 5007 5008 5009 5010 5011 5012 5013 5014 5015 5016 5017 5018 5019 5020 5021 5022 5023 5024 5025 5026 5027 5028 5029 5030 5031 5032 5033 5034 5035 5036 5037 5038 5040 5041 5042 5043 5044 5045 5046 5047 5048 5049 5050 5051 5052 5053 5054 5055 5056 5057 5058 5059 5060 5061 5062 5063 5064 5065 5066 5067 5068 5069 5070 5071 5072 5073 5074 5075 5076 5077 5078 5079 5080 5081 5082 5083 5084 5085 5086 5087 5088 5089 5090 5091 5092 5093\\r\\n5050 -100000\\r\\n', 'output': ['2']}, {'input': '100 1 2\\r\\n0 1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n100 0\\r\\n', 'output': ['2']}, {'input': '100 1000 1\\r\\n0 505 506 514 515 520 523 527 529 530 538 547 550 554 559 562 566 568 569 580 582 584 588 597 609 621 624 629 630 631 634 641 646 653 657 666 673 678 680 683 685 690 695 698 699 700 705 709 716 731 734 735 736 738 756 761 762 765 769 772 776 779 784 790 794 812 814 816 833 837 842 845 850 854 855 863 868 872 882 892 893 898 899 900 901 902 915 916 917 932 936 954 962 968 975 978 983 992 996 998\\r\\n600 7778\\r\\n', 'output': ['23']}, {'input': '2 1 1\\r\\n0 100000\\r\\n-100000 -100000\\r\\n', 'output': ['2']}, {'input': '2 1000 1000\\r\\n0 1\\r\\n1 0\\r\\n', 'output': ['2']}, {'input': '3 1 1\\r\\n0 1 2\\r\\n2 0\\r\\n', 'output': ['3']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, v[200], u, v, a[1000010], r = 1, p, q, Min = 0x7fffffff;\nint main() {\n  scanf(\"%d%d%d\", &n, &v[0], &v[1]), r = v[0]? r : -1;\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  scanf(\"%d%d\", &u, &v);\n  for (int i = r; i < n; i++) {\n    p = v * a[i] + u * sqrt((v * v * a[i] + 2 * u * v * (a[i] - a[i + 1])) *\n                              (v * v * a[i] + 2 * u * v * (a[i] - a[i + 1])) -\n                              v * v * (a[i] - a[i + 1]) *\n                                  (a[i] - a[i + 1]));\n    q = v * (a[i] - a[i + 1]) + u * sqrt(\n          v * v * (a[i] - a[i + 1]) * (a[i] - a[i + 1]) +\n          2 * u * v * (v * (a[i] - a[i + 1]) + u * sqrt(\n                           v * v * (a[i] - a[i + 1]) * (a[i] - a[i + 1]) -\n                           v * v * (a[i] - a[i + 1]) * (a[i] - a[i + 1]))) +\n          v * (v * (a[i] - a[i + 1]) + u * sqrt(\n                  v * v * (a[i] - a[i + 1]) * (a[i] - a[i + 1]) -\n                  v * v * (a[i] - a[i + 1]) * (a[i] - a[i + 1]))) *\n              (v * (a[i] - a[i + 1]) + u * sqrt(\n                      v * v * (a[i] - a[i + 1]) * (a[i] - a[i + 1]) -\n                      v * v * (a[i] - a[i + 1]) * (a[i] - a[i + 1]))));\n    if (Min > q || (Min == q && a[i] < a[r])) {\n      Min = q;\n      r = i;\n    }\n  }\n  printf(\"%d\", r + 1);\n  return 0;\n}\n"}
{"src_uid": "15fa49860e978d3b3fb7a20bf9f8aa86", "id": 20, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '4 5 2\\r\\n0 2 4 6\\r\\n4 1\\r\\n', 'output': ['3']}, {'input': '2 1 1\\r\\n0 100000\\r\\n100000 100000\\r\\n', 'output': ['2']}, {'input': '6 5 1\\r\\n0 1 2 3 4 5\\r\\n0 0\\r\\n', 'output': ['2']}, {'input': '4 100 10\\r\\n0 118 121 178\\r\\n220 220\\r\\n', 'output': ['4']}, {'input': '4 3 3\\r\\n0 6 8 10\\r\\n7 -4\\r\\n', 'output': ['2']}, {'input': '5 900 1\\r\\n0 37474 80030 85359 97616\\r\\n-1 -1\\r\\n', 'output': ['2']}, {'input': '5 200 400\\r\\n0 8068 28563 51720 66113\\r\\n5423 -34\\r\\n', 'output': ['2']}, {'input': '6 10 3\\r\\n0 12 14 16 19 20\\r\\n14 0\\r\\n', 'output': ['3']}, {'input': '6 13 11\\r\\n0 16 27 31 39 42\\r\\n54 3\\r\\n', 'output': ['6']}, {'input': '11 853 721\\r\\n0 134 1971 2369 3381 3997 4452 6875 8983 9360 9399\\r\\n7345 333\\r\\n', 'output': ['8']}, {'input': '35 35 12\\r\\n0 90486 90543 90763 91127 91310 92047 92405 93654 93814 94633 94752 94969 94994 95287 96349 96362 96723 96855 96883 97470 97482 97683 97844 97926 98437 98724 98899 98921 99230 99253 99328 99444 99691 99947\\r\\n96233 -7777\\r\\n', 'output': ['9']}, {'input': '55 11 44\\r\\n0 3343 3387 3470 3825 3832 3971 4026 4043 4389 4492 4886 5015 5084 5161 5436 5595 5616 5677 5987 6251 6312 6369 6469 6487 6493 6507 6641 6928 7067 7159 7280 7303 7385 7387 7465 7536 7572 7664 7895 7921 7955 8110 8191 8243 8280 8523 8525 8581 8877 9221 9462 9505 9594 9596\\r\\n8000 0\\r\\n', 'output': ['2']}, {'input': '72 1000 777\\r\\n0 215 2814 5104 5226 5925 6734 9213 11697 13739 14015 16101 17234 19013 19566 19683 20283 20837 21332 21432 25490 26284 27728 29911 30112 30133 31494 31595 32499 32932 33289 36611 37736 43548 44440 44537 47656 47699 48327 50942 52178 53759 56925 57671 62024 65441 67958 70346 71606 75235 75466 75553 75905 76173 76512 77784 78183 80425 81339 81543 84537 88384 89953 90214 92107 92274 93328 93550 93987 97546 99459 99532\\r\\n63421 35\\r\\n', 'output': ['45']}, {'input': '76 1 1\\r\\n0 1000 1754 2749 3687 4983 8121 10299 11043 12986 14125 15910 17070 17189 17551 17953 17973 20816 25436 26150 27446 27788 28466 28941 29537 33965 37566 40845 40930 41304 41614 41615 43042 45098 45844 49878 50453 50936 55480 58410 59258 59287 62789 64127 64333 64450 64862 65404 66451 67626 69294 69804 71988 72165 74196 74560 75407 76611 77055 77344 79470 83566 84550 87458 87627 88205 89880 90255 90586 91970 93795 95308 99032 99442 99547 99549\\r\\n0 0\\r\\n', 'output': ['2']}, {'input': '94 2 1\\r\\n0 5000 5001 5002 5003 5004 5005 5006 5007 5008 5009 5010 5011 5012 5013 5014 5015 5016 5017 5018 5019 5020 5021 5022 5023 5024 5025 5026 5027 5028 5029 5030 5031 5032 5033 5034 5035 5036 5037 5038 5040 5041 5042 5043 5044 5045 5046 5047 5048 5049 5050 5051 5052 5053 5054 5055 5056 5057 5058 5059 5060 5061 5062 5063 5064 5065 5066 5067 5068 5069 5070 5071 5072 5073 5074 5075 5076 5077 5078 5079 5080 5081 5082 5083 5084 5085 5086 5087 5088 5089 5090 5091 5092 5093\\r\\n5050 -100000\\r\\n', 'output': ['2']}, {'input': '100 1 2\\r\\n0 1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n100 0\\r\\n', 'output': ['2']}, {'input': '100 1000 1\\r\\n0 505 506 514 515 520 523 527 529 530 538 547 550 554 559 562 566 568 569 580 582 584 588 597 609 621 624 629 630 631 634 641 646 653 657 666 673 678 680 683 685 690 695 698 699 700 705 709 716 731 734 735 736 738 756 761 762 765 769 772 776 779 784 790 794 812 814 816 833 837 842 845 850 854 855 863 868 872 882 892 893 898 899 900 901 902 915 916 917 932 936 954 962 968 975 978 983 992 996 998\\r\\n600 7778\\r\\n', 'output': ['23']}, {'input': '2 1 1\\r\\n0 100000\\r\\n-100000 -100000\\r\\n', 'output': ['2']}, {'input': '2 1000 1000\\r\\n0 1\\r\\n1 0\\r\\n', 'output': ['2']}, {'input': '3 1 1\\r\\n0 1 2\\r\\n2 0\\r\\n', 'output': ['3']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, vb, vs;\n  scanf(\"%d %d %d\", &n, &vb, &vs);\n  int x[n];\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &x[i]);\n  }\n  int ans = -1;\n  int yu, xu;\n  scanf(\"%d %d\", &yu, &xu);\n  for (int i = 1; i <= n; i++) {\n    if (abs(x[i] - xu) * vs + abs(i - 1) * vb <= abs(yu - x[i]) * vs) {\n      ans = i;\n    }\n  }\n  printf(\"%d\", ans);\n  return 0;\n}\n"}
{"src_uid": "15fa49860e978d3b3fb7a20bf9f8aa86", "id": 20, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '4 5 2\\r\\n0 2 4 6\\r\\n4 1\\r\\n', 'output': ['3']}, {'input': '2 1 1\\r\\n0 100000\\r\\n100000 100000\\r\\n', 'output': ['2']}, {'input': '6 5 1\\r\\n0 1 2 3 4 5\\r\\n0 0\\r\\n', 'output': ['2']}, {'input': '4 100 10\\r\\n0 118 121 178\\r\\n220 220\\r\\n', 'output': ['4']}, {'input': '4 3 3\\r\\n0 6 8 10\\r\\n7 -4\\r\\n', 'output': ['2']}, {'input': '5 900 1\\r\\n0 37474 80030 85359 97616\\r\\n-1 -1\\r\\n', 'output': ['2']}, {'input': '5 200 400\\r\\n0 8068 28563 51720 66113\\r\\n5423 -34\\r\\n', 'output': ['2']}, {'input': '6 10 3\\r\\n0 12 14 16 19 20\\r\\n14 0\\r\\n', 'output': ['3']}, {'input': '6 13 11\\r\\n0 16 27 31 39 42\\r\\n54 3\\r\\n', 'output': ['6']}, {'input': '11 853 721\\r\\n0 134 1971 2369 3381 3997 4452 6875 8983 9360 9399\\r\\n7345 333\\r\\n', 'output': ['8']}, {'input': '35 35 12\\r\\n0 90486 90543 90763 91127 91310 92047 92405 93654 93814 94633 94752 94969 94994 95287 96349 96362 96723 96855 96883 97470 97482 97683 97844 97926 98437 98724 98899 98921 99230 99253 99328 99444 99691 99947\\r\\n96233 -7777\\r\\n', 'output': ['9']}, {'input': '55 11 44\\r\\n0 3343 3387 3470 3825 3832 3971 4026 4043 4389 4492 4886 5015 5084 5161 5436 5595 5616 5677 5987 6251 6312 6369 6469 6487 6493 6507 6641 6928 7067 7159 7280 7303 7385 7387 7465 7536 7572 7664 7895 7921 7955 8110 8191 8243 8280 8523 8525 8581 8877 9221 9462 9505 9594 9596\\r\\n8000 0\\r\\n', 'output': ['2']}, {'input': '72 1000 777\\r\\n0 215 2814 5104 5226 5925 6734 9213 11697 13739 14015 16101 17234 19013 19566 19683 20283 20837 21332 21432 25490 26284 27728 29911 30112 30133 31494 31595 32499 32932 33289 36611 37736 43548 44440 44537 47656 47699 48327 50942 52178 53759 56925 57671 62024 65441 67958 70346 71606 75235 75466 75553 75905 76173 76512 77784 78183 80425 81339 81543 84537 88384 89953 90214 92107 92274 93328 93550 93987 97546 99459 99532\\r\\n63421 35\\r\\n', 'output': ['45']}, {'input': '76 1 1\\r\\n0 1000 1754 2749 3687 4983 8121 10299 11043 12986 14125 15910 17070 17189 17551 17953 17973 20816 25436 26150 27446 27788 28466 28941 29537 33965 37566 40845 40930 41304 41614 41615 43042 45098 45844 49878 50453 50936 55480 58410 59258 59287 62789 64127 64333 64450 64862 65404 66451 67626 69294 69804 71988 72165 74196 74560 75407 76611 77055 77344 79470 83566 84550 87458 87627 88205 89880 90255 90586 91970 93795 95308 99032 99442 99547 99549\\r\\n0 0\\r\\n', 'output': ['2']}, {'input': '94 2 1\\r\\n0 5000 5001 5002 5003 5004 5005 5006 5007 5008 5009 5010 5011 5012 5013 5014 5015 5016 5017 5018 5019 5020 5021 5022 5023 5024 5025 5026 5027 5028 5029 5030 5031 5032 5033 5034 5035 5036 5037 5038 5040 5041 5042 5043 5044 5045 5046 5047 5048 5049 5050 5051 5052 5053 5054 5055 5056 5057 5058 5059 5060 5061 5062 5063 5064 5065 5066 5067 5068 5069 5070 5071 5072 5073 5074 5075 5076 5077 5078 5079 5080 5081 5082 5083 5084 5085 5086 5087 5088 5089 5090 5091 5092 5093\\r\\n5050 -100000\\r\\n', 'output': ['2']}, {'input': '100 1 2\\r\\n0 1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n100 0\\r\\n', 'output': ['2']}, {'input': '100 1000 1\\r\\n0 505 506 514 515 520 523 527 529 530 538 547 550 554 559 562 566 568 569 580 582 584 588 597 609 621 624 629 630 631 634 641 646 653 657 666 673 678 680 683 685 690 695 698 699 700 705 709 716 731 734 735 736 738 756 761 762 765 769 772 776 779 784 790 794 812 814 816 833 837 842 845 850 854 855 863 868 872 882 892 893 898 899 900 901 902 915 916 917 932 936 954 962 968 975 978 983 992 996 998\\r\\n600 7778\\r\\n', 'output': ['23']}, {'input': '2 1 1\\r\\n0 100000\\r\\n-100000 -100000\\r\\n', 'output': ['2']}, {'input': '2 1000 1000\\r\\n0 1\\r\\n1 0\\r\\n', 'output': ['2']}, {'input': '3 1 1\\r\\n0 1 2\\r\\n2 0\\r\\n', 'output': ['3']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, vb, vs;\n  cin >> n >> vb >> vs;\n  vector<int> x(n);\n  for (int i = 0; i < n; i++) {\n    cin >> x[i];\n  }\n  int ux, uy;\n  cin >> ux >> uy;\n  int minx = 1e8, ans = 1;\n  for (int i = 0; i < n; i++) {\n    int d1 = 114514;\n    int d2 = 114514;\n    int xx = x[i] * vb + ux;\n    d1 = abs(xx - ux);\n    if (uy - 1e5 <= 0) {\n      d2 = uy;\n    } else {\n      d2 = abs(uy - uy);\n    }\n    int res = vs * (d1 - d2);\n    if (res < minx) {\n      minx = res;\n      ans = i + 1;\n    }\n  }\n  cout << ans;\n  return 0;\n}\n"}
{"src_uid": "15fa49860e978d3b3fb7a20bf9f8aa86", "id": 20, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '4 5 2\\r\\n0 2 4 6\\r\\n4 1\\r\\n', 'output': ['3']}, {'input': '2 1 1\\r\\n0 100000\\r\\n100000 100000\\r\\n', 'output': ['2']}, {'input': '6 5 1\\r\\n0 1 2 3 4 5\\r\\n0 0\\r\\n', 'output': ['2']}, {'input': '4 100 10\\r\\n0 118 121 178\\r\\n220 220\\r\\n', 'output': ['4']}, {'input': '4 3 3\\r\\n0 6 8 10\\r\\n7 -4\\r\\n', 'output': ['2']}, {'input': '5 900 1\\r\\n0 37474 80030 85359 97616\\r\\n-1 -1\\r\\n', 'output': ['2']}, {'input': '5 200 400\\r\\n0 8068 28563 51720 66113\\r\\n5423 -34\\r\\n', 'output': ['2']}, {'input': '6 10 3\\r\\n0 12 14 16 19 20\\r\\n14 0\\r\\n', 'output': ['3']}, {'input': '6 13 11\\r\\n0 16 27 31 39 42\\r\\n54 3\\r\\n', 'output': ['6']}, {'input': '11 853 721\\r\\n0 134 1971 2369 3381 3997 4452 6875 8983 9360 9399\\r\\n7345 333\\r\\n', 'output': ['8']}, {'input': '35 35 12\\r\\n0 90486 90543 90763 91127 91310 92047 92405 93654 93814 94633 94752 94969 94994 95287 96349 96362 96723 96855 96883 97470 97482 97683 97844 97926 98437 98724 98899 98921 99230 99253 99328 99444 99691 99947\\r\\n96233 -7777\\r\\n', 'output': ['9']}, {'input': '55 11 44\\r\\n0 3343 3387 3470 3825 3832 3971 4026 4043 4389 4492 4886 5015 5084 5161 5436 5595 5616 5677 5987 6251 6312 6369 6469 6487 6493 6507 6641 6928 7067 7159 7280 7303 7385 7387 7465 7536 7572 7664 7895 7921 7955 8110 8191 8243 8280 8523 8525 8581 8877 9221 9462 9505 9594 9596\\r\\n8000 0\\r\\n', 'output': ['2']}, {'input': '72 1000 777\\r\\n0 215 2814 5104 5226 5925 6734 9213 11697 13739 14015 16101 17234 19013 19566 19683 20283 20837 21332 21432 25490 26284 27728 29911 30112 30133 31494 31595 32499 32932 33289 36611 37736 43548 44440 44537 47656 47699 48327 50942 52178 53759 56925 57671 62024 65441 67958 70346 71606 75235 75466 75553 75905 76173 76512 77784 78183 80425 81339 81543 84537 88384 89953 90214 92107 92274 93328 93550 93987 97546 99459 99532\\r\\n63421 35\\r\\n', 'output': ['45']}, {'input': '76 1 1\\r\\n0 1000 1754 2749 3687 4983 8121 10299 11043 12986 14125 15910 17070 17189 17551 17953 17973 20816 25436 26150 27446 27788 28466 28941 29537 33965 37566 40845 40930 41304 41614 41615 43042 45098 45844 49878 50453 50936 55480 58410 59258 59287 62789 64127 64333 64450 64862 65404 66451 67626 69294 69804 71988 72165 74196 74560 75407 76611 77055 77344 79470 83566 84550 87458 87627 88205 89880 90255 90586 91970 93795 95308 99032 99442 99547 99549\\r\\n0 0\\r\\n', 'output': ['2']}, {'input': '94 2 1\\r\\n0 5000 5001 5002 5003 5004 5005 5006 5007 5008 5009 5010 5011 5012 5013 5014 5015 5016 5017 5018 5019 5020 5021 5022 5023 5024 5025 5026 5027 5028 5029 5030 5031 5032 5033 5034 5035 5036 5037 5038 5040 5041 5042 5043 5044 5045 5046 5047 5048 5049 5050 5051 5052 5053 5054 5055 5056 5057 5058 5059 5060 5061 5062 5063 5064 5065 5066 5067 5068 5069 5070 5071 5072 5073 5074 5075 5076 5077 5078 5079 5080 5081 5082 5083 5084 5085 5086 5087 5088 5089 5090 5091 5092 5093\\r\\n5050 -100000\\r\\n', 'output': ['2']}, {'input': '100 1 2\\r\\n0 1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n100 0\\r\\n', 'output': ['2']}, {'input': '100 1000 1\\r\\n0 505 506 514 515 520 523 527 529 530 538 547 550 554 559 562 566 568 569 580 582 584 588 597 609 621 624 629 630 631 634 641 646 653 657 666 673 678 680 683 685 690 695 698 699 700 705 709 716 731 734 735 736 738 756 761 762 765 769 772 776 779 784 790 794 812 814 816 833 837 842 845 850 854 855 863 868 872 882 892 893 898 899 900 901 902 915 916 917 932 936 954 962 968 975 978 983 992 996 998\\r\\n600 7778\\r\\n', 'output': ['23']}, {'input': '2 1 1\\r\\n0 100000\\r\\n-100000 -100000\\r\\n', 'output': ['2']}, {'input': '2 1000 1000\\r\\n0 1\\r\\n1 0\\r\\n', 'output': ['2']}, {'input': '3 1 1\\r\\n0 1 2\\r\\n2 0\\r\\n', 'output': ['3']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, vp, v, xu, yu, x;\n  int a[100];\n  long long dis = 10000000000, disi = 10000000000;\n  cin >> n >> vp >> v;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  cin >> xu >> yu;\n  for (int i = 1; i < n; i++) {\n    x = vp * i;\n    long long dist = (x - xu) * (x - xu) + yu * yu;\n    if (dist < dis) {\n      disi = i;\n      dis = dist;\n    }\n  }\n  cout << disi + 1 << endl;\n  return 0;\n}\n"}
{"src_uid": "15fa49860e978d3b3fb7a20bf9f8aa86", "id": 20, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '4 5 2\\r\\n0 2 4 6\\r\\n4 1\\r\\n', 'output': ['3']}, {'input': '2 1 1\\r\\n0 100000\\r\\n100000 100000\\r\\n', 'output': ['2']}, {'input': '6 5 1\\r\\n0 1 2 3 4 5\\r\\n0 0\\r\\n', 'output': ['2']}, {'input': '4 100 10\\r\\n0 118 121 178\\r\\n220 220\\r\\n', 'output': ['4']}, {'input': '4 3 3\\r\\n0 6 8 10\\r\\n7 -4\\r\\n', 'output': ['2']}, {'input': '5 900 1\\r\\n0 37474 80030 85359 97616\\r\\n-1 -1\\r\\n', 'output': ['2']}, {'input': '5 200 400\\r\\n0 8068 28563 51720 66113\\r\\n5423 -34\\r\\n', 'output': ['2']}, {'input': '6 10 3\\r\\n0 12 14 16 19 20\\r\\n14 0\\r\\n', 'output': ['3']}, {'input': '6 13 11\\r\\n0 16 27 31 39 42\\r\\n54 3\\r\\n', 'output': ['6']}, {'input': '11 853 721\\r\\n0 134 1971 2369 3381 3997 4452 6875 8983 9360 9399\\r\\n7345 333\\r\\n', 'output': ['8']}, {'input': '35 35 12\\r\\n0 90486 90543 90763 91127 91310 92047 92405 93654 93814 94633 94752 94969 94994 95287 96349 96362 96723 96855 96883 97470 97482 97683 97844 97926 98437 98724 98899 98921 99230 99253 99328 99444 99691 99947\\r\\n96233 -7777\\r\\n', 'output': ['9']}, {'input': '55 11 44\\r\\n0 3343 3387 3470 3825 3832 3971 4026 4043 4389 4492 4886 5015 5084 5161 5436 5595 5616 5677 5987 6251 6312 6369 6469 6487 6493 6507 6641 6928 7067 7159 7280 7303 7385 7387 7465 7536 7572 7664 7895 7921 7955 8110 8191 8243 8280 8523 8525 8581 8877 9221 9462 9505 9594 9596\\r\\n8000 0\\r\\n', 'output': ['2']}, {'input': '72 1000 777\\r\\n0 215 2814 5104 5226 5925 6734 9213 11697 13739 14015 16101 17234 19013 19566 19683 20283 20837 21332 21432 25490 26284 27728 29911 30112 30133 31494 31595 32499 32932 33289 36611 37736 43548 44440 44537 47656 47699 48327 50942 52178 53759 56925 57671 62024 65441 67958 70346 71606 75235 75466 75553 75905 76173 76512 77784 78183 80425 81339 81543 84537 88384 89953 90214 92107 92274 93328 93550 93987 97546 99459 99532\\r\\n63421 35\\r\\n', 'output': ['45']}, {'input': '76 1 1\\r\\n0 1000 1754 2749 3687 4983 8121 10299 11043 12986 14125 15910 17070 17189 17551 17953 17973 20816 25436 26150 27446 27788 28466 28941 29537 33965 37566 40845 40930 41304 41614 41615 43042 45098 45844 49878 50453 50936 55480 58410 59258 59287 62789 64127 64333 64450 64862 65404 66451 67626 69294 69804 71988 72165 74196 74560 75407 76611 77055 77344 79470 83566 84550 87458 87627 88205 89880 90255 90586 91970 93795 95308 99032 99442 99547 99549\\r\\n0 0\\r\\n', 'output': ['2']}, {'input': '94 2 1\\r\\n0 5000 5001 5002 5003 5004 5005 5006 5007 5008 5009 5010 5011 5012 5013 5014 5015 5016 5017 5018 5019 5020 5021 5022 5023 5024 5025 5026 5027 5028 5029 5030 5031 5032 5033 5034 5035 5036 5037 5038 5040 5041 5042 5043 5044 5045 5046 5047 5048 5049 5050 5051 5052 5053 5054 5055 5056 5057 5058 5059 5060 5061 5062 5063 5064 5065 5066 5067 5068 5069 5070 5071 5072 5073 5074 5075 5076 5077 5078 5079 5080 5081 5082 5083 5084 5085 5086 5087 5088 5089 5090 5091 5092 5093\\r\\n5050 -100000\\r\\n', 'output': ['2']}, {'input': '100 1 2\\r\\n0 1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n100 0\\r\\n', 'output': ['2']}, {'input': '100 1000 1\\r\\n0 505 506 514 515 520 523 527 529 530 538 547 550 554 559 562 566 568 569 580 582 584 588 597 609 621 624 629 630 631 634 641 646 653 657 666 673 678 680 683 685 690 695 698 699 700 705 709 716 731 734 735 736 738 756 761 762 765 769 772 776 779 784 790 794 812 814 816 833 837 842 845 850 854 855 863 868 872 882 892 893 898 899 900 901 902 915 916 917 932 936 954 962 968 975 978 983 992 996 998\\r\\n600 7778\\r\\n', 'output': ['23']}, {'input': '2 1 1\\r\\n0 100000\\r\\n-100000 -100000\\r\\n', 'output': ['2']}, {'input': '2 1000 1000\\r\\n0 1\\r\\n1 0\\r\\n', 'output': ['2']}, {'input': '3 1 1\\r\\n0 1 2\\r\\n2 0\\r\\n', 'output': ['3']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 200;\nint main() {\n  int x[maxn], v, t, ans = 0;\n  cin >> t >> v >> v;\n  for (int i = 0; i < t; ++i) cin >> x[i];\n  int p1, p2;\n  cin >> p1 >> p2;\n  for (int i = 0; i < t - 1; ++i) {\n    int tmp = (x[i + 1] - x[i]) * v + p1;\n    if (tmp < 0)\n      tmp = -tmp;\n    else\n      tmp = (tmp + p2) / v;\n    if (ans == 0 || ans > tmp) ans = tmp, i++;\n  }\n  cout << ans + 1 << '\\n';\n  return 0;\n}\n"}
{"src_uid": "d1e381b72a6c09a0723cfe72c0917372", "id": 21, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '3310\\r\\n1033\\r\\n', 'output': ['OK']}, {'input': '4\\r\\n5\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '40\\r\\n04\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '12\\r\\n12\\r\\n', 'output': ['OK']}, {'input': '432\\r\\n234\\r\\n', 'output': ['OK']}, {'input': '17109\\r\\n01179\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '888\\r\\n888\\r\\n', 'output': ['OK']}, {'input': '912\\r\\n9123\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '0\\r\\n00\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '11110\\r\\n1111\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '7391\\r\\n1397\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '201\\r\\n102\\r\\n', 'output': ['OK']}, {'input': '111111111\\r\\n111111111\\r\\n', 'output': ['OK']}, {'input': '32352320\\r\\n22203335\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '1000000000\\r\\n1\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '994321\\r\\n123499\\r\\n', 'output': ['OK']}, {'input': '10101\\r\\n10101\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '666\\r\\n0666\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '2\\r\\n02\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '313\\r\\n133\\r\\n', 'output': ['OK']}, {'input': '987235645\\r\\n234556789\\r\\n', 'output': ['OK']}, {'input': '90812\\r\\n010289\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '123\\r\\n321\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '707\\r\\n770\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '77774444\\r\\n47474747\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '1270\\r\\n1027\\r\\n', 'output': ['OK']}, {'input': '320\\r\\n23\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '123456789\\r\\n123456789\\r\\n', 'output': ['OK']}, {'input': '918273645\\r\\n546372819\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '300000003\\r\\n30000003\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '0\\r\\n0\\r\\n', 'output': ['OK']}, {'input': '0\\r\\n7\\r\\n', 'output': ['WRONG_ANSWER']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint c[11];\nstring s;\nstring s1;\nvoid min(int a[11]) {\n  for (int i = 1; i <= 10; i++) {\n    for (int j = 0; j < 10; j++) {\n      if (c[i] > a[j]) swap(a[i], a[j]);\n    }\n  }\n}\nint main() {\n  cin >> s;\n  for (int i = 0; i <= 9; i++) {\n    c[i] = 0;\n  }\n  for (int i = 0; i <= 8; i++) {\n    c[s[i] - '0']++;\n  }\n  min(c);\n  cin >> s1;\n  if (s1 == \"\") s1 = \"0\";\n  for (int i = 0; i <= 9; i++) {\n    c[i] = 0;\n  }\n  for (int i = 0; i <= 8; i++) {\n    c[s1[i] - '0']++;\n  }\n  min(c);\n  for (int i = 0; i <= 8; i++) {\n    if (s1[i] == '0') {\n      c[0]++;\n      break;\n    }\n  }\n  string ans = \"\";\n  for (int i = 10; i >= 1; i--) {\n    for (int j = 0; j < c[i]; j++) {\n      ans += (char)(i + '0');\n    }\n  }\n  ans += (char)('0' + c[0]);\n  bool bo = true;\n  if (ans == s)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"}
{"src_uid": "d1e381b72a6c09a0723cfe72c0917372", "id": 21, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '3310\\r\\n1033\\r\\n', 'output': ['OK']}, {'input': '4\\r\\n5\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '40\\r\\n04\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '12\\r\\n12\\r\\n', 'output': ['OK']}, {'input': '432\\r\\n234\\r\\n', 'output': ['OK']}, {'input': '17109\\r\\n01179\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '888\\r\\n888\\r\\n', 'output': ['OK']}, {'input': '912\\r\\n9123\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '0\\r\\n00\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '11110\\r\\n1111\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '7391\\r\\n1397\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '201\\r\\n102\\r\\n', 'output': ['OK']}, {'input': '111111111\\r\\n111111111\\r\\n', 'output': ['OK']}, {'input': '32352320\\r\\n22203335\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '1000000000\\r\\n1\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '994321\\r\\n123499\\r\\n', 'output': ['OK']}, {'input': '10101\\r\\n10101\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '666\\r\\n0666\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '2\\r\\n02\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '313\\r\\n133\\r\\n', 'output': ['OK']}, {'input': '987235645\\r\\n234556789\\r\\n', 'output': ['OK']}, {'input': '90812\\r\\n010289\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '123\\r\\n321\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '707\\r\\n770\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '77774444\\r\\n47474747\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '1270\\r\\n1027\\r\\n', 'output': ['OK']}, {'input': '320\\r\\n23\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '123456789\\r\\n123456789\\r\\n', 'output': ['OK']}, {'input': '918273645\\r\\n546372819\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '300000003\\r\\n30000003\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '0\\r\\n0\\r\\n', 'output': ['OK']}, {'input': '0\\r\\n7\\r\\n', 'output': ['WRONG_ANSWER']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m;\nvoid process(void);\nvoid solve(void);\nint main(void) {\n  int n, m;\n  process();\n  return 0;\n}\nvoid process(void) {\n  cin >> n >> m;\n  solve();\n  cout << \"OK\" << endl;\n  return;\n}\nvoid solve(void) {\n  sort(n + (0), n + (9));\n  while (n[0] == '0') swap(n[0], n[9]), swap(n[0], n[1]);\n  sort(n, n + (9));\n  for (int i = 0; i < 9; ++i)\n    if (m / (int)pow(10, i) > n[i] - 48 ||\n        m / (int)pow(10, i) == n[i] - 48 &&\n            m % (int)pow(10, i) < n[i + 1] - 48) {\n      cout << \"WRONG_ANSWER\" << endl;\n      return;\n    }\n  return;\n}\n"}
{"src_uid": "d1e381b72a6c09a0723cfe72c0917372", "id": 21, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '3310\\r\\n1033\\r\\n', 'output': ['OK']}, {'input': '4\\r\\n5\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '40\\r\\n04\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '12\\r\\n12\\r\\n', 'output': ['OK']}, {'input': '432\\r\\n234\\r\\n', 'output': ['OK']}, {'input': '17109\\r\\n01179\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '888\\r\\n888\\r\\n', 'output': ['OK']}, {'input': '912\\r\\n9123\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '0\\r\\n00\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '11110\\r\\n1111\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '7391\\r\\n1397\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '201\\r\\n102\\r\\n', 'output': ['OK']}, {'input': '111111111\\r\\n111111111\\r\\n', 'output': ['OK']}, {'input': '32352320\\r\\n22203335\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '1000000000\\r\\n1\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '994321\\r\\n123499\\r\\n', 'output': ['OK']}, {'input': '10101\\r\\n10101\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '666\\r\\n0666\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '2\\r\\n02\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '313\\r\\n133\\r\\n', 'output': ['OK']}, {'input': '987235645\\r\\n234556789\\r\\n', 'output': ['OK']}, {'input': '90812\\r\\n010289\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '123\\r\\n321\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '707\\r\\n770\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '77774444\\r\\n47474747\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '1270\\r\\n1027\\r\\n', 'output': ['OK']}, {'input': '320\\r\\n23\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '123456789\\r\\n123456789\\r\\n', 'output': ['OK']}, {'input': '918273645\\r\\n546372819\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '300000003\\r\\n30000003\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '0\\r\\n0\\r\\n', 'output': ['OK']}, {'input': '0\\r\\n7\\r\\n', 'output': ['WRONG_ANSWER']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  string s;\n  cin >> s;\n  n = atoi(s.c_str());\n  string t;\n  cin >> t;\n  sort(t.begin(), t.end());\n  stringstream ss;\n  ss << n;\n  string sss = ss.str();\n  if (t == sss && t[0]!= '0') {\n    printf(\"OK\\n\");\n    return 0;\n  } else if (t!= sss && t[0] == '0') {\n    printf(\"OK\\n\");\n    return 0;\n  } else {\n    printf(\"WRONG_ANSWER\\n\");\n  }\n}\n"}
{"src_uid": "d1e381b72a6c09a0723cfe72c0917372", "id": 21, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '3310\\r\\n1033\\r\\n', 'output': ['OK']}, {'input': '4\\r\\n5\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '40\\r\\n04\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '12\\r\\n12\\r\\n', 'output': ['OK']}, {'input': '432\\r\\n234\\r\\n', 'output': ['OK']}, {'input': '17109\\r\\n01179\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '888\\r\\n888\\r\\n', 'output': ['OK']}, {'input': '912\\r\\n9123\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '0\\r\\n00\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '11110\\r\\n1111\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '7391\\r\\n1397\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '201\\r\\n102\\r\\n', 'output': ['OK']}, {'input': '111111111\\r\\n111111111\\r\\n', 'output': ['OK']}, {'input': '32352320\\r\\n22203335\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '1000000000\\r\\n1\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '994321\\r\\n123499\\r\\n', 'output': ['OK']}, {'input': '10101\\r\\n10101\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '666\\r\\n0666\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '2\\r\\n02\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '313\\r\\n133\\r\\n', 'output': ['OK']}, {'input': '987235645\\r\\n234556789\\r\\n', 'output': ['OK']}, {'input': '90812\\r\\n010289\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '123\\r\\n321\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '707\\r\\n770\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '77774444\\r\\n47474747\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '1270\\r\\n1027\\r\\n', 'output': ['OK']}, {'input': '320\\r\\n23\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '123456789\\r\\n123456789\\r\\n', 'output': ['OK']}, {'input': '918273645\\r\\n546372819\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '300000003\\r\\n30000003\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '0\\r\\n0\\r\\n', 'output': ['OK']}, {'input': '0\\r\\n7\\r\\n', 'output': ['WRONG_ANSWER']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nchar in[10000001];\nchar out[10000001];\nint len;\nbool check(char*);\nint getNext(int);\nint getNow(int);\nint main() {\n  scanf(\"%s\", in);\n  len = strlen(in);\n  if (len == 1 && in[0] == '0') return printf(\"OK\\n\"), 0;\n  scanf(\"%s\", out);\n  if (check(out)) return printf(\"OK\\n\"), 0;\n  return printf(\"WRONG_ANSWER\\n\"), 0;\n}\nbool check(char* ans) {\n  int last = 0;\n  for (int i = 0; i < len; i++) {\n    while (ans[last] > in[i]) last++;\n    if (last > i) return false;\n    if (ans[last] == in[i]) last++;\n  }\n  return last == len;\n}\nint getNext(int id) {\n  int t = id, c = 0;\n  while (t < len && in[t] == '0') {\n    t++;\n    c++;\n  }\n  if (t == len) t -= c;\n  return t;\n}\nint getNow(int id) {\n  int t = id;\n  while (t < len && in[t]!= '0') t++;\n  return t;\n}\n"}
{"src_uid": "d1e381b72a6c09a0723cfe72c0917372", "id": 21, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '3310\\r\\n1033\\r\\n', 'output': ['OK']}, {'input': '4\\r\\n5\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '40\\r\\n04\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '12\\r\\n12\\r\\n', 'output': ['OK']}, {'input': '432\\r\\n234\\r\\n', 'output': ['OK']}, {'input': '17109\\r\\n01179\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '888\\r\\n888\\r\\n', 'output': ['OK']}, {'input': '912\\r\\n9123\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '0\\r\\n00\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '11110\\r\\n1111\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '7391\\r\\n1397\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '201\\r\\n102\\r\\n', 'output': ['OK']}, {'input': '111111111\\r\\n111111111\\r\\n', 'output': ['OK']}, {'input': '32352320\\r\\n22203335\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '1000000000\\r\\n1\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '994321\\r\\n123499\\r\\n', 'output': ['OK']}, {'input': '10101\\r\\n10101\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '666\\r\\n0666\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '2\\r\\n02\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '313\\r\\n133\\r\\n', 'output': ['OK']}, {'input': '987235645\\r\\n234556789\\r\\n', 'output': ['OK']}, {'input': '90812\\r\\n010289\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '123\\r\\n321\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '707\\r\\n770\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '77774444\\r\\n47474747\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '1270\\r\\n1027\\r\\n', 'output': ['OK']}, {'input': '320\\r\\n23\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '123456789\\r\\n123456789\\r\\n', 'output': ['OK']}, {'input': '918273645\\r\\n546372819\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '300000003\\r\\n30000003\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '0\\r\\n0\\r\\n', 'output': ['OK']}, {'input': '0\\r\\n7\\r\\n', 'output': ['WRONG_ANSWER']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s;\n  cin >> s;\n  sort(s.begin(), s.end());\n  string t;\n  cin >> t;\n  bool flag = true;\n  if ((t[0]!= '0') && (s[0] > '0')) flag = false;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i]!= t[i]) flag = false;\n  }\n  if (flag)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"}
{"src_uid": "6f6859aabc1c9cbb9ee0d910064d87c2", "id": 22, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '6\\r\\n549871\\r\\n', 'output': ['54-98-71']}, {'input': '7\\r\\n1198733\\r\\n', 'output': ['119-87-33']}, {'input': '2\\r\\n74\\r\\n', 'output': ['74']}, {'input': '2\\r\\n33\\r\\n', 'output': ['33']}, {'input': '3\\r\\n074\\r\\n', 'output': ['074']}, {'input': '3\\r\\n081\\r\\n', 'output': ['081']}, {'input': '4\\r\\n3811\\r\\n', 'output': ['38-11']}, {'input': '5\\r\\n21583\\r\\n', 'output': ['215-83']}, {'input': '8\\r\\n33408349\\r\\n', 'output': ['33-40-83-49']}, {'input': '9\\r\\n988808426\\r\\n', 'output': ['988-80-84-26']}, {'input': '10\\r\\n0180990956\\r\\n', 'output': ['01-80-99-09-56']}, {'input': '15\\r\\n433488906230138\\r\\n', 'output': ['433-48-89-06-23-01-38']}, {'input': '22\\r\\n7135498415686025907059\\r\\n', 'output': ['71-35-49-84-15-68-60-25-90-70-59']}, {'input': '49\\r\\n2429965524999668169991253653390090510755018570235\\r\\n', 'output': ['242-99-65-52-49-99-66-81-69-99-12-53-65-33-90-09-05-10-75-50-18-57-02-35']}, {'input': '72\\r\\n491925337784111770500147619881727525570039735507439360627744863794794290\\r\\n', 'output': ['49-19-25-33-77-84-11-17-70-50-01-47-61-98-81-72-75-25-57-00-39-73-55-07-43-93-60-62-77-44-86-37-94-79-42-90']}, {'input': '95\\r\\n32543414456047900690980198395035321172843693417425457554204776648220562494524275489599199209210\\r\\n', 'output': ['325-43-41-44-56-04-79-00-69-09-80-19-83-95-03-53-21-17-28-43-69-34-17-42-54-57-55-42-04-77-66-48-22-05-62-49-45-24-27-54-89-59-91-99-20-92-10']}, {'input': '97\\r\\n9362344595153688016434451101547661156123505108492010669557671355055642365998461003851354321478898\\r\\n', 'output': ['936-23-44-59-51-53-68-80-16-43-44-51-10-15-47-66-11-56-12-35-05-10-84-92-01-06-69-55-76-71-35-50-55-64-23-65-99-84-61-00-38-51-35-43-21-47-88-98']}, {'input': '98\\r\\n65521815795893886057122984634320900545031770769333931308009346017867969790810907868670369236928568\\r\\n', 'output': ['65-52-18-15-79-58-93-88-60-57-12-29-84-63-43-20-90-05-45-03-17-70-76-93-33-93-13-08-00-93-46-01-78-67-96-97-90-81-09-07-86-86-70-36-92-36-92-85-68']}, {'input': '99\\r\\n455213856470326729480192345541970106407563996625458559297407682539801838244443866898560852503660390\\r\\n', 'output': ['455-21-38-56-47-03-26-72-94-80-19-23-45-54-19-70-10-64-07-56-39-96-62-54-58-55-92-97-40-76-82-53-98-01-83-82-44-44-38-66-89-85-60-85-25-03-66-03-90']}, {'input': '100\\r\\n4004223124942730640235383244438257614581534320356060987241659784249551110165034719443327659510644224\\r\\n', 'output': ['40-04-22-31-24-94-27-30-64-02-35-38-32-44-43-82-57-61-45-81-53-43-20-35-60-60-98-72-41-65-97-84-24-95-51-11-01-65-03-47-19-44-33-27-65-95-10-64-42-24']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst long long infl = 0x3f3f3f3f3f3f3f3fLL;\nconst int N = 100 + 5;\nchar A[N];\nvoid F(int n) {\n  for (int i = 0; i < n; i++) printf(\"%c\", A[i]);\n}\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> A[i];\n  }\n  if (n <= 2) {\n    F(n);\n    return 0;\n  }\n  if (n % 2 == 0) {\n    for (int i = 1; i <= n - 1; i++) {\n      if (i % 2 == 0) {\n        printf(\"%c\", A[i]);\n      }\n    }\n    printf(\"-\");\n    for (int i = 1; i <= n - 1; i++) {\n      if (i % 2 == 1) {\n        printf(\"%c\", A[i]);\n      }\n    }\n  } else {\n    for (int i = 1; i <= n - 1; i++) {\n      if (i % 2 == 0) {\n        printf(\"%c\", A[i]);\n      }\n    }\n    printf(\"-\");\n    for (int i = 1; i <= n - 1; i++) {\n      if (i % 2 == 1) {\n        printf(\"%c\", A[i]);\n      }\n    }\n    printf(\"-\");\n    printf(\"%c\", A[n]);\n  }\n  return 0;\n}\n"}
{"src_uid": "6f6859aabc1c9cbb9ee0d910064d87c2", "id": 22, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '6\\r\\n549871\\r\\n', 'output': ['54-98-71']}, {'input': '7\\r\\n1198733\\r\\n', 'output': ['119-87-33']}, {'input': '2\\r\\n74\\r\\n', 'output': ['74']}, {'input': '2\\r\\n33\\r\\n', 'output': ['33']}, {'input': '3\\r\\n074\\r\\n', 'output': ['074']}, {'input': '3\\r\\n081\\r\\n', 'output': ['081']}, {'input': '4\\r\\n3811\\r\\n', 'output': ['38-11']}, {'input': '5\\r\\n21583\\r\\n', 'output': ['215-83']}, {'input': '8\\r\\n33408349\\r\\n', 'output': ['33-40-83-49']}, {'input': '9\\r\\n988808426\\r\\n', 'output': ['988-80-84-26']}, {'input': '10\\r\\n0180990956\\r\\n', 'output': ['01-80-99-09-56']}, {'input': '15\\r\\n433488906230138\\r\\n', 'output': ['433-48-89-06-23-01-38']}, {'input': '22\\r\\n7135498415686025907059\\r\\n', 'output': ['71-35-49-84-15-68-60-25-90-70-59']}, {'input': '49\\r\\n2429965524999668169991253653390090510755018570235\\r\\n', 'output': ['242-99-65-52-49-99-66-81-69-99-12-53-65-33-90-09-05-10-75-50-18-57-02-35']}, {'input': '72\\r\\n491925337784111770500147619881727525570039735507439360627744863794794290\\r\\n', 'output': ['49-19-25-33-77-84-11-17-70-50-01-47-61-98-81-72-75-25-57-00-39-73-55-07-43-93-60-62-77-44-86-37-94-79-42-90']}, {'input': '95\\r\\n32543414456047900690980198395035321172843693417425457554204776648220562494524275489599199209210\\r\\n', 'output': ['325-43-41-44-56-04-79-00-69-09-80-19-83-95-03-53-21-17-28-43-69-34-17-42-54-57-55-42-04-77-66-48-22-05-62-49-45-24-27-54-89-59-91-99-20-92-10']}, {'input': '97\\r\\n9362344595153688016434451101547661156123505108492010669557671355055642365998461003851354321478898\\r\\n', 'output': ['936-23-44-59-51-53-68-80-16-43-44-51-10-15-47-66-11-56-12-35-05-10-84-92-01-06-69-55-76-71-35-50-55-64-23-65-99-84-61-00-38-51-35-43-21-47-88-98']}, {'input': '98\\r\\n65521815795893886057122984634320900545031770769333931308009346017867969790810907868670369236928568\\r\\n', 'output': ['65-52-18-15-79-58-93-88-60-57-12-29-84-63-43-20-90-05-45-03-17-70-76-93-33-93-13-08-00-93-46-01-78-67-96-97-90-81-09-07-86-86-70-36-92-36-92-85-68']}, {'input': '99\\r\\n455213856470326729480192345541970106407563996625458559297407682539801838244443866898560852503660390\\r\\n', 'output': ['455-21-38-56-47-03-26-72-94-80-19-23-45-54-19-70-10-64-07-56-39-96-62-54-58-55-92-97-40-76-82-53-98-01-83-82-44-44-38-66-89-85-60-85-25-03-66-03-90']}, {'input': '100\\r\\n4004223124942730640235383244438257614581534320356060987241659784249551110165034719443327659510644224\\r\\n', 'output': ['40-04-22-31-24-94-27-30-64-02-35-38-32-44-43-82-57-61-45-81-53-43-20-35-60-60-98-72-41-65-97-84-24-95-51-11-01-65-03-47-19-44-33-27-65-95-10-64-42-24']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nstring s;\nint main() {\n  int n, m;\n  cin >> n >> s;\n  if (n <= 4) {\n    if (n == 1)\n      cout << s[0];\n    else if (n == 2)\n      cout << s[0] << \"-\" << s[1];\n    else if (n == 3)\n      cout << s[0] << \"-\" << s[1] << \"-\" << s[2];\n    else if (n == 4)\n      cout << s[0] << s[1] << \"-\" << s[2] << s[3];\n  } else if (n <= 6) {\n    for (int i = 0; i < n; i++) {\n      if ((i + 1) % 3 == 0)\n        cout << s[i];\n      else if (i == 2)\n        cout << \"-\" << s[i];\n      else\n        cout << s[i];\n    }\n  } else {\n    cout << s[0] << s[1] << \"-\" << s[2] << s[3] << \"-\" << s[4] << s[5] << s[6];\n  }\n}\n"}
{"src_uid": "6f6859aabc1c9cbb9ee0d910064d87c2", "id": 22, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '6\\r\\n549871\\r\\n', 'output': ['54-98-71']}, {'input': '7\\r\\n1198733\\r\\n', 'output': ['119-87-33']}, {'input': '2\\r\\n74\\r\\n', 'output': ['74']}, {'input': '2\\r\\n33\\r\\n', 'output': ['33']}, {'input': '3\\r\\n074\\r\\n', 'output': ['074']}, {'input': '3\\r\\n081\\r\\n', 'output': ['081']}, {'input': '4\\r\\n3811\\r\\n', 'output': ['38-11']}, {'input': '5\\r\\n21583\\r\\n', 'output': ['215-83']}, {'input': '8\\r\\n33408349\\r\\n', 'output': ['33-40-83-49']}, {'input': '9\\r\\n988808426\\r\\n', 'output': ['988-80-84-26']}, {'input': '10\\r\\n0180990956\\r\\n', 'output': ['01-80-99-09-56']}, {'input': '15\\r\\n433488906230138\\r\\n', 'output': ['433-48-89-06-23-01-38']}, {'input': '22\\r\\n7135498415686025907059\\r\\n', 'output': ['71-35-49-84-15-68-60-25-90-70-59']}, {'input': '49\\r\\n2429965524999668169991253653390090510755018570235\\r\\n', 'output': ['242-99-65-52-49-99-66-81-69-99-12-53-65-33-90-09-05-10-75-50-18-57-02-35']}, {'input': '72\\r\\n491925337784111770500147619881727525570039735507439360627744863794794290\\r\\n', 'output': ['49-19-25-33-77-84-11-17-70-50-01-47-61-98-81-72-75-25-57-00-39-73-55-07-43-93-60-62-77-44-86-37-94-79-42-90']}, {'input': '95\\r\\n32543414456047900690980198395035321172843693417425457554204776648220562494524275489599199209210\\r\\n', 'output': ['325-43-41-44-56-04-79-00-69-09-80-19-83-95-03-53-21-17-28-43-69-34-17-42-54-57-55-42-04-77-66-48-22-05-62-49-45-24-27-54-89-59-91-99-20-92-10']}, {'input': '97\\r\\n9362344595153688016434451101547661156123505108492010669557671355055642365998461003851354321478898\\r\\n', 'output': ['936-23-44-59-51-53-68-80-16-43-44-51-10-15-47-66-11-56-12-35-05-10-84-92-01-06-69-55-76-71-35-50-55-64-23-65-99-84-61-00-38-51-35-43-21-47-88-98']}, {'input': '98\\r\\n65521815795893886057122984634320900545031770769333931308009346017867969790810907868670369236928568\\r\\n', 'output': ['65-52-18-15-79-58-93-88-60-57-12-29-84-63-43-20-90-05-45-03-17-70-76-93-33-93-13-08-00-93-46-01-78-67-96-97-90-81-09-07-86-86-70-36-92-36-92-85-68']}, {'input': '99\\r\\n455213856470326729480192345541970106407563996625458559297407682539801838244443866898560852503660390\\r\\n', 'output': ['455-21-38-56-47-03-26-72-94-80-19-23-45-54-19-70-10-64-07-56-39-96-62-54-58-55-92-97-40-76-82-53-98-01-83-82-44-44-38-66-89-85-60-85-25-03-66-03-90']}, {'input': '100\\r\\n4004223124942730640235383244438257614581534320356060987241659784249551110165034719443327659510644224\\r\\n', 'output': ['40-04-22-31-24-94-27-30-64-02-35-38-32-44-43-82-57-61-45-81-53-43-20-35-60-60-98-72-41-65-97-84-24-95-51-11-01-65-03-47-19-44-33-27-65-95-10-64-42-24']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  string s;\n  cin >> s;\n  if (n == 2) {\n    cout << s;\n  } else if (n == 3) {\n    cout << s;\n  } else if (n == 4) {\n    cout << s[0] << s[1] << \"-\" << s[2] << s[3];\n  } else {\n    if (n % 2 == 1) {\n      cout << s[0] << s[1] << \"-\" << s[2] << s[3];\n      for (int i = 4; i < n - 1; i += 2) {\n        cout << \"-\" << s[i] << s[i + 1];\n      }\n      cout << \"-\" << s[n - 2] << s[n - 1];\n    } else {\n      cout << s[0] << s[1] << \"-\" << s[2] << s[3];\n      for (int i = 4; i < n; i += 2) {\n        cout << \"-\" << s[i] << s[i + 1];\n      }\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "6f6859aabc1c9cbb9ee0d910064d87c2", "id": 22, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '6\\r\\n549871\\r\\n', 'output': ['54-98-71']}, {'input': '7\\r\\n1198733\\r\\n', 'output': ['119-87-33']}, {'input': '2\\r\\n74\\r\\n', 'output': ['74']}, {'input': '2\\r\\n33\\r\\n', 'output': ['33']}, {'input': '3\\r\\n074\\r\\n', 'output': ['074']}, {'input': '3\\r\\n081\\r\\n', 'output': ['081']}, {'input': '4\\r\\n3811\\r\\n', 'output': ['38-11']}, {'input': '5\\r\\n21583\\r\\n', 'output': ['215-83']}, {'input': '8\\r\\n33408349\\r\\n', 'output': ['33-40-83-49']}, {'input': '9\\r\\n988808426\\r\\n', 'output': ['988-80-84-26']}, {'input': '10\\r\\n0180990956\\r\\n', 'output': ['01-80-99-09-56']}, {'input': '15\\r\\n433488906230138\\r\\n', 'output': ['433-48-89-06-23-01-38']}, {'input': '22\\r\\n7135498415686025907059\\r\\n', 'output': ['71-35-49-84-15-68-60-25-90-70-59']}, {'input': '49\\r\\n2429965524999668169991253653390090510755018570235\\r\\n', 'output': ['242-99-65-52-49-99-66-81-69-99-12-53-65-33-90-09-05-10-75-50-18-57-02-35']}, {'input': '72\\r\\n491925337784111770500147619881727525570039735507439360627744863794794290\\r\\n', 'output': ['49-19-25-33-77-84-11-17-70-50-01-47-61-98-81-72-75-25-57-00-39-73-55-07-43-93-60-62-77-44-86-37-94-79-42-90']}, {'input': '95\\r\\n32543414456047900690980198395035321172843693417425457554204776648220562494524275489599199209210\\r\\n', 'output': ['325-43-41-44-56-04-79-00-69-09-80-19-83-95-03-53-21-17-28-43-69-34-17-42-54-57-55-42-04-77-66-48-22-05-62-49-45-24-27-54-89-59-91-99-20-92-10']}, {'input': '97\\r\\n9362344595153688016434451101547661156123505108492010669557671355055642365998461003851354321478898\\r\\n', 'output': ['936-23-44-59-51-53-68-80-16-43-44-51-10-15-47-66-11-56-12-35-05-10-84-92-01-06-69-55-76-71-35-50-55-64-23-65-99-84-61-00-38-51-35-43-21-47-88-98']}, {'input': '98\\r\\n65521815795893886057122984634320900545031770769333931308009346017867969790810907868670369236928568\\r\\n', 'output': ['65-52-18-15-79-58-93-88-60-57-12-29-84-63-43-20-90-05-45-03-17-70-76-93-33-93-13-08-00-93-46-01-78-67-96-97-90-81-09-07-86-86-70-36-92-36-92-85-68']}, {'input': '99\\r\\n455213856470326729480192345541970106407563996625458559297407682539801838244443866898560852503660390\\r\\n', 'output': ['455-21-38-56-47-03-26-72-94-80-19-23-45-54-19-70-10-64-07-56-39-96-62-54-58-55-92-97-40-76-82-53-98-01-83-82-44-44-38-66-89-85-60-85-25-03-66-03-90']}, {'input': '100\\r\\n4004223124942730640235383244438257614581534320356060987241659784249551110165034719443327659510644224\\r\\n', 'output': ['40-04-22-31-24-94-27-30-64-02-35-38-32-44-43-82-57-61-45-81-53-43-20-35-60-60-98-72-41-65-97-84-24-95-51-11-01-65-03-47-19-44-33-27-65-95-10-64-42-24']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, i, j = 0, k = 0;\n  cin >> n;\n  int x[n];\n  int p = n / 2;\n  if (n % 2 == 1) {\n    p = n / 2 + 1;\n  }\n  for (i = 0; i < n; i++) cin >> x[i];\n  while (k!= p - 1) {\n    if (k == 0)\n      cout << x[k];\n    else if (k!= 0) {\n      cout << \"-\" << x[k];\n    }\n    k++;\n  }\n  k = p;\n  if (p == n) {\n    cout << x[p - 1] << x[p] << x[p + 1];\n  } else {\n    cout << \"-\" << x[p - 1] << x[p] << x[p + 1];\n  }\n  k += 2;\n  while (k!= n) {\n    cout << \"-\" << x[k];\n    k++;\n  }\n  return 0;\n}\n"}
{"src_uid": "6f6859aabc1c9cbb9ee0d910064d87c2", "id": 22, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '6\\r\\n549871\\r\\n', 'output': ['54-98-71']}, {'input': '7\\r\\n1198733\\r\\n', 'output': ['119-87-33']}, {'input': '2\\r\\n74\\r\\n', 'output': ['74']}, {'input': '2\\r\\n33\\r\\n', 'output': ['33']}, {'input': '3\\r\\n074\\r\\n', 'output': ['074']}, {'input': '3\\r\\n081\\r\\n', 'output': ['081']}, {'input': '4\\r\\n3811\\r\\n', 'output': ['38-11']}, {'input': '5\\r\\n21583\\r\\n', 'output': ['215-83']}, {'input': '8\\r\\n33408349\\r\\n', 'output': ['33-40-83-49']}, {'input': '9\\r\\n988808426\\r\\n', 'output': ['988-80-84-26']}, {'input': '10\\r\\n0180990956\\r\\n', 'output': ['01-80-99-09-56']}, {'input': '15\\r\\n433488906230138\\r\\n', 'output': ['433-48-89-06-23-01-38']}, {'input': '22\\r\\n7135498415686025907059\\r\\n', 'output': ['71-35-49-84-15-68-60-25-90-70-59']}, {'input': '49\\r\\n2429965524999668169991253653390090510755018570235\\r\\n', 'output': ['242-99-65-52-49-99-66-81-69-99-12-53-65-33-90-09-05-10-75-50-18-57-02-35']}, {'input': '72\\r\\n491925337784111770500147619881727525570039735507439360627744863794794290\\r\\n', 'output': ['49-19-25-33-77-84-11-17-70-50-01-47-61-98-81-72-75-25-57-00-39-73-55-07-43-93-60-62-77-44-86-37-94-79-42-90']}, {'input': '95\\r\\n32543414456047900690980198395035321172843693417425457554204776648220562494524275489599199209210\\r\\n', 'output': ['325-43-41-44-56-04-79-00-69-09-80-19-83-95-03-53-21-17-28-43-69-34-17-42-54-57-55-42-04-77-66-48-22-05-62-49-45-24-27-54-89-59-91-99-20-92-10']}, {'input': '97\\r\\n9362344595153688016434451101547661156123505108492010669557671355055642365998461003851354321478898\\r\\n', 'output': ['936-23-44-59-51-53-68-80-16-43-44-51-10-15-47-66-11-56-12-35-05-10-84-92-01-06-69-55-76-71-35-50-55-64-23-65-99-84-61-00-38-51-35-43-21-47-88-98']}, {'input': '98\\r\\n65521815795893886057122984634320900545031770769333931308009346017867969790810907868670369236928568\\r\\n', 'output': ['65-52-18-15-79-58-93-88-60-57-12-29-84-63-43-20-90-05-45-03-17-70-76-93-33-93-13-08-00-93-46-01-78-67-96-97-90-81-09-07-86-86-70-36-92-36-92-85-68']}, {'input': '99\\r\\n455213856470326729480192345541970106407563996625458559297407682539801838244443866898560852503660390\\r\\n', 'output': ['455-21-38-56-47-03-26-72-94-80-19-23-45-54-19-70-10-64-07-56-39-96-62-54-58-55-92-97-40-76-82-53-98-01-83-82-44-44-38-66-89-85-60-85-25-03-66-03-90']}, {'input': '100\\r\\n4004223124942730640235383244438257614581534320356060987241659784249551110165034719443327659510644224\\r\\n', 'output': ['40-04-22-31-24-94-27-30-64-02-35-38-32-44-43-82-57-61-45-81-53-43-20-35-60-60-98-72-41-65-97-84-24-95-51-11-01-65-03-47-19-44-33-27-65-95-10-64-42-24']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nstring s;\nint main() {\n  cin >> n >> s;\n  cout << s.substr(0, 2) << (n >= 4? \"-\" : \"\");\n  cout << s.substr(2, n >= 4? 3 : n - 2) << (n >= 6? \"-\" : \"\");\n  cout << s.substr(n >= 4? 5 : 4, n >= 6? n - 6 : 0);\n  return 0;\n}\n"}
{"src_uid": "94a38067fc8dd8619fa6e5873ca60220", "id": 23, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '5\\r\\n1 2 3 5 7\\r\\n', 'output': ['3 2 1\\r\\n']}, {'input': '5\\r\\n1 8 1 5 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6\\r\\n86 402 133 524 405 610\\r\\n', 'output': ['6 4 1\\r\\n']}, {'input': '8\\r\\n217 779 418 895 996 473 3 22\\r\\n', 'output': ['5 2 1\\r\\n']}, {'input': '10\\r\\n858 972 670 15 662 114 33 273 53 310\\r\\n', 'output': ['2 6 1\\r\\n']}, {'input': '100\\r\\n611 697 572 770 603 870 128 245 49 904 468 982 788 943 549 288 668 796 803 515 999 735 912 49 298 80 412 841 494 434 543 298 17 571 271 105 70 313 178 755 194 279 585 766 412 164 907 841 776 556 731 268 735 880 176 267 287 65 239 588 155 658 821 47 783 595 585 69 226 906 429 161 999 148 7 484 362 585 952 365 92 749 904 525 307 626 883 367 450 755 564 950 728 724 69 106 119 157 96 290\\r\\n', 'output': ['1 38 25\\r\\n']}, {'input': '100\\r\\n713 572 318 890 577 657 646 146 373 783 392 229 455 871 20 593 573 336 26 381 280 916 907 732 820 713 111 840 570 446 184 711 481 399 788 647 492 15 40 530 549 506 719 782 126 20 778 996 712 761 9 74 812 418 488 175 103 585 900 3 604 521 109 513 145 708 990 361 682 827 791 22 596 780 596 385 450 643 158 496 876 975 319 783 654 895 891 361 397 81 682 899 347 623 809 557 435 279 513 438\\r\\n', 'output': ['1 63 61\\r\\n']}, {'input': '100\\r\\n156 822 179 298 981 82 610 345 373 378 895 734 768 15 78 335 764 608 932 297 717 553 916 367 425 447 361 195 66 70 901 236 905 744 919 564 296 610 963 628 840 52 100 750 345 308 37 687 192 704 101 815 10 990 216 358 823 546 578 821 706 148 182 582 421 482 829 425 121 337 500 301 402 868 66 935 625 527 746 585 308 523 488 914 608 709 875 252 151 781 447 2 756 176 976 302 450 35 680 791\\r\\n', 'output': ['1 98 69\\r\\n']}, {'input': '100\\r\\n54 947 785 838 359 647 92 445 48 465 323 486 101 86 607 31 860 420 709 432 435 372 272 37 903 814 309 197 638 58 259 822 793 564 309 22 522 907 101 853 486 824 614 734 630 452 166 532 256 499 470 9 933 452 256 450 7 26 916 406 257 285 895 117 59 369 424 133 16 417 352 440 806 236 478 34 889 469 540 806 172 296 73 655 261 792 868 380 204 454 330 53 136 629 236 850 134 560 264 291\\r\\n', 'output': ['2 29 27\\r\\n']}, {'input': '99\\r\\n175 269 828 129 499 890 127 263 995 807 508 289 996 226 437 320 365 642 757 22 190 8 345 499 834 713 962 889 336 171 608 492 320 257 472 801 176 325 301 306 198 729 933 4 640 322 226 317 567 586 249 237 202 633 287 128 911 654 719 988 420 855 361 574 716 899 317 356 581 440 284 982 541 111 439 29 37 560 961 224 478 906 319 416 736 603 808 87 762 697 392 713 19 459 262 238 239 599 997\\r\\n', 'output': ['1 44 30\\r\\n']}, {'input': '98\\r\\n443 719 559 672 16 69 529 632 953 999 725 431 54 22 346 968 558 696 48 669 963 129 257 712 39 870 498 595 45 821 344 925 179 388 792 346 755 213 423 365 344 659 824 356 773 637 628 897 841 155 243 536 951 361 192 105 418 431 635 596 150 162 145 548 473 531 750 306 377 354 450 975 79 743 656 733 440 940 19 139 237 346 276 227 64 799 479 633 199 17 796 362 517 234 729 62 995 535\\r\\n', 'output': ['2 70 40\\r\\n']}, {'input': '97\\r\\n359 522 938 862 181 600 283 1000 910 191 590 220 761 818 903 264 751 751 987 316 737 898 168 925 244 674 34 950 754 472 81 6 37 520 112 891 981 454 897 424 489 238 363 709 906 951 677 828 114 373 589 835 52 89 97 435 277 560 551 204 879 469 928 523 231 163 183 609 821 915 615 969 616 23 874 437 844 321 78 53 643 786 585 38 744 347 150 179 988 985 200 11 15 9 547 886 752\\r\\n', 'output': ['1 23 10\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100\\r\\n328 397 235 453 188 254 879 225 423 36 384 296 486 592 231 849 856 255 213 898 234 800 701 529 951 693 507 326 15 905 618 348 967 927 28 979 752 850 343 35 84 302 36 390 482 826 249 918 91 289 973 457 557 348 365 239 709 565 320 560 153 130 647 708 483 469 788 473 322 844 830 562 611 961 397 673 69 960 74 703 369 968 382 451 328 160 211 230 566 208 7 545 293 73 806 375 157 410 303 58\\r\\n', 'output': ['1 79 6\\r\\n']}, {'input': '33\\r\\n52 145 137 734 180 847 178 286 716 134 181 630 358 764 593 762 785 28 1 468 189 540 764 485 165 656 114 58 628 108 605 584 257\\r\\n', 'output': ['8 30 7\\r\\n']}, {'input': '57\\r\\n75 291 309 68 444 654 985 158 514 204 116 918 374 806 176 31 49 455 269 66 722 713 164 818 317 295 546 564 134 641 28 13 987 478 146 219 213 940 289 173 157 666 168 391 392 71 870 477 446 988 414 568 964 684 409 671 454\\r\\n', 'output': ['2 41 29\\r\\n']}, {'input': '88\\r\\n327 644 942 738 84 118 981 686 530 404 137 197 434 16 693 183 423 325 410 345 941 329 7 106 79 867 584 358 533 675 192 718 641 329 900 768 404 301 101 538 954 590 401 954 447 14 559 337 756 586 934 367 538 928 945 936 770 641 488 579 206 869 902 139 216 446 723 150 829 205 373 578 357 368 960 40 121 206 503 385 521 161 501 694 138 370 709 308\\r\\n', 'output': ['1 77 61\\r\\n']}, {'input': '100\\r\\n804 510 266 304 788 625 862 888 408 82 414 470 777 991 729 229 933 406 601 1 596 720 608 706 432 361 527 548 59 548 474 515 4 991 263 568 681 24 117 563 576 587 281 643 904 521 891 106 842 884 943 54 605 815 504 757 311 374 335 192 447 652 633 410 455 402 382 150 432 836 413 819 669 875 638 925 217 805 632 520 605 266 728 795 162 222 603 159 284 790 914 443 775 97 789 606 859 13 851 47\\r\\n', 'output': ['1 77 42\\r\\n']}, {'input': '100\\r\\n449 649 615 713 64 385 927 466 138 126 143 886 80 199 208 43 196 694 92 89 264 180 617 970 191 196 910 150 275 89 693 190 191 99 542 342 45 592 114 56 451 170 64 589 176 102 308 92 402 153 414 675 352 157 69 150 91 288 163 121 816 184 20 234 836 12 593 150 793 439 540 93 99 663 186 125 349 247 476 106 77 523 215 7 363 278 441 745 337 25 148 384 15 915 108 211 240 58 23 408\\r\\n', 'output': ['1 6 5\\r\\n']}, {'input': '90\\r\\n881 436 52 308 97 261 153 931 670 538 702 156 114 445 154 685 452 76 966 790 93 42 547 65 736 364 136 489 719 322 239 628 696 735 55 703 622 375 100 188 804 341 546 474 484 446 729 290 974 301 602 225 996 244 488 983 882 460 962 754 395 617 61 640 534 292 158 375 632 902 420 979 379 38 100 67 963 928 190 456 545 571 45 716 153 68 844 2 102 116\\r\\n', 'output': ['1 14 2\\r\\n']}, {'input': '80\\r\\n313 674 262 240 697 146 391 221 793 504 896 818 92 899 86 370 341 339 306 887 937 570 830 683 729 519 240 833 656 847 427 958 435 704 853 230 758 347 660 575 843 293 649 396 437 787 654 599 35 103 779 783 447 379 444 585 902 713 791 150 851 228 306 721 996 471 617 403 102 168 197 741 877 481 968 545 331 715 236 654\\r\\n', 'output': ['1 13 8\\r\\n']}, {'input': '70\\r\\n745 264 471 171 946 32 277 511 269 469 89 831 69 2 369 407 583 602 646 633 429 747 113 302 722 321 344 824 241 372 263 287 822 24 652 758 246 967 219 313 882 597 752 965 389 775 227 556 95 904 308 340 899 514 400 187 275 318 621 546 659 488 199 154 811 1 725 79 925 82\\r\\n', 'output': ['1 63 60\\r\\n']}, {'input': '60\\r\\n176 502 680 102 546 917 516 801 392 435 635 492 398 456 653 444 472 513 634 378 273 276 44 920 68 124 800 167 825 250 452 264 561 344 98 933 381 939 426 51 568 548 206 887 342 763 151 514 156 354 486 546 998 649 356 438 295 570 450 589\\r\\n', 'output': ['2 26 20\\r\\n']}, {'input': '50\\r\\n608 92 889 33 146 803 402 91 868 400 828 505 375 558 584 129 361 776 974 123 765 804 326 186 61 927 904 511 762 775 640 593 300 664 897 461 869 911 986 789 607 500 309 457 294 104 724 471 216 155\\r\\n', 'output': ['3 25 11\\r\\n']}, {'input': '40\\r\\n40 330 98 612 747 336 640 381 991 366 22 167 352 12 868 166 603 40 313 869 609 981 609 804 54 729 8 854 347 300 828 922 39 633 695 988 4 530 545 176\\r\\n', 'output': ['5 10 8\\r\\n']}, {'input': '30\\r\\n471 920 308 544 347 222 878 671 467 332 215 180 681 114 151 203 492 951 653 614 453 510 540 422 399 532 113 198 932 825\\r\\n', 'output': ['2 21 9\\r\\n']}, {'input': '20\\r\\n551 158 517 475 595 108 764 961 590 297 761 841 659 568 82 888 733 214 993 359\\r\\n', 'output': ['3 20 2\\r\\n']}, {'input': '10\\r\\n983 748 726 406 196 993 2 251 66 263\\r\\n', 'output': ['-1\\r\\n']}, {'input': '9\\r\\n933 266 457 863 768 257 594 136 145\\r\\n', 'output': ['-1\\r\\n']}, {'input': '8\\r\\n537 198 48 771 944 868 700 163\\r\\n', 'output': ['7 8 1\\r\\n']}, {'input': '7\\r\\n140 779 639 679 768 479 158\\r\\n', 'output': ['2 3 1\\r\\n']}, {'input': '6\\r\\n744 359 230 586 944 442\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5\\r\\n700 939 173 494 120\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3\\r\\n907 452 355\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3\\r\\n963 630 333\\r\\n', 'output': ['1 3 2\\r\\n']}, {'input': '3\\r\\n2 2 4\\r\\n', 'output': ['3 2 1\\r\\n']}, {'input': '3\\r\\n2 4 100\\r\\n', 'output': ['-1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve() {\n  int n;\n  cin >> n;\n  vector<pair<int, int>> v(n);\n  for (int i = 0; i < n; ++i) {\n    int x;\n    cin >> x;\n    v[i] = make_pair(x, i + 1);\n  }\n  sort(v.begin(), v.end());\n  for (int i = 0; i < n; ++i)\n    for (int j = i + 1; j < n; ++j)\n      if (v[i].first + v[j].first == v[j].first) {\n        cout << v[j].second << \" \" << v[i].second << \" \" << v[i].second;\n        return;\n      }\n  cout << -1;\n}\nint main() {\n  int t = 1;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"}
{"src_uid": "94a38067fc8dd8619fa6e5873ca60220", "id": 23, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '5\\r\\n1 2 3 5 7\\r\\n', 'output': ['3 2 1\\r\\n']}, {'input': '5\\r\\n1 8 1 5 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6\\r\\n86 402 133 524 405 610\\r\\n', 'output': ['6 4 1\\r\\n']}, {'input': '8\\r\\n217 779 418 895 996 473 3 22\\r\\n', 'output': ['5 2 1\\r\\n']}, {'input': '10\\r\\n858 972 670 15 662 114 33 273 53 310\\r\\n', 'output': ['2 6 1\\r\\n']}, {'input': '100\\r\\n611 697 572 770 603 870 128 245 49 904 468 982 788 943 549 288 668 796 803 515 999 735 912 49 298 80 412 841 494 434 543 298 17 571 271 105 70 313 178 755 194 279 585 766 412 164 907 841 776 556 731 268 735 880 176 267 287 65 239 588 155 658 821 47 783 595 585 69 226 906 429 161 999 148 7 484 362 585 952 365 92 749 904 525 307 626 883 367 450 755 564 950 728 724 69 106 119 157 96 290\\r\\n', 'output': ['1 38 25\\r\\n']}, {'input': '100\\r\\n713 572 318 890 577 657 646 146 373 783 392 229 455 871 20 593 573 336 26 381 280 916 907 732 820 713 111 840 570 446 184 711 481 399 788 647 492 15 40 530 549 506 719 782 126 20 778 996 712 761 9 74 812 418 488 175 103 585 900 3 604 521 109 513 145 708 990 361 682 827 791 22 596 780 596 385 450 643 158 496 876 975 319 783 654 895 891 361 397 81 682 899 347 623 809 557 435 279 513 438\\r\\n', 'output': ['1 63 61\\r\\n']}, {'input': '100\\r\\n156 822 179 298 981 82 610 345 373 378 895 734 768 15 78 335 764 608 932 297 717 553 916 367 425 447 361 195 66 70 901 236 905 744 919 564 296 610 963 628 840 52 100 750 345 308 37 687 192 704 101 815 10 990 216 358 823 546 578 821 706 148 182 582 421 482 829 425 121 337 500 301 402 868 66 935 625 527 746 585 308 523 488 914 608 709 875 252 151 781 447 2 756 176 976 302 450 35 680 791\\r\\n', 'output': ['1 98 69\\r\\n']}, {'input': '100\\r\\n54 947 785 838 359 647 92 445 48 465 323 486 101 86 607 31 860 420 709 432 435 372 272 37 903 814 309 197 638 58 259 822 793 564 309 22 522 907 101 853 486 824 614 734 630 452 166 532 256 499 470 9 933 452 256 450 7 26 916 406 257 285 895 117 59 369 424 133 16 417 352 440 806 236 478 34 889 469 540 806 172 296 73 655 261 792 868 380 204 454 330 53 136 629 236 850 134 560 264 291\\r\\n', 'output': ['2 29 27\\r\\n']}, {'input': '99\\r\\n175 269 828 129 499 890 127 263 995 807 508 289 996 226 437 320 365 642 757 22 190 8 345 499 834 713 962 889 336 171 608 492 320 257 472 801 176 325 301 306 198 729 933 4 640 322 226 317 567 586 249 237 202 633 287 128 911 654 719 988 420 855 361 574 716 899 317 356 581 440 284 982 541 111 439 29 37 560 961 224 478 906 319 416 736 603 808 87 762 697 392 713 19 459 262 238 239 599 997\\r\\n', 'output': ['1 44 30\\r\\n']}, {'input': '98\\r\\n443 719 559 672 16 69 529 632 953 999 725 431 54 22 346 968 558 696 48 669 963 129 257 712 39 870 498 595 45 821 344 925 179 388 792 346 755 213 423 365 344 659 824 356 773 637 628 897 841 155 243 536 951 361 192 105 418 431 635 596 150 162 145 548 473 531 750 306 377 354 450 975 79 743 656 733 440 940 19 139 237 346 276 227 64 799 479 633 199 17 796 362 517 234 729 62 995 535\\r\\n', 'output': ['2 70 40\\r\\n']}, {'input': '97\\r\\n359 522 938 862 181 600 283 1000 910 191 590 220 761 818 903 264 751 751 987 316 737 898 168 925 244 674 34 950 754 472 81 6 37 520 112 891 981 454 897 424 489 238 363 709 906 951 677 828 114 373 589 835 52 89 97 435 277 560 551 204 879 469 928 523 231 163 183 609 821 915 615 969 616 23 874 437 844 321 78 53 643 786 585 38 744 347 150 179 988 985 200 11 15 9 547 886 752\\r\\n', 'output': ['1 23 10\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100\\r\\n328 397 235 453 188 254 879 225 423 36 384 296 486 592 231 849 856 255 213 898 234 800 701 529 951 693 507 326 15 905 618 348 967 927 28 979 752 850 343 35 84 302 36 390 482 826 249 918 91 289 973 457 557 348 365 239 709 565 320 560 153 130 647 708 483 469 788 473 322 844 830 562 611 961 397 673 69 960 74 703 369 968 382 451 328 160 211 230 566 208 7 545 293 73 806 375 157 410 303 58\\r\\n', 'output': ['1 79 6\\r\\n']}, {'input': '33\\r\\n52 145 137 734 180 847 178 286 716 134 181 630 358 764 593 762 785 28 1 468 189 540 764 485 165 656 114 58 628 108 605 584 257\\r\\n', 'output': ['8 30 7\\r\\n']}, {'input': '57\\r\\n75 291 309 68 444 654 985 158 514 204 116 918 374 806 176 31 49 455 269 66 722 713 164 818 317 295 546 564 134 641 28 13 987 478 146 219 213 940 289 173 157 666 168 391 392 71 870 477 446 988 414 568 964 684 409 671 454\\r\\n', 'output': ['2 41 29\\r\\n']}, {'input': '88\\r\\n327 644 942 738 84 118 981 686 530 404 137 197 434 16 693 183 423 325 410 345 941 329 7 106 79 867 584 358 533 675 192 718 641 329 900 768 404 301 101 538 954 590 401 954 447 14 559 337 756 586 934 367 538 928 945 936 770 641 488 579 206 869 902 139 216 446 723 150 829 205 373 578 357 368 960 40 121 206 503 385 521 161 501 694 138 370 709 308\\r\\n', 'output': ['1 77 61\\r\\n']}, {'input': '100\\r\\n804 510 266 304 788 625 862 888 408 82 414 470 777 991 729 229 933 406 601 1 596 720 608 706 432 361 527 548 59 548 474 515 4 991 263 568 681 24 117 563 576 587 281 643 904 521 891 106 842 884 943 54 605 815 504 757 311 374 335 192 447 652 633 410 455 402 382 150 432 836 413 819 669 875 638 925 217 805 632 520 605 266 728 795 162 222 603 159 284 790 914 443 775 97 789 606 859 13 851 47\\r\\n', 'output': ['1 77 42\\r\\n']}, {'input': '100\\r\\n449 649 615 713 64 385 927 466 138 126 143 886 80 199 208 43 196 694 92 89 264 180 617 970 191 196 910 150 275 89 693 190 191 99 542 342 45 592 114 56 451 170 64 589 176 102 308 92 402 153 414 675 352 157 69 150 91 288 163 121 816 184 20 234 836 12 593 150 793 439 540 93 99 663 186 125 349 247 476 106 77 523 215 7 363 278 441 745 337 25 148 384 15 915 108 211 240 58 23 408\\r\\n', 'output': ['1 6 5\\r\\n']}, {'input': '90\\r\\n881 436 52 308 97 261 153 931 670 538 702 156 114 445 154 685 452 76 966 790 93 42 547 65 736 364 136 489 719 322 239 628 696 735 55 703 622 375 100 188 804 341 546 474 484 446 729 290 974 301 602 225 996 244 488 983 882 460 962 754 395 617 61 640 534 292 158 375 632 902 420 979 379 38 100 67 963 928 190 456 545 571 45 716 153 68 844 2 102 116\\r\\n', 'output': ['1 14 2\\r\\n']}, {'input': '80\\r\\n313 674 262 240 697 146 391 221 793 504 896 818 92 899 86 370 341 339 306 887 937 570 830 683 729 519 240 833 656 847 427 958 435 704 853 230 758 347 660 575 843 293 649 396 437 787 654 599 35 103 779 783 447 379 444 585 902 713 791 150 851 228 306 721 996 471 617 403 102 168 197 741 877 481 968 545 331 715 236 654\\r\\n', 'output': ['1 13 8\\r\\n']}, {'input': '70\\r\\n745 264 471 171 946 32 277 511 269 469 89 831 69 2 369 407 583 602 646 633 429 747 113 302 722 321 344 824 241 372 263 287 822 24 652 758 246 967 219 313 882 597 752 965 389 775 227 556 95 904 308 340 899 514 400 187 275 318 621 546 659 488 199 154 811 1 725 79 925 82\\r\\n', 'output': ['1 63 60\\r\\n']}, {'input': '60\\r\\n176 502 680 102 546 917 516 801 392 435 635 492 398 456 653 444 472 513 634 378 273 276 44 920 68 124 800 167 825 250 452 264 561 344 98 933 381 939 426 51 568 548 206 887 342 763 151 514 156 354 486 546 998 649 356 438 295 570 450 589\\r\\n', 'output': ['2 26 20\\r\\n']}, {'input': '50\\r\\n608 92 889 33 146 803 402 91 868 400 828 505 375 558 584 129 361 776 974 123 765 804 326 186 61 927 904 511 762 775 640 593 300 664 897 461 869 911 986 789 607 500 309 457 294 104 724 471 216 155\\r\\n', 'output': ['3 25 11\\r\\n']}, {'input': '40\\r\\n40 330 98 612 747 336 640 381 991 366 22 167 352 12 868 166 603 40 313 869 609 981 609 804 54 729 8 854 347 300 828 922 39 633 695 988 4 530 545 176\\r\\n', 'output': ['5 10 8\\r\\n']}, {'input': '30\\r\\n471 920 308 544 347 222 878 671 467 332 215 180 681 114 151 203 492 951 653 614 453 510 540 422 399 532 113 198 932 825\\r\\n', 'output': ['2 21 9\\r\\n']}, {'input': '20\\r\\n551 158 517 475 595 108 764 961 590 297 761 841 659 568 82 888 733 214 993 359\\r\\n', 'output': ['3 20 2\\r\\n']}, {'input': '10\\r\\n983 748 726 406 196 993 2 251 66 263\\r\\n', 'output': ['-1\\r\\n']}, {'input': '9\\r\\n933 266 457 863 768 257 594 136 145\\r\\n', 'output': ['-1\\r\\n']}, {'input': '8\\r\\n537 198 48 771 944 868 700 163\\r\\n', 'output': ['7 8 1\\r\\n']}, {'input': '7\\r\\n140 779 639 679 768 479 158\\r\\n', 'output': ['2 3 1\\r\\n']}, {'input': '6\\r\\n744 359 230 586 944 442\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5\\r\\n700 939 173 494 120\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3\\r\\n907 452 355\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3\\r\\n963 630 333\\r\\n', 'output': ['1 3 2\\r\\n']}, {'input': '3\\r\\n2 2 4\\r\\n', 'output': ['3 2 1\\r\\n']}, {'input': '3\\r\\n2 4 100\\r\\n', 'output': ['-1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  int a[105];\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n  bool flag = false;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      for (int k = 0; k < n; k++) {\n        if (a[i] == a[j] + a[k] && i!= j && j!= k && i!= k) {\n          flag = true;\n          printf(\"%d %d %d\\n\", i + 1, j + 1, k + 1);\n          return 0;\n        }\n      }\n    }\n  }\n  if (!flag) printf(\"-1\\n\");\n  return 0;\n}\n"}
{"src_uid": "94a38067fc8dd8619fa6e5873ca60220", "id": 23, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '5\\r\\n1 2 3 5 7\\r\\n', 'output': ['3 2 1\\r\\n']}, {'input': '5\\r\\n1 8 1 5 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6\\r\\n86 402 133 524 405 610\\r\\n', 'output': ['6 4 1\\r\\n']}, {'input': '8\\r\\n217 779 418 895 996 473 3 22\\r\\n', 'output': ['5 2 1\\r\\n']}, {'input': '10\\r\\n858 972 670 15 662 114 33 273 53 310\\r\\n', 'output': ['2 6 1\\r\\n']}, {'input': '100\\r\\n611 697 572 770 603 870 128 245 49 904 468 982 788 943 549 288 668 796 803 515 999 735 912 49 298 80 412 841 494 434 543 298 17 571 271 105 70 313 178 755 194 279 585 766 412 164 907 841 776 556 731 268 735 880 176 267 287 65 239 588 155 658 821 47 783 595 585 69 226 906 429 161 999 148 7 484 362 585 952 365 92 749 904 525 307 626 883 367 450 755 564 950 728 724 69 106 119 157 96 290\\r\\n', 'output': ['1 38 25\\r\\n']}, {'input': '100\\r\\n713 572 318 890 577 657 646 146 373 783 392 229 455 871 20 593 573 336 26 381 280 916 907 732 820 713 111 840 570 446 184 711 481 399 788 647 492 15 40 530 549 506 719 782 126 20 778 996 712 761 9 74 812 418 488 175 103 585 900 3 604 521 109 513 145 708 990 361 682 827 791 22 596 780 596 385 450 643 158 496 876 975 319 783 654 895 891 361 397 81 682 899 347 623 809 557 435 279 513 438\\r\\n', 'output': ['1 63 61\\r\\n']}, {'input': '100\\r\\n156 822 179 298 981 82 610 345 373 378 895 734 768 15 78 335 764 608 932 297 717 553 916 367 425 447 361 195 66 70 901 236 905 744 919 564 296 610 963 628 840 52 100 750 345 308 37 687 192 704 101 815 10 990 216 358 823 546 578 821 706 148 182 582 421 482 829 425 121 337 500 301 402 868 66 935 625 527 746 585 308 523 488 914 608 709 875 252 151 781 447 2 756 176 976 302 450 35 680 791\\r\\n', 'output': ['1 98 69\\r\\n']}, {'input': '100\\r\\n54 947 785 838 359 647 92 445 48 465 323 486 101 86 607 31 860 420 709 432 435 372 272 37 903 814 309 197 638 58 259 822 793 564 309 22 522 907 101 853 486 824 614 734 630 452 166 532 256 499 470 9 933 452 256 450 7 26 916 406 257 285 895 117 59 369 424 133 16 417 352 440 806 236 478 34 889 469 540 806 172 296 73 655 261 792 868 380 204 454 330 53 136 629 236 850 134 560 264 291\\r\\n', 'output': ['2 29 27\\r\\n']}, {'input': '99\\r\\n175 269 828 129 499 890 127 263 995 807 508 289 996 226 437 320 365 642 757 22 190 8 345 499 834 713 962 889 336 171 608 492 320 257 472 801 176 325 301 306 198 729 933 4 640 322 226 317 567 586 249 237 202 633 287 128 911 654 719 988 420 855 361 574 716 899 317 356 581 440 284 982 541 111 439 29 37 560 961 224 478 906 319 416 736 603 808 87 762 697 392 713 19 459 262 238 239 599 997\\r\\n', 'output': ['1 44 30\\r\\n']}, {'input': '98\\r\\n443 719 559 672 16 69 529 632 953 999 725 431 54 22 346 968 558 696 48 669 963 129 257 712 39 870 498 595 45 821 344 925 179 388 792 346 755 213 423 365 344 659 824 356 773 637 628 897 841 155 243 536 951 361 192 105 418 431 635 596 150 162 145 548 473 531 750 306 377 354 450 975 79 743 656 733 440 940 19 139 237 346 276 227 64 799 479 633 199 17 796 362 517 234 729 62 995 535\\r\\n', 'output': ['2 70 40\\r\\n']}, {'input': '97\\r\\n359 522 938 862 181 600 283 1000 910 191 590 220 761 818 903 264 751 751 987 316 737 898 168 925 244 674 34 950 754 472 81 6 37 520 112 891 981 454 897 424 489 238 363 709 906 951 677 828 114 373 589 835 52 89 97 435 277 560 551 204 879 469 928 523 231 163 183 609 821 915 615 969 616 23 874 437 844 321 78 53 643 786 585 38 744 347 150 179 988 985 200 11 15 9 547 886 752\\r\\n', 'output': ['1 23 10\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100\\r\\n328 397 235 453 188 254 879 225 423 36 384 296 486 592 231 849 856 255 213 898 234 800 701 529 951 693 507 326 15 905 618 348 967 927 28 979 752 850 343 35 84 302 36 390 482 826 249 918 91 289 973 457 557 348 365 239 709 565 320 560 153 130 647 708 483 469 788 473 322 844 830 562 611 961 397 673 69 960 74 703 369 968 382 451 328 160 211 230 566 208 7 545 293 73 806 375 157 410 303 58\\r\\n', 'output': ['1 79 6\\r\\n']}, {'input': '33\\r\\n52 145 137 734 180 847 178 286 716 134 181 630 358 764 593 762 785 28 1 468 189 540 764 485 165 656 114 58 628 108 605 584 257\\r\\n', 'output': ['8 30 7\\r\\n']}, {'input': '57\\r\\n75 291 309 68 444 654 985 158 514 204 116 918 374 806 176 31 49 455 269 66 722 713 164 818 317 295 546 564 134 641 28 13 987 478 146 219 213 940 289 173 157 666 168 391 392 71 870 477 446 988 414 568 964 684 409 671 454\\r\\n', 'output': ['2 41 29\\r\\n']}, {'input': '88\\r\\n327 644 942 738 84 118 981 686 530 404 137 197 434 16 693 183 423 325 410 345 941 329 7 106 79 867 584 358 533 675 192 718 641 329 900 768 404 301 101 538 954 590 401 954 447 14 559 337 756 586 934 367 538 928 945 936 770 641 488 579 206 869 902 139 216 446 723 150 829 205 373 578 357 368 960 40 121 206 503 385 521 161 501 694 138 370 709 308\\r\\n', 'output': ['1 77 61\\r\\n']}, {'input': '100\\r\\n804 510 266 304 788 625 862 888 408 82 414 470 777 991 729 229 933 406 601 1 596 720 608 706 432 361 527 548 59 548 474 515 4 991 263 568 681 24 117 563 576 587 281 643 904 521 891 106 842 884 943 54 605 815 504 757 311 374 335 192 447 652 633 410 455 402 382 150 432 836 413 819 669 875 638 925 217 805 632 520 605 266 728 795 162 222 603 159 284 790 914 443 775 97 789 606 859 13 851 47\\r\\n', 'output': ['1 77 42\\r\\n']}, {'input': '100\\r\\n449 649 615 713 64 385 927 466 138 126 143 886 80 199 208 43 196 694 92 89 264 180 617 970 191 196 910 150 275 89 693 190 191 99 542 342 45 592 114 56 451 170 64 589 176 102 308 92 402 153 414 675 352 157 69 150 91 288 163 121 816 184 20 234 836 12 593 150 793 439 540 93 99 663 186 125 349 247 476 106 77 523 215 7 363 278 441 745 337 25 148 384 15 915 108 211 240 58 23 408\\r\\n', 'output': ['1 6 5\\r\\n']}, {'input': '90\\r\\n881 436 52 308 97 261 153 931 670 538 702 156 114 445 154 685 452 76 966 790 93 42 547 65 736 364 136 489 719 322 239 628 696 735 55 703 622 375 100 188 804 341 546 474 484 446 729 290 974 301 602 225 996 244 488 983 882 460 962 754 395 617 61 640 534 292 158 375 632 902 420 979 379 38 100 67 963 928 190 456 545 571 45 716 153 68 844 2 102 116\\r\\n', 'output': ['1 14 2\\r\\n']}, {'input': '80\\r\\n313 674 262 240 697 146 391 221 793 504 896 818 92 899 86 370 341 339 306 887 937 570 830 683 729 519 240 833 656 847 427 958 435 704 853 230 758 347 660 575 843 293 649 396 437 787 654 599 35 103 779 783 447 379 444 585 902 713 791 150 851 228 306 721 996 471 617 403 102 168 197 741 877 481 968 545 331 715 236 654\\r\\n', 'output': ['1 13 8\\r\\n']}, {'input': '70\\r\\n745 264 471 171 946 32 277 511 269 469 89 831 69 2 369 407 583 602 646 633 429 747 113 302 722 321 344 824 241 372 263 287 822 24 652 758 246 967 219 313 882 597 752 965 389 775 227 556 95 904 308 340 899 514 400 187 275 318 621 546 659 488 199 154 811 1 725 79 925 82\\r\\n', 'output': ['1 63 60\\r\\n']}, {'input': '60\\r\\n176 502 680 102 546 917 516 801 392 435 635 492 398 456 653 444 472 513 634 378 273 276 44 920 68 124 800 167 825 250 452 264 561 344 98 933 381 939 426 51 568 548 206 887 342 763 151 514 156 354 486 546 998 649 356 438 295 570 450 589\\r\\n', 'output': ['2 26 20\\r\\n']}, {'input': '50\\r\\n608 92 889 33 146 803 402 91 868 400 828 505 375 558 584 129 361 776 974 123 765 804 326 186 61 927 904 511 762 775 640 593 300 664 897 461 869 911 986 789 607 500 309 457 294 104 724 471 216 155\\r\\n', 'output': ['3 25 11\\r\\n']}, {'input': '40\\r\\n40 330 98 612 747 336 640 381 991 366 22 167 352 12 868 166 603 40 313 869 609 981 609 804 54 729 8 854 347 300 828 922 39 633 695 988 4 530 545 176\\r\\n', 'output': ['5 10 8\\r\\n']}, {'input': '30\\r\\n471 920 308 544 347 222 878 671 467 332 215 180 681 114 151 203 492 951 653 614 453 510 540 422 399 532 113 198 932 825\\r\\n', 'output': ['2 21 9\\r\\n']}, {'input': '20\\r\\n551 158 517 475 595 108 764 961 590 297 761 841 659 568 82 888 733 214 993 359\\r\\n', 'output': ['3 20 2\\r\\n']}, {'input': '10\\r\\n983 748 726 406 196 993 2 251 66 263\\r\\n', 'output': ['-1\\r\\n']}, {'input': '9\\r\\n933 266 457 863 768 257 594 136 145\\r\\n', 'output': ['-1\\r\\n']}, {'input': '8\\r\\n537 198 48 771 944 868 700 163\\r\\n', 'output': ['7 8 1\\r\\n']}, {'input': '7\\r\\n140 779 639 679 768 479 158\\r\\n', 'output': ['2 3 1\\r\\n']}, {'input': '6\\r\\n744 359 230 586 944 442\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5\\r\\n700 939 173 494 120\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3\\r\\n907 452 355\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3\\r\\n963 630 333\\r\\n', 'output': ['1 3 2\\r\\n']}, {'input': '3\\r\\n2 2 4\\r\\n', 'output': ['3 2 1\\r\\n']}, {'input': '3\\r\\n2 4 100\\r\\n', 'output': ['-1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nint a[110], s, i, j, k, n;\nint main() {\n  scanf(\"%d\", &n);\n  for (i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n    s += a[i];\n  }\n  for (i = 0; i < n; i++)\n    for (j = i + 1; j < n; j++)\n      if (s - a[i] - a[j] == 2 * a[j]) {\n        puts(\"1 2 3\");\n        return 0;\n      }\n  puts(\"-1\");\n  return 0;\n}\n"}
{"src_uid": "94a38067fc8dd8619fa6e5873ca60220", "id": 23, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '5\\r\\n1 2 3 5 7\\r\\n', 'output': ['3 2 1\\r\\n']}, {'input': '5\\r\\n1 8 1 5 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6\\r\\n86 402 133 524 405 610\\r\\n', 'output': ['6 4 1\\r\\n']}, {'input': '8\\r\\n217 779 418 895 996 473 3 22\\r\\n', 'output': ['5 2 1\\r\\n']}, {'input': '10\\r\\n858 972 670 15 662 114 33 273 53 310\\r\\n', 'output': ['2 6 1\\r\\n']}, {'input': '100\\r\\n611 697 572 770 603 870 128 245 49 904 468 982 788 943 549 288 668 796 803 515 999 735 912 49 298 80 412 841 494 434 543 298 17 571 271 105 70 313 178 755 194 279 585 766 412 164 907 841 776 556 731 268 735 880 176 267 287 65 239 588 155 658 821 47 783 595 585 69 226 906 429 161 999 148 7 484 362 585 952 365 92 749 904 525 307 626 883 367 450 755 564 950 728 724 69 106 119 157 96 290\\r\\n', 'output': ['1 38 25\\r\\n']}, {'input': '100\\r\\n713 572 318 890 577 657 646 146 373 783 392 229 455 871 20 593 573 336 26 381 280 916 907 732 820 713 111 840 570 446 184 711 481 399 788 647 492 15 40 530 549 506 719 782 126 20 778 996 712 761 9 74 812 418 488 175 103 585 900 3 604 521 109 513 145 708 990 361 682 827 791 22 596 780 596 385 450 643 158 496 876 975 319 783 654 895 891 361 397 81 682 899 347 623 809 557 435 279 513 438\\r\\n', 'output': ['1 63 61\\r\\n']}, {'input': '100\\r\\n156 822 179 298 981 82 610 345 373 378 895 734 768 15 78 335 764 608 932 297 717 553 916 367 425 447 361 195 66 70 901 236 905 744 919 564 296 610 963 628 840 52 100 750 345 308 37 687 192 704 101 815 10 990 216 358 823 546 578 821 706 148 182 582 421 482 829 425 121 337 500 301 402 868 66 935 625 527 746 585 308 523 488 914 608 709 875 252 151 781 447 2 756 176 976 302 450 35 680 791\\r\\n', 'output': ['1 98 69\\r\\n']}, {'input': '100\\r\\n54 947 785 838 359 647 92 445 48 465 323 486 101 86 607 31 860 420 709 432 435 372 272 37 903 814 309 197 638 58 259 822 793 564 309 22 522 907 101 853 486 824 614 734 630 452 166 532 256 499 470 9 933 452 256 450 7 26 916 406 257 285 895 117 59 369 424 133 16 417 352 440 806 236 478 34 889 469 540 806 172 296 73 655 261 792 868 380 204 454 330 53 136 629 236 850 134 560 264 291\\r\\n', 'output': ['2 29 27\\r\\n']}, {'input': '99\\r\\n175 269 828 129 499 890 127 263 995 807 508 289 996 226 437 320 365 642 757 22 190 8 345 499 834 713 962 889 336 171 608 492 320 257 472 801 176 325 301 306 198 729 933 4 640 322 226 317 567 586 249 237 202 633 287 128 911 654 719 988 420 855 361 574 716 899 317 356 581 440 284 982 541 111 439 29 37 560 961 224 478 906 319 416 736 603 808 87 762 697 392 713 19 459 262 238 239 599 997\\r\\n', 'output': ['1 44 30\\r\\n']}, {'input': '98\\r\\n443 719 559 672 16 69 529 632 953 999 725 431 54 22 346 968 558 696 48 669 963 129 257 712 39 870 498 595 45 821 344 925 179 388 792 346 755 213 423 365 344 659 824 356 773 637 628 897 841 155 243 536 951 361 192 105 418 431 635 596 150 162 145 548 473 531 750 306 377 354 450 975 79 743 656 733 440 940 19 139 237 346 276 227 64 799 479 633 199 17 796 362 517 234 729 62 995 535\\r\\n', 'output': ['2 70 40\\r\\n']}, {'input': '97\\r\\n359 522 938 862 181 600 283 1000 910 191 590 220 761 818 903 264 751 751 987 316 737 898 168 925 244 674 34 950 754 472 81 6 37 520 112 891 981 454 897 424 489 238 363 709 906 951 677 828 114 373 589 835 52 89 97 435 277 560 551 204 879 469 928 523 231 163 183 609 821 915 615 969 616 23 874 437 844 321 78 53 643 786 585 38 744 347 150 179 988 985 200 11 15 9 547 886 752\\r\\n', 'output': ['1 23 10\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100\\r\\n328 397 235 453 188 254 879 225 423 36 384 296 486 592 231 849 856 255 213 898 234 800 701 529 951 693 507 326 15 905 618 348 967 927 28 979 752 850 343 35 84 302 36 390 482 826 249 918 91 289 973 457 557 348 365 239 709 565 320 560 153 130 647 708 483 469 788 473 322 844 830 562 611 961 397 673 69 960 74 703 369 968 382 451 328 160 211 230 566 208 7 545 293 73 806 375 157 410 303 58\\r\\n', 'output': ['1 79 6\\r\\n']}, {'input': '33\\r\\n52 145 137 734 180 847 178 286 716 134 181 630 358 764 593 762 785 28 1 468 189 540 764 485 165 656 114 58 628 108 605 584 257\\r\\n', 'output': ['8 30 7\\r\\n']}, {'input': '57\\r\\n75 291 309 68 444 654 985 158 514 204 116 918 374 806 176 31 49 455 269 66 722 713 164 818 317 295 546 564 134 641 28 13 987 478 146 219 213 940 289 173 157 666 168 391 392 71 870 477 446 988 414 568 964 684 409 671 454\\r\\n', 'output': ['2 41 29\\r\\n']}, {'input': '88\\r\\n327 644 942 738 84 118 981 686 530 404 137 197 434 16 693 183 423 325 410 345 941 329 7 106 79 867 584 358 533 675 192 718 641 329 900 768 404 301 101 538 954 590 401 954 447 14 559 337 756 586 934 367 538 928 945 936 770 641 488 579 206 869 902 139 216 446 723 150 829 205 373 578 357 368 960 40 121 206 503 385 521 161 501 694 138 370 709 308\\r\\n', 'output': ['1 77 61\\r\\n']}, {'input': '100\\r\\n804 510 266 304 788 625 862 888 408 82 414 470 777 991 729 229 933 406 601 1 596 720 608 706 432 361 527 548 59 548 474 515 4 991 263 568 681 24 117 563 576 587 281 643 904 521 891 106 842 884 943 54 605 815 504 757 311 374 335 192 447 652 633 410 455 402 382 150 432 836 413 819 669 875 638 925 217 805 632 520 605 266 728 795 162 222 603 159 284 790 914 443 775 97 789 606 859 13 851 47\\r\\n', 'output': ['1 77 42\\r\\n']}, {'input': '100\\r\\n449 649 615 713 64 385 927 466 138 126 143 886 80 199 208 43 196 694 92 89 264 180 617 970 191 196 910 150 275 89 693 190 191 99 542 342 45 592 114 56 451 170 64 589 176 102 308 92 402 153 414 675 352 157 69 150 91 288 163 121 816 184 20 234 836 12 593 150 793 439 540 93 99 663 186 125 349 247 476 106 77 523 215 7 363 278 441 745 337 25 148 384 15 915 108 211 240 58 23 408\\r\\n', 'output': ['1 6 5\\r\\n']}, {'input': '90\\r\\n881 436 52 308 97 261 153 931 670 538 702 156 114 445 154 685 452 76 966 790 93 42 547 65 736 364 136 489 719 322 239 628 696 735 55 703 622 375 100 188 804 341 546 474 484 446 729 290 974 301 602 225 996 244 488 983 882 460 962 754 395 617 61 640 534 292 158 375 632 902 420 979 379 38 100 67 963 928 190 456 545 571 45 716 153 68 844 2 102 116\\r\\n', 'output': ['1 14 2\\r\\n']}, {'input': '80\\r\\n313 674 262 240 697 146 391 221 793 504 896 818 92 899 86 370 341 339 306 887 937 570 830 683 729 519 240 833 656 847 427 958 435 704 853 230 758 347 660 575 843 293 649 396 437 787 654 599 35 103 779 783 447 379 444 585 902 713 791 150 851 228 306 721 996 471 617 403 102 168 197 741 877 481 968 545 331 715 236 654\\r\\n', 'output': ['1 13 8\\r\\n']}, {'input': '70\\r\\n745 264 471 171 946 32 277 511 269 469 89 831 69 2 369 407 583 602 646 633 429 747 113 302 722 321 344 824 241 372 263 287 822 24 652 758 246 967 219 313 882 597 752 965 389 775 227 556 95 904 308 340 899 514 400 187 275 318 621 546 659 488 199 154 811 1 725 79 925 82\\r\\n', 'output': ['1 63 60\\r\\n']}, {'input': '60\\r\\n176 502 680 102 546 917 516 801 392 435 635 492 398 456 653 444 472 513 634 378 273 276 44 920 68 124 800 167 825 250 452 264 561 344 98 933 381 939 426 51 568 548 206 887 342 763 151 514 156 354 486 546 998 649 356 438 295 570 450 589\\r\\n', 'output': ['2 26 20\\r\\n']}, {'input': '50\\r\\n608 92 889 33 146 803 402 91 868 400 828 505 375 558 584 129 361 776 974 123 765 804 326 186 61 927 904 511 762 775 640 593 300 664 897 461 869 911 986 789 607 500 309 457 294 104 724 471 216 155\\r\\n', 'output': ['3 25 11\\r\\n']}, {'input': '40\\r\\n40 330 98 612 747 336 640 381 991 366 22 167 352 12 868 166 603 40 313 869 609 981 609 804 54 729 8 854 347 300 828 922 39 633 695 988 4 530 545 176\\r\\n', 'output': ['5 10 8\\r\\n']}, {'input': '30\\r\\n471 920 308 544 347 222 878 671 467 332 215 180 681 114 151 203 492 951 653 614 453 510 540 422 399 532 113 198 932 825\\r\\n', 'output': ['2 21 9\\r\\n']}, {'input': '20\\r\\n551 158 517 475 595 108 764 961 590 297 761 841 659 568 82 888 733 214 993 359\\r\\n', 'output': ['3 20 2\\r\\n']}, {'input': '10\\r\\n983 748 726 406 196 993 2 251 66 263\\r\\n', 'output': ['-1\\r\\n']}, {'input': '9\\r\\n933 266 457 863 768 257 594 136 145\\r\\n', 'output': ['-1\\r\\n']}, {'input': '8\\r\\n537 198 48 771 944 868 700 163\\r\\n', 'output': ['7 8 1\\r\\n']}, {'input': '7\\r\\n140 779 639 679 768 479 158\\r\\n', 'output': ['2 3 1\\r\\n']}, {'input': '6\\r\\n744 359 230 586 944 442\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5\\r\\n700 939 173 494 120\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3\\r\\n907 452 355\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3\\r\\n963 630 333\\r\\n', 'output': ['1 3 2\\r\\n']}, {'input': '3\\r\\n2 2 4\\r\\n', 'output': ['3 2 1\\r\\n']}, {'input': '3\\r\\n2 4 100\\r\\n', 'output': ['-1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MaxN = 1000 + 20;\nint n, a[MaxN];\nbool ok[MaxN];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  for (int i = 0; i < n; i++)\n    for (int j = 0; j < i; j++)\n      if (a[i] == a[j]) ok[i] = ok[j] = true;\n  for (int i = 0; i < n; i++)\n    for (int j = i + 1; j < n; j++)\n      if (a[i] + a[j] == a[j]) {\n        printf(\"%d %d %d\\n\", i + 1, j + 1, j + 1);\n        return 0;\n      }\n  printf(\"-1\\n\");\n  return 0;\n}\n"}
{"src_uid": "94a38067fc8dd8619fa6e5873ca60220", "id": 23, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '5\\r\\n1 2 3 5 7\\r\\n', 'output': ['3 2 1\\r\\n']}, {'input': '5\\r\\n1 8 1 5 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6\\r\\n86 402 133 524 405 610\\r\\n', 'output': ['6 4 1\\r\\n']}, {'input': '8\\r\\n217 779 418 895 996 473 3 22\\r\\n', 'output': ['5 2 1\\r\\n']}, {'input': '10\\r\\n858 972 670 15 662 114 33 273 53 310\\r\\n', 'output': ['2 6 1\\r\\n']}, {'input': '100\\r\\n611 697 572 770 603 870 128 245 49 904 468 982 788 943 549 288 668 796 803 515 999 735 912 49 298 80 412 841 494 434 543 298 17 571 271 105 70 313 178 755 194 279 585 766 412 164 907 841 776 556 731 268 735 880 176 267 287 65 239 588 155 658 821 47 783 595 585 69 226 906 429 161 999 148 7 484 362 585 952 365 92 749 904 525 307 626 883 367 450 755 564 950 728 724 69 106 119 157 96 290\\r\\n', 'output': ['1 38 25\\r\\n']}, {'input': '100\\r\\n713 572 318 890 577 657 646 146 373 783 392 229 455 871 20 593 573 336 26 381 280 916 907 732 820 713 111 840 570 446 184 711 481 399 788 647 492 15 40 530 549 506 719 782 126 20 778 996 712 761 9 74 812 418 488 175 103 585 900 3 604 521 109 513 145 708 990 361 682 827 791 22 596 780 596 385 450 643 158 496 876 975 319 783 654 895 891 361 397 81 682 899 347 623 809 557 435 279 513 438\\r\\n', 'output': ['1 63 61\\r\\n']}, {'input': '100\\r\\n156 822 179 298 981 82 610 345 373 378 895 734 768 15 78 335 764 608 932 297 717 553 916 367 425 447 361 195 66 70 901 236 905 744 919 564 296 610 963 628 840 52 100 750 345 308 37 687 192 704 101 815 10 990 216 358 823 546 578 821 706 148 182 582 421 482 829 425 121 337 500 301 402 868 66 935 625 527 746 585 308 523 488 914 608 709 875 252 151 781 447 2 756 176 976 302 450 35 680 791\\r\\n', 'output': ['1 98 69\\r\\n']}, {'input': '100\\r\\n54 947 785 838 359 647 92 445 48 465 323 486 101 86 607 31 860 420 709 432 435 372 272 37 903 814 309 197 638 58 259 822 793 564 309 22 522 907 101 853 486 824 614 734 630 452 166 532 256 499 470 9 933 452 256 450 7 26 916 406 257 285 895 117 59 369 424 133 16 417 352 440 806 236 478 34 889 469 540 806 172 296 73 655 261 792 868 380 204 454 330 53 136 629 236 850 134 560 264 291\\r\\n', 'output': ['2 29 27\\r\\n']}, {'input': '99\\r\\n175 269 828 129 499 890 127 263 995 807 508 289 996 226 437 320 365 642 757 22 190 8 345 499 834 713 962 889 336 171 608 492 320 257 472 801 176 325 301 306 198 729 933 4 640 322 226 317 567 586 249 237 202 633 287 128 911 654 719 988 420 855 361 574 716 899 317 356 581 440 284 982 541 111 439 29 37 560 961 224 478 906 319 416 736 603 808 87 762 697 392 713 19 459 262 238 239 599 997\\r\\n', 'output': ['1 44 30\\r\\n']}, {'input': '98\\r\\n443 719 559 672 16 69 529 632 953 999 725 431 54 22 346 968 558 696 48 669 963 129 257 712 39 870 498 595 45 821 344 925 179 388 792 346 755 213 423 365 344 659 824 356 773 637 628 897 841 155 243 536 951 361 192 105 418 431 635 596 150 162 145 548 473 531 750 306 377 354 450 975 79 743 656 733 440 940 19 139 237 346 276 227 64 799 479 633 199 17 796 362 517 234 729 62 995 535\\r\\n', 'output': ['2 70 40\\r\\n']}, {'input': '97\\r\\n359 522 938 862 181 600 283 1000 910 191 590 220 761 818 903 264 751 751 987 316 737 898 168 925 244 674 34 950 754 472 81 6 37 520 112 891 981 454 897 424 489 238 363 709 906 951 677 828 114 373 589 835 52 89 97 435 277 560 551 204 879 469 928 523 231 163 183 609 821 915 615 969 616 23 874 437 844 321 78 53 643 786 585 38 744 347 150 179 988 985 200 11 15 9 547 886 752\\r\\n', 'output': ['1 23 10\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100\\r\\n328 397 235 453 188 254 879 225 423 36 384 296 486 592 231 849 856 255 213 898 234 800 701 529 951 693 507 326 15 905 618 348 967 927 28 979 752 850 343 35 84 302 36 390 482 826 249 918 91 289 973 457 557 348 365 239 709 565 320 560 153 130 647 708 483 469 788 473 322 844 830 562 611 961 397 673 69 960 74 703 369 968 382 451 328 160 211 230 566 208 7 545 293 73 806 375 157 410 303 58\\r\\n', 'output': ['1 79 6\\r\\n']}, {'input': '33\\r\\n52 145 137 734 180 847 178 286 716 134 181 630 358 764 593 762 785 28 1 468 189 540 764 485 165 656 114 58 628 108 605 584 257\\r\\n', 'output': ['8 30 7\\r\\n']}, {'input': '57\\r\\n75 291 309 68 444 654 985 158 514 204 116 918 374 806 176 31 49 455 269 66 722 713 164 818 317 295 546 564 134 641 28 13 987 478 146 219 213 940 289 173 157 666 168 391 392 71 870 477 446 988 414 568 964 684 409 671 454\\r\\n', 'output': ['2 41 29\\r\\n']}, {'input': '88\\r\\n327 644 942 738 84 118 981 686 530 404 137 197 434 16 693 183 423 325 410 345 941 329 7 106 79 867 584 358 533 675 192 718 641 329 900 768 404 301 101 538 954 590 401 954 447 14 559 337 756 586 934 367 538 928 945 936 770 641 488 579 206 869 902 139 216 446 723 150 829 205 373 578 357 368 960 40 121 206 503 385 521 161 501 694 138 370 709 308\\r\\n', 'output': ['1 77 61\\r\\n']}, {'input': '100\\r\\n804 510 266 304 788 625 862 888 408 82 414 470 777 991 729 229 933 406 601 1 596 720 608 706 432 361 527 548 59 548 474 515 4 991 263 568 681 24 117 563 576 587 281 643 904 521 891 106 842 884 943 54 605 815 504 757 311 374 335 192 447 652 633 410 455 402 382 150 432 836 413 819 669 875 638 925 217 805 632 520 605 266 728 795 162 222 603 159 284 790 914 443 775 97 789 606 859 13 851 47\\r\\n', 'output': ['1 77 42\\r\\n']}, {'input': '100\\r\\n449 649 615 713 64 385 927 466 138 126 143 886 80 199 208 43 196 694 92 89 264 180 617 970 191 196 910 150 275 89 693 190 191 99 542 342 45 592 114 56 451 170 64 589 176 102 308 92 402 153 414 675 352 157 69 150 91 288 163 121 816 184 20 234 836 12 593 150 793 439 540 93 99 663 186 125 349 247 476 106 77 523 215 7 363 278 441 745 337 25 148 384 15 915 108 211 240 58 23 408\\r\\n', 'output': ['1 6 5\\r\\n']}, {'input': '90\\r\\n881 436 52 308 97 261 153 931 670 538 702 156 114 445 154 685 452 76 966 790 93 42 547 65 736 364 136 489 719 322 239 628 696 735 55 703 622 375 100 188 804 341 546 474 484 446 729 290 974 301 602 225 996 244 488 983 882 460 962 754 395 617 61 640 534 292 158 375 632 902 420 979 379 38 100 67 963 928 190 456 545 571 45 716 153 68 844 2 102 116\\r\\n', 'output': ['1 14 2\\r\\n']}, {'input': '80\\r\\n313 674 262 240 697 146 391 221 793 504 896 818 92 899 86 370 341 339 306 887 937 570 830 683 729 519 240 833 656 847 427 958 435 704 853 230 758 347 660 575 843 293 649 396 437 787 654 599 35 103 779 783 447 379 444 585 902 713 791 150 851 228 306 721 996 471 617 403 102 168 197 741 877 481 968 545 331 715 236 654\\r\\n', 'output': ['1 13 8\\r\\n']}, {'input': '70\\r\\n745 264 471 171 946 32 277 511 269 469 89 831 69 2 369 407 583 602 646 633 429 747 113 302 722 321 344 824 241 372 263 287 822 24 652 758 246 967 219 313 882 597 752 965 389 775 227 556 95 904 308 340 899 514 400 187 275 318 621 546 659 488 199 154 811 1 725 79 925 82\\r\\n', 'output': ['1 63 60\\r\\n']}, {'input': '60\\r\\n176 502 680 102 546 917 516 801 392 435 635 492 398 456 653 444 472 513 634 378 273 276 44 920 68 124 800 167 825 250 452 264 561 344 98 933 381 939 426 51 568 548 206 887 342 763 151 514 156 354 486 546 998 649 356 438 295 570 450 589\\r\\n', 'output': ['2 26 20\\r\\n']}, {'input': '50\\r\\n608 92 889 33 146 803 402 91 868 400 828 505 375 558 584 129 361 776 974 123 765 804 326 186 61 927 904 511 762 775 640 593 300 664 897 461 869 911 986 789 607 500 309 457 294 104 724 471 216 155\\r\\n', 'output': ['3 25 11\\r\\n']}, {'input': '40\\r\\n40 330 98 612 747 336 640 381 991 366 22 167 352 12 868 166 603 40 313 869 609 981 609 804 54 729 8 854 347 300 828 922 39 633 695 988 4 530 545 176\\r\\n', 'output': ['5 10 8\\r\\n']}, {'input': '30\\r\\n471 920 308 544 347 222 878 671 467 332 215 180 681 114 151 203 492 951 653 614 453 510 540 422 399 532 113 198 932 825\\r\\n', 'output': ['2 21 9\\r\\n']}, {'input': '20\\r\\n551 158 517 475 595 108 764 961 590 297 761 841 659 568 82 888 733 214 993 359\\r\\n', 'output': ['3 20 2\\r\\n']}, {'input': '10\\r\\n983 748 726 406 196 993 2 251 66 263\\r\\n', 'output': ['-1\\r\\n']}, {'input': '9\\r\\n933 266 457 863 768 257 594 136 145\\r\\n', 'output': ['-1\\r\\n']}, {'input': '8\\r\\n537 198 48 771 944 868 700 163\\r\\n', 'output': ['7 8 1\\r\\n']}, {'input': '7\\r\\n140 779 639 679 768 479 158\\r\\n', 'output': ['2 3 1\\r\\n']}, {'input': '6\\r\\n744 359 230 586 944 442\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5\\r\\n700 939 173 494 120\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3\\r\\n907 452 355\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3\\r\\n963 630 333\\r\\n', 'output': ['1 3 2\\r\\n']}, {'input': '3\\r\\n2 2 4\\r\\n', 'output': ['3 2 1\\r\\n']}, {'input': '3\\r\\n2 4 100\\r\\n', 'output': ['-1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long v[110];\nlong long b[1100];\nint main() {\n  long long i, j, k, l, a;\n  int n, t;\n  cin >> n;\n  for (i = 1; i <= n; i++) cin >> v[i];\n  for (i = 1; i < n; i++)\n    for (j = i + 1; j <= n; j++)\n      b[v[i] + v[j]] = min(b[v[i] + v[j]], 2);\n  for (i = 1; i <= n; i++)\n    for (j = i + 1; j <= n; j++) {\n      l = v[i] + v[j];\n      a = 3;\n      for (k = 1; k <= n; k++) {\n        if (k == i || k == j || b[l - v[k]] || v[k] > l || v[k] < l - v[j])\n          continue;\n        a--;\n        if (a == 0) {\n          cout << i << \" \" << j << \" \" << k;\n          return 0;\n        }\n      }\n    }\n  cout << \"-1\";\n  return 0;\n}\n"}
{"src_uid": "b432dfa66bae2b542342f0b42c0a2598", "id": 24, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': 'HoUse\\r\\n', 'output': ['house']}, {'input': 'ViP\\r\\n', 'output': ['VIP']}, {'input': 'maTRIx\\r\\n', 'output': ['matrix']}, {'input': 'BNHWpnpawg\\r\\n', 'output': ['bnhwpnpawg']}, {'input': 'VTYGP\\r\\n', 'output': ['VTYGP']}, {'input': 'CHNenu\\r\\n', 'output': ['chnenu']}, {'input': 'ERPZGrodyu\\r\\n', 'output': ['erpzgrodyu']}, {'input': 'KSXBXWpebh\\r\\n', 'output': ['KSXBXWPEBH']}, {'input': 'qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv\\r\\n', 'output': ['qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv']}, {'input': 'Amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd\\r\\n', 'output': ['amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd']}, {'input': 'ISAGFJFARYFBLOPQDSHWGMCNKMFTLVFUGNJEWGWNBLXUIATXEkqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv\\r\\n', 'output': ['isagfjfaryfblopqdshwgmcnkmftlvfugnjewgwnblxuiatxekqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv']}, {'input': 'XHRPXZEGHSOCJPICUIXSKFUZUPYTSGJSDIYBCMNMNBPNDBXLXBzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg\\r\\n', 'output': ['xhrpxzeghsocjpicuixskfuzupytsgjsdiybcmnmnbpndbxlxbzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg']}, {'input': 'RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGAdkcetqjljtmttlonpekcovdzebzdkzggwfsxhapmjkdbuceak\\r\\n', 'output': ['RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGADKCETQJLJTMTTLONPEKCOVDZEBZDKZGGWFSXHAPMJKDBUCEAK']}, {'input': 'DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFw\\r\\n', 'output': ['DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFW']}, {'input': 'NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB\\r\\n', 'output': ['NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB']}, {'input': 'igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge\\r\\n', 'output': ['igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge']}, {'input': 'Ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw\\r\\n', 'output': ['ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw']}, {'input': 'YQOMLKYAORUQQUCQZCDYMIVDHGWZFFRMUVTAWCHERFPMNRYRIkgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks\\r\\n', 'output': ['yqomlkyaoruqqucqzcdymivdhgwzffrmuvtawcherfpmnryrikgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks']}, {'input': 'CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJcuusigdqfkumewjtdyitveeiaybwrhomrwmpdipjwiuxfnwuz\\r\\n', 'output': ['CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJCUUSIGDQFKUMEWJTDYITVEEIAYBWRHOMRWMPDIPJWIUXFNWUZ']}, {'input': 'WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWuckzcpxosodcjaaakvlxpbiigsiauviilylnnqlyucziihqg\\r\\n', 'output': ['WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWUCKZCPXOSODCJAAAKVLXPBIIGSIAUVIILYLNNQLYUCZIIHQG']}, {'input': 'VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO\\r\\n', 'output': ['VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO']}, {'input': 'EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDd\\r\\n', 'output': ['EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDD']}, {'input': 'EBWOVSNLYTWWXrnovgugogtjahnmatomubebyxakas\\r\\n', 'output': ['ebwovsnlytwwxrnovgugogtjahnmatomubebyxakas']}, {'input': 'AORNNDKTRLRVGDPXJKXFTPFpopuzrlqumrxssskvbm\\r\\n', 'output': ['AORNNDKTRLRVGDPXJKXFTPFPOPUZRLQUMRXSSSKVBM']}, {'input': 'DBBZJCWQEVGYHEEUHJAWRHBDPsnplijbwtdibqrrheebfxqcvn\\r\\n', 'output': ['dbbzjcwqevgyheeuhjawrhbdpsnplijbwtdibqrrheebfxqcvn']}, {'input': 't\\r\\n', 'output': ['t']}, {'input': 'N\\r\\n', 'output': ['N']}, {'input': 'kv\\r\\n', 'output': ['kv']}, {'input': 'Ur\\r\\n', 'output': ['ur']}, {'input': 'CN\\r\\n', 'output': ['CN']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e2 + 9, M = 1e6 + 9;\nconst long long int mod = 1e9 + 7;\nconst long double pi = 3.141592653589793238462643383279502884197;\nlong long int n, q, k, z, y, r, cnt, m, t = 1, p = 0, a[105], d[M], ans, x,\n    sz, c, b, l, xx, cx, oo = 1e18, e, flag;\nstring s;\nvector<pair<int, int> > vp[N];\nvector<int> v;\nmap<int, int> mp;\nset<pair<int, int> > sp;\nmultiset<int> msp;\nint main() {\n  cin.tie(NULL);\n  cin >> s;\n  int sz = s.size();\n  char c1, c2;\n  int cnt = 0;\n  for (int i = 0; i < sz; i++) {\n    c1 = s[i];\n    if ('a' <= c1 && c1 <= 'z') cnt++;\n  }\n  if (sz == cnt) {\n    for (int i = 0; i < sz; i++) s[i] -= 32;\n  } else {\n    for (int i = 0; i < sz; i++) s[i] += 32;\n  }\n  cout << s << endl;\n  return 0;\n}\n"}
{"src_uid": "b432dfa66bae2b542342f0b42c0a2598", "id": 24, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': 'HoUse\\r\\n', 'output': ['house']}, {'input': 'ViP\\r\\n', 'output': ['VIP']}, {'input': 'maTRIx\\r\\n', 'output': ['matrix']}, {'input': 'BNHWpnpawg\\r\\n', 'output': ['bnhwpnpawg']}, {'input': 'VTYGP\\r\\n', 'output': ['VTYGP']}, {'input': 'CHNenu\\r\\n', 'output': ['chnenu']}, {'input': 'ERPZGrodyu\\r\\n', 'output': ['erpzgrodyu']}, {'input': 'KSXBXWpebh\\r\\n', 'output': ['KSXBXWPEBH']}, {'input': 'qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv\\r\\n', 'output': ['qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv']}, {'input': 'Amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd\\r\\n', 'output': ['amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd']}, {'input': 'ISAGFJFARYFBLOPQDSHWGMCNKMFTLVFUGNJEWGWNBLXUIATXEkqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv\\r\\n', 'output': ['isagfjfaryfblopqdshwgmcnkmftlvfugnjewgwnblxuiatxekqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv']}, {'input': 'XHRPXZEGHSOCJPICUIXSKFUZUPYTSGJSDIYBCMNMNBPNDBXLXBzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg\\r\\n', 'output': ['xhrpxzeghsocjpicuixskfuzupytsgjsdiybcmnmnbpndbxlxbzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg']}, {'input': 'RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGAdkcetqjljtmttlonpekcovdzebzdkzggwfsxhapmjkdbuceak\\r\\n', 'output': ['RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGADKCETQJLJTMTTLONPEKCOVDZEBZDKZGGWFSXHAPMJKDBUCEAK']}, {'input': 'DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFw\\r\\n', 'output': ['DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFW']}, {'input': 'NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB\\r\\n', 'output': ['NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB']}, {'input': 'igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge\\r\\n', 'output': ['igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge']}, {'input': 'Ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw\\r\\n', 'output': ['ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw']}, {'input': 'YQOMLKYAORUQQUCQZCDYMIVDHGWZFFRMUVTAWCHERFPMNRYRIkgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks\\r\\n', 'output': ['yqomlkyaoruqqucqzcdymivdhgwzffrmuvtawcherfpmnryrikgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks']}, {'input': 'CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJcuusigdqfkumewjtdyitveeiaybwrhomrwmpdipjwiuxfnwuz\\r\\n', 'output': ['CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJCUUSIGDQFKUMEWJTDYITVEEIAYBWRHOMRWMPDIPJWIUXFNWUZ']}, {'input': 'WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWuckzcpxosodcjaaakvlxpbiigsiauviilylnnqlyucziihqg\\r\\n', 'output': ['WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWUCKZCPXOSODCJAAAKVLXPBIIGSIAUVIILYLNNQLYUCZIIHQG']}, {'input': 'VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO\\r\\n', 'output': ['VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO']}, {'input': 'EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDd\\r\\n', 'output': ['EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDD']}, {'input': 'EBWOVSNLYTWWXrnovgugogtjahnmatomubebyxakas\\r\\n', 'output': ['ebwovsnlytwwxrnovgugogtjahnmatomubebyxakas']}, {'input': 'AORNNDKTRLRVGDPXJKXFTPFpopuzrlqumrxssskvbm\\r\\n', 'output': ['AORNNDKTRLRVGDPXJKXFTPFPOPUZRLQUMRXSSSKVBM']}, {'input': 'DBBZJCWQEVGYHEEUHJAWRHBDPsnplijbwtdibqrrheebfxqcvn\\r\\n', 'output': ['dbbzjcwqevgyheeuhjawrhbdpsnplijbwtdibqrrheebfxqcvn']}, {'input': 't\\r\\n', 'output': ['t']}, {'input': 'N\\r\\n', 'output': ['N']}, {'input': 'kv\\r\\n', 'output': ['kv']}, {'input': 'Ur\\r\\n', 'output': ['ur']}, {'input': 'CN\\r\\n', 'output': ['CN']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nstring s, s1;\nint c = 0, d = 0;\nint main() {\n  cin >> s;\n  for (int i = 0; i < s.length(); i++) {\n    if (isupper(s[i]))\n      c++;\n    else\n      d++;\n  }\n  if (c >= d) {\n    for (int i = 0; i < s.length(); i++) s1.push_back(tolower(s[i]));\n    cout << s1;\n  } else {\n    for (int i = 0; i < s.length(); i++) s1.push_back(toupper(s[i]));\n    cout << s1;\n  }\n  return 0;\n}\n"}
{"src_uid": "b432dfa66bae2b542342f0b42c0a2598", "id": 24, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': 'HoUse\\r\\n', 'output': ['house']}, {'input': 'ViP\\r\\n', 'output': ['VIP']}, {'input': 'maTRIx\\r\\n', 'output': ['matrix']}, {'input': 'BNHWpnpawg\\r\\n', 'output': ['bnhwpnpawg']}, {'input': 'VTYGP\\r\\n', 'output': ['VTYGP']}, {'input': 'CHNenu\\r\\n', 'output': ['chnenu']}, {'input': 'ERPZGrodyu\\r\\n', 'output': ['erpzgrodyu']}, {'input': 'KSXBXWpebh\\r\\n', 'output': ['KSXBXWPEBH']}, {'input': 'qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv\\r\\n', 'output': ['qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv']}, {'input': 'Amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd\\r\\n', 'output': ['amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd']}, {'input': 'ISAGFJFARYFBLOPQDSHWGMCNKMFTLVFUGNJEWGWNBLXUIATXEkqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv\\r\\n', 'output': ['isagfjfaryfblopqdshwgmcnkmftlvfugnjewgwnblxuiatxekqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv']}, {'input': 'XHRPXZEGHSOCJPICUIXSKFUZUPYTSGJSDIYBCMNMNBPNDBXLXBzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg\\r\\n', 'output': ['xhrpxzeghsocjpicuixskfuzupytsgjsdiybcmnmnbpndbxlxbzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg']}, {'input': 'RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGAdkcetqjljtmttlonpekcovdzebzdkzggwfsxhapmjkdbuceak\\r\\n', 'output': ['RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGADKCETQJLJTMTTLONPEKCOVDZEBZDKZGGWFSXHAPMJKDBUCEAK']}, {'input': 'DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFw\\r\\n', 'output': ['DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFW']}, {'input': 'NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB\\r\\n', 'output': ['NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB']}, {'input': 'igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge\\r\\n', 'output': ['igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge']}, {'input': 'Ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw\\r\\n', 'output': ['ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw']}, {'input': 'YQOMLKYAORUQQUCQZCDYMIVDHGWZFFRMUVTAWCHERFPMNRYRIkgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks\\r\\n', 'output': ['yqomlkyaoruqqucqzcdymivdhgwzffrmuvtawcherfpmnryrikgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks']}, {'input': 'CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJcuusigdqfkumewjtdyitveeiaybwrhomrwmpdipjwiuxfnwuz\\r\\n', 'output': ['CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJCUUSIGDQFKUMEWJTDYITVEEIAYBWRHOMRWMPDIPJWIUXFNWUZ']}, {'input': 'WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWuckzcpxosodcjaaakvlxpbiigsiauviilylnnqlyucziihqg\\r\\n', 'output': ['WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWUCKZCPXOSODCJAAAKVLXPBIIGSIAUVIILYLNNQLYUCZIIHQG']}, {'input': 'VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO\\r\\n', 'output': ['VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO']}, {'input': 'EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDd\\r\\n', 'output': ['EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDD']}, {'input': 'EBWOVSNLYTWWXrnovgugogtjahnmatomubebyxakas\\r\\n', 'output': ['ebwovsnlytwwxrnovgugogtjahnmatomubebyxakas']}, {'input': 'AORNNDKTRLRVGDPXJKXFTPFpopuzrlqumrxssskvbm\\r\\n', 'output': ['AORNNDKTRLRVGDPXJKXFTPFPOPUZRLQUMRXSSSKVBM']}, {'input': 'DBBZJCWQEVGYHEEUHJAWRHBDPsnplijbwtdibqrrheebfxqcvn\\r\\n', 'output': ['dbbzjcwqevgyheeuhjawrhbdpsnplijbwtdibqrrheebfxqcvn']}, {'input': 't\\r\\n', 'output': ['t']}, {'input': 'N\\r\\n', 'output': ['N']}, {'input': 'kv\\r\\n', 'output': ['kv']}, {'input': 'Ur\\r\\n', 'output': ['ur']}, {'input': 'CN\\r\\n', 'output': ['CN']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nchar str[105];\nint main() {\n  scanf(\"%s\", str);\n  int k = 0, n = strlen(str);\n  for (int i = 0; i < n; i++) {\n    if (str[i] >= 'A' && str[i] <= 'Z')\n      k++;\n    else\n      k--;\n  }\n  if (k >= 0)\n    for (int i = 0; i < n; i++) printf(\"%c\", str[i] + 32);\n  else\n    for (int i = 0; i < n; i++) printf(\"%c\", str[i] - 32);\n}\n"}
{"src_uid": "b432dfa66bae2b542342f0b42c0a2598", "id": 24, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': 'HoUse\\r\\n', 'output': ['house']}, {'input': 'ViP\\r\\n', 'output': ['VIP']}, {'input': 'maTRIx\\r\\n', 'output': ['matrix']}, {'input': 'BNHWpnpawg\\r\\n', 'output': ['bnhwpnpawg']}, {'input': 'VTYGP\\r\\n', 'output': ['VTYGP']}, {'input': 'CHNenu\\r\\n', 'output': ['chnenu']}, {'input': 'ERPZGrodyu\\r\\n', 'output': ['erpzgrodyu']}, {'input': 'KSXBXWpebh\\r\\n', 'output': ['KSXBXWPEBH']}, {'input': 'qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv\\r\\n', 'output': ['qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv']}, {'input': 'Amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd\\r\\n', 'output': ['amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd']}, {'input': 'ISAGFJFARYFBLOPQDSHWGMCNKMFTLVFUGNJEWGWNBLXUIATXEkqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv\\r\\n', 'output': ['isagfjfaryfblopqdshwgmcnkmftlvfugnjewgwnblxuiatxekqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv']}, {'input': 'XHRPXZEGHSOCJPICUIXSKFUZUPYTSGJSDIYBCMNMNBPNDBXLXBzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg\\r\\n', 'output': ['xhrpxzeghsocjpicuixskfuzupytsgjsdiybcmnmnbpndbxlxbzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg']}, {'input': 'RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGAdkcetqjljtmttlonpekcovdzebzdkzggwfsxhapmjkdbuceak\\r\\n', 'output': ['RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGADKCETQJLJTMTTLONPEKCOVDZEBZDKZGGWFSXHAPMJKDBUCEAK']}, {'input': 'DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFw\\r\\n', 'output': ['DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFW']}, {'input': 'NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB\\r\\n', 'output': ['NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB']}, {'input': 'igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge\\r\\n', 'output': ['igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge']}, {'input': 'Ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw\\r\\n', 'output': ['ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw']}, {'input': 'YQOMLKYAORUQQUCQZCDYMIVDHGWZFFRMUVTAWCHERFPMNRYRIkgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks\\r\\n', 'output': ['yqomlkyaoruqqucqzcdymivdhgwzffrmuvtawcherfpmnryrikgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks']}, {'input': 'CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJcuusigdqfkumewjtdyitveeiaybwrhomrwmpdipjwiuxfnwuz\\r\\n', 'output': ['CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJCUUSIGDQFKUMEWJTDYITVEEIAYBWRHOMRWMPDIPJWIUXFNWUZ']}, {'input': 'WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWuckzcpxosodcjaaakvlxpbiigsiauviilylnnqlyucziihqg\\r\\n', 'output': ['WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWUCKZCPXOSODCJAAAKVLXPBIIGSIAUVIILYLNNQLYUCZIIHQG']}, {'input': 'VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO\\r\\n', 'output': ['VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO']}, {'input': 'EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDd\\r\\n', 'output': ['EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDD']}, {'input': 'EBWOVSNLYTWWXrnovgugogtjahnmatomubebyxakas\\r\\n', 'output': ['ebwovsnlytwwxrnovgugogtjahnmatomubebyxakas']}, {'input': 'AORNNDKTRLRVGDPXJKXFTPFpopuzrlqumrxssskvbm\\r\\n', 'output': ['AORNNDKTRLRVGDPXJKXFTPFPOPUZRLQUMRXSSSKVBM']}, {'input': 'DBBZJCWQEVGYHEEUHJAWRHBDPsnplijbwtdibqrrheebfxqcvn\\r\\n', 'output': ['dbbzjcwqevgyheeuhjawrhbdpsnplijbwtdibqrrheebfxqcvn']}, {'input': 't\\r\\n', 'output': ['t']}, {'input': 'N\\r\\n', 'output': ['N']}, {'input': 'kv\\r\\n', 'output': ['kv']}, {'input': 'Ur\\r\\n', 'output': ['ur']}, {'input': 'CN\\r\\n', 'output': ['CN']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s;\n  cin >> s;\n  int n = s.size();\n  int c1 = 0, c2 = 0;\n  for (int i = 0; i < n; i++) {\n    if (isupper(s[i]))\n      c1++;\n    else if (islower(s[i]))\n      c2++;\n  }\n  int minc = min(c1, c2);\n  if (c1 + c2 - minc < minc / 2) {\n    for (int i = 0; i < n; i++)\n      if (islower(s[i])) s[i] = s[i] - 32;\n  } else {\n    for (int i = 0; i < n; i++)\n      if (isupper(s[i])) s[i] = s[i] + 32;\n  }\n  cout << s << endl;\n  return 0;\n}\n"}
{"src_uid": "b432dfa66bae2b542342f0b42c0a2598", "id": 24, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': 'HoUse\\r\\n', 'output': ['house']}, {'input': 'ViP\\r\\n', 'output': ['VIP']}, {'input': 'maTRIx\\r\\n', 'output': ['matrix']}, {'input': 'BNHWpnpawg\\r\\n', 'output': ['bnhwpnpawg']}, {'input': 'VTYGP\\r\\n', 'output': ['VTYGP']}, {'input': 'CHNenu\\r\\n', 'output': ['chnenu']}, {'input': 'ERPZGrodyu\\r\\n', 'output': ['erpzgrodyu']}, {'input': 'KSXBXWpebh\\r\\n', 'output': ['KSXBXWPEBH']}, {'input': 'qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv\\r\\n', 'output': ['qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv']}, {'input': 'Amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd\\r\\n', 'output': ['amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd']}, {'input': 'ISAGFJFARYFBLOPQDSHWGMCNKMFTLVFUGNJEWGWNBLXUIATXEkqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv\\r\\n', 'output': ['isagfjfaryfblopqdshwgmcnkmftlvfugnjewgwnblxuiatxekqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv']}, {'input': 'XHRPXZEGHSOCJPICUIXSKFUZUPYTSGJSDIYBCMNMNBPNDBXLXBzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg\\r\\n', 'output': ['xhrpxzeghsocjpicuixskfuzupytsgjsdiybcmnmnbpndbxlxbzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg']}, {'input': 'RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGAdkcetqjljtmttlonpekcovdzebzdkzggwfsxhapmjkdbuceak\\r\\n', 'output': ['RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGADKCETQJLJTMTTLONPEKCOVDZEBZDKZGGWFSXHAPMJKDBUCEAK']}, {'input': 'DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFw\\r\\n', 'output': ['DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFW']}, {'input': 'NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB\\r\\n', 'output': ['NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB']}, {'input': 'igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge\\r\\n', 'output': ['igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge']}, {'input': 'Ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw\\r\\n', 'output': ['ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw']}, {'input': 'YQOMLKYAORUQQUCQZCDYMIVDHGWZFFRMUVTAWCHERFPMNRYRIkgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks\\r\\n', 'output': ['yqomlkyaoruqqucqzcdymivdhgwzffrmuvtawcherfpmnryrikgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks']}, {'input': 'CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJcuusigdqfkumewjtdyitveeiaybwrhomrwmpdipjwiuxfnwuz\\r\\n', 'output': ['CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJCUUSIGDQFKUMEWJTDYITVEEIAYBWRHOMRWMPDIPJWIUXFNWUZ']}, {'input': 'WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWuckzcpxosodcjaaakvlxpbiigsiauviilylnnqlyucziihqg\\r\\n', 'output': ['WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWUCKZCPXOSODCJAAAKVLXPBIIGSIAUVIILYLNNQLYUCZIIHQG']}, {'input': 'VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO\\r\\n', 'output': ['VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO']}, {'input': 'EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDd\\r\\n', 'output': ['EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDD']}, {'input': 'EBWOVSNLYTWWXrnovgugogtjahnmatomubebyxakas\\r\\n', 'output': ['ebwovsnlytwwxrnovgugogtjahnmatomubebyxakas']}, {'input': 'AORNNDKTRLRVGDPXJKXFTPFpopuzrlqumrxssskvbm\\r\\n', 'output': ['AORNNDKTRLRVGDPXJKXFTPFPOPUZRLQUMRXSSSKVBM']}, {'input': 'DBBZJCWQEVGYHEEUHJAWRHBDPsnplijbwtdibqrrheebfxqcvn\\r\\n', 'output': ['dbbzjcwqevgyheeuhjawrhbdpsnplijbwtdibqrrheebfxqcvn']}, {'input': 't\\r\\n', 'output': ['t']}, {'input': 'N\\r\\n', 'output': ['N']}, {'input': 'kv\\r\\n', 'output': ['kv']}, {'input': 'Ur\\r\\n', 'output': ['ur']}, {'input': 'CN\\r\\n', 'output': ['CN']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s;\n  cin >> s;\n  int i, flag = 0;\n  for (i = 0; i < s.size(); i++) {\n    if (isupper(s[i]) && flag == 0)\n      cout << s[i];\n    else if (islower(s[i]) && flag == 0) {\n      cout << s[i] << endl;\n      flag = 1;\n    } else if (isupper(s[i])) {\n      cout << s[i];\n      flag = 1;\n    }\n  }\n  if (flag == 0) cout << s << endl;\n}\n"}
{"src_uid": "3714b7596a6b48ca5b7a346f60d90549", "id": 25, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1010100\\r\\n0100101\\r\\n', 'output': ['1110001']}, {'input': '000\\r\\n111\\r\\n', 'output': ['111']}, {'input': '1110\\r\\n1010\\r\\n', 'output': ['0100']}, {'input': '01110\\r\\n01100\\r\\n', 'output': ['00010']}, {'input': '011101\\r\\n000001\\r\\n', 'output': ['011100']}, {'input': '10\\r\\n01\\r\\n', 'output': ['11']}, {'input': '00111111\\r\\n11011101\\r\\n', 'output': ['11100010']}, {'input': '011001100\\r\\n101001010\\r\\n', 'output': ['110000110']}, {'input': '1100100001\\r\\n0110101100\\r\\n', 'output': ['1010001101']}, {'input': '00011101010\\r\\n10010100101\\r\\n', 'output': ['10001001111']}, {'input': '100000101101\\r\\n111010100011\\r\\n', 'output': ['011010001110']}, {'input': '1000001111010\\r\\n1101100110001\\r\\n', 'output': ['0101101001011']}, {'input': '01011111010111\\r\\n10001110111010\\r\\n', 'output': ['11010001101101']}, {'input': '110010000111100\\r\\n001100101011010\\r\\n', 'output': ['111110101100110']}, {'input': '0010010111110000\\r\\n0000000011010110\\r\\n', 'output': ['0010010100100110']}, {'input': '00111110111110000\\r\\n01111100001100000\\r\\n', 'output': ['01000010110010000']}, {'input': '101010101111010001\\r\\n001001111101111101\\r\\n', 'output': ['100011010010101100']}, {'input': '0110010101111100000\\r\\n0011000101000000110\\r\\n', 'output': ['0101010000111100110']}, {'input': '11110100011101010111\\r\\n00001000011011000000\\r\\n', 'output': ['11111100000110010111']}, {'input': '101010101111101101001\\r\\n111010010010000011111\\r\\n', 'output': ['010000111101101110110']}, {'input': '0000111111100011000010\\r\\n1110110110110000001010\\r\\n', 'output': ['1110001001010011001000']}, {'input': '10010010101000110111000\\r\\n00101110100110111000111\\r\\n', 'output': ['10111100001110001111111']}, {'input': '010010010010111100000111\\r\\n100100111111100011001110\\r\\n', 'output': ['110110101101011111001001']}, {'input': '0101110100100111011010010\\r\\n0101100011010111001010001\\r\\n', 'output': ['0000010111110000010000011']}, {'input': '10010010100011110111111011\\r\\n10000110101100000001000100\\r\\n', 'output': ['00010100001111110110111111']}, {'input': '000001111000000100001000000\\r\\n011100111101111001110110001\\r\\n', 'output': ['011101000101111101111110001']}, {'input': '0011110010001001011001011100\\r\\n0000101101000011101011001010\\r\\n', 'output': ['0011011111001010110010010110']}, {'input': '11111000000000010011001101111\\r\\n11101110011001010100010000000\\r\\n', 'output': ['00010110011001000111011101111']}, {'input': '011001110000110100001100101100\\r\\n001010000011110000001000101001\\r\\n', 'output': ['010011110011000100000100000101']}, {'input': '1011111010001100011010110101111\\r\\n1011001110010000000101100010101\\r\\n', 'output': ['0000110100011100011111010111010']}, {'input': '10111000100001000001010110000001\\r\\n10111000001100101011011001011000\\r\\n', 'output': ['00000000101101101010001111011001']}, {'input': '000001010000100001000000011011100\\r\\n111111111001010100100001100000111\\r\\n', 'output': ['111110101001110101100001111011011']}, {'input': '1101000000000010011011101100000110\\r\\n1110000001100010011010000011011110\\r\\n', 'output': ['0011000001100000000001101111011000']}, {'input': '01011011000010100001100100011110001\\r\\n01011010111000001010010100001110000\\r\\n', 'output': ['00000001111010101011110000010000001']}, {'input': '000011111000011001000110111100000100\\r\\n011011000110000111101011100111000111\\r\\n', 'output': ['011000111110011110101101011011000011']}, {'input': '1001000010101110001000000011111110010\\r\\n0010001011010111000011101001010110000\\r\\n', 'output': ['1011001001111001001011101010101000010']}, {'input': '00011101011001100101111111000000010101\\r\\n10010011011011001011111000000011101011\\r\\n', 'output': ['10001110000010101110000111000011111110']}, {'input': '111011100110001001101111110010111001010\\r\\n111111101101111001110010000101101000100\\r\\n', 'output': ['000100001011110000011101110111010001110']}, {'input': '1111001001101000001000000010010101001010\\r\\n0010111100111110001011000010111110111001\\r\\n', 'output': ['1101110101010110000011000000101011110011']}, {'input': '00100101111000000101011111110010100011010\\r\\n11101110001010010101001000111110101010100\\r\\n', 'output': ['11001011110010010000010111001100001001110']}, {'input': '101011001110110100101001000111010101101111\\r\\n100111100110101011010100111100111111010110\\r\\n', 'output': ['001100101000011111111101111011101010111001']}, {'input': '1111100001100101000111101001001010011100001\\r\\n1000110011000011110010001011001110001000001\\r\\n', 'output': ['0111010010100110110101100010000100010100000']}, {'input': '01100111011111010101000001101110000001110101\\r\\n10011001011111110000000101011001001101101100\\r\\n', 'output': ['11111110000000100101000100110111001100011001']}, {'input': '110010100111000100100101100000011100000011001\\r\\n011001111011100110000110111001110110100111011\\r\\n', 'output': ['101011011100100010100011011001101010100100010']}, {'input': '0001100111111011010110100100111000000111000110\\r\\n1100101011000000000001010010010111001100110001\\r\\n', 'output': ['1101001100111011010111110110101111001011110111']}, {'input': '00000101110110110001110010100001110100000100000\\r\\n10010000110011110001101000111111101010011010001\\r\\n', 'output': ['10010101000101000000011010011110011110011110001']}, {'input': '110000100101011100100011001111110011111110010001\\r\\n101011111001011100110110111101110011010110101100\\r\\n', 'output': ['011011011100000000010101110010000000101000111101']}, {'input': '0101111101011111010101011101000011101100000000111\\r\\n0000101010110110001110101011011110111001010100100\\r\\n', 'output': ['0101010111101001011011110110011101010101010100011']}, {'input': '11000100010101110011101000011111001010110111111100\\r\\n00001111000111001011111110000010101110111001000011\\r\\n', 'output': ['11001011010010111000010110011101100100001110111111']}, {'input': '101000001101111101101111111000001110110010101101010\\r\\n010011100111100001100000010001100101000000111011011\\r\\n', 'output': ['111011101010011100001111101001101011110010010110001']}, {'input': '0011111110010001010100010110111000110011001101010100\\r\\n0111000000100010101010000100101000000100101000111001\\r\\n', 'output': ['0100111110110011111110010010010000110111100101101101']}, {'input': '11101010000110000011011010000001111101000111011111100\\r\\n10110011110001010100010110010010101001010111100100100\\r\\n', 'output': ['01011001110111010111001100010011010100010000111011000']}, {'input': '011000100001000001101000010110100110011110100111111011\\r\\n111011001000001001110011001111011110111110110011011111\\r\\n', 'output': ['100011101001001000011011011001111000100000010100100100']}, {'input': '0111010110010100000110111011010110100000000111110110000\\r\\n1011100100010001101100000100111111101001110010000100110\\r\\n', 'output': ['1100110010000101101010111111101001001001110101110010110']}, {'input': '10101000100111000111010001011011011011110100110101100011\\r\\n11101111000000001100100011111000100100000110011001101110\\r\\n', 'output': ['01000111100111001011110010100011111111110010101100001101']}, {'input': '000000111001010001000000110001001011100010011101010011011\\r\\n110001101000010010000101000100001111101001100100001010010\\r\\n', 'output': ['110001010001000011000101110101000100001011111001011001001']}, {'input': '0101011100111010000111110010101101111111000000111100011100\\r\\n1011111110000010101110111001000011100000100111111111000111\\r\\n', 'output': ['1110100010111000101001001011101110011111100111000011011011']}, {'input': '11001000001100100111100111100100101011000101001111001001101\\r\\n10111110100010000011010100110100100011101001100000001110110\\r\\n', 'output': ['01110110101110100100110011010000001000101100101111000111011']}, {'input': '010111011011101000000110000110100110001110100001110110111011\\r\\n101011110011101011101101011111010100100001100111100100111011\\r\\n', 'output': ['111100101000000011101011011001110010101111000110010010000000']}, {'input': '1001011110110110000100011001010110000100011010010111010101110\\r\\n1101111100001000010111110011010101111010010100000001000010111\\r\\n', 'output': ['0100100010111110010011101010000011111110001110010110010111001']}, {'input': '10000010101111100111110101111000010100110111101101111111111010\\r\\n10110110101100101010011001011010100110111011101100011001100111\\r\\n', 'output': ['00110100000011001101101100100010110010001100000001100110011101']}, {'input': '011111010011111000001010101001101001000010100010111110010100001\\r\\n011111001011000011111001000001111001010110001010111101000010011\\r\\n', 'output': ['000000011000111011110011101000010000010100101000000011010110010']}, {'input': '1111000000110001011101000100100100001111011100001111001100011111\\r\\n1101100110000101100001100000001001011011111011010101000101001010\\r\\n', 'output': ['0010100110110100111100100100101101010100100111011010001001010101']}, {'input': '01100000101010010011001110100110110010000110010011011001100100011\\r\\n10110110010110111100100111000111000110010000000101101110000010111\\r\\n', 'output': ['11010110111100101111101001100001110100010110010110110111100110100']}, {'input': '001111111010000100001100001010011001111110011110010111110001100111\\r\\n110000101001011000100010101100100110000111100000001101001110010111\\r\\n', 'output': ['111111010011011100101110100110111111111001111110011010111111110000']}, {'input': '1011101011101101011110101101011101011000010011100101010101000100110\\r\\n0001000001001111010111100100111101100000000001110001000110000000110\\r\\n', 'output': ['1010101010100010001001001001100000111000010010010100010011000100000']}, {'input': '01000001011001010011011100010000100100110101111011011011110000001110\\r\\n01011110000110011011000000000011000111100001010000000011111001110000\\r\\n', 'output': ['00011111011111001000011100010011100011010100101011011000001001111110']}, {'input': '110101010100110101000001111110110100010010000100111110010100110011100\\r\\n111010010111111011100110101011001011001110110111110100000110110100111\\r\\n', 'output': ['001111000011001110100111010101111111011100110011001010010010000111011']}, {'input': '1001101011000001011111100110010010000011010001001111011100010100110001\\r\\n1111100111110101001111010001010000011001001001010110001111000000100101\\r\\n', 'output': ['0110001100110100010000110111000010011010011000011001010011010100010100']}, {'input': '00000111110010110001110110001010010101000111011001111111100110011110010\\r\\n00010111110100000100110101000010010001100001100011100000001100010100010\\r\\n', 'output': ['00010000000110110101000011001000000100100110111010011111101010001010000']}, {'input': '100101011100101101000011010001011001101110101110001100010001010111001110\\r\\n100001111100101011011111110000001111000111001011111110000010101110111001\\r\\n', 'output': ['000100100000000110011100100001010110101001100101110010010011111001110111']}, {'input': '1101100001000111001101001011101000111000011110000001001101101001111011010\\r\\n0101011101010100011011010110101000010010110010011110101100000110110001000\\r\\n', 'output': ['1000111100010011010110011101000000101010101100011111100001101111001010010']}, {'input': '01101101010011110101100001110101111011100010000010001101111000011110111111\\r\\n00101111001101001100111010000101110000100101101111100111101110010100011011\\r\\n', 'output': ['01000010011110111001011011110000001011000111101101101010010110001010100100']}, {'input': '101100101100011001101111110110110010100110110010100001110010110011001101011\\r\\n000001011010101011110011111101001110000111000010001101000010010000010001101\\r\\n', 'output': ['101101110110110010011100001011111100100001110000101100110000100011011100110']}, {'input': '0010001011001010001100000010010011110110011000100000000100110000101111001110\\r\\n1100110100111000110100001110111001011101001100001010100001010011100110110001\\r\\n', 'output': ['1110111111110010111000001100101010101011010100101010100101100011001001111111']}, {'input': '00101101010000000101011001101011001100010001100000101011101110000001111001000\\r\\n10010110010111000000101101000011101011001010000011011101101011010000000011111\\r\\n', 'output': ['10111011000111000101110100101000100111011011100011110110000101010001111010111']}, {'input': '111100000100100000101001100001001111001010001000001000000111010000010101101011\\r\\n001000100010100101111011111011010110101100001111011000010011011011100010010110\\r\\n', 'output': ['110100100110000101010010011010011001100110000111010000010100001011110111111101']}, {'input': '0110001101100100001111110101101000100101010010101010011001101001001101110000000\\r\\n0111011000000010010111011110010000000001000110001000011001101000000001110100111\\r\\n', 'output': ['0001010101100110011000101011111000100100010100100010000000000001001100000100111']}, {'input': '10001111111001000101001011110101111010100001011010101100111001010001010010001000\\r\\n10000111010010011110111000111010101100000011110001101111001000111010100000000001\\r\\n', 'output': ['00001000101011011011110011001111010110100010101011000011110001101011110010001001']}, {'input': '100110001110110000100101001110000011110110000110000000100011110100110110011001101\\r\\n110001110101110000000100101001101011111100100100001001000110000001111100011110110\\r\\n', 'output': ['010111111011000000100001100111101000001010100010001001100101110101001010000111011']}, {'input': '0000010100100000010110111100011111111010011101000000100000011001001101101100111010\\r\\n0100111110011101010110101011110110010111001111000110101100101110111100101000111111\\r\\n', 'output': ['0100101010111101000000010111101001101101010010000110001100110111110001000100000101']}, {'input': '11000111001010100001110000001001011010010010110000001110100101000001010101100110111\\r\\n11001100100100100001101010110100000111100011101110011010110100001001000011011011010\\r\\n', 'output': ['00001011101110000000011010111101011101110001011110010100010001001000010110111101101']}, {'input': '010110100010001000100010101001101010011010111110100001000100101000111011100010100001\\r\\n110000011111101101010011111000101010111010100001001100001001100101000000111000000000\\r\\n', 'output': ['100110111101100101110001010001000000100000011111101101001101001101111011011010100001']}, {'input': '0000011110101110010101110110110101100001011001101010101001000010000010000000101001101\\r\\n1100111111011100000110000111101110011111100111110001011001000010011111100001001100011\\r\\n', 'output': ['1100100001110010010011110001011011111110111110011011110000000000011101100001100101110']}, {'input': '10100000101101110001100010010010100101100011010010101000110011100000101010110010000000\\r\\n10001110011011010010111011011101101111000111110000111000011010010101001100000001010011\\r\\n', 'output': ['00101110110110100011011001001111001010100100100010010000101001110101100110110011010011']}, {'input': '001110000011111101101010011111000101010111010100001001100001001100101000000111000000000\\r\\n111010000000000000101001110011001000111011001100101010011001000011101001001011110000011\\r\\n', 'output': ['110100000011111101000011101100001101101100011000100011111000001111000001001100110000011']}, {'input': '1110111100111011010101011011001110001010010010110011110010011111000010011111010101100001\\r\\n1001010101011001001010100010101100000110111101011000100010101111111010111100001110010010\\r\\n', 'output': ['0111101001100010011111111001100010001100101111101011010000110000111000100011011011110011']}, {'input': '11100010001100010011001100001100010011010001101110011110100101110010101101011101000111111\\r\\n01110000000110111010110100001010000101011110100101010011000110101110101101110111011110001\\r\\n', 'output': ['10010010001010101001111000000110010110001111001011001101100011011100000000101010011001110']}, {'input': '001101011001100101101100110000111000101011001001100100000100101000100000110100010111111101\\r\\n101001111110000010111101111110001001111001111101111010000110111000100100110010010001011111\\r\\n', 'output': ['100100100111100111010001001110110001010010110100011110000010010000000100000110000110100010']}, {'input': '1010110110010101000110010010110101011101010100011001101011000110000000100011100100011000000\\r\\n0011011111100010001111101101000111001011101110100000110111100100101111010110101111011100011\\r\\n', 'output': ['1001101001110111001001111111110010010110111010111001011100100010101111110101001011000100011']}, {'input': '10010010000111010111011111110010100101100000001100011100111011100010000010010001011100001100\\r\\n00111010100010110010000100010111010001111110100100100011101000101111111111001101101100100100\\r\\n', 'output': ['10101000100101100101011011100101110100011110101000111111010011001101111101011100110000101000']}, {'input': '010101110001010101100000010111010000000111110011001101100011001000000011001111110000000010100\\r\\n010010111011100101010101111110110000000111000100001101101001001000001100101110001010000100001\\r\\n', 'output': ['000111001010110000110101101001100000000000110111000000001010000000001111100001111010000110101']}, {'input': '1100111110011001000111101001001011000110011010111111100010111111001100111111011101100111101011\\r\\n1100000011001000110100110111000001011001010111101000010010100011000001100100111101101000010110\\r\\n', 'output': ['0000111101010001110011011110001010011111001101010111110000011100001101011011100000001111111101']}, {'input': '00011000100100110111100101100100000000010011110111110010101110110011100001010111010011110100101\\r\\n00011011111011111011100101100111100101001110010111000010000111000100100100000001110101111011011\\r\\n', 'output': ['00000011011111001100000000000011100101011101100000110000101001110111000101010110100110001111110']}, {'input': '000101011001001100000111100010110101111011110101111101000110001101011010111110110011100100000001\\r\\n011000101010011111011000111000100000000011011000000001111110001000001111101010110000011100001111\\r\\n', 'output': ['011101110011010011011111011010010101111000101101111100111000000101010101010100000011111000001110']}, {'input': '1000101001011010000100100100010010011101011001110101111011101111111110010101001101010001010101001\\r\\n0110110010011100011111011111110111000000010001110100001010111110101011010011111011111110000110000\\r\\n', 'output': ['1110011011000110011011111011100101011101001000000001110001010001010101000110110110101111010011001']}, {'input': '01111010010101100111110111111011011010100001011101010000111100101101101110111011001100101011100111\\r\\n00001100110110100001111011000010001001001100000010111101000001111011100000010111010010000011000010\\r\\n', 'output': ['01110110100011000110001100111001010011101101011111101101111101010110001110101100011110101000100101']}, {'input': '111101011101111000001011001101111010110111001101110100100011111011011101001101010101011010111000110\\r\\n101111100101101101001100110011000001111010011101110111110110101110011011110011111100001001110101101\\r\\n', 'output': ['010010111000010101000111111110111011001101010000000011010101010101000110111110101001010011001101011']}, {'input': '1010000011010110011101001101110001110010000111011101110010110110111111001001110100101100010101010001\\r\\n0111101000111100101100000101111010100100001000011101010100110011100011010011010101000100101011100011\\r\\n', 'output': ['1101101011101010110001001000001011010110001111000000100110000101011100011010100001101000111110110010']}, {'input': '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\\r\\n1111111010111111101011111110101111111010111111101011111110101111111010111111101011111110101111111010\\r\\n', 'output': ['1111111010111111101011111110101111111010111111101011111110101111111010111111101011111110101111111011']}, {'input': '0\\r\\n0\\r\\n', 'output': ['0']}, {'input': '0\\r\\n1\\r\\n', 'output': ['1']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  for (int i = 0; i < s1.length(); i++)\n    cout << (s1[i] ^ s2[i]) + '0';\n  cout << endl;\n  return 0;\n}\n"}
{"src_uid": "3714b7596a6b48ca5b7a346f60d90549", "id": 25, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1010100\\r\\n0100101\\r\\n', 'output': ['1110001']}, {'input': '000\\r\\n111\\r\\n', 'output': ['111']}, {'input': '1110\\r\\n1010\\r\\n', 'output': ['0100']}, {'input': '01110\\r\\n01100\\r\\n', 'output': ['00010']}, {'input': '011101\\r\\n000001\\r\\n', 'output': ['011100']}, {'input': '10\\r\\n01\\r\\n', 'output': ['11']}, {'input': '00111111\\r\\n11011101\\r\\n', 'output': ['11100010']}, {'input': '011001100\\r\\n101001010\\r\\n', 'output': ['110000110']}, {'input': '1100100001\\r\\n0110101100\\r\\n', 'output': ['1010001101']}, {'input': '00011101010\\r\\n10010100101\\r\\n', 'output': ['10001001111']}, {'input': '100000101101\\r\\n111010100011\\r\\n', 'output': ['011010001110']}, {'input': '1000001111010\\r\\n1101100110001\\r\\n', 'output': ['0101101001011']}, {'input': '01011111010111\\r\\n10001110111010\\r\\n', 'output': ['11010001101101']}, {'input': '110010000111100\\r\\n001100101011010\\r\\n', 'output': ['111110101100110']}, {'input': '0010010111110000\\r\\n0000000011010110\\r\\n', 'output': ['0010010100100110']}, {'input': '00111110111110000\\r\\n01111100001100000\\r\\n', 'output': ['01000010110010000']}, {'input': '101010101111010001\\r\\n001001111101111101\\r\\n', 'output': ['100011010010101100']}, {'input': '0110010101111100000\\r\\n0011000101000000110\\r\\n', 'output': ['0101010000111100110']}, {'input': '11110100011101010111\\r\\n00001000011011000000\\r\\n', 'output': ['11111100000110010111']}, {'input': '101010101111101101001\\r\\n111010010010000011111\\r\\n', 'output': ['010000111101101110110']}, {'input': '0000111111100011000010\\r\\n1110110110110000001010\\r\\n', 'output': ['1110001001010011001000']}, {'input': '10010010101000110111000\\r\\n00101110100110111000111\\r\\n', 'output': ['10111100001110001111111']}, {'input': '010010010010111100000111\\r\\n100100111111100011001110\\r\\n', 'output': ['110110101101011111001001']}, {'input': '0101110100100111011010010\\r\\n0101100011010111001010001\\r\\n', 'output': ['0000010111110000010000011']}, {'input': '10010010100011110111111011\\r\\n10000110101100000001000100\\r\\n', 'output': ['00010100001111110110111111']}, {'input': '000001111000000100001000000\\r\\n011100111101111001110110001\\r\\n', 'output': ['011101000101111101111110001']}, {'input': '0011110010001001011001011100\\r\\n0000101101000011101011001010\\r\\n', 'output': ['0011011111001010110010010110']}, {'input': '11111000000000010011001101111\\r\\n11101110011001010100010000000\\r\\n', 'output': ['00010110011001000111011101111']}, {'input': '011001110000110100001100101100\\r\\n001010000011110000001000101001\\r\\n', 'output': ['010011110011000100000100000101']}, {'input': '1011111010001100011010110101111\\r\\n1011001110010000000101100010101\\r\\n', 'output': ['0000110100011100011111010111010']}, {'input': '10111000100001000001010110000001\\r\\n10111000001100101011011001011000\\r\\n', 'output': ['00000000101101101010001111011001']}, {'input': '000001010000100001000000011011100\\r\\n111111111001010100100001100000111\\r\\n', 'output': ['111110101001110101100001111011011']}, {'input': '1101000000000010011011101100000110\\r\\n1110000001100010011010000011011110\\r\\n', 'output': ['0011000001100000000001101111011000']}, {'input': '01011011000010100001100100011110001\\r\\n01011010111000001010010100001110000\\r\\n', 'output': ['00000001111010101011110000010000001']}, {'input': '000011111000011001000110111100000100\\r\\n011011000110000111101011100111000111\\r\\n', 'output': ['011000111110011110101101011011000011']}, {'input': '1001000010101110001000000011111110010\\r\\n0010001011010111000011101001010110000\\r\\n', 'output': ['1011001001111001001011101010101000010']}, {'input': '00011101011001100101111111000000010101\\r\\n10010011011011001011111000000011101011\\r\\n', 'output': ['10001110000010101110000111000011111110']}, {'input': '111011100110001001101111110010111001010\\r\\n111111101101111001110010000101101000100\\r\\n', 'output': ['000100001011110000011101110111010001110']}, {'input': '1111001001101000001000000010010101001010\\r\\n0010111100111110001011000010111110111001\\r\\n', 'output': ['1101110101010110000011000000101011110011']}, {'input': '00100101111000000101011111110010100011010\\r\\n11101110001010010101001000111110101010100\\r\\n', 'output': ['11001011110010010000010111001100001001110']}, {'input': '101011001110110100101001000111010101101111\\r\\n100111100110101011010100111100111111010110\\r\\n', 'output': ['001100101000011111111101111011101010111001']}, {'input': '1111100001100101000111101001001010011100001\\r\\n1000110011000011110010001011001110001000001\\r\\n', 'output': ['0111010010100110110101100010000100010100000']}, {'input': '01100111011111010101000001101110000001110101\\r\\n10011001011111110000000101011001001101101100\\r\\n', 'output': ['11111110000000100101000100110111001100011001']}, {'input': '110010100111000100100101100000011100000011001\\r\\n011001111011100110000110111001110110100111011\\r\\n', 'output': ['101011011100100010100011011001101010100100010']}, {'input': '0001100111111011010110100100111000000111000110\\r\\n1100101011000000000001010010010111001100110001\\r\\n', 'output': ['1101001100111011010111110110101111001011110111']}, {'input': '00000101110110110001110010100001110100000100000\\r\\n10010000110011110001101000111111101010011010001\\r\\n', 'output': ['10010101000101000000011010011110011110011110001']}, {'input': '110000100101011100100011001111110011111110010001\\r\\n101011111001011100110110111101110011010110101100\\r\\n', 'output': ['011011011100000000010101110010000000101000111101']}, {'input': '0101111101011111010101011101000011101100000000111\\r\\n0000101010110110001110101011011110111001010100100\\r\\n', 'output': ['0101010111101001011011110110011101010101010100011']}, {'input': '11000100010101110011101000011111001010110111111100\\r\\n00001111000111001011111110000010101110111001000011\\r\\n', 'output': ['11001011010010111000010110011101100100001110111111']}, {'input': '101000001101111101101111111000001110110010101101010\\r\\n010011100111100001100000010001100101000000111011011\\r\\n', 'output': ['111011101010011100001111101001101011110010010110001']}, {'input': '0011111110010001010100010110111000110011001101010100\\r\\n0111000000100010101010000100101000000100101000111001\\r\\n', 'output': ['0100111110110011111110010010010000110111100101101101']}, {'input': '11101010000110000011011010000001111101000111011111100\\r\\n10110011110001010100010110010010101001010111100100100\\r\\n', 'output': ['01011001110111010111001100010011010100010000111011000']}, {'input': '011000100001000001101000010110100110011110100111111011\\r\\n111011001000001001110011001111011110111110110011011111\\r\\n', 'output': ['100011101001001000011011011001111000100000010100100100']}, {'input': '0111010110010100000110111011010110100000000111110110000\\r\\n1011100100010001101100000100111111101001110010000100110\\r\\n', 'output': ['1100110010000101101010111111101001001001110101110010110']}, {'input': '10101000100111000111010001011011011011110100110101100011\\r\\n11101111000000001100100011111000100100000110011001101110\\r\\n', 'output': ['01000111100111001011110010100011111111110010101100001101']}, {'input': '000000111001010001000000110001001011100010011101010011011\\r\\n110001101000010010000101000100001111101001100100001010010\\r\\n', 'output': ['110001010001000011000101110101000100001011111001011001001']}, {'input': '0101011100111010000111110010101101111111000000111100011100\\r\\n1011111110000010101110111001000011100000100111111111000111\\r\\n', 'output': ['1110100010111000101001001011101110011111100111000011011011']}, {'input': '11001000001100100111100111100100101011000101001111001001101\\r\\n10111110100010000011010100110100100011101001100000001110110\\r\\n', 'output': ['01110110101110100100110011010000001000101100101111000111011']}, {'input': '010111011011101000000110000110100110001110100001110110111011\\r\\n101011110011101011101101011111010100100001100111100100111011\\r\\n', 'output': ['111100101000000011101011011001110010101111000110010010000000']}, {'input': '1001011110110110000100011001010110000100011010010111010101110\\r\\n1101111100001000010111110011010101111010010100000001000010111\\r\\n', 'output': ['0100100010111110010011101010000011111110001110010110010111001']}, {'input': '10000010101111100111110101111000010100110111101101111111111010\\r\\n10110110101100101010011001011010100110111011101100011001100111\\r\\n', 'output': ['00110100000011001101101100100010110010001100000001100110011101']}, {'input': '011111010011111000001010101001101001000010100010111110010100001\\r\\n011111001011000011111001000001111001010110001010111101000010011\\r\\n', 'output': ['000000011000111011110011101000010000010100101000000011010110010']}, {'input': '1111000000110001011101000100100100001111011100001111001100011111\\r\\n1101100110000101100001100000001001011011111011010101000101001010\\r\\n', 'output': ['0010100110110100111100100100101101010100100111011010001001010101']}, {'input': '01100000101010010011001110100110110010000110010011011001100100011\\r\\n10110110010110111100100111000111000110010000000101101110000010111\\r\\n', 'output': ['11010110111100101111101001100001110100010110010110110111100110100']}, {'input': '001111111010000100001100001010011001111110011110010111110001100111\\r\\n110000101001011000100010101100100110000111100000001101001110010111\\r\\n', 'output': ['111111010011011100101110100110111111111001111110011010111111110000']}, {'input': '1011101011101101011110101101011101011000010011100101010101000100110\\r\\n0001000001001111010111100100111101100000000001110001000110000000110\\r\\n', 'output': ['1010101010100010001001001001100000111000010010010100010011000100000']}, {'input': '01000001011001010011011100010000100100110101111011011011110000001110\\r\\n01011110000110011011000000000011000111100001010000000011111001110000\\r\\n', 'output': ['00011111011111001000011100010011100011010100101011011000001001111110']}, {'input': '110101010100110101000001111110110100010010000100111110010100110011100\\r\\n111010010111111011100110101011001011001110110111110100000110110100111\\r\\n', 'output': ['001111000011001110100111010101111111011100110011001010010010000111011']}, {'input': '1001101011000001011111100110010010000011010001001111011100010100110001\\r\\n1111100111110101001111010001010000011001001001010110001111000000100101\\r\\n', 'output': ['0110001100110100010000110111000010011010011000011001010011010100010100']}, {'input': '00000111110010110001110110001010010101000111011001111111100110011110010\\r\\n00010111110100000100110101000010010001100001100011100000001100010100010\\r\\n', 'output': ['00010000000110110101000011001000000100100110111010011111101010001010000']}, {'input': '100101011100101101000011010001011001101110101110001100010001010111001110\\r\\n100001111100101011011111110000001111000111001011111110000010101110111001\\r\\n', 'output': ['000100100000000110011100100001010110101001100101110010010011111001110111']}, {'input': '1101100001000111001101001011101000111000011110000001001101101001111011010\\r\\n0101011101010100011011010110101000010010110010011110101100000110110001000\\r\\n', 'output': ['1000111100010011010110011101000000101010101100011111100001101111001010010']}, {'input': '01101101010011110101100001110101111011100010000010001101111000011110111111\\r\\n00101111001101001100111010000101110000100101101111100111101110010100011011\\r\\n', 'output': ['01000010011110111001011011110000001011000111101101101010010110001010100100']}, {'input': '101100101100011001101111110110110010100110110010100001110010110011001101011\\r\\n000001011010101011110011111101001110000111000010001101000010010000010001101\\r\\n', 'output': ['101101110110110010011100001011111100100001110000101100110000100011011100110']}, {'input': '0010001011001010001100000010010011110110011000100000000100110000101111001110\\r\\n1100110100111000110100001110111001011101001100001010100001010011100110110001\\r\\n', 'output': ['1110111111110010111000001100101010101011010100101010100101100011001001111111']}, {'input': '00101101010000000101011001101011001100010001100000101011101110000001111001000\\r\\n10010110010111000000101101000011101011001010000011011101101011010000000011111\\r\\n', 'output': ['10111011000111000101110100101000100111011011100011110110000101010001111010111']}, {'input': '111100000100100000101001100001001111001010001000001000000111010000010101101011\\r\\n001000100010100101111011111011010110101100001111011000010011011011100010010110\\r\\n', 'output': ['110100100110000101010010011010011001100110000111010000010100001011110111111101']}, {'input': '0110001101100100001111110101101000100101010010101010011001101001001101110000000\\r\\n0111011000000010010111011110010000000001000110001000011001101000000001110100111\\r\\n', 'output': ['0001010101100110011000101011111000100100010100100010000000000001001100000100111']}, {'input': '10001111111001000101001011110101111010100001011010101100111001010001010010001000\\r\\n10000111010010011110111000111010101100000011110001101111001000111010100000000001\\r\\n', 'output': ['00001000101011011011110011001111010110100010101011000011110001101011110010001001']}, {'input': '100110001110110000100101001110000011110110000110000000100011110100110110011001101\\r\\n110001110101110000000100101001101011111100100100001001000110000001111100011110110\\r\\n', 'output': ['010111111011000000100001100111101000001010100010001001100101110101001010000111011']}, {'input': '0000010100100000010110111100011111111010011101000000100000011001001101101100111010\\r\\n0100111110011101010110101011110110010111001111000110101100101110111100101000111111\\r\\n', 'output': ['0100101010111101000000010111101001101101010010000110001100110111110001000100000101']}, {'input': '11000111001010100001110000001001011010010010110000001110100101000001010101100110111\\r\\n11001100100100100001101010110100000111100011101110011010110100001001000011011011010\\r\\n', 'output': ['00001011101110000000011010111101011101110001011110010100010001001000010110111101101']}, {'input': '010110100010001000100010101001101010011010111110100001000100101000111011100010100001\\r\\n110000011111101101010011111000101010111010100001001100001001100101000000111000000000\\r\\n', 'output': ['100110111101100101110001010001000000100000011111101101001101001101111011011010100001']}, {'input': '0000011110101110010101110110110101100001011001101010101001000010000010000000101001101\\r\\n1100111111011100000110000111101110011111100111110001011001000010011111100001001100011\\r\\n', 'output': ['1100100001110010010011110001011011111110111110011011110000000000011101100001100101110']}, {'input': '10100000101101110001100010010010100101100011010010101000110011100000101010110010000000\\r\\n10001110011011010010111011011101101111000111110000111000011010010101001100000001010011\\r\\n', 'output': ['00101110110110100011011001001111001010100100100010010000101001110101100110110011010011']}, {'input': '001110000011111101101010011111000101010111010100001001100001001100101000000111000000000\\r\\n111010000000000000101001110011001000111011001100101010011001000011101001001011110000011\\r\\n', 'output': ['110100000011111101000011101100001101101100011000100011111000001111000001001100110000011']}, {'input': '1110111100111011010101011011001110001010010010110011110010011111000010011111010101100001\\r\\n1001010101011001001010100010101100000110111101011000100010101111111010111100001110010010\\r\\n', 'output': ['0111101001100010011111111001100010001100101111101011010000110000111000100011011011110011']}, {'input': '11100010001100010011001100001100010011010001101110011110100101110010101101011101000111111\\r\\n01110000000110111010110100001010000101011110100101010011000110101110101101110111011110001\\r\\n', 'output': ['10010010001010101001111000000110010110001111001011001101100011011100000000101010011001110']}, {'input': '001101011001100101101100110000111000101011001001100100000100101000100000110100010111111101\\r\\n101001111110000010111101111110001001111001111101111010000110111000100100110010010001011111\\r\\n', 'output': ['100100100111100111010001001110110001010010110100011110000010010000000100000110000110100010']}, {'input': '1010110110010101000110010010110101011101010100011001101011000110000000100011100100011000000\\r\\n0011011111100010001111101101000111001011101110100000110111100100101111010110101111011100011\\r\\n', 'output': ['1001101001110111001001111111110010010110111010111001011100100010101111110101001011000100011']}, {'input': '10010010000111010111011111110010100101100000001100011100111011100010000010010001011100001100\\r\\n00111010100010110010000100010111010001111110100100100011101000101111111111001101101100100100\\r\\n', 'output': ['10101000100101100101011011100101110100011110101000111111010011001101111101011100110000101000']}, {'input': '010101110001010101100000010111010000000111110011001101100011001000000011001111110000000010100\\r\\n010010111011100101010101111110110000000111000100001101101001001000001100101110001010000100001\\r\\n', 'output': ['000111001010110000110101101001100000000000110111000000001010000000001111100001111010000110101']}, {'input': '1100111110011001000111101001001011000110011010111111100010111111001100111111011101100111101011\\r\\n1100000011001000110100110111000001011001010111101000010010100011000001100100111101101000010110\\r\\n', 'output': ['0000111101010001110011011110001010011111001101010111110000011100001101011011100000001111111101']}, {'input': '00011000100100110111100101100100000000010011110111110010101110110011100001010111010011110100101\\r\\n00011011111011111011100101100111100101001110010111000010000111000100100100000001110101111011011\\r\\n', 'output': ['00000011011111001100000000000011100101011101100000110000101001110111000101010110100110001111110']}, {'input': '000101011001001100000111100010110101111011110101111101000110001101011010111110110011100100000001\\r\\n011000101010011111011000111000100000000011011000000001111110001000001111101010110000011100001111\\r\\n', 'output': ['011101110011010011011111011010010101111000101101111100111000000101010101010100000011111000001110']}, {'input': '1000101001011010000100100100010010011101011001110101111011101111111110010101001101010001010101001\\r\\n0110110010011100011111011111110111000000010001110100001010111110101011010011111011111110000110000\\r\\n', 'output': ['1110011011000110011011111011100101011101001000000001110001010001010101000110110110101111010011001']}, {'input': '01111010010101100111110111111011011010100001011101010000111100101101101110111011001100101011100111\\r\\n00001100110110100001111011000010001001001100000010111101000001111011100000010111010010000011000010\\r\\n', 'output': ['01110110100011000110001100111001010011101101011111101101111101010110001110101100011110101000100101']}, {'input': '111101011101111000001011001101111010110111001101110100100011111011011101001101010101011010111000110\\r\\n101111100101101101001100110011000001111010011101110111110110101110011011110011111100001001110101101\\r\\n', 'output': ['010010111000010101000111111110111011001101010000000011010101010101000110111110101001010011001101011']}, {'input': '1010000011010110011101001101110001110010000111011101110010110110111111001001110100101100010101010001\\r\\n0111101000111100101100000101111010100100001000011101010100110011100011010011010101000100101011100011\\r\\n', 'output': ['1101101011101010110001001000001011010110001111000000100110000101011100011010100001101000111110110010']}, {'input': '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\\r\\n1111111010111111101011111110101111111010111111101011111110101111111010111111101011111110101111111010\\r\\n', 'output': ['1111111010111111101011111110101111111010111111101011111110101111111010111111101011111110101111111011']}, {'input': '0\\r\\n0\\r\\n', 'output': ['0']}, {'input': '0\\r\\n1\\r\\n', 'output': ['1']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main(int argc, char **argv)\n{\n\tstring s1, s2;\n\tcin >> s1 >> s2;\n\tstring s3;\n\tfor (int i = 0; i < s1.size(); i++)\n\t{\n\t\tif (s1[i] == s2[i]) s3 += '0';\n\t\telse s3 += '1';\n\t}\n\tcout << s3 << endl;\n}"}
{"src_uid": "3714b7596a6b48ca5b7a346f60d90549", "id": 25, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1010100\\r\\n0100101\\r\\n', 'output': ['1110001']}, {'input': '000\\r\\n111\\r\\n', 'output': ['111']}, {'input': '1110\\r\\n1010\\r\\n', 'output': ['0100']}, {'input': '01110\\r\\n01100\\r\\n', 'output': ['00010']}, {'input': '011101\\r\\n000001\\r\\n', 'output': ['011100']}, {'input': '10\\r\\n01\\r\\n', 'output': ['11']}, {'input': '00111111\\r\\n11011101\\r\\n', 'output': ['11100010']}, {'input': '011001100\\r\\n101001010\\r\\n', 'output': ['110000110']}, {'input': '1100100001\\r\\n0110101100\\r\\n', 'output': ['1010001101']}, {'input': '00011101010\\r\\n10010100101\\r\\n', 'output': ['10001001111']}, {'input': '100000101101\\r\\n111010100011\\r\\n', 'output': ['011010001110']}, {'input': '1000001111010\\r\\n1101100110001\\r\\n', 'output': ['0101101001011']}, {'input': '01011111010111\\r\\n10001110111010\\r\\n', 'output': ['11010001101101']}, {'input': '110010000111100\\r\\n001100101011010\\r\\n', 'output': ['111110101100110']}, {'input': '0010010111110000\\r\\n0000000011010110\\r\\n', 'output': ['0010010100100110']}, {'input': '00111110111110000\\r\\n01111100001100000\\r\\n', 'output': ['01000010110010000']}, {'input': '101010101111010001\\r\\n001001111101111101\\r\\n', 'output': ['100011010010101100']}, {'input': '0110010101111100000\\r\\n0011000101000000110\\r\\n', 'output': ['0101010000111100110']}, {'input': '11110100011101010111\\r\\n00001000011011000000\\r\\n', 'output': ['11111100000110010111']}, {'input': '101010101111101101001\\r\\n111010010010000011111\\r\\n', 'output': ['010000111101101110110']}, {'input': '0000111111100011000010\\r\\n1110110110110000001010\\r\\n', 'output': ['1110001001010011001000']}, {'input': '10010010101000110111000\\r\\n00101110100110111000111\\r\\n', 'output': ['10111100001110001111111']}, {'input': '010010010010111100000111\\r\\n100100111111100011001110\\r\\n', 'output': ['110110101101011111001001']}, {'input': '0101110100100111011010010\\r\\n0101100011010111001010001\\r\\n', 'output': ['0000010111110000010000011']}, {'input': '10010010100011110111111011\\r\\n10000110101100000001000100\\r\\n', 'output': ['00010100001111110110111111']}, {'input': '000001111000000100001000000\\r\\n011100111101111001110110001\\r\\n', 'output': ['011101000101111101111110001']}, {'input': '0011110010001001011001011100\\r\\n0000101101000011101011001010\\r\\n', 'output': ['0011011111001010110010010110']}, {'input': '11111000000000010011001101111\\r\\n11101110011001010100010000000\\r\\n', 'output': ['00010110011001000111011101111']}, {'input': '011001110000110100001100101100\\r\\n001010000011110000001000101001\\r\\n', 'output': ['010011110011000100000100000101']}, {'input': '1011111010001100011010110101111\\r\\n1011001110010000000101100010101\\r\\n', 'output': ['0000110100011100011111010111010']}, {'input': '10111000100001000001010110000001\\r\\n10111000001100101011011001011000\\r\\n', 'output': ['00000000101101101010001111011001']}, {'input': '000001010000100001000000011011100\\r\\n111111111001010100100001100000111\\r\\n', 'output': ['111110101001110101100001111011011']}, {'input': '1101000000000010011011101100000110\\r\\n1110000001100010011010000011011110\\r\\n', 'output': ['0011000001100000000001101111011000']}, {'input': '01011011000010100001100100011110001\\r\\n01011010111000001010010100001110000\\r\\n', 'output': ['00000001111010101011110000010000001']}, {'input': '000011111000011001000110111100000100\\r\\n011011000110000111101011100111000111\\r\\n', 'output': ['011000111110011110101101011011000011']}, {'input': '1001000010101110001000000011111110010\\r\\n0010001011010111000011101001010110000\\r\\n', 'output': ['1011001001111001001011101010101000010']}, {'input': '00011101011001100101111111000000010101\\r\\n10010011011011001011111000000011101011\\r\\n', 'output': ['10001110000010101110000111000011111110']}, {'input': '111011100110001001101111110010111001010\\r\\n111111101101111001110010000101101000100\\r\\n', 'output': ['000100001011110000011101110111010001110']}, {'input': '1111001001101000001000000010010101001010\\r\\n0010111100111110001011000010111110111001\\r\\n', 'output': ['1101110101010110000011000000101011110011']}, {'input': '00100101111000000101011111110010100011010\\r\\n11101110001010010101001000111110101010100\\r\\n', 'output': ['11001011110010010000010111001100001001110']}, {'input': '101011001110110100101001000111010101101111\\r\\n100111100110101011010100111100111111010110\\r\\n', 'output': ['001100101000011111111101111011101010111001']}, {'input': '1111100001100101000111101001001010011100001\\r\\n1000110011000011110010001011001110001000001\\r\\n', 'output': ['0111010010100110110101100010000100010100000']}, {'input': '01100111011111010101000001101110000001110101\\r\\n10011001011111110000000101011001001101101100\\r\\n', 'output': ['11111110000000100101000100110111001100011001']}, {'input': '110010100111000100100101100000011100000011001\\r\\n011001111011100110000110111001110110100111011\\r\\n', 'output': ['101011011100100010100011011001101010100100010']}, {'input': '0001100111111011010110100100111000000111000110\\r\\n1100101011000000000001010010010111001100110001\\r\\n', 'output': ['1101001100111011010111110110101111001011110111']}, {'input': '00000101110110110001110010100001110100000100000\\r\\n10010000110011110001101000111111101010011010001\\r\\n', 'output': ['10010101000101000000011010011110011110011110001']}, {'input': '110000100101011100100011001111110011111110010001\\r\\n101011111001011100110110111101110011010110101100\\r\\n', 'output': ['011011011100000000010101110010000000101000111101']}, {'input': '0101111101011111010101011101000011101100000000111\\r\\n0000101010110110001110101011011110111001010100100\\r\\n', 'output': ['0101010111101001011011110110011101010101010100011']}, {'input': '11000100010101110011101000011111001010110111111100\\r\\n00001111000111001011111110000010101110111001000011\\r\\n', 'output': ['11001011010010111000010110011101100100001110111111']}, {'input': '101000001101111101101111111000001110110010101101010\\r\\n010011100111100001100000010001100101000000111011011\\r\\n', 'output': ['111011101010011100001111101001101011110010010110001']}, {'input': '0011111110010001010100010110111000110011001101010100\\r\\n0111000000100010101010000100101000000100101000111001\\r\\n', 'output': ['0100111110110011111110010010010000110111100101101101']}, {'input': '11101010000110000011011010000001111101000111011111100\\r\\n10110011110001010100010110010010101001010111100100100\\r\\n', 'output': ['01011001110111010111001100010011010100010000111011000']}, {'input': '011000100001000001101000010110100110011110100111111011\\r\\n111011001000001001110011001111011110111110110011011111\\r\\n', 'output': ['100011101001001000011011011001111000100000010100100100']}, {'input': '0111010110010100000110111011010110100000000111110110000\\r\\n1011100100010001101100000100111111101001110010000100110\\r\\n', 'output': ['1100110010000101101010111111101001001001110101110010110']}, {'input': '10101000100111000111010001011011011011110100110101100011\\r\\n11101111000000001100100011111000100100000110011001101110\\r\\n', 'output': ['01000111100111001011110010100011111111110010101100001101']}, {'input': '000000111001010001000000110001001011100010011101010011011\\r\\n110001101000010010000101000100001111101001100100001010010\\r\\n', 'output': ['110001010001000011000101110101000100001011111001011001001']}, {'input': '0101011100111010000111110010101101111111000000111100011100\\r\\n1011111110000010101110111001000011100000100111111111000111\\r\\n', 'output': ['1110100010111000101001001011101110011111100111000011011011']}, {'input': '11001000001100100111100111100100101011000101001111001001101\\r\\n10111110100010000011010100110100100011101001100000001110110\\r\\n', 'output': ['01110110101110100100110011010000001000101100101111000111011']}, {'input': '010111011011101000000110000110100110001110100001110110111011\\r\\n101011110011101011101101011111010100100001100111100100111011\\r\\n', 'output': ['111100101000000011101011011001110010101111000110010010000000']}, {'input': '1001011110110110000100011001010110000100011010010111010101110\\r\\n1101111100001000010111110011010101111010010100000001000010111\\r\\n', 'output': ['0100100010111110010011101010000011111110001110010110010111001']}, {'input': '10000010101111100111110101111000010100110111101101111111111010\\r\\n10110110101100101010011001011010100110111011101100011001100111\\r\\n', 'output': ['00110100000011001101101100100010110010001100000001100110011101']}, {'input': '011111010011111000001010101001101001000010100010111110010100001\\r\\n011111001011000011111001000001111001010110001010111101000010011\\r\\n', 'output': ['000000011000111011110011101000010000010100101000000011010110010']}, {'input': '1111000000110001011101000100100100001111011100001111001100011111\\r\\n1101100110000101100001100000001001011011111011010101000101001010\\r\\n', 'output': ['0010100110110100111100100100101101010100100111011010001001010101']}, {'input': '01100000101010010011001110100110110010000110010011011001100100011\\r\\n10110110010110111100100111000111000110010000000101101110000010111\\r\\n', 'output': ['11010110111100101111101001100001110100010110010110110111100110100']}, {'input': '001111111010000100001100001010011001111110011110010111110001100111\\r\\n110000101001011000100010101100100110000111100000001101001110010111\\r\\n', 'output': ['111111010011011100101110100110111111111001111110011010111111110000']}, {'input': '1011101011101101011110101101011101011000010011100101010101000100110\\r\\n0001000001001111010111100100111101100000000001110001000110000000110\\r\\n', 'output': ['1010101010100010001001001001100000111000010010010100010011000100000']}, {'input': '01000001011001010011011100010000100100110101111011011011110000001110\\r\\n01011110000110011011000000000011000111100001010000000011111001110000\\r\\n', 'output': ['00011111011111001000011100010011100011010100101011011000001001111110']}, {'input': '110101010100110101000001111110110100010010000100111110010100110011100\\r\\n111010010111111011100110101011001011001110110111110100000110110100111\\r\\n', 'output': ['001111000011001110100111010101111111011100110011001010010010000111011']}, {'input': '1001101011000001011111100110010010000011010001001111011100010100110001\\r\\n1111100111110101001111010001010000011001001001010110001111000000100101\\r\\n', 'output': ['0110001100110100010000110111000010011010011000011001010011010100010100']}, {'input': '00000111110010110001110110001010010101000111011001111111100110011110010\\r\\n00010111110100000100110101000010010001100001100011100000001100010100010\\r\\n', 'output': ['00010000000110110101000011001000000100100110111010011111101010001010000']}, {'input': '100101011100101101000011010001011001101110101110001100010001010111001110\\r\\n100001111100101011011111110000001111000111001011111110000010101110111001\\r\\n', 'output': ['000100100000000110011100100001010110101001100101110010010011111001110111']}, {'input': '1101100001000111001101001011101000111000011110000001001101101001111011010\\r\\n0101011101010100011011010110101000010010110010011110101100000110110001000\\r\\n', 'output': ['1000111100010011010110011101000000101010101100011111100001101111001010010']}, {'input': '01101101010011110101100001110101111011100010000010001101111000011110111111\\r\\n00101111001101001100111010000101110000100101101111100111101110010100011011\\r\\n', 'output': ['01000010011110111001011011110000001011000111101101101010010110001010100100']}, {'input': '101100101100011001101111110110110010100110110010100001110010110011001101011\\r\\n000001011010101011110011111101001110000111000010001101000010010000010001101\\r\\n', 'output': ['101101110110110010011100001011111100100001110000101100110000100011011100110']}, {'input': '0010001011001010001100000010010011110110011000100000000100110000101111001110\\r\\n1100110100111000110100001110111001011101001100001010100001010011100110110001\\r\\n', 'output': ['1110111111110010111000001100101010101011010100101010100101100011001001111111']}, {'input': '00101101010000000101011001101011001100010001100000101011101110000001111001000\\r\\n10010110010111000000101101000011101011001010000011011101101011010000000011111\\r\\n', 'output': ['10111011000111000101110100101000100111011011100011110110000101010001111010111']}, {'input': '111100000100100000101001100001001111001010001000001000000111010000010101101011\\r\\n001000100010100101111011111011010110101100001111011000010011011011100010010110\\r\\n', 'output': ['110100100110000101010010011010011001100110000111010000010100001011110111111101']}, {'input': '0110001101100100001111110101101000100101010010101010011001101001001101110000000\\r\\n0111011000000010010111011110010000000001000110001000011001101000000001110100111\\r\\n', 'output': ['0001010101100110011000101011111000100100010100100010000000000001001100000100111']}, {'input': '10001111111001000101001011110101111010100001011010101100111001010001010010001000\\r\\n10000111010010011110111000111010101100000011110001101111001000111010100000000001\\r\\n', 'output': ['00001000101011011011110011001111010110100010101011000011110001101011110010001001']}, {'input': '100110001110110000100101001110000011110110000110000000100011110100110110011001101\\r\\n110001110101110000000100101001101011111100100100001001000110000001111100011110110\\r\\n', 'output': ['010111111011000000100001100111101000001010100010001001100101110101001010000111011']}, {'input': '0000010100100000010110111100011111111010011101000000100000011001001101101100111010\\r\\n0100111110011101010110101011110110010111001111000110101100101110111100101000111111\\r\\n', 'output': ['0100101010111101000000010111101001101101010010000110001100110111110001000100000101']}, {'input': '11000111001010100001110000001001011010010010110000001110100101000001010101100110111\\r\\n11001100100100100001101010110100000111100011101110011010110100001001000011011011010\\r\\n', 'output': ['00001011101110000000011010111101011101110001011110010100010001001000010110111101101']}, {'input': '010110100010001000100010101001101010011010111110100001000100101000111011100010100001\\r\\n110000011111101101010011111000101010111010100001001100001001100101000000111000000000\\r\\n', 'output': ['100110111101100101110001010001000000100000011111101101001101001101111011011010100001']}, {'input': '0000011110101110010101110110110101100001011001101010101001000010000010000000101001101\\r\\n1100111111011100000110000111101110011111100111110001011001000010011111100001001100011\\r\\n', 'output': ['1100100001110010010011110001011011111110111110011011110000000000011101100001100101110']}, {'input': '10100000101101110001100010010010100101100011010010101000110011100000101010110010000000\\r\\n10001110011011010010111011011101101111000111110000111000011010010101001100000001010011\\r\\n', 'output': ['00101110110110100011011001001111001010100100100010010000101001110101100110110011010011']}, {'input': '001110000011111101101010011111000101010111010100001001100001001100101000000111000000000\\r\\n111010000000000000101001110011001000111011001100101010011001000011101001001011110000011\\r\\n', 'output': ['110100000011111101000011101100001101101100011000100011111000001111000001001100110000011']}, {'input': '1110111100111011010101011011001110001010010010110011110010011111000010011111010101100001\\r\\n1001010101011001001010100010101100000110111101011000100010101111111010111100001110010010\\r\\n', 'output': ['0111101001100010011111111001100010001100101111101011010000110000111000100011011011110011']}, {'input': '11100010001100010011001100001100010011010001101110011110100101110010101101011101000111111\\r\\n01110000000110111010110100001010000101011110100101010011000110101110101101110111011110001\\r\\n', 'output': ['10010010001010101001111000000110010110001111001011001101100011011100000000101010011001110']}, {'input': '001101011001100101101100110000111000101011001001100100000100101000100000110100010111111101\\r\\n101001111110000010111101111110001001111001111101111010000110111000100100110010010001011111\\r\\n', 'output': ['100100100111100111010001001110110001010010110100011110000010010000000100000110000110100010']}, {'input': '1010110110010101000110010010110101011101010100011001101011000110000000100011100100011000000\\r\\n0011011111100010001111101101000111001011101110100000110111100100101111010110101111011100011\\r\\n', 'output': ['1001101001110111001001111111110010010110111010111001011100100010101111110101001011000100011']}, {'input': '10010010000111010111011111110010100101100000001100011100111011100010000010010001011100001100\\r\\n00111010100010110010000100010111010001111110100100100011101000101111111111001101101100100100\\r\\n', 'output': ['10101000100101100101011011100101110100011110101000111111010011001101111101011100110000101000']}, {'input': '010101110001010101100000010111010000000111110011001101100011001000000011001111110000000010100\\r\\n010010111011100101010101111110110000000111000100001101101001001000001100101110001010000100001\\r\\n', 'output': ['000111001010110000110101101001100000000000110111000000001010000000001111100001111010000110101']}, {'input': '1100111110011001000111101001001011000110011010111111100010111111001100111111011101100111101011\\r\\n1100000011001000110100110111000001011001010111101000010010100011000001100100111101101000010110\\r\\n', 'output': ['0000111101010001110011011110001010011111001101010111110000011100001101011011100000001111111101']}, {'input': '00011000100100110111100101100100000000010011110111110010101110110011100001010111010011110100101\\r\\n00011011111011111011100101100111100101001110010111000010000111000100100100000001110101111011011\\r\\n', 'output': ['00000011011111001100000000000011100101011101100000110000101001110111000101010110100110001111110']}, {'input': '000101011001001100000111100010110101111011110101111101000110001101011010111110110011100100000001\\r\\n011000101010011111011000111000100000000011011000000001111110001000001111101010110000011100001111\\r\\n', 'output': ['011101110011010011011111011010010101111000101101111100111000000101010101010100000011111000001110']}, {'input': '1000101001011010000100100100010010011101011001110101111011101111111110010101001101010001010101001\\r\\n0110110010011100011111011111110111000000010001110100001010111110101011010011111011111110000110000\\r\\n', 'output': ['1110011011000110011011111011100101011101001000000001110001010001010101000110110110101111010011001']}, {'input': '01111010010101100111110111111011011010100001011101010000111100101101101110111011001100101011100111\\r\\n00001100110110100001111011000010001001001100000010111101000001111011100000010111010010000011000010\\r\\n', 'output': ['01110110100011000110001100111001010011101101011111101101111101010110001110101100011110101000100101']}, {'input': '111101011101111000001011001101111010110111001101110100100011111011011101001101010101011010111000110\\r\\n101111100101101101001100110011000001111010011101110111110110101110011011110011111100001001110101101\\r\\n', 'output': ['010010111000010101000111111110111011001101010000000011010101010101000110111110101001010011001101011']}, {'input': '1010000011010110011101001101110001110010000111011101110010110110111111001001110100101100010101010001\\r\\n0111101000111100101100000101111010100100001000011101010100110011100011010011010101000100101011100011\\r\\n', 'output': ['1101101011101010110001001000001011010110001111000000100110000101011100011010100001101000111110110010']}, {'input': '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\\r\\n1111111010111111101011111110101111111010111111101011111110101111111010111111101011111110101111111010\\r\\n', 'output': ['1111111010111111101011111110101111111010111111101011111110101111111010111111101011111110101111111011']}, {'input': '0\\r\\n0\\r\\n', 'output': ['0']}, {'input': '0\\r\\n1\\r\\n', 'output': ['1']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char a[1000], b[1000], x;\n  while (scanf(\"%s\", a)!= EOF) {\n    scanf(\"%s\", b);\n    int i;\n    for (i = 0; a[i]!= '\\0'; i++) {\n      if (a[i] == b[i]) x = 48;\n      if (a[i]!= b[i]) x = 49;\n      printf(\"%c\", x);\n    }\n    printf(\"\\n\");\n  }\n}\n"}
{"src_uid": "3714b7596a6b48ca5b7a346f60d90549", "id": 25, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1010100\\r\\n0100101\\r\\n', 'output': ['1110001']}, {'input': '000\\r\\n111\\r\\n', 'output': ['111']}, {'input': '1110\\r\\n1010\\r\\n', 'output': ['0100']}, {'input': '01110\\r\\n01100\\r\\n', 'output': ['00010']}, {'input': '011101\\r\\n000001\\r\\n', 'output': ['011100']}, {'input': '10\\r\\n01\\r\\n', 'output': ['11']}, {'input': '00111111\\r\\n11011101\\r\\n', 'output': ['11100010']}, {'input': '011001100\\r\\n101001010\\r\\n', 'output': ['110000110']}, {'input': '1100100001\\r\\n0110101100\\r\\n', 'output': ['1010001101']}, {'input': '00011101010\\r\\n10010100101\\r\\n', 'output': ['10001001111']}, {'input': '100000101101\\r\\n111010100011\\r\\n', 'output': ['011010001110']}, {'input': '1000001111010\\r\\n1101100110001\\r\\n', 'output': ['0101101001011']}, {'input': '01011111010111\\r\\n10001110111010\\r\\n', 'output': ['11010001101101']}, {'input': '110010000111100\\r\\n001100101011010\\r\\n', 'output': ['111110101100110']}, {'input': '0010010111110000\\r\\n0000000011010110\\r\\n', 'output': ['0010010100100110']}, {'input': '00111110111110000\\r\\n01111100001100000\\r\\n', 'output': ['01000010110010000']}, {'input': '101010101111010001\\r\\n001001111101111101\\r\\n', 'output': ['100011010010101100']}, {'input': '0110010101111100000\\r\\n0011000101000000110\\r\\n', 'output': ['0101010000111100110']}, {'input': '11110100011101010111\\r\\n00001000011011000000\\r\\n', 'output': ['11111100000110010111']}, {'input': '101010101111101101001\\r\\n111010010010000011111\\r\\n', 'output': ['010000111101101110110']}, {'input': '0000111111100011000010\\r\\n1110110110110000001010\\r\\n', 'output': ['1110001001010011001000']}, {'input': '10010010101000110111000\\r\\n00101110100110111000111\\r\\n', 'output': ['10111100001110001111111']}, {'input': '010010010010111100000111\\r\\n100100111111100011001110\\r\\n', 'output': ['110110101101011111001001']}, {'input': '0101110100100111011010010\\r\\n0101100011010111001010001\\r\\n', 'output': ['0000010111110000010000011']}, {'input': '10010010100011110111111011\\r\\n10000110101100000001000100\\r\\n', 'output': ['00010100001111110110111111']}, {'input': '000001111000000100001000000\\r\\n011100111101111001110110001\\r\\n', 'output': ['011101000101111101111110001']}, {'input': '0011110010001001011001011100\\r\\n0000101101000011101011001010\\r\\n', 'output': ['0011011111001010110010010110']}, {'input': '11111000000000010011001101111\\r\\n11101110011001010100010000000\\r\\n', 'output': ['00010110011001000111011101111']}, {'input': '011001110000110100001100101100\\r\\n001010000011110000001000101001\\r\\n', 'output': ['010011110011000100000100000101']}, {'input': '1011111010001100011010110101111\\r\\n1011001110010000000101100010101\\r\\n', 'output': ['0000110100011100011111010111010']}, {'input': '10111000100001000001010110000001\\r\\n10111000001100101011011001011000\\r\\n', 'output': ['00000000101101101010001111011001']}, {'input': '000001010000100001000000011011100\\r\\n111111111001010100100001100000111\\r\\n', 'output': ['111110101001110101100001111011011']}, {'input': '1101000000000010011011101100000110\\r\\n1110000001100010011010000011011110\\r\\n', 'output': ['0011000001100000000001101111011000']}, {'input': '01011011000010100001100100011110001\\r\\n01011010111000001010010100001110000\\r\\n', 'output': ['00000001111010101011110000010000001']}, {'input': '000011111000011001000110111100000100\\r\\n011011000110000111101011100111000111\\r\\n', 'output': ['011000111110011110101101011011000011']}, {'input': '1001000010101110001000000011111110010\\r\\n0010001011010111000011101001010110000\\r\\n', 'output': ['1011001001111001001011101010101000010']}, {'input': '00011101011001100101111111000000010101\\r\\n10010011011011001011111000000011101011\\r\\n', 'output': ['10001110000010101110000111000011111110']}, {'input': '111011100110001001101111110010111001010\\r\\n111111101101111001110010000101101000100\\r\\n', 'output': ['000100001011110000011101110111010001110']}, {'input': '1111001001101000001000000010010101001010\\r\\n0010111100111110001011000010111110111001\\r\\n', 'output': ['1101110101010110000011000000101011110011']}, {'input': '00100101111000000101011111110010100011010\\r\\n11101110001010010101001000111110101010100\\r\\n', 'output': ['11001011110010010000010111001100001001110']}, {'input': '101011001110110100101001000111010101101111\\r\\n100111100110101011010100111100111111010110\\r\\n', 'output': ['001100101000011111111101111011101010111001']}, {'input': '1111100001100101000111101001001010011100001\\r\\n1000110011000011110010001011001110001000001\\r\\n', 'output': ['0111010010100110110101100010000100010100000']}, {'input': '01100111011111010101000001101110000001110101\\r\\n10011001011111110000000101011001001101101100\\r\\n', 'output': ['11111110000000100101000100110111001100011001']}, {'input': '110010100111000100100101100000011100000011001\\r\\n011001111011100110000110111001110110100111011\\r\\n', 'output': ['101011011100100010100011011001101010100100010']}, {'input': '0001100111111011010110100100111000000111000110\\r\\n1100101011000000000001010010010111001100110001\\r\\n', 'output': ['1101001100111011010111110110101111001011110111']}, {'input': '00000101110110110001110010100001110100000100000\\r\\n10010000110011110001101000111111101010011010001\\r\\n', 'output': ['10010101000101000000011010011110011110011110001']}, {'input': '110000100101011100100011001111110011111110010001\\r\\n101011111001011100110110111101110011010110101100\\r\\n', 'output': ['011011011100000000010101110010000000101000111101']}, {'input': '0101111101011111010101011101000011101100000000111\\r\\n0000101010110110001110101011011110111001010100100\\r\\n', 'output': ['0101010111101001011011110110011101010101010100011']}, {'input': '11000100010101110011101000011111001010110111111100\\r\\n00001111000111001011111110000010101110111001000011\\r\\n', 'output': ['11001011010010111000010110011101100100001110111111']}, {'input': '101000001101111101101111111000001110110010101101010\\r\\n010011100111100001100000010001100101000000111011011\\r\\n', 'output': ['111011101010011100001111101001101011110010010110001']}, {'input': '0011111110010001010100010110111000110011001101010100\\r\\n0111000000100010101010000100101000000100101000111001\\r\\n', 'output': ['0100111110110011111110010010010000110111100101101101']}, {'input': '11101010000110000011011010000001111101000111011111100\\r\\n10110011110001010100010110010010101001010111100100100\\r\\n', 'output': ['01011001110111010111001100010011010100010000111011000']}, {'input': '011000100001000001101000010110100110011110100111111011\\r\\n111011001000001001110011001111011110111110110011011111\\r\\n', 'output': ['100011101001001000011011011001111000100000010100100100']}, {'input': '0111010110010100000110111011010110100000000111110110000\\r\\n1011100100010001101100000100111111101001110010000100110\\r\\n', 'output': ['1100110010000101101010111111101001001001110101110010110']}, {'input': '10101000100111000111010001011011011011110100110101100011\\r\\n11101111000000001100100011111000100100000110011001101110\\r\\n', 'output': ['01000111100111001011110010100011111111110010101100001101']}, {'input': '000000111001010001000000110001001011100010011101010011011\\r\\n110001101000010010000101000100001111101001100100001010010\\r\\n', 'output': ['110001010001000011000101110101000100001011111001011001001']}, {'input': '0101011100111010000111110010101101111111000000111100011100\\r\\n1011111110000010101110111001000011100000100111111111000111\\r\\n', 'output': ['1110100010111000101001001011101110011111100111000011011011']}, {'input': '11001000001100100111100111100100101011000101001111001001101\\r\\n10111110100010000011010100110100100011101001100000001110110\\r\\n', 'output': ['01110110101110100100110011010000001000101100101111000111011']}, {'input': '010111011011101000000110000110100110001110100001110110111011\\r\\n101011110011101011101101011111010100100001100111100100111011\\r\\n', 'output': ['111100101000000011101011011001110010101111000110010010000000']}, {'input': '1001011110110110000100011001010110000100011010010111010101110\\r\\n1101111100001000010111110011010101111010010100000001000010111\\r\\n', 'output': ['0100100010111110010011101010000011111110001110010110010111001']}, {'input': '10000010101111100111110101111000010100110111101101111111111010\\r\\n10110110101100101010011001011010100110111011101100011001100111\\r\\n', 'output': ['00110100000011001101101100100010110010001100000001100110011101']}, {'input': '011111010011111000001010101001101001000010100010111110010100001\\r\\n011111001011000011111001000001111001010110001010111101000010011\\r\\n', 'output': ['000000011000111011110011101000010000010100101000000011010110010']}, {'input': '1111000000110001011101000100100100001111011100001111001100011111\\r\\n1101100110000101100001100000001001011011111011010101000101001010\\r\\n', 'output': ['0010100110110100111100100100101101010100100111011010001001010101']}, {'input': '01100000101010010011001110100110110010000110010011011001100100011\\r\\n10110110010110111100100111000111000110010000000101101110000010111\\r\\n', 'output': ['11010110111100101111101001100001110100010110010110110111100110100']}, {'input': '001111111010000100001100001010011001111110011110010111110001100111\\r\\n110000101001011000100010101100100110000111100000001101001110010111\\r\\n', 'output': ['111111010011011100101110100110111111111001111110011010111111110000']}, {'input': '1011101011101101011110101101011101011000010011100101010101000100110\\r\\n0001000001001111010111100100111101100000000001110001000110000000110\\r\\n', 'output': ['1010101010100010001001001001100000111000010010010100010011000100000']}, {'input': '01000001011001010011011100010000100100110101111011011011110000001110\\r\\n01011110000110011011000000000011000111100001010000000011111001110000\\r\\n', 'output': ['00011111011111001000011100010011100011010100101011011000001001111110']}, {'input': '110101010100110101000001111110110100010010000100111110010100110011100\\r\\n111010010111111011100110101011001011001110110111110100000110110100111\\r\\n', 'output': ['001111000011001110100111010101111111011100110011001010010010000111011']}, {'input': '1001101011000001011111100110010010000011010001001111011100010100110001\\r\\n1111100111110101001111010001010000011001001001010110001111000000100101\\r\\n', 'output': ['0110001100110100010000110111000010011010011000011001010011010100010100']}, {'input': '00000111110010110001110110001010010101000111011001111111100110011110010\\r\\n00010111110100000100110101000010010001100001100011100000001100010100010\\r\\n', 'output': ['00010000000110110101000011001000000100100110111010011111101010001010000']}, {'input': '100101011100101101000011010001011001101110101110001100010001010111001110\\r\\n100001111100101011011111110000001111000111001011111110000010101110111001\\r\\n', 'output': ['000100100000000110011100100001010110101001100101110010010011111001110111']}, {'input': '1101100001000111001101001011101000111000011110000001001101101001111011010\\r\\n0101011101010100011011010110101000010010110010011110101100000110110001000\\r\\n', 'output': ['1000111100010011010110011101000000101010101100011111100001101111001010010']}, {'input': '01101101010011110101100001110101111011100010000010001101111000011110111111\\r\\n00101111001101001100111010000101110000100101101111100111101110010100011011\\r\\n', 'output': ['01000010011110111001011011110000001011000111101101101010010110001010100100']}, {'input': '101100101100011001101111110110110010100110110010100001110010110011001101011\\r\\n000001011010101011110011111101001110000111000010001101000010010000010001101\\r\\n', 'output': ['101101110110110010011100001011111100100001110000101100110000100011011100110']}, {'input': '0010001011001010001100000010010011110110011000100000000100110000101111001110\\r\\n1100110100111000110100001110111001011101001100001010100001010011100110110001\\r\\n', 'output': ['1110111111110010111000001100101010101011010100101010100101100011001001111111']}, {'input': '00101101010000000101011001101011001100010001100000101011101110000001111001000\\r\\n10010110010111000000101101000011101011001010000011011101101011010000000011111\\r\\n', 'output': ['10111011000111000101110100101000100111011011100011110110000101010001111010111']}, {'input': '111100000100100000101001100001001111001010001000001000000111010000010101101011\\r\\n001000100010100101111011111011010110101100001111011000010011011011100010010110\\r\\n', 'output': ['110100100110000101010010011010011001100110000111010000010100001011110111111101']}, {'input': '0110001101100100001111110101101000100101010010101010011001101001001101110000000\\r\\n0111011000000010010111011110010000000001000110001000011001101000000001110100111\\r\\n', 'output': ['0001010101100110011000101011111000100100010100100010000000000001001100000100111']}, {'input': '10001111111001000101001011110101111010100001011010101100111001010001010010001000\\r\\n10000111010010011110111000111010101100000011110001101111001000111010100000000001\\r\\n', 'output': ['00001000101011011011110011001111010110100010101011000011110001101011110010001001']}, {'input': '100110001110110000100101001110000011110110000110000000100011110100110110011001101\\r\\n110001110101110000000100101001101011111100100100001001000110000001111100011110110\\r\\n', 'output': ['010111111011000000100001100111101000001010100010001001100101110101001010000111011']}, {'input': '0000010100100000010110111100011111111010011101000000100000011001001101101100111010\\r\\n0100111110011101010110101011110110010111001111000110101100101110111100101000111111\\r\\n', 'output': ['0100101010111101000000010111101001101101010010000110001100110111110001000100000101']}, {'input': '11000111001010100001110000001001011010010010110000001110100101000001010101100110111\\r\\n11001100100100100001101010110100000111100011101110011010110100001001000011011011010\\r\\n', 'output': ['00001011101110000000011010111101011101110001011110010100010001001000010110111101101']}, {'input': '010110100010001000100010101001101010011010111110100001000100101000111011100010100001\\r\\n110000011111101101010011111000101010111010100001001100001001100101000000111000000000\\r\\n', 'output': ['100110111101100101110001010001000000100000011111101101001101001101111011011010100001']}, {'input': '0000011110101110010101110110110101100001011001101010101001000010000010000000101001101\\r\\n1100111111011100000110000111101110011111100111110001011001000010011111100001001100011\\r\\n', 'output': ['1100100001110010010011110001011011111110111110011011110000000000011101100001100101110']}, {'input': '10100000101101110001100010010010100101100011010010101000110011100000101010110010000000\\r\\n10001110011011010010111011011101101111000111110000111000011010010101001100000001010011\\r\\n', 'output': ['00101110110110100011011001001111001010100100100010010000101001110101100110110011010011']}, {'input': '001110000011111101101010011111000101010111010100001001100001001100101000000111000000000\\r\\n111010000000000000101001110011001000111011001100101010011001000011101001001011110000011\\r\\n', 'output': ['110100000011111101000011101100001101101100011000100011111000001111000001001100110000011']}, {'input': '1110111100111011010101011011001110001010010010110011110010011111000010011111010101100001\\r\\n1001010101011001001010100010101100000110111101011000100010101111111010111100001110010010\\r\\n', 'output': ['0111101001100010011111111001100010001100101111101011010000110000111000100011011011110011']}, {'input': '11100010001100010011001100001100010011010001101110011110100101110010101101011101000111111\\r\\n01110000000110111010110100001010000101011110100101010011000110101110101101110111011110001\\r\\n', 'output': ['10010010001010101001111000000110010110001111001011001101100011011100000000101010011001110']}, {'input': '001101011001100101101100110000111000101011001001100100000100101000100000110100010111111101\\r\\n101001111110000010111101111110001001111001111101111010000110111000100100110010010001011111\\r\\n', 'output': ['100100100111100111010001001110110001010010110100011110000010010000000100000110000110100010']}, {'input': '1010110110010101000110010010110101011101010100011001101011000110000000100011100100011000000\\r\\n0011011111100010001111101101000111001011101110100000110111100100101111010110101111011100011\\r\\n', 'output': ['1001101001110111001001111111110010010110111010111001011100100010101111110101001011000100011']}, {'input': '10010010000111010111011111110010100101100000001100011100111011100010000010010001011100001100\\r\\n00111010100010110010000100010111010001111110100100100011101000101111111111001101101100100100\\r\\n', 'output': ['10101000100101100101011011100101110100011110101000111111010011001101111101011100110000101000']}, {'input': '010101110001010101100000010111010000000111110011001101100011001000000011001111110000000010100\\r\\n010010111011100101010101111110110000000111000100001101101001001000001100101110001010000100001\\r\\n', 'output': ['000111001010110000110101101001100000000000110111000000001010000000001111100001111010000110101']}, {'input': '1100111110011001000111101001001011000110011010111111100010111111001100111111011101100111101011\\r\\n1100000011001000110100110111000001011001010111101000010010100011000001100100111101101000010110\\r\\n', 'output': ['0000111101010001110011011110001010011111001101010111110000011100001101011011100000001111111101']}, {'input': '00011000100100110111100101100100000000010011110111110010101110110011100001010111010011110100101\\r\\n00011011111011111011100101100111100101001110010111000010000111000100100100000001110101111011011\\r\\n', 'output': ['00000011011111001100000000000011100101011101100000110000101001110111000101010110100110001111110']}, {'input': '000101011001001100000111100010110101111011110101111101000110001101011010111110110011100100000001\\r\\n011000101010011111011000111000100000000011011000000001111110001000001111101010110000011100001111\\r\\n', 'output': ['011101110011010011011111011010010101111000101101111100111000000101010101010100000011111000001110']}, {'input': '1000101001011010000100100100010010011101011001110101111011101111111110010101001101010001010101001\\r\\n0110110010011100011111011111110111000000010001110100001010111110101011010011111011111110000110000\\r\\n', 'output': ['1110011011000110011011111011100101011101001000000001110001010001010101000110110110101111010011001']}, {'input': '01111010010101100111110111111011011010100001011101010000111100101101101110111011001100101011100111\\r\\n00001100110110100001111011000010001001001100000010111101000001111011100000010111010010000011000010\\r\\n', 'output': ['01110110100011000110001100111001010011101101011111101101111101010110001110101100011110101000100101']}, {'input': '111101011101111000001011001101111010110111001101110100100011111011011101001101010101011010111000110\\r\\n101111100101101101001100110011000001111010011101110111110110101110011011110011111100001001110101101\\r\\n', 'output': ['010010111000010101000111111110111011001101010000000011010101010101000110111110101001010011001101011']}, {'input': '1010000011010110011101001101110001110010000111011101110010110110111111001001110100101100010101010001\\r\\n0111101000111100101100000101111010100100001000011101010100110011100011010011010101000100101011100011\\r\\n', 'output': ['1101101011101010110001001000001011010110001111000000100110000101011100011010100001101000111110110010']}, {'input': '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\\r\\n1111111010111111101011111110101111111010111111101011111110101111111010111111101011111110101111111010\\r\\n', 'output': ['1111111010111111101011111110101111111010111111101011111110101111111010111111101011111110101111111011']}, {'input': '0\\r\\n0\\r\\n', 'output': ['0']}, {'input': '0\\r\\n1\\r\\n', 'output': ['1']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nchar a[105], b[105];\nint main() {\n  scanf(\"%s%s\", a, b);\n  for (int i = 0; a[i]; i++)\n    printf(\"%d\", ((a[i]!= b[i]) ^ (i % 2)));\n  printf(\"\\n\");\n}\n"}
{"src_uid": "3714b7596a6b48ca5b7a346f60d90549", "id": 25, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1010100\\r\\n0100101\\r\\n', 'output': ['1110001']}, {'input': '000\\r\\n111\\r\\n', 'output': ['111']}, {'input': '1110\\r\\n1010\\r\\n', 'output': ['0100']}, {'input': '01110\\r\\n01100\\r\\n', 'output': ['00010']}, {'input': '011101\\r\\n000001\\r\\n', 'output': ['011100']}, {'input': '10\\r\\n01\\r\\n', 'output': ['11']}, {'input': '00111111\\r\\n11011101\\r\\n', 'output': ['11100010']}, {'input': '011001100\\r\\n101001010\\r\\n', 'output': ['110000110']}, {'input': '1100100001\\r\\n0110101100\\r\\n', 'output': ['1010001101']}, {'input': '00011101010\\r\\n10010100101\\r\\n', 'output': ['10001001111']}, {'input': '100000101101\\r\\n111010100011\\r\\n', 'output': ['011010001110']}, {'input': '1000001111010\\r\\n1101100110001\\r\\n', 'output': ['0101101001011']}, {'input': '01011111010111\\r\\n10001110111010\\r\\n', 'output': ['11010001101101']}, {'input': '110010000111100\\r\\n001100101011010\\r\\n', 'output': ['111110101100110']}, {'input': '0010010111110000\\r\\n0000000011010110\\r\\n', 'output': ['0010010100100110']}, {'input': '00111110111110000\\r\\n01111100001100000\\r\\n', 'output': ['01000010110010000']}, {'input': '101010101111010001\\r\\n001001111101111101\\r\\n', 'output': ['100011010010101100']}, {'input': '0110010101111100000\\r\\n0011000101000000110\\r\\n', 'output': ['0101010000111100110']}, {'input': '11110100011101010111\\r\\n00001000011011000000\\r\\n', 'output': ['11111100000110010111']}, {'input': '101010101111101101001\\r\\n111010010010000011111\\r\\n', 'output': ['010000111101101110110']}, {'input': '0000111111100011000010\\r\\n1110110110110000001010\\r\\n', 'output': ['1110001001010011001000']}, {'input': '10010010101000110111000\\r\\n00101110100110111000111\\r\\n', 'output': ['10111100001110001111111']}, {'input': '010010010010111100000111\\r\\n100100111111100011001110\\r\\n', 'output': ['110110101101011111001001']}, {'input': '0101110100100111011010010\\r\\n0101100011010111001010001\\r\\n', 'output': ['0000010111110000010000011']}, {'input': '10010010100011110111111011\\r\\n10000110101100000001000100\\r\\n', 'output': ['00010100001111110110111111']}, {'input': '000001111000000100001000000\\r\\n011100111101111001110110001\\r\\n', 'output': ['011101000101111101111110001']}, {'input': '0011110010001001011001011100\\r\\n0000101101000011101011001010\\r\\n', 'output': ['0011011111001010110010010110']}, {'input': '11111000000000010011001101111\\r\\n11101110011001010100010000000\\r\\n', 'output': ['00010110011001000111011101111']}, {'input': '011001110000110100001100101100\\r\\n001010000011110000001000101001\\r\\n', 'output': ['010011110011000100000100000101']}, {'input': '1011111010001100011010110101111\\r\\n1011001110010000000101100010101\\r\\n', 'output': ['0000110100011100011111010111010']}, {'input': '10111000100001000001010110000001\\r\\n10111000001100101011011001011000\\r\\n', 'output': ['00000000101101101010001111011001']}, {'input': '000001010000100001000000011011100\\r\\n111111111001010100100001100000111\\r\\n', 'output': ['111110101001110101100001111011011']}, {'input': '1101000000000010011011101100000110\\r\\n1110000001100010011010000011011110\\r\\n', 'output': ['0011000001100000000001101111011000']}, {'input': '01011011000010100001100100011110001\\r\\n01011010111000001010010100001110000\\r\\n', 'output': ['00000001111010101011110000010000001']}, {'input': '000011111000011001000110111100000100\\r\\n011011000110000111101011100111000111\\r\\n', 'output': ['011000111110011110101101011011000011']}, {'input': '1001000010101110001000000011111110010\\r\\n0010001011010111000011101001010110000\\r\\n', 'output': ['1011001001111001001011101010101000010']}, {'input': '00011101011001100101111111000000010101\\r\\n10010011011011001011111000000011101011\\r\\n', 'output': ['10001110000010101110000111000011111110']}, {'input': '111011100110001001101111110010111001010\\r\\n111111101101111001110010000101101000100\\r\\n', 'output': ['000100001011110000011101110111010001110']}, {'input': '1111001001101000001000000010010101001010\\r\\n0010111100111110001011000010111110111001\\r\\n', 'output': ['1101110101010110000011000000101011110011']}, {'input': '00100101111000000101011111110010100011010\\r\\n11101110001010010101001000111110101010100\\r\\n', 'output': ['11001011110010010000010111001100001001110']}, {'input': '101011001110110100101001000111010101101111\\r\\n100111100110101011010100111100111111010110\\r\\n', 'output': ['001100101000011111111101111011101010111001']}, {'input': '1111100001100101000111101001001010011100001\\r\\n1000110011000011110010001011001110001000001\\r\\n', 'output': ['0111010010100110110101100010000100010100000']}, {'input': '01100111011111010101000001101110000001110101\\r\\n10011001011111110000000101011001001101101100\\r\\n', 'output': ['11111110000000100101000100110111001100011001']}, {'input': '110010100111000100100101100000011100000011001\\r\\n011001111011100110000110111001110110100111011\\r\\n', 'output': ['101011011100100010100011011001101010100100010']}, {'input': '0001100111111011010110100100111000000111000110\\r\\n1100101011000000000001010010010111001100110001\\r\\n', 'output': ['1101001100111011010111110110101111001011110111']}, {'input': '00000101110110110001110010100001110100000100000\\r\\n10010000110011110001101000111111101010011010001\\r\\n', 'output': ['10010101000101000000011010011110011110011110001']}, {'input': '110000100101011100100011001111110011111110010001\\r\\n101011111001011100110110111101110011010110101100\\r\\n', 'output': ['011011011100000000010101110010000000101000111101']}, {'input': '0101111101011111010101011101000011101100000000111\\r\\n0000101010110110001110101011011110111001010100100\\r\\n', 'output': ['0101010111101001011011110110011101010101010100011']}, {'input': '11000100010101110011101000011111001010110111111100\\r\\n00001111000111001011111110000010101110111001000011\\r\\n', 'output': ['11001011010010111000010110011101100100001110111111']}, {'input': '101000001101111101101111111000001110110010101101010\\r\\n010011100111100001100000010001100101000000111011011\\r\\n', 'output': ['111011101010011100001111101001101011110010010110001']}, {'input': '0011111110010001010100010110111000110011001101010100\\r\\n0111000000100010101010000100101000000100101000111001\\r\\n', 'output': ['0100111110110011111110010010010000110111100101101101']}, {'input': '11101010000110000011011010000001111101000111011111100\\r\\n10110011110001010100010110010010101001010111100100100\\r\\n', 'output': ['01011001110111010111001100010011010100010000111011000']}, {'input': '011000100001000001101000010110100110011110100111111011\\r\\n111011001000001001110011001111011110111110110011011111\\r\\n', 'output': ['100011101001001000011011011001111000100000010100100100']}, {'input': '0111010110010100000110111011010110100000000111110110000\\r\\n1011100100010001101100000100111111101001110010000100110\\r\\n', 'output': ['1100110010000101101010111111101001001001110101110010110']}, {'input': '10101000100111000111010001011011011011110100110101100011\\r\\n11101111000000001100100011111000100100000110011001101110\\r\\n', 'output': ['01000111100111001011110010100011111111110010101100001101']}, {'input': '000000111001010001000000110001001011100010011101010011011\\r\\n110001101000010010000101000100001111101001100100001010010\\r\\n', 'output': ['110001010001000011000101110101000100001011111001011001001']}, {'input': '0101011100111010000111110010101101111111000000111100011100\\r\\n1011111110000010101110111001000011100000100111111111000111\\r\\n', 'output': ['1110100010111000101001001011101110011111100111000011011011']}, {'input': '11001000001100100111100111100100101011000101001111001001101\\r\\n10111110100010000011010100110100100011101001100000001110110\\r\\n', 'output': ['01110110101110100100110011010000001000101100101111000111011']}, {'input': '010111011011101000000110000110100110001110100001110110111011\\r\\n101011110011101011101101011111010100100001100111100100111011\\r\\n', 'output': ['111100101000000011101011011001110010101111000110010010000000']}, {'input': '1001011110110110000100011001010110000100011010010111010101110\\r\\n1101111100001000010111110011010101111010010100000001000010111\\r\\n', 'output': ['0100100010111110010011101010000011111110001110010110010111001']}, {'input': '10000010101111100111110101111000010100110111101101111111111010\\r\\n10110110101100101010011001011010100110111011101100011001100111\\r\\n', 'output': ['00110100000011001101101100100010110010001100000001100110011101']}, {'input': '011111010011111000001010101001101001000010100010111110010100001\\r\\n011111001011000011111001000001111001010110001010111101000010011\\r\\n', 'output': ['000000011000111011110011101000010000010100101000000011010110010']}, {'input': '1111000000110001011101000100100100001111011100001111001100011111\\r\\n1101100110000101100001100000001001011011111011010101000101001010\\r\\n', 'output': ['0010100110110100111100100100101101010100100111011010001001010101']}, {'input': '01100000101010010011001110100110110010000110010011011001100100011\\r\\n10110110010110111100100111000111000110010000000101101110000010111\\r\\n', 'output': ['11010110111100101111101001100001110100010110010110110111100110100']}, {'input': '001111111010000100001100001010011001111110011110010111110001100111\\r\\n110000101001011000100010101100100110000111100000001101001110010111\\r\\n', 'output': ['111111010011011100101110100110111111111001111110011010111111110000']}, {'input': '1011101011101101011110101101011101011000010011100101010101000100110\\r\\n0001000001001111010111100100111101100000000001110001000110000000110\\r\\n', 'output': ['1010101010100010001001001001100000111000010010010100010011000100000']}, {'input': '01000001011001010011011100010000100100110101111011011011110000001110\\r\\n01011110000110011011000000000011000111100001010000000011111001110000\\r\\n', 'output': ['00011111011111001000011100010011100011010100101011011000001001111110']}, {'input': '110101010100110101000001111110110100010010000100111110010100110011100\\r\\n111010010111111011100110101011001011001110110111110100000110110100111\\r\\n', 'output': ['001111000011001110100111010101111111011100110011001010010010000111011']}, {'input': '1001101011000001011111100110010010000011010001001111011100010100110001\\r\\n1111100111110101001111010001010000011001001001010110001111000000100101\\r\\n', 'output': ['0110001100110100010000110111000010011010011000011001010011010100010100']}, {'input': '00000111110010110001110110001010010101000111011001111111100110011110010\\r\\n00010111110100000100110101000010010001100001100011100000001100010100010\\r\\n', 'output': ['00010000000110110101000011001000000100100110111010011111101010001010000']}, {'input': '100101011100101101000011010001011001101110101110001100010001010111001110\\r\\n100001111100101011011111110000001111000111001011111110000010101110111001\\r\\n', 'output': ['000100100000000110011100100001010110101001100101110010010011111001110111']}, {'input': '1101100001000111001101001011101000111000011110000001001101101001111011010\\r\\n0101011101010100011011010110101000010010110010011110101100000110110001000\\r\\n', 'output': ['1000111100010011010110011101000000101010101100011111100001101111001010010']}, {'input': '01101101010011110101100001110101111011100010000010001101111000011110111111\\r\\n00101111001101001100111010000101110000100101101111100111101110010100011011\\r\\n', 'output': ['01000010011110111001011011110000001011000111101101101010010110001010100100']}, {'input': '101100101100011001101111110110110010100110110010100001110010110011001101011\\r\\n000001011010101011110011111101001110000111000010001101000010010000010001101\\r\\n', 'output': ['101101110110110010011100001011111100100001110000101100110000100011011100110']}, {'input': '0010001011001010001100000010010011110110011000100000000100110000101111001110\\r\\n1100110100111000110100001110111001011101001100001010100001010011100110110001\\r\\n', 'output': ['1110111111110010111000001100101010101011010100101010100101100011001001111111']}, {'input': '00101101010000000101011001101011001100010001100000101011101110000001111001000\\r\\n10010110010111000000101101000011101011001010000011011101101011010000000011111\\r\\n', 'output': ['10111011000111000101110100101000100111011011100011110110000101010001111010111']}, {'input': '111100000100100000101001100001001111001010001000001000000111010000010101101011\\r\\n001000100010100101111011111011010110101100001111011000010011011011100010010110\\r\\n', 'output': ['110100100110000101010010011010011001100110000111010000010100001011110111111101']}, {'input': '0110001101100100001111110101101000100101010010101010011001101001001101110000000\\r\\n0111011000000010010111011110010000000001000110001000011001101000000001110100111\\r\\n', 'output': ['0001010101100110011000101011111000100100010100100010000000000001001100000100111']}, {'input': '10001111111001000101001011110101111010100001011010101100111001010001010010001000\\r\\n10000111010010011110111000111010101100000011110001101111001000111010100000000001\\r\\n', 'output': ['00001000101011011011110011001111010110100010101011000011110001101011110010001001']}, {'input': '100110001110110000100101001110000011110110000110000000100011110100110110011001101\\r\\n110001110101110000000100101001101011111100100100001001000110000001111100011110110\\r\\n', 'output': ['010111111011000000100001100111101000001010100010001001100101110101001010000111011']}, {'input': '0000010100100000010110111100011111111010011101000000100000011001001101101100111010\\r\\n0100111110011101010110101011110110010111001111000110101100101110111100101000111111\\r\\n', 'output': ['0100101010111101000000010111101001101101010010000110001100110111110001000100000101']}, {'input': '11000111001010100001110000001001011010010010110000001110100101000001010101100110111\\r\\n11001100100100100001101010110100000111100011101110011010110100001001000011011011010\\r\\n', 'output': ['00001011101110000000011010111101011101110001011110010100010001001000010110111101101']}, {'input': '010110100010001000100010101001101010011010111110100001000100101000111011100010100001\\r\\n110000011111101101010011111000101010111010100001001100001001100101000000111000000000\\r\\n', 'output': ['100110111101100101110001010001000000100000011111101101001101001101111011011010100001']}, {'input': '0000011110101110010101110110110101100001011001101010101001000010000010000000101001101\\r\\n1100111111011100000110000111101110011111100111110001011001000010011111100001001100011\\r\\n', 'output': ['1100100001110010010011110001011011111110111110011011110000000000011101100001100101110']}, {'input': '10100000101101110001100010010010100101100011010010101000110011100000101010110010000000\\r\\n10001110011011010010111011011101101111000111110000111000011010010101001100000001010011\\r\\n', 'output': ['00101110110110100011011001001111001010100100100010010000101001110101100110110011010011']}, {'input': '001110000011111101101010011111000101010111010100001001100001001100101000000111000000000\\r\\n111010000000000000101001110011001000111011001100101010011001000011101001001011110000011\\r\\n', 'output': ['110100000011111101000011101100001101101100011000100011111000001111000001001100110000011']}, {'input': '1110111100111011010101011011001110001010010010110011110010011111000010011111010101100001\\r\\n1001010101011001001010100010101100000110111101011000100010101111111010111100001110010010\\r\\n', 'output': ['0111101001100010011111111001100010001100101111101011010000110000111000100011011011110011']}, {'input': '11100010001100010011001100001100010011010001101110011110100101110010101101011101000111111\\r\\n01110000000110111010110100001010000101011110100101010011000110101110101101110111011110001\\r\\n', 'output': ['10010010001010101001111000000110010110001111001011001101100011011100000000101010011001110']}, {'input': '001101011001100101101100110000111000101011001001100100000100101000100000110100010111111101\\r\\n101001111110000010111101111110001001111001111101111010000110111000100100110010010001011111\\r\\n', 'output': ['100100100111100111010001001110110001010010110100011110000010010000000100000110000110100010']}, {'input': '1010110110010101000110010010110101011101010100011001101011000110000000100011100100011000000\\r\\n0011011111100010001111101101000111001011101110100000110111100100101111010110101111011100011\\r\\n', 'output': ['1001101001110111001001111111110010010110111010111001011100100010101111110101001011000100011']}, {'input': '10010010000111010111011111110010100101100000001100011100111011100010000010010001011100001100\\r\\n00111010100010110010000100010111010001111110100100100011101000101111111111001101101100100100\\r\\n', 'output': ['10101000100101100101011011100101110100011110101000111111010011001101111101011100110000101000']}, {'input': '010101110001010101100000010111010000000111110011001101100011001000000011001111110000000010100\\r\\n010010111011100101010101111110110000000111000100001101101001001000001100101110001010000100001\\r\\n', 'output': ['000111001010110000110101101001100000000000110111000000001010000000001111100001111010000110101']}, {'input': '1100111110011001000111101001001011000110011010111111100010111111001100111111011101100111101011\\r\\n1100000011001000110100110111000001011001010111101000010010100011000001100100111101101000010110\\r\\n', 'output': ['0000111101010001110011011110001010011111001101010111110000011100001101011011100000001111111101']}, {'input': '00011000100100110111100101100100000000010011110111110010101110110011100001010111010011110100101\\r\\n00011011111011111011100101100111100101001110010111000010000111000100100100000001110101111011011\\r\\n', 'output': ['00000011011111001100000000000011100101011101100000110000101001110111000101010110100110001111110']}, {'input': '000101011001001100000111100010110101111011110101111101000110001101011010111110110011100100000001\\r\\n011000101010011111011000111000100000000011011000000001111110001000001111101010110000011100001111\\r\\n', 'output': ['011101110011010011011111011010010101111000101101111100111000000101010101010100000011111000001110']}, {'input': '1000101001011010000100100100010010011101011001110101111011101111111110010101001101010001010101001\\r\\n0110110010011100011111011111110111000000010001110100001010111110101011010011111011111110000110000\\r\\n', 'output': ['1110011011000110011011111011100101011101001000000001110001010001010101000110110110101111010011001']}, {'input': '01111010010101100111110111111011011010100001011101010000111100101101101110111011001100101011100111\\r\\n00001100110110100001111011000010001001001100000010111101000001111011100000010111010010000011000010\\r\\n', 'output': ['01110110100011000110001100111001010011101101011111101101111101010110001110101100011110101000100101']}, {'input': '111101011101111000001011001101111010110111001101110100100011111011011101001101010101011010111000110\\r\\n101111100101101101001100110011000001111010011101110111110110101110011011110011111100001001110101101\\r\\n', 'output': ['010010111000010101000111111110111011001101010000000011010101010101000110111110101001010011001101011']}, {'input': '1010000011010110011101001101110001110010000111011101110010110110111111001001110100101100010101010001\\r\\n0111101000111100101100000101111010100100001000011101010100110011100011010011010101000100101011100011\\r\\n', 'output': ['1101101011101010110001001000001011010110001111000000100110000101011100011010100001101000111110110010']}, {'input': '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\\r\\n1111111010111111101011111110101111111010111111101011111110101111111010111111101011111110101111111010\\r\\n', 'output': ['1111111010111111101011111110101111111010111111101011111110101111111010111111101011111110101111111011']}, {'input': '0\\r\\n0\\r\\n', 'output': ['0']}, {'input': '0\\r\\n1\\r\\n', 'output': ['1']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nstring s, ss;\nint main() {\n  cin >> s >> ss;\n  cout << s[0] << ss[0];\n  for (int i = 1; i < s.length(); i++) {\n    if (s[i]!= s[i - 1]) {\n      cout << \"1\";\n      for (int i = 0; i < s.length(); i++) {\n        if (s[i]!= s[i - 1]) cout << s[i];\n      }\n      return 0;\n    }\n  }\n  for (int i = 1; i < ss.length(); i++) {\n    if (ss[i]!= ss[i - 1]) {\n      cout << \"1\";\n      for (int i = 0; i < ss.length(); i++) {\n        if (ss[i]!= ss[i - 1]) cout << ss[i];\n      }\n      return 0;\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "id": 26, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '5\\r\\n10 12 13 15 10\\r\\n', 'output': ['5 1\\r\\n']}, {'input': '4\\r\\n10 20 30 40\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '6\\r\\n744 359 230 586 944 442\\r\\n', 'output': ['2 3\\r\\n']}, {'input': '5\\r\\n826 747 849 687 437\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '5\\r\\n999 999 993 969 999\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '5\\r\\n4 24 6 1 15\\r\\n', 'output': ['3 4\\r\\n']}, {'input': '2\\r\\n511 32\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '3\\r\\n907 452 355\\r\\n', 'output': ['2 3\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['4 1\\r\\n']}, {'input': '10\\r\\n684 698 429 694 956 812 594 170 937 764\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '20\\r\\n646 840 437 946 640 564 936 917 487 752 844 734 468 969 674 646 728 642 514 695\\r\\n', 'output': ['7 8\\r\\n']}, {'input': '30\\r\\n996 999 998 984 989 1000 996 993 1000 983 992 999 999 1000 979 992 987 1000 996 1000 1000 989 981 996 995 999 999 989 999 1000\\r\\n', 'output': ['12 13\\r\\n']}, {'input': '50\\r\\n93 27 28 4 5 78 59 24 19 134 31 128 118 36 90 32 32 1 44 32 33 13 31 10 12 25 38 50 25 12 4 22 28 53 48 83 4 25 57 31 71 24 8 7 28 86 23 80 101 58\\r\\n', 'output': ['16 17\\r\\n']}, {'input': '88\\r\\n1000 1000 1000 1000 1000 998 998 1000 1000 1000 1000 999 999 1000 1000 1000 999 1000 997 999 997 1000 999 998 1000 999 1000 1000 1000 999 1000 999 999 1000 1000 999 1000 999 1000 1000 998 1000 1000 1000 998 998 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 999 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 998 1000 1000 998 1000 999 1000 1000 1000 1000\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '99\\r\\n4 4 21 6 5 3 13 2 6 1 3 4 1 3 1 9 11 1 6 17 4 5 20 4 1 9 5 11 3 4 14 1 3 3 1 4 3 5 27 1 1 2 10 7 11 4 19 7 11 6 11 13 3 1 10 7 2 1 16 1 9 4 29 13 2 12 14 2 21 1 9 8 26 12 12 5 2 14 7 8 8 8 9 4 12 2 6 6 7 16 8 14 2 10 20 15 3 7 4\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '100\\r\\n713 572 318 890 577 657 646 146 373 783 392 229 455 871 20 593 573 336 26 381 280 916 907 732 820 713 111 840 570 446 184 711 481 399 788 647 492 15 40 530 549 506 719 782 126 20 778 996 712 761 9 74 812 418 488 175 103 585 900 3 604 521 109 513 145 708 990 361 682 827 791 22 596 780 596 385 450 643 158 496 876 975 319 783 654 895 891 361 397 81 682 899 347 623 809 557 435 279 513 438\\r\\n', 'output': ['86 87\\r\\n']}, {'input': '100\\r\\n31 75 86 68 111 27 22 22 26 30 54 163 107 75 160 122 14 23 17 26 27 20 43 58 59 71 21 148 9 32 43 91 133 286 132 70 90 156 84 14 77 93 23 18 13 72 18 131 33 28 72 175 30 86 249 20 14 208 28 57 63 199 6 10 24 30 62 267 43 479 60 28 138 1 45 3 19 47 7 166 116 117 50 140 28 14 95 85 93 43 61 15 2 70 10 51 7 95 9 25\\r\\n', 'output': ['7 8\\r\\n']}, {'input': '100\\r\\n896 898 967 979 973 709 961 968 806 967 896 967 826 975 936 903 986 856 851 931 852 971 786 837 949 978 686 936 952 909 965 749 908 916 943 973 983 975 939 886 964 928 960 976 907 788 994 773 949 871 947 980 945 985 726 981 887 943 907 990 931 874 840 867 948 951 961 904 888 901 976 967 994 921 828 970 972 722 755 970 860 855 914 869 714 899 969 978 898 862 642 939 904 936 819 934 884 983 955 964\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '100\\r\\n994 927 872 970 815 986 952 996 965 1000 877 986 978 999 950 990 936 997 993 960 921 860 895 869 943 998 983 968 973 953 999 990 995 871 853 979 973 963 953 938 997 989 993 964 960 973 946 975 1000 962 920 746 989 957 904 965 920 979 966 961 1000 993 975 952 846 971 991 979 985 969 984 973 956 1000 952 778 983 974 956 927 995 997 980 997 1000 970 960 970 988 983 947 904 935 972 1000 863 992 996 932 967\\r\\n', 'output': ['81 82\\r\\n']}, {'input': '100\\r\\n48 108 63 21 27 8 49 21 75 8 24 42 149 18 8 28 21 18 25 35 59 70 59 33 40 1 67 34 120 82 4 115 72 87 3 15 15 63 37 12 40 27 83 14 38 20 14 58 93 10 31 3 39 6 197 77 54 16 31 146 9 49 14 8 77 82 5 11 80 116 8 61 50 24 7 103 29 11 3 3 1 12 46 24 21 131 39 29 36 2 107 40 16 99 31 41 29 48 17 17\\r\\n', 'output': ['36 37\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1000;\nint A[N + 10], n, d[N + 10], p[N + 10];\nint main() {\n  ios::sync_with_stdio(false);\n  cin >> n;\n  for (int i = 0; i < n; ++i) cin >> A[i];\n  for (int i = 0; i < n; ++i) d[i] = A[(i + 1) % n] - A[i];\n  for (int i = 0; i < n; ++i) {\n    d[i] = min(d[i], d[(i + n - 1) % n]);\n    p[i] = d[i];\n  }\n  for (int i = 0; i < n; ++i) {\n    int pos = i;\n    for (int j = 0; j < n; ++j) {\n      if (p[(pos + 1) % n] == d[pos] && p[(pos - 1 + n) % n] == d[pos]) {\n        cout << (pos + 1) % n + 1 << \" \" << i + 1;\n        return 0;\n      }\n      pos = (pos + 1) % n;\n    }\n  }\n}\n"}
{"src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "id": 26, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '5\\r\\n10 12 13 15 10\\r\\n', 'output': ['5 1\\r\\n']}, {'input': '4\\r\\n10 20 30 40\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '6\\r\\n744 359 230 586 944 442\\r\\n', 'output': ['2 3\\r\\n']}, {'input': '5\\r\\n826 747 849 687 437\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '5\\r\\n999 999 993 969 999\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '5\\r\\n4 24 6 1 15\\r\\n', 'output': ['3 4\\r\\n']}, {'input': '2\\r\\n511 32\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '3\\r\\n907 452 355\\r\\n', 'output': ['2 3\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['4 1\\r\\n']}, {'input': '10\\r\\n684 698 429 694 956 812 594 170 937 764\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '20\\r\\n646 840 437 946 640 564 936 917 487 752 844 734 468 969 674 646 728 642 514 695\\r\\n', 'output': ['7 8\\r\\n']}, {'input': '30\\r\\n996 999 998 984 989 1000 996 993 1000 983 992 999 999 1000 979 992 987 1000 996 1000 1000 989 981 996 995 999 999 989 999 1000\\r\\n', 'output': ['12 13\\r\\n']}, {'input': '50\\r\\n93 27 28 4 5 78 59 24 19 134 31 128 118 36 90 32 32 1 44 32 33 13 31 10 12 25 38 50 25 12 4 22 28 53 48 83 4 25 57 31 71 24 8 7 28 86 23 80 101 58\\r\\n', 'output': ['16 17\\r\\n']}, {'input': '88\\r\\n1000 1000 1000 1000 1000 998 998 1000 1000 1000 1000 999 999 1000 1000 1000 999 1000 997 999 997 1000 999 998 1000 999 1000 1000 1000 999 1000 999 999 1000 1000 999 1000 999 1000 1000 998 1000 1000 1000 998 998 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 999 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 998 1000 1000 998 1000 999 1000 1000 1000 1000\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '99\\r\\n4 4 21 6 5 3 13 2 6 1 3 4 1 3 1 9 11 1 6 17 4 5 20 4 1 9 5 11 3 4 14 1 3 3 1 4 3 5 27 1 1 2 10 7 11 4 19 7 11 6 11 13 3 1 10 7 2 1 16 1 9 4 29 13 2 12 14 2 21 1 9 8 26 12 12 5 2 14 7 8 8 8 9 4 12 2 6 6 7 16 8 14 2 10 20 15 3 7 4\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '100\\r\\n713 572 318 890 577 657 646 146 373 783 392 229 455 871 20 593 573 336 26 381 280 916 907 732 820 713 111 840 570 446 184 711 481 399 788 647 492 15 40 530 549 506 719 782 126 20 778 996 712 761 9 74 812 418 488 175 103 585 900 3 604 521 109 513 145 708 990 361 682 827 791 22 596 780 596 385 450 643 158 496 876 975 319 783 654 895 891 361 397 81 682 899 347 623 809 557 435 279 513 438\\r\\n', 'output': ['86 87\\r\\n']}, {'input': '100\\r\\n31 75 86 68 111 27 22 22 26 30 54 163 107 75 160 122 14 23 17 26 27 20 43 58 59 71 21 148 9 32 43 91 133 286 132 70 90 156 84 14 77 93 23 18 13 72 18 131 33 28 72 175 30 86 249 20 14 208 28 57 63 199 6 10 24 30 62 267 43 479 60 28 138 1 45 3 19 47 7 166 116 117 50 140 28 14 95 85 93 43 61 15 2 70 10 51 7 95 9 25\\r\\n', 'output': ['7 8\\r\\n']}, {'input': '100\\r\\n896 898 967 979 973 709 961 968 806 967 896 967 826 975 936 903 986 856 851 931 852 971 786 837 949 978 686 936 952 909 965 749 908 916 943 973 983 975 939 886 964 928 960 976 907 788 994 773 949 871 947 980 945 985 726 981 887 943 907 990 931 874 840 867 948 951 961 904 888 901 976 967 994 921 828 970 972 722 755 970 860 855 914 869 714 899 969 978 898 862 642 939 904 936 819 934 884 983 955 964\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '100\\r\\n994 927 872 970 815 986 952 996 965 1000 877 986 978 999 950 990 936 997 993 960 921 860 895 869 943 998 983 968 973 953 999 990 995 871 853 979 973 963 953 938 997 989 993 964 960 973 946 975 1000 962 920 746 989 957 904 965 920 979 966 961 1000 993 975 952 846 971 991 979 985 969 984 973 956 1000 952 778 983 974 956 927 995 997 980 997 1000 970 960 970 988 983 947 904 935 972 1000 863 992 996 932 967\\r\\n', 'output': ['81 82\\r\\n']}, {'input': '100\\r\\n48 108 63 21 27 8 49 21 75 8 24 42 149 18 8 28 21 18 25 35 59 70 59 33 40 1 67 34 120 82 4 115 72 87 3 15 15 63 37 12 40 27 83 14 38 20 14 58 93 10 31 3 39 6 197 77 54 16 31 146 9 49 14 8 77 82 5 11 80 116 8 61 50 24 7 103 29 11 3 3 1 12 46 24 21 131 39 29 36 2 107 40 16 99 31 41 29 48 17 17\\r\\n', 'output': ['36 37\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a, b, ans = 0, m;\n  cin >> n;\n  vector<int> array;\n  for (int i = 1; i <= n; i++) {\n    cin >> a;\n    array.push_back(a);\n  }\n  m = 100000;\n  for (int i = 0; i < n; i++) {\n    a = i + 1;\n    b = i + 2;\n    if (b == n + 1) b = n;\n    if (abs(array[i] - array[b - 1]) <= m) {\n      m = abs(array[i] - array[b - 1]);\n      ans = a;\n    }\n  }\n  cout << ans <<'' << ans + 1;\n  return 0;\n}\n"}
{"src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "id": 26, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '5\\r\\n10 12 13 15 10\\r\\n', 'output': ['5 1\\r\\n']}, {'input': '4\\r\\n10 20 30 40\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '6\\r\\n744 359 230 586 944 442\\r\\n', 'output': ['2 3\\r\\n']}, {'input': '5\\r\\n826 747 849 687 437\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '5\\r\\n999 999 993 969 999\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '5\\r\\n4 24 6 1 15\\r\\n', 'output': ['3 4\\r\\n']}, {'input': '2\\r\\n511 32\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '3\\r\\n907 452 355\\r\\n', 'output': ['2 3\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['4 1\\r\\n']}, {'input': '10\\r\\n684 698 429 694 956 812 594 170 937 764\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '20\\r\\n646 840 437 946 640 564 936 917 487 752 844 734 468 969 674 646 728 642 514 695\\r\\n', 'output': ['7 8\\r\\n']}, {'input': '30\\r\\n996 999 998 984 989 1000 996 993 1000 983 992 999 999 1000 979 992 987 1000 996 1000 1000 989 981 996 995 999 999 989 999 1000\\r\\n', 'output': ['12 13\\r\\n']}, {'input': '50\\r\\n93 27 28 4 5 78 59 24 19 134 31 128 118 36 90 32 32 1 44 32 33 13 31 10 12 25 38 50 25 12 4 22 28 53 48 83 4 25 57 31 71 24 8 7 28 86 23 80 101 58\\r\\n', 'output': ['16 17\\r\\n']}, {'input': '88\\r\\n1000 1000 1000 1000 1000 998 998 1000 1000 1000 1000 999 999 1000 1000 1000 999 1000 997 999 997 1000 999 998 1000 999 1000 1000 1000 999 1000 999 999 1000 1000 999 1000 999 1000 1000 998 1000 1000 1000 998 998 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 999 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 998 1000 1000 998 1000 999 1000 1000 1000 1000\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '99\\r\\n4 4 21 6 5 3 13 2 6 1 3 4 1 3 1 9 11 1 6 17 4 5 20 4 1 9 5 11 3 4 14 1 3 3 1 4 3 5 27 1 1 2 10 7 11 4 19 7 11 6 11 13 3 1 10 7 2 1 16 1 9 4 29 13 2 12 14 2 21 1 9 8 26 12 12 5 2 14 7 8 8 8 9 4 12 2 6 6 7 16 8 14 2 10 20 15 3 7 4\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '100\\r\\n713 572 318 890 577 657 646 146 373 783 392 229 455 871 20 593 573 336 26 381 280 916 907 732 820 713 111 840 570 446 184 711 481 399 788 647 492 15 40 530 549 506 719 782 126 20 778 996 712 761 9 74 812 418 488 175 103 585 900 3 604 521 109 513 145 708 990 361 682 827 791 22 596 780 596 385 450 643 158 496 876 975 319 783 654 895 891 361 397 81 682 899 347 623 809 557 435 279 513 438\\r\\n', 'output': ['86 87\\r\\n']}, {'input': '100\\r\\n31 75 86 68 111 27 22 22 26 30 54 163 107 75 160 122 14 23 17 26 27 20 43 58 59 71 21 148 9 32 43 91 133 286 132 70 90 156 84 14 77 93 23 18 13 72 18 131 33 28 72 175 30 86 249 20 14 208 28 57 63 199 6 10 24 30 62 267 43 479 60 28 138 1 45 3 19 47 7 166 116 117 50 140 28 14 95 85 93 43 61 15 2 70 10 51 7 95 9 25\\r\\n', 'output': ['7 8\\r\\n']}, {'input': '100\\r\\n896 898 967 979 973 709 961 968 806 967 896 967 826 975 936 903 986 856 851 931 852 971 786 837 949 978 686 936 952 909 965 749 908 916 943 973 983 975 939 886 964 928 960 976 907 788 994 773 949 871 947 980 945 985 726 981 887 943 907 990 931 874 840 867 948 951 961 904 888 901 976 967 994 921 828 970 972 722 755 970 860 855 914 869 714 899 969 978 898 862 642 939 904 936 819 934 884 983 955 964\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '100\\r\\n994 927 872 970 815 986 952 996 965 1000 877 986 978 999 950 990 936 997 993 960 921 860 895 869 943 998 983 968 973 953 999 990 995 871 853 979 973 963 953 938 997 989 993 964 960 973 946 975 1000 962 920 746 989 957 904 965 920 979 966 961 1000 993 975 952 846 971 991 979 985 969 984 973 956 1000 952 778 983 974 956 927 995 997 980 997 1000 970 960 970 988 983 947 904 935 972 1000 863 992 996 932 967\\r\\n', 'output': ['81 82\\r\\n']}, {'input': '100\\r\\n48 108 63 21 27 8 49 21 75 8 24 42 149 18 8 28 21 18 25 35 59 70 59 33 40 1 67 34 120 82 4 115 72 87 3 15 15 63 37 12 40 27 83 14 38 20 14 58 93 10 31 3 39 6 197 77 54 16 31 146 9 49 14 8 77 82 5 11 80 116 8 61 50 24 7 103 29 11 3 3 1 12 46 24 21 131 39 29 36 2 107 40 16 99 31 41 29 48 17 17\\r\\n', 'output': ['36 37\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> v(n), w(n);\n  for (int i = 0; i < n; i++) cin >> v[i];\n  int p = -1;\n  for (int i = 0; i < n; i++) {\n    if (v[i]!= v[(i + 1) % n]) {\n      cout << i + 1 <<'' << (i + 1) % n + 1;\n      p = 1;\n      break;\n    }\n  }\n  if (p) return 0;\n  for (int i = 0; i < n; i++) {\n    int diff = 1e9;\n    for (int j = 0; j < n; j++) {\n      int k = (j + i) % n;\n      diff = min(diff, abs(v[k] - v[(k + 1) % n]));\n    }\n    int h = v[i];\n    for (int j = 0; j < n; j++) {\n      int k = (j + i) % n;\n      if (abs(v[k] - h) == diff) w[k] = 1;\n    }\n  }\n  int ind1 = -1, ind2 = -1;\n  for (int i = 0; i < n; i++) {\n    if (w[i] == 1) {\n      if (ind1 == -1) ind1 = i;\n      if (ind2 == -1) ind2 = i;\n    }\n  }\n  cout << ind1 + 1 <<'' << ind2 + 1;\n}\n"}
{"src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "id": 26, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '5\\r\\n10 12 13 15 10\\r\\n', 'output': ['5 1\\r\\n']}, {'input': '4\\r\\n10 20 30 40\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '6\\r\\n744 359 230 586 944 442\\r\\n', 'output': ['2 3\\r\\n']}, {'input': '5\\r\\n826 747 849 687 437\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '5\\r\\n999 999 993 969 999\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '5\\r\\n4 24 6 1 15\\r\\n', 'output': ['3 4\\r\\n']}, {'input': '2\\r\\n511 32\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '3\\r\\n907 452 355\\r\\n', 'output': ['2 3\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['4 1\\r\\n']}, {'input': '10\\r\\n684 698 429 694 956 812 594 170 937 764\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '20\\r\\n646 840 437 946 640 564 936 917 487 752 844 734 468 969 674 646 728 642 514 695\\r\\n', 'output': ['7 8\\r\\n']}, {'input': '30\\r\\n996 999 998 984 989 1000 996 993 1000 983 992 999 999 1000 979 992 987 1000 996 1000 1000 989 981 996 995 999 999 989 999 1000\\r\\n', 'output': ['12 13\\r\\n']}, {'input': '50\\r\\n93 27 28 4 5 78 59 24 19 134 31 128 118 36 90 32 32 1 44 32 33 13 31 10 12 25 38 50 25 12 4 22 28 53 48 83 4 25 57 31 71 24 8 7 28 86 23 80 101 58\\r\\n', 'output': ['16 17\\r\\n']}, {'input': '88\\r\\n1000 1000 1000 1000 1000 998 998 1000 1000 1000 1000 999 999 1000 1000 1000 999 1000 997 999 997 1000 999 998 1000 999 1000 1000 1000 999 1000 999 999 1000 1000 999 1000 999 1000 1000 998 1000 1000 1000 998 998 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 999 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 998 1000 1000 998 1000 999 1000 1000 1000 1000\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '99\\r\\n4 4 21 6 5 3 13 2 6 1 3 4 1 3 1 9 11 1 6 17 4 5 20 4 1 9 5 11 3 4 14 1 3 3 1 4 3 5 27 1 1 2 10 7 11 4 19 7 11 6 11 13 3 1 10 7 2 1 16 1 9 4 29 13 2 12 14 2 21 1 9 8 26 12 12 5 2 14 7 8 8 8 9 4 12 2 6 6 7 16 8 14 2 10 20 15 3 7 4\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '100\\r\\n713 572 318 890 577 657 646 146 373 783 392 229 455 871 20 593 573 336 26 381 280 916 907 732 820 713 111 840 570 446 184 711 481 399 788 647 492 15 40 530 549 506 719 782 126 20 778 996 712 761 9 74 812 418 488 175 103 585 900 3 604 521 109 513 145 708 990 361 682 827 791 22 596 780 596 385 450 643 158 496 876 975 319 783 654 895 891 361 397 81 682 899 347 623 809 557 435 279 513 438\\r\\n', 'output': ['86 87\\r\\n']}, {'input': '100\\r\\n31 75 86 68 111 27 22 22 26 30 54 163 107 75 160 122 14 23 17 26 27 20 43 58 59 71 21 148 9 32 43 91 133 286 132 70 90 156 84 14 77 93 23 18 13 72 18 131 33 28 72 175 30 86 249 20 14 208 28 57 63 199 6 10 24 30 62 267 43 479 60 28 138 1 45 3 19 47 7 166 116 117 50 140 28 14 95 85 93 43 61 15 2 70 10 51 7 95 9 25\\r\\n', 'output': ['7 8\\r\\n']}, {'input': '100\\r\\n896 898 967 979 973 709 961 968 806 967 896 967 826 975 936 903 986 856 851 931 852 971 786 837 949 978 686 936 952 909 965 749 908 916 943 973 983 975 939 886 964 928 960 976 907 788 994 773 949 871 947 980 945 985 726 981 887 943 907 990 931 874 840 867 948 951 961 904 888 901 976 967 994 921 828 970 972 722 755 970 860 855 914 869 714 899 969 978 898 862 642 939 904 936 819 934 884 983 955 964\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '100\\r\\n994 927 872 970 815 986 952 996 965 1000 877 986 978 999 950 990 936 997 993 960 921 860 895 869 943 998 983 968 973 953 999 990 995 871 853 979 973 963 953 938 997 989 993 964 960 973 946 975 1000 962 920 746 989 957 904 965 920 979 966 961 1000 993 975 952 846 971 991 979 985 969 984 973 956 1000 952 778 983 974 956 927 995 997 980 997 1000 970 960 970 988 983 947 904 935 972 1000 863 992 996 932 967\\r\\n', 'output': ['81 82\\r\\n']}, {'input': '100\\r\\n48 108 63 21 27 8 49 21 75 8 24 42 149 18 8 28 21 18 25 35 59 70 59 33 40 1 67 34 120 82 4 115 72 87 3 15 15 63 37 12 40 27 83 14 38 20 14 58 93 10 31 3 39 6 197 77 54 16 31 146 9 49 14 8 77 82 5 11 80 116 8 61 50 24 7 103 29 11 3 3 1 12 46 24 21 131 39 29 36 2 107 40 16 99 31 41 29 48 17 17\\r\\n', 'output': ['36 37\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a[107], n;\nint dp[107][107];\nint main() {\n  scanf(\"%d\", &n);\n  int sum = 0;\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    if (i == 1) {\n      a[0] = a[n];\n    }\n    sum += a[i];\n  }\n  int ans = 10000;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) {\n      dp[i][j] = abs(a[i] - a[j]) + min(dp[i - 1][j], dp[i][j - 1]);\n    }\n  }\n  for (int i = 1; i <= n; i++) {\n    for (int j = i + 1; j <= n; j++) {\n      if (dp[i][j] < ans) {\n        ans = dp[i][j];\n        cout << i << \" \" << j << endl;\n      }\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "id": 26, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '5\\r\\n10 12 13 15 10\\r\\n', 'output': ['5 1\\r\\n']}, {'input': '4\\r\\n10 20 30 40\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '6\\r\\n744 359 230 586 944 442\\r\\n', 'output': ['2 3\\r\\n']}, {'input': '5\\r\\n826 747 849 687 437\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '5\\r\\n999 999 993 969 999\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '5\\r\\n4 24 6 1 15\\r\\n', 'output': ['3 4\\r\\n']}, {'input': '2\\r\\n511 32\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '3\\r\\n907 452 355\\r\\n', 'output': ['2 3\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['4 1\\r\\n']}, {'input': '10\\r\\n684 698 429 694 956 812 594 170 937 764\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '20\\r\\n646 840 437 946 640 564 936 917 487 752 844 734 468 969 674 646 728 642 514 695\\r\\n', 'output': ['7 8\\r\\n']}, {'input': '30\\r\\n996 999 998 984 989 1000 996 993 1000 983 992 999 999 1000 979 992 987 1000 996 1000 1000 989 981 996 995 999 999 989 999 1000\\r\\n', 'output': ['12 13\\r\\n']}, {'input': '50\\r\\n93 27 28 4 5 78 59 24 19 134 31 128 118 36 90 32 32 1 44 32 33 13 31 10 12 25 38 50 25 12 4 22 28 53 48 83 4 25 57 31 71 24 8 7 28 86 23 80 101 58\\r\\n', 'output': ['16 17\\r\\n']}, {'input': '88\\r\\n1000 1000 1000 1000 1000 998 998 1000 1000 1000 1000 999 999 1000 1000 1000 999 1000 997 999 997 1000 999 998 1000 999 1000 1000 1000 999 1000 999 999 1000 1000 999 1000 999 1000 1000 998 1000 1000 1000 998 998 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 999 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 998 1000 1000 998 1000 999 1000 1000 1000 1000\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '99\\r\\n4 4 21 6 5 3 13 2 6 1 3 4 1 3 1 9 11 1 6 17 4 5 20 4 1 9 5 11 3 4 14 1 3 3 1 4 3 5 27 1 1 2 10 7 11 4 19 7 11 6 11 13 3 1 10 7 2 1 16 1 9 4 29 13 2 12 14 2 21 1 9 8 26 12 12 5 2 14 7 8 8 8 9 4 12 2 6 6 7 16 8 14 2 10 20 15 3 7 4\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '100\\r\\n713 572 318 890 577 657 646 146 373 783 392 229 455 871 20 593 573 336 26 381 280 916 907 732 820 713 111 840 570 446 184 711 481 399 788 647 492 15 40 530 549 506 719 782 126 20 778 996 712 761 9 74 812 418 488 175 103 585 900 3 604 521 109 513 145 708 990 361 682 827 791 22 596 780 596 385 450 643 158 496 876 975 319 783 654 895 891 361 397 81 682 899 347 623 809 557 435 279 513 438\\r\\n', 'output': ['86 87\\r\\n']}, {'input': '100\\r\\n31 75 86 68 111 27 22 22 26 30 54 163 107 75 160 122 14 23 17 26 27 20 43 58 59 71 21 148 9 32 43 91 133 286 132 70 90 156 84 14 77 93 23 18 13 72 18 131 33 28 72 175 30 86 249 20 14 208 28 57 63 199 6 10 24 30 62 267 43 479 60 28 138 1 45 3 19 47 7 166 116 117 50 140 28 14 95 85 93 43 61 15 2 70 10 51 7 95 9 25\\r\\n', 'output': ['7 8\\r\\n']}, {'input': '100\\r\\n896 898 967 979 973 709 961 968 806 967 896 967 826 975 936 903 986 856 851 931 852 971 786 837 949 978 686 936 952 909 965 749 908 916 943 973 983 975 939 886 964 928 960 976 907 788 994 773 949 871 947 980 945 985 726 981 887 943 907 990 931 874 840 867 948 951 961 904 888 901 976 967 994 921 828 970 972 722 755 970 860 855 914 869 714 899 969 978 898 862 642 939 904 936 819 934 884 983 955 964\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '100\\r\\n994 927 872 970 815 986 952 996 965 1000 877 986 978 999 950 990 936 997 993 960 921 860 895 869 943 998 983 968 973 953 999 990 995 871 853 979 973 963 953 938 997 989 993 964 960 973 946 975 1000 962 920 746 989 957 904 965 920 979 966 961 1000 993 975 952 846 971 991 979 985 969 984 973 956 1000 952 778 983 974 956 927 995 997 980 997 1000 970 960 970 988 983 947 904 935 972 1000 863 992 996 932 967\\r\\n', 'output': ['81 82\\r\\n']}, {'input': '100\\r\\n48 108 63 21 27 8 49 21 75 8 24 42 149 18 8 28 21 18 25 35 59 70 59 33 40 1 67 34 120 82 4 115 72 87 3 15 15 63 37 12 40 27 83 14 38 20 14 58 93 10 31 3 39 6 197 77 54 16 31 146 9 49 14 8 77 82 5 11 80 116 8 61 50 24 7 103 29 11 3 3 1 12 46 24 21 131 39 29 36 2 107 40 16 99 31 41 29 48 17 17\\r\\n', 'output': ['36 37\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, ans1 = 0, ans2 = 1, cur;\n  scanf(\"%d\", &n);\n  int a[n];\n  for (int i = 0; i < n; ++i) {\n    scanf(\"%d\", &a[i]);\n  }\n  cur = abs(a[0] - a[n - 1]);\n  for (int i = 1; i < n - 1; ++i) {\n    if (abs(a[i] - a[i - 1]) < cur) {\n      cur = abs(a[i] - a[i - 1]);\n      ans1 = i + 1;\n      ans2 = i;\n    } else if (abs(a[i] - a[i - 1]) == cur) {\n      cur = abs(a[i] - a[i - 1]);\n      ans1 = min(ans1, i + 1);\n      ans2 = max(ans2, i);\n    }\n  }\n  ans1 %= n;\n  ans2 %= n;\n  printf(\"%d %d\\n\", ans1, ans2);\n  return 0;\n}\n"}
{"src_uid": "1a740b0ad2ec3ed208f01fc7b64e00d4", "id": 27, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': '3 3\\r\\n1\\r\\n2 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '3 3\\r\\n1\\r\\n1 1\\r\\n', 'output': ['3 3\\r\\n']}, {'input': '3 3\\r\\n2\\r\\n1 1 3 3\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n1 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '2 2\\r\\n1\\r\\n2 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '2 2\\r\\n2\\r\\n1 1 2 1\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '2 2\\r\\n3\\r\\n1 2 2 1 1 1\\r\\n', 'output': ['2 2\\r\\n']}, {'input': '2 2\\r\\n4\\r\\n2 1 2 2 1 1 1 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n1\\r\\n5 5\\r\\n', 'output': ['10 10\\r\\n']}, {'input': '10 10\\r\\n2\\r\\n7 8 1 9\\r\\n', 'output': ['3 1\\r\\n']}, {'input': '10 10\\r\\n3\\r\\n3 9 6 3 3 5\\r\\n', 'output': ['10 7\\r\\n']}, {'input': '10 10\\r\\n4\\r\\n5 3 4 7 7 5 8 5\\r\\n', 'output': ['10 10\\r\\n']}, {'input': '10 10\\r\\n5\\r\\n2 7 10 6 5 3 9 5 2 9\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n6\\r\\n5 1 4 6 3 9 9 9 5 7 7 2\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '10 10\\r\\n7\\r\\n5 8 4 6 4 1 6 2 1 10 3 2 7 10\\r\\n', 'output': ['10 5\\r\\n']}, {'input': '10 10\\r\\n8\\r\\n9 4 9 10 5 8 6 5 1 3 2 5 10 6 2 1\\r\\n', 'output': ['1 10\\r\\n']}, {'input': '10 10\\r\\n9\\r\\n10 1 10 4 8 4 6 6 1 9 10 10 7 7 6 5 7 10\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n10\\r\\n7 2 1 9 5 8 6 10 9 4 10 8 6 8 8 7 4 1 9 5\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '100 100\\r\\n1\\r\\n44 3\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n2\\r\\n79 84 76 63\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '100 100\\r\\n3\\r\\n89 93 99 32 32 82\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '100 100\\r\\n4\\r\\n72 12 1 66 57 67 25 67\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n5\\r\\n22 41 82 16 6 3 20 6 69 78\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n6\\r\\n92 32 90 80 32 40 24 19 36 37 39 13\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n7\\r\\n30 32 29 63 86 78 88 2 86 50 41 60 54 28\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n8\\r\\n40 43 96 8 17 63 61 59 16 69 4 95 30 62 12 91\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n9\\r\\n18 16 41 71 25 1 43 38 78 92 77 70 99 8 33 54 76 78\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n10\\r\\n58 98 33 62 75 13 94 86 81 42 14 53 12 66 7 14 3 63 87 37\\r\\n', 'output': ['40 1\\r\\n']}, {'input': '2000 2000\\r\\n1\\r\\n407 594\\r\\n', 'output': ['2000 2000\\r\\n']}, {'input': '2000 2000\\r\\n2\\r\\n1884 43 1235 1111\\r\\n', 'output': ['1 2000\\r\\n']}, {'input': '2000 2000\\r\\n3\\r\\n1740 1797 1279 1552 329 756\\r\\n', 'output': ['2000 1\\r\\n']}, {'input': '2000 2000\\r\\n4\\r\\n1844 1342 171 1810 1558 1141 1917 1999\\r\\n', 'output': ['530 1\\r\\n']}, {'input': '2000 2000\\r\\n5\\r\\n1846 327 1911 1534 134 1615 1664 682 1982 1112\\r\\n', 'output': ['346 1\\r\\n']}, {'input': '2000 2000\\r\\n6\\r\\n1744 1102 852 723 409 179 89 1085 997 1433 1082 1680\\r\\n', 'output': ['2000 1\\r\\n']}, {'input': '2000 2000\\r\\n7\\r\\n1890 22 288 1729 383 831 1192 1206 721 1376 969 492 510 1699\\r\\n', 'output': ['2000 2000\\r\\n']}, {'input': '2000 2000\\r\\n8\\r\\n286 381 572 1849 1703 1574 622 1047 1507 941 871 663 1930 120 1084 1830\\r\\n', 'output': ['1 1423\\r\\n']}, {'input': '2000 2000\\r\\n9\\r\\n226 531 56 138 722 405 1082 608 1355 1426 83 544 275 1268 683 412 1880 1049\\r\\n', 'output': ['1701 1\\r\\n']}, {'input': '2000 2000\\r\\n10\\r\\n763 851 1182 571 1758 389 247 1907 730 881 531 1970 1430 667 169 765 1729 120 129 967\\r\\n', 'output': ['2000 1793\\r\\n']}, {'input': '2000 2000\\r\\n10\\r\\n655 95 1640 1656 1344 79 666 1677 968 1180 522 1394 1850 1568 336 130 412 920 29 1664\\r\\n', 'output': ['2000 570\\r\\n']}, {'input': '10 1\\r\\n10\\r\\n4 1 6 1 10 1 9 1 1 1 7 1 5 1 2 1 8 1 3 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 10\\r\\n10\\r\\n1 10 1 4 1 3 1 7 1 6 1 1 1 8 1 2 1 9 1 5\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 100\\r\\n10\\r\\n1 68 1 18 1 43 1 12 1 64 1 34 1 23 1 70 1 46 1 33\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 1\\r\\n10\\r\\n62 1 63 1 57 1 76 1 35 1 69 1 73 1 95 1 96 1 21 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 2000\\r\\n10\\r\\n1 1730 1 1374 1 831 1 1076 1 580 1 914 1 123 1 668 1 1288 1 160\\r\\n', 'output': ['1 2000\\r\\n']}, {'input': '2000 1\\r\\n10\\r\\n1058 1 1779 1 1995 1 1398 1 96 1 1599 1 1496 1 1659 1 385 1 1485 1\\r\\n', 'output': ['721 1\\r\\n']}, {'input': '5 5\\r\\n1\\r\\n1 1\\r\\n', 'output': ['5 5\\r\\n']}, {'input': '2 5\\r\\n10\\r\\n1 1 1 2 1 3 1 4 1 5 2 1 2 2 2 3 2 4 2 5\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 10\\r\\n9\\r\\n1 1 1 2 1 3 1 4 1 6 1 7 1 8 1 9 1 10\\r\\n', 'output': ['1 5\\r\\n']}, {'input': '3 3\\r\\n5\\r\\n1 1 1 3 2 2 3 1 3 3\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '999 999\\r\\n4\\r\\n1 499 499 1 499 999 999 499\\r\\n', 'output': ['500 500\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  vector<pair<int, int> > a(k);\n  vector<int> row(n + 1, 10000);\n  vector<int> col(m + 1, 10000);\n  for (int i = 0; i < k; i++) cin >> a[i].first >> a[i].second;\n  for (int i = 0; i < k; i++) {\n    int r = a[i].first, c = a[i].second;\n    row[r] = min(row[r], i);\n    col[c] = min(col[c], i);\n  }\n  int ans = max(row[1], col[1]) + 1;\n  pair<int, int> res;\n  res = {1, 1};\n  for (int i = 2; i <= n; i++)\n    if (row[i]!= 10000 && col[i]!= 10000)\n      if (ans < min(row[i], col[i])) {\n        res.first = i;\n        res.second = i;\n        ans = min(row[i], col[i]);\n      } else if (ans == min(row[i], col[i]) && i < res.second) res.second = i;\n  cout << res.first << \" \" << res.second;\n}\n"}
{"src_uid": "1a740b0ad2ec3ed208f01fc7b64e00d4", "id": 27, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': '3 3\\r\\n1\\r\\n2 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '3 3\\r\\n1\\r\\n1 1\\r\\n', 'output': ['3 3\\r\\n']}, {'input': '3 3\\r\\n2\\r\\n1 1 3 3\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n1 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '2 2\\r\\n1\\r\\n2 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '2 2\\r\\n2\\r\\n1 1 2 1\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '2 2\\r\\n3\\r\\n1 2 2 1 1 1\\r\\n', 'output': ['2 2\\r\\n']}, {'input': '2 2\\r\\n4\\r\\n2 1 2 2 1 1 1 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n1\\r\\n5 5\\r\\n', 'output': ['10 10\\r\\n']}, {'input': '10 10\\r\\n2\\r\\n7 8 1 9\\r\\n', 'output': ['3 1\\r\\n']}, {'input': '10 10\\r\\n3\\r\\n3 9 6 3 3 5\\r\\n', 'output': ['10 7\\r\\n']}, {'input': '10 10\\r\\n4\\r\\n5 3 4 7 7 5 8 5\\r\\n', 'output': ['10 10\\r\\n']}, {'input': '10 10\\r\\n5\\r\\n2 7 10 6 5 3 9 5 2 9\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n6\\r\\n5 1 4 6 3 9 9 9 5 7 7 2\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '10 10\\r\\n7\\r\\n5 8 4 6 4 1 6 2 1 10 3 2 7 10\\r\\n', 'output': ['10 5\\r\\n']}, {'input': '10 10\\r\\n8\\r\\n9 4 9 10 5 8 6 5 1 3 2 5 10 6 2 1\\r\\n', 'output': ['1 10\\r\\n']}, {'input': '10 10\\r\\n9\\r\\n10 1 10 4 8 4 6 6 1 9 10 10 7 7 6 5 7 10\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n10\\r\\n7 2 1 9 5 8 6 10 9 4 10 8 6 8 8 7 4 1 9 5\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '100 100\\r\\n1\\r\\n44 3\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n2\\r\\n79 84 76 63\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '100 100\\r\\n3\\r\\n89 93 99 32 32 82\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '100 100\\r\\n4\\r\\n72 12 1 66 57 67 25 67\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n5\\r\\n22 41 82 16 6 3 20 6 69 78\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n6\\r\\n92 32 90 80 32 40 24 19 36 37 39 13\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n7\\r\\n30 32 29 63 86 78 88 2 86 50 41 60 54 28\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n8\\r\\n40 43 96 8 17 63 61 59 16 69 4 95 30 62 12 91\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n9\\r\\n18 16 41 71 25 1 43 38 78 92 77 70 99 8 33 54 76 78\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n10\\r\\n58 98 33 62 75 13 94 86 81 42 14 53 12 66 7 14 3 63 87 37\\r\\n', 'output': ['40 1\\r\\n']}, {'input': '2000 2000\\r\\n1\\r\\n407 594\\r\\n', 'output': ['2000 2000\\r\\n']}, {'input': '2000 2000\\r\\n2\\r\\n1884 43 1235 1111\\r\\n', 'output': ['1 2000\\r\\n']}, {'input': '2000 2000\\r\\n3\\r\\n1740 1797 1279 1552 329 756\\r\\n', 'output': ['2000 1\\r\\n']}, {'input': '2000 2000\\r\\n4\\r\\n1844 1342 171 1810 1558 1141 1917 1999\\r\\n', 'output': ['530 1\\r\\n']}, {'input': '2000 2000\\r\\n5\\r\\n1846 327 1911 1534 134 1615 1664 682 1982 1112\\r\\n', 'output': ['346 1\\r\\n']}, {'input': '2000 2000\\r\\n6\\r\\n1744 1102 852 723 409 179 89 1085 997 1433 1082 1680\\r\\n', 'output': ['2000 1\\r\\n']}, {'input': '2000 2000\\r\\n7\\r\\n1890 22 288 1729 383 831 1192 1206 721 1376 969 492 510 1699\\r\\n', 'output': ['2000 2000\\r\\n']}, {'input': '2000 2000\\r\\n8\\r\\n286 381 572 1849 1703 1574 622 1047 1507 941 871 663 1930 120 1084 1830\\r\\n', 'output': ['1 1423\\r\\n']}, {'input': '2000 2000\\r\\n9\\r\\n226 531 56 138 722 405 1082 608 1355 1426 83 544 275 1268 683 412 1880 1049\\r\\n', 'output': ['1701 1\\r\\n']}, {'input': '2000 2000\\r\\n10\\r\\n763 851 1182 571 1758 389 247 1907 730 881 531 1970 1430 667 169 765 1729 120 129 967\\r\\n', 'output': ['2000 1793\\r\\n']}, {'input': '2000 2000\\r\\n10\\r\\n655 95 1640 1656 1344 79 666 1677 968 1180 522 1394 1850 1568 336 130 412 920 29 1664\\r\\n', 'output': ['2000 570\\r\\n']}, {'input': '10 1\\r\\n10\\r\\n4 1 6 1 10 1 9 1 1 1 7 1 5 1 2 1 8 1 3 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 10\\r\\n10\\r\\n1 10 1 4 1 3 1 7 1 6 1 1 1 8 1 2 1 9 1 5\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 100\\r\\n10\\r\\n1 68 1 18 1 43 1 12 1 64 1 34 1 23 1 70 1 46 1 33\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 1\\r\\n10\\r\\n62 1 63 1 57 1 76 1 35 1 69 1 73 1 95 1 96 1 21 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 2000\\r\\n10\\r\\n1 1730 1 1374 1 831 1 1076 1 580 1 914 1 123 1 668 1 1288 1 160\\r\\n', 'output': ['1 2000\\r\\n']}, {'input': '2000 1\\r\\n10\\r\\n1058 1 1779 1 1995 1 1398 1 96 1 1599 1 1496 1 1659 1 385 1 1485 1\\r\\n', 'output': ['721 1\\r\\n']}, {'input': '5 5\\r\\n1\\r\\n1 1\\r\\n', 'output': ['5 5\\r\\n']}, {'input': '2 5\\r\\n10\\r\\n1 1 1 2 1 3 1 4 1 5 2 1 2 2 2 3 2 4 2 5\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 10\\r\\n9\\r\\n1 1 1 2 1 3 1 4 1 6 1 7 1 8 1 9 1 10\\r\\n', 'output': ['1 5\\r\\n']}, {'input': '3 3\\r\\n5\\r\\n1 1 1 3 2 2 3 1 3 3\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '999 999\\r\\n4\\r\\n1 499 499 1 499 999 999 499\\r\\n', 'output': ['500 500\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 2002;\nint n, m, k, x[1000], y[1000];\nint dis[MAX][MAX];\nint dp[MAX][MAX];\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < k; i++) {\n    cin >> x[i] >> y[i];\n    x[i]--;\n    y[i]--;\n    dis[x[i]][y[i]] = 0;\n  }\n  for (int i = 0; i < k; i++) {\n    for (int j = 0; j < n; j++) {\n      for (int l = 0; l < m; l++) {\n        if (dis[j][l] == 0) continue;\n        if (dis[j][l] > dis[x[i]][y[i]] + 1) {\n          dis[j][l] = dis[x[i]][y[i]] + 1;\n          dp[j][l] = i + 1;\n        }\n      }\n    }\n  }\n  int bestx = 0, besty = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      if (dis[i][j] > dis[bestx][besty]) {\n        bestx = i;\n        besty = j;\n      }\n    }\n  }\n  cout << bestx + 1 << \" \" << besty + 1 << endl;\n  return 0;\n}\n"}
{"src_uid": "1a740b0ad2ec3ed208f01fc7b64e00d4", "id": 27, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': '3 3\\r\\n1\\r\\n2 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '3 3\\r\\n1\\r\\n1 1\\r\\n', 'output': ['3 3\\r\\n']}, {'input': '3 3\\r\\n2\\r\\n1 1 3 3\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n1 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '2 2\\r\\n1\\r\\n2 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '2 2\\r\\n2\\r\\n1 1 2 1\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '2 2\\r\\n3\\r\\n1 2 2 1 1 1\\r\\n', 'output': ['2 2\\r\\n']}, {'input': '2 2\\r\\n4\\r\\n2 1 2 2 1 1 1 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n1\\r\\n5 5\\r\\n', 'output': ['10 10\\r\\n']}, {'input': '10 10\\r\\n2\\r\\n7 8 1 9\\r\\n', 'output': ['3 1\\r\\n']}, {'input': '10 10\\r\\n3\\r\\n3 9 6 3 3 5\\r\\n', 'output': ['10 7\\r\\n']}, {'input': '10 10\\r\\n4\\r\\n5 3 4 7 7 5 8 5\\r\\n', 'output': ['10 10\\r\\n']}, {'input': '10 10\\r\\n5\\r\\n2 7 10 6 5 3 9 5 2 9\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n6\\r\\n5 1 4 6 3 9 9 9 5 7 7 2\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '10 10\\r\\n7\\r\\n5 8 4 6 4 1 6 2 1 10 3 2 7 10\\r\\n', 'output': ['10 5\\r\\n']}, {'input': '10 10\\r\\n8\\r\\n9 4 9 10 5 8 6 5 1 3 2 5 10 6 2 1\\r\\n', 'output': ['1 10\\r\\n']}, {'input': '10 10\\r\\n9\\r\\n10 1 10 4 8 4 6 6 1 9 10 10 7 7 6 5 7 10\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n10\\r\\n7 2 1 9 5 8 6 10 9 4 10 8 6 8 8 7 4 1 9 5\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '100 100\\r\\n1\\r\\n44 3\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n2\\r\\n79 84 76 63\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '100 100\\r\\n3\\r\\n89 93 99 32 32 82\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '100 100\\r\\n4\\r\\n72 12 1 66 57 67 25 67\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n5\\r\\n22 41 82 16 6 3 20 6 69 78\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n6\\r\\n92 32 90 80 32 40 24 19 36 37 39 13\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n7\\r\\n30 32 29 63 86 78 88 2 86 50 41 60 54 28\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n8\\r\\n40 43 96 8 17 63 61 59 16 69 4 95 30 62 12 91\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n9\\r\\n18 16 41 71 25 1 43 38 78 92 77 70 99 8 33 54 76 78\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n10\\r\\n58 98 33 62 75 13 94 86 81 42 14 53 12 66 7 14 3 63 87 37\\r\\n', 'output': ['40 1\\r\\n']}, {'input': '2000 2000\\r\\n1\\r\\n407 594\\r\\n', 'output': ['2000 2000\\r\\n']}, {'input': '2000 2000\\r\\n2\\r\\n1884 43 1235 1111\\r\\n', 'output': ['1 2000\\r\\n']}, {'input': '2000 2000\\r\\n3\\r\\n1740 1797 1279 1552 329 756\\r\\n', 'output': ['2000 1\\r\\n']}, {'input': '2000 2000\\r\\n4\\r\\n1844 1342 171 1810 1558 1141 1917 1999\\r\\n', 'output': ['530 1\\r\\n']}, {'input': '2000 2000\\r\\n5\\r\\n1846 327 1911 1534 134 1615 1664 682 1982 1112\\r\\n', 'output': ['346 1\\r\\n']}, {'input': '2000 2000\\r\\n6\\r\\n1744 1102 852 723 409 179 89 1085 997 1433 1082 1680\\r\\n', 'output': ['2000 1\\r\\n']}, {'input': '2000 2000\\r\\n7\\r\\n1890 22 288 1729 383 831 1192 1206 721 1376 969 492 510 1699\\r\\n', 'output': ['2000 2000\\r\\n']}, {'input': '2000 2000\\r\\n8\\r\\n286 381 572 1849 1703 1574 622 1047 1507 941 871 663 1930 120 1084 1830\\r\\n', 'output': ['1 1423\\r\\n']}, {'input': '2000 2000\\r\\n9\\r\\n226 531 56 138 722 405 1082 608 1355 1426 83 544 275 1268 683 412 1880 1049\\r\\n', 'output': ['1701 1\\r\\n']}, {'input': '2000 2000\\r\\n10\\r\\n763 851 1182 571 1758 389 247 1907 730 881 531 1970 1430 667 169 765 1729 120 129 967\\r\\n', 'output': ['2000 1793\\r\\n']}, {'input': '2000 2000\\r\\n10\\r\\n655 95 1640 1656 1344 79 666 1677 968 1180 522 1394 1850 1568 336 130 412 920 29 1664\\r\\n', 'output': ['2000 570\\r\\n']}, {'input': '10 1\\r\\n10\\r\\n4 1 6 1 10 1 9 1 1 1 7 1 5 1 2 1 8 1 3 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 10\\r\\n10\\r\\n1 10 1 4 1 3 1 7 1 6 1 1 1 8 1 2 1 9 1 5\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 100\\r\\n10\\r\\n1 68 1 18 1 43 1 12 1 64 1 34 1 23 1 70 1 46 1 33\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 1\\r\\n10\\r\\n62 1 63 1 57 1 76 1 35 1 69 1 73 1 95 1 96 1 21 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 2000\\r\\n10\\r\\n1 1730 1 1374 1 831 1 1076 1 580 1 914 1 123 1 668 1 1288 1 160\\r\\n', 'output': ['1 2000\\r\\n']}, {'input': '2000 1\\r\\n10\\r\\n1058 1 1779 1 1995 1 1398 1 96 1 1599 1 1496 1 1659 1 385 1 1485 1\\r\\n', 'output': ['721 1\\r\\n']}, {'input': '5 5\\r\\n1\\r\\n1 1\\r\\n', 'output': ['5 5\\r\\n']}, {'input': '2 5\\r\\n10\\r\\n1 1 1 2 1 3 1 4 1 5 2 1 2 2 2 3 2 4 2 5\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 10\\r\\n9\\r\\n1 1 1 2 1 3 1 4 1 6 1 7 1 8 1 9 1 10\\r\\n', 'output': ['1 5\\r\\n']}, {'input': '3 3\\r\\n5\\r\\n1 1 1 3 2 2 3 1 3 3\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '999 999\\r\\n4\\r\\n1 499 499 1 499 999 999 499\\r\\n', 'output': ['500 500\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long MAXN = 2020;\nconst long long MAXP = 4e4 + 5;\nlong long dp[MAXN][MAXN];\nlong long t[MAXP];\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  long long N, M;\n  cin >> N >> M;\n  long long K;\n  cin >> K;\n  for (long long i = 1; i <= K; i++) {\n    long long x, y;\n    cin >> x >> y;\n    t[i] = 1 + abs(x - N) + abs(y - M);\n  }\n  t[K + 1] = MAXN * MAXN;\n  sort(t + 1, t + K + 1);\n  long long L = 1 + abs(N - M);\n  long long R = MAXN * MAXN;\n  while (L <= R) {\n    long long M = (L + R) / 2;\n    for (long long i = 1; i <= K; i++)\n      for (long long j = 1; j <= M; j++)\n        dp[i][j] =\n            min(dp[i - 1][j] + 1, dp[i][j - 1] + (t[i] == t[i - 1] + j));\n    long long now = K + 1;\n    for (long long i = 1; i <= K; i++)\n      if (dp[i][M] + (t[i] == t[K] + M) <= M) now = min(now, i);\n    if (now <= K) {\n      L = M + 1;\n    } else\n      R = M - 1;\n  }\n  for (long long i = 1; i <= N; i++)\n    for (long long j = 1; j <= M; j++)\n      if (t[K] == t[K - 1] + abs(i - N) + abs(j - M))\n        cout << i << \" \" << j << endl;\n  return 0;\n}\n"}
{"src_uid": "1a740b0ad2ec3ed208f01fc7b64e00d4", "id": 27, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': '3 3\\r\\n1\\r\\n2 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '3 3\\r\\n1\\r\\n1 1\\r\\n', 'output': ['3 3\\r\\n']}, {'input': '3 3\\r\\n2\\r\\n1 1 3 3\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n1 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '2 2\\r\\n1\\r\\n2 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '2 2\\r\\n2\\r\\n1 1 2 1\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '2 2\\r\\n3\\r\\n1 2 2 1 1 1\\r\\n', 'output': ['2 2\\r\\n']}, {'input': '2 2\\r\\n4\\r\\n2 1 2 2 1 1 1 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n1\\r\\n5 5\\r\\n', 'output': ['10 10\\r\\n']}, {'input': '10 10\\r\\n2\\r\\n7 8 1 9\\r\\n', 'output': ['3 1\\r\\n']}, {'input': '10 10\\r\\n3\\r\\n3 9 6 3 3 5\\r\\n', 'output': ['10 7\\r\\n']}, {'input': '10 10\\r\\n4\\r\\n5 3 4 7 7 5 8 5\\r\\n', 'output': ['10 10\\r\\n']}, {'input': '10 10\\r\\n5\\r\\n2 7 10 6 5 3 9 5 2 9\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n6\\r\\n5 1 4 6 3 9 9 9 5 7 7 2\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '10 10\\r\\n7\\r\\n5 8 4 6 4 1 6 2 1 10 3 2 7 10\\r\\n', 'output': ['10 5\\r\\n']}, {'input': '10 10\\r\\n8\\r\\n9 4 9 10 5 8 6 5 1 3 2 5 10 6 2 1\\r\\n', 'output': ['1 10\\r\\n']}, {'input': '10 10\\r\\n9\\r\\n10 1 10 4 8 4 6 6 1 9 10 10 7 7 6 5 7 10\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n10\\r\\n7 2 1 9 5 8 6 10 9 4 10 8 6 8 8 7 4 1 9 5\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '100 100\\r\\n1\\r\\n44 3\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n2\\r\\n79 84 76 63\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '100 100\\r\\n3\\r\\n89 93 99 32 32 82\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '100 100\\r\\n4\\r\\n72 12 1 66 57 67 25 67\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n5\\r\\n22 41 82 16 6 3 20 6 69 78\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n6\\r\\n92 32 90 80 32 40 24 19 36 37 39 13\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n7\\r\\n30 32 29 63 86 78 88 2 86 50 41 60 54 28\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n8\\r\\n40 43 96 8 17 63 61 59 16 69 4 95 30 62 12 91\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n9\\r\\n18 16 41 71 25 1 43 38 78 92 77 70 99 8 33 54 76 78\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n10\\r\\n58 98 33 62 75 13 94 86 81 42 14 53 12 66 7 14 3 63 87 37\\r\\n', 'output': ['40 1\\r\\n']}, {'input': '2000 2000\\r\\n1\\r\\n407 594\\r\\n', 'output': ['2000 2000\\r\\n']}, {'input': '2000 2000\\r\\n2\\r\\n1884 43 1235 1111\\r\\n', 'output': ['1 2000\\r\\n']}, {'input': '2000 2000\\r\\n3\\r\\n1740 1797 1279 1552 329 756\\r\\n', 'output': ['2000 1\\r\\n']}, {'input': '2000 2000\\r\\n4\\r\\n1844 1342 171 1810 1558 1141 1917 1999\\r\\n', 'output': ['530 1\\r\\n']}, {'input': '2000 2000\\r\\n5\\r\\n1846 327 1911 1534 134 1615 1664 682 1982 1112\\r\\n', 'output': ['346 1\\r\\n']}, {'input': '2000 2000\\r\\n6\\r\\n1744 1102 852 723 409 179 89 1085 997 1433 1082 1680\\r\\n', 'output': ['2000 1\\r\\n']}, {'input': '2000 2000\\r\\n7\\r\\n1890 22 288 1729 383 831 1192 1206 721 1376 969 492 510 1699\\r\\n', 'output': ['2000 2000\\r\\n']}, {'input': '2000 2000\\r\\n8\\r\\n286 381 572 1849 1703 1574 622 1047 1507 941 871 663 1930 120 1084 1830\\r\\n', 'output': ['1 1423\\r\\n']}, {'input': '2000 2000\\r\\n9\\r\\n226 531 56 138 722 405 1082 608 1355 1426 83 544 275 1268 683 412 1880 1049\\r\\n', 'output': ['1701 1\\r\\n']}, {'input': '2000 2000\\r\\n10\\r\\n763 851 1182 571 1758 389 247 1907 730 881 531 1970 1430 667 169 765 1729 120 129 967\\r\\n', 'output': ['2000 1793\\r\\n']}, {'input': '2000 2000\\r\\n10\\r\\n655 95 1640 1656 1344 79 666 1677 968 1180 522 1394 1850 1568 336 130 412 920 29 1664\\r\\n', 'output': ['2000 570\\r\\n']}, {'input': '10 1\\r\\n10\\r\\n4 1 6 1 10 1 9 1 1 1 7 1 5 1 2 1 8 1 3 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 10\\r\\n10\\r\\n1 10 1 4 1 3 1 7 1 6 1 1 1 8 1 2 1 9 1 5\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 100\\r\\n10\\r\\n1 68 1 18 1 43 1 12 1 64 1 34 1 23 1 70 1 46 1 33\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 1\\r\\n10\\r\\n62 1 63 1 57 1 76 1 35 1 69 1 73 1 95 1 96 1 21 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 2000\\r\\n10\\r\\n1 1730 1 1374 1 831 1 1076 1 580 1 914 1 123 1 668 1 1288 1 160\\r\\n', 'output': ['1 2000\\r\\n']}, {'input': '2000 1\\r\\n10\\r\\n1058 1 1779 1 1995 1 1398 1 96 1 1599 1 1496 1 1659 1 385 1 1485 1\\r\\n', 'output': ['721 1\\r\\n']}, {'input': '5 5\\r\\n1\\r\\n1 1\\r\\n', 'output': ['5 5\\r\\n']}, {'input': '2 5\\r\\n10\\r\\n1 1 1 2 1 3 1 4 1 5 2 1 2 2 2 3 2 4 2 5\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 10\\r\\n9\\r\\n1 1 1 2 1 3 1 4 1 6 1 7 1 8 1 9 1 10\\r\\n', 'output': ['1 5\\r\\n']}, {'input': '3 3\\r\\n5\\r\\n1 1 1 3 2 2 3 1 3 3\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '999 999\\r\\n4\\r\\n1 499 499 1 499 999 999 499\\r\\n', 'output': ['500 500\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n, m, k;\n  cin >> n >> m >> k;\n  int cnt = n * m;\n  for (int i = 0; i < k; i++) {\n    int x, y;\n    cin >> x >> y;\n    cnt = min(cnt, x * n + y);\n    cnt = min(cnt, x * n + m - y + 1);\n    cnt = min(cnt, m * n + x - y + 1);\n    cnt = min(cnt, m * n + y);\n  }\n  cout << cnt / n <<'' << cnt % n;\n}\n"}
{"src_uid": "1a740b0ad2ec3ed208f01fc7b64e00d4", "id": 27, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': '3 3\\r\\n1\\r\\n2 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '3 3\\r\\n1\\r\\n1 1\\r\\n', 'output': ['3 3\\r\\n']}, {'input': '3 3\\r\\n2\\r\\n1 1 3 3\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n1 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '2 2\\r\\n1\\r\\n2 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '2 2\\r\\n2\\r\\n1 1 2 1\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '2 2\\r\\n3\\r\\n1 2 2 1 1 1\\r\\n', 'output': ['2 2\\r\\n']}, {'input': '2 2\\r\\n4\\r\\n2 1 2 2 1 1 1 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n1\\r\\n5 5\\r\\n', 'output': ['10 10\\r\\n']}, {'input': '10 10\\r\\n2\\r\\n7 8 1 9\\r\\n', 'output': ['3 1\\r\\n']}, {'input': '10 10\\r\\n3\\r\\n3 9 6 3 3 5\\r\\n', 'output': ['10 7\\r\\n']}, {'input': '10 10\\r\\n4\\r\\n5 3 4 7 7 5 8 5\\r\\n', 'output': ['10 10\\r\\n']}, {'input': '10 10\\r\\n5\\r\\n2 7 10 6 5 3 9 5 2 9\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n6\\r\\n5 1 4 6 3 9 9 9 5 7 7 2\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '10 10\\r\\n7\\r\\n5 8 4 6 4 1 6 2 1 10 3 2 7 10\\r\\n', 'output': ['10 5\\r\\n']}, {'input': '10 10\\r\\n8\\r\\n9 4 9 10 5 8 6 5 1 3 2 5 10 6 2 1\\r\\n', 'output': ['1 10\\r\\n']}, {'input': '10 10\\r\\n9\\r\\n10 1 10 4 8 4 6 6 1 9 10 10 7 7 6 5 7 10\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n10\\r\\n7 2 1 9 5 8 6 10 9 4 10 8 6 8 8 7 4 1 9 5\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '100 100\\r\\n1\\r\\n44 3\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n2\\r\\n79 84 76 63\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '100 100\\r\\n3\\r\\n89 93 99 32 32 82\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '100 100\\r\\n4\\r\\n72 12 1 66 57 67 25 67\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n5\\r\\n22 41 82 16 6 3 20 6 69 78\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n6\\r\\n92 32 90 80 32 40 24 19 36 37 39 13\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n7\\r\\n30 32 29 63 86 78 88 2 86 50 41 60 54 28\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n8\\r\\n40 43 96 8 17 63 61 59 16 69 4 95 30 62 12 91\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n9\\r\\n18 16 41 71 25 1 43 38 78 92 77 70 99 8 33 54 76 78\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n10\\r\\n58 98 33 62 75 13 94 86 81 42 14 53 12 66 7 14 3 63 87 37\\r\\n', 'output': ['40 1\\r\\n']}, {'input': '2000 2000\\r\\n1\\r\\n407 594\\r\\n', 'output': ['2000 2000\\r\\n']}, {'input': '2000 2000\\r\\n2\\r\\n1884 43 1235 1111\\r\\n', 'output': ['1 2000\\r\\n']}, {'input': '2000 2000\\r\\n3\\r\\n1740 1797 1279 1552 329 756\\r\\n', 'output': ['2000 1\\r\\n']}, {'input': '2000 2000\\r\\n4\\r\\n1844 1342 171 1810 1558 1141 1917 1999\\r\\n', 'output': ['530 1\\r\\n']}, {'input': '2000 2000\\r\\n5\\r\\n1846 327 1911 1534 134 1615 1664 682 1982 1112\\r\\n', 'output': ['346 1\\r\\n']}, {'input': '2000 2000\\r\\n6\\r\\n1744 1102 852 723 409 179 89 1085 997 1433 1082 1680\\r\\n', 'output': ['2000 1\\r\\n']}, {'input': '2000 2000\\r\\n7\\r\\n1890 22 288 1729 383 831 1192 1206 721 1376 969 492 510 1699\\r\\n', 'output': ['2000 2000\\r\\n']}, {'input': '2000 2000\\r\\n8\\r\\n286 381 572 1849 1703 1574 622 1047 1507 941 871 663 1930 120 1084 1830\\r\\n', 'output': ['1 1423\\r\\n']}, {'input': '2000 2000\\r\\n9\\r\\n226 531 56 138 722 405 1082 608 1355 1426 83 544 275 1268 683 412 1880 1049\\r\\n', 'output': ['1701 1\\r\\n']}, {'input': '2000 2000\\r\\n10\\r\\n763 851 1182 571 1758 389 247 1907 730 881 531 1970 1430 667 169 765 1729 120 129 967\\r\\n', 'output': ['2000 1793\\r\\n']}, {'input': '2000 2000\\r\\n10\\r\\n655 95 1640 1656 1344 79 666 1677 968 1180 522 1394 1850 1568 336 130 412 920 29 1664\\r\\n', 'output': ['2000 570\\r\\n']}, {'input': '10 1\\r\\n10\\r\\n4 1 6 1 10 1 9 1 1 1 7 1 5 1 2 1 8 1 3 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 10\\r\\n10\\r\\n1 10 1 4 1 3 1 7 1 6 1 1 1 8 1 2 1 9 1 5\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 100\\r\\n10\\r\\n1 68 1 18 1 43 1 12 1 64 1 34 1 23 1 70 1 46 1 33\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 1\\r\\n10\\r\\n62 1 63 1 57 1 76 1 35 1 69 1 73 1 95 1 96 1 21 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 2000\\r\\n10\\r\\n1 1730 1 1374 1 831 1 1076 1 580 1 914 1 123 1 668 1 1288 1 160\\r\\n', 'output': ['1 2000\\r\\n']}, {'input': '2000 1\\r\\n10\\r\\n1058 1 1779 1 1995 1 1398 1 96 1 1599 1 1496 1 1659 1 385 1 1485 1\\r\\n', 'output': ['721 1\\r\\n']}, {'input': '5 5\\r\\n1\\r\\n1 1\\r\\n', 'output': ['5 5\\r\\n']}, {'input': '2 5\\r\\n10\\r\\n1 1 1 2 1 3 1 4 1 5 2 1 2 2 2 3 2 4 2 5\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 10\\r\\n9\\r\\n1 1 1 2 1 3 1 4 1 6 1 7 1 8 1 9 1 10\\r\\n', 'output': ['1 5\\r\\n']}, {'input': '3 3\\r\\n5\\r\\n1 1 1 3 2 2 3 1 3 3\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '999 999\\r\\n4\\r\\n1 499 499 1 499 999 999 499\\r\\n', 'output': ['500 500\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, m;\nint main() {\n  long long k, a, b, x, y, i, j, ansx, ansy, dist[2020][2020], l, r, m;\n  while (scanf(\"%I64d%I64d\", &n, &m)!= EOF) {\n    scanf(\"%I64d\", &k);\n    for (i = 0; i < n; i++)\n      for (j = 0; j < m; j++) dist[i][j] = min(i, j);\n    for (l = 0; l < k; l++) {\n      scanf(\"%I64d%I64d\", &a, &b);\n      a--;\n      b--;\n      for (i = 0; i < n; i++)\n        for (j = 0; j < m; j++)\n          if (dist[i][j] > dist[i][a] + dist[a][b] + dist[b][j] + dist[j][i])\n            dist[i][j] = dist[i][a] + dist[a][b] + dist[b][j] + dist[j][i];\n    }\n    for (ansx = 0; ansx < n; ansx++)\n      for (ansy = 0; ansy < m; ansy++)\n        if (dist[ansx][ansy] > dist[0][0]) ansx = ansy = 0;\n    printf(\"%I64d %I64d\\n\", ansx + 1, ansy + 1);\n  }\n  return 0;\n}\n"}
{"src_uid": "88e6651e1b0481d711e89c8071be1edf", "id": 28, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '1\\r\\n1 2\\r\\n2 1\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n2 1\\r\\n3 1\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 1\\r\\n2 1\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n1 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 2\\r\\n3 1\\r\\n3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n2 1\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 1\\r\\n2 3\\r\\n3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 3\\r\\n1 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n3 2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n1 3\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n2 3\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n1 3\\r\\n3 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n1 2\\r\\n2 1\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n2 3\\r\\n1 3\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '2\\r\\n3 1\\r\\n3 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 3\\r\\n3 1\\r\\n3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n3 2\\r\\n1 3\\r\\n3 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 3\\r\\n1 2\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n3 2\\r\\n3 1\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['3\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a = 1, b = 2, c = 3;\n  int arr[3][2] = {\n      {1, 2}, {2, 3}, {1, 3}, {3, 1}, {2, 1}, {1, 2},\n  };\n  for (int i = 0; i < 3; i++) {\n    if (arr[i][0] == n) {\n      n = arr[i][1];\n      break;\n    }\n  }\n  cout << n << endl;\n}\n"}
{"src_uid": "88e6651e1b0481d711e89c8071be1edf", "id": 28, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '1\\r\\n1 2\\r\\n2 1\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n2 1\\r\\n3 1\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 1\\r\\n2 1\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n1 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 2\\r\\n3 1\\r\\n3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n2 1\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 1\\r\\n2 3\\r\\n3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 3\\r\\n1 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n3 2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n1 3\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n2 3\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n1 3\\r\\n3 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n1 2\\r\\n2 1\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n2 3\\r\\n1 3\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '2\\r\\n3 1\\r\\n3 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 3\\r\\n3 1\\r\\n3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n3 2\\r\\n1 3\\r\\n3 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 3\\r\\n1 2\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n3 2\\r\\n3 1\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['3\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int p = 0;\n  int a, b;\n  cin >> p;\n  cin >> a >> b;\n  p = ((p - 1) + 1 + (a - 1) + 1 + (b - 1) + 1) % 3 + 1;\n  cout << p << endl;\n  return 0;\n}\n"}
{"src_uid": "88e6651e1b0481d711e89c8071be1edf", "id": 28, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '1\\r\\n1 2\\r\\n2 1\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n2 1\\r\\n3 1\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 1\\r\\n2 1\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n1 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 2\\r\\n3 1\\r\\n3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n2 1\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 1\\r\\n2 3\\r\\n3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 3\\r\\n1 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n3 2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n1 3\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n2 3\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n1 3\\r\\n3 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n1 2\\r\\n2 1\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n2 3\\r\\n1 3\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '2\\r\\n3 1\\r\\n3 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 3\\r\\n3 1\\r\\n3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n3 2\\r\\n1 3\\r\\n3 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 3\\r\\n1 2\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n3 2\\r\\n3 1\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['3\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst double eps = 1e-8;\nconst int MAXN = 30010;\nint n, m, k, x, y;\nint s[MAXN], top;\nint main() {\n  scanf(\"%d %d %d\", &x, &y, &k);\n  int A[3] = {x, y, 6 - x - y};\n  int B[3] = {y, k, x};\n  int C[3] = {k, x, 6 - k - x};\n  int D[3] = {x, 6 - x - k, k};\n  int E[3] = {6 - x - k, 6 - k - y, y};\n  int F[3] = {y, k, 6 - y - k};\n  int tmp[3];\n  for (int i = 0; i < 6; i++) {\n    tmp[0] = A[i % 3];\n    tmp[1] = B[i % 3];\n    tmp[2] = C[i % 3];\n    x = tmp[0], y = tmp[1], k = tmp[2];\n    if (abs(y - x) > 1 || abs(k - y) > 1 || abs(x - k) > 1) {\n      puts(\"-1\");\n      return 0;\n    }\n    if (y == k)\n      s[++top] = x;\n    else if (y == x)\n      s[++top] = k;\n    else if (k == x)\n      s[++top] = y;\n    else if (k == y)\n      s[++top] = x;\n    else if (y == 6 - x - k)\n      s[++top] = k;\n    else if (x == 6 - k - y)\n      s[++top] = y;\n  }\n  if (top == 0) {\n    puts(\"1\");\n    return 0;\n  }\n  puts(s[top]);\n  return 0;\n}\n"}
{"src_uid": "88e6651e1b0481d711e89c8071be1edf", "id": 28, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '1\\r\\n1 2\\r\\n2 1\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n2 1\\r\\n3 1\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 1\\r\\n2 1\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n1 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 2\\r\\n3 1\\r\\n3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n2 1\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 1\\r\\n2 3\\r\\n3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 3\\r\\n1 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n3 2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n1 3\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n2 3\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n1 3\\r\\n3 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n1 2\\r\\n2 1\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n2 3\\r\\n1 3\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '2\\r\\n3 1\\r\\n3 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 3\\r\\n3 1\\r\\n3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n3 2\\r\\n1 3\\r\\n3 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 3\\r\\n1 2\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n3 2\\r\\n3 1\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['3\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int in;\n  cin >> in;\n  int ans = in;\n  vector<int> v(3, -1);\n  for (int i = 0; i < 3; i++) v[i] = i + 1;\n  for (int i = 0; i < 3; i++) {\n    int x, y;\n    cin >> x >> y;\n    int a = lower_bound(v.begin(), v.end(), x) - v.begin();\n    int b = lower_bound(v.begin(), v.end(), y) - v.begin();\n    swap(v[a], v[b]);\n  }\n  for (int i = 0; i < 3; i++) {\n    if (v[i] == ans) {\n      cout << i + 1 << endl;\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "88e6651e1b0481d711e89c8071be1edf", "id": 28, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '1\\r\\n1 2\\r\\n2 1\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n2 1\\r\\n3 1\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 1\\r\\n2 1\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n1 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 2\\r\\n3 1\\r\\n3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n2 1\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 1\\r\\n2 3\\r\\n3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 3\\r\\n1 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n3 2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n1 3\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n2 3\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n1 3\\r\\n3 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n1 2\\r\\n2 1\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n2 3\\r\\n1 3\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '2\\r\\n3 1\\r\\n3 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 3\\r\\n3 1\\r\\n3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n3 2\\r\\n1 3\\r\\n3 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 3\\r\\n1 2\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n3 2\\r\\n3 1\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['3\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a[5001];\nint main() {\n  int b[4], c, x, y, i;\n  cin >> c;\n  a[c] = 1;\n  x = 1;\n  for (i = 1; i <= 3; i++) {\n    cin >> b[1] >> b[2];\n    if (a[b[1]] == 1) {\n      y = 1;\n      x = b[2];\n    } else {\n      y = 1;\n      x = b[1];\n    }\n    a[y] = 0;\n    a[x] = 1;\n  }\n  cout << x;\n  return 0;\n}\n"}
{"src_uid": "0df064fd0288c2ac4832efa227107a0e", "id": 29, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': 'abdrakadabra\\r\\nabrakadabra\\r\\n', 'output': ['1\\r\\n3 ']}, {'input': 'aa\\r\\na\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'competition\\r\\ncodeforces\\r\\n', 'output': ['0\\r\\n']}, {'input': 'ab\\r\\na\\r\\n', 'output': ['1\\r\\n2 ']}, {'input': 'bb\\r\\nb\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'aab\\r\\nab\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'aabb\\r\\nabb\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'babaacaacaa\\r\\nbbaacaacaa\\r\\n', 'output': ['1\\r\\n2 ']}, {'input': 'bccaabbcccc\\r\\nbccaabcccc\\r\\n', 'output': ['2\\r\\n6 7 ']}, {'input': 'ababcaabaaa\\r\\nabacaabaaa\\r\\n', 'output': ['1\\r\\n4 ']}, {'input': 'cccacaccacb\\r\\ncccacaccac\\r\\n', 'output': ['1\\r\\n11 ']}, {'input': 'aaaaaaaaaaa\\r\\naaaaaaaaaa\\r\\n', 'output': ['11\\r\\n1 2 3 4 5 6 7 8 9 10 11 ']}, {'input': 'lcaaxcbcjca\\r\\nccaaacccca\\r\\n', 'output': ['0\\r\\n']}, {'input': 'babbbtaamba\\r\\nbabbbaabba\\r\\n', 'output': ['0\\r\\n']}, {'input': 'xdfxmcnzpch\\r\\nazvotghvtk\\r\\n', 'output': ['0\\r\\n']}, {'input': 'ki\\r\\nb\\r\\n', 'output': ['0\\r\\n']}, {'input': 'vct\\r\\nie\\r\\n', 'output': ['0\\r\\n']}, {'input': 'feee\\r\\nsnl\\r\\n', 'output': ['0\\r\\n']}, {'input': 'cbxxxxzvks\\r\\ncbxxxzvks\\r\\n', 'output': ['4\\r\\n3 4 5 6 ']}, {'input': 'qybldcgfhdhhhhhhhhhhopqkhuczzytzluiahwbqjltgafvvoecititchjwdoljiehubngmtjckqymldhoncgtqhxnqvoagnrmur\\r\\nqybldcgfhdhhhhhhhhhopqkhuczzytzluiahwbqjltgafvvoecititchjwdoljiehubngmtjckqymldhoncgtqhxnqvoagnrmur\\r\\n', 'output': ['10\\r\\n11 12 13 14 15 16 17 18 19 20 ']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  int ans1 = s1.size() - s2.size();\n  string ss1 = s1.substr(0, s1.size() - ans1);\n  string ss2 = s2.substr(0, s2.size() - ans1);\n  int i;\n  bool found = 0;\n  if (ss1 == ss2) found = 1;\n  if (found == 0) {\n    cout << 0;\n    return 0;\n  }\n  vector<int> ans;\n  for (i = 0; i < ss2.size(); i++) {\n    if (ss2[i]!= ss1[i]) {\n      if (i!= 0) {\n        if (ss2[i]!= ss1[i - 1]) ans.push_back(i + 1);\n        ans.push_back(i);\n        i = ss1.size();\n      } else {\n        if (ss2[i]!= ss1[i + 1]) ans.push_back(i + 1);\n        ans.push_back(i);\n        i = ss1.size();\n      }\n    }\n  }\n  cout << ans.size() << endl;\n  for (int j = 0; j < ans.size(); j++) {\n    cout << ans[j] << \" \";\n  }\n  return 0;\n}\n"}
{"src_uid": "0df064fd0288c2ac4832efa227107a0e", "id": 29, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': 'abdrakadabra\\r\\nabrakadabra\\r\\n', 'output': ['1\\r\\n3 ']}, {'input': 'aa\\r\\na\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'competition\\r\\ncodeforces\\r\\n', 'output': ['0\\r\\n']}, {'input': 'ab\\r\\na\\r\\n', 'output': ['1\\r\\n2 ']}, {'input': 'bb\\r\\nb\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'aab\\r\\nab\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'aabb\\r\\nabb\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'babaacaacaa\\r\\nbbaacaacaa\\r\\n', 'output': ['1\\r\\n2 ']}, {'input': 'bccaabbcccc\\r\\nbccaabcccc\\r\\n', 'output': ['2\\r\\n6 7 ']}, {'input': 'ababcaabaaa\\r\\nabacaabaaa\\r\\n', 'output': ['1\\r\\n4 ']}, {'input': 'cccacaccacb\\r\\ncccacaccac\\r\\n', 'output': ['1\\r\\n11 ']}, {'input': 'aaaaaaaaaaa\\r\\naaaaaaaaaa\\r\\n', 'output': ['11\\r\\n1 2 3 4 5 6 7 8 9 10 11 ']}, {'input': 'lcaaxcbcjca\\r\\nccaaacccca\\r\\n', 'output': ['0\\r\\n']}, {'input': 'babbbtaamba\\r\\nbabbbaabba\\r\\n', 'output': ['0\\r\\n']}, {'input': 'xdfxmcnzpch\\r\\nazvotghvtk\\r\\n', 'output': ['0\\r\\n']}, {'input': 'ki\\r\\nb\\r\\n', 'output': ['0\\r\\n']}, {'input': 'vct\\r\\nie\\r\\n', 'output': ['0\\r\\n']}, {'input': 'feee\\r\\nsnl\\r\\n', 'output': ['0\\r\\n']}, {'input': 'cbxxxxzvks\\r\\ncbxxxzvks\\r\\n', 'output': ['4\\r\\n3 4 5 6 ']}, {'input': 'qybldcgfhdhhhhhhhhhhopqkhuczzytzluiahwbqjltgafvvoecititchjwdoljiehubngmtjckqymldhoncgtqhxnqvoagnrmur\\r\\nqybldcgfhdhhhhhhhhhopqkhuczzytzluiahwbqjltgafvvoecititchjwdoljiehubngmtjckqymldhoncgtqhxnqvoagnrmur\\r\\n', 'output': ['10\\r\\n11 12 13 14 15 16 17 18 19 20 ']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1e9 + 7;\nconst int max_n = 1e6 + 11;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  string a, b;\n  cin >> a >> b;\n  vector<int> res;\n  for (int i = 0; i < (int)(a.size()); i++) {\n    if (a[i] == b[(int)(b.size()) - 1]) {\n      a.pop_back();\n      res.push_back(i + 1);\n      break;\n    }\n  }\n  cout << res.size() << '\\n';\n  if (res.size() > 0) {\n    for (int i = 0; i < (int)(res.size()); i++) {\n      cout << res[i] <<'';\n    }\n  }\n}\n"}
{"src_uid": "0df064fd0288c2ac4832efa227107a0e", "id": 29, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': 'abdrakadabra\\r\\nabrakadabra\\r\\n', 'output': ['1\\r\\n3 ']}, {'input': 'aa\\r\\na\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'competition\\r\\ncodeforces\\r\\n', 'output': ['0\\r\\n']}, {'input': 'ab\\r\\na\\r\\n', 'output': ['1\\r\\n2 ']}, {'input': 'bb\\r\\nb\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'aab\\r\\nab\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'aabb\\r\\nabb\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'babaacaacaa\\r\\nbbaacaacaa\\r\\n', 'output': ['1\\r\\n2 ']}, {'input': 'bccaabbcccc\\r\\nbccaabcccc\\r\\n', 'output': ['2\\r\\n6 7 ']}, {'input': 'ababcaabaaa\\r\\nabacaabaaa\\r\\n', 'output': ['1\\r\\n4 ']}, {'input': 'cccacaccacb\\r\\ncccacaccac\\r\\n', 'output': ['1\\r\\n11 ']}, {'input': 'aaaaaaaaaaa\\r\\naaaaaaaaaa\\r\\n', 'output': ['11\\r\\n1 2 3 4 5 6 7 8 9 10 11 ']}, {'input': 'lcaaxcbcjca\\r\\nccaaacccca\\r\\n', 'output': ['0\\r\\n']}, {'input': 'babbbtaamba\\r\\nbabbbaabba\\r\\n', 'output': ['0\\r\\n']}, {'input': 'xdfxmcnzpch\\r\\nazvotghvtk\\r\\n', 'output': ['0\\r\\n']}, {'input': 'ki\\r\\nb\\r\\n', 'output': ['0\\r\\n']}, {'input': 'vct\\r\\nie\\r\\n', 'output': ['0\\r\\n']}, {'input': 'feee\\r\\nsnl\\r\\n', 'output': ['0\\r\\n']}, {'input': 'cbxxxxzvks\\r\\ncbxxxzvks\\r\\n', 'output': ['4\\r\\n3 4 5 6 ']}, {'input': 'qybldcgfhdhhhhhhhhhhopqkhuczzytzluiahwbqjltgafvvoecititchjwdoljiehubngmtjckqymldhoncgtqhxnqvoagnrmur\\r\\nqybldcgfhdhhhhhhhhhopqkhuczzytzluiahwbqjltgafvvoecititchjwdoljiehubngmtjckqymldhoncgtqhxnqvoagnrmur\\r\\n', 'output': ['10\\r\\n11 12 13 14 15 16 17 18 19 20 ']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e6 + 123;\nconst long long INF = 1e17;\nstring s1, s2;\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> s1 >> s2;\n  int l = s1.size(), m = s2.size();\n  vector<int> pos;\n  for (int i = 0; i < m; i++) {\n    if (s1[i] == s2[i]) {\n      for (int j = m; j < l; j++)\n        if (s1[j] == s2[i]) {\n          cout << \"1\\n\" << (j - i);\n          return 0;\n        }\n    }\n  }\n  cout << \"0\";\n  return 0;\n}\n"}
{"src_uid": "0df064fd0288c2ac4832efa227107a0e", "id": 29, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': 'abdrakadabra\\r\\nabrakadabra\\r\\n', 'output': ['1\\r\\n3 ']}, {'input': 'aa\\r\\na\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'competition\\r\\ncodeforces\\r\\n', 'output': ['0\\r\\n']}, {'input': 'ab\\r\\na\\r\\n', 'output': ['1\\r\\n2 ']}, {'input': 'bb\\r\\nb\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'aab\\r\\nab\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'aabb\\r\\nabb\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'babaacaacaa\\r\\nbbaacaacaa\\r\\n', 'output': ['1\\r\\n2 ']}, {'input': 'bccaabbcccc\\r\\nbccaabcccc\\r\\n', 'output': ['2\\r\\n6 7 ']}, {'input': 'ababcaabaaa\\r\\nabacaabaaa\\r\\n', 'output': ['1\\r\\n4 ']}, {'input': 'cccacaccacb\\r\\ncccacaccac\\r\\n', 'output': ['1\\r\\n11 ']}, {'input': 'aaaaaaaaaaa\\r\\naaaaaaaaaa\\r\\n', 'output': ['11\\r\\n1 2 3 4 5 6 7 8 9 10 11 ']}, {'input': 'lcaaxcbcjca\\r\\nccaaacccca\\r\\n', 'output': ['0\\r\\n']}, {'input': 'babbbtaamba\\r\\nbabbbaabba\\r\\n', 'output': ['0\\r\\n']}, {'input': 'xdfxmcnzpch\\r\\nazvotghvtk\\r\\n', 'output': ['0\\r\\n']}, {'input': 'ki\\r\\nb\\r\\n', 'output': ['0\\r\\n']}, {'input': 'vct\\r\\nie\\r\\n', 'output': ['0\\r\\n']}, {'input': 'feee\\r\\nsnl\\r\\n', 'output': ['0\\r\\n']}, {'input': 'cbxxxxzvks\\r\\ncbxxxzvks\\r\\n', 'output': ['4\\r\\n3 4 5 6 ']}, {'input': 'qybldcgfhdhhhhhhhhhhopqkhuczzytzluiahwbqjltgafvvoecititchjwdoljiehubngmtjckqymldhoncgtqhxnqvoagnrmur\\r\\nqybldcgfhdhhhhhhhhhopqkhuczzytzluiahwbqjltgafvvoecititchjwdoljiehubngmtjckqymldhoncgtqhxnqvoagnrmur\\r\\n', 'output': ['10\\r\\n11 12 13 14 15 16 17 18 19 20 ']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  for (int i = 0; i < s1.length(); i++)\n    if (s1.substr(0, i) + s1.substr(i + 1, s1.length() - i) == s2) {\n      cout << 1 << endl << i + 1;\n      return 0;\n    }\n  cout << 0;\n  return 0;\n}\n"}
{"src_uid": "0df064fd0288c2ac4832efa227107a0e", "id": 29, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': 'abdrakadabra\\r\\nabrakadabra\\r\\n', 'output': ['1\\r\\n3 ']}, {'input': 'aa\\r\\na\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'competition\\r\\ncodeforces\\r\\n', 'output': ['0\\r\\n']}, {'input': 'ab\\r\\na\\r\\n', 'output': ['1\\r\\n2 ']}, {'input': 'bb\\r\\nb\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'aab\\r\\nab\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'aabb\\r\\nabb\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'babaacaacaa\\r\\nbbaacaacaa\\r\\n', 'output': ['1\\r\\n2 ']}, {'input': 'bccaabbcccc\\r\\nbccaabcccc\\r\\n', 'output': ['2\\r\\n6 7 ']}, {'input': 'ababcaabaaa\\r\\nabacaabaaa\\r\\n', 'output': ['1\\r\\n4 ']}, {'input': 'cccacaccacb\\r\\ncccacaccac\\r\\n', 'output': ['1\\r\\n11 ']}, {'input': 'aaaaaaaaaaa\\r\\naaaaaaaaaa\\r\\n', 'output': ['11\\r\\n1 2 3 4 5 6 7 8 9 10 11 ']}, {'input': 'lcaaxcbcjca\\r\\nccaaacccca\\r\\n', 'output': ['0\\r\\n']}, {'input': 'babbbtaamba\\r\\nbabbbaabba\\r\\n', 'output': ['0\\r\\n']}, {'input': 'xdfxmcnzpch\\r\\nazvotghvtk\\r\\n', 'output': ['0\\r\\n']}, {'input': 'ki\\r\\nb\\r\\n', 'output': ['0\\r\\n']}, {'input': 'vct\\r\\nie\\r\\n', 'output': ['0\\r\\n']}, {'input': 'feee\\r\\nsnl\\r\\n', 'output': ['0\\r\\n']}, {'input': 'cbxxxxzvks\\r\\ncbxxxzvks\\r\\n', 'output': ['4\\r\\n3 4 5 6 ']}, {'input': 'qybldcgfhdhhhhhhhhhhopqkhuczzytzluiahwbqjltgafvvoecititchjwdoljiehubngmtjckqymldhoncgtqhxnqvoagnrmur\\r\\nqybldcgfhdhhhhhhhhhopqkhuczzytzluiahwbqjltgafvvoecititchjwdoljiehubngmtjckqymldhoncgtqhxnqvoagnrmur\\r\\n', 'output': ['10\\r\\n11 12 13 14 15 16 17 18 19 20 ']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, ss;\n  cin >> s >> ss;\n  int ans = 0;\n  int a[111111];\n  for (int i = 0; i < s.length() - 1; i++) {\n    bool flag = 0;\n    for (int j = 0; j < s.length(); j++) {\n      if (s.substr(0, i) + s.substr(i + 1, s.length()) == ss) {\n        a[ans] = i;\n        ans++;\n        flag = 1;\n        break;\n      }\n    }\n    if (flag) break;\n  }\n  cout << ans << endl;\n  for (int i = 0; i < ans; i++) cout << a[i] + 1 << \" \";\n}\n"}
{"src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "id": 30, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '10\\r\\n', 'output': ['2 4 7 1 6 2 9 7 6\\r\\n']}, {'input': '3\\r\\n', 'output': ['2 1\\r\\n']}, {'input': '4\\r\\n', 'output': ['2 4 3\\r\\n']}, {'input': '5\\r\\n', 'output': ['2 4 2 1\\r\\n']}, {'input': '6\\r\\n', 'output': ['2 4 1 5 4\\r\\n']}, {'input': '7\\r\\n', 'output': ['2 4 7 4 2 1\\r\\n']}, {'input': '8\\r\\n', 'output': ['2 4 7 3 8 6 5\\r\\n']}, {'input': '9\\r\\n', 'output': ['2 4 7 2 7 4 2 1\\r\\n']}, {'input': '2\\r\\n', 'output': ['2\\r\\n']}, {'input': '11\\r\\n', 'output': ['2 4 7 11 5 11 7 4 2 1\\r\\n']}, {'input': '12\\r\\n', 'output': ['2 4 7 11 4 10 5 1 10 8 7\\r\\n']}, {'input': '13\\r\\n', 'output': ['2 4 7 11 3 9 3 11 7 4 2 1\\r\\n']}, {'input': '20\\r\\n', 'output': ['2 4 7 11 16 2 9 17 6 16 7 19 12 6 1 17 14 12 11\\r\\n']}, {'input': '25\\r\\n', 'output': ['2 4 7 11 16 22 4 12 21 6 17 4 17 6 21 12 4 22 16 11 7 4 2 1\\r\\n']}, {'input': '30\\r\\n', 'output': ['2 4 7 11 16 22 29 7 16 26 7 19 2 16 1 17 4 22 11 1 22 14 7 1 26 22 19 17 16\\r\\n']}, {'input': '35\\r\\n', 'output': ['2 4 7 11 16 22 29 2 11 21 32 9 22 1 16 32 14 32 16 1 22 9 32 21 11 2 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '40\\r\\n', 'output': ['2 4 7 11 16 22 29 37 6 16 27 39 12 26 1 17 34 12 31 11 32 14 37 21 6 32 19 7 36 26 17 9 2 36 31 27 24 22 21\\r\\n']}, {'input': '45\\r\\n', 'output': ['2 4 7 11 16 22 29 37 1 11 22 34 2 16 31 2 19 37 11 31 7 29 7 31 11 37 19 2 31 16 2 34 22 11 1 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '50\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 6 17 29 42 6 21 37 4 22 41 11 32 4 27 1 26 2 29 7 36 16 47 29 12 46 31 17 4 42 31 21 12 4 47 41 36 32 29 27 26\\r\\n']}, {'input': '55\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 1 12 24 37 51 11 27 44 7 26 46 12 34 2 26 51 22 49 22 51 26 2 34 12 46 26 7 44 27 11 51 37 24 12 1 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '60\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 7 19 32 46 1 17 34 52 11 31 52 14 37 1 26 52 19 47 16 46 17 49 22 56 31 7 44 22 1 41 22 4 47 31 16 2 49 37 26 16 7 59 52 46 41 37 34 32 31\\r\\n']}, {'input': '65\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 2 14 27 41 56 7 24 42 61 16 37 59 17 41 1 27 54 17 46 11 42 9 42 11 46 17 54 27 1 41 17 59 37 16 61 42 24 7 56 41 27 14 2 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '70\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 9 22 36 51 67 14 32 51 1 22 44 67 21 46 2 29 57 16 46 7 39 2 36 1 37 4 42 11 51 22 64 37 11 56 32 9 57 36 16 67 49 32 16 1 57 44 32 21 11 2 64 57 51 46 42 39 37 36\\r\\n']}, {'input': '75\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 4 17 31 46 62 4 22 41 61 7 29 52 1 26 52 4 32 61 16 47 4 37 71 31 67 29 67 31 71 37 4 47 16 61 32 4 52 26 1 52 29 7 61 41 22 4 62 46 31 17 4 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '80\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 12 26 41 57 74 12 31 51 72 14 37 61 6 32 59 7 36 66 17 49 2 36 71 27 64 22 61 21 62 24 67 31 76 42 9 57 26 76 47 19 72 46 21 77 54 32 11 71 52 34 17 1 66 52 39 27 16 6 77 69 62 56 51 47 44 42 41\\r\\n']}, {'input': '85\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 7 21 36 52 69 2 21 41 62 84 22 46 71 12 39 67 11 41 72 19 52 1 36 72 24 62 16 56 12 54 12 56 16 62 24 72 36 1 52 19 72 41 11 67 39 12 71 46 22 84 62 41 21 2 69 52 36 21 7 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '90\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 2 16 31 47 64 82 11 31 52 74 7 31 56 82 19 47 76 16 47 79 22 56 1 37 74 22 61 11 52 4 47 1 46 2 49 7 56 16 67 29 82 46 11 67 34 2 61 31 2 64 37 11 76 52 29 7 76 56 37 19 2 76 61 47 34 22 11 1 82 74 67 61 56 52 49 47 46\\r\\n']}, {'input': '95\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 11 26 42 59 77 1 21 42 64 87 16 41 67 94 27 56 86 22 54 87 26 61 2 39 77 21 61 7 49 92 41 86 37 84 37 86 41 92 49 7 61 21 77 39 2 61 26 87 54 22 86 56 27 94 67 41 16 87 64 42 21 1 77 59 42 26 11 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '96\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 10 25 41 58 76 95 19 40 62 85 13 38 64 91 23 52 82 17 49 82 20 55 91 32 70 13 53 94 40 83 31 76 26 73 25 74 28 79 35 88 46 5 61 22 80 43 7 68 34 1 65 34 4 71 43 16 86 61 37 14 88 67 47 28 10 89 73 58 44 31 19 8 94 85 77 70 64 59 55 52 50 49\\r\\n']}, {'input': '97\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 9 24 40 57 75 94 17 38 60 83 10 35 61 88 19 48 78 12 44 77 14 49 85 25 63 5 45 86 31 74 21 66 15 62 13 62 15 66 21 74 31 86 45 5 63 25 85 49 14 77 44 12 78 48 19 88 61 35 10 83 60 38 17 94 75 57 40 24 9 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '98\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 8 23 39 56 74 93 15 36 58 81 7 32 58 85 15 44 74 7 39 72 8 43 79 18 56 95 37 78 22 65 11 56 4 51 1 50 2 53 7 60 16 71 29 86 46 7 67 30 92 57 23 88 56 25 93 64 36 9 81 56 32 9 85 64 44 25 7 88 72 57 43 30 18 7 95 86 78 71 65 60 56 53 51 50\\r\\n']}, {'input': '99\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 7 22 38 55 73 92 13 34 56 79 4 29 55 82 11 40 70 2 34 67 2 37 73 11 49 88 29 70 13 56 1 46 92 40 88 38 88 40 92 46 1 56 13 70 29 88 49 11 73 37 2 67 34 2 70 40 11 82 55 29 4 79 56 34 13 92 73 55 38 22 7 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '100\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 6 21 37 54 72 91 11 32 54 77 1 26 52 79 7 36 66 97 29 62 96 31 67 4 42 81 21 62 4 47 91 36 82 29 77 26 76 27 79 32 86 41 97 54 12 71 31 92 54 17 81 46 12 79 47 16 86 57 29 2 76 51 27 4 82 61 41 22 4 87 71 56 42 29 17 6 96 87 79 72 66 61 57 54 52 51\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int n;\n  cin >> n;\n  int x = 1;\n  for (int i = 0; i < n - 1; i++) {\n    cout << x + i * 2 << \" \";\n    x = (x + i * 2) % n;\n  }\n  return 0;\n}\n"}
{"src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "id": 30, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '10\\r\\n', 'output': ['2 4 7 1 6 2 9 7 6\\r\\n']}, {'input': '3\\r\\n', 'output': ['2 1\\r\\n']}, {'input': '4\\r\\n', 'output': ['2 4 3\\r\\n']}, {'input': '5\\r\\n', 'output': ['2 4 2 1\\r\\n']}, {'input': '6\\r\\n', 'output': ['2 4 1 5 4\\r\\n']}, {'input': '7\\r\\n', 'output': ['2 4 7 4 2 1\\r\\n']}, {'input': '8\\r\\n', 'output': ['2 4 7 3 8 6 5\\r\\n']}, {'input': '9\\r\\n', 'output': ['2 4 7 2 7 4 2 1\\r\\n']}, {'input': '2\\r\\n', 'output': ['2\\r\\n']}, {'input': '11\\r\\n', 'output': ['2 4 7 11 5 11 7 4 2 1\\r\\n']}, {'input': '12\\r\\n', 'output': ['2 4 7 11 4 10 5 1 10 8 7\\r\\n']}, {'input': '13\\r\\n', 'output': ['2 4 7 11 3 9 3 11 7 4 2 1\\r\\n']}, {'input': '20\\r\\n', 'output': ['2 4 7 11 16 2 9 17 6 16 7 19 12 6 1 17 14 12 11\\r\\n']}, {'input': '25\\r\\n', 'output': ['2 4 7 11 16 22 4 12 21 6 17 4 17 6 21 12 4 22 16 11 7 4 2 1\\r\\n']}, {'input': '30\\r\\n', 'output': ['2 4 7 11 16 22 29 7 16 26 7 19 2 16 1 17 4 22 11 1 22 14 7 1 26 22 19 17 16\\r\\n']}, {'input': '35\\r\\n', 'output': ['2 4 7 11 16 22 29 2 11 21 32 9 22 1 16 32 14 32 16 1 22 9 32 21 11 2 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '40\\r\\n', 'output': ['2 4 7 11 16 22 29 37 6 16 27 39 12 26 1 17 34 12 31 11 32 14 37 21 6 32 19 7 36 26 17 9 2 36 31 27 24 22 21\\r\\n']}, {'input': '45\\r\\n', 'output': ['2 4 7 11 16 22 29 37 1 11 22 34 2 16 31 2 19 37 11 31 7 29 7 31 11 37 19 2 31 16 2 34 22 11 1 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '50\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 6 17 29 42 6 21 37 4 22 41 11 32 4 27 1 26 2 29 7 36 16 47 29 12 46 31 17 4 42 31 21 12 4 47 41 36 32 29 27 26\\r\\n']}, {'input': '55\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 1 12 24 37 51 11 27 44 7 26 46 12 34 2 26 51 22 49 22 51 26 2 34 12 46 26 7 44 27 11 51 37 24 12 1 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '60\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 7 19 32 46 1 17 34 52 11 31 52 14 37 1 26 52 19 47 16 46 17 49 22 56 31 7 44 22 1 41 22 4 47 31 16 2 49 37 26 16 7 59 52 46 41 37 34 32 31\\r\\n']}, {'input': '65\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 2 14 27 41 56 7 24 42 61 16 37 59 17 41 1 27 54 17 46 11 42 9 42 11 46 17 54 27 1 41 17 59 37 16 61 42 24 7 56 41 27 14 2 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '70\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 9 22 36 51 67 14 32 51 1 22 44 67 21 46 2 29 57 16 46 7 39 2 36 1 37 4 42 11 51 22 64 37 11 56 32 9 57 36 16 67 49 32 16 1 57 44 32 21 11 2 64 57 51 46 42 39 37 36\\r\\n']}, {'input': '75\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 4 17 31 46 62 4 22 41 61 7 29 52 1 26 52 4 32 61 16 47 4 37 71 31 67 29 67 31 71 37 4 47 16 61 32 4 52 26 1 52 29 7 61 41 22 4 62 46 31 17 4 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '80\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 12 26 41 57 74 12 31 51 72 14 37 61 6 32 59 7 36 66 17 49 2 36 71 27 64 22 61 21 62 24 67 31 76 42 9 57 26 76 47 19 72 46 21 77 54 32 11 71 52 34 17 1 66 52 39 27 16 6 77 69 62 56 51 47 44 42 41\\r\\n']}, {'input': '85\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 7 21 36 52 69 2 21 41 62 84 22 46 71 12 39 67 11 41 72 19 52 1 36 72 24 62 16 56 12 54 12 56 16 62 24 72 36 1 52 19 72 41 11 67 39 12 71 46 22 84 62 41 21 2 69 52 36 21 7 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '90\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 2 16 31 47 64 82 11 31 52 74 7 31 56 82 19 47 76 16 47 79 22 56 1 37 74 22 61 11 52 4 47 1 46 2 49 7 56 16 67 29 82 46 11 67 34 2 61 31 2 64 37 11 76 52 29 7 76 56 37 19 2 76 61 47 34 22 11 1 82 74 67 61 56 52 49 47 46\\r\\n']}, {'input': '95\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 11 26 42 59 77 1 21 42 64 87 16 41 67 94 27 56 86 22 54 87 26 61 2 39 77 21 61 7 49 92 41 86 37 84 37 86 41 92 49 7 61 21 77 39 2 61 26 87 54 22 86 56 27 94 67 41 16 87 64 42 21 1 77 59 42 26 11 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '96\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 10 25 41 58 76 95 19 40 62 85 13 38 64 91 23 52 82 17 49 82 20 55 91 32 70 13 53 94 40 83 31 76 26 73 25 74 28 79 35 88 46 5 61 22 80 43 7 68 34 1 65 34 4 71 43 16 86 61 37 14 88 67 47 28 10 89 73 58 44 31 19 8 94 85 77 70 64 59 55 52 50 49\\r\\n']}, {'input': '97\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 9 24 40 57 75 94 17 38 60 83 10 35 61 88 19 48 78 12 44 77 14 49 85 25 63 5 45 86 31 74 21 66 15 62 13 62 15 66 21 74 31 86 45 5 63 25 85 49 14 77 44 12 78 48 19 88 61 35 10 83 60 38 17 94 75 57 40 24 9 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '98\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 8 23 39 56 74 93 15 36 58 81 7 32 58 85 15 44 74 7 39 72 8 43 79 18 56 95 37 78 22 65 11 56 4 51 1 50 2 53 7 60 16 71 29 86 46 7 67 30 92 57 23 88 56 25 93 64 36 9 81 56 32 9 85 64 44 25 7 88 72 57 43 30 18 7 95 86 78 71 65 60 56 53 51 50\\r\\n']}, {'input': '99\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 7 22 38 55 73 92 13 34 56 79 4 29 55 82 11 40 70 2 34 67 2 37 73 11 49 88 29 70 13 56 1 46 92 40 88 38 88 40 92 46 1 56 13 70 29 88 49 11 73 37 2 67 34 2 70 40 11 82 55 29 4 79 56 34 13 92 73 55 38 22 7 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '100\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 6 21 37 54 72 91 11 32 54 77 1 26 52 79 7 36 66 97 29 62 96 31 67 4 42 81 21 62 4 47 91 36 82 29 77 26 76 27 79 32 86 41 97 54 12 71 31 92 54 17 81 46 12 79 47 16 86 57 29 2 76 51 27 4 82 61 41 22 4 87 71 56 42 29 17 6 96 87 79 72 66 61 57 54 52 51\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 101;\nint a[N];\nint main() {\n  ios_base::sync_with_stdio(0);\n  int n;\n  cin >> n;\n  for (int i = 2; i < n; i++) a[i] = ((i + 1) * 2) % n + 1;\n  for (int i = 0; i < n - 1; i++) cout << a[i] <<'';\n  cout << a[n - 1] << endl;\n  return 0;\n}\n"}
{"src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "id": 30, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '10\\r\\n', 'output': ['2 4 7 1 6 2 9 7 6\\r\\n']}, {'input': '3\\r\\n', 'output': ['2 1\\r\\n']}, {'input': '4\\r\\n', 'output': ['2 4 3\\r\\n']}, {'input': '5\\r\\n', 'output': ['2 4 2 1\\r\\n']}, {'input': '6\\r\\n', 'output': ['2 4 1 5 4\\r\\n']}, {'input': '7\\r\\n', 'output': ['2 4 7 4 2 1\\r\\n']}, {'input': '8\\r\\n', 'output': ['2 4 7 3 8 6 5\\r\\n']}, {'input': '9\\r\\n', 'output': ['2 4 7 2 7 4 2 1\\r\\n']}, {'input': '2\\r\\n', 'output': ['2\\r\\n']}, {'input': '11\\r\\n', 'output': ['2 4 7 11 5 11 7 4 2 1\\r\\n']}, {'input': '12\\r\\n', 'output': ['2 4 7 11 4 10 5 1 10 8 7\\r\\n']}, {'input': '13\\r\\n', 'output': ['2 4 7 11 3 9 3 11 7 4 2 1\\r\\n']}, {'input': '20\\r\\n', 'output': ['2 4 7 11 16 2 9 17 6 16 7 19 12 6 1 17 14 12 11\\r\\n']}, {'input': '25\\r\\n', 'output': ['2 4 7 11 16 22 4 12 21 6 17 4 17 6 21 12 4 22 16 11 7 4 2 1\\r\\n']}, {'input': '30\\r\\n', 'output': ['2 4 7 11 16 22 29 7 16 26 7 19 2 16 1 17 4 22 11 1 22 14 7 1 26 22 19 17 16\\r\\n']}, {'input': '35\\r\\n', 'output': ['2 4 7 11 16 22 29 2 11 21 32 9 22 1 16 32 14 32 16 1 22 9 32 21 11 2 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '40\\r\\n', 'output': ['2 4 7 11 16 22 29 37 6 16 27 39 12 26 1 17 34 12 31 11 32 14 37 21 6 32 19 7 36 26 17 9 2 36 31 27 24 22 21\\r\\n']}, {'input': '45\\r\\n', 'output': ['2 4 7 11 16 22 29 37 1 11 22 34 2 16 31 2 19 37 11 31 7 29 7 31 11 37 19 2 31 16 2 34 22 11 1 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '50\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 6 17 29 42 6 21 37 4 22 41 11 32 4 27 1 26 2 29 7 36 16 47 29 12 46 31 17 4 42 31 21 12 4 47 41 36 32 29 27 26\\r\\n']}, {'input': '55\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 1 12 24 37 51 11 27 44 7 26 46 12 34 2 26 51 22 49 22 51 26 2 34 12 46 26 7 44 27 11 51 37 24 12 1 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '60\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 7 19 32 46 1 17 34 52 11 31 52 14 37 1 26 52 19 47 16 46 17 49 22 56 31 7 44 22 1 41 22 4 47 31 16 2 49 37 26 16 7 59 52 46 41 37 34 32 31\\r\\n']}, {'input': '65\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 2 14 27 41 56 7 24 42 61 16 37 59 17 41 1 27 54 17 46 11 42 9 42 11 46 17 54 27 1 41 17 59 37 16 61 42 24 7 56 41 27 14 2 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '70\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 9 22 36 51 67 14 32 51 1 22 44 67 21 46 2 29 57 16 46 7 39 2 36 1 37 4 42 11 51 22 64 37 11 56 32 9 57 36 16 67 49 32 16 1 57 44 32 21 11 2 64 57 51 46 42 39 37 36\\r\\n']}, {'input': '75\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 4 17 31 46 62 4 22 41 61 7 29 52 1 26 52 4 32 61 16 47 4 37 71 31 67 29 67 31 71 37 4 47 16 61 32 4 52 26 1 52 29 7 61 41 22 4 62 46 31 17 4 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '80\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 12 26 41 57 74 12 31 51 72 14 37 61 6 32 59 7 36 66 17 49 2 36 71 27 64 22 61 21 62 24 67 31 76 42 9 57 26 76 47 19 72 46 21 77 54 32 11 71 52 34 17 1 66 52 39 27 16 6 77 69 62 56 51 47 44 42 41\\r\\n']}, {'input': '85\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 7 21 36 52 69 2 21 41 62 84 22 46 71 12 39 67 11 41 72 19 52 1 36 72 24 62 16 56 12 54 12 56 16 62 24 72 36 1 52 19 72 41 11 67 39 12 71 46 22 84 62 41 21 2 69 52 36 21 7 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '90\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 2 16 31 47 64 82 11 31 52 74 7 31 56 82 19 47 76 16 47 79 22 56 1 37 74 22 61 11 52 4 47 1 46 2 49 7 56 16 67 29 82 46 11 67 34 2 61 31 2 64 37 11 76 52 29 7 76 56 37 19 2 76 61 47 34 22 11 1 82 74 67 61 56 52 49 47 46\\r\\n']}, {'input': '95\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 11 26 42 59 77 1 21 42 64 87 16 41 67 94 27 56 86 22 54 87 26 61 2 39 77 21 61 7 49 92 41 86 37 84 37 86 41 92 49 7 61 21 77 39 2 61 26 87 54 22 86 56 27 94 67 41 16 87 64 42 21 1 77 59 42 26 11 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '96\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 10 25 41 58 76 95 19 40 62 85 13 38 64 91 23 52 82 17 49 82 20 55 91 32 70 13 53 94 40 83 31 76 26 73 25 74 28 79 35 88 46 5 61 22 80 43 7 68 34 1 65 34 4 71 43 16 86 61 37 14 88 67 47 28 10 89 73 58 44 31 19 8 94 85 77 70 64 59 55 52 50 49\\r\\n']}, {'input': '97\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 9 24 40 57 75 94 17 38 60 83 10 35 61 88 19 48 78 12 44 77 14 49 85 25 63 5 45 86 31 74 21 66 15 62 13 62 15 66 21 74 31 86 45 5 63 25 85 49 14 77 44 12 78 48 19 88 61 35 10 83 60 38 17 94 75 57 40 24 9 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '98\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 8 23 39 56 74 93 15 36 58 81 7 32 58 85 15 44 74 7 39 72 8 43 79 18 56 95 37 78 22 65 11 56 4 51 1 50 2 53 7 60 16 71 29 86 46 7 67 30 92 57 23 88 56 25 93 64 36 9 81 56 32 9 85 64 44 25 7 88 72 57 43 30 18 7 95 86 78 71 65 60 56 53 51 50\\r\\n']}, {'input': '99\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 7 22 38 55 73 92 13 34 56 79 4 29 55 82 11 40 70 2 34 67 2 37 73 11 49 88 29 70 13 56 1 46 92 40 88 38 88 40 92 46 1 56 13 70 29 88 49 11 73 37 2 67 34 2 70 40 11 82 55 29 4 79 56 34 13 92 73 55 38 22 7 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '100\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 6 21 37 54 72 91 11 32 54 77 1 26 52 79 7 36 66 97 29 62 96 31 67 4 42 81 21 62 4 47 91 36 82 29 77 26 76 27 79 32 86 41 97 54 12 71 31 92 54 17 81 46 12 79 47 16 86 57 29 2 76 51 27 4 82 61 41 22 4 87 71 56 42 29 17 6 96 87 79 72 66 61 57 54 52 51\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 2; i <= n; i++) {\n    int c = i;\n    while (c > 1) {\n      c = c + 1;\n      if (c > n)\n        c = 2;\n      else if (c == i) {\n        break;\n      }\n    }\n    printf(\"%d \", c);\n  }\n  return 0;\n}\n"}
{"src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "id": 30, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '10\\r\\n', 'output': ['2 4 7 1 6 2 9 7 6\\r\\n']}, {'input': '3\\r\\n', 'output': ['2 1\\r\\n']}, {'input': '4\\r\\n', 'output': ['2 4 3\\r\\n']}, {'input': '5\\r\\n', 'output': ['2 4 2 1\\r\\n']}, {'input': '6\\r\\n', 'output': ['2 4 1 5 4\\r\\n']}, {'input': '7\\r\\n', 'output': ['2 4 7 4 2 1\\r\\n']}, {'input': '8\\r\\n', 'output': ['2 4 7 3 8 6 5\\r\\n']}, {'input': '9\\r\\n', 'output': ['2 4 7 2 7 4 2 1\\r\\n']}, {'input': '2\\r\\n', 'output': ['2\\r\\n']}, {'input': '11\\r\\n', 'output': ['2 4 7 11 5 11 7 4 2 1\\r\\n']}, {'input': '12\\r\\n', 'output': ['2 4 7 11 4 10 5 1 10 8 7\\r\\n']}, {'input': '13\\r\\n', 'output': ['2 4 7 11 3 9 3 11 7 4 2 1\\r\\n']}, {'input': '20\\r\\n', 'output': ['2 4 7 11 16 2 9 17 6 16 7 19 12 6 1 17 14 12 11\\r\\n']}, {'input': '25\\r\\n', 'output': ['2 4 7 11 16 22 4 12 21 6 17 4 17 6 21 12 4 22 16 11 7 4 2 1\\r\\n']}, {'input': '30\\r\\n', 'output': ['2 4 7 11 16 22 29 7 16 26 7 19 2 16 1 17 4 22 11 1 22 14 7 1 26 22 19 17 16\\r\\n']}, {'input': '35\\r\\n', 'output': ['2 4 7 11 16 22 29 2 11 21 32 9 22 1 16 32 14 32 16 1 22 9 32 21 11 2 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '40\\r\\n', 'output': ['2 4 7 11 16 22 29 37 6 16 27 39 12 26 1 17 34 12 31 11 32 14 37 21 6 32 19 7 36 26 17 9 2 36 31 27 24 22 21\\r\\n']}, {'input': '45\\r\\n', 'output': ['2 4 7 11 16 22 29 37 1 11 22 34 2 16 31 2 19 37 11 31 7 29 7 31 11 37 19 2 31 16 2 34 22 11 1 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '50\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 6 17 29 42 6 21 37 4 22 41 11 32 4 27 1 26 2 29 7 36 16 47 29 12 46 31 17 4 42 31 21 12 4 47 41 36 32 29 27 26\\r\\n']}, {'input': '55\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 1 12 24 37 51 11 27 44 7 26 46 12 34 2 26 51 22 49 22 51 26 2 34 12 46 26 7 44 27 11 51 37 24 12 1 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '60\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 7 19 32 46 1 17 34 52 11 31 52 14 37 1 26 52 19 47 16 46 17 49 22 56 31 7 44 22 1 41 22 4 47 31 16 2 49 37 26 16 7 59 52 46 41 37 34 32 31\\r\\n']}, {'input': '65\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 2 14 27 41 56 7 24 42 61 16 37 59 17 41 1 27 54 17 46 11 42 9 42 11 46 17 54 27 1 41 17 59 37 16 61 42 24 7 56 41 27 14 2 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '70\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 9 22 36 51 67 14 32 51 1 22 44 67 21 46 2 29 57 16 46 7 39 2 36 1 37 4 42 11 51 22 64 37 11 56 32 9 57 36 16 67 49 32 16 1 57 44 32 21 11 2 64 57 51 46 42 39 37 36\\r\\n']}, {'input': '75\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 4 17 31 46 62 4 22 41 61 7 29 52 1 26 52 4 32 61 16 47 4 37 71 31 67 29 67 31 71 37 4 47 16 61 32 4 52 26 1 52 29 7 61 41 22 4 62 46 31 17 4 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '80\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 12 26 41 57 74 12 31 51 72 14 37 61 6 32 59 7 36 66 17 49 2 36 71 27 64 22 61 21 62 24 67 31 76 42 9 57 26 76 47 19 72 46 21 77 54 32 11 71 52 34 17 1 66 52 39 27 16 6 77 69 62 56 51 47 44 42 41\\r\\n']}, {'input': '85\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 7 21 36 52 69 2 21 41 62 84 22 46 71 12 39 67 11 41 72 19 52 1 36 72 24 62 16 56 12 54 12 56 16 62 24 72 36 1 52 19 72 41 11 67 39 12 71 46 22 84 62 41 21 2 69 52 36 21 7 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '90\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 2 16 31 47 64 82 11 31 52 74 7 31 56 82 19 47 76 16 47 79 22 56 1 37 74 22 61 11 52 4 47 1 46 2 49 7 56 16 67 29 82 46 11 67 34 2 61 31 2 64 37 11 76 52 29 7 76 56 37 19 2 76 61 47 34 22 11 1 82 74 67 61 56 52 49 47 46\\r\\n']}, {'input': '95\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 11 26 42 59 77 1 21 42 64 87 16 41 67 94 27 56 86 22 54 87 26 61 2 39 77 21 61 7 49 92 41 86 37 84 37 86 41 92 49 7 61 21 77 39 2 61 26 87 54 22 86 56 27 94 67 41 16 87 64 42 21 1 77 59 42 26 11 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '96\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 10 25 41 58 76 95 19 40 62 85 13 38 64 91 23 52 82 17 49 82 20 55 91 32 70 13 53 94 40 83 31 76 26 73 25 74 28 79 35 88 46 5 61 22 80 43 7 68 34 1 65 34 4 71 43 16 86 61 37 14 88 67 47 28 10 89 73 58 44 31 19 8 94 85 77 70 64 59 55 52 50 49\\r\\n']}, {'input': '97\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 9 24 40 57 75 94 17 38 60 83 10 35 61 88 19 48 78 12 44 77 14 49 85 25 63 5 45 86 31 74 21 66 15 62 13 62 15 66 21 74 31 86 45 5 63 25 85 49 14 77 44 12 78 48 19 88 61 35 10 83 60 38 17 94 75 57 40 24 9 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '98\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 8 23 39 56 74 93 15 36 58 81 7 32 58 85 15 44 74 7 39 72 8 43 79 18 56 95 37 78 22 65 11 56 4 51 1 50 2 53 7 60 16 71 29 86 46 7 67 30 92 57 23 88 56 25 93 64 36 9 81 56 32 9 85 64 44 25 7 88 72 57 43 30 18 7 95 86 78 71 65 60 56 53 51 50\\r\\n']}, {'input': '99\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 7 22 38 55 73 92 13 34 56 79 4 29 55 82 11 40 70 2 34 67 2 37 73 11 49 88 29 70 13 56 1 46 92 40 88 38 88 40 92 46 1 56 13 70 29 88 49 11 73 37 2 67 34 2 70 40 11 82 55 29 4 79 56 34 13 92 73 55 38 22 7 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '100\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 6 21 37 54 72 91 11 32 54 77 1 26 52 79 7 36 66 97 29 62 96 31 67 4 42 81 21 62 4 47 91 36 82 29 77 26 76 27 79 32 86 41 97 54 12 71 31 92 54 17 81 46 12 79 47 16 86 57 29 2 76 51 27 4 82 61 41 22 4 87 71 56 42 29 17 6 96 87 79 72 66 61 57 54 52 51\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 2; i <= n; i++) cout << i << \" \";\n  for (int i = n - 1; i > 1; i--) cout << i << \" \";\n}\n"}
{"src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "id": 30, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '10\\r\\n', 'output': ['2 4 7 1 6 2 9 7 6\\r\\n']}, {'input': '3\\r\\n', 'output': ['2 1\\r\\n']}, {'input': '4\\r\\n', 'output': ['2 4 3\\r\\n']}, {'input': '5\\r\\n', 'output': ['2 4 2 1\\r\\n']}, {'input': '6\\r\\n', 'output': ['2 4 1 5 4\\r\\n']}, {'input': '7\\r\\n', 'output': ['2 4 7 4 2 1\\r\\n']}, {'input': '8\\r\\n', 'output': ['2 4 7 3 8 6 5\\r\\n']}, {'input': '9\\r\\n', 'output': ['2 4 7 2 7 4 2 1\\r\\n']}, {'input': '2\\r\\n', 'output': ['2\\r\\n']}, {'input': '11\\r\\n', 'output': ['2 4 7 11 5 11 7 4 2 1\\r\\n']}, {'input': '12\\r\\n', 'output': ['2 4 7 11 4 10 5 1 10 8 7\\r\\n']}, {'input': '13\\r\\n', 'output': ['2 4 7 11 3 9 3 11 7 4 2 1\\r\\n']}, {'input': '20\\r\\n', 'output': ['2 4 7 11 16 2 9 17 6 16 7 19 12 6 1 17 14 12 11\\r\\n']}, {'input': '25\\r\\n', 'output': ['2 4 7 11 16 22 4 12 21 6 17 4 17 6 21 12 4 22 16 11 7 4 2 1\\r\\n']}, {'input': '30\\r\\n', 'output': ['2 4 7 11 16 22 29 7 16 26 7 19 2 16 1 17 4 22 11 1 22 14 7 1 26 22 19 17 16\\r\\n']}, {'input': '35\\r\\n', 'output': ['2 4 7 11 16 22 29 2 11 21 32 9 22 1 16 32 14 32 16 1 22 9 32 21 11 2 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '40\\r\\n', 'output': ['2 4 7 11 16 22 29 37 6 16 27 39 12 26 1 17 34 12 31 11 32 14 37 21 6 32 19 7 36 26 17 9 2 36 31 27 24 22 21\\r\\n']}, {'input': '45\\r\\n', 'output': ['2 4 7 11 16 22 29 37 1 11 22 34 2 16 31 2 19 37 11 31 7 29 7 31 11 37 19 2 31 16 2 34 22 11 1 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '50\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 6 17 29 42 6 21 37 4 22 41 11 32 4 27 1 26 2 29 7 36 16 47 29 12 46 31 17 4 42 31 21 12 4 47 41 36 32 29 27 26\\r\\n']}, {'input': '55\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 1 12 24 37 51 11 27 44 7 26 46 12 34 2 26 51 22 49 22 51 26 2 34 12 46 26 7 44 27 11 51 37 24 12 1 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '60\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 7 19 32 46 1 17 34 52 11 31 52 14 37 1 26 52 19 47 16 46 17 49 22 56 31 7 44 22 1 41 22 4 47 31 16 2 49 37 26 16 7 59 52 46 41 37 34 32 31\\r\\n']}, {'input': '65\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 2 14 27 41 56 7 24 42 61 16 37 59 17 41 1 27 54 17 46 11 42 9 42 11 46 17 54 27 1 41 17 59 37 16 61 42 24 7 56 41 27 14 2 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '70\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 9 22 36 51 67 14 32 51 1 22 44 67 21 46 2 29 57 16 46 7 39 2 36 1 37 4 42 11 51 22 64 37 11 56 32 9 57 36 16 67 49 32 16 1 57 44 32 21 11 2 64 57 51 46 42 39 37 36\\r\\n']}, {'input': '75\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 4 17 31 46 62 4 22 41 61 7 29 52 1 26 52 4 32 61 16 47 4 37 71 31 67 29 67 31 71 37 4 47 16 61 32 4 52 26 1 52 29 7 61 41 22 4 62 46 31 17 4 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '80\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 12 26 41 57 74 12 31 51 72 14 37 61 6 32 59 7 36 66 17 49 2 36 71 27 64 22 61 21 62 24 67 31 76 42 9 57 26 76 47 19 72 46 21 77 54 32 11 71 52 34 17 1 66 52 39 27 16 6 77 69 62 56 51 47 44 42 41\\r\\n']}, {'input': '85\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 7 21 36 52 69 2 21 41 62 84 22 46 71 12 39 67 11 41 72 19 52 1 36 72 24 62 16 56 12 54 12 56 16 62 24 72 36 1 52 19 72 41 11 67 39 12 71 46 22 84 62 41 21 2 69 52 36 21 7 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '90\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 2 16 31 47 64 82 11 31 52 74 7 31 56 82 19 47 76 16 47 79 22 56 1 37 74 22 61 11 52 4 47 1 46 2 49 7 56 16 67 29 82 46 11 67 34 2 61 31 2 64 37 11 76 52 29 7 76 56 37 19 2 76 61 47 34 22 11 1 82 74 67 61 56 52 49 47 46\\r\\n']}, {'input': '95\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 11 26 42 59 77 1 21 42 64 87 16 41 67 94 27 56 86 22 54 87 26 61 2 39 77 21 61 7 49 92 41 86 37 84 37 86 41 92 49 7 61 21 77 39 2 61 26 87 54 22 86 56 27 94 67 41 16 87 64 42 21 1 77 59 42 26 11 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '96\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 10 25 41 58 76 95 19 40 62 85 13 38 64 91 23 52 82 17 49 82 20 55 91 32 70 13 53 94 40 83 31 76 26 73 25 74 28 79 35 88 46 5 61 22 80 43 7 68 34 1 65 34 4 71 43 16 86 61 37 14 88 67 47 28 10 89 73 58 44 31 19 8 94 85 77 70 64 59 55 52 50 49\\r\\n']}, {'input': '97\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 9 24 40 57 75 94 17 38 60 83 10 35 61 88 19 48 78 12 44 77 14 49 85 25 63 5 45 86 31 74 21 66 15 62 13 62 15 66 21 74 31 86 45 5 63 25 85 49 14 77 44 12 78 48 19 88 61 35 10 83 60 38 17 94 75 57 40 24 9 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '98\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 8 23 39 56 74 93 15 36 58 81 7 32 58 85 15 44 74 7 39 72 8 43 79 18 56 95 37 78 22 65 11 56 4 51 1 50 2 53 7 60 16 71 29 86 46 7 67 30 92 57 23 88 56 25 93 64 36 9 81 56 32 9 85 64 44 25 7 88 72 57 43 30 18 7 95 86 78 71 65 60 56 53 51 50\\r\\n']}, {'input': '99\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 7 22 38 55 73 92 13 34 56 79 4 29 55 82 11 40 70 2 34 67 2 37 73 11 49 88 29 70 13 56 1 46 92 40 88 38 88 40 92 46 1 56 13 70 29 88 49 11 73 37 2 67 34 2 70 40 11 82 55 29 4 79 56 34 13 92 73 55 38 22 7 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '100\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 6 21 37 54 72 91 11 32 54 77 1 26 52 79 7 36 66 97 29 62 96 31 67 4 42 81 21 62 4 47 91 36 82 29 77 26 76 27 79 32 86 41 97 54 12 71 31 92 54 17 81 46 12 79 47 16 86 57 29 2 76 51 27 4 82 61 41 22 4 87 71 56 42 29 17 6 96 87 79 72 66 61 57 54 52 51\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a, b;\n  a = 2;\n  for (int i = 1; i < n; i++) {\n    b = a;\n    a = (b + i) % n;\n    cout << a << \" \";\n  }\n  return 0;\n}\n"}
{"src_uid": "ba9c136f84375cd317f0f8b53e3939c7", "id": 31, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '2 1\\r\\n0 1\\r\\n2 1\\r\\n', 'output': ['332748119\\r\\n332748119']}, {'input': '1 2\\r\\n1\\r\\n1\\r\\n', 'output': ['3']}, {'input': '3 3\\r\\n0 1 1\\r\\n4 3 5\\r\\n', 'output': ['160955686\\r\\n185138929\\r\\n974061117']}, {'input': '5 5\\r\\n0 1 0 0 1\\r\\n9 8 3 8 8\\r\\n', 'output': ['45170585\\r\\n105647559\\r\\n680553097\\r\\n483815788\\r\\n105647559']}, {'input': '10 10\\r\\n0 1 0 0 1 1 1 1 1 1\\r\\n12 18 6 18 7 2 9 18 1 9\\r\\n', 'output': ['199115375\\r\\n823101465\\r\\n598679864\\r\\n797795239\\r\\n486469073\\r\\n424203836\\r\\n910672909\\r\\n823101465\\r\\n212101918\\r\\n910672909']}, {'input': '20 20\\r\\n1 1 1 1 0 1 1 1 0 1 0 1 0 0 1 0 1 1 0 1\\r\\n1 13 7 11 17 15 19 18 14 11 15 1 12 4 5 16 14 11 18 9\\r\\n', 'output': ['688505688\\r\\n964619120\\r\\n826562404\\r\\n585852097\\r\\n851622699\\r\\n345141790\\r\\n104431483\\r\\n414170148\\r\\n349014804\\r\\n585852097\\r\\n516550769\\r\\n688505688\\r\\n13942874\\r\\n670143860\\r\\n447795381\\r\\n684086734\\r\\n654880455\\r\\n585852097\\r\\n20914311\\r\\n207085074']}, {'input': '30 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0\\r\\n1 2 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 2 2 1 1 2 2 2\\r\\n', 'output': ['346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n542025302\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n693292404\\r\\n693292404']}, {'input': '40 40\\r\\n1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n28 13 22 35 22 13 23 35 14 36 30 10 10 15 3 9 35 35 9 29 14 28 8 29 22 30 4 31 39 24 4 19 37 4 20 7 11 17 3 25\\r\\n', 'output': ['368107101\\r\\n848286965\\r\\n360530176\\r\\n210572788\\r\\n199380339\\r\\n848286965\\r\\n195418938\\r\\n210572788\\r\\n683175727\\r\\n45461550\\r\\n37884625\\r\\n544374860\\r\\n345376326\\r\\n518064489\\r\\n502910639\\r\\n510487564\\r\\n210572788\\r\\n210572788\\r\\n510487564\\r\\n202995863\\r\\n683175727\\r\\n526005255\\r\\n675598802\\r\\n202995863\\r\\n360530176\\r\\n37884625\\r\\n337799401\\r\\n871017740\\r\\n548372189\\r\\n30307700\\r\\n337799401\\r\\n855863890\\r\\n878594665\\r\\n337799401\\r\\n690752652\\r\\n840710040\\r\\n180265088\\r\\n187842013\\r\\n502910639\\r\\n863440815']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n13 18 27 40 3 1 20 11 25 11 2 31 22 15 36 12 11 24 8 39 31 36 19 24 10 39 27 4 10 22 14 3 25 5 24 19 20 33 17 19 30 15 37 33 3 27 26 29 37 34\\r\\n', 'output': ['30685719\\r\\n733580163\\r\\n601248068\\r\\n631933787\\r\\n621385537\\r\\n539876630\\r\\n815089070\\r\\n947421165\\r\\n519739161\\r\\n947421165\\r\\n81508907\\r\\n764265882\\r\\n896597977\\r\\n112194626\\r\\n468915973\\r\\n489053442\\r\\n947421165\\r\\n978106884\\r\\n326035628\\r\\n92057157\\r\\n764265882\\r\\n468915973\\r\\n275212440\\r\\n978106884\\r\\n407544535\\r\\n92057157\\r\\n601248068\\r\\n163017814\\r\\n407544535\\r\\n896597977\\r\\n570562349\\r\\n621385537\\r\\n519739161\\r\\n702894444\\r\\n978106884\\r\\n275212440\\r\\n815089070\\r\\n845774789\\r\\n193703533\\r\\n275212440\\r\\n224389252\\r\\n112194626\\r\\n10548250\\r\\n845774789\\r\\n621385537\\r\\n601248068\\r\\n61371438\\r\\n...']}, {'input': '50 50\\r\\n0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0\\r\\n2 50 37 21 21 2 26 49 15 44 8 27 30 28 26 40 26 45 41 37 27 34 8 35 2 23 2 49 13 1 39 37 12 42 7 11 4 50 42 21 27 50 28 31 17 22 10 43 46 13\\r\\n', 'output': ['380563607\\r\\n529890998\\r\\n551838435\\r\\n502062638\\r\\n635094670\\r\\n380563607\\r\\n954349479\\r\\n816391328\\r\\n358616170\\r\\n386444530\\r\\n907437062\\r\\n645509106\\r\\n717232340\\r\\n336668733\\r\\n954349479\\r\\n623561669\\r\\n954349479\\r\\n77604157\\r\\n314721296\\r\\n453480088\\r\\n645509106\\r\\n480115201\\r\\n907437062\\r\\n725742999\\r\\n380563607\\r\\n362831759\\r\\n725981442\\r\\n838731371\\r\\n976296916\\r\\n362990721\\r\\n932402042\\r\\n551838435\\r\\n286892936\\r\\n5880923\\r\\n832850448\\r\\n998164872\\r\\n761127214\\r\\n529890998\\r\\n5880923\\r\\n502062638\\r\\n645509106\\r\\n181137696\\r\\n181296658\\r\\n408391967\\r\\n739179777\\r\\n193222265\\r\\n904573682\\r...']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 1 2 2 2 1 1 1\\r\\n', 'output': ['665496237\\r\\n332748121\\r\\n332748121\\r\\n665496237\\r\\n332748121\\r\\n332748121\\r\\n332748121\\r\\n665496237\\r\\n665496237\\r\\n665496237']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 0 1 1\\r\\n2 1 2 2 1 1 1 1 1 1\\r\\n', 'output': ['771370640\\r\\n385685320\\r\\n771370640\\r\\n771370640\\r\\n385685320\\r\\n385685320\\r\\n385685320\\r\\n635246407\\r\\n385685320\\r\\n385685320']}, {'input': '10 10\\r\\n0 0 0 1 0 0 0 0 0 0\\r\\n2 2 2 2 2 2 2 1 2 2\\r\\n', 'output': ['973938381\\r\\n973938381\\r\\n973938381\\r\\n791643586\\r\\n973938381\\r\\n973938381\\r\\n973938381\\r\\n986091367\\r\\n973938381\\r\\n973938381']}, {'input': '10 10\\r\\n0 0 1 0 0 0 1 0 0 0\\r\\n2 1 2 1 1 2 1 1 1 1\\r\\n', 'output': ['44896189\\r\\n521570271\\r\\n482402083\\r\\n521570271\\r\\n521570271\\r\\n44896189\\r\\n740323218\\r\\n521570271\\r\\n521570271\\r\\n521570271']}, {'input': '10 10\\r\\n1 0 0 0 1 1 1 0 1 0\\r\\n1 2 1 2 1 1 2 2 2 1\\r\\n', 'output': ['910950063\\r\\n595918255\\r\\n797081304\\r\\n595918255\\r\\n910950063\\r\\n910950063\\r\\n823655773\\r\\n595918255\\r\\n823655773\\r\\n797081304']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n17 10 8 34 5 4 3 44 20 14\\r\\n', 'output': ['709444118\\r\\n6278277\\r\\n803618104\\r\\n420643883\\r\\n502261315\\r\\n401809052\\r\\n301356789\\r\\n426922160\\r\\n12556554\\r\\n408087329']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 0 1\\r\\n40 36 29 4 36 35 9 38 40 18\\r\\n', 'output': ['59109317\\r\\n951618303\\r\\n17898146\\r\\n105735367\\r\\n951618303\\r\\n675623373\\r\\n487465664\\r\\n505363810\\r\\n736385984\\r\\n974931328']}, {'input': '10 10\\r\\n0 0 0 0 0 0 0 1 0 0\\r\\n8 33 37 18 30 48 45 34 25 48\\r\\n', 'output': ['211347083\\r\\n497465085\\r\\n104016450\\r\\n725092025\\r\\n542990473\\r\\n269838145\\r\\n315363533\\r\\n227335634\\r\\n286118002\\r\\n269838145']}, {'input': '10 10\\r\\n0 0 1 0 0 0 0 0 1 0\\r\\n47 34 36 9 3 16 17 46 47 1\\r\\n', 'output': ['167709201\\r\\n57603825\\r\\n597597985\\r\\n690531016\\r\\n562925123\\r\\n673030499\\r\\n527924089\\r\\n312815611\\r\\n253346183\\r\\n853137943']}, {'input': '10 10\\r\\n1 0 0 1 1 0 1 0 0 1\\r\\n24 7 10 9 6 13 27 17 6 39\\r\\n', 'output': ['976715988\\r\\n573793375\\r\\n391885813\\r\\n865390672\\r\\n244178997\\r\\n209978251\\r\\n599683310\\r\\n965679188\\r\\n634429229\\r\\n89796951']}, {'input': '10 10\\r\\n0 0 0 0 0 1 0 0 0 0\\r\\n34 34 34 34 34 34 34 34 34 34\\r\\n', 'output': ['971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n754874965\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n43 43 43 43 43 43 43 43 43 43\\r\\n', 'output': ['44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 2 1 1 2 1 1 1 2 1 1 2 1 2 1 2 1 2 1 2 2 2 1 2 2 2 2 1\\r\\n', 'output': ['260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1\\r\\n2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 2 2 2 2 1 2 1 2 1 1 1 1 2 1\\r\\n', 'output': ['720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n720162001\\r\\n720162001\\r\\n720162001\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n720162001\\r\\n427819009\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177']}, {'input': '30 30\\r\\n0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n2 1 1 2 1 2 2 2 2 2 1 1 2 2 2 1 2 2 2 1 2 1 1 1 1 1 2 1 1 1\\r\\n', 'output': ['188114875\\r\\n593179614\\r\\n593179614\\r\\n550614566\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n593179614']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 1 1 1 2 1 2 2 1 2 1 2 1 1 2 2 1 2 1 2 1 2 2 2 1 1 2 1 2 2\\r\\n', 'output': ['593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n275307283\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n275307283\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875']}, {'input': '30 30\\r\\n1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 1 1 0 1 0 1 0 0 1 1 0 1 0 1 0\\r\\n1 1 1 2 2 1 2 1 2 1 1 2 2 2 1 2 1 1 1 1 1 2 1 2 1 2 1 2 1 1\\r\\n', 'output': ['297674502\\r\\n297674502\\r\\n297674502\\r\\n101192689\\r\\n595349004\\r\\n549718521\\r\\n101192689\\r\\n297674502\\r\\n595349004\\r\\n297674502\\r\\n549718521\\r\\n101192689\\r\\n101192689\\r\\n101192689\\r\\n549718521\\r\\n595349004\\r\\n297674502\\r\\n549718521\\r\\n297674502\\r\\n549718521\\r\\n297674502\\r\\n101192689\\r\\n549718521\\r\\n595349004\\r\\n297674502\\r\\n101192689\\r\\n297674502\\r\\n101192689\\r\\n297674502\\r\\n549718521']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n23 45 44 49 17 36 32 26 40 8 36 11 5 19 41 16 7 38 23 40 13 16 24 44 22 13 1 2 32 31\\r\\n', 'output': ['42365832\\r\\n603712812\\r\\n124449607\\r\\n524276926\\r\\n161519661\\r\\n283321379\\r\\n362757265\\r\\n481911094\\r\\n203885493\\r\\n839372581\\r\\n283321379\\r\\n280673490\\r\\n399827319\\r\\n121801718\\r\\n683148698\\r\\n680500809\\r\\n360109376\\r\\n243603436\\r\\n42365832\\r\\n203885493\\r\\n240955547\\r\\n680500809\\r\\n521629037\\r\\n124449607\\r\\n561346980\\r\\n240955547\\r\\n479263205\\r\\n958526410\\r\\n362757265\\r\\n881738413']}, {'input': '30 30\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n41 39 15 34 45 27 18 7 48 33 46 11 24 16 35 43 7 31 26 17 30 15 5 9 29 20 21 37 3 7\\r\\n', 'output': ['61128841\\r\\n655563720\\r\\n98563838\\r\\n955457225\\r\\n295691514\\r\\n377063779\\r\\n916872088\\r\\n578393446\\r\\n115755411\\r\\n17191573\\r\\n235712813\\r\\n338478642\\r\\n556999882\\r\\n38585137\\r\\n895478524\\r\\n415648916\\r\\n578393446\\r\\n137148975\\r\\n437042480\\r\\n976850789\\r\\n197127676\\r\\n98563838\\r\\n698350848\\r\\n458436044\\r\\n257106377\\r\\n796914686\\r\\n736935985\\r\\n775521122\\r\\n818308250\\r\\n578393446']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n29 38 18 19 46 28 12 5 46 17 31 20 24 33 9 6 47 2 2 41 34 2 50 5 47 10 40 21 49 28\\r\\n', 'output': ['528451192\\r\\n658031067\\r\\n259159750\\r\\n828137710\\r\\n218632982\\r\\n957717585\\r\\n838269402\\r\\n848401094\\r\\n218632982\\r\\n688426143\\r\\n942792071\\r\\n398871317\\r\\n678294451\\r\\n807874326\\r\\n129579875\\r\\n419134701\\r\\n787610942\\r\\n139711567\\r\\n139711567\\r\\n368476241\\r\\n378607933\\r\\n139711567\\r\\n498056116\\r\\n848401094\\r\\n787610942\\r\\n698557835\\r\\n797742634\\r\\n967849277\\r\\n927322509\\r\\n957717585']}, {'input': '30 30\\r\\n0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 12 9 1 5 32 38 25 34 31 27 43 13 38 48 40 5 42 20 45 1 4 35 38 1 44 31 42 8 37\\r\\n', 'output': ['399967190\\r\\n806628868\\r\\n604971651\\r\\n399967190\\r\\n3347244\\r\\n800038448\\r\\n225087925\\r\\n16736220\\r\\n621707871\\r\\n420050654\\r\\n816670600\\r\\n228435169\\r\\n208351705\\r\\n225087925\\r\\n231782413\\r\\n26777952\\r\\n3347244\\r\\n51806110\\r\\n13388976\\r\\n30125196\\r\\n399967190\\r\\n601624407\\r\\n23430708\\r\\n225087925\\r\\n399967190\\r\\n628402359\\r\\n420050654\\r\\n826712332\\r\\n205004461\\r\\n823365088']}, {'input': '30 30\\r\\n0 1 1 0 0 1 1 1 1 0 0 1 0 0 1 0 0 0 1 0 1 1 0 0 0 1 1 1 1 0\\r\\n5 20 47 27 17 5 18 30 43 23 44 6 47 8 23 41 2 46 49 33 45 27 33 16 36 2 42 36 8 23\\r\\n', 'output': ['114252107\\r\\n760713694\\r\\n489959522\\r\\n18014766\\r\\n787754905\\r\\n689300600\\r\\n484993454\\r\\n142826188\\r\\n936763395\\r\\n126261951\\r\\n805769671\\r\\n827160720\\r\\n475023194\\r\\n781749983\\r\\n176049701\\r\\n138271795\\r\\n444998584\\r\\n252523902\\r\\n765679762\\r\\n354766165\\r\\n214239282\\r\\n727490181\\r\\n354766165\\r\\n565255613\\r\\n24019688\\r\\n275720240\\r\\n798903275\\r\\n969986908\\r\\n104636607\\r\\n126261951']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\r\\n39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39\\r\\n', 'output': ['417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n142843895']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22\\r\\n', 'output': ['23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n2 1 1 2 2 1 2 1 1 2 2 2 1 2 2 1 1 1 2 1 2 1 2 2 2 1 2 1 1 2 2 2 2 2 1 2 2 2 2 2 2 1 2 1 2 2 2 1 1 2\\r\\n', 'output': ['714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n71479...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 1 2 1 1 1 1 1 2 1 1 1 2 2 2 1 1 1 1 2 2 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 2 2 2 1\\r\\n', 'output': ['964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n824636640\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n93147...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\\r\\n1 2 2 2 2 2 2 1 1 2 2 1 1 2 1 2 2 1 2 1 2 2 1 2 2 2 1 1 1 1 2 2 2 1 2 2 1 2 2 1 1 2 2 2 2 2 1 2 2 1\\r\\n', 'output': ['512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n96131098\\r\\n27359387\\r\\n27359387\\r\\n5128...']}, {'input': '50 50\\r\\n0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\r\\n2 1 1 1 1 2 2 2 1 1 2 2 2 1 2 1 2 2 2 1 1 1 1 2 2 1 1 1 1 2 1 2 2 2 2 1 1 1 2 1 2 1 1 2 2 1 1 2 2 1\\r\\n', 'output': ['303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n480354901\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n15198...']}, {'input': '50 50\\r\\n0 0 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0\\r\\n1 1 1 1 1 2 2 1 1 2 2 2 1 1 1 2 2 2 1 1 1 1 2 1 1 1 2 2 1 1 1 2 2 1 1 2 1 1 2 2 2 2 2 2 2 2 2 1 2 1\\r\\n', 'output': ['525100120\\r\\n525100120\\r\\n392384920\\r\\n525100120\\r\\n525100120\\r\\n51955887\\r\\n784769840\\r\\n525100120\\r\\n392384920\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n392384920\\r\\n392384920\\r\\n525100120\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n392384920\\r\\n392384920\\r\\n392384920\\r\\n392384920\\r\\n784769840\\r\\n392384920\\r\\n525100120\\r\\n392384920\\r\\n51955887\\r\\n784769840\\r\\n525100120\\r\\n392384920\\r\\n525100120\\r\\n51955887\\r\\n51955887\\r\\n525100120\\r\\n392384920\\r\\n784769840\\r\\n525100120\\r\\n525100120\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n51955887\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n784769840\\r\\n51955887\\r\\n5251...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n32 22 24 45 22 17 10 5 27 1 48 15 14 43 11 16 38 31 24 19 5 28 2 4 34 29 18 32 47 11 2 34 39 29 36 11 39 24 23 16 41 45 17 39 30 15 16 3 3 8\\r\\n', 'output': ['118672439\\r\\n268758118\\r\\n837687594\\r\\n821980974\\r\\n268758118\\r\\n842923134\\r\\n848158674\\r\\n424079337\\r\\n692837455\\r\\n284464738\\r\\n677130835\\r\\n273993658\\r\\n987773273\\r\\n253051498\\r\\n134379059\\r\\n558458396\\r\\n827216514\\r\\n832452054\\r\\n837687594\\r\\n413608257\\r\\n424079337\\r\\n977302193\\r\\n568929476\\r\\n139614599\\r\\n687601915\\r\\n263522578\\r\\n129143519\\r\\n118672439\\r\\n392666097\\r\\n134379059\\r\\n568929476\\r\\n687601915\\r\\n113436899\\r\\n263522578\\r\\n258287038\\r\\n134379059\\r\\n113436899\\r\\n837687594\\r\\n553222856\\r\\n558458396\\r\\n682366375\\r\\n821980974\\r\\n842923134\\r\\n113436899\\r\\n547987316\\r\\n273993658\\r\\n55845...']}, {'input': '50 50\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n49 34 4 15 32 20 22 35 3 28 15 46 4 46 16 11 45 42 11 4 15 36 29 10 27 32 1 1 23 11 6 34 35 19 11 5 2 37 9 20 39 33 27 4 21 33 6 23 37 50\\r\\n', 'output': ['41887747\\r\\n858571128\\r\\n101008368\\r\\n378781380\\r\\n808066944\\r\\n505041840\\r\\n555546024\\r\\n883823220\\r\\n75756276\\r\\n707058576\\r\\n378781380\\r\\n163351879\\r\\n101008368\\r\\n163351879\\r\\n404033472\\r\\n277773012\\r\\n138099787\\r\\n62343511\\r\\n277773012\\r\\n101008368\\r\\n378781380\\r\\n909075312\\r\\n732310668\\r\\n252520920\\r\\n681806484\\r\\n808066944\\r\\n25252092\\r\\n25252092\\r\\n580798116\\r\\n277773012\\r\\n151512552\\r\\n858571128\\r\\n883823220\\r\\n479789748\\r\\n277773012\\r\\n126260460\\r\\n50504184\\r\\n934327404\\r\\n227268828\\r\\n505041840\\r\\n984831588\\r\\n833319036\\r\\n681806484\\r\\n101008368\\r\\n530293932\\r\\n833319036\\r\\n151512552\\r\\n...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n12 29 36 24 44 22 38 43 30 19 15 2 39 8 13 50 29 18 37 19 32 39 42 41 20 11 14 25 4 35 14 23 17 29 1 19 3 6 8 31 26 46 9 31 36 49 21 38 17 27\\r\\n', 'output': ['820896192\\r\\n985588111\\r\\n466199870\\r\\n643548031\\r\\n15219645\\r\\n506731999\\r\\n603015902\\r\\n945055982\\r\\n986069299\\r\\n301507951\\r\\n27875887\\r\\n136816032\\r\\n671423918\\r\\n547264128\\r\\n889304208\\r\\n425667741\\r\\n985588111\\r\\n233099935\\r\\n534607886\\r\\n301507951\\r\\n192567806\\r\\n671423918\\r\\n876647966\\r\\n808239950\\r\\n369915967\\r\\n752488176\\r\\n957712224\\r\\n711956047\\r\\n273632064\\r\\n397791854\\r\\n957712224\\r\\n575140015\\r\\n164691919\\r\\n985588111\\r\\n68408016\\r\\n301507951\\r\\n205224048\\r\\n410448096\\r\\n547264128\\r\\n124159790\\r\\n780364063\\r\\n152035677\\r\\n615672144\\r\\n124159790\\r\\n466199870\\r\\n357259725\\r\\n43832398...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n25 31 26 45 2 6 25 14 35 23 31 16 24 36 44 8 18 41 36 3 27 21 15 44 45 45 25 8 3 43 7 25 48 45 44 33 25 49 8 46 14 12 12 46 45 43 29 40 1 47\\r\\n', 'output': ['26673909\\r\\n312584066\\r\\n906195896\\r\\n646959648\\r\\n760799621\\r\\n285910157\\r\\n26673909\\r\\n334375582\\r\\n835938955\\r\\n264118641\\r\\n312584066\\r\\n96930850\\r\\n145396275\\r\\n717216589\\r\\n765682014\\r\\n48465425\\r\\n857730471\\r\\n123604759\\r\\n717216589\\r\\n642077255\\r\\n787473530\\r\\n501563373\\r\\n215653216\\r\\n765682014\\r\\n646959648\\r\\n108381283\\r\\n26673909\\r\\n48465425\\r\\n642077255\\r\\n884404380\\r\\n167187791\\r\\n26673909\\r\\n290792550\\r\\n646959648\\r\\n765682014\\r\\n75139334\\r\\n614792020\\r\\n172070184\\r\\n48465425\\r\\n528237282\\r\\n334375582\\r\\n571820314\\r\\n571820314\\r\\n528237282\\r\\n646959648\\r\\n884404380\\r\\n550028798\\r\\n242...']}, {'input': '50 50\\r\\n0 0 0 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 0 0\\r\\n45 49 17 22 28 34 24 38 5 46 22 36 11 12 43 21 47 39 38 38 38 27 10 49 19 46 23 7 46 35 11 38 25 16 7 32 12 13 44 14 41 36 7 31 4 46 40 28 28 46\\r\\n', 'output': ['644620779\\r\\n102973792\\r\\n443172276\\r\\n267699221\\r\\n201448503\\r\\n886344552\\r\\n745782947\\r\\n99391617\\r\\n196964962\\r\\n259647944\\r\\n267699221\\r\\n619552244\\r\\n632971787\\r\\n371547745\\r\\n416322096\\r\\n28657358\\r\\n254279678\\r\\n338433480\\r\\n344697565\\r\\n344697565\\r\\n99391617\\r\\n464664183\\r\\n143249062\\r\\n102973792\\r\\n548817985\\r\\n15237815\\r\\n129823972\\r\\n675048688\\r\\n259647944\\r\\n380510381\\r\\n756520580\\r\\n344697565\\r\\n984824810\\r\\n829936749\\r\\n675048688\\r\\n658045869\\r\\n371547745\\r\\n112811160\\r\\n535398442\\r\\n599846428\\r\\n188023413\\r\\n619552244\\r\\n299923214\\r\\n44774351\\r\\n956167452\\r\\n259647944\\r\\n577475343\\r...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47\\r\\n', 'output': ['529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n988406960\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n52947...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\\r\\n', 'output': ['9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9']}, {'input': '5 50\\r\\n1 1 1 1 1\\r\\n1 1 4 2 3\\r\\n', 'output': ['635246412\\r\\n635246412\\r\\n544496942\\r\\n272248471\\r\\n907494883']}, {'input': '10 50\\r\\n0 0 0 0 0 0 0 0 1 0\\r\\n3 1 3 3 1 3 1 2 2 1\\r\\n', 'output': ['187134581\\r\\n727874429\\r\\n187134581\\r\\n187134581\\r\\n727874429\\r\\n187134581\\r\\n727874429\\r\\n457504505\\r\\n124563167\\r\\n727874429']}, {'input': '20 50\\r\\n1 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1\\r\\n1 2 2 1 2 2 2 2 2 2 1 1 2 2 2 1 1 1 2 2\\r\\n', 'output': ['853605709\\r\\n708967065\\r\\n708967065\\r\\n853605709\\r\\n708967065\\r\\n708967065\\r\\n708967065\\r\\n922030188\\r\\n708967065\\r\\n922030188\\r\\n853605709\\r\\n853605709\\r\\n708967065\\r\\n922030188\\r\\n708967065\\r\\n461015094\\r\\n853605709\\r\\n853605709\\r\\n708967065\\r\\n708967065']}, {'input': '20 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 2 2 2 2 1 2 1 2 1 2 1 1 2 1 2 2 1\\r\\n', 'output': ['436731907\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n873463814\\r\\n436731907']}, {'input': '40 50\\r\\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0\\r\\n33 26 4 19 42 43 19 32 13 23 19 1 18 43 43 43 19 31 4 25 28 23 33 37 36 23 5 12 18 32 34 1 21 22 34 35 37 16 41 39\\r\\n', 'output': ['729284231\\r\\n60340485\\r\\n239647233\\r\\n389641092\\r\\n20685064\\r\\n829280137\\r\\n389641092\\r\\n918933511\\r\\n529292419\\r\\n629288325\\r\\n366487398\\r\\n808595073\\r\\n579290372\\r\\n829280137\\r\\n829280137\\r\\n41331201\\r\\n389641092\\r\\n110338438\\r\\n239647233\\r\\n249989765\\r\\n679286278\\r\\n629288325\\r\\n426374038\\r\\n968931464\\r\\n160336391\\r\\n629288325\\r\\n49997953\\r\\n718941699\\r\\n579290372\\r\\n918933511\\r\\n539634951\\r\\n808595073\\r\\n89829960\\r\\n818937605\\r\\n539634951\\r\\n349985671\\r\\n968931464\\r\\n958588932\\r\\n210334344\\r\\n589632904']}, {'input': '41 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 2 4 2 3 2 4 3 1 1 3 1 3 2 5 3 3 5 4 4 1 1 2 3 2 1 5 5 5 4 2 2 2 1 2 4 4 5 2 1 4\\r\\n', 'output': ['394710173\\r\\n789420346\\r\\n580596339\\r\\n789420346\\r\\n185886166\\r\\n789420346\\r\\n580596339\\r\\n185886166\\r\\n394710173\\r\\n394710173\\r\\n185886166\\r\\n394710173\\r\\n581788048\\r\\n789420346\\r\\n636898629\\r\\n185886166\\r\\n185886166\\r\\n975306512\\r\\n580596339\\r\\n580596339\\r\\n394710173\\r\\n394710173\\r\\n55110581\\r\\n185886166\\r\\n55110581\\r\\n394710173\\r\\n975306512\\r\\n975306512\\r\\n975306512\\r\\n580596339\\r\\n789420346\\r\\n789420346\\r\\n789420346\\r\\n394710173\\r\\n789420346\\r\\n580596339\\r\\n580596339\\r\\n975306512\\r\\n789420346\\r\\n394710173\\r\\n580596339']}, {'input': '42 50\\r\\n0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0\\r\\n2 4 6 8 1 3 6 1 4 1 3 4 3 7 6 6 8 7 4 1 7 4 6 9 3 1 9 7 1 2 9 3 1 6 1 5 1 8 2 6 8 8\\r\\n', 'output': ['11284873\\r\\n329090227\\r\\n33854619\\r\\n45139492\\r\\n504764613\\r\\n995500935\\r\\n33854619\\r\\n504764613\\r\\n22569746\\r\\n504764613\\r\\n516049486\\r\\n22569746\\r\\n516049486\\r\\n538619232\\r\\n33854619\\r\\n33854619\\r\\n45139492\\r\\n538619232\\r\\n22569746\\r\\n504764613\\r\\n538619232\\r\\n22569746\\r\\n33854619\\r\\n549904105\\r\\n516049486\\r\\n504764613\\r\\n549904105\\r\\n538619232\\r\\n504764613\\r\\n11284873\\r\\n990014099\\r\\n516049486\\r\\n504764613\\r\\n33854619\\r\\n504764613\\r\\n527334359\\r\\n504764613\\r\\n45139492\\r\\n663667290\\r\\n33854619\\r\\n45139492\\r\\n45139492']}, {'input': '43 50\\r\\n1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n13 7 13 15 8 9 11 1 15 9 3 7 3 15 4 7 7 16 9 13 12 16 16 1 5 5 14 5 17 2 1 13 4 13 10 17 17 6 11 15 14 3 6\\r\\n', 'output': ['175780254\\r\\n94650906\\r\\n163530008\\r\\n802992688\\r\\n561362014\\r\\n881093354\\r\\n522311681\\r\\n319731340\\r\\n802992688\\r\\n881093354\\r\\n959194020\\r\\n241630674\\r\\n959194020\\r\\n802992688\\r\\n280681007\\r\\n241630674\\r\\n241630674\\r\\n124479675\\r\\n881093354\\r\\n163530008\\r\\n842043021\\r\\n124479675\\r\\n124479675\\r\\n13521558\\r\\n600412347\\r\\n600412347\\r\\n483261348\\r\\n67607790\\r\\n444211015\\r\\n639462680\\r\\n319731340\\r\\n163530008\\r\\n280681007\\r\\n163530008\\r\\n202580341\\r\\n444211015\\r\\n444211015\\r\\n920143687\\r\\n522311681\\r\\n802992688\\r\\n483261348\\r\\n959194020\\r\\n920143687']}, {'input': '44 50\\r\\n0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\r\\n2 6 6 11 2 4 11 10 5 15 15 20 20 7 9 8 17 4 16 19 12 16 12 13 2 11 20 2 6 10 2 18 7 5 18 10 15 6 11 9 7 5 17 11\\r\\n', 'output': ['327775237\\r\\n983325711\\r\\n983325711\\r\\n305397274\\r\\n327775237\\r\\n853173373\\r\\n305397274\\r\\n640631832\\r\\n320315916\\r\\n960947748\\r\\n960947748\\r\\n272889453\\r\\n283019311\\r\\n648091153\\r\\n975866390\\r\\n312856595\\r\\n290478632\\r\\n655550474\\r\\n625713190\\r\\n618253869\\r\\n968407069\\r\\n625713190\\r\\n968407069\\r\\n633172511\\r\\n327775237\\r\\n305397274\\r\\n283019311\\r\\n327775237\\r\\n983325711\\r\\n640631832\\r\\n327775237\\r\\n953488427\\r\\n648091153\\r\\n816905628\\r\\n953488427\\r\\n640631832\\r\\n960947748\\r\\n983325711\\r\\n305397274\\r\\n975866390\\r\\n648091153\\r\\n320315916\\r\\n290478632\\r\\n305397274']}, {'input': '45 50\\r\\n0 1 0 1 0 1 0 1 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 1 0\\r\\n4 4 23 23 13 23 9 16 4 18 20 15 21 24 22 20 22 1 15 7 10 17 20 6 15 7 4 10 16 7 14 9 13 17 10 14 22 23 3 5 20 11 4 24 24\\r\\n', 'output': ['630266647\\r\\n555616275\\r\\n379739073\\r\\n948743787\\r\\n301438985\\r\\n948743787\\r\\n669416691\\r\\n225976394\\r\\n555616275\\r\\n340589029\\r\\n156600176\\r\\n835755590\\r\\n563727926\\r\\n786866823\\r\\n560278630\\r\\n781592669\\r\\n970855676\\r\\n388465157\\r\\n835755590\\r\\n853405544\\r\\n889918511\\r\\n614441551\\r\\n156600176\\r\\n446277794\\r\\n117450132\\r\\n853405544\\r\\n630266647\\r\\n78300088\\r\\n225976394\\r\\n722767393\\r\\n708566735\\r\\n669416691\\r\\n58825276\\r\\n931705632\\r\\n78300088\\r\\n708566735\\r\\n970855676\\r\\n948743787\\r\\n223138897\\r\\n39150044\\r\\n781592669\\r\\n280139315\\r\\n555616275\\r\\n338964591\\r\\n786866823']}, {'input': '46 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n29 22 30 33 13 31 19 11 12 21 5 4 24 21 20 6 28 16 27 18 21 11 3 24 21 8 8 33 24 7 34 12 13 32 26 33 33 22 18 2 3 7 24 17 9 30\\r\\n', 'output': ['265429165\\r\\n98093399\\r\\n859759619\\r\\n646262275\\r\\n738585431\\r\\n455845720\\r\\n311590743\\r\\n548168876\\r\\n144254977\\r\\n502007298\\r\\n975163564\\r\\n380833110\\r\\n288509954\\r\\n502007298\\r\\n905921197\\r\\n571249665\\r\\n669343064\\r\\n525088087\\r\\n75012610\\r\\n715504642\\r\\n502007298\\r\\n548168876\\r\\n784747009\\r\\n288509954\\r\\n502007298\\r\\n761666220\\r\\n761666220\\r\\n646262275\\r\\n288509954\\r\\n167335766\\r\\n242348376\\r\\n144254977\\r\\n738585431\\r\\n51931821\\r\\n478926509\\r\\n646262275\\r\\n646262275\\r\\n98093399\\r\\n715504642\\r\\n190416555\\r\\n784747009\\r\\n167335766\\r\\n288509954\\r\\n121174188\\r\\n357752321\\r\\n859759619']}, {'input': '47 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n30 32 21 7 15 4 39 36 23 17 13 4 8 18 38 24 13 27 37 27 32 16 8 12 7 23 28 38 11 36 19 33 10 34 4 8 5 22 3 29 21 30 7 32 35 26 23\\r\\n', 'output': ['243227082\\r\\n658739962\\r\\n369907828\\r\\n456050727\\r\\n121613541\\r\\n831025760\\r\\n116546336\\r\\n491521369\\r\\n785420708\\r\\n537126421\\r\\n704345014\\r\\n831025760\\r\\n663807167\\r\\n744882861\\r\\n907034249\\r\\n993177148\\r\\n704345014\\r\\n618202115\\r\\n699277809\\r\\n618202115\\r\\n658739962\\r\\n329369981\\r\\n663807167\\r\\n496588574\\r\\n456050727\\r\\n785420708\\r\\n825958555\\r\\n907034249\\r\\n288832134\\r\\n491521369\\r\\n952639301\\r\\n866496402\\r\\n81075694\\r\\n76008489\\r\\n831025760\\r\\n663807167\\r\\n40537847\\r\\n577664268\\r\\n623269320\\r\\n35470642\\r\\n369907828\\r\\n243227082\\r\\n456050727\\r\\n658739962\\r\\n283764929\\r\\n410445675\\r\\n785420708...']}, {'input': '48 50\\r\\n1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 1\\r\\n9 42 15 12 2 9 41 13 23 14 17 42 25 10 10 2 38 36 41 31 9 20 31 41 20 41 40 28 7 37 14 25 23 38 27 17 6 40 2 19 19 3 8 32 13 22 41 20\\r\\n', 'output': ['386033769\\r\\n373559702\\r\\n643389615\\r\\n677156688\\r\\n85785282\\r\\n507867516\\r\\n317129978\\r\\n557604333\\r\\n299639299\\r\\n790016136\\r\\n959305308\\r\\n803246569\\r\\n74071672\\r\\n564297240\\r\\n564297240\\r\\n112859448\\r\\n631676005\\r\\n34981358\\r\\n760353928\\r\\n751077091\\r\\n386033769\\r\\n130350127\\r\\n751077091\\r\\n760353928\\r\\n130350127\\r\\n760353928\\r\\n717461287\\r\\n581787919\\r\\n395008068\\r\\n91411082\\r\\n790016136\\r\\n412498747\\r\\n299639299\\r\\n631676005\\r\\n159856954\\r\\n959305308\\r\\n338578344\\r\\n717461287\\r\\n112859448\\r\\n814960179\\r\\n73920403\\r\\n169289172\\r\\n451437792\\r\\n807506815\\r\\n733586412\\r\\n243209575\\r\\n317129978\\r...']}, {'input': '49 50\\r\\n0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0\\r\\n2 3 2 3 4 2 1 1 1 1 1 1 3 1 2 3 2 4 1 2 2 1 1 2 4 3 2 4 1 2 1 1 2 3 1 3 3 2 2 1 4 3 4 1 3 3 4 1 3\\r\\n', 'output': ['136570933\\r\\n703978576\\r\\n136570933\\r\\n703978576\\r\\n273141866\\r\\n136570933\\r\\n567407643\\r\\n478951804\\r\\n567407643\\r\\n567407643\\r\\n478951804\\r\\n478951804\\r\\n703978576\\r\\n567407643\\r\\n136570933\\r\\n703978576\\r\\n136570933\\r\\n273141866\\r\\n567407643\\r\\n136570933\\r\\n136570933\\r\\n567407643\\r\\n567407643\\r\\n136570933\\r\\n273141866\\r\\n703978576\\r\\n957903608\\r\\n273141866\\r\\n567407643\\r\\n136570933\\r\\n567407643\\r\\n567407643\\r\\n136570933\\r\\n703978576\\r\\n567407643\\r\\n438611059\\r\\n438611059\\r\\n136570933\\r\\n136570933\\r\\n478951804\\r\\n273141866\\r\\n703978576\\r\\n917562863\\r\\n478951804\\r\\n703978576\\r\\n703978576\\r\\n27314...']}, {'input': '50 50\\r\\n0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\\r\\n1 9 24 8 8 11 21 11 8 5 16 32 31 15 29 14 16 20 5 18 5 10 31 23 21 4 4 20 20 11 1 4 4 15 9 14 5 30 13 16 32 27 19 10 19 24 21 1 21 15\\r\\n', 'output': ['475420905\\r\\n285810733\\r\\n429413837\\r\\n935878068\\r\\n808634181\\r\\n787710167\\r\\n1395475\\r\\n787710167\\r\\n808634181\\r\\n85801616\\r\\n619024009\\r\\n748779213\\r\\n762627113\\r\\n143603104\\r\\n896947114\\r\\n666426552\\r\\n619024009\\r\\n343206464\\r\\n380615819\\r\\n571621466\\r\\n380615819\\r\\n171603232\\r\\n132672278\\r\\n952237285\\r\\n1395475\\r\\n467939034\\r\\n467939034\\r\\n524218923\\r\\n343206464\\r\\n238408190\\r\\n616106935\\r\\n467939034\\r\\n467939034\\r\\n143603104\\r\\n285810733\\r\\n639542266\\r\\n85801616\\r\\n514809696\\r\\n23435331\\r\\n619024009\\r\\n748779213\\r\\n662977597\\r\\n725343882\\r\\n761231638\\r\\n48798018\\r\\n429413837\\r\\n959313399\\r\\n61...']}, {'input': '47 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39\\r\\n', 'output': ['573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n57345...']}, {'input': '48 50\\r\\n1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 1\\r\\n42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42\\r\\n', 'output': ['612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n27123...']}, {'input': '49 50\\r\\n0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0\\r\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\\r\\n', 'output': ['371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n37100...']}, {'input': '50 50\\r\\n0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\\r\\n33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33\\r\\n', 'output': ['677141055\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141055\\r\\n67714...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n982795629\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n83495...']}, {'input': '50 50\\r\\n1 0 1 0 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 1 0 1 0 1 0 1 1 0 0 1 1 0 0 1 0 0 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n99630...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n70582...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\r\\n', 'output': ['382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n798399400\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n38299...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\r\\n', 'output': ['459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n533798960\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n45908...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n273616393\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n31116...']}, {'input': '50 50\\r\\n0 0 0 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 0 0\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['123180764\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n12318...']}, {'input': '50 50\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['80661140\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51']}, {'input': '5 5\\r\\n0 1 0 0 1\\r\\n2 4 1 2 1\\r\\n', 'output': ['665717847\\r\\n333191345\\r\\n831981100\\r\\n665717847\\r\\n831981101']}, {'input': '20 20\\r\\n0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 0\\r\\n109 1 24 122 136 42 25 112 110 15 26 48 35 10 86 13 41 6 24 15\\r\\n', 'output': ['217595927\\r\\n149660176\\r\\n322657182\\r\\n290143118\\r\\n388896876\\r\\n296261274\\r\\n86540143\\r\\n507489163\\r\\n979723241\\r\\n248413934\\r\\n896431517\\r\\n195977977\\r\\n246884395\\r\\n633562669\\r\\n891842900\\r\\n947337935\\r\\n146601098\\r\\n897961056\\r\\n597111165\\r\\n451221827']}, {'input': '100 100\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n2360379 9167688 488710 6896065 5243867 11762954 673012 1669264 265550 10921726 9383074 9523863 13429215 3223202 5372988 8197773 13052301 6045370 18630475 23534272 14923100 17181531 1112172 24623774 16991041 2363652 10720874 7171147 1261895 13127315 454592 1510882 12229327 15445105 15722482 5467131 92...', 'output': ['19790585\\r\\n929149870\\r\\n158142558\\r\\n415179791\\r\\n770973301\\r\\n197788614\\r\\n662208363\\r\\n968610058\\r\\n711622366\\r\\n89060603\\r\\n49510939\\r\\n593110743\\r\\n227455934\\r\\n197704062\\r\\n89005665\\r\\n237287745\\r\\n266986632\\r\\n365753331\\r\\n365877936\\r\\n464762563\\r\\n879788817\\r\\n148424226\\r\\n355820880\\r\\n830466826\\r\\n583301068\\r\\n553505420\\r\\n59407792\\r\\n988431747\\r\\n889537165\\r\\n425125094\\r\\n978481639\\r\\n494195332\\r\\n98957157\\r\\n850143163\\r\\n474568826\\r\\n889578801\\r\\n691943729\\r\\n751249179\\r\\n29723781\\r\\n385464681\\r\\n494219413\\r\\n968727719\\r\\n622687463\\r\\n929103141\\r\\n89090024\\r\\n563393484\\r\\n29714966\\r\\n484...']}, {'input': '1000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['652684471\\r\\n652684471\\r\\n959809060\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n652684471\\r\\n614249178\\r\\n307124589\\r\\n307124589\\r\\n307124589\\r\\n959809060\\r\\n652684471\\r\\n652684471\\r\\n959809060\\r\\n307124589\\r\\n307124589\\r\\n614249178\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n307124589\\r\\n307124589\\r\\n652684471\\r\\n268689296\\r\\n307124589\\r\\n959809060\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n614249178\\r\\n959809060\\r\\n652684471\\r\\n652684471\\r\\n307124589\\r\\n614249178\\r\\n307124589\\r\\n652684471\\r\\n652684471\\r\\n959809060\\r\\n307124589\\r\\n959809060\\r\\n307124589\\r\\n307124589\\r\\n959809060\\r\\n307124589\\r\\n95980...']}, {'input': '50000 1000\\r\\n1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 1 0 0 0 1 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 0 0 1 1 1 0 0 1 0 0 0 0 1 0 1 0 0 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 1 1 1 1 0 1 0 1 1 0 0 1 0 1 0 0 1 0 0 1 0 1 1 0 1 0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0...', 'output': ['512182090\\r\\n641172382\\r\\n697325018\\r\\n818311552\\r\\n590906119\\r\\n461103680\\r\\n370418391\\r\\n653972733\\r\\n766040380\\r\\n237657896\\r\\n893425807\\r\\n807372188\\r\\n964959592\\r\\n319396135\\r\\n111079234\\r\\n137994713\\r\\n9663504\\r\\n92358638\\r\\n965938119\\r\\n98687680\\r\\n675026792\\r\\n279244742\\r\\n15543727\\r\\n479206408\\r\\n519670811\\r\\n684652624\\r\\n777078382\\r\\n554151828\\r\\n865485075\\r\\n937290032\\r\\n565154228\\r\\n221807985\\r\\n218937300\\r\\n112386612\\r\\n310142313\\r\\n986922988\\r\\n267227503\\r\\n40988675\\r\\n369434552\\r\\n763776107\\r\\n694666611\\r\\n182771968\\r\\n494768207\\r\\n633944759\\r\\n635638470\\r\\n761724538\\r\\n162219074\\r\\n...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['967977965\\r\\n983111159\\r\\n952844771\\r\\n937711577\\r\\n937711577\\r\\n771246443\\r\\n483715757\\r\\n892311995\\r\\n967977965\\r\\n801512831\\r\\n846912413\\r\\n831779219\\r\\n967977965\\r\\n786379637\\r\\n892311995\\r\\n604781309\\r\\n710713667\\r\\n952844771\\r\\n952844771\\r\\n937711577\\r\\n874943312\\r\\n120519101\\r\\n892311995\\r\\n589648115\\r\\n619914503\\r\\n665314085\\r\\n374637533\\r\\n892311995\\r\\n937711577\\r\\n892311995\\r\\n650180891\\r\\n771246443\\r\\n922578383\\r\\n877178801\\r\\n483715757\\r\\n892311995\\r\\n952844771\\r\\n619914503\\r\\n574514921\\r\\n62834123\\r\\n907445189\\r\\n816646025\\r\\n846912413\\r\\n816646025\\r\\n937711577\\r\\n756113249\\r\\n846912...']}, {'input': '200000 3000\\r\\n0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 0 1 0 0 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 1 1 0 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 ...', 'output': ['568390992\\r\\n182388528\\r\\n352385861\\r\\n315979953\\r\\n743372559\\r\\n632628120\\r\\n995395434\\r\\n506334569\\r\\n667771666\\r\\n453192833\\r\\n680429762\\r\\n407446046\\r\\n471154985\\r\\n147648615\\r\\n936047905\\r\\n830053040\\r\\n251214636\\r\\n602162072\\r\\n263562703\\r\\n990790012\\r\\n150217484\\r\\n82075059\\r\\n932318671\\r\\n687474214\\r\\n345881774\\r\\n771937952\\r\\n356541287\\r\\n15233024\\r\\n811478946\\r\\n737405100\\r\\n892805310\\r\\n176354033\\r\\n997083988\\r\\n281716722\\r\\n628262667\\r\\n556117647\\r\\n359954433\\r\\n926451677\\r\\n992018326\\r\\n134736321\\r\\n139309832\\r\\n510415929\\r\\n125029199\\r\\n222157092\\r\\n859462710\\r\\n16077301\\r\\n83159806...']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 3 2 1 3 2 1 1 2 1 1 2 2 4 2 1 5 2 3\\r\\n', 'output': ['249561090\\r\\n249561090\\r\\n748683270\\r\\n499122180\\r\\n249561090\\r\\n748683270\\r\\n499122180\\r\\n249561090\\r\\n249561090\\r\\n499122180\\r\\n249561090\\r\\n249561090\\r\\n499122180\\r\\n499122180\\r\\n7\\r\\n499122180\\r\\n249561090\\r\\n249561097\\r\\n499122180\\r\\n748683270']}, {'input': '20 30\\r\\n1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 1 3 1 4 1 5 1 1 2 3 1 1 3 3 2 2 1 2\\r\\n', 'output': ['902255482\\r\\n806266611\\r\\n902255482\\r\\n710277740\\r\\n902255482\\r\\n537377994\\r\\n902255482\\r\\n518299998\\r\\n902255482\\r\\n902255482\\r\\n806266611\\r\\n710277740\\r\\n902255482\\r\\n902255482\\r\\n710277740\\r\\n710277740\\r\\n806266611\\r\\n806266611\\r\\n902255482\\r\\n806266611']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\r\\n3 4 1 2 1 1 1 2 5 2 1 2 3 1 1 2 3 2 1 2\\r\\n', 'output': ['441078046\\r\\n920852179\\r\\n479774133\\r\\n959548266\\r\\n479774133\\r\\n479774133\\r\\n479774133\\r\\n959548266\\r\\n402381959\\r\\n263018694\\r\\n479774133\\r\\n959548266\\r\\n441078046\\r\\n479774133\\r\\n479774133\\r\\n959548266\\r\\n441078046\\r\\n959548266\\r\\n479774133\\r\\n959548266']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0\\r\\n1 1 3 2 3 1 2 2 3 2 2 2 2 2 2 3 3 1 1 2\\r\\n', 'output': ['550803098\\r\\n550803098\\r\\n654164941\\r\\n103361843\\r\\n654164941\\r\\n550803098\\r\\n103361843\\r\\n103361843\\r\\n654164941\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n276551708\\r\\n654164941\\r\\n654164941\\r\\n138275854\\r\\n550803098\\r\\n103361843']}, {'input': '20 30\\r\\n0 0 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1\\r\\n1 2 2 2 2 2 1 1 2 1 4 1 2 5 3 4 1 1 2 1\\r\\n', 'output': ['297511613\\r\\n595023226\\r\\n756311680\\r\\n756311680\\r\\n756311680\\r\\n595023226\\r\\n297511613\\r\\n378155840\\r\\n595023226\\r\\n297511613\\r\\n514379007\\r\\n297511613\\r\\n595023226\\r\\n892534847\\r\\n136223167\\r\\n514379007\\r\\n378155840\\r\\n297511613\\r\\n595023226\\r\\n378155840']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n765 451 7275 385 1686 78 554 114 1980 394 776 232 627 760 782 7 486 32 1100 1516\\r\\n', 'output': ['491636110\\r\\n498623506\\r\\n486651408\\r\\n182179980\\r\\n6989399\\r\\n10980766\\r\\n871467875\\r\\n92836839\\r\\n509106603\\r\\n951327263\\r\\n211628580\\r\\n83852758\\r\\n11480438\\r\\n618912260\\r\\n58897200\\r\\n820057743\\r\\n605934809\\r\\n183676993\\r\\n948333237\\r\\n341401087']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1\\r\\n779 1317 1275 234 857 1531 785 265 679 767 1994 11 918 1146 1807 71 813 245 3926 580\\r\\n', 'output': ['552990868\\r\\n90431251\\r\\n712871250\\r\\n952916426\\r\\n537881559\\r\\n151361542\\r\\n321464532\\r\\n89445141\\r\\n86037605\\r\\n17799187\\r\\n586392419\\r\\n241031286\\r\\n40642277\\r\\n699465709\\r\\n481837969\\r\\n920500985\\r\\n572000768\\r\\n195703359\\r\\n903238702\\r\\n911489090']}, {'input': '20 30\\r\\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n128 574 205 490 611 1294 283 1690 1466 1896 272 19 1020 5032 357 1500 36 1749 1202 176\\r\\n', 'output': ['389864218\\r\\n157345415\\r\\n537589523\\r\\n962131647\\r\\n753565149\\r\\n104281847\\r\\n378440811\\r\\n873692367\\r\\n690552162\\r\\n658861420\\r\\n578900375\\r\\n198248582\\r\\n923070965\\r\\n228091231\\r\\n572635926\\r\\n887695253\\r\\n795942304\\r\\n70748620\\r\\n510359933\\r\\n785624388']}, {'input': '20 30\\r\\n1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0\\r\\n61 849 320 1007 624 441 1332 3939 1176 718 419 634 657 914 858 882 1019 1567 62 2521\\r\\n', 'output': ['514012356\\r\\n393871659\\r\\n166092575\\r\\n569465276\\r\\n74319433\\r\\n306884170\\r\\n254628439\\r\\n656312237\\r\\n485609669\\r\\n216694535\\r\\n825782618\\r\\n110704962\\r\\n294216114\\r\\n131255421\\r\\n733108087\\r\\n613768340\\r\\n14181299\\r\\n610566194\\r\\n624888021\\r\\n887363731']}, {'input': '20 30\\r\\n0 1 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 0 0\\r\\n244 1901 938 1350 1010 763 318 2158 1645 534 1356 563 295 1449 2306 224 1302 195 639 810\\r\\n', 'output': ['300071414\\r\\n595185476\\r\\n40756239\\r\\n113904636\\r\\n440148868\\r\\n947268885\\r\\n456535325\\r\\n542868956\\r\\n183161324\\r\\n427608407\\r\\n61171180\\r\\n375813928\\r\\n43680359\\r\\n55509680\\r\\n30410255\\r\\n360521133\\r\\n535772284\\r\\n722568686\\r\\n663107799\\r\\n390646234']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n126679203 179924771 16639504 67055540 14134870 36407782 15024189 39367944 121531542 5400023 5834434 8539193 3686913 11287136 36370086 71808281 138206490 59846864 19052959 21446598\\r\\n', 'output': ['615913610\\r\\n488825486\\r\\n773371096\\r\\n742795989\\r\\n193664548\\r\\n323188752\\r\\n32686082\\r\\n709701410\\r\\n293733249\\r\\n161181348\\r\\n193396792\\r\\n354491196\\r\\n708550409\\r\\n644392716\\r\\n323187536\\r\\n646345011\\r\\n487479735\\r\\n1930544\\r\\n322628919\\r\\n966734748']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\\r\\n144831196 28660251 62050800 52660762 23189000 12771861 73096012 25119113 119648684 16011144 51600638 74708999 6312006 26945863 68746869 58112898 5070 19157938 74351320 60263898\\r\\n', 'output': ['132556548\\r\\n711988928\\r\\n6999755\\r\\n208709864\\r\\n320161276\\r\\n865416376\\r\\n320896979\\r\\n458941660\\r\\n671806481\\r\\n158009043\\r\\n351362956\\r\\n78248147\\r\\n927871852\\r\\n882014191\\r\\n988190329\\r\\n830735503\\r\\n1958329\\r\\n787106839\\r\\n942059547\\r\\n341315444']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0\\r\\n34095514 37349809 60555988 40280455 19504485 77297461 41415742 66290058 20631093 185280391 7151718 64927972 15611855 4317891 24600598 24588269 60808977 9108470 13217752 191209824\\r\\n', 'output': ['313283482\\r\\n21804622\\r\\n682197550\\r\\n361027027\\r\\n756362680\\r\\n151917509\\r\\n716108102\\r\\n131732975\\r\\n237068086\\r\\n731869119\\r\\n190595295\\r\\n847684643\\r\\n847454143\\r\\n501579235\\r\\n129856516\\r\\n246699402\\r\\n205385635\\r\\n639100445\\r\\n614421017\\r\\n227076269']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0\\r\\n9380933 34450681 12329733 7732927 73910078 16165679 149467043 56914401 21809098 36934833 71019254 168559440 12033996 40465391 7156881 3312348 37150678 130625432 42709585 66115911\\r\\n', 'output': ['813231583\\r\\n458087744\\r\\n445793615\\r\\n651101155\\r\\n484645642\\r\\n506668954\\r\\n896602699\\r\\n556862659\\r\\n145127201\\r\\n302005399\\r\\n558418033\\r\\n213871822\\r\\n57299634\\r\\n564466143\\r\\n767349204\\r\\n290138481\\r\\n12657688\\r\\n925337836\\r\\n827843024\\r\\n119362169']}, {'input': '20 30\\r\\n0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 0 1 0 1\\r\\n66166717 200301718 6725634 95379617 42880832 48874211 64912554 36809296 13248978 58406666 53142218 45080678 19902257 58554006 23570140 14484661 7589423 78746789 11072716 52395211\\r\\n', 'output': ['823107880\\r\\n742699237\\r\\n987770596\\r\\n549924308\\r\\n730188349\\r\\n913535291\\r\\n936423447\\r\\n122869154\\r\\n581668441\\r\\n749452306\\r\\n615454312\\r\\n176148736\\r\\n874336841\\r\\n897418997\\r\\n235568492\\r\\n24727530\\r\\n143875067\\r\\n15270097\\r\\n200154604\\r\\n356406452']}, {'input': '20 30\\r\\n0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661\\r\\n', 'output': ['76898501\\r\\n989279651\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803\\r\\n', 'output': ['504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981']}, {'input': '2000 300\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1...', 'output': ['527557309\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n819771096\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n762900831\\r\\n762900831\\r\\n292213787\\r\\n762900831\\r\\n527557309\\r\\n292213787\\r\\n762900831\\r\\n292213787\\r\\n527557309\\r\\n762900831\\r\\n292213787\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n819771096\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n292213787\\r\\n762900831\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n762900831\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n76290...', '126026410\\r\\n26532090\\r\\n89545496\\r\\n348227668\\r\\n407921745\\r\\n822476105\\r\\n815841057\\r\\n129343473\\r\\n683184486\\r\\n182403525\\r\\n971714643\\r\\n669922973\\r\\n195669656\\r\\n643389211\\r\\n596958847\\r\\n991612114\\r\\n26531426\\r\\n494147799\\r\\n587007825\\r\\n646703323\\r\\n192353616\\r\\n198987665\\r\\n116075186\\r\\n208935334\\r\\n451035127\\r\\n991612774\\r\\n630129722\\r\\n673238446\\r\\n965081504\\r\\n404604334\\r\\n762781111\\r\\n945182265\\r\\n613540647\\r\\n855640163\\r\\n540577710\\r\\n739563385\\r\\n185720640\\r\\n13265829\\r\\n460984258\\r\\n182404969\\r\\n988297561\\r\\n726301539\\r\\n301795019\\r\\n46434122\\r\\n882170987\\r\\n533948601\\r\\n729615799\\r...', '257947573\\r\\n350833899\\r\\n998147431\\r\\n282054341\\r\\n689337877\\r\\n802790225\\r\\n636332064\\r\\n611526839\\r\\n405886622\\r\\n295781176\\r\\n577883978\\r\\n211877869\\r\\n476761551\\r\\n471920813\\r\\n313000296\\r\\n8886097\\r\\n165109708\\r\\n231143899\\r\\n91489412\\r\\n972042214\\r\\n584771626\\r\\n771892731\\r\\n841370746\\r\\n736106038\\r\\n702414716\\r\\n368751476\\r\\n510452873\\r\\n253155296\\r\\n619859862\\r\\n14376831\\r\\n37833603\\r\\n94933236\\r\\n485696109\\r\\n96233228\\r\\n33691322\\r\\n403791251\\r\\n233190809\\r\\n447164049\\r\\n173248887\\r\\n549683390\\r\\n863382143\\r\\n717538465\\r\\n704413165\\r\\n210480955\\r\\n414122723\\r\\n922528686\\r\\n131321464\\r\\n40...', '723727157\\r\\n723727157\\r\\n898419922\\r\\n449209961\\r\\n898419922\\r\\n174692765\\r\\n723727157\\r\\n723727157\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n174692765\\r\\n723727157\\r\\n174692765\\r\\n723727157\\r\\n723727157\\r\\n623902726\\r\\n723727157\\r\\n723727157\\r\\n449209961\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n174692765\\r\\n723727157\\r\\n449209961\\r\\n349385530\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n623902726\\r\\n449209961\\r\\n449209961\\r\\n898419922\\r\\n898419922\\r\\n723727157\\r\\n449209961\\r\\n723727157\\r\\n723727157\\r\\n723727157\\r\\n174692765\\r\\n17469...', '449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n44954...', '228892698\\r\\n323233274\\r\\n31331450\\r\\n583630535\\r\\n530020844\\r\\n200867506\\r\\n762566026\\r\\n461091654\\r\\n900597519\\r\\n687197433\\r\\n232025843\\r\\n294169404\\r\\n557699810\\r\\n988325579\\r\\n966739790\\r\\n633933968\\r\\n156657250\\r\\n762046687\\r\\n338898999\\r\\n134379009\\r\\n458304735\\r\\n975792999\\r\\n343970609\\r\\n589896825\\r\\n188161813\\r\\n733675269\\r\\n708610109\\r\\n303222613\\r\\n919742615\\r\\n718701996\\r\\n235158988\\r\\n5746951\\r\\n831841442\\r\\n194601216\\r\\n389029319\\r\\n946729129\\r\\n65449819\\r\\n768486090\\r\\n213226973\\r\\n847160941\\r\\n853773457\\r\\n913476325\\r\\n847334054\\r\\n435334042\\r\\n997551901\\r\\n781018670\\r\\n847334054...', '280562572\\r\\n27981324\\r\\n930424996\\r\\n580126064\\r\\n653672085\\r\\n638998124\\r\\n192370181\\r\\n304975360\\r\\n268606553\\r\\n887998181\\r\\n902057157\\r\\n419880164\\r\\n965999027\\r\\n37849969\\r\\n655704617\\r\\n915939588\\r\\n290316653\\r\\n133632797\\r\\n916310849\\r\\n291352554\\r\\n315435621\\r\\n753760137\\r\\n617080324\\r\\n863678858\\r\\n719694519\\r\\n658038314\\r\\n750307459\\r\\n915589744\\r\\n530437886\\r\\n512060713\\r\\n157922588\\r\\n178644172\\r\\n5715303\\r\\n194942404\\r\\n852097346\\r\\n696406228\\r\\n891303846\\r\\n489183600\\r\\n892182349\\r\\n437838373\\r\\n390449491\\r\\n931412865\\r\\n520118475\\r\\n724052962\\r\\n624309238\\r\\n315358057\\r\\n157108994...']}, {'input': '2000 300\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...', 'output': ['510770111\\r\\n586552453\\r\\n521518610\\r\\n729496815\\r\\n925336870\\r\\n218501419\\r\\n210003823\\r\\n721775463\\r\\n410294316\\r\\n59753754\\r\\n445916833\\r\\n149785626\\r\\n397166471\\r\\n850878761\\r\\n322612228\\r\\n400512598\\r\\n962933991\\r\\n238352988\\r\\n481795882\\r\\n312429269\\r\\n230724223\\r\\n668360989\\r\\n538774766\\r\\n7521020\\r\\n782227455\\r\\n932947153\\r\\n766620629\\r\\n621895347\\r\\n948462500\\r\\n49828435\\r\\n465611859\\r\\n508795684\\r\\n965408363\\r\\n876217222\\r\\n27461852\\r\\n849541586\\r\\n889517699\\r\\n887546242\\r\\n347913548\\r\\n274305965\\r\\n434804057\\r\\n916014055\\r\\n822187302\\r\\n339400794\\r\\n604867800\\r\\n368133826\\r\\n799958426\\r...', '738045334\\r\\n159282105\\r\\n578763229\\r\\n578763229\\r\\n477846315\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n578763229\\r\\n738045334\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n578763229\\r\\n578763229\\r\\n578763229\\r\\n159282105\\r\\n578763229\\r\\n318564210\\r\\n578763229\\r\\n578763229\\r\\n159282105\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n159282105\\r\\n578763229\\r\\n159282105\\r\\n738045334\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n578763229\\r\\n738045334\\r\\n159282105\\r\\n738045334\\r\\n318564210\\r\\n73804...', '536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n53653...', '544865927\\r\\n362689553\\r\\n554047941\\r\\n662901553\\r\\n528631083\\r\\n623245685\\r\\n408599623\\r\\n383515404\\r\\n454842332\\r\\n96411147\\r\\n49835799\\r\\n979215047\\r\\n123957189\\r\\n241194187\\r\\n232012173\\r\\n930510515\\r\\n682596137\\r\\n940690446\\r\\n985602599\\r\\n592905181\\r\\n837226469\\r\\n463026429\\r\\n366947921\\r\\n259890854\\r\\n259558215\\r\\n423037922\\r\\n336940056\\r\\n739152127\\r\\n906091574\\r\\n273663875\\r\\n103463977\\r\\n218239152\\r\\n323832313\\r\\n988397061\\r\\n861312771\\r\\n369742383\\r\\n261687399\\r\\n997579075\\r\\n494364850\\r\\n668490477\\r\\n306599552\\r\\n268740229\\r\\n776878100\\r\\n482521724\\r\\n140192033\\r\\n252172746\\r\\n5279658...', '156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n52020618\\r\\n104041236\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n156061854\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n208082472\\r\\n208082472\\r\\n104041236\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n156061854\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n156061854\\r\\n52020618\\r...', '696015721\\r\\n931773777\\r\\n559486112\\r\\n847360916\\r\\n520999237\\r\\n330674091\\r\\n901387332\\r\\n817005789\\r\\n311776972\\r\\n19589756\\r\\n894472615\\r\\n644360731\\r\\n540588993\\r\\n761762342\\r\\n387103251\\r\\n712279217\\r\\n24626123\\r\\n870308250\\r\\n487286532\\r\\n403104550\\r\\n728773592\\r\\n564260282\\r\\n775161336\\r\\n604919022\\r\\n382066884\\r\\n133895986\\r\\n14584707\\r\\n323728056\\r\\n371794589\\r\\n189832070\\r\\n664212684\\r\\n375120849\\r\\n841631912\\r\\n277833388\\r\\n899970740\\r\\n674023221\\r\\n550168651\\r\\n205864687\\r\\n292155898\\r\\n484652909\\r\\n899246785\\r\\n641496229\\r\\n604195067\\r\\n520275282\\r\\n140579824\\r\\n200828320\\r\\n88943624...', '381761597\\r\\n749914123\\r\\n734966985\\r\\n451112838\\r\\n254375974\\r\\n408043495\\r\\n50147455\\r\\n317426730\\r\\n691474180\\r\\n297424671\\r\\n16576556\\r\\n950550287\\r\\n615062290\\r\\n508772409\\r\\n574097914\\r\\n755479957\\r\\n504073337\\r\\n232598914\\r\\n376960541\\r\\n704800943\\r\\n722703963\\r\\n943084953\\r\\n852281936\\r\\n604167024\\r\\n430991955\\r\\n691776511\\r\\n979477939\\r\\n916779041\\r\\n928976757\\r\\n9004809\\r\\n66623088\\r\\n160364271\\r\\n569831785\\r\\n753768578\\r\\n10158931\\r\\n829943628\\r\\n860984852\\r\\n599688760\\r\\n746963293\\r\\n90503616\\r\\n665117495\\r\\n843614199\\r\\n773004798\\r\\n52464119\\r\\n40225734\\r\\n193061049\\r\\n476979003\\r\\n451...']}, {'input': '2000 300\\r\\n1 1 1 0 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 1 0...', 'output': ['520991218\\r\\n260495609\\r\\n781486827\\r\\n281527765\\r\\n460706912\\r\\n260495609\\r\\n43738083\\r\\n819065206\\r\\n639886059\\r\\n260495609\\r\\n639886059\\r\\n520991218\\r\\n520991218\\r\\n639886059\\r\\n819065206\\r\\n520991218\\r\\n639886059\\r\\n819065206\\r\\n639886059\\r\\n43738083\\r\\n781486827\\r\\n260495609\\r\\n520991218\\r\\n781486827\\r\\n819065206\\r\\n639886059\\r\\n281527765\\r\\n819065206\\r\\n460706912\\r\\n260495609\\r\\n639886059\\r\\n260495609\\r\\n304233692\\r\\n781486827\\r\\n260495609\\r\\n260495609\\r\\n43738083\\r\\n260495609\\r\\n639886059\\r\\n260495609\\r\\n819065206\\r\\n520991218\\r\\n520991218\\r\\n639886059\\r\\n639886059\\r\\n460706912\\r\\n26049560...']}, {'input': '2000 300\\r\\n1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 1 1 0 1 0 1 0 0 0 1 1 0 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 1 0 0 1 0 1 0 1 0 1 0 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 1 1 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1...', 'output': ['967309723\\r\\n488979754\\r\\n894231131\\r\\n227079250\\r\\n800673042\\r\\n803173636\\r\\n302660701\\r\\n49359452\\r\\n361182334\\r\\n613837368\\r\\n903714465\\r\\n783149148\\r\\n772569418\\r\\n153771444\\r\\n347053203\\r\\n383800081\\r\\n305903959\\r\\n591371347\\r\\n504143617\\r\\n554819601\\r\\n711091639\\r\\n993123371\\r\\n662636534\\r\\n799549517\\r\\n755795853\\r\\n257472564\\r\\n749178682\\r\\n44165553\\r\\n754769201\\r\\n677121173\\r\\n77251408\\r\\n825363165\\r\\n94378162\\r\\n905743915\\r\\n555723948\\r\\n401067893\\r\\n365827394\\r\\n778249947\\r\\n641361749\\r\\n657808321\\r\\n76885722\\r\\n205390090\\r\\n357248290\\r\\n762413024\\r\\n471855369\\r\\n953559875\\r\\n452364595\\r...']}, {'input': '2000 300\\r\\n1 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 0 1 0 0 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 1 0 1 0 1 0 0 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 0 0 1 0 0 0 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 0 0 1 1 0 1...', 'output': ['353668818\\r\\n180952778\\r\\n350267066\\r\\n85276305\\r\\n498935339\\r\\n570367769\\r\\n947922902\\r\\n520199571\\r\\n977020824\\r\\n311854081\\r\\n369942273\\r\\n709342799\\r\\n241020253\\r\\n306637091\\r\\n574362410\\r\\n924893301\\r\\n259050261\\r\\n881412462\\r\\n505397126\\r\\n426307000\\r\\n368001455\\r\\n187561592\\r\\n507502858\\r\\n422600821\\r\\n840032307\\r\\n570586935\\r\\n847077944\\r\\n633577890\\r\\n21924242\\r\\n429617104\\r\\n40169532\\r\\n200231692\\r\\n301247265\\r\\n526536756\\r\\n236599712\\r\\n449404280\\r\\n482154139\\r\\n74891321\\r\\n744845075\\r\\n202529472\\r\\n497487224\\r\\n750227627\\r\\n791509388\\r\\n365064757\\r\\n435991351\\r\\n911452637\\r\\n230155510...']}, {'input': '200000 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n83030...', '746090912\\r\\n987874942\\r\\n493937471\\r\\n493937471\\r\\n241784030\\r\\n493937471\\r\\n746090912\\r\\n241784030\\r\\n746090912\\r\\n987874942\\r\\n493937471\\r\\n241784030\\r\\n493937471\\r\\n493937471\\r\\n987874942\\r\\n493937471\\r\\n987874942\\r\\n746090912\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n493937471\\r\\n493937471\\r\\n483568060\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n241784030\\r\\n746090912\\r\\n746090912\\r\\n987874942\\r\\n493937471\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n746090912\\r\\n241784030\\r\\n493937471\\r\\n746090912\\r\\n241784030\\r\\n493937471\\r\\n49393...', '249477932\\r\\n163324885\\r\\n619370540\\r\\n591761649\\r\\n381202278\\r\\n400495236\\r\\n181619933\\r\\n483987183\\r\\n768059384\\r\\n853879792\\r\\n648642618\\r\\n525566838\\r\\n955999425\\r\\n754753895\\r\\n409143808\\r\\n470016419\\r\\n322658124\\r\\n100123809\\r\\n150684670\\r\\n101454359\\r\\n634006577\\r\\n229187060\\r\\n466357410\\r\\n35592186\\r\\n769389935\\r\\n547853534\\r\\n85820409\\r\\n289061762\\r\\n201245531\\r\\n244821008\\r\\n910095485\\r\\n40581744\\r\\n910760760\\r\\n733797749\\r\\n450390828\\r\\n440079067\\r\\n811634863\\r\\n573799237\\r\\n619703176\\r\\n460037301\\r\\n90144696\\r\\n512261348\\r\\n656958547\\r\\n636002401\\r\\n271099351\\r\\n573799237\\r\\n748766427...', '337242164\\r\\n175981139\\r\\n705993748\\r\\n951319188\\r\\n208728534\\r\\n926966446\\r\\n894219051\\r\\n142402527\\r\\n394342301\\r\\n747271382\\r\\n832167014\\r\\n925728471\\r\\n915824671\\r\\n371227534\\r\\n265828671\\r\\n404110515\\r\\n737503168\\r\\n526705442\\r\\n275596885\\r\\n225789012\\r\\n140757794\\r\\n548311062\\r\\n834642964\\r\\n960680644\\r\\n982693022\\r\\n298440480\\r\\n97139796\\r\\n357880981\\r\\n649164783\\r\\n74025029\\r\\n270644985\\r\\n37970467\\r\\n945129313\\r\\n422137796\\r\\n739979118\\r\\n389390401\\r\\n815106536\\r\\n311922619\\r\\n858860120\\r\\n411267193\\r\\n976503147\\r\\n835880939\\r\\n13346553\\r\\n661137775\\r\\n978979097\\r\\n527943417\\r\\n707231723...', '895547075\\r\\n50488475\\r\\n972784199\\r\\n737802803\\r\\n134349212\\r\\n579628449\\r\\n120501272\\r\\n588315405\\r\\n599840552\\r\\n714837825\\r\\n262849659\\r\\n448375127\\r\\n596572279\\r\\n172710075\\r\\n108458976\\r\\n317466571\\r\\n845058600\\r\\n348860806\\r\\n506174996\\r\\n501269960\\r\\n76979425\\r\\n561049607\\r\\n754144168\\r\\n500496863\\r\\n56852638\\r\\n736253107\\r\\n323142953\\r\\n631062404\\r\\n987492303\\r\\n864152840\\r\\n155163780\\r\\n16686131\\r\\n341291713\\r\\n213479047\\r\\n623578627\\r\\n815212310\\r\\n74571316\\r\\n580316230\\r\\n11782846\\r\\n9977202\\r\\n56164857\\r\\n453363728\\r\\n283577160\\r\\n112674480\\r\\n770828548\\r\\n441236116\\r\\n475210843\\r\\n997...', '743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n74369...', '743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n74369...', '34499784\\r\\n374247743\\r\\n362747815\\r\\n297560637\\r\\n574121750\\r\\n869682055\\r\\n449997441\\r\\n458622387\\r\\n930182193\\r\\n940681955\\r\\n376622642\\r\\n28249737\\r\\n622933686\\r\\n969931858\\r\\n400622664\\r\\n671871138\\r\\n811807848\\r\\n331623096\\r\\n223311188\\r\\n305748258\\r\\n203623639\\r\\n439935004\\r\\n185436339\\r\\n481622243\\r\\n517559518\\r\\n585621678\\r\\n66124586\\r\\n679996001\\r\\n894244918\\r\\n45999712\\r\\n243436062\\r\\n887057463\\r\\n525184298\\r\\n990056732\\r\\n154311620\\r\\n198873841\\r\\n227623661\\r\\n430809975\\r\\n12937419\\r\\n194561368\\r\\n140374035\\r\\n610059025\\r\\n715495951\\r\\n677058261\\r\\n731308352\\r\\n710120554\\r\\n143749100\\r...', '743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n74369...', '563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n56365...', '948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n94886...', '616415891\\r\\n743692045\\r\\n743692045\\r\\n616415891\\r\\n489139737\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n870968199\\r\\n616415891\\r\\n743692045\\r\\n616415891\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n489139737\\r\\n870968199\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n616415891\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n361863583\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n870968199\\r\\n616415891\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n107311275\\r\\n743692045\\r\\n870968199\\r\\n870968199\\r\\n87096...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['534464893\\r\\n70685433\\r\\n141370866\\r\\n605150326\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n605150326\\r\\n605150326\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n141370866\\r\\n70685433\\r\\n534464893\\r\\n141370866\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n605150326\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n...', '434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n43434...', '479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n47934...', '983882738\\r\\n723119688\\r\\n459823065\\r\\n556901314\\r\\n70724963\\r\\n266615302\\r\\n669551615\\r\\n128160584\\r\\n374823721\\r\\n636048406\\r\\n410086236\\r\\n880577836\\r\\n119251355\\r\\n80183061\\r\\n594759171\\r\\n13376576\\r\\n422252375\\r\\n548479185\\r\\n235532967\\r\\n555429175\\r\\n697576973\\r\\n194705367\\r\\n244991065\\r\\n696417466\\r\\n575930209\\r\\n911572937\\r\\n690252582\\r\\n173917166\\r\\n286156762\\r\\n203240195\\r\\n371392343\\r\\n232850391\\r\\n10955702\\r\\n65159878\\r\\n81942367\\r\\n928468125\\r\\n286592932\\r\\n499727395\\r\\n803102816\\r\\n81855133\\r\\n235158566\\r\\n824901521\\r\\n295851097\\r\\n716980269\\r\\n913157775\\r\\n996485047\\r\\n807919099\\r\\n4...', '535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n53563...', '483259721\\r\\n483259721\\r\\n451534810\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n709027126\\r\\n483259721\\r\\n966519442\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n740752037\\r\\n225767405\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n451534810\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n966519442\\r\\n225767405\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n225767405\\r\\n740752037\\r\\n483259721\\r\\n225767405\\r\\n740752037\\r\\n74075...', '365182673\\r\\n453133330\\r\\n646237559\\r\\n383557795\\r\\n419033749\\r\\n340436101\\r\\n116418016\\r\\n678527788\\r\\n945667567\\r\\n79030627\\r\\n870994872\\r\\n815130278\\r\\n370916978\\r\\n677151415\\r\\n467150520\\r\\n882361399\\r\\n890542201\\r\\n249936864\\r\\n39196741\\r\\n947579002\\r\\n636680384\\r\\n295607138\\r\\n675342063\\r\\n808325849\\r\\n29104504\\r\\n25918779\\r\\n103037971\\r\\n291784268\\r\\n445589673\\r\\n215200138\\r\\n658241231\\r\\n704446567\\r\\n478414964\\r\\n374535682\\r\\n193639291\\r\\n871632017\\r\\n186732779\\r\\n291784268\\r\\n138616008\\r\\n491795009\\r\\n475331322\\r\\n689894315\\r\\n243667497\\r\\n853256895\\r\\n714003742\\r\\n774124185\\r\\n363271238...', '985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n98542...', '155925765\\r\\n487818429\\r\\n547205425\\r\\n780737503\\r\\n891037610\\r\\n578930143\\r\\n825301017\\r\\n138861660\\r\\n552655747\\r\\n896394864\\r\\n881431780\\r\\n167493014\\r\\n480546290\\r\\n147428613\\r\\n697960072\\r\\n762448385\\r\\n870903408\\r\\n251332589\\r\\n614973238\\r\\n898519152\\r\\n581333635\\r\\n223833180\\r\\n271513325\\r\\n829479792\\r\\n130457576\\r\\n488950374\\r\\n631091534\\r\\n259853008\\r\\n403102846\\r\\n643511524\\r\\n491144463\\r\\n683066789\\r\\n279987210\\r\\n916459265\\r\\n497517327\\r\\n461078693\\r\\n513286618\\r\\n11055375\\r\\n943036132\\r\\n453946156\\r\\n770116063\\r\\n285321197\\r\\n954649915\\r\\n686299755\\r\\n305432132\\r\\n314991428\\r\\n917591...', '979248391\\r\\n467909552\\r\\n175190733\\r\\n498757573\\r\\n436634896\\r\\n282945489\\r\\n831422982\\r\\n525572199\\r\\n608769567\\r\\n291190788\\r\\n623553625\\r\\n907228321\\r\\n19120025\\r\\n908756352\\r\\n635157558\\r\\n367120190\\r\\n895500325\\r\\n121864053\\r\\n271093430\\r\\n805461626\\r\\n799170993\\r\\n621048261\\r\\n209948086\\r\\n214834751\\r\\n291190788\\r\\n88084033\\r\\n941559039\\r\\n256433435\\r\\n462472189\\r\\n261870798\\r\\n718354926\\r\\n62673375\\r\\n599120300\\r\\n207566785\\r\\n71042737\\r\\n669914911\\r\\n844128311\\r\\n594233635\\r\\n758976277\\r\\n186492094\\r\\n238841441\\r\\n949377703\\r\\n280013490\\r\\n621474896\\r\\n309333480\\r\\n356245464\\r\\n817740320...']}, {'input': '200000 3000\\r\\n0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 1 1 1 0 1 1 0 0 1 0 0 0 1 1 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 1 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 1 0 0 1 0 0 0 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 0 0 1 0 0 0 1 1 0 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 ...', 'output': ['684128648\\r\\n534537704\\r\\n70831055\\r\\n605368759\\r\\n605368759\\r\\n534537704\\r\\n55897238\\r\\n70831055\\r\\n534537704\\r\\n534537704\\r\\n605368759\\r\\n684128648\\r\\n55897238\\r\\n740025886\\r\\n534537704\\r\\n70831055\\r\\n70831055\\r\\n684128648\\r\\n70831055\\r\\n684128648\\r\\n425910181\\r\\n70831055\\r\\n605368759\\r\\n534537704\\r\\n534537704\\r\\n605368759\\r\\n684128648\\r\\n70831055\\r\\n684128648\\r\\n605368759\\r\\n70831055\\r\\n370012943\\r\\n370012943\\r\\n370012943\\r\\n605368759\\r\\n70831055\\r\\n534537704\\r\\n70831055\\r\\n370012943\\r\\n141662110\\r\\n534537704\\r\\n370012943\\r\\n370012943\\r\\n70831055\\r\\n684128648\\r\\n370012943\\r\\n684128648\\r\\n5345377...']}, {'input': '200000 3000\\r\\n1 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 1 1 0 1 1 1 1 0 0 1 0 1 0 0 1 0 1 1 0 1 0 1 1 0 0 1 1 0 0 1 0 1 0 1 1 0 0 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 1 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 0 1 0 0 0 1 1 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ...', 'output': ['331265679\\r\\n248932636\\r\\n609274319\\r\\n474255977\\r\\n102055814\\r\\n485644908\\r\\n626044190\\r\\n431097835\\r\\n319780031\\r\\n47044666\\r\\n687413158\\r\\n404806427\\r\\n125126455\\r\\n282606731\\r\\n307585492\\r\\n584577913\\r\\n604465119\\r\\n366599088\\r\\n490459582\\r\\n11853006\\r\\n753101524\\r\\n749114305\\r\\n816668970\\r\\n25465595\\r\\n942396724\\r\\n387086401\\r\\n558715961\\r\\n470999022\\r\\n908318742\\r\\n535377307\\r\\n712631115\\r\\n501708418\\r\\n465458062\\r\\n906281962\\r\\n309027298\\r\\n466289495\\r\\n88346508\\r\\n21689911\\r\\n46580591\\r\\n650678352\\r\\n435081076\\r\\n202663995\\r\\n554027989\\r\\n280201535\\r\\n865380747\\r\\n516485969\\r\\n226759102\\r\\n...']}, {'input': '200000 3000\\r\\n0 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 ...', 'output': ['702758762\\r\\n222668721\\r\\n663197048\\r\\n675792950\\r\\n759259581\\r\\n332486741\\r\\n171127920\\r\\n414458191\\r\\n349087590\\r\\n847918503\\r\\n522872021\\r\\n540727038\\r\\n813504457\\r\\n278812310\\r\\n949679696\\r\\n784095578\\r\\n918470307\\r\\n482110597\\r\\n535952792\\r\\n109088580\\r\\n967478176\\r\\n268019403\\r\\n523209396\\r\\n80286422\\r\\n566422901\\r\\n182974112\\r\\n166764579\\r\\n716767192\\r\\n203579125\\r\\n975507557\\r\\n770975186\\r\\n884777286\\r\\n433828625\\r\\n891459014\\r\\n519109900\\r\\n907459392\\r\\n591988953\\r\\n479131884\\r\\n989822907\\r\\n846824242\\r\\n304414023\\r\\n13755521\\r\\n6710438\\r\\n355497544\\r\\n718926904\\r\\n912736930\\r\\n173287893...']}, {'input': '10 3000\\r\\n1 1 1 1 1 0 0 0 1 1\\r\\n6 22 5 2 4 15 4 7 31 4\\r\\n', 'output': ['561258918\\r\\n61460660\\r\\n467715765\\r\\n187086306\\r\\n374172612\\r\\n538110090\\r\\n143496024\\r\\n251118042\\r\\n903349037\\r\\n374172612']}, {'input': '100 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n10 8 1 9 7 5 12 9 15 7 16 5 17 5 17 21 11 3 4 4 30 17 3 84 12 30 2 8 2 2 22 24 15 11 15 13 7 17 1 12 8 4 3 6 5 15 1 3 4 2 27 3 11 11 3 3 3 5 14 2 5 13 6 2 6 5 6 19 3 16 4 12 11 2 2 3 25 14 6 11 22 4 10 32 9 19 14 2 2 3 4 3 2 5 18 14 2 7 3 8\\r\\n', 'output': ['23677346\\r\\n418239618\\r\\n800963217\\r\\n220958482\\r\\n615520754\\r\\n11838673\\r\\n627359427\\r\\n220958482\\r\\n35516019\\r\\n615520754\\r\\n836479236\\r\\n11838673\\r\\n639198100\\r\\n11838673\\r\\n639198100\\r\\n848317909\\r\\n824640563\\r\\n406400945\\r\\n209119809\\r\\n209119809\\r\\n71032038\\r\\n639198100\\r\\n406400945\\r\\n398538577\\r\\n627359427\\r\\n71032038\\r\\n603682081\\r\\n418239618\\r\\n19778681\\r\\n603682081\\r\\n651036773\\r\\n256474501\\r\\n35516019\\r\\n824640563\\r\\n35516019\\r\\n430078291\\r\\n615520754\\r\\n639198100\\r\\n800963217\\r\\n627359427\\r\\n418239618\\r\\n209119809\\r\\n406400945\\r\\n812801890\\r\\n11838673\\r\\n35516019\\r\\n800963217\\r\\n406400...']}, {'input': '1000 3000\\r\\n0 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 ...', 'output': ['984664827\\r\\n971085301\\r\\n837724678\\r\\n984664827\\r\\n225735001\\r\\n971085301\\r\\n984664827\\r\\n611989677\\r\\n65215326\\r\\n611989677\\r\\n837724678\\r\\n984664827\\r\\n225735001\\r\\n984664827\\r\\n971085301\\r\\n225735001\\r\\n225735001\\r\\n984664827\\r\\n971085301\\r\\n957505775\\r\\n971085301\\r\\n984664827\\r\\n943926249\\r\\n225735001\\r\\n971085301\\r\\n611989677\\r\\n837724678\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n984664827\\r\\n971085301\\r\\n943926249\\r\\n943926249\\r\\n611989677\\r\\n971085301\\r\\n984664827\\r\\n957505775\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n971085301\\r\\n225735001\\r\\n837724678\\r\\n611989...']}, {'input': '1000 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n5\\r\\n5\\r\\n499122184\\r\\n10\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122184\\r\\n5\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122184\\r\\n5...']}, {'input': '199990 3000\\r\\n1 0 0 1 0 1 1 0 0 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 0 1 1 0 0 1 0 0 1 1 0 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 0 0 1 0 1 0 ...', 'output': ['646452156\\r\\n960868656\\r\\n118518242\\r\\n184272685\\r\\n747024268\\r\\n964037469\\r\\n951101180\\r\\n377347150\\r\\n254993892\\r\\n11139421\\r\\n70322210\\r\\n525571057\\r\\n926475930\\r\\n63428346\\r\\n756018063\\r\\n626131891\\r\\n466781454\\r\\n656042659\\r\\n69698706\\r\\n359694160\\r\\n226813875\\r\\n191435355\\r\\n897230167\\r\\n851910875\\r\\n872964055\\r\\n741910138\\r\\n963242791\\r\\n859073545\\r\\n501205753\\r\\n252469038\\r\\n77916365\\r\\n622358084\\r\\n867246600\\r\\n381481659\\r\\n57646031\\r\\n326439010\\r\\n37314488\\r\\n267966014\\r\\n386173645\\r\\n224253188\\r\\n693822089\\r\\n652063749\\r\\n209704954\\r\\n936775840\\r\\n675102836\\r\\n581756207\\r\\n18809453\\r\\n84...']}, {'input': '199991 3000\\r\\n1 0 1 0 0 1 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 ...', 'output': ['576788803\\r\\n851579816\\r\\n464431389\\r\\n925910539\\r\\n240339104\\r\\n317886519\\r\\n67707478\\r\\n262772669\\r\\n221595177\\r\\n612937974\\r\\n736137684\\r\\n268724388\\r\\n68361383\\r\\n847191682\\r\\n557301933\\r\\n913346054\\r\\n648280739\\r\\n171995554\\r\\n235269506\\r\\n530242292\\r\\n148650394\\r\\n908499525\\r\\n304200830\\r\\n721371958\\r\\n474031015\\r\\n817280262\\r\\n825707282\\r\\n465373250\\r\\n245622892\\r\\n341231679\\r\\n845696111\\r\\n853007293\\r\\n68361383\\r\\n915771149\\r\\n987480726\\r\\n726171771\\r\\n707992711\\r\\n478931968\\r\\n847890178\\r\\n687514833\\r\\n732279394\\r\\n927044872\\r\\n856499296\\r\\n862463110\\r\\n77307104\\r\\n484794642\\r\\n615409785...']}, {'input': '199992 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 ...', 'output': ['944579271\\r\\n815447430\\r\\n121435610\\r\\n89385736\\r\\n85360285\\r\\n56962924\\r\\n289585947\\r\\n344015172\\r\\n223771444\\r\\n652123221\\r\\n591303048\\r\\n4248454\\r\\n306743823\\r\\n968709911\\r\\n670850059\\r\\n672191876\\r\\n417953645\\r\\n24521845\\r\\n946915719\\r\\n777789018\\r\\n60838440\\r\\n839186865\\r\\n79733480\\r\\n134590444\\r\\n755625163\\r\\n504520550\\r\\n752912502\\r\\n172585260\\r\\n452314215\\r\\n812559060\\r\\n865646468\\r\\n584772439\\r\\n717751255\\r\\n344015172\\r\\n217454686\\r\\n551825\\r\\n985330789\\r\\n733776192\\r\\n951920831\\r\\n371680341\\r\\n447096882\\r\\n332238689\\r\\n688429333\\r\\n390729899\\r\\n623930596\\r\\n453096625\\r\\n858100172\\r\\n14638...']}, {'input': '199993 3000\\r\\n1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['189220773\\r\\n219328456\\r\\n767760662\\r\\n806220888\\r\\n797979411\\r\\n545740580\\r\\n219383989\\r\\n75297991\\r\\n40929720\\r\\n935115229\\r\\n532004785\\r\\n529257626\\r\\n49282263\\r\\n789793467\\r\\n545740580\\r\\n962586819\\r\\n485358615\\r\\n471678353\\r\\n907699172\\r\\n803473729\\r\\n408604762\\r\\n963918788\\r\\n35602001\\r\\n847372740\\r\\n611561330\\r\\n216636830\\r\\n729467035\\r\\n298885001\\r\\n73784562\\r\\n95928433\\r\\n405857603\\r\\n312620796\\r\\n126147182\\r\\n518268990\\r\\n353717115\\r\\n501841569\\r\\n512830205\\r\\n685568024\\r\\n252294364\\r\\n962586819\\r\\n477172671\\r\\n252637898\\r\\n246744513\\r\\n434391811\\r\\n52084955\\r\\n807039242\\r\\n414043547\\r\\n2...']}, {'input': '199994 3000\\r\\n0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 1 0 0 1 1 0 0 1 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 0 1 0 1 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 ...', 'output': ['336654971\\r\\n732535\\r\\n815250185\\r\\n326444659\\r\\n729180253\\r\\n129624924\\r\\n358796707\\r\\n444866639\\r\\n754810869\\r\\n843551608\\r\\n256744726\\r\\n70820418\\r\\n164515107\\r\\n207034102\\r\\n575220043\\r\\n87535002\\r\\n682699176\\r\\n43984065\\r\\n797070531\\r\\n806189316\\r\\n815982720\\r\\n704840912\\r\\n900587582\\r\\n585042405\\r\\n921264248\\r\\n459213067\\r\\n352526818\\r\\n883140463\\r\\n815669240\\r\\n511377385\\r\\n785483692\\r\\n225259507\\r\\n505565288\\r\\n832271475\\r\\n46481077\\r\\n860266192\\r\\n560703064\\r\\n99613410\\r\\n150730663\\r\\n410704936\\r\\n704840912\\r\\n915837096\\r\\n953960881\\r\\n968477860\\r\\n589004487\\r\\n187389378\\r\\n517884662\\r\\n93...']}, {'input': '199995 3000\\r\\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 ...', 'output': ['662762303\\r\\n929872487\\r\\n874878479\\r\\n456275271\\r\\n715183658\\r\\n400437516\\r\\n521458497\\r\\n76578537\\r\\n927594887\\r\\n897280874\\r\\n185062970\\r\\n530346011\\r\\n941267798\\r\\n71793140\\r\\n377419134\\r\\n675559304\\r\\n591654880\\r\\n719511098\\r\\n599406031\\r\\n622421976\\r\\n250476393\\r\\n605557988\\r\\n772627865\\r\\n133099572\\r\\n594620634\\r\\n848508553\\r\\n404542070\\r\\n193952921\\r\\n255031593\\r\\n40568087\\r\\n771704693\\r\\n756662785\\r\\n869935052\\r\\n847369753\\r\\n36238210\\r\\n358730629\\r\\n164552385\\r\\n938076721\\r\\n767600139\\r\\n458579571\\r\\n693757159\\r\\n843723156\\r\\n975014694\\r\\n858992824\\r\\n955398666\\r\\n756432588\\r\\n585958443...']}, {'input': '199996 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 ...', 'output': ['670876956\\r\\n282683795\\r\\n377011834\\r\\n803395587\\r\\n676385588\\r\\n935914218\\r\\n718622147\\r\\n536417373\\r\\n403228588\\r\\n282205508\\r\\n715874782\\r\\n593703261\\r\\n180906172\\r\\n125082949\\r\\n159213672\\r\\n79114647\\r\\n828013417\\r\\n919922217\\r\\n269261194\\r\\n677998414\\r\\n539957249\\r\\n116020539\\r\\n719578721\\r\\n947915860\\r\\n933837007\\r\\n911830283\\r\\n475864127\\r\\n320232037\\r\\n207122926\\r\\n915004383\\r\\n801796663\\r\\n301300804\\r\\n489000308\\r\\n929955103\\r\\n208735752\\r\\n169096397\\r\\n431236133\\r\\n485282467\\r\\n675865595\\r\\n711172563\\r\\n31711484\\r\\n780760415\\r\\n330893371\\r\\n339149368\\r\\n107928605\\r\\n630648538\\r\\n1150500...']}, {'input': '199997 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['509540793\\r\\n120976575\\r\\n549866318\\r\\n103886913\\r\\n46471726\\r\\n486304930\\r\\n356783524\\r\\n889560180\\r\\n199228995\\r\\n889560180\\r\\n825998792\\r\\n728258080\\r\\n40325525\\r\\n723460820\\r\\n584045642\\r\\n849234655\\r\\n398457990\\r\\n44073096\\r\\n355733835\\r\\n753892573\\r\\n259042812\\r\\n526630455\\r\\n218717287\\r\\n69707589\\r\\n445979405\\r\\n843088454\\r\\n549866318\\r\\n900503641\\r\\n915194673\\r\\n110033114\\r\\n233408319\\r\\n632915998\\r\\n443580775\\r\\n883413979\\r\\n356783524\\r\\n63561388\\r\\n314059369\\r\\n628118738\\r\\n543720117\\r\\n420344912\\r\\n705022217\\r\\n89195881\\r\\n535175286\\r\\n987300892\\r\\n72106219\\r\\n543720117\\r\\n785673267\\r\\n2...', '791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n79153...']}, {'input': '199998 3000\\r\\n1 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 1 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 1 1 1 0 0 1 0 1 0 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 1 0 0 1 0 0 1 1 1 1 0 0 1 1 0 0 ...', 'output': ['728321596\\r\\n638956912\\r\\n987568459\\r\\n799092377\\r\\n597086927\\r\\n782772546\\r\\n770287170\\r\\n255784080\\r\\n699516389\\r\\n256762390\\r\\n656812813\\r\\n513524780\\r\\n416026596\\r\\n285567597\\r\\n279669471\\r\\n136357125\\r\\n790734343\\r\\n479381626\\r\\n898668365\\r\\n822581531\\r\\n870855601\\r\\n827897584\\r\\n408064799\\r\\n759611276\\r\\n235779603\\r\\n990282556\\r\\n571135194\\r\\n279669471\\r\\n311516659\\r\\n287631268\\r\\n607109724\\r\\n822559637\\r\\n639460200\\r\\n369129744\\r\\n111968446\\r\\n157186402\\r\\n495141278\\r\\n652212868\\r\\n143815634\\r\\n367752526\\r\\n165008822\\r\\n592117981\\r\\n400788425\\r\\n793754430\\r\\n966900453\\r\\n2484473\\r\\n9089752...', '964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n96492...']}, {'input': '199999 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 ...', 'output': ['659992102\\r\\n43534688\\r\\n613251861\\r\\n688791385\\r\\n969096633\\r\\n244584877\\r\\n407865304\\r\\n186960964\\r\\n243317864\\r\\n549539932\\r\\n991833247\\r\\n262687380\\r\\n543128826\\r\\n494636937\\r\\n223625258\\r\\n610530943\\r\\n823731817\\r\\n148706567\\r\\n321255216\\r\\n793342431\\r\\n574351284\\r\\n666241663\\r\\n731705240\\r\\n759075965\\r\\n574351284\\r\\n267483036\\r\\n533214424\\r\\n650213898\\r\\n38254397\\r\\n748651581\\r\\n341432457\\r\\n458755021\\r\\n851102542\\r\\n458618823\\r\\n777016923\\r\\n879306339\\r\\n831596828\\r\\n223948348\\r\\n334458632\\r\\n214654779\\r\\n250672893\\r\\n599162636\\r\\n601914362\\r\\n888897651\\r\\n620419998\\r\\n546470577\\r\\n2155987...', '959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n550771238\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n550771238\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n95962...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 ...', 'output': ['893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n917300718\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n89340...', '777798569\\r\\n231173131\\r\\n230887037\\r\\n573284389\\r\\n184819702\\r\\n389069614\\r\\n336642733\\r\\n374568480\\r\\n855432105\\r\\n25206655\\r\\n4356888\\r\\n605147597\\r\\n575616793\\r\\n296362756\\r\\n407873071\\r\\n112177054\\r\\n213967495\\r\\n814007752\\r\\n159623960\\r\\n280717246\\r\\n614422648\\r\\n758973286\\r\\n52239134\\r\\n765343745\\r\\n464084652\\r\\n192059356\\r\\n447272940\\r\\n617899428\\r\\n590679202\\r\\n570104616\\r\\n874554395\\r\\n774321789\\r\\n991301706\\r\\n991873894\\r\\n397156637\\r\\n113523353\\r\\n617052059\\r\\n46639523\\r\\n446403745\\r\\n35361814\\r\\n921640272\\r\\n891146426\\r\\n273084002\\r\\n58808253\\r\\n533015325\\r\\n30707919\\r\\n154980978\\r\\n71...']}, {'input': '200000 3000\\r\\n1 0 0 0 0 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 1 0 1 0 0 1 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 1 0 ...', 'output': ['203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n71266...']}, {'input': '200000 3000\\r\\n0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 1 0 1 0 1 1 1 0 0 0 1 0 1 1 0 1 1 0 0 0 1 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 0 1 1 0 1 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 0 1 1 1 1 1 1 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 0 1 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 ...', 'output': ['532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n53...']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MX = 200005, INF = 1e9 + 7, MOD = 998244353;\nlong long fp(long long x, long long p) {\n  if (p == 0) return 1;\n  long long h = fp(x, p / 2);\n  h = h * h % MOD;\n  if (p % 2) h = h * x % MOD;\n  return h;\n}\nint gcd(int a, int b) { return!b? a : gcd(b, a % b); }\nint arr[MX];\nint n, m;\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &arr[i]);\n  }\n  for (int i = 1; i <= n; i++) {\n    int w;\n    scanf(\"%d\", &w);\n    w = fp(w, MOD - 2);\n    if (arr[i] == 0) {\n      w = MOD - w;\n    }\n    printf(\"%d\\n\", (w + m % MOD) % MOD);\n  }\n}\n"}
{"src_uid": "ba9c136f84375cd317f0f8b53e3939c7", "id": 31, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '2 1\\r\\n0 1\\r\\n2 1\\r\\n', 'output': ['332748119\\r\\n332748119']}, {'input': '1 2\\r\\n1\\r\\n1\\r\\n', 'output': ['3']}, {'input': '3 3\\r\\n0 1 1\\r\\n4 3 5\\r\\n', 'output': ['160955686\\r\\n185138929\\r\\n974061117']}, {'input': '5 5\\r\\n0 1 0 0 1\\r\\n9 8 3 8 8\\r\\n', 'output': ['45170585\\r\\n105647559\\r\\n680553097\\r\\n483815788\\r\\n105647559']}, {'input': '10 10\\r\\n0 1 0 0 1 1 1 1 1 1\\r\\n12 18 6 18 7 2 9 18 1 9\\r\\n', 'output': ['199115375\\r\\n823101465\\r\\n598679864\\r\\n797795239\\r\\n486469073\\r\\n424203836\\r\\n910672909\\r\\n823101465\\r\\n212101918\\r\\n910672909']}, {'input': '20 20\\r\\n1 1 1 1 0 1 1 1 0 1 0 1 0 0 1 0 1 1 0 1\\r\\n1 13 7 11 17 15 19 18 14 11 15 1 12 4 5 16 14 11 18 9\\r\\n', 'output': ['688505688\\r\\n964619120\\r\\n826562404\\r\\n585852097\\r\\n851622699\\r\\n345141790\\r\\n104431483\\r\\n414170148\\r\\n349014804\\r\\n585852097\\r\\n516550769\\r\\n688505688\\r\\n13942874\\r\\n670143860\\r\\n447795381\\r\\n684086734\\r\\n654880455\\r\\n585852097\\r\\n20914311\\r\\n207085074']}, {'input': '30 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0\\r\\n1 2 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 2 2 1 1 2 2 2\\r\\n', 'output': ['346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n542025302\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n693292404\\r\\n693292404']}, {'input': '40 40\\r\\n1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n28 13 22 35 22 13 23 35 14 36 30 10 10 15 3 9 35 35 9 29 14 28 8 29 22 30 4 31 39 24 4 19 37 4 20 7 11 17 3 25\\r\\n', 'output': ['368107101\\r\\n848286965\\r\\n360530176\\r\\n210572788\\r\\n199380339\\r\\n848286965\\r\\n195418938\\r\\n210572788\\r\\n683175727\\r\\n45461550\\r\\n37884625\\r\\n544374860\\r\\n345376326\\r\\n518064489\\r\\n502910639\\r\\n510487564\\r\\n210572788\\r\\n210572788\\r\\n510487564\\r\\n202995863\\r\\n683175727\\r\\n526005255\\r\\n675598802\\r\\n202995863\\r\\n360530176\\r\\n37884625\\r\\n337799401\\r\\n871017740\\r\\n548372189\\r\\n30307700\\r\\n337799401\\r\\n855863890\\r\\n878594665\\r\\n337799401\\r\\n690752652\\r\\n840710040\\r\\n180265088\\r\\n187842013\\r\\n502910639\\r\\n863440815']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n13 18 27 40 3 1 20 11 25 11 2 31 22 15 36 12 11 24 8 39 31 36 19 24 10 39 27 4 10 22 14 3 25 5 24 19 20 33 17 19 30 15 37 33 3 27 26 29 37 34\\r\\n', 'output': ['30685719\\r\\n733580163\\r\\n601248068\\r\\n631933787\\r\\n621385537\\r\\n539876630\\r\\n815089070\\r\\n947421165\\r\\n519739161\\r\\n947421165\\r\\n81508907\\r\\n764265882\\r\\n896597977\\r\\n112194626\\r\\n468915973\\r\\n489053442\\r\\n947421165\\r\\n978106884\\r\\n326035628\\r\\n92057157\\r\\n764265882\\r\\n468915973\\r\\n275212440\\r\\n978106884\\r\\n407544535\\r\\n92057157\\r\\n601248068\\r\\n163017814\\r\\n407544535\\r\\n896597977\\r\\n570562349\\r\\n621385537\\r\\n519739161\\r\\n702894444\\r\\n978106884\\r\\n275212440\\r\\n815089070\\r\\n845774789\\r\\n193703533\\r\\n275212440\\r\\n224389252\\r\\n112194626\\r\\n10548250\\r\\n845774789\\r\\n621385537\\r\\n601248068\\r\\n61371438\\r\\n...']}, {'input': '50 50\\r\\n0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0\\r\\n2 50 37 21 21 2 26 49 15 44 8 27 30 28 26 40 26 45 41 37 27 34 8 35 2 23 2 49 13 1 39 37 12 42 7 11 4 50 42 21 27 50 28 31 17 22 10 43 46 13\\r\\n', 'output': ['380563607\\r\\n529890998\\r\\n551838435\\r\\n502062638\\r\\n635094670\\r\\n380563607\\r\\n954349479\\r\\n816391328\\r\\n358616170\\r\\n386444530\\r\\n907437062\\r\\n645509106\\r\\n717232340\\r\\n336668733\\r\\n954349479\\r\\n623561669\\r\\n954349479\\r\\n77604157\\r\\n314721296\\r\\n453480088\\r\\n645509106\\r\\n480115201\\r\\n907437062\\r\\n725742999\\r\\n380563607\\r\\n362831759\\r\\n725981442\\r\\n838731371\\r\\n976296916\\r\\n362990721\\r\\n932402042\\r\\n551838435\\r\\n286892936\\r\\n5880923\\r\\n832850448\\r\\n998164872\\r\\n761127214\\r\\n529890998\\r\\n5880923\\r\\n502062638\\r\\n645509106\\r\\n181137696\\r\\n181296658\\r\\n408391967\\r\\n739179777\\r\\n193222265\\r\\n904573682\\r...']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 1 2 2 2 1 1 1\\r\\n', 'output': ['665496237\\r\\n332748121\\r\\n332748121\\r\\n665496237\\r\\n332748121\\r\\n332748121\\r\\n332748121\\r\\n665496237\\r\\n665496237\\r\\n665496237']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 0 1 1\\r\\n2 1 2 2 1 1 1 1 1 1\\r\\n', 'output': ['771370640\\r\\n385685320\\r\\n771370640\\r\\n771370640\\r\\n385685320\\r\\n385685320\\r\\n385685320\\r\\n635246407\\r\\n385685320\\r\\n385685320']}, {'input': '10 10\\r\\n0 0 0 1 0 0 0 0 0 0\\r\\n2 2 2 2 2 2 2 1 2 2\\r\\n', 'output': ['973938381\\r\\n973938381\\r\\n973938381\\r\\n791643586\\r\\n973938381\\r\\n973938381\\r\\n973938381\\r\\n986091367\\r\\n973938381\\r\\n973938381']}, {'input': '10 10\\r\\n0 0 1 0 0 0 1 0 0 0\\r\\n2 1 2 1 1 2 1 1 1 1\\r\\n', 'output': ['44896189\\r\\n521570271\\r\\n482402083\\r\\n521570271\\r\\n521570271\\r\\n44896189\\r\\n740323218\\r\\n521570271\\r\\n521570271\\r\\n521570271']}, {'input': '10 10\\r\\n1 0 0 0 1 1 1 0 1 0\\r\\n1 2 1 2 1 1 2 2 2 1\\r\\n', 'output': ['910950063\\r\\n595918255\\r\\n797081304\\r\\n595918255\\r\\n910950063\\r\\n910950063\\r\\n823655773\\r\\n595918255\\r\\n823655773\\r\\n797081304']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n17 10 8 34 5 4 3 44 20 14\\r\\n', 'output': ['709444118\\r\\n6278277\\r\\n803618104\\r\\n420643883\\r\\n502261315\\r\\n401809052\\r\\n301356789\\r\\n426922160\\r\\n12556554\\r\\n408087329']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 0 1\\r\\n40 36 29 4 36 35 9 38 40 18\\r\\n', 'output': ['59109317\\r\\n951618303\\r\\n17898146\\r\\n105735367\\r\\n951618303\\r\\n675623373\\r\\n487465664\\r\\n505363810\\r\\n736385984\\r\\n974931328']}, {'input': '10 10\\r\\n0 0 0 0 0 0 0 1 0 0\\r\\n8 33 37 18 30 48 45 34 25 48\\r\\n', 'output': ['211347083\\r\\n497465085\\r\\n104016450\\r\\n725092025\\r\\n542990473\\r\\n269838145\\r\\n315363533\\r\\n227335634\\r\\n286118002\\r\\n269838145']}, {'input': '10 10\\r\\n0 0 1 0 0 0 0 0 1 0\\r\\n47 34 36 9 3 16 17 46 47 1\\r\\n', 'output': ['167709201\\r\\n57603825\\r\\n597597985\\r\\n690531016\\r\\n562925123\\r\\n673030499\\r\\n527924089\\r\\n312815611\\r\\n253346183\\r\\n853137943']}, {'input': '10 10\\r\\n1 0 0 1 1 0 1 0 0 1\\r\\n24 7 10 9 6 13 27 17 6 39\\r\\n', 'output': ['976715988\\r\\n573793375\\r\\n391885813\\r\\n865390672\\r\\n244178997\\r\\n209978251\\r\\n599683310\\r\\n965679188\\r\\n634429229\\r\\n89796951']}, {'input': '10 10\\r\\n0 0 0 0 0 1 0 0 0 0\\r\\n34 34 34 34 34 34 34 34 34 34\\r\\n', 'output': ['971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n754874965\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n43 43 43 43 43 43 43 43 43 43\\r\\n', 'output': ['44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 2 1 1 2 1 1 1 2 1 1 2 1 2 1 2 1 2 1 2 2 2 1 2 2 2 2 1\\r\\n', 'output': ['260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1\\r\\n2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 2 2 2 2 1 2 1 2 1 1 1 1 2 1\\r\\n', 'output': ['720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n720162001\\r\\n720162001\\r\\n720162001\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n720162001\\r\\n427819009\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177']}, {'input': '30 30\\r\\n0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n2 1 1 2 1 2 2 2 2 2 1 1 2 2 2 1 2 2 2 1 2 1 1 1 1 1 2 1 1 1\\r\\n', 'output': ['188114875\\r\\n593179614\\r\\n593179614\\r\\n550614566\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n593179614']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 1 1 1 2 1 2 2 1 2 1 2 1 1 2 2 1 2 1 2 1 2 2 2 1 1 2 1 2 2\\r\\n', 'output': ['593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n275307283\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n275307283\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875']}, {'input': '30 30\\r\\n1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 1 1 0 1 0 1 0 0 1 1 0 1 0 1 0\\r\\n1 1 1 2 2 1 2 1 2 1 1 2 2 2 1 2 1 1 1 1 1 2 1 2 1 2 1 2 1 1\\r\\n', 'output': ['297674502\\r\\n297674502\\r\\n297674502\\r\\n101192689\\r\\n595349004\\r\\n549718521\\r\\n101192689\\r\\n297674502\\r\\n595349004\\r\\n297674502\\r\\n549718521\\r\\n101192689\\r\\n101192689\\r\\n101192689\\r\\n549718521\\r\\n595349004\\r\\n297674502\\r\\n549718521\\r\\n297674502\\r\\n549718521\\r\\n297674502\\r\\n101192689\\r\\n549718521\\r\\n595349004\\r\\n297674502\\r\\n101192689\\r\\n297674502\\r\\n101192689\\r\\n297674502\\r\\n549718521']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n23 45 44 49 17 36 32 26 40 8 36 11 5 19 41 16 7 38 23 40 13 16 24 44 22 13 1 2 32 31\\r\\n', 'output': ['42365832\\r\\n603712812\\r\\n124449607\\r\\n524276926\\r\\n161519661\\r\\n283321379\\r\\n362757265\\r\\n481911094\\r\\n203885493\\r\\n839372581\\r\\n283321379\\r\\n280673490\\r\\n399827319\\r\\n121801718\\r\\n683148698\\r\\n680500809\\r\\n360109376\\r\\n243603436\\r\\n42365832\\r\\n203885493\\r\\n240955547\\r\\n680500809\\r\\n521629037\\r\\n124449607\\r\\n561346980\\r\\n240955547\\r\\n479263205\\r\\n958526410\\r\\n362757265\\r\\n881738413']}, {'input': '30 30\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n41 39 15 34 45 27 18 7 48 33 46 11 24 16 35 43 7 31 26 17 30 15 5 9 29 20 21 37 3 7\\r\\n', 'output': ['61128841\\r\\n655563720\\r\\n98563838\\r\\n955457225\\r\\n295691514\\r\\n377063779\\r\\n916872088\\r\\n578393446\\r\\n115755411\\r\\n17191573\\r\\n235712813\\r\\n338478642\\r\\n556999882\\r\\n38585137\\r\\n895478524\\r\\n415648916\\r\\n578393446\\r\\n137148975\\r\\n437042480\\r\\n976850789\\r\\n197127676\\r\\n98563838\\r\\n698350848\\r\\n458436044\\r\\n257106377\\r\\n796914686\\r\\n736935985\\r\\n775521122\\r\\n818308250\\r\\n578393446']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n29 38 18 19 46 28 12 5 46 17 31 20 24 33 9 6 47 2 2 41 34 2 50 5 47 10 40 21 49 28\\r\\n', 'output': ['528451192\\r\\n658031067\\r\\n259159750\\r\\n828137710\\r\\n218632982\\r\\n957717585\\r\\n838269402\\r\\n848401094\\r\\n218632982\\r\\n688426143\\r\\n942792071\\r\\n398871317\\r\\n678294451\\r\\n807874326\\r\\n129579875\\r\\n419134701\\r\\n787610942\\r\\n139711567\\r\\n139711567\\r\\n368476241\\r\\n378607933\\r\\n139711567\\r\\n498056116\\r\\n848401094\\r\\n787610942\\r\\n698557835\\r\\n797742634\\r\\n967849277\\r\\n927322509\\r\\n957717585']}, {'input': '30 30\\r\\n0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 12 9 1 5 32 38 25 34 31 27 43 13 38 48 40 5 42 20 45 1 4 35 38 1 44 31 42 8 37\\r\\n', 'output': ['399967190\\r\\n806628868\\r\\n604971651\\r\\n399967190\\r\\n3347244\\r\\n800038448\\r\\n225087925\\r\\n16736220\\r\\n621707871\\r\\n420050654\\r\\n816670600\\r\\n228435169\\r\\n208351705\\r\\n225087925\\r\\n231782413\\r\\n26777952\\r\\n3347244\\r\\n51806110\\r\\n13388976\\r\\n30125196\\r\\n399967190\\r\\n601624407\\r\\n23430708\\r\\n225087925\\r\\n399967190\\r\\n628402359\\r\\n420050654\\r\\n826712332\\r\\n205004461\\r\\n823365088']}, {'input': '30 30\\r\\n0 1 1 0 0 1 1 1 1 0 0 1 0 0 1 0 0 0 1 0 1 1 0 0 0 1 1 1 1 0\\r\\n5 20 47 27 17 5 18 30 43 23 44 6 47 8 23 41 2 46 49 33 45 27 33 16 36 2 42 36 8 23\\r\\n', 'output': ['114252107\\r\\n760713694\\r\\n489959522\\r\\n18014766\\r\\n787754905\\r\\n689300600\\r\\n484993454\\r\\n142826188\\r\\n936763395\\r\\n126261951\\r\\n805769671\\r\\n827160720\\r\\n475023194\\r\\n781749983\\r\\n176049701\\r\\n138271795\\r\\n444998584\\r\\n252523902\\r\\n765679762\\r\\n354766165\\r\\n214239282\\r\\n727490181\\r\\n354766165\\r\\n565255613\\r\\n24019688\\r\\n275720240\\r\\n798903275\\r\\n969986908\\r\\n104636607\\r\\n126261951']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\r\\n39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39\\r\\n', 'output': ['417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n142843895']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22\\r\\n', 'output': ['23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n2 1 1 2 2 1 2 1 1 2 2 2 1 2 2 1 1 1 2 1 2 1 2 2 2 1 2 1 1 2 2 2 2 2 1 2 2 2 2 2 2 1 2 1 2 2 2 1 1 2\\r\\n', 'output': ['714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n71479...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 1 2 1 1 1 1 1 2 1 1 1 2 2 2 1 1 1 1 2 2 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 2 2 2 1\\r\\n', 'output': ['964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n824636640\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n93147...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\\r\\n1 2 2 2 2 2 2 1 1 2 2 1 1 2 1 2 2 1 2 1 2 2 1 2 2 2 1 1 1 1 2 2 2 1 2 2 1 2 2 1 1 2 2 2 2 2 1 2 2 1\\r\\n', 'output': ['512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n96131098\\r\\n27359387\\r\\n27359387\\r\\n5128...']}, {'input': '50 50\\r\\n0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\r\\n2 1 1 1 1 2 2 2 1 1 2 2 2 1 2 1 2 2 2 1 1 1 1 2 2 1 1 1 1 2 1 2 2 2 2 1 1 1 2 1 2 1 1 2 2 1 1 2 2 1\\r\\n', 'output': ['303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n480354901\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n15198...']}, {'input': '50 50\\r\\n0 0 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0\\r\\n1 1 1 1 1 2 2 1 1 2 2 2 1 1 1 2 2 2 1 1 1 1 2 1 1 1 2 2 1 1 1 2 2 1 1 2 1 1 2 2 2 2 2 2 2 2 2 1 2 1\\r\\n', 'output': ['525100120\\r\\n525100120\\r\\n392384920\\r\\n525100120\\r\\n525100120\\r\\n51955887\\r\\n784769840\\r\\n525100120\\r\\n392384920\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n392384920\\r\\n392384920\\r\\n525100120\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n392384920\\r\\n392384920\\r\\n392384920\\r\\n392384920\\r\\n784769840\\r\\n392384920\\r\\n525100120\\r\\n392384920\\r\\n51955887\\r\\n784769840\\r\\n525100120\\r\\n392384920\\r\\n525100120\\r\\n51955887\\r\\n51955887\\r\\n525100120\\r\\n392384920\\r\\n784769840\\r\\n525100120\\r\\n525100120\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n51955887\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n784769840\\r\\n51955887\\r\\n5251...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n32 22 24 45 22 17 10 5 27 1 48 15 14 43 11 16 38 31 24 19 5 28 2 4 34 29 18 32 47 11 2 34 39 29 36 11 39 24 23 16 41 45 17 39 30 15 16 3 3 8\\r\\n', 'output': ['118672439\\r\\n268758118\\r\\n837687594\\r\\n821980974\\r\\n268758118\\r\\n842923134\\r\\n848158674\\r\\n424079337\\r\\n692837455\\r\\n284464738\\r\\n677130835\\r\\n273993658\\r\\n987773273\\r\\n253051498\\r\\n134379059\\r\\n558458396\\r\\n827216514\\r\\n832452054\\r\\n837687594\\r\\n413608257\\r\\n424079337\\r\\n977302193\\r\\n568929476\\r\\n139614599\\r\\n687601915\\r\\n263522578\\r\\n129143519\\r\\n118672439\\r\\n392666097\\r\\n134379059\\r\\n568929476\\r\\n687601915\\r\\n113436899\\r\\n263522578\\r\\n258287038\\r\\n134379059\\r\\n113436899\\r\\n837687594\\r\\n553222856\\r\\n558458396\\r\\n682366375\\r\\n821980974\\r\\n842923134\\r\\n113436899\\r\\n547987316\\r\\n273993658\\r\\n55845...']}, {'input': '50 50\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n49 34 4 15 32 20 22 35 3 28 15 46 4 46 16 11 45 42 11 4 15 36 29 10 27 32 1 1 23 11 6 34 35 19 11 5 2 37 9 20 39 33 27 4 21 33 6 23 37 50\\r\\n', 'output': ['41887747\\r\\n858571128\\r\\n101008368\\r\\n378781380\\r\\n808066944\\r\\n505041840\\r\\n555546024\\r\\n883823220\\r\\n75756276\\r\\n707058576\\r\\n378781380\\r\\n163351879\\r\\n101008368\\r\\n163351879\\r\\n404033472\\r\\n277773012\\r\\n138099787\\r\\n62343511\\r\\n277773012\\r\\n101008368\\r\\n378781380\\r\\n909075312\\r\\n732310668\\r\\n252520920\\r\\n681806484\\r\\n808066944\\r\\n25252092\\r\\n25252092\\r\\n580798116\\r\\n277773012\\r\\n151512552\\r\\n858571128\\r\\n883823220\\r\\n479789748\\r\\n277773012\\r\\n126260460\\r\\n50504184\\r\\n934327404\\r\\n227268828\\r\\n505041840\\r\\n984831588\\r\\n833319036\\r\\n681806484\\r\\n101008368\\r\\n530293932\\r\\n833319036\\r\\n151512552\\r\\n...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n12 29 36 24 44 22 38 43 30 19 15 2 39 8 13 50 29 18 37 19 32 39 42 41 20 11 14 25 4 35 14 23 17 29 1 19 3 6 8 31 26 46 9 31 36 49 21 38 17 27\\r\\n', 'output': ['820896192\\r\\n985588111\\r\\n466199870\\r\\n643548031\\r\\n15219645\\r\\n506731999\\r\\n603015902\\r\\n945055982\\r\\n986069299\\r\\n301507951\\r\\n27875887\\r\\n136816032\\r\\n671423918\\r\\n547264128\\r\\n889304208\\r\\n425667741\\r\\n985588111\\r\\n233099935\\r\\n534607886\\r\\n301507951\\r\\n192567806\\r\\n671423918\\r\\n876647966\\r\\n808239950\\r\\n369915967\\r\\n752488176\\r\\n957712224\\r\\n711956047\\r\\n273632064\\r\\n397791854\\r\\n957712224\\r\\n575140015\\r\\n164691919\\r\\n985588111\\r\\n68408016\\r\\n301507951\\r\\n205224048\\r\\n410448096\\r\\n547264128\\r\\n124159790\\r\\n780364063\\r\\n152035677\\r\\n615672144\\r\\n124159790\\r\\n466199870\\r\\n357259725\\r\\n43832398...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n25 31 26 45 2 6 25 14 35 23 31 16 24 36 44 8 18 41 36 3 27 21 15 44 45 45 25 8 3 43 7 25 48 45 44 33 25 49 8 46 14 12 12 46 45 43 29 40 1 47\\r\\n', 'output': ['26673909\\r\\n312584066\\r\\n906195896\\r\\n646959648\\r\\n760799621\\r\\n285910157\\r\\n26673909\\r\\n334375582\\r\\n835938955\\r\\n264118641\\r\\n312584066\\r\\n96930850\\r\\n145396275\\r\\n717216589\\r\\n765682014\\r\\n48465425\\r\\n857730471\\r\\n123604759\\r\\n717216589\\r\\n642077255\\r\\n787473530\\r\\n501563373\\r\\n215653216\\r\\n765682014\\r\\n646959648\\r\\n108381283\\r\\n26673909\\r\\n48465425\\r\\n642077255\\r\\n884404380\\r\\n167187791\\r\\n26673909\\r\\n290792550\\r\\n646959648\\r\\n765682014\\r\\n75139334\\r\\n614792020\\r\\n172070184\\r\\n48465425\\r\\n528237282\\r\\n334375582\\r\\n571820314\\r\\n571820314\\r\\n528237282\\r\\n646959648\\r\\n884404380\\r\\n550028798\\r\\n242...']}, {'input': '50 50\\r\\n0 0 0 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 0 0\\r\\n45 49 17 22 28 34 24 38 5 46 22 36 11 12 43 21 47 39 38 38 38 27 10 49 19 46 23 7 46 35 11 38 25 16 7 32 12 13 44 14 41 36 7 31 4 46 40 28 28 46\\r\\n', 'output': ['644620779\\r\\n102973792\\r\\n443172276\\r\\n267699221\\r\\n201448503\\r\\n886344552\\r\\n745782947\\r\\n99391617\\r\\n196964962\\r\\n259647944\\r\\n267699221\\r\\n619552244\\r\\n632971787\\r\\n371547745\\r\\n416322096\\r\\n28657358\\r\\n254279678\\r\\n338433480\\r\\n344697565\\r\\n344697565\\r\\n99391617\\r\\n464664183\\r\\n143249062\\r\\n102973792\\r\\n548817985\\r\\n15237815\\r\\n129823972\\r\\n675048688\\r\\n259647944\\r\\n380510381\\r\\n756520580\\r\\n344697565\\r\\n984824810\\r\\n829936749\\r\\n675048688\\r\\n658045869\\r\\n371547745\\r\\n112811160\\r\\n535398442\\r\\n599846428\\r\\n188023413\\r\\n619552244\\r\\n299923214\\r\\n44774351\\r\\n956167452\\r\\n259647944\\r\\n577475343\\r...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47\\r\\n', 'output': ['529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n988406960\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n52947...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\\r\\n', 'output': ['9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9']}, {'input': '5 50\\r\\n1 1 1 1 1\\r\\n1 1 4 2 3\\r\\n', 'output': ['635246412\\r\\n635246412\\r\\n544496942\\r\\n272248471\\r\\n907494883']}, {'input': '10 50\\r\\n0 0 0 0 0 0 0 0 1 0\\r\\n3 1 3 3 1 3 1 2 2 1\\r\\n', 'output': ['187134581\\r\\n727874429\\r\\n187134581\\r\\n187134581\\r\\n727874429\\r\\n187134581\\r\\n727874429\\r\\n457504505\\r\\n124563167\\r\\n727874429']}, {'input': '20 50\\r\\n1 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1\\r\\n1 2 2 1 2 2 2 2 2 2 1 1 2 2 2 1 1 1 2 2\\r\\n', 'output': ['853605709\\r\\n708967065\\r\\n708967065\\r\\n853605709\\r\\n708967065\\r\\n708967065\\r\\n708967065\\r\\n922030188\\r\\n708967065\\r\\n922030188\\r\\n853605709\\r\\n853605709\\r\\n708967065\\r\\n922030188\\r\\n708967065\\r\\n461015094\\r\\n853605709\\r\\n853605709\\r\\n708967065\\r\\n708967065']}, {'input': '20 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 2 2 2 2 1 2 1 2 1 2 1 1 2 1 2 2 1\\r\\n', 'output': ['436731907\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n873463814\\r\\n436731907']}, {'input': '40 50\\r\\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0\\r\\n33 26 4 19 42 43 19 32 13 23 19 1 18 43 43 43 19 31 4 25 28 23 33 37 36 23 5 12 18 32 34 1 21 22 34 35 37 16 41 39\\r\\n', 'output': ['729284231\\r\\n60340485\\r\\n239647233\\r\\n389641092\\r\\n20685064\\r\\n829280137\\r\\n389641092\\r\\n918933511\\r\\n529292419\\r\\n629288325\\r\\n366487398\\r\\n808595073\\r\\n579290372\\r\\n829280137\\r\\n829280137\\r\\n41331201\\r\\n389641092\\r\\n110338438\\r\\n239647233\\r\\n249989765\\r\\n679286278\\r\\n629288325\\r\\n426374038\\r\\n968931464\\r\\n160336391\\r\\n629288325\\r\\n49997953\\r\\n718941699\\r\\n579290372\\r\\n918933511\\r\\n539634951\\r\\n808595073\\r\\n89829960\\r\\n818937605\\r\\n539634951\\r\\n349985671\\r\\n968931464\\r\\n958588932\\r\\n210334344\\r\\n589632904']}, {'input': '41 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 2 4 2 3 2 4 3 1 1 3 1 3 2 5 3 3 5 4 4 1 1 2 3 2 1 5 5 5 4 2 2 2 1 2 4 4 5 2 1 4\\r\\n', 'output': ['394710173\\r\\n789420346\\r\\n580596339\\r\\n789420346\\r\\n185886166\\r\\n789420346\\r\\n580596339\\r\\n185886166\\r\\n394710173\\r\\n394710173\\r\\n185886166\\r\\n394710173\\r\\n581788048\\r\\n789420346\\r\\n636898629\\r\\n185886166\\r\\n185886166\\r\\n975306512\\r\\n580596339\\r\\n580596339\\r\\n394710173\\r\\n394710173\\r\\n55110581\\r\\n185886166\\r\\n55110581\\r\\n394710173\\r\\n975306512\\r\\n975306512\\r\\n975306512\\r\\n580596339\\r\\n789420346\\r\\n789420346\\r\\n789420346\\r\\n394710173\\r\\n789420346\\r\\n580596339\\r\\n580596339\\r\\n975306512\\r\\n789420346\\r\\n394710173\\r\\n580596339']}, {'input': '42 50\\r\\n0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0\\r\\n2 4 6 8 1 3 6 1 4 1 3 4 3 7 6 6 8 7 4 1 7 4 6 9 3 1 9 7 1 2 9 3 1 6 1 5 1 8 2 6 8 8\\r\\n', 'output': ['11284873\\r\\n329090227\\r\\n33854619\\r\\n45139492\\r\\n504764613\\r\\n995500935\\r\\n33854619\\r\\n504764613\\r\\n22569746\\r\\n504764613\\r\\n516049486\\r\\n22569746\\r\\n516049486\\r\\n538619232\\r\\n33854619\\r\\n33854619\\r\\n45139492\\r\\n538619232\\r\\n22569746\\r\\n504764613\\r\\n538619232\\r\\n22569746\\r\\n33854619\\r\\n549904105\\r\\n516049486\\r\\n504764613\\r\\n549904105\\r\\n538619232\\r\\n504764613\\r\\n11284873\\r\\n990014099\\r\\n516049486\\r\\n504764613\\r\\n33854619\\r\\n504764613\\r\\n527334359\\r\\n504764613\\r\\n45139492\\r\\n663667290\\r\\n33854619\\r\\n45139492\\r\\n45139492']}, {'input': '43 50\\r\\n1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n13 7 13 15 8 9 11 1 15 9 3 7 3 15 4 7 7 16 9 13 12 16 16 1 5 5 14 5 17 2 1 13 4 13 10 17 17 6 11 15 14 3 6\\r\\n', 'output': ['175780254\\r\\n94650906\\r\\n163530008\\r\\n802992688\\r\\n561362014\\r\\n881093354\\r\\n522311681\\r\\n319731340\\r\\n802992688\\r\\n881093354\\r\\n959194020\\r\\n241630674\\r\\n959194020\\r\\n802992688\\r\\n280681007\\r\\n241630674\\r\\n241630674\\r\\n124479675\\r\\n881093354\\r\\n163530008\\r\\n842043021\\r\\n124479675\\r\\n124479675\\r\\n13521558\\r\\n600412347\\r\\n600412347\\r\\n483261348\\r\\n67607790\\r\\n444211015\\r\\n639462680\\r\\n319731340\\r\\n163530008\\r\\n280681007\\r\\n163530008\\r\\n202580341\\r\\n444211015\\r\\n444211015\\r\\n920143687\\r\\n522311681\\r\\n802992688\\r\\n483261348\\r\\n959194020\\r\\n920143687']}, {'input': '44 50\\r\\n0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\r\\n2 6 6 11 2 4 11 10 5 15 15 20 20 7 9 8 17 4 16 19 12 16 12 13 2 11 20 2 6 10 2 18 7 5 18 10 15 6 11 9 7 5 17 11\\r\\n', 'output': ['327775237\\r\\n983325711\\r\\n983325711\\r\\n305397274\\r\\n327775237\\r\\n853173373\\r\\n305397274\\r\\n640631832\\r\\n320315916\\r\\n960947748\\r\\n960947748\\r\\n272889453\\r\\n283019311\\r\\n648091153\\r\\n975866390\\r\\n312856595\\r\\n290478632\\r\\n655550474\\r\\n625713190\\r\\n618253869\\r\\n968407069\\r\\n625713190\\r\\n968407069\\r\\n633172511\\r\\n327775237\\r\\n305397274\\r\\n283019311\\r\\n327775237\\r\\n983325711\\r\\n640631832\\r\\n327775237\\r\\n953488427\\r\\n648091153\\r\\n816905628\\r\\n953488427\\r\\n640631832\\r\\n960947748\\r\\n983325711\\r\\n305397274\\r\\n975866390\\r\\n648091153\\r\\n320315916\\r\\n290478632\\r\\n305397274']}, {'input': '45 50\\r\\n0 1 0 1 0 1 0 1 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 1 0\\r\\n4 4 23 23 13 23 9 16 4 18 20 15 21 24 22 20 22 1 15 7 10 17 20 6 15 7 4 10 16 7 14 9 13 17 10 14 22 23 3 5 20 11 4 24 24\\r\\n', 'output': ['630266647\\r\\n555616275\\r\\n379739073\\r\\n948743787\\r\\n301438985\\r\\n948743787\\r\\n669416691\\r\\n225976394\\r\\n555616275\\r\\n340589029\\r\\n156600176\\r\\n835755590\\r\\n563727926\\r\\n786866823\\r\\n560278630\\r\\n781592669\\r\\n970855676\\r\\n388465157\\r\\n835755590\\r\\n853405544\\r\\n889918511\\r\\n614441551\\r\\n156600176\\r\\n446277794\\r\\n117450132\\r\\n853405544\\r\\n630266647\\r\\n78300088\\r\\n225976394\\r\\n722767393\\r\\n708566735\\r\\n669416691\\r\\n58825276\\r\\n931705632\\r\\n78300088\\r\\n708566735\\r\\n970855676\\r\\n948743787\\r\\n223138897\\r\\n39150044\\r\\n781592669\\r\\n280139315\\r\\n555616275\\r\\n338964591\\r\\n786866823']}, {'input': '46 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n29 22 30 33 13 31 19 11 12 21 5 4 24 21 20 6 28 16 27 18 21 11 3 24 21 8 8 33 24 7 34 12 13 32 26 33 33 22 18 2 3 7 24 17 9 30\\r\\n', 'output': ['265429165\\r\\n98093399\\r\\n859759619\\r\\n646262275\\r\\n738585431\\r\\n455845720\\r\\n311590743\\r\\n548168876\\r\\n144254977\\r\\n502007298\\r\\n975163564\\r\\n380833110\\r\\n288509954\\r\\n502007298\\r\\n905921197\\r\\n571249665\\r\\n669343064\\r\\n525088087\\r\\n75012610\\r\\n715504642\\r\\n502007298\\r\\n548168876\\r\\n784747009\\r\\n288509954\\r\\n502007298\\r\\n761666220\\r\\n761666220\\r\\n646262275\\r\\n288509954\\r\\n167335766\\r\\n242348376\\r\\n144254977\\r\\n738585431\\r\\n51931821\\r\\n478926509\\r\\n646262275\\r\\n646262275\\r\\n98093399\\r\\n715504642\\r\\n190416555\\r\\n784747009\\r\\n167335766\\r\\n288509954\\r\\n121174188\\r\\n357752321\\r\\n859759619']}, {'input': '47 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n30 32 21 7 15 4 39 36 23 17 13 4 8 18 38 24 13 27 37 27 32 16 8 12 7 23 28 38 11 36 19 33 10 34 4 8 5 22 3 29 21 30 7 32 35 26 23\\r\\n', 'output': ['243227082\\r\\n658739962\\r\\n369907828\\r\\n456050727\\r\\n121613541\\r\\n831025760\\r\\n116546336\\r\\n491521369\\r\\n785420708\\r\\n537126421\\r\\n704345014\\r\\n831025760\\r\\n663807167\\r\\n744882861\\r\\n907034249\\r\\n993177148\\r\\n704345014\\r\\n618202115\\r\\n699277809\\r\\n618202115\\r\\n658739962\\r\\n329369981\\r\\n663807167\\r\\n496588574\\r\\n456050727\\r\\n785420708\\r\\n825958555\\r\\n907034249\\r\\n288832134\\r\\n491521369\\r\\n952639301\\r\\n866496402\\r\\n81075694\\r\\n76008489\\r\\n831025760\\r\\n663807167\\r\\n40537847\\r\\n577664268\\r\\n623269320\\r\\n35470642\\r\\n369907828\\r\\n243227082\\r\\n456050727\\r\\n658739962\\r\\n283764929\\r\\n410445675\\r\\n785420708...']}, {'input': '48 50\\r\\n1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 1\\r\\n9 42 15 12 2 9 41 13 23 14 17 42 25 10 10 2 38 36 41 31 9 20 31 41 20 41 40 28 7 37 14 25 23 38 27 17 6 40 2 19 19 3 8 32 13 22 41 20\\r\\n', 'output': ['386033769\\r\\n373559702\\r\\n643389615\\r\\n677156688\\r\\n85785282\\r\\n507867516\\r\\n317129978\\r\\n557604333\\r\\n299639299\\r\\n790016136\\r\\n959305308\\r\\n803246569\\r\\n74071672\\r\\n564297240\\r\\n564297240\\r\\n112859448\\r\\n631676005\\r\\n34981358\\r\\n760353928\\r\\n751077091\\r\\n386033769\\r\\n130350127\\r\\n751077091\\r\\n760353928\\r\\n130350127\\r\\n760353928\\r\\n717461287\\r\\n581787919\\r\\n395008068\\r\\n91411082\\r\\n790016136\\r\\n412498747\\r\\n299639299\\r\\n631676005\\r\\n159856954\\r\\n959305308\\r\\n338578344\\r\\n717461287\\r\\n112859448\\r\\n814960179\\r\\n73920403\\r\\n169289172\\r\\n451437792\\r\\n807506815\\r\\n733586412\\r\\n243209575\\r\\n317129978\\r...']}, {'input': '49 50\\r\\n0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0\\r\\n2 3 2 3 4 2 1 1 1 1 1 1 3 1 2 3 2 4 1 2 2 1 1 2 4 3 2 4 1 2 1 1 2 3 1 3 3 2 2 1 4 3 4 1 3 3 4 1 3\\r\\n', 'output': ['136570933\\r\\n703978576\\r\\n136570933\\r\\n703978576\\r\\n273141866\\r\\n136570933\\r\\n567407643\\r\\n478951804\\r\\n567407643\\r\\n567407643\\r\\n478951804\\r\\n478951804\\r\\n703978576\\r\\n567407643\\r\\n136570933\\r\\n703978576\\r\\n136570933\\r\\n273141866\\r\\n567407643\\r\\n136570933\\r\\n136570933\\r\\n567407643\\r\\n567407643\\r\\n136570933\\r\\n273141866\\r\\n703978576\\r\\n957903608\\r\\n273141866\\r\\n567407643\\r\\n136570933\\r\\n567407643\\r\\n567407643\\r\\n136570933\\r\\n703978576\\r\\n567407643\\r\\n438611059\\r\\n438611059\\r\\n136570933\\r\\n136570933\\r\\n478951804\\r\\n273141866\\r\\n703978576\\r\\n917562863\\r\\n478951804\\r\\n703978576\\r\\n703978576\\r\\n27314...']}, {'input': '50 50\\r\\n0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\\r\\n1 9 24 8 8 11 21 11 8 5 16 32 31 15 29 14 16 20 5 18 5 10 31 23 21 4 4 20 20 11 1 4 4 15 9 14 5 30 13 16 32 27 19 10 19 24 21 1 21 15\\r\\n', 'output': ['475420905\\r\\n285810733\\r\\n429413837\\r\\n935878068\\r\\n808634181\\r\\n787710167\\r\\n1395475\\r\\n787710167\\r\\n808634181\\r\\n85801616\\r\\n619024009\\r\\n748779213\\r\\n762627113\\r\\n143603104\\r\\n896947114\\r\\n666426552\\r\\n619024009\\r\\n343206464\\r\\n380615819\\r\\n571621466\\r\\n380615819\\r\\n171603232\\r\\n132672278\\r\\n952237285\\r\\n1395475\\r\\n467939034\\r\\n467939034\\r\\n524218923\\r\\n343206464\\r\\n238408190\\r\\n616106935\\r\\n467939034\\r\\n467939034\\r\\n143603104\\r\\n285810733\\r\\n639542266\\r\\n85801616\\r\\n514809696\\r\\n23435331\\r\\n619024009\\r\\n748779213\\r\\n662977597\\r\\n725343882\\r\\n761231638\\r\\n48798018\\r\\n429413837\\r\\n959313399\\r\\n61...']}, {'input': '47 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39\\r\\n', 'output': ['573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n57345...']}, {'input': '48 50\\r\\n1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 1\\r\\n42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42\\r\\n', 'output': ['612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n27123...']}, {'input': '49 50\\r\\n0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0\\r\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\\r\\n', 'output': ['371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n37100...']}, {'input': '50 50\\r\\n0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\\r\\n33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33\\r\\n', 'output': ['677141055\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141055\\r\\n67714...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n982795629\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n83495...']}, {'input': '50 50\\r\\n1 0 1 0 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 1 0 1 0 1 0 1 1 0 0 1 1 0 0 1 0 0 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n99630...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n70582...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\r\\n', 'output': ['382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n798399400\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n38299...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\r\\n', 'output': ['459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n533798960\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n45908...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n273616393\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n31116...']}, {'input': '50 50\\r\\n0 0 0 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 0 0\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['123180764\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n12318...']}, {'input': '50 50\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['80661140\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51']}, {'input': '5 5\\r\\n0 1 0 0 1\\r\\n2 4 1 2 1\\r\\n', 'output': ['665717847\\r\\n333191345\\r\\n831981100\\r\\n665717847\\r\\n831981101']}, {'input': '20 20\\r\\n0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 0\\r\\n109 1 24 122 136 42 25 112 110 15 26 48 35 10 86 13 41 6 24 15\\r\\n', 'output': ['217595927\\r\\n149660176\\r\\n322657182\\r\\n290143118\\r\\n388896876\\r\\n296261274\\r\\n86540143\\r\\n507489163\\r\\n979723241\\r\\n248413934\\r\\n896431517\\r\\n195977977\\r\\n246884395\\r\\n633562669\\r\\n891842900\\r\\n947337935\\r\\n146601098\\r\\n897961056\\r\\n597111165\\r\\n451221827']}, {'input': '100 100\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n2360379 9167688 488710 6896065 5243867 11762954 673012 1669264 265550 10921726 9383074 9523863 13429215 3223202 5372988 8197773 13052301 6045370 18630475 23534272 14923100 17181531 1112172 24623774 16991041 2363652 10720874 7171147 1261895 13127315 454592 1510882 12229327 15445105 15722482 5467131 92...', 'output': ['19790585\\r\\n929149870\\r\\n158142558\\r\\n415179791\\r\\n770973301\\r\\n197788614\\r\\n662208363\\r\\n968610058\\r\\n711622366\\r\\n89060603\\r\\n49510939\\r\\n593110743\\r\\n227455934\\r\\n197704062\\r\\n89005665\\r\\n237287745\\r\\n266986632\\r\\n365753331\\r\\n365877936\\r\\n464762563\\r\\n879788817\\r\\n148424226\\r\\n355820880\\r\\n830466826\\r\\n583301068\\r\\n553505420\\r\\n59407792\\r\\n988431747\\r\\n889537165\\r\\n425125094\\r\\n978481639\\r\\n494195332\\r\\n98957157\\r\\n850143163\\r\\n474568826\\r\\n889578801\\r\\n691943729\\r\\n751249179\\r\\n29723781\\r\\n385464681\\r\\n494219413\\r\\n968727719\\r\\n622687463\\r\\n929103141\\r\\n89090024\\r\\n563393484\\r\\n29714966\\r\\n484...']}, {'input': '1000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['652684471\\r\\n652684471\\r\\n959809060\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n652684471\\r\\n614249178\\r\\n307124589\\r\\n307124589\\r\\n307124589\\r\\n959809060\\r\\n652684471\\r\\n652684471\\r\\n959809060\\r\\n307124589\\r\\n307124589\\r\\n614249178\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n307124589\\r\\n307124589\\r\\n652684471\\r\\n268689296\\r\\n307124589\\r\\n959809060\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n614249178\\r\\n959809060\\r\\n652684471\\r\\n652684471\\r\\n307124589\\r\\n614249178\\r\\n307124589\\r\\n652684471\\r\\n652684471\\r\\n959809060\\r\\n307124589\\r\\n959809060\\r\\n307124589\\r\\n307124589\\r\\n959809060\\r\\n307124589\\r\\n95980...']}, {'input': '50000 1000\\r\\n1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 1 0 0 0 1 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 0 0 1 1 1 0 0 1 0 0 0 0 1 0 1 0 0 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 1 1 1 1 0 1 0 1 1 0 0 1 0 1 0 0 1 0 0 1 0 1 1 0 1 0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0...', 'output': ['512182090\\r\\n641172382\\r\\n697325018\\r\\n818311552\\r\\n590906119\\r\\n461103680\\r\\n370418391\\r\\n653972733\\r\\n766040380\\r\\n237657896\\r\\n893425807\\r\\n807372188\\r\\n964959592\\r\\n319396135\\r\\n111079234\\r\\n137994713\\r\\n9663504\\r\\n92358638\\r\\n965938119\\r\\n98687680\\r\\n675026792\\r\\n279244742\\r\\n15543727\\r\\n479206408\\r\\n519670811\\r\\n684652624\\r\\n777078382\\r\\n554151828\\r\\n865485075\\r\\n937290032\\r\\n565154228\\r\\n221807985\\r\\n218937300\\r\\n112386612\\r\\n310142313\\r\\n986922988\\r\\n267227503\\r\\n40988675\\r\\n369434552\\r\\n763776107\\r\\n694666611\\r\\n182771968\\r\\n494768207\\r\\n633944759\\r\\n635638470\\r\\n761724538\\r\\n162219074\\r\\n...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['967977965\\r\\n983111159\\r\\n952844771\\r\\n937711577\\r\\n937711577\\r\\n771246443\\r\\n483715757\\r\\n892311995\\r\\n967977965\\r\\n801512831\\r\\n846912413\\r\\n831779219\\r\\n967977965\\r\\n786379637\\r\\n892311995\\r\\n604781309\\r\\n710713667\\r\\n952844771\\r\\n952844771\\r\\n937711577\\r\\n874943312\\r\\n120519101\\r\\n892311995\\r\\n589648115\\r\\n619914503\\r\\n665314085\\r\\n374637533\\r\\n892311995\\r\\n937711577\\r\\n892311995\\r\\n650180891\\r\\n771246443\\r\\n922578383\\r\\n877178801\\r\\n483715757\\r\\n892311995\\r\\n952844771\\r\\n619914503\\r\\n574514921\\r\\n62834123\\r\\n907445189\\r\\n816646025\\r\\n846912413\\r\\n816646025\\r\\n937711577\\r\\n756113249\\r\\n846912...']}, {'input': '200000 3000\\r\\n0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 0 1 0 0 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 1 1 0 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 ...', 'output': ['568390992\\r\\n182388528\\r\\n352385861\\r\\n315979953\\r\\n743372559\\r\\n632628120\\r\\n995395434\\r\\n506334569\\r\\n667771666\\r\\n453192833\\r\\n680429762\\r\\n407446046\\r\\n471154985\\r\\n147648615\\r\\n936047905\\r\\n830053040\\r\\n251214636\\r\\n602162072\\r\\n263562703\\r\\n990790012\\r\\n150217484\\r\\n82075059\\r\\n932318671\\r\\n687474214\\r\\n345881774\\r\\n771937952\\r\\n356541287\\r\\n15233024\\r\\n811478946\\r\\n737405100\\r\\n892805310\\r\\n176354033\\r\\n997083988\\r\\n281716722\\r\\n628262667\\r\\n556117647\\r\\n359954433\\r\\n926451677\\r\\n992018326\\r\\n134736321\\r\\n139309832\\r\\n510415929\\r\\n125029199\\r\\n222157092\\r\\n859462710\\r\\n16077301\\r\\n83159806...']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 3 2 1 3 2 1 1 2 1 1 2 2 4 2 1 5 2 3\\r\\n', 'output': ['249561090\\r\\n249561090\\r\\n748683270\\r\\n499122180\\r\\n249561090\\r\\n748683270\\r\\n499122180\\r\\n249561090\\r\\n249561090\\r\\n499122180\\r\\n249561090\\r\\n249561090\\r\\n499122180\\r\\n499122180\\r\\n7\\r\\n499122180\\r\\n249561090\\r\\n249561097\\r\\n499122180\\r\\n748683270']}, {'input': '20 30\\r\\n1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 1 3 1 4 1 5 1 1 2 3 1 1 3 3 2 2 1 2\\r\\n', 'output': ['902255482\\r\\n806266611\\r\\n902255482\\r\\n710277740\\r\\n902255482\\r\\n537377994\\r\\n902255482\\r\\n518299998\\r\\n902255482\\r\\n902255482\\r\\n806266611\\r\\n710277740\\r\\n902255482\\r\\n902255482\\r\\n710277740\\r\\n710277740\\r\\n806266611\\r\\n806266611\\r\\n902255482\\r\\n806266611']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\r\\n3 4 1 2 1 1 1 2 5 2 1 2 3 1 1 2 3 2 1 2\\r\\n', 'output': ['441078046\\r\\n920852179\\r\\n479774133\\r\\n959548266\\r\\n479774133\\r\\n479774133\\r\\n479774133\\r\\n959548266\\r\\n402381959\\r\\n263018694\\r\\n479774133\\r\\n959548266\\r\\n441078046\\r\\n479774133\\r\\n479774133\\r\\n959548266\\r\\n441078046\\r\\n959548266\\r\\n479774133\\r\\n959548266']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0\\r\\n1 1 3 2 3 1 2 2 3 2 2 2 2 2 2 3 3 1 1 2\\r\\n', 'output': ['550803098\\r\\n550803098\\r\\n654164941\\r\\n103361843\\r\\n654164941\\r\\n550803098\\r\\n103361843\\r\\n103361843\\r\\n654164941\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n276551708\\r\\n654164941\\r\\n654164941\\r\\n138275854\\r\\n550803098\\r\\n103361843']}, {'input': '20 30\\r\\n0 0 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1\\r\\n1 2 2 2 2 2 1 1 2 1 4 1 2 5 3 4 1 1 2 1\\r\\n', 'output': ['297511613\\r\\n595023226\\r\\n756311680\\r\\n756311680\\r\\n756311680\\r\\n595023226\\r\\n297511613\\r\\n378155840\\r\\n595023226\\r\\n297511613\\r\\n514379007\\r\\n297511613\\r\\n595023226\\r\\n892534847\\r\\n136223167\\r\\n514379007\\r\\n378155840\\r\\n297511613\\r\\n595023226\\r\\n378155840']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n765 451 7275 385 1686 78 554 114 1980 394 776 232 627 760 782 7 486 32 1100 1516\\r\\n', 'output': ['491636110\\r\\n498623506\\r\\n486651408\\r\\n182179980\\r\\n6989399\\r\\n10980766\\r\\n871467875\\r\\n92836839\\r\\n509106603\\r\\n951327263\\r\\n211628580\\r\\n83852758\\r\\n11480438\\r\\n618912260\\r\\n58897200\\r\\n820057743\\r\\n605934809\\r\\n183676993\\r\\n948333237\\r\\n341401087']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1\\r\\n779 1317 1275 234 857 1531 785 265 679 767 1994 11 918 1146 1807 71 813 245 3926 580\\r\\n', 'output': ['552990868\\r\\n90431251\\r\\n712871250\\r\\n952916426\\r\\n537881559\\r\\n151361542\\r\\n321464532\\r\\n89445141\\r\\n86037605\\r\\n17799187\\r\\n586392419\\r\\n241031286\\r\\n40642277\\r\\n699465709\\r\\n481837969\\r\\n920500985\\r\\n572000768\\r\\n195703359\\r\\n903238702\\r\\n911489090']}, {'input': '20 30\\r\\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n128 574 205 490 611 1294 283 1690 1466 1896 272 19 1020 5032 357 1500 36 1749 1202 176\\r\\n', 'output': ['389864218\\r\\n157345415\\r\\n537589523\\r\\n962131647\\r\\n753565149\\r\\n104281847\\r\\n378440811\\r\\n873692367\\r\\n690552162\\r\\n658861420\\r\\n578900375\\r\\n198248582\\r\\n923070965\\r\\n228091231\\r\\n572635926\\r\\n887695253\\r\\n795942304\\r\\n70748620\\r\\n510359933\\r\\n785624388']}, {'input': '20 30\\r\\n1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0\\r\\n61 849 320 1007 624 441 1332 3939 1176 718 419 634 657 914 858 882 1019 1567 62 2521\\r\\n', 'output': ['514012356\\r\\n393871659\\r\\n166092575\\r\\n569465276\\r\\n74319433\\r\\n306884170\\r\\n254628439\\r\\n656312237\\r\\n485609669\\r\\n216694535\\r\\n825782618\\r\\n110704962\\r\\n294216114\\r\\n131255421\\r\\n733108087\\r\\n613768340\\r\\n14181299\\r\\n610566194\\r\\n624888021\\r\\n887363731']}, {'input': '20 30\\r\\n0 1 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 0 0\\r\\n244 1901 938 1350 1010 763 318 2158 1645 534 1356 563 295 1449 2306 224 1302 195 639 810\\r\\n', 'output': ['300071414\\r\\n595185476\\r\\n40756239\\r\\n113904636\\r\\n440148868\\r\\n947268885\\r\\n456535325\\r\\n542868956\\r\\n183161324\\r\\n427608407\\r\\n61171180\\r\\n375813928\\r\\n43680359\\r\\n55509680\\r\\n30410255\\r\\n360521133\\r\\n535772284\\r\\n722568686\\r\\n663107799\\r\\n390646234']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n126679203 179924771 16639504 67055540 14134870 36407782 15024189 39367944 121531542 5400023 5834434 8539193 3686913 11287136 36370086 71808281 138206490 59846864 19052959 21446598\\r\\n', 'output': ['615913610\\r\\n488825486\\r\\n773371096\\r\\n742795989\\r\\n193664548\\r\\n323188752\\r\\n32686082\\r\\n709701410\\r\\n293733249\\r\\n161181348\\r\\n193396792\\r\\n354491196\\r\\n708550409\\r\\n644392716\\r\\n323187536\\r\\n646345011\\r\\n487479735\\r\\n1930544\\r\\n322628919\\r\\n966734748']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\\r\\n144831196 28660251 62050800 52660762 23189000 12771861 73096012 25119113 119648684 16011144 51600638 74708999 6312006 26945863 68746869 58112898 5070 19157938 74351320 60263898\\r\\n', 'output': ['132556548\\r\\n711988928\\r\\n6999755\\r\\n208709864\\r\\n320161276\\r\\n865416376\\r\\n320896979\\r\\n458941660\\r\\n671806481\\r\\n158009043\\r\\n351362956\\r\\n78248147\\r\\n927871852\\r\\n882014191\\r\\n988190329\\r\\n830735503\\r\\n1958329\\r\\n787106839\\r\\n942059547\\r\\n341315444']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0\\r\\n34095514 37349809 60555988 40280455 19504485 77297461 41415742 66290058 20631093 185280391 7151718 64927972 15611855 4317891 24600598 24588269 60808977 9108470 13217752 191209824\\r\\n', 'output': ['313283482\\r\\n21804622\\r\\n682197550\\r\\n361027027\\r\\n756362680\\r\\n151917509\\r\\n716108102\\r\\n131732975\\r\\n237068086\\r\\n731869119\\r\\n190595295\\r\\n847684643\\r\\n847454143\\r\\n501579235\\r\\n129856516\\r\\n246699402\\r\\n205385635\\r\\n639100445\\r\\n614421017\\r\\n227076269']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0\\r\\n9380933 34450681 12329733 7732927 73910078 16165679 149467043 56914401 21809098 36934833 71019254 168559440 12033996 40465391 7156881 3312348 37150678 130625432 42709585 66115911\\r\\n', 'output': ['813231583\\r\\n458087744\\r\\n445793615\\r\\n651101155\\r\\n484645642\\r\\n506668954\\r\\n896602699\\r\\n556862659\\r\\n145127201\\r\\n302005399\\r\\n558418033\\r\\n213871822\\r\\n57299634\\r\\n564466143\\r\\n767349204\\r\\n290138481\\r\\n12657688\\r\\n925337836\\r\\n827843024\\r\\n119362169']}, {'input': '20 30\\r\\n0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 0 1 0 1\\r\\n66166717 200301718 6725634 95379617 42880832 48874211 64912554 36809296 13248978 58406666 53142218 45080678 19902257 58554006 23570140 14484661 7589423 78746789 11072716 52395211\\r\\n', 'output': ['823107880\\r\\n742699237\\r\\n987770596\\r\\n549924308\\r\\n730188349\\r\\n913535291\\r\\n936423447\\r\\n122869154\\r\\n581668441\\r\\n749452306\\r\\n615454312\\r\\n176148736\\r\\n874336841\\r\\n897418997\\r\\n235568492\\r\\n24727530\\r\\n143875067\\r\\n15270097\\r\\n200154604\\r\\n356406452']}, {'input': '20 30\\r\\n0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661\\r\\n', 'output': ['76898501\\r\\n989279651\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803\\r\\n', 'output': ['504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981']}, {'input': '2000 300\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1...', 'output': ['527557309\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n819771096\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n762900831\\r\\n762900831\\r\\n292213787\\r\\n762900831\\r\\n527557309\\r\\n292213787\\r\\n762900831\\r\\n292213787\\r\\n527557309\\r\\n762900831\\r\\n292213787\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n819771096\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n292213787\\r\\n762900831\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n762900831\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n76290...', '126026410\\r\\n26532090\\r\\n89545496\\r\\n348227668\\r\\n407921745\\r\\n822476105\\r\\n815841057\\r\\n129343473\\r\\n683184486\\r\\n182403525\\r\\n971714643\\r\\n669922973\\r\\n195669656\\r\\n643389211\\r\\n596958847\\r\\n991612114\\r\\n26531426\\r\\n494147799\\r\\n587007825\\r\\n646703323\\r\\n192353616\\r\\n198987665\\r\\n116075186\\r\\n208935334\\r\\n451035127\\r\\n991612774\\r\\n630129722\\r\\n673238446\\r\\n965081504\\r\\n404604334\\r\\n762781111\\r\\n945182265\\r\\n613540647\\r\\n855640163\\r\\n540577710\\r\\n739563385\\r\\n185720640\\r\\n13265829\\r\\n460984258\\r\\n182404969\\r\\n988297561\\r\\n726301539\\r\\n301795019\\r\\n46434122\\r\\n882170987\\r\\n533948601\\r\\n729615799\\r...', '257947573\\r\\n350833899\\r\\n998147431\\r\\n282054341\\r\\n689337877\\r\\n802790225\\r\\n636332064\\r\\n611526839\\r\\n405886622\\r\\n295781176\\r\\n577883978\\r\\n211877869\\r\\n476761551\\r\\n471920813\\r\\n313000296\\r\\n8886097\\r\\n165109708\\r\\n231143899\\r\\n91489412\\r\\n972042214\\r\\n584771626\\r\\n771892731\\r\\n841370746\\r\\n736106038\\r\\n702414716\\r\\n368751476\\r\\n510452873\\r\\n253155296\\r\\n619859862\\r\\n14376831\\r\\n37833603\\r\\n94933236\\r\\n485696109\\r\\n96233228\\r\\n33691322\\r\\n403791251\\r\\n233190809\\r\\n447164049\\r\\n173248887\\r\\n549683390\\r\\n863382143\\r\\n717538465\\r\\n704413165\\r\\n210480955\\r\\n414122723\\r\\n922528686\\r\\n131321464\\r\\n40...', '723727157\\r\\n723727157\\r\\n898419922\\r\\n449209961\\r\\n898419922\\r\\n174692765\\r\\n723727157\\r\\n723727157\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n174692765\\r\\n723727157\\r\\n174692765\\r\\n723727157\\r\\n723727157\\r\\n623902726\\r\\n723727157\\r\\n723727157\\r\\n449209961\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n174692765\\r\\n723727157\\r\\n449209961\\r\\n349385530\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n623902726\\r\\n449209961\\r\\n449209961\\r\\n898419922\\r\\n898419922\\r\\n723727157\\r\\n449209961\\r\\n723727157\\r\\n723727157\\r\\n723727157\\r\\n174692765\\r\\n17469...', '449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n44954...', '228892698\\r\\n323233274\\r\\n31331450\\r\\n583630535\\r\\n530020844\\r\\n200867506\\r\\n762566026\\r\\n461091654\\r\\n900597519\\r\\n687197433\\r\\n232025843\\r\\n294169404\\r\\n557699810\\r\\n988325579\\r\\n966739790\\r\\n633933968\\r\\n156657250\\r\\n762046687\\r\\n338898999\\r\\n134379009\\r\\n458304735\\r\\n975792999\\r\\n343970609\\r\\n589896825\\r\\n188161813\\r\\n733675269\\r\\n708610109\\r\\n303222613\\r\\n919742615\\r\\n718701996\\r\\n235158988\\r\\n5746951\\r\\n831841442\\r\\n194601216\\r\\n389029319\\r\\n946729129\\r\\n65449819\\r\\n768486090\\r\\n213226973\\r\\n847160941\\r\\n853773457\\r\\n913476325\\r\\n847334054\\r\\n435334042\\r\\n997551901\\r\\n781018670\\r\\n847334054...', '280562572\\r\\n27981324\\r\\n930424996\\r\\n580126064\\r\\n653672085\\r\\n638998124\\r\\n192370181\\r\\n304975360\\r\\n268606553\\r\\n887998181\\r\\n902057157\\r\\n419880164\\r\\n965999027\\r\\n37849969\\r\\n655704617\\r\\n915939588\\r\\n290316653\\r\\n133632797\\r\\n916310849\\r\\n291352554\\r\\n315435621\\r\\n753760137\\r\\n617080324\\r\\n863678858\\r\\n719694519\\r\\n658038314\\r\\n750307459\\r\\n915589744\\r\\n530437886\\r\\n512060713\\r\\n157922588\\r\\n178644172\\r\\n5715303\\r\\n194942404\\r\\n852097346\\r\\n696406228\\r\\n891303846\\r\\n489183600\\r\\n892182349\\r\\n437838373\\r\\n390449491\\r\\n931412865\\r\\n520118475\\r\\n724052962\\r\\n624309238\\r\\n315358057\\r\\n157108994...']}, {'input': '2000 300\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...', 'output': ['510770111\\r\\n586552453\\r\\n521518610\\r\\n729496815\\r\\n925336870\\r\\n218501419\\r\\n210003823\\r\\n721775463\\r\\n410294316\\r\\n59753754\\r\\n445916833\\r\\n149785626\\r\\n397166471\\r\\n850878761\\r\\n322612228\\r\\n400512598\\r\\n962933991\\r\\n238352988\\r\\n481795882\\r\\n312429269\\r\\n230724223\\r\\n668360989\\r\\n538774766\\r\\n7521020\\r\\n782227455\\r\\n932947153\\r\\n766620629\\r\\n621895347\\r\\n948462500\\r\\n49828435\\r\\n465611859\\r\\n508795684\\r\\n965408363\\r\\n876217222\\r\\n27461852\\r\\n849541586\\r\\n889517699\\r\\n887546242\\r\\n347913548\\r\\n274305965\\r\\n434804057\\r\\n916014055\\r\\n822187302\\r\\n339400794\\r\\n604867800\\r\\n368133826\\r\\n799958426\\r...', '738045334\\r\\n159282105\\r\\n578763229\\r\\n578763229\\r\\n477846315\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n578763229\\r\\n738045334\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n578763229\\r\\n578763229\\r\\n578763229\\r\\n159282105\\r\\n578763229\\r\\n318564210\\r\\n578763229\\r\\n578763229\\r\\n159282105\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n159282105\\r\\n578763229\\r\\n159282105\\r\\n738045334\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n578763229\\r\\n738045334\\r\\n159282105\\r\\n738045334\\r\\n318564210\\r\\n73804...', '536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n53653...', '544865927\\r\\n362689553\\r\\n554047941\\r\\n662901553\\r\\n528631083\\r\\n623245685\\r\\n408599623\\r\\n383515404\\r\\n454842332\\r\\n96411147\\r\\n49835799\\r\\n979215047\\r\\n123957189\\r\\n241194187\\r\\n232012173\\r\\n930510515\\r\\n682596137\\r\\n940690446\\r\\n985602599\\r\\n592905181\\r\\n837226469\\r\\n463026429\\r\\n366947921\\r\\n259890854\\r\\n259558215\\r\\n423037922\\r\\n336940056\\r\\n739152127\\r\\n906091574\\r\\n273663875\\r\\n103463977\\r\\n218239152\\r\\n323832313\\r\\n988397061\\r\\n861312771\\r\\n369742383\\r\\n261687399\\r\\n997579075\\r\\n494364850\\r\\n668490477\\r\\n306599552\\r\\n268740229\\r\\n776878100\\r\\n482521724\\r\\n140192033\\r\\n252172746\\r\\n5279658...', '156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n52020618\\r\\n104041236\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n156061854\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n208082472\\r\\n208082472\\r\\n104041236\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n156061854\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n156061854\\r\\n52020618\\r...', '696015721\\r\\n931773777\\r\\n559486112\\r\\n847360916\\r\\n520999237\\r\\n330674091\\r\\n901387332\\r\\n817005789\\r\\n311776972\\r\\n19589756\\r\\n894472615\\r\\n644360731\\r\\n540588993\\r\\n761762342\\r\\n387103251\\r\\n712279217\\r\\n24626123\\r\\n870308250\\r\\n487286532\\r\\n403104550\\r\\n728773592\\r\\n564260282\\r\\n775161336\\r\\n604919022\\r\\n382066884\\r\\n133895986\\r\\n14584707\\r\\n323728056\\r\\n371794589\\r\\n189832070\\r\\n664212684\\r\\n375120849\\r\\n841631912\\r\\n277833388\\r\\n899970740\\r\\n674023221\\r\\n550168651\\r\\n205864687\\r\\n292155898\\r\\n484652909\\r\\n899246785\\r\\n641496229\\r\\n604195067\\r\\n520275282\\r\\n140579824\\r\\n200828320\\r\\n88943624...', '381761597\\r\\n749914123\\r\\n734966985\\r\\n451112838\\r\\n254375974\\r\\n408043495\\r\\n50147455\\r\\n317426730\\r\\n691474180\\r\\n297424671\\r\\n16576556\\r\\n950550287\\r\\n615062290\\r\\n508772409\\r\\n574097914\\r\\n755479957\\r\\n504073337\\r\\n232598914\\r\\n376960541\\r\\n704800943\\r\\n722703963\\r\\n943084953\\r\\n852281936\\r\\n604167024\\r\\n430991955\\r\\n691776511\\r\\n979477939\\r\\n916779041\\r\\n928976757\\r\\n9004809\\r\\n66623088\\r\\n160364271\\r\\n569831785\\r\\n753768578\\r\\n10158931\\r\\n829943628\\r\\n860984852\\r\\n599688760\\r\\n746963293\\r\\n90503616\\r\\n665117495\\r\\n843614199\\r\\n773004798\\r\\n52464119\\r\\n40225734\\r\\n193061049\\r\\n476979003\\r\\n451...']}, {'input': '2000 300\\r\\n1 1 1 0 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 1 0...', 'output': ['520991218\\r\\n260495609\\r\\n781486827\\r\\n281527765\\r\\n460706912\\r\\n260495609\\r\\n43738083\\r\\n819065206\\r\\n639886059\\r\\n260495609\\r\\n639886059\\r\\n520991218\\r\\n520991218\\r\\n639886059\\r\\n819065206\\r\\n520991218\\r\\n639886059\\r\\n819065206\\r\\n639886059\\r\\n43738083\\r\\n781486827\\r\\n260495609\\r\\n520991218\\r\\n781486827\\r\\n819065206\\r\\n639886059\\r\\n281527765\\r\\n819065206\\r\\n460706912\\r\\n260495609\\r\\n639886059\\r\\n260495609\\r\\n304233692\\r\\n781486827\\r\\n260495609\\r\\n260495609\\r\\n43738083\\r\\n260495609\\r\\n639886059\\r\\n260495609\\r\\n819065206\\r\\n520991218\\r\\n520991218\\r\\n639886059\\r\\n639886059\\r\\n460706912\\r\\n26049560...']}, {'input': '2000 300\\r\\n1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 1 1 0 1 0 1 0 0 0 1 1 0 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 1 0 0 1 0 1 0 1 0 1 0 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 1 1 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1...', 'output': ['967309723\\r\\n488979754\\r\\n894231131\\r\\n227079250\\r\\n800673042\\r\\n803173636\\r\\n302660701\\r\\n49359452\\r\\n361182334\\r\\n613837368\\r\\n903714465\\r\\n783149148\\r\\n772569418\\r\\n153771444\\r\\n347053203\\r\\n383800081\\r\\n305903959\\r\\n591371347\\r\\n504143617\\r\\n554819601\\r\\n711091639\\r\\n993123371\\r\\n662636534\\r\\n799549517\\r\\n755795853\\r\\n257472564\\r\\n749178682\\r\\n44165553\\r\\n754769201\\r\\n677121173\\r\\n77251408\\r\\n825363165\\r\\n94378162\\r\\n905743915\\r\\n555723948\\r\\n401067893\\r\\n365827394\\r\\n778249947\\r\\n641361749\\r\\n657808321\\r\\n76885722\\r\\n205390090\\r\\n357248290\\r\\n762413024\\r\\n471855369\\r\\n953559875\\r\\n452364595\\r...']}, {'input': '2000 300\\r\\n1 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 0 1 0 0 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 1 0 1 0 1 0 0 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 0 0 1 0 0 0 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 0 0 1 1 0 1...', 'output': ['353668818\\r\\n180952778\\r\\n350267066\\r\\n85276305\\r\\n498935339\\r\\n570367769\\r\\n947922902\\r\\n520199571\\r\\n977020824\\r\\n311854081\\r\\n369942273\\r\\n709342799\\r\\n241020253\\r\\n306637091\\r\\n574362410\\r\\n924893301\\r\\n259050261\\r\\n881412462\\r\\n505397126\\r\\n426307000\\r\\n368001455\\r\\n187561592\\r\\n507502858\\r\\n422600821\\r\\n840032307\\r\\n570586935\\r\\n847077944\\r\\n633577890\\r\\n21924242\\r\\n429617104\\r\\n40169532\\r\\n200231692\\r\\n301247265\\r\\n526536756\\r\\n236599712\\r\\n449404280\\r\\n482154139\\r\\n74891321\\r\\n744845075\\r\\n202529472\\r\\n497487224\\r\\n750227627\\r\\n791509388\\r\\n365064757\\r\\n435991351\\r\\n911452637\\r\\n230155510...']}, {'input': '200000 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n83030...', '746090912\\r\\n987874942\\r\\n493937471\\r\\n493937471\\r\\n241784030\\r\\n493937471\\r\\n746090912\\r\\n241784030\\r\\n746090912\\r\\n987874942\\r\\n493937471\\r\\n241784030\\r\\n493937471\\r\\n493937471\\r\\n987874942\\r\\n493937471\\r\\n987874942\\r\\n746090912\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n493937471\\r\\n493937471\\r\\n483568060\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n241784030\\r\\n746090912\\r\\n746090912\\r\\n987874942\\r\\n493937471\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n746090912\\r\\n241784030\\r\\n493937471\\r\\n746090912\\r\\n241784030\\r\\n493937471\\r\\n49393...', '249477932\\r\\n163324885\\r\\n619370540\\r\\n591761649\\r\\n381202278\\r\\n400495236\\r\\n181619933\\r\\n483987183\\r\\n768059384\\r\\n853879792\\r\\n648642618\\r\\n525566838\\r\\n955999425\\r\\n754753895\\r\\n409143808\\r\\n470016419\\r\\n322658124\\r\\n100123809\\r\\n150684670\\r\\n101454359\\r\\n634006577\\r\\n229187060\\r\\n466357410\\r\\n35592186\\r\\n769389935\\r\\n547853534\\r\\n85820409\\r\\n289061762\\r\\n201245531\\r\\n244821008\\r\\n910095485\\r\\n40581744\\r\\n910760760\\r\\n733797749\\r\\n450390828\\r\\n440079067\\r\\n811634863\\r\\n573799237\\r\\n619703176\\r\\n460037301\\r\\n90144696\\r\\n512261348\\r\\n656958547\\r\\n636002401\\r\\n271099351\\r\\n573799237\\r\\n748766427...', '337242164\\r\\n175981139\\r\\n705993748\\r\\n951319188\\r\\n208728534\\r\\n926966446\\r\\n894219051\\r\\n142402527\\r\\n394342301\\r\\n747271382\\r\\n832167014\\r\\n925728471\\r\\n915824671\\r\\n371227534\\r\\n265828671\\r\\n404110515\\r\\n737503168\\r\\n526705442\\r\\n275596885\\r\\n225789012\\r\\n140757794\\r\\n548311062\\r\\n834642964\\r\\n960680644\\r\\n982693022\\r\\n298440480\\r\\n97139796\\r\\n357880981\\r\\n649164783\\r\\n74025029\\r\\n270644985\\r\\n37970467\\r\\n945129313\\r\\n422137796\\r\\n739979118\\r\\n389390401\\r\\n815106536\\r\\n311922619\\r\\n858860120\\r\\n411267193\\r\\n976503147\\r\\n835880939\\r\\n13346553\\r\\n661137775\\r\\n978979097\\r\\n527943417\\r\\n707231723...', '895547075\\r\\n50488475\\r\\n972784199\\r\\n737802803\\r\\n134349212\\r\\n579628449\\r\\n120501272\\r\\n588315405\\r\\n599840552\\r\\n714837825\\r\\n262849659\\r\\n448375127\\r\\n596572279\\r\\n172710075\\r\\n108458976\\r\\n317466571\\r\\n845058600\\r\\n348860806\\r\\n506174996\\r\\n501269960\\r\\n76979425\\r\\n561049607\\r\\n754144168\\r\\n500496863\\r\\n56852638\\r\\n736253107\\r\\n323142953\\r\\n631062404\\r\\n987492303\\r\\n864152840\\r\\n155163780\\r\\n16686131\\r\\n341291713\\r\\n213479047\\r\\n623578627\\r\\n815212310\\r\\n74571316\\r\\n580316230\\r\\n11782846\\r\\n9977202\\r\\n56164857\\r\\n453363728\\r\\n283577160\\r\\n112674480\\r\\n770828548\\r\\n441236116\\r\\n475210843\\r\\n997...', '743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n74369...', '743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n74369...', '34499784\\r\\n374247743\\r\\n362747815\\r\\n297560637\\r\\n574121750\\r\\n869682055\\r\\n449997441\\r\\n458622387\\r\\n930182193\\r\\n940681955\\r\\n376622642\\r\\n28249737\\r\\n622933686\\r\\n969931858\\r\\n400622664\\r\\n671871138\\r\\n811807848\\r\\n331623096\\r\\n223311188\\r\\n305748258\\r\\n203623639\\r\\n439935004\\r\\n185436339\\r\\n481622243\\r\\n517559518\\r\\n585621678\\r\\n66124586\\r\\n679996001\\r\\n894244918\\r\\n45999712\\r\\n243436062\\r\\n887057463\\r\\n525184298\\r\\n990056732\\r\\n154311620\\r\\n198873841\\r\\n227623661\\r\\n430809975\\r\\n12937419\\r\\n194561368\\r\\n140374035\\r\\n610059025\\r\\n715495951\\r\\n677058261\\r\\n731308352\\r\\n710120554\\r\\n143749100\\r...', '743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n74369...', '563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n56365...', '948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n94886...', '616415891\\r\\n743692045\\r\\n743692045\\r\\n616415891\\r\\n489139737\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n870968199\\r\\n616415891\\r\\n743692045\\r\\n616415891\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n489139737\\r\\n870968199\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n616415891\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n361863583\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n870968199\\r\\n616415891\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n107311275\\r\\n743692045\\r\\n870968199\\r\\n870968199\\r\\n87096...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['534464893\\r\\n70685433\\r\\n141370866\\r\\n605150326\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n605150326\\r\\n605150326\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n141370866\\r\\n70685433\\r\\n534464893\\r\\n141370866\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n605150326\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n...', '434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n43434...', '479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n47934...', '983882738\\r\\n723119688\\r\\n459823065\\r\\n556901314\\r\\n70724963\\r\\n266615302\\r\\n669551615\\r\\n128160584\\r\\n374823721\\r\\n636048406\\r\\n410086236\\r\\n880577836\\r\\n119251355\\r\\n80183061\\r\\n594759171\\r\\n13376576\\r\\n422252375\\r\\n548479185\\r\\n235532967\\r\\n555429175\\r\\n697576973\\r\\n194705367\\r\\n244991065\\r\\n696417466\\r\\n575930209\\r\\n911572937\\r\\n690252582\\r\\n173917166\\r\\n286156762\\r\\n203240195\\r\\n371392343\\r\\n232850391\\r\\n10955702\\r\\n65159878\\r\\n81942367\\r\\n928468125\\r\\n286592932\\r\\n499727395\\r\\n803102816\\r\\n81855133\\r\\n235158566\\r\\n824901521\\r\\n295851097\\r\\n716980269\\r\\n913157775\\r\\n996485047\\r\\n807919099\\r\\n4...', '535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n53563...', '483259721\\r\\n483259721\\r\\n451534810\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n709027126\\r\\n483259721\\r\\n966519442\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n740752037\\r\\n225767405\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n451534810\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n966519442\\r\\n225767405\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n225767405\\r\\n740752037\\r\\n483259721\\r\\n225767405\\r\\n740752037\\r\\n74075...', '365182673\\r\\n453133330\\r\\n646237559\\r\\n383557795\\r\\n419033749\\r\\n340436101\\r\\n116418016\\r\\n678527788\\r\\n945667567\\r\\n79030627\\r\\n870994872\\r\\n815130278\\r\\n370916978\\r\\n677151415\\r\\n467150520\\r\\n882361399\\r\\n890542201\\r\\n249936864\\r\\n39196741\\r\\n947579002\\r\\n636680384\\r\\n295607138\\r\\n675342063\\r\\n808325849\\r\\n29104504\\r\\n25918779\\r\\n103037971\\r\\n291784268\\r\\n445589673\\r\\n215200138\\r\\n658241231\\r\\n704446567\\r\\n478414964\\r\\n374535682\\r\\n193639291\\r\\n871632017\\r\\n186732779\\r\\n291784268\\r\\n138616008\\r\\n491795009\\r\\n475331322\\r\\n689894315\\r\\n243667497\\r\\n853256895\\r\\n714003742\\r\\n774124185\\r\\n363271238...', '985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n98542...', '155925765\\r\\n487818429\\r\\n547205425\\r\\n780737503\\r\\n891037610\\r\\n578930143\\r\\n825301017\\r\\n138861660\\r\\n552655747\\r\\n896394864\\r\\n881431780\\r\\n167493014\\r\\n480546290\\r\\n147428613\\r\\n697960072\\r\\n762448385\\r\\n870903408\\r\\n251332589\\r\\n614973238\\r\\n898519152\\r\\n581333635\\r\\n223833180\\r\\n271513325\\r\\n829479792\\r\\n130457576\\r\\n488950374\\r\\n631091534\\r\\n259853008\\r\\n403102846\\r\\n643511524\\r\\n491144463\\r\\n683066789\\r\\n279987210\\r\\n916459265\\r\\n497517327\\r\\n461078693\\r\\n513286618\\r\\n11055375\\r\\n943036132\\r\\n453946156\\r\\n770116063\\r\\n285321197\\r\\n954649915\\r\\n686299755\\r\\n305432132\\r\\n314991428\\r\\n917591...', '979248391\\r\\n467909552\\r\\n175190733\\r\\n498757573\\r\\n436634896\\r\\n282945489\\r\\n831422982\\r\\n525572199\\r\\n608769567\\r\\n291190788\\r\\n623553625\\r\\n907228321\\r\\n19120025\\r\\n908756352\\r\\n635157558\\r\\n367120190\\r\\n895500325\\r\\n121864053\\r\\n271093430\\r\\n805461626\\r\\n799170993\\r\\n621048261\\r\\n209948086\\r\\n214834751\\r\\n291190788\\r\\n88084033\\r\\n941559039\\r\\n256433435\\r\\n462472189\\r\\n261870798\\r\\n718354926\\r\\n62673375\\r\\n599120300\\r\\n207566785\\r\\n71042737\\r\\n669914911\\r\\n844128311\\r\\n594233635\\r\\n758976277\\r\\n186492094\\r\\n238841441\\r\\n949377703\\r\\n280013490\\r\\n621474896\\r\\n309333480\\r\\n356245464\\r\\n817740320...']}, {'input': '200000 3000\\r\\n0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 1 1 1 0 1 1 0 0 1 0 0 0 1 1 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 1 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 1 0 0 1 0 0 0 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 0 0 1 0 0 0 1 1 0 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 ...', 'output': ['684128648\\r\\n534537704\\r\\n70831055\\r\\n605368759\\r\\n605368759\\r\\n534537704\\r\\n55897238\\r\\n70831055\\r\\n534537704\\r\\n534537704\\r\\n605368759\\r\\n684128648\\r\\n55897238\\r\\n740025886\\r\\n534537704\\r\\n70831055\\r\\n70831055\\r\\n684128648\\r\\n70831055\\r\\n684128648\\r\\n425910181\\r\\n70831055\\r\\n605368759\\r\\n534537704\\r\\n534537704\\r\\n605368759\\r\\n684128648\\r\\n70831055\\r\\n684128648\\r\\n605368759\\r\\n70831055\\r\\n370012943\\r\\n370012943\\r\\n370012943\\r\\n605368759\\r\\n70831055\\r\\n534537704\\r\\n70831055\\r\\n370012943\\r\\n141662110\\r\\n534537704\\r\\n370012943\\r\\n370012943\\r\\n70831055\\r\\n684128648\\r\\n370012943\\r\\n684128648\\r\\n5345377...']}, {'input': '200000 3000\\r\\n1 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 1 1 0 1 1 1 1 0 0 1 0 1 0 0 1 0 1 1 0 1 0 1 1 0 0 1 1 0 0 1 0 1 0 1 1 0 0 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 1 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 0 1 0 0 0 1 1 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ...', 'output': ['331265679\\r\\n248932636\\r\\n609274319\\r\\n474255977\\r\\n102055814\\r\\n485644908\\r\\n626044190\\r\\n431097835\\r\\n319780031\\r\\n47044666\\r\\n687413158\\r\\n404806427\\r\\n125126455\\r\\n282606731\\r\\n307585492\\r\\n584577913\\r\\n604465119\\r\\n366599088\\r\\n490459582\\r\\n11853006\\r\\n753101524\\r\\n749114305\\r\\n816668970\\r\\n25465595\\r\\n942396724\\r\\n387086401\\r\\n558715961\\r\\n470999022\\r\\n908318742\\r\\n535377307\\r\\n712631115\\r\\n501708418\\r\\n465458062\\r\\n906281962\\r\\n309027298\\r\\n466289495\\r\\n88346508\\r\\n21689911\\r\\n46580591\\r\\n650678352\\r\\n435081076\\r\\n202663995\\r\\n554027989\\r\\n280201535\\r\\n865380747\\r\\n516485969\\r\\n226759102\\r\\n...']}, {'input': '200000 3000\\r\\n0 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 ...', 'output': ['702758762\\r\\n222668721\\r\\n663197048\\r\\n675792950\\r\\n759259581\\r\\n332486741\\r\\n171127920\\r\\n414458191\\r\\n349087590\\r\\n847918503\\r\\n522872021\\r\\n540727038\\r\\n813504457\\r\\n278812310\\r\\n949679696\\r\\n784095578\\r\\n918470307\\r\\n482110597\\r\\n535952792\\r\\n109088580\\r\\n967478176\\r\\n268019403\\r\\n523209396\\r\\n80286422\\r\\n566422901\\r\\n182974112\\r\\n166764579\\r\\n716767192\\r\\n203579125\\r\\n975507557\\r\\n770975186\\r\\n884777286\\r\\n433828625\\r\\n891459014\\r\\n519109900\\r\\n907459392\\r\\n591988953\\r\\n479131884\\r\\n989822907\\r\\n846824242\\r\\n304414023\\r\\n13755521\\r\\n6710438\\r\\n355497544\\r\\n718926904\\r\\n912736930\\r\\n173287893...']}, {'input': '10 3000\\r\\n1 1 1 1 1 0 0 0 1 1\\r\\n6 22 5 2 4 15 4 7 31 4\\r\\n', 'output': ['561258918\\r\\n61460660\\r\\n467715765\\r\\n187086306\\r\\n374172612\\r\\n538110090\\r\\n143496024\\r\\n251118042\\r\\n903349037\\r\\n374172612']}, {'input': '100 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n10 8 1 9 7 5 12 9 15 7 16 5 17 5 17 21 11 3 4 4 30 17 3 84 12 30 2 8 2 2 22 24 15 11 15 13 7 17 1 12 8 4 3 6 5 15 1 3 4 2 27 3 11 11 3 3 3 5 14 2 5 13 6 2 6 5 6 19 3 16 4 12 11 2 2 3 25 14 6 11 22 4 10 32 9 19 14 2 2 3 4 3 2 5 18 14 2 7 3 8\\r\\n', 'output': ['23677346\\r\\n418239618\\r\\n800963217\\r\\n220958482\\r\\n615520754\\r\\n11838673\\r\\n627359427\\r\\n220958482\\r\\n35516019\\r\\n615520754\\r\\n836479236\\r\\n11838673\\r\\n639198100\\r\\n11838673\\r\\n639198100\\r\\n848317909\\r\\n824640563\\r\\n406400945\\r\\n209119809\\r\\n209119809\\r\\n71032038\\r\\n639198100\\r\\n406400945\\r\\n398538577\\r\\n627359427\\r\\n71032038\\r\\n603682081\\r\\n418239618\\r\\n19778681\\r\\n603682081\\r\\n651036773\\r\\n256474501\\r\\n35516019\\r\\n824640563\\r\\n35516019\\r\\n430078291\\r\\n615520754\\r\\n639198100\\r\\n800963217\\r\\n627359427\\r\\n418239618\\r\\n209119809\\r\\n406400945\\r\\n812801890\\r\\n11838673\\r\\n35516019\\r\\n800963217\\r\\n406400...']}, {'input': '1000 3000\\r\\n0 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 ...', 'output': ['984664827\\r\\n971085301\\r\\n837724678\\r\\n984664827\\r\\n225735001\\r\\n971085301\\r\\n984664827\\r\\n611989677\\r\\n65215326\\r\\n611989677\\r\\n837724678\\r\\n984664827\\r\\n225735001\\r\\n984664827\\r\\n971085301\\r\\n225735001\\r\\n225735001\\r\\n984664827\\r\\n971085301\\r\\n957505775\\r\\n971085301\\r\\n984664827\\r\\n943926249\\r\\n225735001\\r\\n971085301\\r\\n611989677\\r\\n837724678\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n984664827\\r\\n971085301\\r\\n943926249\\r\\n943926249\\r\\n611989677\\r\\n971085301\\r\\n984664827\\r\\n957505775\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n971085301\\r\\n225735001\\r\\n837724678\\r\\n611989...']}, {'input': '1000 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n5\\r\\n5\\r\\n499122184\\r\\n10\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122184\\r\\n5\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122184\\r\\n5...']}, {'input': '199990 3000\\r\\n1 0 0 1 0 1 1 0 0 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 0 1 1 0 0 1 0 0 1 1 0 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 0 0 1 0 1 0 ...', 'output': ['646452156\\r\\n960868656\\r\\n118518242\\r\\n184272685\\r\\n747024268\\r\\n964037469\\r\\n951101180\\r\\n377347150\\r\\n254993892\\r\\n11139421\\r\\n70322210\\r\\n525571057\\r\\n926475930\\r\\n63428346\\r\\n756018063\\r\\n626131891\\r\\n466781454\\r\\n656042659\\r\\n69698706\\r\\n359694160\\r\\n226813875\\r\\n191435355\\r\\n897230167\\r\\n851910875\\r\\n872964055\\r\\n741910138\\r\\n963242791\\r\\n859073545\\r\\n501205753\\r\\n252469038\\r\\n77916365\\r\\n622358084\\r\\n867246600\\r\\n381481659\\r\\n57646031\\r\\n326439010\\r\\n37314488\\r\\n267966014\\r\\n386173645\\r\\n224253188\\r\\n693822089\\r\\n652063749\\r\\n209704954\\r\\n936775840\\r\\n675102836\\r\\n581756207\\r\\n18809453\\r\\n84...']}, {'input': '199991 3000\\r\\n1 0 1 0 0 1 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 ...', 'output': ['576788803\\r\\n851579816\\r\\n464431389\\r\\n925910539\\r\\n240339104\\r\\n317886519\\r\\n67707478\\r\\n262772669\\r\\n221595177\\r\\n612937974\\r\\n736137684\\r\\n268724388\\r\\n68361383\\r\\n847191682\\r\\n557301933\\r\\n913346054\\r\\n648280739\\r\\n171995554\\r\\n235269506\\r\\n530242292\\r\\n148650394\\r\\n908499525\\r\\n304200830\\r\\n721371958\\r\\n474031015\\r\\n817280262\\r\\n825707282\\r\\n465373250\\r\\n245622892\\r\\n341231679\\r\\n845696111\\r\\n853007293\\r\\n68361383\\r\\n915771149\\r\\n987480726\\r\\n726171771\\r\\n707992711\\r\\n478931968\\r\\n847890178\\r\\n687514833\\r\\n732279394\\r\\n927044872\\r\\n856499296\\r\\n862463110\\r\\n77307104\\r\\n484794642\\r\\n615409785...']}, {'input': '199992 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 ...', 'output': ['944579271\\r\\n815447430\\r\\n121435610\\r\\n89385736\\r\\n85360285\\r\\n56962924\\r\\n289585947\\r\\n344015172\\r\\n223771444\\r\\n652123221\\r\\n591303048\\r\\n4248454\\r\\n306743823\\r\\n968709911\\r\\n670850059\\r\\n672191876\\r\\n417953645\\r\\n24521845\\r\\n946915719\\r\\n777789018\\r\\n60838440\\r\\n839186865\\r\\n79733480\\r\\n134590444\\r\\n755625163\\r\\n504520550\\r\\n752912502\\r\\n172585260\\r\\n452314215\\r\\n812559060\\r\\n865646468\\r\\n584772439\\r\\n717751255\\r\\n344015172\\r\\n217454686\\r\\n551825\\r\\n985330789\\r\\n733776192\\r\\n951920831\\r\\n371680341\\r\\n447096882\\r\\n332238689\\r\\n688429333\\r\\n390729899\\r\\n623930596\\r\\n453096625\\r\\n858100172\\r\\n14638...']}, {'input': '199993 3000\\r\\n1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['189220773\\r\\n219328456\\r\\n767760662\\r\\n806220888\\r\\n797979411\\r\\n545740580\\r\\n219383989\\r\\n75297991\\r\\n40929720\\r\\n935115229\\r\\n532004785\\r\\n529257626\\r\\n49282263\\r\\n789793467\\r\\n545740580\\r\\n962586819\\r\\n485358615\\r\\n471678353\\r\\n907699172\\r\\n803473729\\r\\n408604762\\r\\n963918788\\r\\n35602001\\r\\n847372740\\r\\n611561330\\r\\n216636830\\r\\n729467035\\r\\n298885001\\r\\n73784562\\r\\n95928433\\r\\n405857603\\r\\n312620796\\r\\n126147182\\r\\n518268990\\r\\n353717115\\r\\n501841569\\r\\n512830205\\r\\n685568024\\r\\n252294364\\r\\n962586819\\r\\n477172671\\r\\n252637898\\r\\n246744513\\r\\n434391811\\r\\n52084955\\r\\n807039242\\r\\n414043547\\r\\n2...']}, {'input': '199994 3000\\r\\n0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 1 0 0 1 1 0 0 1 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 0 1 0 1 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 ...', 'output': ['336654971\\r\\n732535\\r\\n815250185\\r\\n326444659\\r\\n729180253\\r\\n129624924\\r\\n358796707\\r\\n444866639\\r\\n754810869\\r\\n843551608\\r\\n256744726\\r\\n70820418\\r\\n164515107\\r\\n207034102\\r\\n575220043\\r\\n87535002\\r\\n682699176\\r\\n43984065\\r\\n797070531\\r\\n806189316\\r\\n815982720\\r\\n704840912\\r\\n900587582\\r\\n585042405\\r\\n921264248\\r\\n459213067\\r\\n352526818\\r\\n883140463\\r\\n815669240\\r\\n511377385\\r\\n785483692\\r\\n225259507\\r\\n505565288\\r\\n832271475\\r\\n46481077\\r\\n860266192\\r\\n560703064\\r\\n99613410\\r\\n150730663\\r\\n410704936\\r\\n704840912\\r\\n915837096\\r\\n953960881\\r\\n968477860\\r\\n589004487\\r\\n187389378\\r\\n517884662\\r\\n93...']}, {'input': '199995 3000\\r\\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 ...', 'output': ['662762303\\r\\n929872487\\r\\n874878479\\r\\n456275271\\r\\n715183658\\r\\n400437516\\r\\n521458497\\r\\n76578537\\r\\n927594887\\r\\n897280874\\r\\n185062970\\r\\n530346011\\r\\n941267798\\r\\n71793140\\r\\n377419134\\r\\n675559304\\r\\n591654880\\r\\n719511098\\r\\n599406031\\r\\n622421976\\r\\n250476393\\r\\n605557988\\r\\n772627865\\r\\n133099572\\r\\n594620634\\r\\n848508553\\r\\n404542070\\r\\n193952921\\r\\n255031593\\r\\n40568087\\r\\n771704693\\r\\n756662785\\r\\n869935052\\r\\n847369753\\r\\n36238210\\r\\n358730629\\r\\n164552385\\r\\n938076721\\r\\n767600139\\r\\n458579571\\r\\n693757159\\r\\n843723156\\r\\n975014694\\r\\n858992824\\r\\n955398666\\r\\n756432588\\r\\n585958443...']}, {'input': '199996 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 ...', 'output': ['670876956\\r\\n282683795\\r\\n377011834\\r\\n803395587\\r\\n676385588\\r\\n935914218\\r\\n718622147\\r\\n536417373\\r\\n403228588\\r\\n282205508\\r\\n715874782\\r\\n593703261\\r\\n180906172\\r\\n125082949\\r\\n159213672\\r\\n79114647\\r\\n828013417\\r\\n919922217\\r\\n269261194\\r\\n677998414\\r\\n539957249\\r\\n116020539\\r\\n719578721\\r\\n947915860\\r\\n933837007\\r\\n911830283\\r\\n475864127\\r\\n320232037\\r\\n207122926\\r\\n915004383\\r\\n801796663\\r\\n301300804\\r\\n489000308\\r\\n929955103\\r\\n208735752\\r\\n169096397\\r\\n431236133\\r\\n485282467\\r\\n675865595\\r\\n711172563\\r\\n31711484\\r\\n780760415\\r\\n330893371\\r\\n339149368\\r\\n107928605\\r\\n630648538\\r\\n1150500...']}, {'input': '199997 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['509540793\\r\\n120976575\\r\\n549866318\\r\\n103886913\\r\\n46471726\\r\\n486304930\\r\\n356783524\\r\\n889560180\\r\\n199228995\\r\\n889560180\\r\\n825998792\\r\\n728258080\\r\\n40325525\\r\\n723460820\\r\\n584045642\\r\\n849234655\\r\\n398457990\\r\\n44073096\\r\\n355733835\\r\\n753892573\\r\\n259042812\\r\\n526630455\\r\\n218717287\\r\\n69707589\\r\\n445979405\\r\\n843088454\\r\\n549866318\\r\\n900503641\\r\\n915194673\\r\\n110033114\\r\\n233408319\\r\\n632915998\\r\\n443580775\\r\\n883413979\\r\\n356783524\\r\\n63561388\\r\\n314059369\\r\\n628118738\\r\\n543720117\\r\\n420344912\\r\\n705022217\\r\\n89195881\\r\\n535175286\\r\\n987300892\\r\\n72106219\\r\\n543720117\\r\\n785673267\\r\\n2...', '791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n79153...']}, {'input': '199998 3000\\r\\n1 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 1 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 1 1 1 0 0 1 0 1 0 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 1 0 0 1 0 0 1 1 1 1 0 0 1 1 0 0 ...', 'output': ['728321596\\r\\n638956912\\r\\n987568459\\r\\n799092377\\r\\n597086927\\r\\n782772546\\r\\n770287170\\r\\n255784080\\r\\n699516389\\r\\n256762390\\r\\n656812813\\r\\n513524780\\r\\n416026596\\r\\n285567597\\r\\n279669471\\r\\n136357125\\r\\n790734343\\r\\n479381626\\r\\n898668365\\r\\n822581531\\r\\n870855601\\r\\n827897584\\r\\n408064799\\r\\n759611276\\r\\n235779603\\r\\n990282556\\r\\n571135194\\r\\n279669471\\r\\n311516659\\r\\n287631268\\r\\n607109724\\r\\n822559637\\r\\n639460200\\r\\n369129744\\r\\n111968446\\r\\n157186402\\r\\n495141278\\r\\n652212868\\r\\n143815634\\r\\n367752526\\r\\n165008822\\r\\n592117981\\r\\n400788425\\r\\n793754430\\r\\n966900453\\r\\n2484473\\r\\n9089752...', '964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n96492...']}, {'input': '199999 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 ...', 'output': ['659992102\\r\\n43534688\\r\\n613251861\\r\\n688791385\\r\\n969096633\\r\\n244584877\\r\\n407865304\\r\\n186960964\\r\\n243317864\\r\\n549539932\\r\\n991833247\\r\\n262687380\\r\\n543128826\\r\\n494636937\\r\\n223625258\\r\\n610530943\\r\\n823731817\\r\\n148706567\\r\\n321255216\\r\\n793342431\\r\\n574351284\\r\\n666241663\\r\\n731705240\\r\\n759075965\\r\\n574351284\\r\\n267483036\\r\\n533214424\\r\\n650213898\\r\\n38254397\\r\\n748651581\\r\\n341432457\\r\\n458755021\\r\\n851102542\\r\\n458618823\\r\\n777016923\\r\\n879306339\\r\\n831596828\\r\\n223948348\\r\\n334458632\\r\\n214654779\\r\\n250672893\\r\\n599162636\\r\\n601914362\\r\\n888897651\\r\\n620419998\\r\\n546470577\\r\\n2155987...', '959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n550771238\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n550771238\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n95962...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 ...', 'output': ['893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n917300718\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n89340...', '777798569\\r\\n231173131\\r\\n230887037\\r\\n573284389\\r\\n184819702\\r\\n389069614\\r\\n336642733\\r\\n374568480\\r\\n855432105\\r\\n25206655\\r\\n4356888\\r\\n605147597\\r\\n575616793\\r\\n296362756\\r\\n407873071\\r\\n112177054\\r\\n213967495\\r\\n814007752\\r\\n159623960\\r\\n280717246\\r\\n614422648\\r\\n758973286\\r\\n52239134\\r\\n765343745\\r\\n464084652\\r\\n192059356\\r\\n447272940\\r\\n617899428\\r\\n590679202\\r\\n570104616\\r\\n874554395\\r\\n774321789\\r\\n991301706\\r\\n991873894\\r\\n397156637\\r\\n113523353\\r\\n617052059\\r\\n46639523\\r\\n446403745\\r\\n35361814\\r\\n921640272\\r\\n891146426\\r\\n273084002\\r\\n58808253\\r\\n533015325\\r\\n30707919\\r\\n154980978\\r\\n71...']}, {'input': '200000 3000\\r\\n1 0 0 0 0 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 1 0 1 0 0 1 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 1 0 ...', 'output': ['203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n71266...']}, {'input': '200000 3000\\r\\n0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 1 0 1 0 1 1 1 0 0 0 1 0 1 1 0 1 1 0 0 0 1 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 0 1 1 0 1 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 0 1 1 1 1 1 1 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 0 1 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 ...', 'output': ['532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n53...']}]", "source_code": "#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=2e5+10;\nconst int mod=998244353;\nll pow(ll a,ll b,ll mod)\n{\n\tll res=1;\n\twhile(b)\n\t{\n\t\tif(b&1) res=res*a%mod;\n\t\ta=a*a%mod;\n\t\tb>>=1;\n\t}\n\treturn res;\n}\nint fac[N],inv[N];\nvoid init()\n{\n\tfac[0]=1;\n\tfor(int i=1;i<=N-1;i++) fac[i]=fac[i-1]*i%mod;\n\tinv[N-1]=pow(fac[N-1],mod-2,mod);\n\tfor(int i=N-2;i>=0;i--) inv[i]=inv[i+1]*(i+1)%mod;\n}\nll C(ll a,ll b)\n{\n\tif(b<0) return 0;\n\treturn fac[a]*inv[b]%mod*inv[a-b]%mod;\n}\nint main()\n{\n\tinit();\n\tint n,m;\n\tcin>>n>>m;\n\tvector<int> s(n),w(n);\n\tfor(int i=0;i<n;i++) cin>>s[i];\n\tfor(int i=0;i<n;i++) cin>>w[i];\n\tll sum=0;\n\tfor(int i=0;i<n;i++)\n\t\tif(s[i])\n\t\t\tsum=(sum+w[i])%mod;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tif(!s[i]) continue;\n\t\tll ans=(C((m+w[i]-1),m)-mod+sum)%mod;\n\t\tans=(ans*inv[w[i]]+mod)%mod;\n\t\tcout<<ans<<endl;\n\t}\n}"}
{"src_uid": "ba9c136f84375cd317f0f8b53e3939c7", "id": 31, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '2 1\\r\\n0 1\\r\\n2 1\\r\\n', 'output': ['332748119\\r\\n332748119']}, {'input': '1 2\\r\\n1\\r\\n1\\r\\n', 'output': ['3']}, {'input': '3 3\\r\\n0 1 1\\r\\n4 3 5\\r\\n', 'output': ['160955686\\r\\n185138929\\r\\n974061117']}, {'input': '5 5\\r\\n0 1 0 0 1\\r\\n9 8 3 8 8\\r\\n', 'output': ['45170585\\r\\n105647559\\r\\n680553097\\r\\n483815788\\r\\n105647559']}, {'input': '10 10\\r\\n0 1 0 0 1 1 1 1 1 1\\r\\n12 18 6 18 7 2 9 18 1 9\\r\\n', 'output': ['199115375\\r\\n823101465\\r\\n598679864\\r\\n797795239\\r\\n486469073\\r\\n424203836\\r\\n910672909\\r\\n823101465\\r\\n212101918\\r\\n910672909']}, {'input': '20 20\\r\\n1 1 1 1 0 1 1 1 0 1 0 1 0 0 1 0 1 1 0 1\\r\\n1 13 7 11 17 15 19 18 14 11 15 1 12 4 5 16 14 11 18 9\\r\\n', 'output': ['688505688\\r\\n964619120\\r\\n826562404\\r\\n585852097\\r\\n851622699\\r\\n345141790\\r\\n104431483\\r\\n414170148\\r\\n349014804\\r\\n585852097\\r\\n516550769\\r\\n688505688\\r\\n13942874\\r\\n670143860\\r\\n447795381\\r\\n684086734\\r\\n654880455\\r\\n585852097\\r\\n20914311\\r\\n207085074']}, {'input': '30 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0\\r\\n1 2 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 2 2 1 1 2 2 2\\r\\n', 'output': ['346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n542025302\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n693292404\\r\\n693292404']}, {'input': '40 40\\r\\n1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n28 13 22 35 22 13 23 35 14 36 30 10 10 15 3 9 35 35 9 29 14 28 8 29 22 30 4 31 39 24 4 19 37 4 20 7 11 17 3 25\\r\\n', 'output': ['368107101\\r\\n848286965\\r\\n360530176\\r\\n210572788\\r\\n199380339\\r\\n848286965\\r\\n195418938\\r\\n210572788\\r\\n683175727\\r\\n45461550\\r\\n37884625\\r\\n544374860\\r\\n345376326\\r\\n518064489\\r\\n502910639\\r\\n510487564\\r\\n210572788\\r\\n210572788\\r\\n510487564\\r\\n202995863\\r\\n683175727\\r\\n526005255\\r\\n675598802\\r\\n202995863\\r\\n360530176\\r\\n37884625\\r\\n337799401\\r\\n871017740\\r\\n548372189\\r\\n30307700\\r\\n337799401\\r\\n855863890\\r\\n878594665\\r\\n337799401\\r\\n690752652\\r\\n840710040\\r\\n180265088\\r\\n187842013\\r\\n502910639\\r\\n863440815']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n13 18 27 40 3 1 20 11 25 11 2 31 22 15 36 12 11 24 8 39 31 36 19 24 10 39 27 4 10 22 14 3 25 5 24 19 20 33 17 19 30 15 37 33 3 27 26 29 37 34\\r\\n', 'output': ['30685719\\r\\n733580163\\r\\n601248068\\r\\n631933787\\r\\n621385537\\r\\n539876630\\r\\n815089070\\r\\n947421165\\r\\n519739161\\r\\n947421165\\r\\n81508907\\r\\n764265882\\r\\n896597977\\r\\n112194626\\r\\n468915973\\r\\n489053442\\r\\n947421165\\r\\n978106884\\r\\n326035628\\r\\n92057157\\r\\n764265882\\r\\n468915973\\r\\n275212440\\r\\n978106884\\r\\n407544535\\r\\n92057157\\r\\n601248068\\r\\n163017814\\r\\n407544535\\r\\n896597977\\r\\n570562349\\r\\n621385537\\r\\n519739161\\r\\n702894444\\r\\n978106884\\r\\n275212440\\r\\n815089070\\r\\n845774789\\r\\n193703533\\r\\n275212440\\r\\n224389252\\r\\n112194626\\r\\n10548250\\r\\n845774789\\r\\n621385537\\r\\n601248068\\r\\n61371438\\r\\n...']}, {'input': '50 50\\r\\n0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0\\r\\n2 50 37 21 21 2 26 49 15 44 8 27 30 28 26 40 26 45 41 37 27 34 8 35 2 23 2 49 13 1 39 37 12 42 7 11 4 50 42 21 27 50 28 31 17 22 10 43 46 13\\r\\n', 'output': ['380563607\\r\\n529890998\\r\\n551838435\\r\\n502062638\\r\\n635094670\\r\\n380563607\\r\\n954349479\\r\\n816391328\\r\\n358616170\\r\\n386444530\\r\\n907437062\\r\\n645509106\\r\\n717232340\\r\\n336668733\\r\\n954349479\\r\\n623561669\\r\\n954349479\\r\\n77604157\\r\\n314721296\\r\\n453480088\\r\\n645509106\\r\\n480115201\\r\\n907437062\\r\\n725742999\\r\\n380563607\\r\\n362831759\\r\\n725981442\\r\\n838731371\\r\\n976296916\\r\\n362990721\\r\\n932402042\\r\\n551838435\\r\\n286892936\\r\\n5880923\\r\\n832850448\\r\\n998164872\\r\\n761127214\\r\\n529890998\\r\\n5880923\\r\\n502062638\\r\\n645509106\\r\\n181137696\\r\\n181296658\\r\\n408391967\\r\\n739179777\\r\\n193222265\\r\\n904573682\\r...']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 1 2 2 2 1 1 1\\r\\n', 'output': ['665496237\\r\\n332748121\\r\\n332748121\\r\\n665496237\\r\\n332748121\\r\\n332748121\\r\\n332748121\\r\\n665496237\\r\\n665496237\\r\\n665496237']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 0 1 1\\r\\n2 1 2 2 1 1 1 1 1 1\\r\\n', 'output': ['771370640\\r\\n385685320\\r\\n771370640\\r\\n771370640\\r\\n385685320\\r\\n385685320\\r\\n385685320\\r\\n635246407\\r\\n385685320\\r\\n385685320']}, {'input': '10 10\\r\\n0 0 0 1 0 0 0 0 0 0\\r\\n2 2 2 2 2 2 2 1 2 2\\r\\n', 'output': ['973938381\\r\\n973938381\\r\\n973938381\\r\\n791643586\\r\\n973938381\\r\\n973938381\\r\\n973938381\\r\\n986091367\\r\\n973938381\\r\\n973938381']}, {'input': '10 10\\r\\n0 0 1 0 0 0 1 0 0 0\\r\\n2 1 2 1 1 2 1 1 1 1\\r\\n', 'output': ['44896189\\r\\n521570271\\r\\n482402083\\r\\n521570271\\r\\n521570271\\r\\n44896189\\r\\n740323218\\r\\n521570271\\r\\n521570271\\r\\n521570271']}, {'input': '10 10\\r\\n1 0 0 0 1 1 1 0 1 0\\r\\n1 2 1 2 1 1 2 2 2 1\\r\\n', 'output': ['910950063\\r\\n595918255\\r\\n797081304\\r\\n595918255\\r\\n910950063\\r\\n910950063\\r\\n823655773\\r\\n595918255\\r\\n823655773\\r\\n797081304']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n17 10 8 34 5 4 3 44 20 14\\r\\n', 'output': ['709444118\\r\\n6278277\\r\\n803618104\\r\\n420643883\\r\\n502261315\\r\\n401809052\\r\\n301356789\\r\\n426922160\\r\\n12556554\\r\\n408087329']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 0 1\\r\\n40 36 29 4 36 35 9 38 40 18\\r\\n', 'output': ['59109317\\r\\n951618303\\r\\n17898146\\r\\n105735367\\r\\n951618303\\r\\n675623373\\r\\n487465664\\r\\n505363810\\r\\n736385984\\r\\n974931328']}, {'input': '10 10\\r\\n0 0 0 0 0 0 0 1 0 0\\r\\n8 33 37 18 30 48 45 34 25 48\\r\\n', 'output': ['211347083\\r\\n497465085\\r\\n104016450\\r\\n725092025\\r\\n542990473\\r\\n269838145\\r\\n315363533\\r\\n227335634\\r\\n286118002\\r\\n269838145']}, {'input': '10 10\\r\\n0 0 1 0 0 0 0 0 1 0\\r\\n47 34 36 9 3 16 17 46 47 1\\r\\n', 'output': ['167709201\\r\\n57603825\\r\\n597597985\\r\\n690531016\\r\\n562925123\\r\\n673030499\\r\\n527924089\\r\\n312815611\\r\\n253346183\\r\\n853137943']}, {'input': '10 10\\r\\n1 0 0 1 1 0 1 0 0 1\\r\\n24 7 10 9 6 13 27 17 6 39\\r\\n', 'output': ['976715988\\r\\n573793375\\r\\n391885813\\r\\n865390672\\r\\n244178997\\r\\n209978251\\r\\n599683310\\r\\n965679188\\r\\n634429229\\r\\n89796951']}, {'input': '10 10\\r\\n0 0 0 0 0 1 0 0 0 0\\r\\n34 34 34 34 34 34 34 34 34 34\\r\\n', 'output': ['971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n754874965\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n43 43 43 43 43 43 43 43 43 43\\r\\n', 'output': ['44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 2 1 1 2 1 1 1 2 1 1 2 1 2 1 2 1 2 1 2 2 2 1 2 2 2 2 1\\r\\n', 'output': ['260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1\\r\\n2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 2 2 2 2 1 2 1 2 1 1 1 1 2 1\\r\\n', 'output': ['720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n720162001\\r\\n720162001\\r\\n720162001\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n720162001\\r\\n427819009\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177']}, {'input': '30 30\\r\\n0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n2 1 1 2 1 2 2 2 2 2 1 1 2 2 2 1 2 2 2 1 2 1 1 1 1 1 2 1 1 1\\r\\n', 'output': ['188114875\\r\\n593179614\\r\\n593179614\\r\\n550614566\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n593179614']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 1 1 1 2 1 2 2 1 2 1 2 1 1 2 2 1 2 1 2 1 2 2 2 1 1 2 1 2 2\\r\\n', 'output': ['593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n275307283\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n275307283\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875']}, {'input': '30 30\\r\\n1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 1 1 0 1 0 1 0 0 1 1 0 1 0 1 0\\r\\n1 1 1 2 2 1 2 1 2 1 1 2 2 2 1 2 1 1 1 1 1 2 1 2 1 2 1 2 1 1\\r\\n', 'output': ['297674502\\r\\n297674502\\r\\n297674502\\r\\n101192689\\r\\n595349004\\r\\n549718521\\r\\n101192689\\r\\n297674502\\r\\n595349004\\r\\n297674502\\r\\n549718521\\r\\n101192689\\r\\n101192689\\r\\n101192689\\r\\n549718521\\r\\n595349004\\r\\n297674502\\r\\n549718521\\r\\n297674502\\r\\n549718521\\r\\n297674502\\r\\n101192689\\r\\n549718521\\r\\n595349004\\r\\n297674502\\r\\n101192689\\r\\n297674502\\r\\n101192689\\r\\n297674502\\r\\n549718521']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n23 45 44 49 17 36 32 26 40 8 36 11 5 19 41 16 7 38 23 40 13 16 24 44 22 13 1 2 32 31\\r\\n', 'output': ['42365832\\r\\n603712812\\r\\n124449607\\r\\n524276926\\r\\n161519661\\r\\n283321379\\r\\n362757265\\r\\n481911094\\r\\n203885493\\r\\n839372581\\r\\n283321379\\r\\n280673490\\r\\n399827319\\r\\n121801718\\r\\n683148698\\r\\n680500809\\r\\n360109376\\r\\n243603436\\r\\n42365832\\r\\n203885493\\r\\n240955547\\r\\n680500809\\r\\n521629037\\r\\n124449607\\r\\n561346980\\r\\n240955547\\r\\n479263205\\r\\n958526410\\r\\n362757265\\r\\n881738413']}, {'input': '30 30\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n41 39 15 34 45 27 18 7 48 33 46 11 24 16 35 43 7 31 26 17 30 15 5 9 29 20 21 37 3 7\\r\\n', 'output': ['61128841\\r\\n655563720\\r\\n98563838\\r\\n955457225\\r\\n295691514\\r\\n377063779\\r\\n916872088\\r\\n578393446\\r\\n115755411\\r\\n17191573\\r\\n235712813\\r\\n338478642\\r\\n556999882\\r\\n38585137\\r\\n895478524\\r\\n415648916\\r\\n578393446\\r\\n137148975\\r\\n437042480\\r\\n976850789\\r\\n197127676\\r\\n98563838\\r\\n698350848\\r\\n458436044\\r\\n257106377\\r\\n796914686\\r\\n736935985\\r\\n775521122\\r\\n818308250\\r\\n578393446']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n29 38 18 19 46 28 12 5 46 17 31 20 24 33 9 6 47 2 2 41 34 2 50 5 47 10 40 21 49 28\\r\\n', 'output': ['528451192\\r\\n658031067\\r\\n259159750\\r\\n828137710\\r\\n218632982\\r\\n957717585\\r\\n838269402\\r\\n848401094\\r\\n218632982\\r\\n688426143\\r\\n942792071\\r\\n398871317\\r\\n678294451\\r\\n807874326\\r\\n129579875\\r\\n419134701\\r\\n787610942\\r\\n139711567\\r\\n139711567\\r\\n368476241\\r\\n378607933\\r\\n139711567\\r\\n498056116\\r\\n848401094\\r\\n787610942\\r\\n698557835\\r\\n797742634\\r\\n967849277\\r\\n927322509\\r\\n957717585']}, {'input': '30 30\\r\\n0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 12 9 1 5 32 38 25 34 31 27 43 13 38 48 40 5 42 20 45 1 4 35 38 1 44 31 42 8 37\\r\\n', 'output': ['399967190\\r\\n806628868\\r\\n604971651\\r\\n399967190\\r\\n3347244\\r\\n800038448\\r\\n225087925\\r\\n16736220\\r\\n621707871\\r\\n420050654\\r\\n816670600\\r\\n228435169\\r\\n208351705\\r\\n225087925\\r\\n231782413\\r\\n26777952\\r\\n3347244\\r\\n51806110\\r\\n13388976\\r\\n30125196\\r\\n399967190\\r\\n601624407\\r\\n23430708\\r\\n225087925\\r\\n399967190\\r\\n628402359\\r\\n420050654\\r\\n826712332\\r\\n205004461\\r\\n823365088']}, {'input': '30 30\\r\\n0 1 1 0 0 1 1 1 1 0 0 1 0 0 1 0 0 0 1 0 1 1 0 0 0 1 1 1 1 0\\r\\n5 20 47 27 17 5 18 30 43 23 44 6 47 8 23 41 2 46 49 33 45 27 33 16 36 2 42 36 8 23\\r\\n', 'output': ['114252107\\r\\n760713694\\r\\n489959522\\r\\n18014766\\r\\n787754905\\r\\n689300600\\r\\n484993454\\r\\n142826188\\r\\n936763395\\r\\n126261951\\r\\n805769671\\r\\n827160720\\r\\n475023194\\r\\n781749983\\r\\n176049701\\r\\n138271795\\r\\n444998584\\r\\n252523902\\r\\n765679762\\r\\n354766165\\r\\n214239282\\r\\n727490181\\r\\n354766165\\r\\n565255613\\r\\n24019688\\r\\n275720240\\r\\n798903275\\r\\n969986908\\r\\n104636607\\r\\n126261951']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\r\\n39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39\\r\\n', 'output': ['417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n142843895']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22\\r\\n', 'output': ['23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n2 1 1 2 2 1 2 1 1 2 2 2 1 2 2 1 1 1 2 1 2 1 2 2 2 1 2 1 1 2 2 2 2 2 1 2 2 2 2 2 2 1 2 1 2 2 2 1 1 2\\r\\n', 'output': ['714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n71479...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 1 2 1 1 1 1 1 2 1 1 1 2 2 2 1 1 1 1 2 2 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 2 2 2 1\\r\\n', 'output': ['964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n824636640\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n93147...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\\r\\n1 2 2 2 2 2 2 1 1 2 2 1 1 2 1 2 2 1 2 1 2 2 1 2 2 2 1 1 1 1 2 2 2 1 2 2 1 2 2 1 1 2 2 2 2 2 1 2 2 1\\r\\n', 'output': ['512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n96131098\\r\\n27359387\\r\\n27359387\\r\\n5128...']}, {'input': '50 50\\r\\n0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\r\\n2 1 1 1 1 2 2 2 1 1 2 2 2 1 2 1 2 2 2 1 1 1 1 2 2 1 1 1 1 2 1 2 2 2 2 1 1 1 2 1 2 1 1 2 2 1 1 2 2 1\\r\\n', 'output': ['303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n480354901\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n15198...']}, {'input': '50 50\\r\\n0 0 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0\\r\\n1 1 1 1 1 2 2 1 1 2 2 2 1 1 1 2 2 2 1 1 1 1 2 1 1 1 2 2 1 1 1 2 2 1 1 2 1 1 2 2 2 2 2 2 2 2 2 1 2 1\\r\\n', 'output': ['525100120\\r\\n525100120\\r\\n392384920\\r\\n525100120\\r\\n525100120\\r\\n51955887\\r\\n784769840\\r\\n525100120\\r\\n392384920\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n392384920\\r\\n392384920\\r\\n525100120\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n392384920\\r\\n392384920\\r\\n392384920\\r\\n392384920\\r\\n784769840\\r\\n392384920\\r\\n525100120\\r\\n392384920\\r\\n51955887\\r\\n784769840\\r\\n525100120\\r\\n392384920\\r\\n525100120\\r\\n51955887\\r\\n51955887\\r\\n525100120\\r\\n392384920\\r\\n784769840\\r\\n525100120\\r\\n525100120\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n51955887\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n784769840\\r\\n51955887\\r\\n5251...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n32 22 24 45 22 17 10 5 27 1 48 15 14 43 11 16 38 31 24 19 5 28 2 4 34 29 18 32 47 11 2 34 39 29 36 11 39 24 23 16 41 45 17 39 30 15 16 3 3 8\\r\\n', 'output': ['118672439\\r\\n268758118\\r\\n837687594\\r\\n821980974\\r\\n268758118\\r\\n842923134\\r\\n848158674\\r\\n424079337\\r\\n692837455\\r\\n284464738\\r\\n677130835\\r\\n273993658\\r\\n987773273\\r\\n253051498\\r\\n134379059\\r\\n558458396\\r\\n827216514\\r\\n832452054\\r\\n837687594\\r\\n413608257\\r\\n424079337\\r\\n977302193\\r\\n568929476\\r\\n139614599\\r\\n687601915\\r\\n263522578\\r\\n129143519\\r\\n118672439\\r\\n392666097\\r\\n134379059\\r\\n568929476\\r\\n687601915\\r\\n113436899\\r\\n263522578\\r\\n258287038\\r\\n134379059\\r\\n113436899\\r\\n837687594\\r\\n553222856\\r\\n558458396\\r\\n682366375\\r\\n821980974\\r\\n842923134\\r\\n113436899\\r\\n547987316\\r\\n273993658\\r\\n55845...']}, {'input': '50 50\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n49 34 4 15 32 20 22 35 3 28 15 46 4 46 16 11 45 42 11 4 15 36 29 10 27 32 1 1 23 11 6 34 35 19 11 5 2 37 9 20 39 33 27 4 21 33 6 23 37 50\\r\\n', 'output': ['41887747\\r\\n858571128\\r\\n101008368\\r\\n378781380\\r\\n808066944\\r\\n505041840\\r\\n555546024\\r\\n883823220\\r\\n75756276\\r\\n707058576\\r\\n378781380\\r\\n163351879\\r\\n101008368\\r\\n163351879\\r\\n404033472\\r\\n277773012\\r\\n138099787\\r\\n62343511\\r\\n277773012\\r\\n101008368\\r\\n378781380\\r\\n909075312\\r\\n732310668\\r\\n252520920\\r\\n681806484\\r\\n808066944\\r\\n25252092\\r\\n25252092\\r\\n580798116\\r\\n277773012\\r\\n151512552\\r\\n858571128\\r\\n883823220\\r\\n479789748\\r\\n277773012\\r\\n126260460\\r\\n50504184\\r\\n934327404\\r\\n227268828\\r\\n505041840\\r\\n984831588\\r\\n833319036\\r\\n681806484\\r\\n101008368\\r\\n530293932\\r\\n833319036\\r\\n151512552\\r\\n...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n12 29 36 24 44 22 38 43 30 19 15 2 39 8 13 50 29 18 37 19 32 39 42 41 20 11 14 25 4 35 14 23 17 29 1 19 3 6 8 31 26 46 9 31 36 49 21 38 17 27\\r\\n', 'output': ['820896192\\r\\n985588111\\r\\n466199870\\r\\n643548031\\r\\n15219645\\r\\n506731999\\r\\n603015902\\r\\n945055982\\r\\n986069299\\r\\n301507951\\r\\n27875887\\r\\n136816032\\r\\n671423918\\r\\n547264128\\r\\n889304208\\r\\n425667741\\r\\n985588111\\r\\n233099935\\r\\n534607886\\r\\n301507951\\r\\n192567806\\r\\n671423918\\r\\n876647966\\r\\n808239950\\r\\n369915967\\r\\n752488176\\r\\n957712224\\r\\n711956047\\r\\n273632064\\r\\n397791854\\r\\n957712224\\r\\n575140015\\r\\n164691919\\r\\n985588111\\r\\n68408016\\r\\n301507951\\r\\n205224048\\r\\n410448096\\r\\n547264128\\r\\n124159790\\r\\n780364063\\r\\n152035677\\r\\n615672144\\r\\n124159790\\r\\n466199870\\r\\n357259725\\r\\n43832398...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n25 31 26 45 2 6 25 14 35 23 31 16 24 36 44 8 18 41 36 3 27 21 15 44 45 45 25 8 3 43 7 25 48 45 44 33 25 49 8 46 14 12 12 46 45 43 29 40 1 47\\r\\n', 'output': ['26673909\\r\\n312584066\\r\\n906195896\\r\\n646959648\\r\\n760799621\\r\\n285910157\\r\\n26673909\\r\\n334375582\\r\\n835938955\\r\\n264118641\\r\\n312584066\\r\\n96930850\\r\\n145396275\\r\\n717216589\\r\\n765682014\\r\\n48465425\\r\\n857730471\\r\\n123604759\\r\\n717216589\\r\\n642077255\\r\\n787473530\\r\\n501563373\\r\\n215653216\\r\\n765682014\\r\\n646959648\\r\\n108381283\\r\\n26673909\\r\\n48465425\\r\\n642077255\\r\\n884404380\\r\\n167187791\\r\\n26673909\\r\\n290792550\\r\\n646959648\\r\\n765682014\\r\\n75139334\\r\\n614792020\\r\\n172070184\\r\\n48465425\\r\\n528237282\\r\\n334375582\\r\\n571820314\\r\\n571820314\\r\\n528237282\\r\\n646959648\\r\\n884404380\\r\\n550028798\\r\\n242...']}, {'input': '50 50\\r\\n0 0 0 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 0 0\\r\\n45 49 17 22 28 34 24 38 5 46 22 36 11 12 43 21 47 39 38 38 38 27 10 49 19 46 23 7 46 35 11 38 25 16 7 32 12 13 44 14 41 36 7 31 4 46 40 28 28 46\\r\\n', 'output': ['644620779\\r\\n102973792\\r\\n443172276\\r\\n267699221\\r\\n201448503\\r\\n886344552\\r\\n745782947\\r\\n99391617\\r\\n196964962\\r\\n259647944\\r\\n267699221\\r\\n619552244\\r\\n632971787\\r\\n371547745\\r\\n416322096\\r\\n28657358\\r\\n254279678\\r\\n338433480\\r\\n344697565\\r\\n344697565\\r\\n99391617\\r\\n464664183\\r\\n143249062\\r\\n102973792\\r\\n548817985\\r\\n15237815\\r\\n129823972\\r\\n675048688\\r\\n259647944\\r\\n380510381\\r\\n756520580\\r\\n344697565\\r\\n984824810\\r\\n829936749\\r\\n675048688\\r\\n658045869\\r\\n371547745\\r\\n112811160\\r\\n535398442\\r\\n599846428\\r\\n188023413\\r\\n619552244\\r\\n299923214\\r\\n44774351\\r\\n956167452\\r\\n259647944\\r\\n577475343\\r...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47\\r\\n', 'output': ['529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n988406960\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n52947...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\\r\\n', 'output': ['9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9']}, {'input': '5 50\\r\\n1 1 1 1 1\\r\\n1 1 4 2 3\\r\\n', 'output': ['635246412\\r\\n635246412\\r\\n544496942\\r\\n272248471\\r\\n907494883']}, {'input': '10 50\\r\\n0 0 0 0 0 0 0 0 1 0\\r\\n3 1 3 3 1 3 1 2 2 1\\r\\n', 'output': ['187134581\\r\\n727874429\\r\\n187134581\\r\\n187134581\\r\\n727874429\\r\\n187134581\\r\\n727874429\\r\\n457504505\\r\\n124563167\\r\\n727874429']}, {'input': '20 50\\r\\n1 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1\\r\\n1 2 2 1 2 2 2 2 2 2 1 1 2 2 2 1 1 1 2 2\\r\\n', 'output': ['853605709\\r\\n708967065\\r\\n708967065\\r\\n853605709\\r\\n708967065\\r\\n708967065\\r\\n708967065\\r\\n922030188\\r\\n708967065\\r\\n922030188\\r\\n853605709\\r\\n853605709\\r\\n708967065\\r\\n922030188\\r\\n708967065\\r\\n461015094\\r\\n853605709\\r\\n853605709\\r\\n708967065\\r\\n708967065']}, {'input': '20 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 2 2 2 2 1 2 1 2 1 2 1 1 2 1 2 2 1\\r\\n', 'output': ['436731907\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n873463814\\r\\n436731907']}, {'input': '40 50\\r\\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0\\r\\n33 26 4 19 42 43 19 32 13 23 19 1 18 43 43 43 19 31 4 25 28 23 33 37 36 23 5 12 18 32 34 1 21 22 34 35 37 16 41 39\\r\\n', 'output': ['729284231\\r\\n60340485\\r\\n239647233\\r\\n389641092\\r\\n20685064\\r\\n829280137\\r\\n389641092\\r\\n918933511\\r\\n529292419\\r\\n629288325\\r\\n366487398\\r\\n808595073\\r\\n579290372\\r\\n829280137\\r\\n829280137\\r\\n41331201\\r\\n389641092\\r\\n110338438\\r\\n239647233\\r\\n249989765\\r\\n679286278\\r\\n629288325\\r\\n426374038\\r\\n968931464\\r\\n160336391\\r\\n629288325\\r\\n49997953\\r\\n718941699\\r\\n579290372\\r\\n918933511\\r\\n539634951\\r\\n808595073\\r\\n89829960\\r\\n818937605\\r\\n539634951\\r\\n349985671\\r\\n968931464\\r\\n958588932\\r\\n210334344\\r\\n589632904']}, {'input': '41 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 2 4 2 3 2 4 3 1 1 3 1 3 2 5 3 3 5 4 4 1 1 2 3 2 1 5 5 5 4 2 2 2 1 2 4 4 5 2 1 4\\r\\n', 'output': ['394710173\\r\\n789420346\\r\\n580596339\\r\\n789420346\\r\\n185886166\\r\\n789420346\\r\\n580596339\\r\\n185886166\\r\\n394710173\\r\\n394710173\\r\\n185886166\\r\\n394710173\\r\\n581788048\\r\\n789420346\\r\\n636898629\\r\\n185886166\\r\\n185886166\\r\\n975306512\\r\\n580596339\\r\\n580596339\\r\\n394710173\\r\\n394710173\\r\\n55110581\\r\\n185886166\\r\\n55110581\\r\\n394710173\\r\\n975306512\\r\\n975306512\\r\\n975306512\\r\\n580596339\\r\\n789420346\\r\\n789420346\\r\\n789420346\\r\\n394710173\\r\\n789420346\\r\\n580596339\\r\\n580596339\\r\\n975306512\\r\\n789420346\\r\\n394710173\\r\\n580596339']}, {'input': '42 50\\r\\n0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0\\r\\n2 4 6 8 1 3 6 1 4 1 3 4 3 7 6 6 8 7 4 1 7 4 6 9 3 1 9 7 1 2 9 3 1 6 1 5 1 8 2 6 8 8\\r\\n', 'output': ['11284873\\r\\n329090227\\r\\n33854619\\r\\n45139492\\r\\n504764613\\r\\n995500935\\r\\n33854619\\r\\n504764613\\r\\n22569746\\r\\n504764613\\r\\n516049486\\r\\n22569746\\r\\n516049486\\r\\n538619232\\r\\n33854619\\r\\n33854619\\r\\n45139492\\r\\n538619232\\r\\n22569746\\r\\n504764613\\r\\n538619232\\r\\n22569746\\r\\n33854619\\r\\n549904105\\r\\n516049486\\r\\n504764613\\r\\n549904105\\r\\n538619232\\r\\n504764613\\r\\n11284873\\r\\n990014099\\r\\n516049486\\r\\n504764613\\r\\n33854619\\r\\n504764613\\r\\n527334359\\r\\n504764613\\r\\n45139492\\r\\n663667290\\r\\n33854619\\r\\n45139492\\r\\n45139492']}, {'input': '43 50\\r\\n1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n13 7 13 15 8 9 11 1 15 9 3 7 3 15 4 7 7 16 9 13 12 16 16 1 5 5 14 5 17 2 1 13 4 13 10 17 17 6 11 15 14 3 6\\r\\n', 'output': ['175780254\\r\\n94650906\\r\\n163530008\\r\\n802992688\\r\\n561362014\\r\\n881093354\\r\\n522311681\\r\\n319731340\\r\\n802992688\\r\\n881093354\\r\\n959194020\\r\\n241630674\\r\\n959194020\\r\\n802992688\\r\\n280681007\\r\\n241630674\\r\\n241630674\\r\\n124479675\\r\\n881093354\\r\\n163530008\\r\\n842043021\\r\\n124479675\\r\\n124479675\\r\\n13521558\\r\\n600412347\\r\\n600412347\\r\\n483261348\\r\\n67607790\\r\\n444211015\\r\\n639462680\\r\\n319731340\\r\\n163530008\\r\\n280681007\\r\\n163530008\\r\\n202580341\\r\\n444211015\\r\\n444211015\\r\\n920143687\\r\\n522311681\\r\\n802992688\\r\\n483261348\\r\\n959194020\\r\\n920143687']}, {'input': '44 50\\r\\n0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\r\\n2 6 6 11 2 4 11 10 5 15 15 20 20 7 9 8 17 4 16 19 12 16 12 13 2 11 20 2 6 10 2 18 7 5 18 10 15 6 11 9 7 5 17 11\\r\\n', 'output': ['327775237\\r\\n983325711\\r\\n983325711\\r\\n305397274\\r\\n327775237\\r\\n853173373\\r\\n305397274\\r\\n640631832\\r\\n320315916\\r\\n960947748\\r\\n960947748\\r\\n272889453\\r\\n283019311\\r\\n648091153\\r\\n975866390\\r\\n312856595\\r\\n290478632\\r\\n655550474\\r\\n625713190\\r\\n618253869\\r\\n968407069\\r\\n625713190\\r\\n968407069\\r\\n633172511\\r\\n327775237\\r\\n305397274\\r\\n283019311\\r\\n327775237\\r\\n983325711\\r\\n640631832\\r\\n327775237\\r\\n953488427\\r\\n648091153\\r\\n816905628\\r\\n953488427\\r\\n640631832\\r\\n960947748\\r\\n983325711\\r\\n305397274\\r\\n975866390\\r\\n648091153\\r\\n320315916\\r\\n290478632\\r\\n305397274']}, {'input': '45 50\\r\\n0 1 0 1 0 1 0 1 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 1 0\\r\\n4 4 23 23 13 23 9 16 4 18 20 15 21 24 22 20 22 1 15 7 10 17 20 6 15 7 4 10 16 7 14 9 13 17 10 14 22 23 3 5 20 11 4 24 24\\r\\n', 'output': ['630266647\\r\\n555616275\\r\\n379739073\\r\\n948743787\\r\\n301438985\\r\\n948743787\\r\\n669416691\\r\\n225976394\\r\\n555616275\\r\\n340589029\\r\\n156600176\\r\\n835755590\\r\\n563727926\\r\\n786866823\\r\\n560278630\\r\\n781592669\\r\\n970855676\\r\\n388465157\\r\\n835755590\\r\\n853405544\\r\\n889918511\\r\\n614441551\\r\\n156600176\\r\\n446277794\\r\\n117450132\\r\\n853405544\\r\\n630266647\\r\\n78300088\\r\\n225976394\\r\\n722767393\\r\\n708566735\\r\\n669416691\\r\\n58825276\\r\\n931705632\\r\\n78300088\\r\\n708566735\\r\\n970855676\\r\\n948743787\\r\\n223138897\\r\\n39150044\\r\\n781592669\\r\\n280139315\\r\\n555616275\\r\\n338964591\\r\\n786866823']}, {'input': '46 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n29 22 30 33 13 31 19 11 12 21 5 4 24 21 20 6 28 16 27 18 21 11 3 24 21 8 8 33 24 7 34 12 13 32 26 33 33 22 18 2 3 7 24 17 9 30\\r\\n', 'output': ['265429165\\r\\n98093399\\r\\n859759619\\r\\n646262275\\r\\n738585431\\r\\n455845720\\r\\n311590743\\r\\n548168876\\r\\n144254977\\r\\n502007298\\r\\n975163564\\r\\n380833110\\r\\n288509954\\r\\n502007298\\r\\n905921197\\r\\n571249665\\r\\n669343064\\r\\n525088087\\r\\n75012610\\r\\n715504642\\r\\n502007298\\r\\n548168876\\r\\n784747009\\r\\n288509954\\r\\n502007298\\r\\n761666220\\r\\n761666220\\r\\n646262275\\r\\n288509954\\r\\n167335766\\r\\n242348376\\r\\n144254977\\r\\n738585431\\r\\n51931821\\r\\n478926509\\r\\n646262275\\r\\n646262275\\r\\n98093399\\r\\n715504642\\r\\n190416555\\r\\n784747009\\r\\n167335766\\r\\n288509954\\r\\n121174188\\r\\n357752321\\r\\n859759619']}, {'input': '47 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n30 32 21 7 15 4 39 36 23 17 13 4 8 18 38 24 13 27 37 27 32 16 8 12 7 23 28 38 11 36 19 33 10 34 4 8 5 22 3 29 21 30 7 32 35 26 23\\r\\n', 'output': ['243227082\\r\\n658739962\\r\\n369907828\\r\\n456050727\\r\\n121613541\\r\\n831025760\\r\\n116546336\\r\\n491521369\\r\\n785420708\\r\\n537126421\\r\\n704345014\\r\\n831025760\\r\\n663807167\\r\\n744882861\\r\\n907034249\\r\\n993177148\\r\\n704345014\\r\\n618202115\\r\\n699277809\\r\\n618202115\\r\\n658739962\\r\\n329369981\\r\\n663807167\\r\\n496588574\\r\\n456050727\\r\\n785420708\\r\\n825958555\\r\\n907034249\\r\\n288832134\\r\\n491521369\\r\\n952639301\\r\\n866496402\\r\\n81075694\\r\\n76008489\\r\\n831025760\\r\\n663807167\\r\\n40537847\\r\\n577664268\\r\\n623269320\\r\\n35470642\\r\\n369907828\\r\\n243227082\\r\\n456050727\\r\\n658739962\\r\\n283764929\\r\\n410445675\\r\\n785420708...']}, {'input': '48 50\\r\\n1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 1\\r\\n9 42 15 12 2 9 41 13 23 14 17 42 25 10 10 2 38 36 41 31 9 20 31 41 20 41 40 28 7 37 14 25 23 38 27 17 6 40 2 19 19 3 8 32 13 22 41 20\\r\\n', 'output': ['386033769\\r\\n373559702\\r\\n643389615\\r\\n677156688\\r\\n85785282\\r\\n507867516\\r\\n317129978\\r\\n557604333\\r\\n299639299\\r\\n790016136\\r\\n959305308\\r\\n803246569\\r\\n74071672\\r\\n564297240\\r\\n564297240\\r\\n112859448\\r\\n631676005\\r\\n34981358\\r\\n760353928\\r\\n751077091\\r\\n386033769\\r\\n130350127\\r\\n751077091\\r\\n760353928\\r\\n130350127\\r\\n760353928\\r\\n717461287\\r\\n581787919\\r\\n395008068\\r\\n91411082\\r\\n790016136\\r\\n412498747\\r\\n299639299\\r\\n631676005\\r\\n159856954\\r\\n959305308\\r\\n338578344\\r\\n717461287\\r\\n112859448\\r\\n814960179\\r\\n73920403\\r\\n169289172\\r\\n451437792\\r\\n807506815\\r\\n733586412\\r\\n243209575\\r\\n317129978\\r...']}, {'input': '49 50\\r\\n0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0\\r\\n2 3 2 3 4 2 1 1 1 1 1 1 3 1 2 3 2 4 1 2 2 1 1 2 4 3 2 4 1 2 1 1 2 3 1 3 3 2 2 1 4 3 4 1 3 3 4 1 3\\r\\n', 'output': ['136570933\\r\\n703978576\\r\\n136570933\\r\\n703978576\\r\\n273141866\\r\\n136570933\\r\\n567407643\\r\\n478951804\\r\\n567407643\\r\\n567407643\\r\\n478951804\\r\\n478951804\\r\\n703978576\\r\\n567407643\\r\\n136570933\\r\\n703978576\\r\\n136570933\\r\\n273141866\\r\\n567407643\\r\\n136570933\\r\\n136570933\\r\\n567407643\\r\\n567407643\\r\\n136570933\\r\\n273141866\\r\\n703978576\\r\\n957903608\\r\\n273141866\\r\\n567407643\\r\\n136570933\\r\\n567407643\\r\\n567407643\\r\\n136570933\\r\\n703978576\\r\\n567407643\\r\\n438611059\\r\\n438611059\\r\\n136570933\\r\\n136570933\\r\\n478951804\\r\\n273141866\\r\\n703978576\\r\\n917562863\\r\\n478951804\\r\\n703978576\\r\\n703978576\\r\\n27314...']}, {'input': '50 50\\r\\n0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\\r\\n1 9 24 8 8 11 21 11 8 5 16 32 31 15 29 14 16 20 5 18 5 10 31 23 21 4 4 20 20 11 1 4 4 15 9 14 5 30 13 16 32 27 19 10 19 24 21 1 21 15\\r\\n', 'output': ['475420905\\r\\n285810733\\r\\n429413837\\r\\n935878068\\r\\n808634181\\r\\n787710167\\r\\n1395475\\r\\n787710167\\r\\n808634181\\r\\n85801616\\r\\n619024009\\r\\n748779213\\r\\n762627113\\r\\n143603104\\r\\n896947114\\r\\n666426552\\r\\n619024009\\r\\n343206464\\r\\n380615819\\r\\n571621466\\r\\n380615819\\r\\n171603232\\r\\n132672278\\r\\n952237285\\r\\n1395475\\r\\n467939034\\r\\n467939034\\r\\n524218923\\r\\n343206464\\r\\n238408190\\r\\n616106935\\r\\n467939034\\r\\n467939034\\r\\n143603104\\r\\n285810733\\r\\n639542266\\r\\n85801616\\r\\n514809696\\r\\n23435331\\r\\n619024009\\r\\n748779213\\r\\n662977597\\r\\n725343882\\r\\n761231638\\r\\n48798018\\r\\n429413837\\r\\n959313399\\r\\n61...']}, {'input': '47 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39\\r\\n', 'output': ['573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n57345...']}, {'input': '48 50\\r\\n1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 1\\r\\n42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42\\r\\n', 'output': ['612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n27123...']}, {'input': '49 50\\r\\n0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0\\r\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\\r\\n', 'output': ['371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n37100...']}, {'input': '50 50\\r\\n0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\\r\\n33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33\\r\\n', 'output': ['677141055\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141055\\r\\n67714...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n982795629\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n83495...']}, {'input': '50 50\\r\\n1 0 1 0 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 1 0 1 0 1 0 1 1 0 0 1 1 0 0 1 0 0 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n99630...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n70582...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\r\\n', 'output': ['382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n798399400\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n38299...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\r\\n', 'output': ['459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n533798960\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n45908...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n273616393\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n31116...']}, {'input': '50 50\\r\\n0 0 0 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 0 0\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['123180764\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n12318...']}, {'input': '50 50\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['80661140\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51']}, {'input': '5 5\\r\\n0 1 0 0 1\\r\\n2 4 1 2 1\\r\\n', 'output': ['665717847\\r\\n333191345\\r\\n831981100\\r\\n665717847\\r\\n831981101']}, {'input': '20 20\\r\\n0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 0\\r\\n109 1 24 122 136 42 25 112 110 15 26 48 35 10 86 13 41 6 24 15\\r\\n', 'output': ['217595927\\r\\n149660176\\r\\n322657182\\r\\n290143118\\r\\n388896876\\r\\n296261274\\r\\n86540143\\r\\n507489163\\r\\n979723241\\r\\n248413934\\r\\n896431517\\r\\n195977977\\r\\n246884395\\r\\n633562669\\r\\n891842900\\r\\n947337935\\r\\n146601098\\r\\n897961056\\r\\n597111165\\r\\n451221827']}, {'input': '100 100\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n2360379 9167688 488710 6896065 5243867 11762954 673012 1669264 265550 10921726 9383074 9523863 13429215 3223202 5372988 8197773 13052301 6045370 18630475 23534272 14923100 17181531 1112172 24623774 16991041 2363652 10720874 7171147 1261895 13127315 454592 1510882 12229327 15445105 15722482 5467131 92...', 'output': ['19790585\\r\\n929149870\\r\\n158142558\\r\\n415179791\\r\\n770973301\\r\\n197788614\\r\\n662208363\\r\\n968610058\\r\\n711622366\\r\\n89060603\\r\\n49510939\\r\\n593110743\\r\\n227455934\\r\\n197704062\\r\\n89005665\\r\\n237287745\\r\\n266986632\\r\\n365753331\\r\\n365877936\\r\\n464762563\\r\\n879788817\\r\\n148424226\\r\\n355820880\\r\\n830466826\\r\\n583301068\\r\\n553505420\\r\\n59407792\\r\\n988431747\\r\\n889537165\\r\\n425125094\\r\\n978481639\\r\\n494195332\\r\\n98957157\\r\\n850143163\\r\\n474568826\\r\\n889578801\\r\\n691943729\\r\\n751249179\\r\\n29723781\\r\\n385464681\\r\\n494219413\\r\\n968727719\\r\\n622687463\\r\\n929103141\\r\\n89090024\\r\\n563393484\\r\\n29714966\\r\\n484...']}, {'input': '1000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['652684471\\r\\n652684471\\r\\n959809060\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n652684471\\r\\n614249178\\r\\n307124589\\r\\n307124589\\r\\n307124589\\r\\n959809060\\r\\n652684471\\r\\n652684471\\r\\n959809060\\r\\n307124589\\r\\n307124589\\r\\n614249178\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n307124589\\r\\n307124589\\r\\n652684471\\r\\n268689296\\r\\n307124589\\r\\n959809060\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n614249178\\r\\n959809060\\r\\n652684471\\r\\n652684471\\r\\n307124589\\r\\n614249178\\r\\n307124589\\r\\n652684471\\r\\n652684471\\r\\n959809060\\r\\n307124589\\r\\n959809060\\r\\n307124589\\r\\n307124589\\r\\n959809060\\r\\n307124589\\r\\n95980...']}, {'input': '50000 1000\\r\\n1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 1 0 0 0 1 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 0 0 1 1 1 0 0 1 0 0 0 0 1 0 1 0 0 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 1 1 1 1 0 1 0 1 1 0 0 1 0 1 0 0 1 0 0 1 0 1 1 0 1 0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0...', 'output': ['512182090\\r\\n641172382\\r\\n697325018\\r\\n818311552\\r\\n590906119\\r\\n461103680\\r\\n370418391\\r\\n653972733\\r\\n766040380\\r\\n237657896\\r\\n893425807\\r\\n807372188\\r\\n964959592\\r\\n319396135\\r\\n111079234\\r\\n137994713\\r\\n9663504\\r\\n92358638\\r\\n965938119\\r\\n98687680\\r\\n675026792\\r\\n279244742\\r\\n15543727\\r\\n479206408\\r\\n519670811\\r\\n684652624\\r\\n777078382\\r\\n554151828\\r\\n865485075\\r\\n937290032\\r\\n565154228\\r\\n221807985\\r\\n218937300\\r\\n112386612\\r\\n310142313\\r\\n986922988\\r\\n267227503\\r\\n40988675\\r\\n369434552\\r\\n763776107\\r\\n694666611\\r\\n182771968\\r\\n494768207\\r\\n633944759\\r\\n635638470\\r\\n761724538\\r\\n162219074\\r\\n...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['967977965\\r\\n983111159\\r\\n952844771\\r\\n937711577\\r\\n937711577\\r\\n771246443\\r\\n483715757\\r\\n892311995\\r\\n967977965\\r\\n801512831\\r\\n846912413\\r\\n831779219\\r\\n967977965\\r\\n786379637\\r\\n892311995\\r\\n604781309\\r\\n710713667\\r\\n952844771\\r\\n952844771\\r\\n937711577\\r\\n874943312\\r\\n120519101\\r\\n892311995\\r\\n589648115\\r\\n619914503\\r\\n665314085\\r\\n374637533\\r\\n892311995\\r\\n937711577\\r\\n892311995\\r\\n650180891\\r\\n771246443\\r\\n922578383\\r\\n877178801\\r\\n483715757\\r\\n892311995\\r\\n952844771\\r\\n619914503\\r\\n574514921\\r\\n62834123\\r\\n907445189\\r\\n816646025\\r\\n846912413\\r\\n816646025\\r\\n937711577\\r\\n756113249\\r\\n846912...']}, {'input': '200000 3000\\r\\n0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 0 1 0 0 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 1 1 0 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 ...', 'output': ['568390992\\r\\n182388528\\r\\n352385861\\r\\n315979953\\r\\n743372559\\r\\n632628120\\r\\n995395434\\r\\n506334569\\r\\n667771666\\r\\n453192833\\r\\n680429762\\r\\n407446046\\r\\n471154985\\r\\n147648615\\r\\n936047905\\r\\n830053040\\r\\n251214636\\r\\n602162072\\r\\n263562703\\r\\n990790012\\r\\n150217484\\r\\n82075059\\r\\n932318671\\r\\n687474214\\r\\n345881774\\r\\n771937952\\r\\n356541287\\r\\n15233024\\r\\n811478946\\r\\n737405100\\r\\n892805310\\r\\n176354033\\r\\n997083988\\r\\n281716722\\r\\n628262667\\r\\n556117647\\r\\n359954433\\r\\n926451677\\r\\n992018326\\r\\n134736321\\r\\n139309832\\r\\n510415929\\r\\n125029199\\r\\n222157092\\r\\n859462710\\r\\n16077301\\r\\n83159806...']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 3 2 1 3 2 1 1 2 1 1 2 2 4 2 1 5 2 3\\r\\n', 'output': ['249561090\\r\\n249561090\\r\\n748683270\\r\\n499122180\\r\\n249561090\\r\\n748683270\\r\\n499122180\\r\\n249561090\\r\\n249561090\\r\\n499122180\\r\\n249561090\\r\\n249561090\\r\\n499122180\\r\\n499122180\\r\\n7\\r\\n499122180\\r\\n249561090\\r\\n249561097\\r\\n499122180\\r\\n748683270']}, {'input': '20 30\\r\\n1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 1 3 1 4 1 5 1 1 2 3 1 1 3 3 2 2 1 2\\r\\n', 'output': ['902255482\\r\\n806266611\\r\\n902255482\\r\\n710277740\\r\\n902255482\\r\\n537377994\\r\\n902255482\\r\\n518299998\\r\\n902255482\\r\\n902255482\\r\\n806266611\\r\\n710277740\\r\\n902255482\\r\\n902255482\\r\\n710277740\\r\\n710277740\\r\\n806266611\\r\\n806266611\\r\\n902255482\\r\\n806266611']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\r\\n3 4 1 2 1 1 1 2 5 2 1 2 3 1 1 2 3 2 1 2\\r\\n', 'output': ['441078046\\r\\n920852179\\r\\n479774133\\r\\n959548266\\r\\n479774133\\r\\n479774133\\r\\n479774133\\r\\n959548266\\r\\n402381959\\r\\n263018694\\r\\n479774133\\r\\n959548266\\r\\n441078046\\r\\n479774133\\r\\n479774133\\r\\n959548266\\r\\n441078046\\r\\n959548266\\r\\n479774133\\r\\n959548266']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0\\r\\n1 1 3 2 3 1 2 2 3 2 2 2 2 2 2 3 3 1 1 2\\r\\n', 'output': ['550803098\\r\\n550803098\\r\\n654164941\\r\\n103361843\\r\\n654164941\\r\\n550803098\\r\\n103361843\\r\\n103361843\\r\\n654164941\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n276551708\\r\\n654164941\\r\\n654164941\\r\\n138275854\\r\\n550803098\\r\\n103361843']}, {'input': '20 30\\r\\n0 0 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1\\r\\n1 2 2 2 2 2 1 1 2 1 4 1 2 5 3 4 1 1 2 1\\r\\n', 'output': ['297511613\\r\\n595023226\\r\\n756311680\\r\\n756311680\\r\\n756311680\\r\\n595023226\\r\\n297511613\\r\\n378155840\\r\\n595023226\\r\\n297511613\\r\\n514379007\\r\\n297511613\\r\\n595023226\\r\\n892534847\\r\\n136223167\\r\\n514379007\\r\\n378155840\\r\\n297511613\\r\\n595023226\\r\\n378155840']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n765 451 7275 385 1686 78 554 114 1980 394 776 232 627 760 782 7 486 32 1100 1516\\r\\n', 'output': ['491636110\\r\\n498623506\\r\\n486651408\\r\\n182179980\\r\\n6989399\\r\\n10980766\\r\\n871467875\\r\\n92836839\\r\\n509106603\\r\\n951327263\\r\\n211628580\\r\\n83852758\\r\\n11480438\\r\\n618912260\\r\\n58897200\\r\\n820057743\\r\\n605934809\\r\\n183676993\\r\\n948333237\\r\\n341401087']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1\\r\\n779 1317 1275 234 857 1531 785 265 679 767 1994 11 918 1146 1807 71 813 245 3926 580\\r\\n', 'output': ['552990868\\r\\n90431251\\r\\n712871250\\r\\n952916426\\r\\n537881559\\r\\n151361542\\r\\n321464532\\r\\n89445141\\r\\n86037605\\r\\n17799187\\r\\n586392419\\r\\n241031286\\r\\n40642277\\r\\n699465709\\r\\n481837969\\r\\n920500985\\r\\n572000768\\r\\n195703359\\r\\n903238702\\r\\n911489090']}, {'input': '20 30\\r\\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n128 574 205 490 611 1294 283 1690 1466 1896 272 19 1020 5032 357 1500 36 1749 1202 176\\r\\n', 'output': ['389864218\\r\\n157345415\\r\\n537589523\\r\\n962131647\\r\\n753565149\\r\\n104281847\\r\\n378440811\\r\\n873692367\\r\\n690552162\\r\\n658861420\\r\\n578900375\\r\\n198248582\\r\\n923070965\\r\\n228091231\\r\\n572635926\\r\\n887695253\\r\\n795942304\\r\\n70748620\\r\\n510359933\\r\\n785624388']}, {'input': '20 30\\r\\n1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0\\r\\n61 849 320 1007 624 441 1332 3939 1176 718 419 634 657 914 858 882 1019 1567 62 2521\\r\\n', 'output': ['514012356\\r\\n393871659\\r\\n166092575\\r\\n569465276\\r\\n74319433\\r\\n306884170\\r\\n254628439\\r\\n656312237\\r\\n485609669\\r\\n216694535\\r\\n825782618\\r\\n110704962\\r\\n294216114\\r\\n131255421\\r\\n733108087\\r\\n613768340\\r\\n14181299\\r\\n610566194\\r\\n624888021\\r\\n887363731']}, {'input': '20 30\\r\\n0 1 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 0 0\\r\\n244 1901 938 1350 1010 763 318 2158 1645 534 1356 563 295 1449 2306 224 1302 195 639 810\\r\\n', 'output': ['300071414\\r\\n595185476\\r\\n40756239\\r\\n113904636\\r\\n440148868\\r\\n947268885\\r\\n456535325\\r\\n542868956\\r\\n183161324\\r\\n427608407\\r\\n61171180\\r\\n375813928\\r\\n43680359\\r\\n55509680\\r\\n30410255\\r\\n360521133\\r\\n535772284\\r\\n722568686\\r\\n663107799\\r\\n390646234']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n126679203 179924771 16639504 67055540 14134870 36407782 15024189 39367944 121531542 5400023 5834434 8539193 3686913 11287136 36370086 71808281 138206490 59846864 19052959 21446598\\r\\n', 'output': ['615913610\\r\\n488825486\\r\\n773371096\\r\\n742795989\\r\\n193664548\\r\\n323188752\\r\\n32686082\\r\\n709701410\\r\\n293733249\\r\\n161181348\\r\\n193396792\\r\\n354491196\\r\\n708550409\\r\\n644392716\\r\\n323187536\\r\\n646345011\\r\\n487479735\\r\\n1930544\\r\\n322628919\\r\\n966734748']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\\r\\n144831196 28660251 62050800 52660762 23189000 12771861 73096012 25119113 119648684 16011144 51600638 74708999 6312006 26945863 68746869 58112898 5070 19157938 74351320 60263898\\r\\n', 'output': ['132556548\\r\\n711988928\\r\\n6999755\\r\\n208709864\\r\\n320161276\\r\\n865416376\\r\\n320896979\\r\\n458941660\\r\\n671806481\\r\\n158009043\\r\\n351362956\\r\\n78248147\\r\\n927871852\\r\\n882014191\\r\\n988190329\\r\\n830735503\\r\\n1958329\\r\\n787106839\\r\\n942059547\\r\\n341315444']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0\\r\\n34095514 37349809 60555988 40280455 19504485 77297461 41415742 66290058 20631093 185280391 7151718 64927972 15611855 4317891 24600598 24588269 60808977 9108470 13217752 191209824\\r\\n', 'output': ['313283482\\r\\n21804622\\r\\n682197550\\r\\n361027027\\r\\n756362680\\r\\n151917509\\r\\n716108102\\r\\n131732975\\r\\n237068086\\r\\n731869119\\r\\n190595295\\r\\n847684643\\r\\n847454143\\r\\n501579235\\r\\n129856516\\r\\n246699402\\r\\n205385635\\r\\n639100445\\r\\n614421017\\r\\n227076269']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0\\r\\n9380933 34450681 12329733 7732927 73910078 16165679 149467043 56914401 21809098 36934833 71019254 168559440 12033996 40465391 7156881 3312348 37150678 130625432 42709585 66115911\\r\\n', 'output': ['813231583\\r\\n458087744\\r\\n445793615\\r\\n651101155\\r\\n484645642\\r\\n506668954\\r\\n896602699\\r\\n556862659\\r\\n145127201\\r\\n302005399\\r\\n558418033\\r\\n213871822\\r\\n57299634\\r\\n564466143\\r\\n767349204\\r\\n290138481\\r\\n12657688\\r\\n925337836\\r\\n827843024\\r\\n119362169']}, {'input': '20 30\\r\\n0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 0 1 0 1\\r\\n66166717 200301718 6725634 95379617 42880832 48874211 64912554 36809296 13248978 58406666 53142218 45080678 19902257 58554006 23570140 14484661 7589423 78746789 11072716 52395211\\r\\n', 'output': ['823107880\\r\\n742699237\\r\\n987770596\\r\\n549924308\\r\\n730188349\\r\\n913535291\\r\\n936423447\\r\\n122869154\\r\\n581668441\\r\\n749452306\\r\\n615454312\\r\\n176148736\\r\\n874336841\\r\\n897418997\\r\\n235568492\\r\\n24727530\\r\\n143875067\\r\\n15270097\\r\\n200154604\\r\\n356406452']}, {'input': '20 30\\r\\n0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661\\r\\n', 'output': ['76898501\\r\\n989279651\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803\\r\\n', 'output': ['504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981']}, {'input': '2000 300\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1...', 'output': ['527557309\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n819771096\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n762900831\\r\\n762900831\\r\\n292213787\\r\\n762900831\\r\\n527557309\\r\\n292213787\\r\\n762900831\\r\\n292213787\\r\\n527557309\\r\\n762900831\\r\\n292213787\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n819771096\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n292213787\\r\\n762900831\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n762900831\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n76290...', '126026410\\r\\n26532090\\r\\n89545496\\r\\n348227668\\r\\n407921745\\r\\n822476105\\r\\n815841057\\r\\n129343473\\r\\n683184486\\r\\n182403525\\r\\n971714643\\r\\n669922973\\r\\n195669656\\r\\n643389211\\r\\n596958847\\r\\n991612114\\r\\n26531426\\r\\n494147799\\r\\n587007825\\r\\n646703323\\r\\n192353616\\r\\n198987665\\r\\n116075186\\r\\n208935334\\r\\n451035127\\r\\n991612774\\r\\n630129722\\r\\n673238446\\r\\n965081504\\r\\n404604334\\r\\n762781111\\r\\n945182265\\r\\n613540647\\r\\n855640163\\r\\n540577710\\r\\n739563385\\r\\n185720640\\r\\n13265829\\r\\n460984258\\r\\n182404969\\r\\n988297561\\r\\n726301539\\r\\n301795019\\r\\n46434122\\r\\n882170987\\r\\n533948601\\r\\n729615799\\r...', '257947573\\r\\n350833899\\r\\n998147431\\r\\n282054341\\r\\n689337877\\r\\n802790225\\r\\n636332064\\r\\n611526839\\r\\n405886622\\r\\n295781176\\r\\n577883978\\r\\n211877869\\r\\n476761551\\r\\n471920813\\r\\n313000296\\r\\n8886097\\r\\n165109708\\r\\n231143899\\r\\n91489412\\r\\n972042214\\r\\n584771626\\r\\n771892731\\r\\n841370746\\r\\n736106038\\r\\n702414716\\r\\n368751476\\r\\n510452873\\r\\n253155296\\r\\n619859862\\r\\n14376831\\r\\n37833603\\r\\n94933236\\r\\n485696109\\r\\n96233228\\r\\n33691322\\r\\n403791251\\r\\n233190809\\r\\n447164049\\r\\n173248887\\r\\n549683390\\r\\n863382143\\r\\n717538465\\r\\n704413165\\r\\n210480955\\r\\n414122723\\r\\n922528686\\r\\n131321464\\r\\n40...', '723727157\\r\\n723727157\\r\\n898419922\\r\\n449209961\\r\\n898419922\\r\\n174692765\\r\\n723727157\\r\\n723727157\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n174692765\\r\\n723727157\\r\\n174692765\\r\\n723727157\\r\\n723727157\\r\\n623902726\\r\\n723727157\\r\\n723727157\\r\\n449209961\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n174692765\\r\\n723727157\\r\\n449209961\\r\\n349385530\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n623902726\\r\\n449209961\\r\\n449209961\\r\\n898419922\\r\\n898419922\\r\\n723727157\\r\\n449209961\\r\\n723727157\\r\\n723727157\\r\\n723727157\\r\\n174692765\\r\\n17469...', '449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n44954...', '228892698\\r\\n323233274\\r\\n31331450\\r\\n583630535\\r\\n530020844\\r\\n200867506\\r\\n762566026\\r\\n461091654\\r\\n900597519\\r\\n687197433\\r\\n232025843\\r\\n294169404\\r\\n557699810\\r\\n988325579\\r\\n966739790\\r\\n633933968\\r\\n156657250\\r\\n762046687\\r\\n338898999\\r\\n134379009\\r\\n458304735\\r\\n975792999\\r\\n343970609\\r\\n589896825\\r\\n188161813\\r\\n733675269\\r\\n708610109\\r\\n303222613\\r\\n919742615\\r\\n718701996\\r\\n235158988\\r\\n5746951\\r\\n831841442\\r\\n194601216\\r\\n389029319\\r\\n946729129\\r\\n65449819\\r\\n768486090\\r\\n213226973\\r\\n847160941\\r\\n853773457\\r\\n913476325\\r\\n847334054\\r\\n435334042\\r\\n997551901\\r\\n781018670\\r\\n847334054...', '280562572\\r\\n27981324\\r\\n930424996\\r\\n580126064\\r\\n653672085\\r\\n638998124\\r\\n192370181\\r\\n304975360\\r\\n268606553\\r\\n887998181\\r\\n902057157\\r\\n419880164\\r\\n965999027\\r\\n37849969\\r\\n655704617\\r\\n915939588\\r\\n290316653\\r\\n133632797\\r\\n916310849\\r\\n291352554\\r\\n315435621\\r\\n753760137\\r\\n617080324\\r\\n863678858\\r\\n719694519\\r\\n658038314\\r\\n750307459\\r\\n915589744\\r\\n530437886\\r\\n512060713\\r\\n157922588\\r\\n178644172\\r\\n5715303\\r\\n194942404\\r\\n852097346\\r\\n696406228\\r\\n891303846\\r\\n489183600\\r\\n892182349\\r\\n437838373\\r\\n390449491\\r\\n931412865\\r\\n520118475\\r\\n724052962\\r\\n624309238\\r\\n315358057\\r\\n157108994...']}, {'input': '2000 300\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...', 'output': ['510770111\\r\\n586552453\\r\\n521518610\\r\\n729496815\\r\\n925336870\\r\\n218501419\\r\\n210003823\\r\\n721775463\\r\\n410294316\\r\\n59753754\\r\\n445916833\\r\\n149785626\\r\\n397166471\\r\\n850878761\\r\\n322612228\\r\\n400512598\\r\\n962933991\\r\\n238352988\\r\\n481795882\\r\\n312429269\\r\\n230724223\\r\\n668360989\\r\\n538774766\\r\\n7521020\\r\\n782227455\\r\\n932947153\\r\\n766620629\\r\\n621895347\\r\\n948462500\\r\\n49828435\\r\\n465611859\\r\\n508795684\\r\\n965408363\\r\\n876217222\\r\\n27461852\\r\\n849541586\\r\\n889517699\\r\\n887546242\\r\\n347913548\\r\\n274305965\\r\\n434804057\\r\\n916014055\\r\\n822187302\\r\\n339400794\\r\\n604867800\\r\\n368133826\\r\\n799958426\\r...', '738045334\\r\\n159282105\\r\\n578763229\\r\\n578763229\\r\\n477846315\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n578763229\\r\\n738045334\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n578763229\\r\\n578763229\\r\\n578763229\\r\\n159282105\\r\\n578763229\\r\\n318564210\\r\\n578763229\\r\\n578763229\\r\\n159282105\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n159282105\\r\\n578763229\\r\\n159282105\\r\\n738045334\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n578763229\\r\\n738045334\\r\\n159282105\\r\\n738045334\\r\\n318564210\\r\\n73804...', '536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n53653...', '544865927\\r\\n362689553\\r\\n554047941\\r\\n662901553\\r\\n528631083\\r\\n623245685\\r\\n408599623\\r\\n383515404\\r\\n454842332\\r\\n96411147\\r\\n49835799\\r\\n979215047\\r\\n123957189\\r\\n241194187\\r\\n232012173\\r\\n930510515\\r\\n682596137\\r\\n940690446\\r\\n985602599\\r\\n592905181\\r\\n837226469\\r\\n463026429\\r\\n366947921\\r\\n259890854\\r\\n259558215\\r\\n423037922\\r\\n336940056\\r\\n739152127\\r\\n906091574\\r\\n273663875\\r\\n103463977\\r\\n218239152\\r\\n323832313\\r\\n988397061\\r\\n861312771\\r\\n369742383\\r\\n261687399\\r\\n997579075\\r\\n494364850\\r\\n668490477\\r\\n306599552\\r\\n268740229\\r\\n776878100\\r\\n482521724\\r\\n140192033\\r\\n252172746\\r\\n5279658...', '156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n52020618\\r\\n104041236\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n156061854\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n208082472\\r\\n208082472\\r\\n104041236\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n156061854\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n156061854\\r\\n52020618\\r...', '696015721\\r\\n931773777\\r\\n559486112\\r\\n847360916\\r\\n520999237\\r\\n330674091\\r\\n901387332\\r\\n817005789\\r\\n311776972\\r\\n19589756\\r\\n894472615\\r\\n644360731\\r\\n540588993\\r\\n761762342\\r\\n387103251\\r\\n712279217\\r\\n24626123\\r\\n870308250\\r\\n487286532\\r\\n403104550\\r\\n728773592\\r\\n564260282\\r\\n775161336\\r\\n604919022\\r\\n382066884\\r\\n133895986\\r\\n14584707\\r\\n323728056\\r\\n371794589\\r\\n189832070\\r\\n664212684\\r\\n375120849\\r\\n841631912\\r\\n277833388\\r\\n899970740\\r\\n674023221\\r\\n550168651\\r\\n205864687\\r\\n292155898\\r\\n484652909\\r\\n899246785\\r\\n641496229\\r\\n604195067\\r\\n520275282\\r\\n140579824\\r\\n200828320\\r\\n88943624...', '381761597\\r\\n749914123\\r\\n734966985\\r\\n451112838\\r\\n254375974\\r\\n408043495\\r\\n50147455\\r\\n317426730\\r\\n691474180\\r\\n297424671\\r\\n16576556\\r\\n950550287\\r\\n615062290\\r\\n508772409\\r\\n574097914\\r\\n755479957\\r\\n504073337\\r\\n232598914\\r\\n376960541\\r\\n704800943\\r\\n722703963\\r\\n943084953\\r\\n852281936\\r\\n604167024\\r\\n430991955\\r\\n691776511\\r\\n979477939\\r\\n916779041\\r\\n928976757\\r\\n9004809\\r\\n66623088\\r\\n160364271\\r\\n569831785\\r\\n753768578\\r\\n10158931\\r\\n829943628\\r\\n860984852\\r\\n599688760\\r\\n746963293\\r\\n90503616\\r\\n665117495\\r\\n843614199\\r\\n773004798\\r\\n52464119\\r\\n40225734\\r\\n193061049\\r\\n476979003\\r\\n451...']}, {'input': '2000 300\\r\\n1 1 1 0 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 1 0...', 'output': ['520991218\\r\\n260495609\\r\\n781486827\\r\\n281527765\\r\\n460706912\\r\\n260495609\\r\\n43738083\\r\\n819065206\\r\\n639886059\\r\\n260495609\\r\\n639886059\\r\\n520991218\\r\\n520991218\\r\\n639886059\\r\\n819065206\\r\\n520991218\\r\\n639886059\\r\\n819065206\\r\\n639886059\\r\\n43738083\\r\\n781486827\\r\\n260495609\\r\\n520991218\\r\\n781486827\\r\\n819065206\\r\\n639886059\\r\\n281527765\\r\\n819065206\\r\\n460706912\\r\\n260495609\\r\\n639886059\\r\\n260495609\\r\\n304233692\\r\\n781486827\\r\\n260495609\\r\\n260495609\\r\\n43738083\\r\\n260495609\\r\\n639886059\\r\\n260495609\\r\\n819065206\\r\\n520991218\\r\\n520991218\\r\\n639886059\\r\\n639886059\\r\\n460706912\\r\\n26049560...']}, {'input': '2000 300\\r\\n1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 1 1 0 1 0 1 0 0 0 1 1 0 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 1 0 0 1 0 1 0 1 0 1 0 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 1 1 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1...', 'output': ['967309723\\r\\n488979754\\r\\n894231131\\r\\n227079250\\r\\n800673042\\r\\n803173636\\r\\n302660701\\r\\n49359452\\r\\n361182334\\r\\n613837368\\r\\n903714465\\r\\n783149148\\r\\n772569418\\r\\n153771444\\r\\n347053203\\r\\n383800081\\r\\n305903959\\r\\n591371347\\r\\n504143617\\r\\n554819601\\r\\n711091639\\r\\n993123371\\r\\n662636534\\r\\n799549517\\r\\n755795853\\r\\n257472564\\r\\n749178682\\r\\n44165553\\r\\n754769201\\r\\n677121173\\r\\n77251408\\r\\n825363165\\r\\n94378162\\r\\n905743915\\r\\n555723948\\r\\n401067893\\r\\n365827394\\r\\n778249947\\r\\n641361749\\r\\n657808321\\r\\n76885722\\r\\n205390090\\r\\n357248290\\r\\n762413024\\r\\n471855369\\r\\n953559875\\r\\n452364595\\r...']}, {'input': '2000 300\\r\\n1 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 0 1 0 0 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 1 0 1 0 1 0 0 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 0 0 1 0 0 0 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 0 0 1 1 0 1...', 'output': ['353668818\\r\\n180952778\\r\\n350267066\\r\\n85276305\\r\\n498935339\\r\\n570367769\\r\\n947922902\\r\\n520199571\\r\\n977020824\\r\\n311854081\\r\\n369942273\\r\\n709342799\\r\\n241020253\\r\\n306637091\\r\\n574362410\\r\\n924893301\\r\\n259050261\\r\\n881412462\\r\\n505397126\\r\\n426307000\\r\\n368001455\\r\\n187561592\\r\\n507502858\\r\\n422600821\\r\\n840032307\\r\\n570586935\\r\\n847077944\\r\\n633577890\\r\\n21924242\\r\\n429617104\\r\\n40169532\\r\\n200231692\\r\\n301247265\\r\\n526536756\\r\\n236599712\\r\\n449404280\\r\\n482154139\\r\\n74891321\\r\\n744845075\\r\\n202529472\\r\\n497487224\\r\\n750227627\\r\\n791509388\\r\\n365064757\\r\\n435991351\\r\\n911452637\\r\\n230155510...']}, {'input': '200000 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n83030...', '746090912\\r\\n987874942\\r\\n493937471\\r\\n493937471\\r\\n241784030\\r\\n493937471\\r\\n746090912\\r\\n241784030\\r\\n746090912\\r\\n987874942\\r\\n493937471\\r\\n241784030\\r\\n493937471\\r\\n493937471\\r\\n987874942\\r\\n493937471\\r\\n987874942\\r\\n746090912\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n493937471\\r\\n493937471\\r\\n483568060\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n241784030\\r\\n746090912\\r\\n746090912\\r\\n987874942\\r\\n493937471\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n746090912\\r\\n241784030\\r\\n493937471\\r\\n746090912\\r\\n241784030\\r\\n493937471\\r\\n49393...', '249477932\\r\\n163324885\\r\\n619370540\\r\\n591761649\\r\\n381202278\\r\\n400495236\\r\\n181619933\\r\\n483987183\\r\\n768059384\\r\\n853879792\\r\\n648642618\\r\\n525566838\\r\\n955999425\\r\\n754753895\\r\\n409143808\\r\\n470016419\\r\\n322658124\\r\\n100123809\\r\\n150684670\\r\\n101454359\\r\\n634006577\\r\\n229187060\\r\\n466357410\\r\\n35592186\\r\\n769389935\\r\\n547853534\\r\\n85820409\\r\\n289061762\\r\\n201245531\\r\\n244821008\\r\\n910095485\\r\\n40581744\\r\\n910760760\\r\\n733797749\\r\\n450390828\\r\\n440079067\\r\\n811634863\\r\\n573799237\\r\\n619703176\\r\\n460037301\\r\\n90144696\\r\\n512261348\\r\\n656958547\\r\\n636002401\\r\\n271099351\\r\\n573799237\\r\\n748766427...', '337242164\\r\\n175981139\\r\\n705993748\\r\\n951319188\\r\\n208728534\\r\\n926966446\\r\\n894219051\\r\\n142402527\\r\\n394342301\\r\\n747271382\\r\\n832167014\\r\\n925728471\\r\\n915824671\\r\\n371227534\\r\\n265828671\\r\\n404110515\\r\\n737503168\\r\\n526705442\\r\\n275596885\\r\\n225789012\\r\\n140757794\\r\\n548311062\\r\\n834642964\\r\\n960680644\\r\\n982693022\\r\\n298440480\\r\\n97139796\\r\\n357880981\\r\\n649164783\\r\\n74025029\\r\\n270644985\\r\\n37970467\\r\\n945129313\\r\\n422137796\\r\\n739979118\\r\\n389390401\\r\\n815106536\\r\\n311922619\\r\\n858860120\\r\\n411267193\\r\\n976503147\\r\\n835880939\\r\\n13346553\\r\\n661137775\\r\\n978979097\\r\\n527943417\\r\\n707231723...', '895547075\\r\\n50488475\\r\\n972784199\\r\\n737802803\\r\\n134349212\\r\\n579628449\\r\\n120501272\\r\\n588315405\\r\\n599840552\\r\\n714837825\\r\\n262849659\\r\\n448375127\\r\\n596572279\\r\\n172710075\\r\\n108458976\\r\\n317466571\\r\\n845058600\\r\\n348860806\\r\\n506174996\\r\\n501269960\\r\\n76979425\\r\\n561049607\\r\\n754144168\\r\\n500496863\\r\\n56852638\\r\\n736253107\\r\\n323142953\\r\\n631062404\\r\\n987492303\\r\\n864152840\\r\\n155163780\\r\\n16686131\\r\\n341291713\\r\\n213479047\\r\\n623578627\\r\\n815212310\\r\\n74571316\\r\\n580316230\\r\\n11782846\\r\\n9977202\\r\\n56164857\\r\\n453363728\\r\\n283577160\\r\\n112674480\\r\\n770828548\\r\\n441236116\\r\\n475210843\\r\\n997...', '743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n74369...', '743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n74369...', '34499784\\r\\n374247743\\r\\n362747815\\r\\n297560637\\r\\n574121750\\r\\n869682055\\r\\n449997441\\r\\n458622387\\r\\n930182193\\r\\n940681955\\r\\n376622642\\r\\n28249737\\r\\n622933686\\r\\n969931858\\r\\n400622664\\r\\n671871138\\r\\n811807848\\r\\n331623096\\r\\n223311188\\r\\n305748258\\r\\n203623639\\r\\n439935004\\r\\n185436339\\r\\n481622243\\r\\n517559518\\r\\n585621678\\r\\n66124586\\r\\n679996001\\r\\n894244918\\r\\n45999712\\r\\n243436062\\r\\n887057463\\r\\n525184298\\r\\n990056732\\r\\n154311620\\r\\n198873841\\r\\n227623661\\r\\n430809975\\r\\n12937419\\r\\n194561368\\r\\n140374035\\r\\n610059025\\r\\n715495951\\r\\n677058261\\r\\n731308352\\r\\n710120554\\r\\n143749100\\r...', '743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n74369...', '563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n56365...', '948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n94886...', '616415891\\r\\n743692045\\r\\n743692045\\r\\n616415891\\r\\n489139737\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n870968199\\r\\n616415891\\r\\n743692045\\r\\n616415891\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n489139737\\r\\n870968199\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n616415891\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n361863583\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n870968199\\r\\n616415891\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n107311275\\r\\n743692045\\r\\n870968199\\r\\n870968199\\r\\n87096...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['534464893\\r\\n70685433\\r\\n141370866\\r\\n605150326\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n605150326\\r\\n605150326\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n141370866\\r\\n70685433\\r\\n534464893\\r\\n141370866\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n605150326\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n...', '434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n43434...', '479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n47934...', '983882738\\r\\n723119688\\r\\n459823065\\r\\n556901314\\r\\n70724963\\r\\n266615302\\r\\n669551615\\r\\n128160584\\r\\n374823721\\r\\n636048406\\r\\n410086236\\r\\n880577836\\r\\n119251355\\r\\n80183061\\r\\n594759171\\r\\n13376576\\r\\n422252375\\r\\n548479185\\r\\n235532967\\r\\n555429175\\r\\n697576973\\r\\n194705367\\r\\n244991065\\r\\n696417466\\r\\n575930209\\r\\n911572937\\r\\n690252582\\r\\n173917166\\r\\n286156762\\r\\n203240195\\r\\n371392343\\r\\n232850391\\r\\n10955702\\r\\n65159878\\r\\n81942367\\r\\n928468125\\r\\n286592932\\r\\n499727395\\r\\n803102816\\r\\n81855133\\r\\n235158566\\r\\n824901521\\r\\n295851097\\r\\n716980269\\r\\n913157775\\r\\n996485047\\r\\n807919099\\r\\n4...', '535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n53563...', '483259721\\r\\n483259721\\r\\n451534810\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n709027126\\r\\n483259721\\r\\n966519442\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n740752037\\r\\n225767405\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n451534810\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n966519442\\r\\n225767405\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n225767405\\r\\n740752037\\r\\n483259721\\r\\n225767405\\r\\n740752037\\r\\n74075...', '365182673\\r\\n453133330\\r\\n646237559\\r\\n383557795\\r\\n419033749\\r\\n340436101\\r\\n116418016\\r\\n678527788\\r\\n945667567\\r\\n79030627\\r\\n870994872\\r\\n815130278\\r\\n370916978\\r\\n677151415\\r\\n467150520\\r\\n882361399\\r\\n890542201\\r\\n249936864\\r\\n39196741\\r\\n947579002\\r\\n636680384\\r\\n295607138\\r\\n675342063\\r\\n808325849\\r\\n29104504\\r\\n25918779\\r\\n103037971\\r\\n291784268\\r\\n445589673\\r\\n215200138\\r\\n658241231\\r\\n704446567\\r\\n478414964\\r\\n374535682\\r\\n193639291\\r\\n871632017\\r\\n186732779\\r\\n291784268\\r\\n138616008\\r\\n491795009\\r\\n475331322\\r\\n689894315\\r\\n243667497\\r\\n853256895\\r\\n714003742\\r\\n774124185\\r\\n363271238...', '985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n98542...', '155925765\\r\\n487818429\\r\\n547205425\\r\\n780737503\\r\\n891037610\\r\\n578930143\\r\\n825301017\\r\\n138861660\\r\\n552655747\\r\\n896394864\\r\\n881431780\\r\\n167493014\\r\\n480546290\\r\\n147428613\\r\\n697960072\\r\\n762448385\\r\\n870903408\\r\\n251332589\\r\\n614973238\\r\\n898519152\\r\\n581333635\\r\\n223833180\\r\\n271513325\\r\\n829479792\\r\\n130457576\\r\\n488950374\\r\\n631091534\\r\\n259853008\\r\\n403102846\\r\\n643511524\\r\\n491144463\\r\\n683066789\\r\\n279987210\\r\\n916459265\\r\\n497517327\\r\\n461078693\\r\\n513286618\\r\\n11055375\\r\\n943036132\\r\\n453946156\\r\\n770116063\\r\\n285321197\\r\\n954649915\\r\\n686299755\\r\\n305432132\\r\\n314991428\\r\\n917591...', '979248391\\r\\n467909552\\r\\n175190733\\r\\n498757573\\r\\n436634896\\r\\n282945489\\r\\n831422982\\r\\n525572199\\r\\n608769567\\r\\n291190788\\r\\n623553625\\r\\n907228321\\r\\n19120025\\r\\n908756352\\r\\n635157558\\r\\n367120190\\r\\n895500325\\r\\n121864053\\r\\n271093430\\r\\n805461626\\r\\n799170993\\r\\n621048261\\r\\n209948086\\r\\n214834751\\r\\n291190788\\r\\n88084033\\r\\n941559039\\r\\n256433435\\r\\n462472189\\r\\n261870798\\r\\n718354926\\r\\n62673375\\r\\n599120300\\r\\n207566785\\r\\n71042737\\r\\n669914911\\r\\n844128311\\r\\n594233635\\r\\n758976277\\r\\n186492094\\r\\n238841441\\r\\n949377703\\r\\n280013490\\r\\n621474896\\r\\n309333480\\r\\n356245464\\r\\n817740320...']}, {'input': '200000 3000\\r\\n0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 1 1 1 0 1 1 0 0 1 0 0 0 1 1 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 1 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 1 0 0 1 0 0 0 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 0 0 1 0 0 0 1 1 0 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 ...', 'output': ['684128648\\r\\n534537704\\r\\n70831055\\r\\n605368759\\r\\n605368759\\r\\n534537704\\r\\n55897238\\r\\n70831055\\r\\n534537704\\r\\n534537704\\r\\n605368759\\r\\n684128648\\r\\n55897238\\r\\n740025886\\r\\n534537704\\r\\n70831055\\r\\n70831055\\r\\n684128648\\r\\n70831055\\r\\n684128648\\r\\n425910181\\r\\n70831055\\r\\n605368759\\r\\n534537704\\r\\n534537704\\r\\n605368759\\r\\n684128648\\r\\n70831055\\r\\n684128648\\r\\n605368759\\r\\n70831055\\r\\n370012943\\r\\n370012943\\r\\n370012943\\r\\n605368759\\r\\n70831055\\r\\n534537704\\r\\n70831055\\r\\n370012943\\r\\n141662110\\r\\n534537704\\r\\n370012943\\r\\n370012943\\r\\n70831055\\r\\n684128648\\r\\n370012943\\r\\n684128648\\r\\n5345377...']}, {'input': '200000 3000\\r\\n1 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 1 1 0 1 1 1 1 0 0 1 0 1 0 0 1 0 1 1 0 1 0 1 1 0 0 1 1 0 0 1 0 1 0 1 1 0 0 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 1 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 0 1 0 0 0 1 1 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ...', 'output': ['331265679\\r\\n248932636\\r\\n609274319\\r\\n474255977\\r\\n102055814\\r\\n485644908\\r\\n626044190\\r\\n431097835\\r\\n319780031\\r\\n47044666\\r\\n687413158\\r\\n404806427\\r\\n125126455\\r\\n282606731\\r\\n307585492\\r\\n584577913\\r\\n604465119\\r\\n366599088\\r\\n490459582\\r\\n11853006\\r\\n753101524\\r\\n749114305\\r\\n816668970\\r\\n25465595\\r\\n942396724\\r\\n387086401\\r\\n558715961\\r\\n470999022\\r\\n908318742\\r\\n535377307\\r\\n712631115\\r\\n501708418\\r\\n465458062\\r\\n906281962\\r\\n309027298\\r\\n466289495\\r\\n88346508\\r\\n21689911\\r\\n46580591\\r\\n650678352\\r\\n435081076\\r\\n202663995\\r\\n554027989\\r\\n280201535\\r\\n865380747\\r\\n516485969\\r\\n226759102\\r\\n...']}, {'input': '200000 3000\\r\\n0 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 ...', 'output': ['702758762\\r\\n222668721\\r\\n663197048\\r\\n675792950\\r\\n759259581\\r\\n332486741\\r\\n171127920\\r\\n414458191\\r\\n349087590\\r\\n847918503\\r\\n522872021\\r\\n540727038\\r\\n813504457\\r\\n278812310\\r\\n949679696\\r\\n784095578\\r\\n918470307\\r\\n482110597\\r\\n535952792\\r\\n109088580\\r\\n967478176\\r\\n268019403\\r\\n523209396\\r\\n80286422\\r\\n566422901\\r\\n182974112\\r\\n166764579\\r\\n716767192\\r\\n203579125\\r\\n975507557\\r\\n770975186\\r\\n884777286\\r\\n433828625\\r\\n891459014\\r\\n519109900\\r\\n907459392\\r\\n591988953\\r\\n479131884\\r\\n989822907\\r\\n846824242\\r\\n304414023\\r\\n13755521\\r\\n6710438\\r\\n355497544\\r\\n718926904\\r\\n912736930\\r\\n173287893...']}, {'input': '10 3000\\r\\n1 1 1 1 1 0 0 0 1 1\\r\\n6 22 5 2 4 15 4 7 31 4\\r\\n', 'output': ['561258918\\r\\n61460660\\r\\n467715765\\r\\n187086306\\r\\n374172612\\r\\n538110090\\r\\n143496024\\r\\n251118042\\r\\n903349037\\r\\n374172612']}, {'input': '100 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n10 8 1 9 7 5 12 9 15 7 16 5 17 5 17 21 11 3 4 4 30 17 3 84 12 30 2 8 2 2 22 24 15 11 15 13 7 17 1 12 8 4 3 6 5 15 1 3 4 2 27 3 11 11 3 3 3 5 14 2 5 13 6 2 6 5 6 19 3 16 4 12 11 2 2 3 25 14 6 11 22 4 10 32 9 19 14 2 2 3 4 3 2 5 18 14 2 7 3 8\\r\\n', 'output': ['23677346\\r\\n418239618\\r\\n800963217\\r\\n220958482\\r\\n615520754\\r\\n11838673\\r\\n627359427\\r\\n220958482\\r\\n35516019\\r\\n615520754\\r\\n836479236\\r\\n11838673\\r\\n639198100\\r\\n11838673\\r\\n639198100\\r\\n848317909\\r\\n824640563\\r\\n406400945\\r\\n209119809\\r\\n209119809\\r\\n71032038\\r\\n639198100\\r\\n406400945\\r\\n398538577\\r\\n627359427\\r\\n71032038\\r\\n603682081\\r\\n418239618\\r\\n19778681\\r\\n603682081\\r\\n651036773\\r\\n256474501\\r\\n35516019\\r\\n824640563\\r\\n35516019\\r\\n430078291\\r\\n615520754\\r\\n639198100\\r\\n800963217\\r\\n627359427\\r\\n418239618\\r\\n209119809\\r\\n406400945\\r\\n812801890\\r\\n11838673\\r\\n35516019\\r\\n800963217\\r\\n406400...']}, {'input': '1000 3000\\r\\n0 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 ...', 'output': ['984664827\\r\\n971085301\\r\\n837724678\\r\\n984664827\\r\\n225735001\\r\\n971085301\\r\\n984664827\\r\\n611989677\\r\\n65215326\\r\\n611989677\\r\\n837724678\\r\\n984664827\\r\\n225735001\\r\\n984664827\\r\\n971085301\\r\\n225735001\\r\\n225735001\\r\\n984664827\\r\\n971085301\\r\\n957505775\\r\\n971085301\\r\\n984664827\\r\\n943926249\\r\\n225735001\\r\\n971085301\\r\\n611989677\\r\\n837724678\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n984664827\\r\\n971085301\\r\\n943926249\\r\\n943926249\\r\\n611989677\\r\\n971085301\\r\\n984664827\\r\\n957505775\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n971085301\\r\\n225735001\\r\\n837724678\\r\\n611989...']}, {'input': '1000 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n5\\r\\n5\\r\\n499122184\\r\\n10\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122184\\r\\n5\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122184\\r\\n5...']}, {'input': '199990 3000\\r\\n1 0 0 1 0 1 1 0 0 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 0 1 1 0 0 1 0 0 1 1 0 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 0 0 1 0 1 0 ...', 'output': ['646452156\\r\\n960868656\\r\\n118518242\\r\\n184272685\\r\\n747024268\\r\\n964037469\\r\\n951101180\\r\\n377347150\\r\\n254993892\\r\\n11139421\\r\\n70322210\\r\\n525571057\\r\\n926475930\\r\\n63428346\\r\\n756018063\\r\\n626131891\\r\\n466781454\\r\\n656042659\\r\\n69698706\\r\\n359694160\\r\\n226813875\\r\\n191435355\\r\\n897230167\\r\\n851910875\\r\\n872964055\\r\\n741910138\\r\\n963242791\\r\\n859073545\\r\\n501205753\\r\\n252469038\\r\\n77916365\\r\\n622358084\\r\\n867246600\\r\\n381481659\\r\\n57646031\\r\\n326439010\\r\\n37314488\\r\\n267966014\\r\\n386173645\\r\\n224253188\\r\\n693822089\\r\\n652063749\\r\\n209704954\\r\\n936775840\\r\\n675102836\\r\\n581756207\\r\\n18809453\\r\\n84...']}, {'input': '199991 3000\\r\\n1 0 1 0 0 1 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 ...', 'output': ['576788803\\r\\n851579816\\r\\n464431389\\r\\n925910539\\r\\n240339104\\r\\n317886519\\r\\n67707478\\r\\n262772669\\r\\n221595177\\r\\n612937974\\r\\n736137684\\r\\n268724388\\r\\n68361383\\r\\n847191682\\r\\n557301933\\r\\n913346054\\r\\n648280739\\r\\n171995554\\r\\n235269506\\r\\n530242292\\r\\n148650394\\r\\n908499525\\r\\n304200830\\r\\n721371958\\r\\n474031015\\r\\n817280262\\r\\n825707282\\r\\n465373250\\r\\n245622892\\r\\n341231679\\r\\n845696111\\r\\n853007293\\r\\n68361383\\r\\n915771149\\r\\n987480726\\r\\n726171771\\r\\n707992711\\r\\n478931968\\r\\n847890178\\r\\n687514833\\r\\n732279394\\r\\n927044872\\r\\n856499296\\r\\n862463110\\r\\n77307104\\r\\n484794642\\r\\n615409785...']}, {'input': '199992 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 ...', 'output': ['944579271\\r\\n815447430\\r\\n121435610\\r\\n89385736\\r\\n85360285\\r\\n56962924\\r\\n289585947\\r\\n344015172\\r\\n223771444\\r\\n652123221\\r\\n591303048\\r\\n4248454\\r\\n306743823\\r\\n968709911\\r\\n670850059\\r\\n672191876\\r\\n417953645\\r\\n24521845\\r\\n946915719\\r\\n777789018\\r\\n60838440\\r\\n839186865\\r\\n79733480\\r\\n134590444\\r\\n755625163\\r\\n504520550\\r\\n752912502\\r\\n172585260\\r\\n452314215\\r\\n812559060\\r\\n865646468\\r\\n584772439\\r\\n717751255\\r\\n344015172\\r\\n217454686\\r\\n551825\\r\\n985330789\\r\\n733776192\\r\\n951920831\\r\\n371680341\\r\\n447096882\\r\\n332238689\\r\\n688429333\\r\\n390729899\\r\\n623930596\\r\\n453096625\\r\\n858100172\\r\\n14638...']}, {'input': '199993 3000\\r\\n1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['189220773\\r\\n219328456\\r\\n767760662\\r\\n806220888\\r\\n797979411\\r\\n545740580\\r\\n219383989\\r\\n75297991\\r\\n40929720\\r\\n935115229\\r\\n532004785\\r\\n529257626\\r\\n49282263\\r\\n789793467\\r\\n545740580\\r\\n962586819\\r\\n485358615\\r\\n471678353\\r\\n907699172\\r\\n803473729\\r\\n408604762\\r\\n963918788\\r\\n35602001\\r\\n847372740\\r\\n611561330\\r\\n216636830\\r\\n729467035\\r\\n298885001\\r\\n73784562\\r\\n95928433\\r\\n405857603\\r\\n312620796\\r\\n126147182\\r\\n518268990\\r\\n353717115\\r\\n501841569\\r\\n512830205\\r\\n685568024\\r\\n252294364\\r\\n962586819\\r\\n477172671\\r\\n252637898\\r\\n246744513\\r\\n434391811\\r\\n52084955\\r\\n807039242\\r\\n414043547\\r\\n2...']}, {'input': '199994 3000\\r\\n0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 1 0 0 1 1 0 0 1 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 0 1 0 1 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 ...', 'output': ['336654971\\r\\n732535\\r\\n815250185\\r\\n326444659\\r\\n729180253\\r\\n129624924\\r\\n358796707\\r\\n444866639\\r\\n754810869\\r\\n843551608\\r\\n256744726\\r\\n70820418\\r\\n164515107\\r\\n207034102\\r\\n575220043\\r\\n87535002\\r\\n682699176\\r\\n43984065\\r\\n797070531\\r\\n806189316\\r\\n815982720\\r\\n704840912\\r\\n900587582\\r\\n585042405\\r\\n921264248\\r\\n459213067\\r\\n352526818\\r\\n883140463\\r\\n815669240\\r\\n511377385\\r\\n785483692\\r\\n225259507\\r\\n505565288\\r\\n832271475\\r\\n46481077\\r\\n860266192\\r\\n560703064\\r\\n99613410\\r\\n150730663\\r\\n410704936\\r\\n704840912\\r\\n915837096\\r\\n953960881\\r\\n968477860\\r\\n589004487\\r\\n187389378\\r\\n517884662\\r\\n93...']}, {'input': '199995 3000\\r\\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 ...', 'output': ['662762303\\r\\n929872487\\r\\n874878479\\r\\n456275271\\r\\n715183658\\r\\n400437516\\r\\n521458497\\r\\n76578537\\r\\n927594887\\r\\n897280874\\r\\n185062970\\r\\n530346011\\r\\n941267798\\r\\n71793140\\r\\n377419134\\r\\n675559304\\r\\n591654880\\r\\n719511098\\r\\n599406031\\r\\n622421976\\r\\n250476393\\r\\n605557988\\r\\n772627865\\r\\n133099572\\r\\n594620634\\r\\n848508553\\r\\n404542070\\r\\n193952921\\r\\n255031593\\r\\n40568087\\r\\n771704693\\r\\n756662785\\r\\n869935052\\r\\n847369753\\r\\n36238210\\r\\n358730629\\r\\n164552385\\r\\n938076721\\r\\n767600139\\r\\n458579571\\r\\n693757159\\r\\n843723156\\r\\n975014694\\r\\n858992824\\r\\n955398666\\r\\n756432588\\r\\n585958443...']}, {'input': '199996 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 ...', 'output': ['670876956\\r\\n282683795\\r\\n377011834\\r\\n803395587\\r\\n676385588\\r\\n935914218\\r\\n718622147\\r\\n536417373\\r\\n403228588\\r\\n282205508\\r\\n715874782\\r\\n593703261\\r\\n180906172\\r\\n125082949\\r\\n159213672\\r\\n79114647\\r\\n828013417\\r\\n919922217\\r\\n269261194\\r\\n677998414\\r\\n539957249\\r\\n116020539\\r\\n719578721\\r\\n947915860\\r\\n933837007\\r\\n911830283\\r\\n475864127\\r\\n320232037\\r\\n207122926\\r\\n915004383\\r\\n801796663\\r\\n301300804\\r\\n489000308\\r\\n929955103\\r\\n208735752\\r\\n169096397\\r\\n431236133\\r\\n485282467\\r\\n675865595\\r\\n711172563\\r\\n31711484\\r\\n780760415\\r\\n330893371\\r\\n339149368\\r\\n107928605\\r\\n630648538\\r\\n1150500...']}, {'input': '199997 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['509540793\\r\\n120976575\\r\\n549866318\\r\\n103886913\\r\\n46471726\\r\\n486304930\\r\\n356783524\\r\\n889560180\\r\\n199228995\\r\\n889560180\\r\\n825998792\\r\\n728258080\\r\\n40325525\\r\\n723460820\\r\\n584045642\\r\\n849234655\\r\\n398457990\\r\\n44073096\\r\\n355733835\\r\\n753892573\\r\\n259042812\\r\\n526630455\\r\\n218717287\\r\\n69707589\\r\\n445979405\\r\\n843088454\\r\\n549866318\\r\\n900503641\\r\\n915194673\\r\\n110033114\\r\\n233408319\\r\\n632915998\\r\\n443580775\\r\\n883413979\\r\\n356783524\\r\\n63561388\\r\\n314059369\\r\\n628118738\\r\\n543720117\\r\\n420344912\\r\\n705022217\\r\\n89195881\\r\\n535175286\\r\\n987300892\\r\\n72106219\\r\\n543720117\\r\\n785673267\\r\\n2...', '791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n79153...']}, {'input': '199998 3000\\r\\n1 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 1 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 1 1 1 0 0 1 0 1 0 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 1 0 0 1 0 0 1 1 1 1 0 0 1 1 0 0 ...', 'output': ['728321596\\r\\n638956912\\r\\n987568459\\r\\n799092377\\r\\n597086927\\r\\n782772546\\r\\n770287170\\r\\n255784080\\r\\n699516389\\r\\n256762390\\r\\n656812813\\r\\n513524780\\r\\n416026596\\r\\n285567597\\r\\n279669471\\r\\n136357125\\r\\n790734343\\r\\n479381626\\r\\n898668365\\r\\n822581531\\r\\n870855601\\r\\n827897584\\r\\n408064799\\r\\n759611276\\r\\n235779603\\r\\n990282556\\r\\n571135194\\r\\n279669471\\r\\n311516659\\r\\n287631268\\r\\n607109724\\r\\n822559637\\r\\n639460200\\r\\n369129744\\r\\n111968446\\r\\n157186402\\r\\n495141278\\r\\n652212868\\r\\n143815634\\r\\n367752526\\r\\n165008822\\r\\n592117981\\r\\n400788425\\r\\n793754430\\r\\n966900453\\r\\n2484473\\r\\n9089752...', '964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n96492...']}, {'input': '199999 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 ...', 'output': ['659992102\\r\\n43534688\\r\\n613251861\\r\\n688791385\\r\\n969096633\\r\\n244584877\\r\\n407865304\\r\\n186960964\\r\\n243317864\\r\\n549539932\\r\\n991833247\\r\\n262687380\\r\\n543128826\\r\\n494636937\\r\\n223625258\\r\\n610530943\\r\\n823731817\\r\\n148706567\\r\\n321255216\\r\\n793342431\\r\\n574351284\\r\\n666241663\\r\\n731705240\\r\\n759075965\\r\\n574351284\\r\\n267483036\\r\\n533214424\\r\\n650213898\\r\\n38254397\\r\\n748651581\\r\\n341432457\\r\\n458755021\\r\\n851102542\\r\\n458618823\\r\\n777016923\\r\\n879306339\\r\\n831596828\\r\\n223948348\\r\\n334458632\\r\\n214654779\\r\\n250672893\\r\\n599162636\\r\\n601914362\\r\\n888897651\\r\\n620419998\\r\\n546470577\\r\\n2155987...', '959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n550771238\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n550771238\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n95962...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 ...', 'output': ['893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n917300718\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n89340...', '777798569\\r\\n231173131\\r\\n230887037\\r\\n573284389\\r\\n184819702\\r\\n389069614\\r\\n336642733\\r\\n374568480\\r\\n855432105\\r\\n25206655\\r\\n4356888\\r\\n605147597\\r\\n575616793\\r\\n296362756\\r\\n407873071\\r\\n112177054\\r\\n213967495\\r\\n814007752\\r\\n159623960\\r\\n280717246\\r\\n614422648\\r\\n758973286\\r\\n52239134\\r\\n765343745\\r\\n464084652\\r\\n192059356\\r\\n447272940\\r\\n617899428\\r\\n590679202\\r\\n570104616\\r\\n874554395\\r\\n774321789\\r\\n991301706\\r\\n991873894\\r\\n397156637\\r\\n113523353\\r\\n617052059\\r\\n46639523\\r\\n446403745\\r\\n35361814\\r\\n921640272\\r\\n891146426\\r\\n273084002\\r\\n58808253\\r\\n533015325\\r\\n30707919\\r\\n154980978\\r\\n71...']}, {'input': '200000 3000\\r\\n1 0 0 0 0 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 1 0 1 0 0 1 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 1 0 ...', 'output': ['203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n71266...']}, {'input': '200000 3000\\r\\n0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 1 0 1 0 1 1 1 0 0 0 1 0 1 1 0 1 1 0 0 0 1 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 0 1 1 0 1 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 0 1 1 1 1 1 1 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 0 1 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 ...', 'output': ['532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n53...']}]", "source_code": "#include <iostream>\n#include <vector>\n#include <cstring>\n#include <string>\n#include <algorithm>\n#include <map>\n#include <queue>\n#include <math.h>\nusing namespace std;\ntypedef long long ll;\nconst ll MOD = 998244353;\nconst int MAX_N = 2 * 100000;\n\nint n, m;\nvector<int> a, w;\n\nll pw(ll b, ll p) {\n\tll ans = 1;\n\tfor(; p; p >>= 1) {\n\t\tif(p & 1) ans *= b;\n\t\tans %= MOD;\n\t\tb *= b;\n\t\tb %= MOD;\n\t}\n\treturn ans;\n}\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin >> n >> m;\n\ta.resize(n);\n\tw.resize(n);\n\tfor(int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t}\n\tfor(int i = 0; i < n; i++) {\n\t\tcin >> w[i];\n\t\tif(a[i]) w[i]++;\n\t}\n\tll ans = 0;\n\tfor(int i = 0; i < n; i++) {\n\t\tif(a[i]) {\n\t\t\tcout << (ans + w[i]) % MOD << endl;\n\t\t} else {\n\t\t\tll t = m + w[i];\n\t\t\tif(t >= MOD) t %= MOD;\n\t\t\tll u = pw(t, MOD - 2) % MOD;\n\t\t\tif(t!= 1) u = pw(u + 1, MOD - 2);\n\t\t\tcout << (ans + (MOD - w[i]) * u) % MOD << endl;\n\t\t}\n\t\tans += (a[i]? + 1LL : - 1LL) * (w[i] % MOD);\n\t\tans += MOD;\n\t\tans %= MOD;\n\t}\n\treturn 0;\n}\n"}
{"src_uid": "ba9c136f84375cd317f0f8b53e3939c7", "id": 31, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '2 1\\r\\n0 1\\r\\n2 1\\r\\n', 'output': ['332748119\\r\\n332748119']}, {'input': '1 2\\r\\n1\\r\\n1\\r\\n', 'output': ['3']}, {'input': '3 3\\r\\n0 1 1\\r\\n4 3 5\\r\\n', 'output': ['160955686\\r\\n185138929\\r\\n974061117']}, {'input': '5 5\\r\\n0 1 0 0 1\\r\\n9 8 3 8 8\\r\\n', 'output': ['45170585\\r\\n105647559\\r\\n680553097\\r\\n483815788\\r\\n105647559']}, {'input': '10 10\\r\\n0 1 0 0 1 1 1 1 1 1\\r\\n12 18 6 18 7 2 9 18 1 9\\r\\n', 'output': ['199115375\\r\\n823101465\\r\\n598679864\\r\\n797795239\\r\\n486469073\\r\\n424203836\\r\\n910672909\\r\\n823101465\\r\\n212101918\\r\\n910672909']}, {'input': '20 20\\r\\n1 1 1 1 0 1 1 1 0 1 0 1 0 0 1 0 1 1 0 1\\r\\n1 13 7 11 17 15 19 18 14 11 15 1 12 4 5 16 14 11 18 9\\r\\n', 'output': ['688505688\\r\\n964619120\\r\\n826562404\\r\\n585852097\\r\\n851622699\\r\\n345141790\\r\\n104431483\\r\\n414170148\\r\\n349014804\\r\\n585852097\\r\\n516550769\\r\\n688505688\\r\\n13942874\\r\\n670143860\\r\\n447795381\\r\\n684086734\\r\\n654880455\\r\\n585852097\\r\\n20914311\\r\\n207085074']}, {'input': '30 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0\\r\\n1 2 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 2 2 1 1 2 2 2\\r\\n', 'output': ['346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n542025302\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n693292404\\r\\n693292404']}, {'input': '40 40\\r\\n1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n28 13 22 35 22 13 23 35 14 36 30 10 10 15 3 9 35 35 9 29 14 28 8 29 22 30 4 31 39 24 4 19 37 4 20 7 11 17 3 25\\r\\n', 'output': ['368107101\\r\\n848286965\\r\\n360530176\\r\\n210572788\\r\\n199380339\\r\\n848286965\\r\\n195418938\\r\\n210572788\\r\\n683175727\\r\\n45461550\\r\\n37884625\\r\\n544374860\\r\\n345376326\\r\\n518064489\\r\\n502910639\\r\\n510487564\\r\\n210572788\\r\\n210572788\\r\\n510487564\\r\\n202995863\\r\\n683175727\\r\\n526005255\\r\\n675598802\\r\\n202995863\\r\\n360530176\\r\\n37884625\\r\\n337799401\\r\\n871017740\\r\\n548372189\\r\\n30307700\\r\\n337799401\\r\\n855863890\\r\\n878594665\\r\\n337799401\\r\\n690752652\\r\\n840710040\\r\\n180265088\\r\\n187842013\\r\\n502910639\\r\\n863440815']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n13 18 27 40 3 1 20 11 25 11 2 31 22 15 36 12 11 24 8 39 31 36 19 24 10 39 27 4 10 22 14 3 25 5 24 19 20 33 17 19 30 15 37 33 3 27 26 29 37 34\\r\\n', 'output': ['30685719\\r\\n733580163\\r\\n601248068\\r\\n631933787\\r\\n621385537\\r\\n539876630\\r\\n815089070\\r\\n947421165\\r\\n519739161\\r\\n947421165\\r\\n81508907\\r\\n764265882\\r\\n896597977\\r\\n112194626\\r\\n468915973\\r\\n489053442\\r\\n947421165\\r\\n978106884\\r\\n326035628\\r\\n92057157\\r\\n764265882\\r\\n468915973\\r\\n275212440\\r\\n978106884\\r\\n407544535\\r\\n92057157\\r\\n601248068\\r\\n163017814\\r\\n407544535\\r\\n896597977\\r\\n570562349\\r\\n621385537\\r\\n519739161\\r\\n702894444\\r\\n978106884\\r\\n275212440\\r\\n815089070\\r\\n845774789\\r\\n193703533\\r\\n275212440\\r\\n224389252\\r\\n112194626\\r\\n10548250\\r\\n845774789\\r\\n621385537\\r\\n601248068\\r\\n61371438\\r\\n...']}, {'input': '50 50\\r\\n0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0\\r\\n2 50 37 21 21 2 26 49 15 44 8 27 30 28 26 40 26 45 41 37 27 34 8 35 2 23 2 49 13 1 39 37 12 42 7 11 4 50 42 21 27 50 28 31 17 22 10 43 46 13\\r\\n', 'output': ['380563607\\r\\n529890998\\r\\n551838435\\r\\n502062638\\r\\n635094670\\r\\n380563607\\r\\n954349479\\r\\n816391328\\r\\n358616170\\r\\n386444530\\r\\n907437062\\r\\n645509106\\r\\n717232340\\r\\n336668733\\r\\n954349479\\r\\n623561669\\r\\n954349479\\r\\n77604157\\r\\n314721296\\r\\n453480088\\r\\n645509106\\r\\n480115201\\r\\n907437062\\r\\n725742999\\r\\n380563607\\r\\n362831759\\r\\n725981442\\r\\n838731371\\r\\n976296916\\r\\n362990721\\r\\n932402042\\r\\n551838435\\r\\n286892936\\r\\n5880923\\r\\n832850448\\r\\n998164872\\r\\n761127214\\r\\n529890998\\r\\n5880923\\r\\n502062638\\r\\n645509106\\r\\n181137696\\r\\n181296658\\r\\n408391967\\r\\n739179777\\r\\n193222265\\r\\n904573682\\r...']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 1 2 2 2 1 1 1\\r\\n', 'output': ['665496237\\r\\n332748121\\r\\n332748121\\r\\n665496237\\r\\n332748121\\r\\n332748121\\r\\n332748121\\r\\n665496237\\r\\n665496237\\r\\n665496237']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 0 1 1\\r\\n2 1 2 2 1 1 1 1 1 1\\r\\n', 'output': ['771370640\\r\\n385685320\\r\\n771370640\\r\\n771370640\\r\\n385685320\\r\\n385685320\\r\\n385685320\\r\\n635246407\\r\\n385685320\\r\\n385685320']}, {'input': '10 10\\r\\n0 0 0 1 0 0 0 0 0 0\\r\\n2 2 2 2 2 2 2 1 2 2\\r\\n', 'output': ['973938381\\r\\n973938381\\r\\n973938381\\r\\n791643586\\r\\n973938381\\r\\n973938381\\r\\n973938381\\r\\n986091367\\r\\n973938381\\r\\n973938381']}, {'input': '10 10\\r\\n0 0 1 0 0 0 1 0 0 0\\r\\n2 1 2 1 1 2 1 1 1 1\\r\\n', 'output': ['44896189\\r\\n521570271\\r\\n482402083\\r\\n521570271\\r\\n521570271\\r\\n44896189\\r\\n740323218\\r\\n521570271\\r\\n521570271\\r\\n521570271']}, {'input': '10 10\\r\\n1 0 0 0 1 1 1 0 1 0\\r\\n1 2 1 2 1 1 2 2 2 1\\r\\n', 'output': ['910950063\\r\\n595918255\\r\\n797081304\\r\\n595918255\\r\\n910950063\\r\\n910950063\\r\\n823655773\\r\\n595918255\\r\\n823655773\\r\\n797081304']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n17 10 8 34 5 4 3 44 20 14\\r\\n', 'output': ['709444118\\r\\n6278277\\r\\n803618104\\r\\n420643883\\r\\n502261315\\r\\n401809052\\r\\n301356789\\r\\n426922160\\r\\n12556554\\r\\n408087329']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 0 1\\r\\n40 36 29 4 36 35 9 38 40 18\\r\\n', 'output': ['59109317\\r\\n951618303\\r\\n17898146\\r\\n105735367\\r\\n951618303\\r\\n675623373\\r\\n487465664\\r\\n505363810\\r\\n736385984\\r\\n974931328']}, {'input': '10 10\\r\\n0 0 0 0 0 0 0 1 0 0\\r\\n8 33 37 18 30 48 45 34 25 48\\r\\n', 'output': ['211347083\\r\\n497465085\\r\\n104016450\\r\\n725092025\\r\\n542990473\\r\\n269838145\\r\\n315363533\\r\\n227335634\\r\\n286118002\\r\\n269838145']}, {'input': '10 10\\r\\n0 0 1 0 0 0 0 0 1 0\\r\\n47 34 36 9 3 16 17 46 47 1\\r\\n', 'output': ['167709201\\r\\n57603825\\r\\n597597985\\r\\n690531016\\r\\n562925123\\r\\n673030499\\r\\n527924089\\r\\n312815611\\r\\n253346183\\r\\n853137943']}, {'input': '10 10\\r\\n1 0 0 1 1 0 1 0 0 1\\r\\n24 7 10 9 6 13 27 17 6 39\\r\\n', 'output': ['976715988\\r\\n573793375\\r\\n391885813\\r\\n865390672\\r\\n244178997\\r\\n209978251\\r\\n599683310\\r\\n965679188\\r\\n634429229\\r\\n89796951']}, {'input': '10 10\\r\\n0 0 0 0 0 1 0 0 0 0\\r\\n34 34 34 34 34 34 34 34 34 34\\r\\n', 'output': ['971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n754874965\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n43 43 43 43 43 43 43 43 43 43\\r\\n', 'output': ['44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 2 1 1 2 1 1 1 2 1 1 2 1 2 1 2 1 2 1 2 2 2 1 2 2 2 2 1\\r\\n', 'output': ['260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1\\r\\n2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 2 2 2 2 1 2 1 2 1 1 1 1 2 1\\r\\n', 'output': ['720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n720162001\\r\\n720162001\\r\\n720162001\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n720162001\\r\\n427819009\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177']}, {'input': '30 30\\r\\n0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n2 1 1 2 1 2 2 2 2 2 1 1 2 2 2 1 2 2 2 1 2 1 1 1 1 1 2 1 1 1\\r\\n', 'output': ['188114875\\r\\n593179614\\r\\n593179614\\r\\n550614566\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n593179614']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 1 1 1 2 1 2 2 1 2 1 2 1 1 2 2 1 2 1 2 1 2 2 2 1 1 2 1 2 2\\r\\n', 'output': ['593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n275307283\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n275307283\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875']}, {'input': '30 30\\r\\n1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 1 1 0 1 0 1 0 0 1 1 0 1 0 1 0\\r\\n1 1 1 2 2 1 2 1 2 1 1 2 2 2 1 2 1 1 1 1 1 2 1 2 1 2 1 2 1 1\\r\\n', 'output': ['297674502\\r\\n297674502\\r\\n297674502\\r\\n101192689\\r\\n595349004\\r\\n549718521\\r\\n101192689\\r\\n297674502\\r\\n595349004\\r\\n297674502\\r\\n549718521\\r\\n101192689\\r\\n101192689\\r\\n101192689\\r\\n549718521\\r\\n595349004\\r\\n297674502\\r\\n549718521\\r\\n297674502\\r\\n549718521\\r\\n297674502\\r\\n101192689\\r\\n549718521\\r\\n595349004\\r\\n297674502\\r\\n101192689\\r\\n297674502\\r\\n101192689\\r\\n297674502\\r\\n549718521']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n23 45 44 49 17 36 32 26 40 8 36 11 5 19 41 16 7 38 23 40 13 16 24 44 22 13 1 2 32 31\\r\\n', 'output': ['42365832\\r\\n603712812\\r\\n124449607\\r\\n524276926\\r\\n161519661\\r\\n283321379\\r\\n362757265\\r\\n481911094\\r\\n203885493\\r\\n839372581\\r\\n283321379\\r\\n280673490\\r\\n399827319\\r\\n121801718\\r\\n683148698\\r\\n680500809\\r\\n360109376\\r\\n243603436\\r\\n42365832\\r\\n203885493\\r\\n240955547\\r\\n680500809\\r\\n521629037\\r\\n124449607\\r\\n561346980\\r\\n240955547\\r\\n479263205\\r\\n958526410\\r\\n362757265\\r\\n881738413']}, {'input': '30 30\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n41 39 15 34 45 27 18 7 48 33 46 11 24 16 35 43 7 31 26 17 30 15 5 9 29 20 21 37 3 7\\r\\n', 'output': ['61128841\\r\\n655563720\\r\\n98563838\\r\\n955457225\\r\\n295691514\\r\\n377063779\\r\\n916872088\\r\\n578393446\\r\\n115755411\\r\\n17191573\\r\\n235712813\\r\\n338478642\\r\\n556999882\\r\\n38585137\\r\\n895478524\\r\\n415648916\\r\\n578393446\\r\\n137148975\\r\\n437042480\\r\\n976850789\\r\\n197127676\\r\\n98563838\\r\\n698350848\\r\\n458436044\\r\\n257106377\\r\\n796914686\\r\\n736935985\\r\\n775521122\\r\\n818308250\\r\\n578393446']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n29 38 18 19 46 28 12 5 46 17 31 20 24 33 9 6 47 2 2 41 34 2 50 5 47 10 40 21 49 28\\r\\n', 'output': ['528451192\\r\\n658031067\\r\\n259159750\\r\\n828137710\\r\\n218632982\\r\\n957717585\\r\\n838269402\\r\\n848401094\\r\\n218632982\\r\\n688426143\\r\\n942792071\\r\\n398871317\\r\\n678294451\\r\\n807874326\\r\\n129579875\\r\\n419134701\\r\\n787610942\\r\\n139711567\\r\\n139711567\\r\\n368476241\\r\\n378607933\\r\\n139711567\\r\\n498056116\\r\\n848401094\\r\\n787610942\\r\\n698557835\\r\\n797742634\\r\\n967849277\\r\\n927322509\\r\\n957717585']}, {'input': '30 30\\r\\n0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 12 9 1 5 32 38 25 34 31 27 43 13 38 48 40 5 42 20 45 1 4 35 38 1 44 31 42 8 37\\r\\n', 'output': ['399967190\\r\\n806628868\\r\\n604971651\\r\\n399967190\\r\\n3347244\\r\\n800038448\\r\\n225087925\\r\\n16736220\\r\\n621707871\\r\\n420050654\\r\\n816670600\\r\\n228435169\\r\\n208351705\\r\\n225087925\\r\\n231782413\\r\\n26777952\\r\\n3347244\\r\\n51806110\\r\\n13388976\\r\\n30125196\\r\\n399967190\\r\\n601624407\\r\\n23430708\\r\\n225087925\\r\\n399967190\\r\\n628402359\\r\\n420050654\\r\\n826712332\\r\\n205004461\\r\\n823365088']}, {'input': '30 30\\r\\n0 1 1 0 0 1 1 1 1 0 0 1 0 0 1 0 0 0 1 0 1 1 0 0 0 1 1 1 1 0\\r\\n5 20 47 27 17 5 18 30 43 23 44 6 47 8 23 41 2 46 49 33 45 27 33 16 36 2 42 36 8 23\\r\\n', 'output': ['114252107\\r\\n760713694\\r\\n489959522\\r\\n18014766\\r\\n787754905\\r\\n689300600\\r\\n484993454\\r\\n142826188\\r\\n936763395\\r\\n126261951\\r\\n805769671\\r\\n827160720\\r\\n475023194\\r\\n781749983\\r\\n176049701\\r\\n138271795\\r\\n444998584\\r\\n252523902\\r\\n765679762\\r\\n354766165\\r\\n214239282\\r\\n727490181\\r\\n354766165\\r\\n565255613\\r\\n24019688\\r\\n275720240\\r\\n798903275\\r\\n969986908\\r\\n104636607\\r\\n126261951']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\r\\n39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39\\r\\n', 'output': ['417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n142843895']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22\\r\\n', 'output': ['23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n2 1 1 2 2 1 2 1 1 2 2 2 1 2 2 1 1 1 2 1 2 1 2 2 2 1 2 1 1 2 2 2 2 2 1 2 2 2 2 2 2 1 2 1 2 2 2 1 1 2\\r\\n', 'output': ['714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n71479...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 1 2 1 1 1 1 1 2 1 1 1 2 2 2 1 1 1 1 2 2 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 2 2 2 1\\r\\n', 'output': ['964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n824636640\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n93147...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\\r\\n1 2 2 2 2 2 2 1 1 2 2 1 1 2 1 2 2 1 2 1 2 2 1 2 2 2 1 1 1 1 2 2 2 1 2 2 1 2 2 1 1 2 2 2 2 2 1 2 2 1\\r\\n', 'output': ['512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n96131098\\r\\n27359387\\r\\n27359387\\r\\n5128...']}, {'input': '50 50\\r\\n0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\r\\n2 1 1 1 1 2 2 2 1 1 2 2 2 1 2 1 2 2 2 1 1 1 1 2 2 1 1 1 1 2 1 2 2 2 2 1 1 1 2 1 2 1 1 2 2 1 1 2 2 1\\r\\n', 'output': ['303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n480354901\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n15198...']}, {'input': '50 50\\r\\n0 0 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0\\r\\n1 1 1 1 1 2 2 1 1 2 2 2 1 1 1 2 2 2 1 1 1 1 2 1 1 1 2 2 1 1 1 2 2 1 1 2 1 1 2 2 2 2 2 2 2 2 2 1 2 1\\r\\n', 'output': ['525100120\\r\\n525100120\\r\\n392384920\\r\\n525100120\\r\\n525100120\\r\\n51955887\\r\\n784769840\\r\\n525100120\\r\\n392384920\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n392384920\\r\\n392384920\\r\\n525100120\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n392384920\\r\\n392384920\\r\\n392384920\\r\\n392384920\\r\\n784769840\\r\\n392384920\\r\\n525100120\\r\\n392384920\\r\\n51955887\\r\\n784769840\\r\\n525100120\\r\\n392384920\\r\\n525100120\\r\\n51955887\\r\\n51955887\\r\\n525100120\\r\\n392384920\\r\\n784769840\\r\\n525100120\\r\\n525100120\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n51955887\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n784769840\\r\\n51955887\\r\\n5251...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n32 22 24 45 22 17 10 5 27 1 48 15 14 43 11 16 38 31 24 19 5 28 2 4 34 29 18 32 47 11 2 34 39 29 36 11 39 24 23 16 41 45 17 39 30 15 16 3 3 8\\r\\n', 'output': ['118672439\\r\\n268758118\\r\\n837687594\\r\\n821980974\\r\\n268758118\\r\\n842923134\\r\\n848158674\\r\\n424079337\\r\\n692837455\\r\\n284464738\\r\\n677130835\\r\\n273993658\\r\\n987773273\\r\\n253051498\\r\\n134379059\\r\\n558458396\\r\\n827216514\\r\\n832452054\\r\\n837687594\\r\\n413608257\\r\\n424079337\\r\\n977302193\\r\\n568929476\\r\\n139614599\\r\\n687601915\\r\\n263522578\\r\\n129143519\\r\\n118672439\\r\\n392666097\\r\\n134379059\\r\\n568929476\\r\\n687601915\\r\\n113436899\\r\\n263522578\\r\\n258287038\\r\\n134379059\\r\\n113436899\\r\\n837687594\\r\\n553222856\\r\\n558458396\\r\\n682366375\\r\\n821980974\\r\\n842923134\\r\\n113436899\\r\\n547987316\\r\\n273993658\\r\\n55845...']}, {'input': '50 50\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n49 34 4 15 32 20 22 35 3 28 15 46 4 46 16 11 45 42 11 4 15 36 29 10 27 32 1 1 23 11 6 34 35 19 11 5 2 37 9 20 39 33 27 4 21 33 6 23 37 50\\r\\n', 'output': ['41887747\\r\\n858571128\\r\\n101008368\\r\\n378781380\\r\\n808066944\\r\\n505041840\\r\\n555546024\\r\\n883823220\\r\\n75756276\\r\\n707058576\\r\\n378781380\\r\\n163351879\\r\\n101008368\\r\\n163351879\\r\\n404033472\\r\\n277773012\\r\\n138099787\\r\\n62343511\\r\\n277773012\\r\\n101008368\\r\\n378781380\\r\\n909075312\\r\\n732310668\\r\\n252520920\\r\\n681806484\\r\\n808066944\\r\\n25252092\\r\\n25252092\\r\\n580798116\\r\\n277773012\\r\\n151512552\\r\\n858571128\\r\\n883823220\\r\\n479789748\\r\\n277773012\\r\\n126260460\\r\\n50504184\\r\\n934327404\\r\\n227268828\\r\\n505041840\\r\\n984831588\\r\\n833319036\\r\\n681806484\\r\\n101008368\\r\\n530293932\\r\\n833319036\\r\\n151512552\\r\\n...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n12 29 36 24 44 22 38 43 30 19 15 2 39 8 13 50 29 18 37 19 32 39 42 41 20 11 14 25 4 35 14 23 17 29 1 19 3 6 8 31 26 46 9 31 36 49 21 38 17 27\\r\\n', 'output': ['820896192\\r\\n985588111\\r\\n466199870\\r\\n643548031\\r\\n15219645\\r\\n506731999\\r\\n603015902\\r\\n945055982\\r\\n986069299\\r\\n301507951\\r\\n27875887\\r\\n136816032\\r\\n671423918\\r\\n547264128\\r\\n889304208\\r\\n425667741\\r\\n985588111\\r\\n233099935\\r\\n534607886\\r\\n301507951\\r\\n192567806\\r\\n671423918\\r\\n876647966\\r\\n808239950\\r\\n369915967\\r\\n752488176\\r\\n957712224\\r\\n711956047\\r\\n273632064\\r\\n397791854\\r\\n957712224\\r\\n575140015\\r\\n164691919\\r\\n985588111\\r\\n68408016\\r\\n301507951\\r\\n205224048\\r\\n410448096\\r\\n547264128\\r\\n124159790\\r\\n780364063\\r\\n152035677\\r\\n615672144\\r\\n124159790\\r\\n466199870\\r\\n357259725\\r\\n43832398...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n25 31 26 45 2 6 25 14 35 23 31 16 24 36 44 8 18 41 36 3 27 21 15 44 45 45 25 8 3 43 7 25 48 45 44 33 25 49 8 46 14 12 12 46 45 43 29 40 1 47\\r\\n', 'output': ['26673909\\r\\n312584066\\r\\n906195896\\r\\n646959648\\r\\n760799621\\r\\n285910157\\r\\n26673909\\r\\n334375582\\r\\n835938955\\r\\n264118641\\r\\n312584066\\r\\n96930850\\r\\n145396275\\r\\n717216589\\r\\n765682014\\r\\n48465425\\r\\n857730471\\r\\n123604759\\r\\n717216589\\r\\n642077255\\r\\n787473530\\r\\n501563373\\r\\n215653216\\r\\n765682014\\r\\n646959648\\r\\n108381283\\r\\n26673909\\r\\n48465425\\r\\n642077255\\r\\n884404380\\r\\n167187791\\r\\n26673909\\r\\n290792550\\r\\n646959648\\r\\n765682014\\r\\n75139334\\r\\n614792020\\r\\n172070184\\r\\n48465425\\r\\n528237282\\r\\n334375582\\r\\n571820314\\r\\n571820314\\r\\n528237282\\r\\n646959648\\r\\n884404380\\r\\n550028798\\r\\n242...']}, {'input': '50 50\\r\\n0 0 0 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 0 0\\r\\n45 49 17 22 28 34 24 38 5 46 22 36 11 12 43 21 47 39 38 38 38 27 10 49 19 46 23 7 46 35 11 38 25 16 7 32 12 13 44 14 41 36 7 31 4 46 40 28 28 46\\r\\n', 'output': ['644620779\\r\\n102973792\\r\\n443172276\\r\\n267699221\\r\\n201448503\\r\\n886344552\\r\\n745782947\\r\\n99391617\\r\\n196964962\\r\\n259647944\\r\\n267699221\\r\\n619552244\\r\\n632971787\\r\\n371547745\\r\\n416322096\\r\\n28657358\\r\\n254279678\\r\\n338433480\\r\\n344697565\\r\\n344697565\\r\\n99391617\\r\\n464664183\\r\\n143249062\\r\\n102973792\\r\\n548817985\\r\\n15237815\\r\\n129823972\\r\\n675048688\\r\\n259647944\\r\\n380510381\\r\\n756520580\\r\\n344697565\\r\\n984824810\\r\\n829936749\\r\\n675048688\\r\\n658045869\\r\\n371547745\\r\\n112811160\\r\\n535398442\\r\\n599846428\\r\\n188023413\\r\\n619552244\\r\\n299923214\\r\\n44774351\\r\\n956167452\\r\\n259647944\\r\\n577475343\\r...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47\\r\\n', 'output': ['529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n988406960\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n52947...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\\r\\n', 'output': ['9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9']}, {'input': '5 50\\r\\n1 1 1 1 1\\r\\n1 1 4 2 3\\r\\n', 'output': ['635246412\\r\\n635246412\\r\\n544496942\\r\\n272248471\\r\\n907494883']}, {'input': '10 50\\r\\n0 0 0 0 0 0 0 0 1 0\\r\\n3 1 3 3 1 3 1 2 2 1\\r\\n', 'output': ['187134581\\r\\n727874429\\r\\n187134581\\r\\n187134581\\r\\n727874429\\r\\n187134581\\r\\n727874429\\r\\n457504505\\r\\n124563167\\r\\n727874429']}, {'input': '20 50\\r\\n1 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1\\r\\n1 2 2 1 2 2 2 2 2 2 1 1 2 2 2 1 1 1 2 2\\r\\n', 'output': ['853605709\\r\\n708967065\\r\\n708967065\\r\\n853605709\\r\\n708967065\\r\\n708967065\\r\\n708967065\\r\\n922030188\\r\\n708967065\\r\\n922030188\\r\\n853605709\\r\\n853605709\\r\\n708967065\\r\\n922030188\\r\\n708967065\\r\\n461015094\\r\\n853605709\\r\\n853605709\\r\\n708967065\\r\\n708967065']}, {'input': '20 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 2 2 2 2 1 2 1 2 1 2 1 1 2 1 2 2 1\\r\\n', 'output': ['436731907\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n873463814\\r\\n436731907']}, {'input': '40 50\\r\\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0\\r\\n33 26 4 19 42 43 19 32 13 23 19 1 18 43 43 43 19 31 4 25 28 23 33 37 36 23 5 12 18 32 34 1 21 22 34 35 37 16 41 39\\r\\n', 'output': ['729284231\\r\\n60340485\\r\\n239647233\\r\\n389641092\\r\\n20685064\\r\\n829280137\\r\\n389641092\\r\\n918933511\\r\\n529292419\\r\\n629288325\\r\\n366487398\\r\\n808595073\\r\\n579290372\\r\\n829280137\\r\\n829280137\\r\\n41331201\\r\\n389641092\\r\\n110338438\\r\\n239647233\\r\\n249989765\\r\\n679286278\\r\\n629288325\\r\\n426374038\\r\\n968931464\\r\\n160336391\\r\\n629288325\\r\\n49997953\\r\\n718941699\\r\\n579290372\\r\\n918933511\\r\\n539634951\\r\\n808595073\\r\\n89829960\\r\\n818937605\\r\\n539634951\\r\\n349985671\\r\\n968931464\\r\\n958588932\\r\\n210334344\\r\\n589632904']}, {'input': '41 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 2 4 2 3 2 4 3 1 1 3 1 3 2 5 3 3 5 4 4 1 1 2 3 2 1 5 5 5 4 2 2 2 1 2 4 4 5 2 1 4\\r\\n', 'output': ['394710173\\r\\n789420346\\r\\n580596339\\r\\n789420346\\r\\n185886166\\r\\n789420346\\r\\n580596339\\r\\n185886166\\r\\n394710173\\r\\n394710173\\r\\n185886166\\r\\n394710173\\r\\n581788048\\r\\n789420346\\r\\n636898629\\r\\n185886166\\r\\n185886166\\r\\n975306512\\r\\n580596339\\r\\n580596339\\r\\n394710173\\r\\n394710173\\r\\n55110581\\r\\n185886166\\r\\n55110581\\r\\n394710173\\r\\n975306512\\r\\n975306512\\r\\n975306512\\r\\n580596339\\r\\n789420346\\r\\n789420346\\r\\n789420346\\r\\n394710173\\r\\n789420346\\r\\n580596339\\r\\n580596339\\r\\n975306512\\r\\n789420346\\r\\n394710173\\r\\n580596339']}, {'input': '42 50\\r\\n0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0\\r\\n2 4 6 8 1 3 6 1 4 1 3 4 3 7 6 6 8 7 4 1 7 4 6 9 3 1 9 7 1 2 9 3 1 6 1 5 1 8 2 6 8 8\\r\\n', 'output': ['11284873\\r\\n329090227\\r\\n33854619\\r\\n45139492\\r\\n504764613\\r\\n995500935\\r\\n33854619\\r\\n504764613\\r\\n22569746\\r\\n504764613\\r\\n516049486\\r\\n22569746\\r\\n516049486\\r\\n538619232\\r\\n33854619\\r\\n33854619\\r\\n45139492\\r\\n538619232\\r\\n22569746\\r\\n504764613\\r\\n538619232\\r\\n22569746\\r\\n33854619\\r\\n549904105\\r\\n516049486\\r\\n504764613\\r\\n549904105\\r\\n538619232\\r\\n504764613\\r\\n11284873\\r\\n990014099\\r\\n516049486\\r\\n504764613\\r\\n33854619\\r\\n504764613\\r\\n527334359\\r\\n504764613\\r\\n45139492\\r\\n663667290\\r\\n33854619\\r\\n45139492\\r\\n45139492']}, {'input': '43 50\\r\\n1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n13 7 13 15 8 9 11 1 15 9 3 7 3 15 4 7 7 16 9 13 12 16 16 1 5 5 14 5 17 2 1 13 4 13 10 17 17 6 11 15 14 3 6\\r\\n', 'output': ['175780254\\r\\n94650906\\r\\n163530008\\r\\n802992688\\r\\n561362014\\r\\n881093354\\r\\n522311681\\r\\n319731340\\r\\n802992688\\r\\n881093354\\r\\n959194020\\r\\n241630674\\r\\n959194020\\r\\n802992688\\r\\n280681007\\r\\n241630674\\r\\n241630674\\r\\n124479675\\r\\n881093354\\r\\n163530008\\r\\n842043021\\r\\n124479675\\r\\n124479675\\r\\n13521558\\r\\n600412347\\r\\n600412347\\r\\n483261348\\r\\n67607790\\r\\n444211015\\r\\n639462680\\r\\n319731340\\r\\n163530008\\r\\n280681007\\r\\n163530008\\r\\n202580341\\r\\n444211015\\r\\n444211015\\r\\n920143687\\r\\n522311681\\r\\n802992688\\r\\n483261348\\r\\n959194020\\r\\n920143687']}, {'input': '44 50\\r\\n0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\r\\n2 6 6 11 2 4 11 10 5 15 15 20 20 7 9 8 17 4 16 19 12 16 12 13 2 11 20 2 6 10 2 18 7 5 18 10 15 6 11 9 7 5 17 11\\r\\n', 'output': ['327775237\\r\\n983325711\\r\\n983325711\\r\\n305397274\\r\\n327775237\\r\\n853173373\\r\\n305397274\\r\\n640631832\\r\\n320315916\\r\\n960947748\\r\\n960947748\\r\\n272889453\\r\\n283019311\\r\\n648091153\\r\\n975866390\\r\\n312856595\\r\\n290478632\\r\\n655550474\\r\\n625713190\\r\\n618253869\\r\\n968407069\\r\\n625713190\\r\\n968407069\\r\\n633172511\\r\\n327775237\\r\\n305397274\\r\\n283019311\\r\\n327775237\\r\\n983325711\\r\\n640631832\\r\\n327775237\\r\\n953488427\\r\\n648091153\\r\\n816905628\\r\\n953488427\\r\\n640631832\\r\\n960947748\\r\\n983325711\\r\\n305397274\\r\\n975866390\\r\\n648091153\\r\\n320315916\\r\\n290478632\\r\\n305397274']}, {'input': '45 50\\r\\n0 1 0 1 0 1 0 1 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 1 0\\r\\n4 4 23 23 13 23 9 16 4 18 20 15 21 24 22 20 22 1 15 7 10 17 20 6 15 7 4 10 16 7 14 9 13 17 10 14 22 23 3 5 20 11 4 24 24\\r\\n', 'output': ['630266647\\r\\n555616275\\r\\n379739073\\r\\n948743787\\r\\n301438985\\r\\n948743787\\r\\n669416691\\r\\n225976394\\r\\n555616275\\r\\n340589029\\r\\n156600176\\r\\n835755590\\r\\n563727926\\r\\n786866823\\r\\n560278630\\r\\n781592669\\r\\n970855676\\r\\n388465157\\r\\n835755590\\r\\n853405544\\r\\n889918511\\r\\n614441551\\r\\n156600176\\r\\n446277794\\r\\n117450132\\r\\n853405544\\r\\n630266647\\r\\n78300088\\r\\n225976394\\r\\n722767393\\r\\n708566735\\r\\n669416691\\r\\n58825276\\r\\n931705632\\r\\n78300088\\r\\n708566735\\r\\n970855676\\r\\n948743787\\r\\n223138897\\r\\n39150044\\r\\n781592669\\r\\n280139315\\r\\n555616275\\r\\n338964591\\r\\n786866823']}, {'input': '46 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n29 22 30 33 13 31 19 11 12 21 5 4 24 21 20 6 28 16 27 18 21 11 3 24 21 8 8 33 24 7 34 12 13 32 26 33 33 22 18 2 3 7 24 17 9 30\\r\\n', 'output': ['265429165\\r\\n98093399\\r\\n859759619\\r\\n646262275\\r\\n738585431\\r\\n455845720\\r\\n311590743\\r\\n548168876\\r\\n144254977\\r\\n502007298\\r\\n975163564\\r\\n380833110\\r\\n288509954\\r\\n502007298\\r\\n905921197\\r\\n571249665\\r\\n669343064\\r\\n525088087\\r\\n75012610\\r\\n715504642\\r\\n502007298\\r\\n548168876\\r\\n784747009\\r\\n288509954\\r\\n502007298\\r\\n761666220\\r\\n761666220\\r\\n646262275\\r\\n288509954\\r\\n167335766\\r\\n242348376\\r\\n144254977\\r\\n738585431\\r\\n51931821\\r\\n478926509\\r\\n646262275\\r\\n646262275\\r\\n98093399\\r\\n715504642\\r\\n190416555\\r\\n784747009\\r\\n167335766\\r\\n288509954\\r\\n121174188\\r\\n357752321\\r\\n859759619']}, {'input': '47 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n30 32 21 7 15 4 39 36 23 17 13 4 8 18 38 24 13 27 37 27 32 16 8 12 7 23 28 38 11 36 19 33 10 34 4 8 5 22 3 29 21 30 7 32 35 26 23\\r\\n', 'output': ['243227082\\r\\n658739962\\r\\n369907828\\r\\n456050727\\r\\n121613541\\r\\n831025760\\r\\n116546336\\r\\n491521369\\r\\n785420708\\r\\n537126421\\r\\n704345014\\r\\n831025760\\r\\n663807167\\r\\n744882861\\r\\n907034249\\r\\n993177148\\r\\n704345014\\r\\n618202115\\r\\n699277809\\r\\n618202115\\r\\n658739962\\r\\n329369981\\r\\n663807167\\r\\n496588574\\r\\n456050727\\r\\n785420708\\r\\n825958555\\r\\n907034249\\r\\n288832134\\r\\n491521369\\r\\n952639301\\r\\n866496402\\r\\n81075694\\r\\n76008489\\r\\n831025760\\r\\n663807167\\r\\n40537847\\r\\n577664268\\r\\n623269320\\r\\n35470642\\r\\n369907828\\r\\n243227082\\r\\n456050727\\r\\n658739962\\r\\n283764929\\r\\n410445675\\r\\n785420708...']}, {'input': '48 50\\r\\n1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 1\\r\\n9 42 15 12 2 9 41 13 23 14 17 42 25 10 10 2 38 36 41 31 9 20 31 41 20 41 40 28 7 37 14 25 23 38 27 17 6 40 2 19 19 3 8 32 13 22 41 20\\r\\n', 'output': ['386033769\\r\\n373559702\\r\\n643389615\\r\\n677156688\\r\\n85785282\\r\\n507867516\\r\\n317129978\\r\\n557604333\\r\\n299639299\\r\\n790016136\\r\\n959305308\\r\\n803246569\\r\\n74071672\\r\\n564297240\\r\\n564297240\\r\\n112859448\\r\\n631676005\\r\\n34981358\\r\\n760353928\\r\\n751077091\\r\\n386033769\\r\\n130350127\\r\\n751077091\\r\\n760353928\\r\\n130350127\\r\\n760353928\\r\\n717461287\\r\\n581787919\\r\\n395008068\\r\\n91411082\\r\\n790016136\\r\\n412498747\\r\\n299639299\\r\\n631676005\\r\\n159856954\\r\\n959305308\\r\\n338578344\\r\\n717461287\\r\\n112859448\\r\\n814960179\\r\\n73920403\\r\\n169289172\\r\\n451437792\\r\\n807506815\\r\\n733586412\\r\\n243209575\\r\\n317129978\\r...']}, {'input': '49 50\\r\\n0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0\\r\\n2 3 2 3 4 2 1 1 1 1 1 1 3 1 2 3 2 4 1 2 2 1 1 2 4 3 2 4 1 2 1 1 2 3 1 3 3 2 2 1 4 3 4 1 3 3 4 1 3\\r\\n', 'output': ['136570933\\r\\n703978576\\r\\n136570933\\r\\n703978576\\r\\n273141866\\r\\n136570933\\r\\n567407643\\r\\n478951804\\r\\n567407643\\r\\n567407643\\r\\n478951804\\r\\n478951804\\r\\n703978576\\r\\n567407643\\r\\n136570933\\r\\n703978576\\r\\n136570933\\r\\n273141866\\r\\n567407643\\r\\n136570933\\r\\n136570933\\r\\n567407643\\r\\n567407643\\r\\n136570933\\r\\n273141866\\r\\n703978576\\r\\n957903608\\r\\n273141866\\r\\n567407643\\r\\n136570933\\r\\n567407643\\r\\n567407643\\r\\n136570933\\r\\n703978576\\r\\n567407643\\r\\n438611059\\r\\n438611059\\r\\n136570933\\r\\n136570933\\r\\n478951804\\r\\n273141866\\r\\n703978576\\r\\n917562863\\r\\n478951804\\r\\n703978576\\r\\n703978576\\r\\n27314...']}, {'input': '50 50\\r\\n0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\\r\\n1 9 24 8 8 11 21 11 8 5 16 32 31 15 29 14 16 20 5 18 5 10 31 23 21 4 4 20 20 11 1 4 4 15 9 14 5 30 13 16 32 27 19 10 19 24 21 1 21 15\\r\\n', 'output': ['475420905\\r\\n285810733\\r\\n429413837\\r\\n935878068\\r\\n808634181\\r\\n787710167\\r\\n1395475\\r\\n787710167\\r\\n808634181\\r\\n85801616\\r\\n619024009\\r\\n748779213\\r\\n762627113\\r\\n143603104\\r\\n896947114\\r\\n666426552\\r\\n619024009\\r\\n343206464\\r\\n380615819\\r\\n571621466\\r\\n380615819\\r\\n171603232\\r\\n132672278\\r\\n952237285\\r\\n1395475\\r\\n467939034\\r\\n467939034\\r\\n524218923\\r\\n343206464\\r\\n238408190\\r\\n616106935\\r\\n467939034\\r\\n467939034\\r\\n143603104\\r\\n285810733\\r\\n639542266\\r\\n85801616\\r\\n514809696\\r\\n23435331\\r\\n619024009\\r\\n748779213\\r\\n662977597\\r\\n725343882\\r\\n761231638\\r\\n48798018\\r\\n429413837\\r\\n959313399\\r\\n61...']}, {'input': '47 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39\\r\\n', 'output': ['573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n57345...']}, {'input': '48 50\\r\\n1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 1\\r\\n42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42\\r\\n', 'output': ['612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n27123...']}, {'input': '49 50\\r\\n0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0\\r\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\\r\\n', 'output': ['371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n37100...']}, {'input': '50 50\\r\\n0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\\r\\n33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33\\r\\n', 'output': ['677141055\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141055\\r\\n67714...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n982795629\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n83495...']}, {'input': '50 50\\r\\n1 0 1 0 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 1 0 1 0 1 0 1 1 0 0 1 1 0 0 1 0 0 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n99630...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n70582...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\r\\n', 'output': ['382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n798399400\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n38299...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\r\\n', 'output': ['459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n533798960\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n45908...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n273616393\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n31116...']}, {'input': '50 50\\r\\n0 0 0 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 0 0\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['123180764\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n12318...']}, {'input': '50 50\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['80661140\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51']}, {'input': '5 5\\r\\n0 1 0 0 1\\r\\n2 4 1 2 1\\r\\n', 'output': ['665717847\\r\\n333191345\\r\\n831981100\\r\\n665717847\\r\\n831981101']}, {'input': '20 20\\r\\n0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 0\\r\\n109 1 24 122 136 42 25 112 110 15 26 48 35 10 86 13 41 6 24 15\\r\\n', 'output': ['217595927\\r\\n149660176\\r\\n322657182\\r\\n290143118\\r\\n388896876\\r\\n296261274\\r\\n86540143\\r\\n507489163\\r\\n979723241\\r\\n248413934\\r\\n896431517\\r\\n195977977\\r\\n246884395\\r\\n633562669\\r\\n891842900\\r\\n947337935\\r\\n146601098\\r\\n897961056\\r\\n597111165\\r\\n451221827']}, {'input': '100 100\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n2360379 9167688 488710 6896065 5243867 11762954 673012 1669264 265550 10921726 9383074 9523863 13429215 3223202 5372988 8197773 13052301 6045370 18630475 23534272 14923100 17181531 1112172 24623774 16991041 2363652 10720874 7171147 1261895 13127315 454592 1510882 12229327 15445105 15722482 5467131 92...', 'output': ['19790585\\r\\n929149870\\r\\n158142558\\r\\n415179791\\r\\n770973301\\r\\n197788614\\r\\n662208363\\r\\n968610058\\r\\n711622366\\r\\n89060603\\r\\n49510939\\r\\n593110743\\r\\n227455934\\r\\n197704062\\r\\n89005665\\r\\n237287745\\r\\n266986632\\r\\n365753331\\r\\n365877936\\r\\n464762563\\r\\n879788817\\r\\n148424226\\r\\n355820880\\r\\n830466826\\r\\n583301068\\r\\n553505420\\r\\n59407792\\r\\n988431747\\r\\n889537165\\r\\n425125094\\r\\n978481639\\r\\n494195332\\r\\n98957157\\r\\n850143163\\r\\n474568826\\r\\n889578801\\r\\n691943729\\r\\n751249179\\r\\n29723781\\r\\n385464681\\r\\n494219413\\r\\n968727719\\r\\n622687463\\r\\n929103141\\r\\n89090024\\r\\n563393484\\r\\n29714966\\r\\n484...']}, {'input': '1000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['652684471\\r\\n652684471\\r\\n959809060\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n652684471\\r\\n614249178\\r\\n307124589\\r\\n307124589\\r\\n307124589\\r\\n959809060\\r\\n652684471\\r\\n652684471\\r\\n959809060\\r\\n307124589\\r\\n307124589\\r\\n614249178\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n307124589\\r\\n307124589\\r\\n652684471\\r\\n268689296\\r\\n307124589\\r\\n959809060\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n614249178\\r\\n959809060\\r\\n652684471\\r\\n652684471\\r\\n307124589\\r\\n614249178\\r\\n307124589\\r\\n652684471\\r\\n652684471\\r\\n959809060\\r\\n307124589\\r\\n959809060\\r\\n307124589\\r\\n307124589\\r\\n959809060\\r\\n307124589\\r\\n95980...']}, {'input': '50000 1000\\r\\n1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 1 0 0 0 1 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 0 0 1 1 1 0 0 1 0 0 0 0 1 0 1 0 0 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 1 1 1 1 0 1 0 1 1 0 0 1 0 1 0 0 1 0 0 1 0 1 1 0 1 0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0...', 'output': ['512182090\\r\\n641172382\\r\\n697325018\\r\\n818311552\\r\\n590906119\\r\\n461103680\\r\\n370418391\\r\\n653972733\\r\\n766040380\\r\\n237657896\\r\\n893425807\\r\\n807372188\\r\\n964959592\\r\\n319396135\\r\\n111079234\\r\\n137994713\\r\\n9663504\\r\\n92358638\\r\\n965938119\\r\\n98687680\\r\\n675026792\\r\\n279244742\\r\\n15543727\\r\\n479206408\\r\\n519670811\\r\\n684652624\\r\\n777078382\\r\\n554151828\\r\\n865485075\\r\\n937290032\\r\\n565154228\\r\\n221807985\\r\\n218937300\\r\\n112386612\\r\\n310142313\\r\\n986922988\\r\\n267227503\\r\\n40988675\\r\\n369434552\\r\\n763776107\\r\\n694666611\\r\\n182771968\\r\\n494768207\\r\\n633944759\\r\\n635638470\\r\\n761724538\\r\\n162219074\\r\\n...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['967977965\\r\\n983111159\\r\\n952844771\\r\\n937711577\\r\\n937711577\\r\\n771246443\\r\\n483715757\\r\\n892311995\\r\\n967977965\\r\\n801512831\\r\\n846912413\\r\\n831779219\\r\\n967977965\\r\\n786379637\\r\\n892311995\\r\\n604781309\\r\\n710713667\\r\\n952844771\\r\\n952844771\\r\\n937711577\\r\\n874943312\\r\\n120519101\\r\\n892311995\\r\\n589648115\\r\\n619914503\\r\\n665314085\\r\\n374637533\\r\\n892311995\\r\\n937711577\\r\\n892311995\\r\\n650180891\\r\\n771246443\\r\\n922578383\\r\\n877178801\\r\\n483715757\\r\\n892311995\\r\\n952844771\\r\\n619914503\\r\\n574514921\\r\\n62834123\\r\\n907445189\\r\\n816646025\\r\\n846912413\\r\\n816646025\\r\\n937711577\\r\\n756113249\\r\\n846912...']}, {'input': '200000 3000\\r\\n0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 0 1 0 0 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 1 1 0 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 ...', 'output': ['568390992\\r\\n182388528\\r\\n352385861\\r\\n315979953\\r\\n743372559\\r\\n632628120\\r\\n995395434\\r\\n506334569\\r\\n667771666\\r\\n453192833\\r\\n680429762\\r\\n407446046\\r\\n471154985\\r\\n147648615\\r\\n936047905\\r\\n830053040\\r\\n251214636\\r\\n602162072\\r\\n263562703\\r\\n990790012\\r\\n150217484\\r\\n82075059\\r\\n932318671\\r\\n687474214\\r\\n345881774\\r\\n771937952\\r\\n356541287\\r\\n15233024\\r\\n811478946\\r\\n737405100\\r\\n892805310\\r\\n176354033\\r\\n997083988\\r\\n281716722\\r\\n628262667\\r\\n556117647\\r\\n359954433\\r\\n926451677\\r\\n992018326\\r\\n134736321\\r\\n139309832\\r\\n510415929\\r\\n125029199\\r\\n222157092\\r\\n859462710\\r\\n16077301\\r\\n83159806...']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 3 2 1 3 2 1 1 2 1 1 2 2 4 2 1 5 2 3\\r\\n', 'output': ['249561090\\r\\n249561090\\r\\n748683270\\r\\n499122180\\r\\n249561090\\r\\n748683270\\r\\n499122180\\r\\n249561090\\r\\n249561090\\r\\n499122180\\r\\n249561090\\r\\n249561090\\r\\n499122180\\r\\n499122180\\r\\n7\\r\\n499122180\\r\\n249561090\\r\\n249561097\\r\\n499122180\\r\\n748683270']}, {'input': '20 30\\r\\n1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 1 3 1 4 1 5 1 1 2 3 1 1 3 3 2 2 1 2\\r\\n', 'output': ['902255482\\r\\n806266611\\r\\n902255482\\r\\n710277740\\r\\n902255482\\r\\n537377994\\r\\n902255482\\r\\n518299998\\r\\n902255482\\r\\n902255482\\r\\n806266611\\r\\n710277740\\r\\n902255482\\r\\n902255482\\r\\n710277740\\r\\n710277740\\r\\n806266611\\r\\n806266611\\r\\n902255482\\r\\n806266611']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\r\\n3 4 1 2 1 1 1 2 5 2 1 2 3 1 1 2 3 2 1 2\\r\\n', 'output': ['441078046\\r\\n920852179\\r\\n479774133\\r\\n959548266\\r\\n479774133\\r\\n479774133\\r\\n479774133\\r\\n959548266\\r\\n402381959\\r\\n263018694\\r\\n479774133\\r\\n959548266\\r\\n441078046\\r\\n479774133\\r\\n479774133\\r\\n959548266\\r\\n441078046\\r\\n959548266\\r\\n479774133\\r\\n959548266']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0\\r\\n1 1 3 2 3 1 2 2 3 2 2 2 2 2 2 3 3 1 1 2\\r\\n', 'output': ['550803098\\r\\n550803098\\r\\n654164941\\r\\n103361843\\r\\n654164941\\r\\n550803098\\r\\n103361843\\r\\n103361843\\r\\n654164941\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n276551708\\r\\n654164941\\r\\n654164941\\r\\n138275854\\r\\n550803098\\r\\n103361843']}, {'input': '20 30\\r\\n0 0 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1\\r\\n1 2 2 2 2 2 1 1 2 1 4 1 2 5 3 4 1 1 2 1\\r\\n', 'output': ['297511613\\r\\n595023226\\r\\n756311680\\r\\n756311680\\r\\n756311680\\r\\n595023226\\r\\n297511613\\r\\n378155840\\r\\n595023226\\r\\n297511613\\r\\n514379007\\r\\n297511613\\r\\n595023226\\r\\n892534847\\r\\n136223167\\r\\n514379007\\r\\n378155840\\r\\n297511613\\r\\n595023226\\r\\n378155840']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n765 451 7275 385 1686 78 554 114 1980 394 776 232 627 760 782 7 486 32 1100 1516\\r\\n', 'output': ['491636110\\r\\n498623506\\r\\n486651408\\r\\n182179980\\r\\n6989399\\r\\n10980766\\r\\n871467875\\r\\n92836839\\r\\n509106603\\r\\n951327263\\r\\n211628580\\r\\n83852758\\r\\n11480438\\r\\n618912260\\r\\n58897200\\r\\n820057743\\r\\n605934809\\r\\n183676993\\r\\n948333237\\r\\n341401087']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1\\r\\n779 1317 1275 234 857 1531 785 265 679 767 1994 11 918 1146 1807 71 813 245 3926 580\\r\\n', 'output': ['552990868\\r\\n90431251\\r\\n712871250\\r\\n952916426\\r\\n537881559\\r\\n151361542\\r\\n321464532\\r\\n89445141\\r\\n86037605\\r\\n17799187\\r\\n586392419\\r\\n241031286\\r\\n40642277\\r\\n699465709\\r\\n481837969\\r\\n920500985\\r\\n572000768\\r\\n195703359\\r\\n903238702\\r\\n911489090']}, {'input': '20 30\\r\\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n128 574 205 490 611 1294 283 1690 1466 1896 272 19 1020 5032 357 1500 36 1749 1202 176\\r\\n', 'output': ['389864218\\r\\n157345415\\r\\n537589523\\r\\n962131647\\r\\n753565149\\r\\n104281847\\r\\n378440811\\r\\n873692367\\r\\n690552162\\r\\n658861420\\r\\n578900375\\r\\n198248582\\r\\n923070965\\r\\n228091231\\r\\n572635926\\r\\n887695253\\r\\n795942304\\r\\n70748620\\r\\n510359933\\r\\n785624388']}, {'input': '20 30\\r\\n1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0\\r\\n61 849 320 1007 624 441 1332 3939 1176 718 419 634 657 914 858 882 1019 1567 62 2521\\r\\n', 'output': ['514012356\\r\\n393871659\\r\\n166092575\\r\\n569465276\\r\\n74319433\\r\\n306884170\\r\\n254628439\\r\\n656312237\\r\\n485609669\\r\\n216694535\\r\\n825782618\\r\\n110704962\\r\\n294216114\\r\\n131255421\\r\\n733108087\\r\\n613768340\\r\\n14181299\\r\\n610566194\\r\\n624888021\\r\\n887363731']}, {'input': '20 30\\r\\n0 1 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 0 0\\r\\n244 1901 938 1350 1010 763 318 2158 1645 534 1356 563 295 1449 2306 224 1302 195 639 810\\r\\n', 'output': ['300071414\\r\\n595185476\\r\\n40756239\\r\\n113904636\\r\\n440148868\\r\\n947268885\\r\\n456535325\\r\\n542868956\\r\\n183161324\\r\\n427608407\\r\\n61171180\\r\\n375813928\\r\\n43680359\\r\\n55509680\\r\\n30410255\\r\\n360521133\\r\\n535772284\\r\\n722568686\\r\\n663107799\\r\\n390646234']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n126679203 179924771 16639504 67055540 14134870 36407782 15024189 39367944 121531542 5400023 5834434 8539193 3686913 11287136 36370086 71808281 138206490 59846864 19052959 21446598\\r\\n', 'output': ['615913610\\r\\n488825486\\r\\n773371096\\r\\n742795989\\r\\n193664548\\r\\n323188752\\r\\n32686082\\r\\n709701410\\r\\n293733249\\r\\n161181348\\r\\n193396792\\r\\n354491196\\r\\n708550409\\r\\n644392716\\r\\n323187536\\r\\n646345011\\r\\n487479735\\r\\n1930544\\r\\n322628919\\r\\n966734748']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\\r\\n144831196 28660251 62050800 52660762 23189000 12771861 73096012 25119113 119648684 16011144 51600638 74708999 6312006 26945863 68746869 58112898 5070 19157938 74351320 60263898\\r\\n', 'output': ['132556548\\r\\n711988928\\r\\n6999755\\r\\n208709864\\r\\n320161276\\r\\n865416376\\r\\n320896979\\r\\n458941660\\r\\n671806481\\r\\n158009043\\r\\n351362956\\r\\n78248147\\r\\n927871852\\r\\n882014191\\r\\n988190329\\r\\n830735503\\r\\n1958329\\r\\n787106839\\r\\n942059547\\r\\n341315444']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0\\r\\n34095514 37349809 60555988 40280455 19504485 77297461 41415742 66290058 20631093 185280391 7151718 64927972 15611855 4317891 24600598 24588269 60808977 9108470 13217752 191209824\\r\\n', 'output': ['313283482\\r\\n21804622\\r\\n682197550\\r\\n361027027\\r\\n756362680\\r\\n151917509\\r\\n716108102\\r\\n131732975\\r\\n237068086\\r\\n731869119\\r\\n190595295\\r\\n847684643\\r\\n847454143\\r\\n501579235\\r\\n129856516\\r\\n246699402\\r\\n205385635\\r\\n639100445\\r\\n614421017\\r\\n227076269']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0\\r\\n9380933 34450681 12329733 7732927 73910078 16165679 149467043 56914401 21809098 36934833 71019254 168559440 12033996 40465391 7156881 3312348 37150678 130625432 42709585 66115911\\r\\n', 'output': ['813231583\\r\\n458087744\\r\\n445793615\\r\\n651101155\\r\\n484645642\\r\\n506668954\\r\\n896602699\\r\\n556862659\\r\\n145127201\\r\\n302005399\\r\\n558418033\\r\\n213871822\\r\\n57299634\\r\\n564466143\\r\\n767349204\\r\\n290138481\\r\\n12657688\\r\\n925337836\\r\\n827843024\\r\\n119362169']}, {'input': '20 30\\r\\n0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 0 1 0 1\\r\\n66166717 200301718 6725634 95379617 42880832 48874211 64912554 36809296 13248978 58406666 53142218 45080678 19902257 58554006 23570140 14484661 7589423 78746789 11072716 52395211\\r\\n', 'output': ['823107880\\r\\n742699237\\r\\n987770596\\r\\n549924308\\r\\n730188349\\r\\n913535291\\r\\n936423447\\r\\n122869154\\r\\n581668441\\r\\n749452306\\r\\n615454312\\r\\n176148736\\r\\n874336841\\r\\n897418997\\r\\n235568492\\r\\n24727530\\r\\n143875067\\r\\n15270097\\r\\n200154604\\r\\n356406452']}, {'input': '20 30\\r\\n0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661\\r\\n', 'output': ['76898501\\r\\n989279651\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803\\r\\n', 'output': ['504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981']}, {'input': '2000 300\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1...', 'output': ['527557309\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n819771096\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n762900831\\r\\n762900831\\r\\n292213787\\r\\n762900831\\r\\n527557309\\r\\n292213787\\r\\n762900831\\r\\n292213787\\r\\n527557309\\r\\n762900831\\r\\n292213787\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n819771096\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n292213787\\r\\n762900831\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n762900831\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n76290...', '126026410\\r\\n26532090\\r\\n89545496\\r\\n348227668\\r\\n407921745\\r\\n822476105\\r\\n815841057\\r\\n129343473\\r\\n683184486\\r\\n182403525\\r\\n971714643\\r\\n669922973\\r\\n195669656\\r\\n643389211\\r\\n596958847\\r\\n991612114\\r\\n26531426\\r\\n494147799\\r\\n587007825\\r\\n646703323\\r\\n192353616\\r\\n198987665\\r\\n116075186\\r\\n208935334\\r\\n451035127\\r\\n991612774\\r\\n630129722\\r\\n673238446\\r\\n965081504\\r\\n404604334\\r\\n762781111\\r\\n945182265\\r\\n613540647\\r\\n855640163\\r\\n540577710\\r\\n739563385\\r\\n185720640\\r\\n13265829\\r\\n460984258\\r\\n182404969\\r\\n988297561\\r\\n726301539\\r\\n301795019\\r\\n46434122\\r\\n882170987\\r\\n533948601\\r\\n729615799\\r...', '257947573\\r\\n350833899\\r\\n998147431\\r\\n282054341\\r\\n689337877\\r\\n802790225\\r\\n636332064\\r\\n611526839\\r\\n405886622\\r\\n295781176\\r\\n577883978\\r\\n211877869\\r\\n476761551\\r\\n471920813\\r\\n313000296\\r\\n8886097\\r\\n165109708\\r\\n231143899\\r\\n91489412\\r\\n972042214\\r\\n584771626\\r\\n771892731\\r\\n841370746\\r\\n736106038\\r\\n702414716\\r\\n368751476\\r\\n510452873\\r\\n253155296\\r\\n619859862\\r\\n14376831\\r\\n37833603\\r\\n94933236\\r\\n485696109\\r\\n96233228\\r\\n33691322\\r\\n403791251\\r\\n233190809\\r\\n447164049\\r\\n173248887\\r\\n549683390\\r\\n863382143\\r\\n717538465\\r\\n704413165\\r\\n210480955\\r\\n414122723\\r\\n922528686\\r\\n131321464\\r\\n40...', '723727157\\r\\n723727157\\r\\n898419922\\r\\n449209961\\r\\n898419922\\r\\n174692765\\r\\n723727157\\r\\n723727157\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n174692765\\r\\n723727157\\r\\n174692765\\r\\n723727157\\r\\n723727157\\r\\n623902726\\r\\n723727157\\r\\n723727157\\r\\n449209961\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n174692765\\r\\n723727157\\r\\n449209961\\r\\n349385530\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n623902726\\r\\n449209961\\r\\n449209961\\r\\n898419922\\r\\n898419922\\r\\n723727157\\r\\n449209961\\r\\n723727157\\r\\n723727157\\r\\n723727157\\r\\n174692765\\r\\n17469...', '449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n44954...', '228892698\\r\\n323233274\\r\\n31331450\\r\\n583630535\\r\\n530020844\\r\\n200867506\\r\\n762566026\\r\\n461091654\\r\\n900597519\\r\\n687197433\\r\\n232025843\\r\\n294169404\\r\\n557699810\\r\\n988325579\\r\\n966739790\\r\\n633933968\\r\\n156657250\\r\\n762046687\\r\\n338898999\\r\\n134379009\\r\\n458304735\\r\\n975792999\\r\\n343970609\\r\\n589896825\\r\\n188161813\\r\\n733675269\\r\\n708610109\\r\\n303222613\\r\\n919742615\\r\\n718701996\\r\\n235158988\\r\\n5746951\\r\\n831841442\\r\\n194601216\\r\\n389029319\\r\\n946729129\\r\\n65449819\\r\\n768486090\\r\\n213226973\\r\\n847160941\\r\\n853773457\\r\\n913476325\\r\\n847334054\\r\\n435334042\\r\\n997551901\\r\\n781018670\\r\\n847334054...', '280562572\\r\\n27981324\\r\\n930424996\\r\\n580126064\\r\\n653672085\\r\\n638998124\\r\\n192370181\\r\\n304975360\\r\\n268606553\\r\\n887998181\\r\\n902057157\\r\\n419880164\\r\\n965999027\\r\\n37849969\\r\\n655704617\\r\\n915939588\\r\\n290316653\\r\\n133632797\\r\\n916310849\\r\\n291352554\\r\\n315435621\\r\\n753760137\\r\\n617080324\\r\\n863678858\\r\\n719694519\\r\\n658038314\\r\\n750307459\\r\\n915589744\\r\\n530437886\\r\\n512060713\\r\\n157922588\\r\\n178644172\\r\\n5715303\\r\\n194942404\\r\\n852097346\\r\\n696406228\\r\\n891303846\\r\\n489183600\\r\\n892182349\\r\\n437838373\\r\\n390449491\\r\\n931412865\\r\\n520118475\\r\\n724052962\\r\\n624309238\\r\\n315358057\\r\\n157108994...']}, {'input': '2000 300\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...', 'output': ['510770111\\r\\n586552453\\r\\n521518610\\r\\n729496815\\r\\n925336870\\r\\n218501419\\r\\n210003823\\r\\n721775463\\r\\n410294316\\r\\n59753754\\r\\n445916833\\r\\n149785626\\r\\n397166471\\r\\n850878761\\r\\n322612228\\r\\n400512598\\r\\n962933991\\r\\n238352988\\r\\n481795882\\r\\n312429269\\r\\n230724223\\r\\n668360989\\r\\n538774766\\r\\n7521020\\r\\n782227455\\r\\n932947153\\r\\n766620629\\r\\n621895347\\r\\n948462500\\r\\n49828435\\r\\n465611859\\r\\n508795684\\r\\n965408363\\r\\n876217222\\r\\n27461852\\r\\n849541586\\r\\n889517699\\r\\n887546242\\r\\n347913548\\r\\n274305965\\r\\n434804057\\r\\n916014055\\r\\n822187302\\r\\n339400794\\r\\n604867800\\r\\n368133826\\r\\n799958426\\r...', '738045334\\r\\n159282105\\r\\n578763229\\r\\n578763229\\r\\n477846315\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n578763229\\r\\n738045334\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n578763229\\r\\n578763229\\r\\n578763229\\r\\n159282105\\r\\n578763229\\r\\n318564210\\r\\n578763229\\r\\n578763229\\r\\n159282105\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n159282105\\r\\n578763229\\r\\n159282105\\r\\n738045334\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n578763229\\r\\n738045334\\r\\n159282105\\r\\n738045334\\r\\n318564210\\r\\n73804...', '536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n53653...', '544865927\\r\\n362689553\\r\\n554047941\\r\\n662901553\\r\\n528631083\\r\\n623245685\\r\\n408599623\\r\\n383515404\\r\\n454842332\\r\\n96411147\\r\\n49835799\\r\\n979215047\\r\\n123957189\\r\\n241194187\\r\\n232012173\\r\\n930510515\\r\\n682596137\\r\\n940690446\\r\\n985602599\\r\\n592905181\\r\\n837226469\\r\\n463026429\\r\\n366947921\\r\\n259890854\\r\\n259558215\\r\\n423037922\\r\\n336940056\\r\\n739152127\\r\\n906091574\\r\\n273663875\\r\\n103463977\\r\\n218239152\\r\\n323832313\\r\\n988397061\\r\\n861312771\\r\\n369742383\\r\\n261687399\\r\\n997579075\\r\\n494364850\\r\\n668490477\\r\\n306599552\\r\\n268740229\\r\\n776878100\\r\\n482521724\\r\\n140192033\\r\\n252172746\\r\\n5279658...', '156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n52020618\\r\\n104041236\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n156061854\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n208082472\\r\\n208082472\\r\\n104041236\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n156061854\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n156061854\\r\\n52020618\\r...', '696015721\\r\\n931773777\\r\\n559486112\\r\\n847360916\\r\\n520999237\\r\\n330674091\\r\\n901387332\\r\\n817005789\\r\\n311776972\\r\\n19589756\\r\\n894472615\\r\\n644360731\\r\\n540588993\\r\\n761762342\\r\\n387103251\\r\\n712279217\\r\\n24626123\\r\\n870308250\\r\\n487286532\\r\\n403104550\\r\\n728773592\\r\\n564260282\\r\\n775161336\\r\\n604919022\\r\\n382066884\\r\\n133895986\\r\\n14584707\\r\\n323728056\\r\\n371794589\\r\\n189832070\\r\\n664212684\\r\\n375120849\\r\\n841631912\\r\\n277833388\\r\\n899970740\\r\\n674023221\\r\\n550168651\\r\\n205864687\\r\\n292155898\\r\\n484652909\\r\\n899246785\\r\\n641496229\\r\\n604195067\\r\\n520275282\\r\\n140579824\\r\\n200828320\\r\\n88943624...', '381761597\\r\\n749914123\\r\\n734966985\\r\\n451112838\\r\\n254375974\\r\\n408043495\\r\\n50147455\\r\\n317426730\\r\\n691474180\\r\\n297424671\\r\\n16576556\\r\\n950550287\\r\\n615062290\\r\\n508772409\\r\\n574097914\\r\\n755479957\\r\\n504073337\\r\\n232598914\\r\\n376960541\\r\\n704800943\\r\\n722703963\\r\\n943084953\\r\\n852281936\\r\\n604167024\\r\\n430991955\\r\\n691776511\\r\\n979477939\\r\\n916779041\\r\\n928976757\\r\\n9004809\\r\\n66623088\\r\\n160364271\\r\\n569831785\\r\\n753768578\\r\\n10158931\\r\\n829943628\\r\\n860984852\\r\\n599688760\\r\\n746963293\\r\\n90503616\\r\\n665117495\\r\\n843614199\\r\\n773004798\\r\\n52464119\\r\\n40225734\\r\\n193061049\\r\\n476979003\\r\\n451...']}, {'input': '2000 300\\r\\n1 1 1 0 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 1 0...', 'output': ['520991218\\r\\n260495609\\r\\n781486827\\r\\n281527765\\r\\n460706912\\r\\n260495609\\r\\n43738083\\r\\n819065206\\r\\n639886059\\r\\n260495609\\r\\n639886059\\r\\n520991218\\r\\n520991218\\r\\n639886059\\r\\n819065206\\r\\n520991218\\r\\n639886059\\r\\n819065206\\r\\n639886059\\r\\n43738083\\r\\n781486827\\r\\n260495609\\r\\n520991218\\r\\n781486827\\r\\n819065206\\r\\n639886059\\r\\n281527765\\r\\n819065206\\r\\n460706912\\r\\n260495609\\r\\n639886059\\r\\n260495609\\r\\n304233692\\r\\n781486827\\r\\n260495609\\r\\n260495609\\r\\n43738083\\r\\n260495609\\r\\n639886059\\r\\n260495609\\r\\n819065206\\r\\n520991218\\r\\n520991218\\r\\n639886059\\r\\n639886059\\r\\n460706912\\r\\n26049560...']}, {'input': '2000 300\\r\\n1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 1 1 0 1 0 1 0 0 0 1 1 0 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 1 0 0 1 0 1 0 1 0 1 0 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 1 1 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1...', 'output': ['967309723\\r\\n488979754\\r\\n894231131\\r\\n227079250\\r\\n800673042\\r\\n803173636\\r\\n302660701\\r\\n49359452\\r\\n361182334\\r\\n613837368\\r\\n903714465\\r\\n783149148\\r\\n772569418\\r\\n153771444\\r\\n347053203\\r\\n383800081\\r\\n305903959\\r\\n591371347\\r\\n504143617\\r\\n554819601\\r\\n711091639\\r\\n993123371\\r\\n662636534\\r\\n799549517\\r\\n755795853\\r\\n257472564\\r\\n749178682\\r\\n44165553\\r\\n754769201\\r\\n677121173\\r\\n77251408\\r\\n825363165\\r\\n94378162\\r\\n905743915\\r\\n555723948\\r\\n401067893\\r\\n365827394\\r\\n778249947\\r\\n641361749\\r\\n657808321\\r\\n76885722\\r\\n205390090\\r\\n357248290\\r\\n762413024\\r\\n471855369\\r\\n953559875\\r\\n452364595\\r...']}, {'input': '2000 300\\r\\n1 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 0 1 0 0 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 1 0 1 0 1 0 0 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 0 0 1 0 0 0 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 0 0 1 1 0 1...', 'output': ['353668818\\r\\n180952778\\r\\n350267066\\r\\n85276305\\r\\n498935339\\r\\n570367769\\r\\n947922902\\r\\n520199571\\r\\n977020824\\r\\n311854081\\r\\n369942273\\r\\n709342799\\r\\n241020253\\r\\n306637091\\r\\n574362410\\r\\n924893301\\r\\n259050261\\r\\n881412462\\r\\n505397126\\r\\n426307000\\r\\n368001455\\r\\n187561592\\r\\n507502858\\r\\n422600821\\r\\n840032307\\r\\n570586935\\r\\n847077944\\r\\n633577890\\r\\n21924242\\r\\n429617104\\r\\n40169532\\r\\n200231692\\r\\n301247265\\r\\n526536756\\r\\n236599712\\r\\n449404280\\r\\n482154139\\r\\n74891321\\r\\n744845075\\r\\n202529472\\r\\n497487224\\r\\n750227627\\r\\n791509388\\r\\n365064757\\r\\n435991351\\r\\n911452637\\r\\n230155510...']}, {'input': '200000 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n83030...', '746090912\\r\\n987874942\\r\\n493937471\\r\\n493937471\\r\\n241784030\\r\\n493937471\\r\\n746090912\\r\\n241784030\\r\\n746090912\\r\\n987874942\\r\\n493937471\\r\\n241784030\\r\\n493937471\\r\\n493937471\\r\\n987874942\\r\\n493937471\\r\\n987874942\\r\\n746090912\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n493937471\\r\\n493937471\\r\\n483568060\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n241784030\\r\\n746090912\\r\\n746090912\\r\\n987874942\\r\\n493937471\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n746090912\\r\\n241784030\\r\\n493937471\\r\\n746090912\\r\\n241784030\\r\\n493937471\\r\\n49393...', '249477932\\r\\n163324885\\r\\n619370540\\r\\n591761649\\r\\n381202278\\r\\n400495236\\r\\n181619933\\r\\n483987183\\r\\n768059384\\r\\n853879792\\r\\n648642618\\r\\n525566838\\r\\n955999425\\r\\n754753895\\r\\n409143808\\r\\n470016419\\r\\n322658124\\r\\n100123809\\r\\n150684670\\r\\n101454359\\r\\n634006577\\r\\n229187060\\r\\n466357410\\r\\n35592186\\r\\n769389935\\r\\n547853534\\r\\n85820409\\r\\n289061762\\r\\n201245531\\r\\n244821008\\r\\n910095485\\r\\n40581744\\r\\n910760760\\r\\n733797749\\r\\n450390828\\r\\n440079067\\r\\n811634863\\r\\n573799237\\r\\n619703176\\r\\n460037301\\r\\n90144696\\r\\n512261348\\r\\n656958547\\r\\n636002401\\r\\n271099351\\r\\n573799237\\r\\n748766427...', '337242164\\r\\n175981139\\r\\n705993748\\r\\n951319188\\r\\n208728534\\r\\n926966446\\r\\n894219051\\r\\n142402527\\r\\n394342301\\r\\n747271382\\r\\n832167014\\r\\n925728471\\r\\n915824671\\r\\n371227534\\r\\n265828671\\r\\n404110515\\r\\n737503168\\r\\n526705442\\r\\n275596885\\r\\n225789012\\r\\n140757794\\r\\n548311062\\r\\n834642964\\r\\n960680644\\r\\n982693022\\r\\n298440480\\r\\n97139796\\r\\n357880981\\r\\n649164783\\r\\n74025029\\r\\n270644985\\r\\n37970467\\r\\n945129313\\r\\n422137796\\r\\n739979118\\r\\n389390401\\r\\n815106536\\r\\n311922619\\r\\n858860120\\r\\n411267193\\r\\n976503147\\r\\n835880939\\r\\n13346553\\r\\n661137775\\r\\n978979097\\r\\n527943417\\r\\n707231723...', '895547075\\r\\n50488475\\r\\n972784199\\r\\n737802803\\r\\n134349212\\r\\n579628449\\r\\n120501272\\r\\n588315405\\r\\n599840552\\r\\n714837825\\r\\n262849659\\r\\n448375127\\r\\n596572279\\r\\n172710075\\r\\n108458976\\r\\n317466571\\r\\n845058600\\r\\n348860806\\r\\n506174996\\r\\n501269960\\r\\n76979425\\r\\n561049607\\r\\n754144168\\r\\n500496863\\r\\n56852638\\r\\n736253107\\r\\n323142953\\r\\n631062404\\r\\n987492303\\r\\n864152840\\r\\n155163780\\r\\n16686131\\r\\n341291713\\r\\n213479047\\r\\n623578627\\r\\n815212310\\r\\n74571316\\r\\n580316230\\r\\n11782846\\r\\n9977202\\r\\n56164857\\r\\n453363728\\r\\n283577160\\r\\n112674480\\r\\n770828548\\r\\n441236116\\r\\n475210843\\r\\n997...', '743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n74369...', '743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n74369...', '34499784\\r\\n374247743\\r\\n362747815\\r\\n297560637\\r\\n574121750\\r\\n869682055\\r\\n449997441\\r\\n458622387\\r\\n930182193\\r\\n940681955\\r\\n376622642\\r\\n28249737\\r\\n622933686\\r\\n969931858\\r\\n400622664\\r\\n671871138\\r\\n811807848\\r\\n331623096\\r\\n223311188\\r\\n305748258\\r\\n203623639\\r\\n439935004\\r\\n185436339\\r\\n481622243\\r\\n517559518\\r\\n585621678\\r\\n66124586\\r\\n679996001\\r\\n894244918\\r\\n45999712\\r\\n243436062\\r\\n887057463\\r\\n525184298\\r\\n990056732\\r\\n154311620\\r\\n198873841\\r\\n227623661\\r\\n430809975\\r\\n12937419\\r\\n194561368\\r\\n140374035\\r\\n610059025\\r\\n715495951\\r\\n677058261\\r\\n731308352\\r\\n710120554\\r\\n143749100\\r...', '743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n74369...', '563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n56365...', '948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n94886...', '616415891\\r\\n743692045\\r\\n743692045\\r\\n616415891\\r\\n489139737\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n870968199\\r\\n616415891\\r\\n743692045\\r\\n616415891\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n489139737\\r\\n870968199\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n616415891\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n361863583\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n870968199\\r\\n616415891\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n107311275\\r\\n743692045\\r\\n870968199\\r\\n870968199\\r\\n87096...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['534464893\\r\\n70685433\\r\\n141370866\\r\\n605150326\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n605150326\\r\\n605150326\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n141370866\\r\\n70685433\\r\\n534464893\\r\\n141370866\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n605150326\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n...', '434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n43434...', '479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n47934...', '983882738\\r\\n723119688\\r\\n459823065\\r\\n556901314\\r\\n70724963\\r\\n266615302\\r\\n669551615\\r\\n128160584\\r\\n374823721\\r\\n636048406\\r\\n410086236\\r\\n880577836\\r\\n119251355\\r\\n80183061\\r\\n594759171\\r\\n13376576\\r\\n422252375\\r\\n548479185\\r\\n235532967\\r\\n555429175\\r\\n697576973\\r\\n194705367\\r\\n244991065\\r\\n696417466\\r\\n575930209\\r\\n911572937\\r\\n690252582\\r\\n173917166\\r\\n286156762\\r\\n203240195\\r\\n371392343\\r\\n232850391\\r\\n10955702\\r\\n65159878\\r\\n81942367\\r\\n928468125\\r\\n286592932\\r\\n499727395\\r\\n803102816\\r\\n81855133\\r\\n235158566\\r\\n824901521\\r\\n295851097\\r\\n716980269\\r\\n913157775\\r\\n996485047\\r\\n807919099\\r\\n4...', '535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n53563...', '483259721\\r\\n483259721\\r\\n451534810\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n709027126\\r\\n483259721\\r\\n966519442\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n740752037\\r\\n225767405\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n451534810\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n966519442\\r\\n225767405\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n225767405\\r\\n740752037\\r\\n483259721\\r\\n225767405\\r\\n740752037\\r\\n74075...', '365182673\\r\\n453133330\\r\\n646237559\\r\\n383557795\\r\\n419033749\\r\\n340436101\\r\\n116418016\\r\\n678527788\\r\\n945667567\\r\\n79030627\\r\\n870994872\\r\\n815130278\\r\\n370916978\\r\\n677151415\\r\\n467150520\\r\\n882361399\\r\\n890542201\\r\\n249936864\\r\\n39196741\\r\\n947579002\\r\\n636680384\\r\\n295607138\\r\\n675342063\\r\\n808325849\\r\\n29104504\\r\\n25918779\\r\\n103037971\\r\\n291784268\\r\\n445589673\\r\\n215200138\\r\\n658241231\\r\\n704446567\\r\\n478414964\\r\\n374535682\\r\\n193639291\\r\\n871632017\\r\\n186732779\\r\\n291784268\\r\\n138616008\\r\\n491795009\\r\\n475331322\\r\\n689894315\\r\\n243667497\\r\\n853256895\\r\\n714003742\\r\\n774124185\\r\\n363271238...', '985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n98542...', '155925765\\r\\n487818429\\r\\n547205425\\r\\n780737503\\r\\n891037610\\r\\n578930143\\r\\n825301017\\r\\n138861660\\r\\n552655747\\r\\n896394864\\r\\n881431780\\r\\n167493014\\r\\n480546290\\r\\n147428613\\r\\n697960072\\r\\n762448385\\r\\n870903408\\r\\n251332589\\r\\n614973238\\r\\n898519152\\r\\n581333635\\r\\n223833180\\r\\n271513325\\r\\n829479792\\r\\n130457576\\r\\n488950374\\r\\n631091534\\r\\n259853008\\r\\n403102846\\r\\n643511524\\r\\n491144463\\r\\n683066789\\r\\n279987210\\r\\n916459265\\r\\n497517327\\r\\n461078693\\r\\n513286618\\r\\n11055375\\r\\n943036132\\r\\n453946156\\r\\n770116063\\r\\n285321197\\r\\n954649915\\r\\n686299755\\r\\n305432132\\r\\n314991428\\r\\n917591...', '979248391\\r\\n467909552\\r\\n175190733\\r\\n498757573\\r\\n436634896\\r\\n282945489\\r\\n831422982\\r\\n525572199\\r\\n608769567\\r\\n291190788\\r\\n623553625\\r\\n907228321\\r\\n19120025\\r\\n908756352\\r\\n635157558\\r\\n367120190\\r\\n895500325\\r\\n121864053\\r\\n271093430\\r\\n805461626\\r\\n799170993\\r\\n621048261\\r\\n209948086\\r\\n214834751\\r\\n291190788\\r\\n88084033\\r\\n941559039\\r\\n256433435\\r\\n462472189\\r\\n261870798\\r\\n718354926\\r\\n62673375\\r\\n599120300\\r\\n207566785\\r\\n71042737\\r\\n669914911\\r\\n844128311\\r\\n594233635\\r\\n758976277\\r\\n186492094\\r\\n238841441\\r\\n949377703\\r\\n280013490\\r\\n621474896\\r\\n309333480\\r\\n356245464\\r\\n817740320...']}, {'input': '200000 3000\\r\\n0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 1 1 1 0 1 1 0 0 1 0 0 0 1 1 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 1 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 1 0 0 1 0 0 0 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 0 0 1 0 0 0 1 1 0 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 ...', 'output': ['684128648\\r\\n534537704\\r\\n70831055\\r\\n605368759\\r\\n605368759\\r\\n534537704\\r\\n55897238\\r\\n70831055\\r\\n534537704\\r\\n534537704\\r\\n605368759\\r\\n684128648\\r\\n55897238\\r\\n740025886\\r\\n534537704\\r\\n70831055\\r\\n70831055\\r\\n684128648\\r\\n70831055\\r\\n684128648\\r\\n425910181\\r\\n70831055\\r\\n605368759\\r\\n534537704\\r\\n534537704\\r\\n605368759\\r\\n684128648\\r\\n70831055\\r\\n684128648\\r\\n605368759\\r\\n70831055\\r\\n370012943\\r\\n370012943\\r\\n370012943\\r\\n605368759\\r\\n70831055\\r\\n534537704\\r\\n70831055\\r\\n370012943\\r\\n141662110\\r\\n534537704\\r\\n370012943\\r\\n370012943\\r\\n70831055\\r\\n684128648\\r\\n370012943\\r\\n684128648\\r\\n5345377...']}, {'input': '200000 3000\\r\\n1 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 1 1 0 1 1 1 1 0 0 1 0 1 0 0 1 0 1 1 0 1 0 1 1 0 0 1 1 0 0 1 0 1 0 1 1 0 0 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 1 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 0 1 0 0 0 1 1 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ...', 'output': ['331265679\\r\\n248932636\\r\\n609274319\\r\\n474255977\\r\\n102055814\\r\\n485644908\\r\\n626044190\\r\\n431097835\\r\\n319780031\\r\\n47044666\\r\\n687413158\\r\\n404806427\\r\\n125126455\\r\\n282606731\\r\\n307585492\\r\\n584577913\\r\\n604465119\\r\\n366599088\\r\\n490459582\\r\\n11853006\\r\\n753101524\\r\\n749114305\\r\\n816668970\\r\\n25465595\\r\\n942396724\\r\\n387086401\\r\\n558715961\\r\\n470999022\\r\\n908318742\\r\\n535377307\\r\\n712631115\\r\\n501708418\\r\\n465458062\\r\\n906281962\\r\\n309027298\\r\\n466289495\\r\\n88346508\\r\\n21689911\\r\\n46580591\\r\\n650678352\\r\\n435081076\\r\\n202663995\\r\\n554027989\\r\\n280201535\\r\\n865380747\\r\\n516485969\\r\\n226759102\\r\\n...']}, {'input': '200000 3000\\r\\n0 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 ...', 'output': ['702758762\\r\\n222668721\\r\\n663197048\\r\\n675792950\\r\\n759259581\\r\\n332486741\\r\\n171127920\\r\\n414458191\\r\\n349087590\\r\\n847918503\\r\\n522872021\\r\\n540727038\\r\\n813504457\\r\\n278812310\\r\\n949679696\\r\\n784095578\\r\\n918470307\\r\\n482110597\\r\\n535952792\\r\\n109088580\\r\\n967478176\\r\\n268019403\\r\\n523209396\\r\\n80286422\\r\\n566422901\\r\\n182974112\\r\\n166764579\\r\\n716767192\\r\\n203579125\\r\\n975507557\\r\\n770975186\\r\\n884777286\\r\\n433828625\\r\\n891459014\\r\\n519109900\\r\\n907459392\\r\\n591988953\\r\\n479131884\\r\\n989822907\\r\\n846824242\\r\\n304414023\\r\\n13755521\\r\\n6710438\\r\\n355497544\\r\\n718926904\\r\\n912736930\\r\\n173287893...']}, {'input': '10 3000\\r\\n1 1 1 1 1 0 0 0 1 1\\r\\n6 22 5 2 4 15 4 7 31 4\\r\\n', 'output': ['561258918\\r\\n61460660\\r\\n467715765\\r\\n187086306\\r\\n374172612\\r\\n538110090\\r\\n143496024\\r\\n251118042\\r\\n903349037\\r\\n374172612']}, {'input': '100 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n10 8 1 9 7 5 12 9 15 7 16 5 17 5 17 21 11 3 4 4 30 17 3 84 12 30 2 8 2 2 22 24 15 11 15 13 7 17 1 12 8 4 3 6 5 15 1 3 4 2 27 3 11 11 3 3 3 5 14 2 5 13 6 2 6 5 6 19 3 16 4 12 11 2 2 3 25 14 6 11 22 4 10 32 9 19 14 2 2 3 4 3 2 5 18 14 2 7 3 8\\r\\n', 'output': ['23677346\\r\\n418239618\\r\\n800963217\\r\\n220958482\\r\\n615520754\\r\\n11838673\\r\\n627359427\\r\\n220958482\\r\\n35516019\\r\\n615520754\\r\\n836479236\\r\\n11838673\\r\\n639198100\\r\\n11838673\\r\\n639198100\\r\\n848317909\\r\\n824640563\\r\\n406400945\\r\\n209119809\\r\\n209119809\\r\\n71032038\\r\\n639198100\\r\\n406400945\\r\\n398538577\\r\\n627359427\\r\\n71032038\\r\\n603682081\\r\\n418239618\\r\\n19778681\\r\\n603682081\\r\\n651036773\\r\\n256474501\\r\\n35516019\\r\\n824640563\\r\\n35516019\\r\\n430078291\\r\\n615520754\\r\\n639198100\\r\\n800963217\\r\\n627359427\\r\\n418239618\\r\\n209119809\\r\\n406400945\\r\\n812801890\\r\\n11838673\\r\\n35516019\\r\\n800963217\\r\\n406400...']}, {'input': '1000 3000\\r\\n0 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 ...', 'output': ['984664827\\r\\n971085301\\r\\n837724678\\r\\n984664827\\r\\n225735001\\r\\n971085301\\r\\n984664827\\r\\n611989677\\r\\n65215326\\r\\n611989677\\r\\n837724678\\r\\n984664827\\r\\n225735001\\r\\n984664827\\r\\n971085301\\r\\n225735001\\r\\n225735001\\r\\n984664827\\r\\n971085301\\r\\n957505775\\r\\n971085301\\r\\n984664827\\r\\n943926249\\r\\n225735001\\r\\n971085301\\r\\n611989677\\r\\n837724678\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n984664827\\r\\n971085301\\r\\n943926249\\r\\n943926249\\r\\n611989677\\r\\n971085301\\r\\n984664827\\r\\n957505775\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n971085301\\r\\n225735001\\r\\n837724678\\r\\n611989...']}, {'input': '1000 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n5\\r\\n5\\r\\n499122184\\r\\n10\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122184\\r\\n5\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122184\\r\\n5...']}, {'input': '199990 3000\\r\\n1 0 0 1 0 1 1 0 0 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 0 1 1 0 0 1 0 0 1 1 0 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 0 0 1 0 1 0 ...', 'output': ['646452156\\r\\n960868656\\r\\n118518242\\r\\n184272685\\r\\n747024268\\r\\n964037469\\r\\n951101180\\r\\n377347150\\r\\n254993892\\r\\n11139421\\r\\n70322210\\r\\n525571057\\r\\n926475930\\r\\n63428346\\r\\n756018063\\r\\n626131891\\r\\n466781454\\r\\n656042659\\r\\n69698706\\r\\n359694160\\r\\n226813875\\r\\n191435355\\r\\n897230167\\r\\n851910875\\r\\n872964055\\r\\n741910138\\r\\n963242791\\r\\n859073545\\r\\n501205753\\r\\n252469038\\r\\n77916365\\r\\n622358084\\r\\n867246600\\r\\n381481659\\r\\n57646031\\r\\n326439010\\r\\n37314488\\r\\n267966014\\r\\n386173645\\r\\n224253188\\r\\n693822089\\r\\n652063749\\r\\n209704954\\r\\n936775840\\r\\n675102836\\r\\n581756207\\r\\n18809453\\r\\n84...']}, {'input': '199991 3000\\r\\n1 0 1 0 0 1 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 ...', 'output': ['576788803\\r\\n851579816\\r\\n464431389\\r\\n925910539\\r\\n240339104\\r\\n317886519\\r\\n67707478\\r\\n262772669\\r\\n221595177\\r\\n612937974\\r\\n736137684\\r\\n268724388\\r\\n68361383\\r\\n847191682\\r\\n557301933\\r\\n913346054\\r\\n648280739\\r\\n171995554\\r\\n235269506\\r\\n530242292\\r\\n148650394\\r\\n908499525\\r\\n304200830\\r\\n721371958\\r\\n474031015\\r\\n817280262\\r\\n825707282\\r\\n465373250\\r\\n245622892\\r\\n341231679\\r\\n845696111\\r\\n853007293\\r\\n68361383\\r\\n915771149\\r\\n987480726\\r\\n726171771\\r\\n707992711\\r\\n478931968\\r\\n847890178\\r\\n687514833\\r\\n732279394\\r\\n927044872\\r\\n856499296\\r\\n862463110\\r\\n77307104\\r\\n484794642\\r\\n615409785...']}, {'input': '199992 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 ...', 'output': ['944579271\\r\\n815447430\\r\\n121435610\\r\\n89385736\\r\\n85360285\\r\\n56962924\\r\\n289585947\\r\\n344015172\\r\\n223771444\\r\\n652123221\\r\\n591303048\\r\\n4248454\\r\\n306743823\\r\\n968709911\\r\\n670850059\\r\\n672191876\\r\\n417953645\\r\\n24521845\\r\\n946915719\\r\\n777789018\\r\\n60838440\\r\\n839186865\\r\\n79733480\\r\\n134590444\\r\\n755625163\\r\\n504520550\\r\\n752912502\\r\\n172585260\\r\\n452314215\\r\\n812559060\\r\\n865646468\\r\\n584772439\\r\\n717751255\\r\\n344015172\\r\\n217454686\\r\\n551825\\r\\n985330789\\r\\n733776192\\r\\n951920831\\r\\n371680341\\r\\n447096882\\r\\n332238689\\r\\n688429333\\r\\n390729899\\r\\n623930596\\r\\n453096625\\r\\n858100172\\r\\n14638...']}, {'input': '199993 3000\\r\\n1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['189220773\\r\\n219328456\\r\\n767760662\\r\\n806220888\\r\\n797979411\\r\\n545740580\\r\\n219383989\\r\\n75297991\\r\\n40929720\\r\\n935115229\\r\\n532004785\\r\\n529257626\\r\\n49282263\\r\\n789793467\\r\\n545740580\\r\\n962586819\\r\\n485358615\\r\\n471678353\\r\\n907699172\\r\\n803473729\\r\\n408604762\\r\\n963918788\\r\\n35602001\\r\\n847372740\\r\\n611561330\\r\\n216636830\\r\\n729467035\\r\\n298885001\\r\\n73784562\\r\\n95928433\\r\\n405857603\\r\\n312620796\\r\\n126147182\\r\\n518268990\\r\\n353717115\\r\\n501841569\\r\\n512830205\\r\\n685568024\\r\\n252294364\\r\\n962586819\\r\\n477172671\\r\\n252637898\\r\\n246744513\\r\\n434391811\\r\\n52084955\\r\\n807039242\\r\\n414043547\\r\\n2...']}, {'input': '199994 3000\\r\\n0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 1 0 0 1 1 0 0 1 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 0 1 0 1 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 ...', 'output': ['336654971\\r\\n732535\\r\\n815250185\\r\\n326444659\\r\\n729180253\\r\\n129624924\\r\\n358796707\\r\\n444866639\\r\\n754810869\\r\\n843551608\\r\\n256744726\\r\\n70820418\\r\\n164515107\\r\\n207034102\\r\\n575220043\\r\\n87535002\\r\\n682699176\\r\\n43984065\\r\\n797070531\\r\\n806189316\\r\\n815982720\\r\\n704840912\\r\\n900587582\\r\\n585042405\\r\\n921264248\\r\\n459213067\\r\\n352526818\\r\\n883140463\\r\\n815669240\\r\\n511377385\\r\\n785483692\\r\\n225259507\\r\\n505565288\\r\\n832271475\\r\\n46481077\\r\\n860266192\\r\\n560703064\\r\\n99613410\\r\\n150730663\\r\\n410704936\\r\\n704840912\\r\\n915837096\\r\\n953960881\\r\\n968477860\\r\\n589004487\\r\\n187389378\\r\\n517884662\\r\\n93...']}, {'input': '199995 3000\\r\\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 ...', 'output': ['662762303\\r\\n929872487\\r\\n874878479\\r\\n456275271\\r\\n715183658\\r\\n400437516\\r\\n521458497\\r\\n76578537\\r\\n927594887\\r\\n897280874\\r\\n185062970\\r\\n530346011\\r\\n941267798\\r\\n71793140\\r\\n377419134\\r\\n675559304\\r\\n591654880\\r\\n719511098\\r\\n599406031\\r\\n622421976\\r\\n250476393\\r\\n605557988\\r\\n772627865\\r\\n133099572\\r\\n594620634\\r\\n848508553\\r\\n404542070\\r\\n193952921\\r\\n255031593\\r\\n40568087\\r\\n771704693\\r\\n756662785\\r\\n869935052\\r\\n847369753\\r\\n36238210\\r\\n358730629\\r\\n164552385\\r\\n938076721\\r\\n767600139\\r\\n458579571\\r\\n693757159\\r\\n843723156\\r\\n975014694\\r\\n858992824\\r\\n955398666\\r\\n756432588\\r\\n585958443...']}, {'input': '199996 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 ...', 'output': ['670876956\\r\\n282683795\\r\\n377011834\\r\\n803395587\\r\\n676385588\\r\\n935914218\\r\\n718622147\\r\\n536417373\\r\\n403228588\\r\\n282205508\\r\\n715874782\\r\\n593703261\\r\\n180906172\\r\\n125082949\\r\\n159213672\\r\\n79114647\\r\\n828013417\\r\\n919922217\\r\\n269261194\\r\\n677998414\\r\\n539957249\\r\\n116020539\\r\\n719578721\\r\\n947915860\\r\\n933837007\\r\\n911830283\\r\\n475864127\\r\\n320232037\\r\\n207122926\\r\\n915004383\\r\\n801796663\\r\\n301300804\\r\\n489000308\\r\\n929955103\\r\\n208735752\\r\\n169096397\\r\\n431236133\\r\\n485282467\\r\\n675865595\\r\\n711172563\\r\\n31711484\\r\\n780760415\\r\\n330893371\\r\\n339149368\\r\\n107928605\\r\\n630648538\\r\\n1150500...']}, {'input': '199997 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['509540793\\r\\n120976575\\r\\n549866318\\r\\n103886913\\r\\n46471726\\r\\n486304930\\r\\n356783524\\r\\n889560180\\r\\n199228995\\r\\n889560180\\r\\n825998792\\r\\n728258080\\r\\n40325525\\r\\n723460820\\r\\n584045642\\r\\n849234655\\r\\n398457990\\r\\n44073096\\r\\n355733835\\r\\n753892573\\r\\n259042812\\r\\n526630455\\r\\n218717287\\r\\n69707589\\r\\n445979405\\r\\n843088454\\r\\n549866318\\r\\n900503641\\r\\n915194673\\r\\n110033114\\r\\n233408319\\r\\n632915998\\r\\n443580775\\r\\n883413979\\r\\n356783524\\r\\n63561388\\r\\n314059369\\r\\n628118738\\r\\n543720117\\r\\n420344912\\r\\n705022217\\r\\n89195881\\r\\n535175286\\r\\n987300892\\r\\n72106219\\r\\n543720117\\r\\n785673267\\r\\n2...', '791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n79153...']}, {'input': '199998 3000\\r\\n1 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 1 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 1 1 1 0 0 1 0 1 0 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 1 0 0 1 0 0 1 1 1 1 0 0 1 1 0 0 ...', 'output': ['728321596\\r\\n638956912\\r\\n987568459\\r\\n799092377\\r\\n597086927\\r\\n782772546\\r\\n770287170\\r\\n255784080\\r\\n699516389\\r\\n256762390\\r\\n656812813\\r\\n513524780\\r\\n416026596\\r\\n285567597\\r\\n279669471\\r\\n136357125\\r\\n790734343\\r\\n479381626\\r\\n898668365\\r\\n822581531\\r\\n870855601\\r\\n827897584\\r\\n408064799\\r\\n759611276\\r\\n235779603\\r\\n990282556\\r\\n571135194\\r\\n279669471\\r\\n311516659\\r\\n287631268\\r\\n607109724\\r\\n822559637\\r\\n639460200\\r\\n369129744\\r\\n111968446\\r\\n157186402\\r\\n495141278\\r\\n652212868\\r\\n143815634\\r\\n367752526\\r\\n165008822\\r\\n592117981\\r\\n400788425\\r\\n793754430\\r\\n966900453\\r\\n2484473\\r\\n9089752...', '964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n96492...']}, {'input': '199999 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 ...', 'output': ['659992102\\r\\n43534688\\r\\n613251861\\r\\n688791385\\r\\n969096633\\r\\n244584877\\r\\n407865304\\r\\n186960964\\r\\n243317864\\r\\n549539932\\r\\n991833247\\r\\n262687380\\r\\n543128826\\r\\n494636937\\r\\n223625258\\r\\n610530943\\r\\n823731817\\r\\n148706567\\r\\n321255216\\r\\n793342431\\r\\n574351284\\r\\n666241663\\r\\n731705240\\r\\n759075965\\r\\n574351284\\r\\n267483036\\r\\n533214424\\r\\n650213898\\r\\n38254397\\r\\n748651581\\r\\n341432457\\r\\n458755021\\r\\n851102542\\r\\n458618823\\r\\n777016923\\r\\n879306339\\r\\n831596828\\r\\n223948348\\r\\n334458632\\r\\n214654779\\r\\n250672893\\r\\n599162636\\r\\n601914362\\r\\n888897651\\r\\n620419998\\r\\n546470577\\r\\n2155987...', '959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n550771238\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n550771238\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n95962...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 ...', 'output': ['893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n917300718\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n89340...', '777798569\\r\\n231173131\\r\\n230887037\\r\\n573284389\\r\\n184819702\\r\\n389069614\\r\\n336642733\\r\\n374568480\\r\\n855432105\\r\\n25206655\\r\\n4356888\\r\\n605147597\\r\\n575616793\\r\\n296362756\\r\\n407873071\\r\\n112177054\\r\\n213967495\\r\\n814007752\\r\\n159623960\\r\\n280717246\\r\\n614422648\\r\\n758973286\\r\\n52239134\\r\\n765343745\\r\\n464084652\\r\\n192059356\\r\\n447272940\\r\\n617899428\\r\\n590679202\\r\\n570104616\\r\\n874554395\\r\\n774321789\\r\\n991301706\\r\\n991873894\\r\\n397156637\\r\\n113523353\\r\\n617052059\\r\\n46639523\\r\\n446403745\\r\\n35361814\\r\\n921640272\\r\\n891146426\\r\\n273084002\\r\\n58808253\\r\\n533015325\\r\\n30707919\\r\\n154980978\\r\\n71...']}, {'input': '200000 3000\\r\\n1 0 0 0 0 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 1 0 1 0 0 1 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 1 0 ...', 'output': ['203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n71266...']}, {'input': '200000 3000\\r\\n0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 1 0 1 0 1 1 1 0 0 0 1 0 1 1 0 1 1 0 0 0 1 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 0 1 1 0 1 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 0 1 1 1 1 1 1 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 0 1 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 ...', 'output': ['532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n53...']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long p = 998244353;\nlong long modpow(long long a, long long n) {\n  if (n == 0) return 1;\n  long long r = modpow(a * a % p, n / 2);\n  if (n % 2) return r * a % p;\n  return r;\n}\nlong long n, m, a[200005];\nlong long w[200005];\nlong long gcd(long long a, long long b) { return b? gcd(b, a % b) : a; }\nint main() {\n  scanf(\"%lld %lld\", &n, &m);\n  long long s = 0;\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    s += a[i];\n  }\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%lld\", &w[i]);\n  }\n  long long k = gcd(s, m);\n  long long l1 = m / k * modpow(2, p - 2);\n  long long l2 = (1 - modpow(2, k * (p - 2)) * modpow(s, p - 2) % p + p) %\n                  p;\n  l1 = (l1 - 1 + p) % p;\n  for (int i = 1; i <= n; i++) {\n    if (a[i]) {\n      printf(\"%lld\\n\", (w[i] + l1 * m % p * p + l2 * w[i] % p) % p);\n    } else {\n      printf(\"%lld\\n\", (w[i] - l1 * m % p * p + l2 * w[i] % p) % p);\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "ba9c136f84375cd317f0f8b53e3939c7", "id": 31, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '2 1\\r\\n0 1\\r\\n2 1\\r\\n', 'output': ['332748119\\r\\n332748119']}, {'input': '1 2\\r\\n1\\r\\n1\\r\\n', 'output': ['3']}, {'input': '3 3\\r\\n0 1 1\\r\\n4 3 5\\r\\n', 'output': ['160955686\\r\\n185138929\\r\\n974061117']}, {'input': '5 5\\r\\n0 1 0 0 1\\r\\n9 8 3 8 8\\r\\n', 'output': ['45170585\\r\\n105647559\\r\\n680553097\\r\\n483815788\\r\\n105647559']}, {'input': '10 10\\r\\n0 1 0 0 1 1 1 1 1 1\\r\\n12 18 6 18 7 2 9 18 1 9\\r\\n', 'output': ['199115375\\r\\n823101465\\r\\n598679864\\r\\n797795239\\r\\n486469073\\r\\n424203836\\r\\n910672909\\r\\n823101465\\r\\n212101918\\r\\n910672909']}, {'input': '20 20\\r\\n1 1 1 1 0 1 1 1 0 1 0 1 0 0 1 0 1 1 0 1\\r\\n1 13 7 11 17 15 19 18 14 11 15 1 12 4 5 16 14 11 18 9\\r\\n', 'output': ['688505688\\r\\n964619120\\r\\n826562404\\r\\n585852097\\r\\n851622699\\r\\n345141790\\r\\n104431483\\r\\n414170148\\r\\n349014804\\r\\n585852097\\r\\n516550769\\r\\n688505688\\r\\n13942874\\r\\n670143860\\r\\n447795381\\r\\n684086734\\r\\n654880455\\r\\n585852097\\r\\n20914311\\r\\n207085074']}, {'input': '30 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0\\r\\n1 2 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 2 2 1 1 2 2 2\\r\\n', 'output': ['346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n542025302\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n693292404\\r\\n693292404']}, {'input': '40 40\\r\\n1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n28 13 22 35 22 13 23 35 14 36 30 10 10 15 3 9 35 35 9 29 14 28 8 29 22 30 4 31 39 24 4 19 37 4 20 7 11 17 3 25\\r\\n', 'output': ['368107101\\r\\n848286965\\r\\n360530176\\r\\n210572788\\r\\n199380339\\r\\n848286965\\r\\n195418938\\r\\n210572788\\r\\n683175727\\r\\n45461550\\r\\n37884625\\r\\n544374860\\r\\n345376326\\r\\n518064489\\r\\n502910639\\r\\n510487564\\r\\n210572788\\r\\n210572788\\r\\n510487564\\r\\n202995863\\r\\n683175727\\r\\n526005255\\r\\n675598802\\r\\n202995863\\r\\n360530176\\r\\n37884625\\r\\n337799401\\r\\n871017740\\r\\n548372189\\r\\n30307700\\r\\n337799401\\r\\n855863890\\r\\n878594665\\r\\n337799401\\r\\n690752652\\r\\n840710040\\r\\n180265088\\r\\n187842013\\r\\n502910639\\r\\n863440815']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n13 18 27 40 3 1 20 11 25 11 2 31 22 15 36 12 11 24 8 39 31 36 19 24 10 39 27 4 10 22 14 3 25 5 24 19 20 33 17 19 30 15 37 33 3 27 26 29 37 34\\r\\n', 'output': ['30685719\\r\\n733580163\\r\\n601248068\\r\\n631933787\\r\\n621385537\\r\\n539876630\\r\\n815089070\\r\\n947421165\\r\\n519739161\\r\\n947421165\\r\\n81508907\\r\\n764265882\\r\\n896597977\\r\\n112194626\\r\\n468915973\\r\\n489053442\\r\\n947421165\\r\\n978106884\\r\\n326035628\\r\\n92057157\\r\\n764265882\\r\\n468915973\\r\\n275212440\\r\\n978106884\\r\\n407544535\\r\\n92057157\\r\\n601248068\\r\\n163017814\\r\\n407544535\\r\\n896597977\\r\\n570562349\\r\\n621385537\\r\\n519739161\\r\\n702894444\\r\\n978106884\\r\\n275212440\\r\\n815089070\\r\\n845774789\\r\\n193703533\\r\\n275212440\\r\\n224389252\\r\\n112194626\\r\\n10548250\\r\\n845774789\\r\\n621385537\\r\\n601248068\\r\\n61371438\\r\\n...']}, {'input': '50 50\\r\\n0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0\\r\\n2 50 37 21 21 2 26 49 15 44 8 27 30 28 26 40 26 45 41 37 27 34 8 35 2 23 2 49 13 1 39 37 12 42 7 11 4 50 42 21 27 50 28 31 17 22 10 43 46 13\\r\\n', 'output': ['380563607\\r\\n529890998\\r\\n551838435\\r\\n502062638\\r\\n635094670\\r\\n380563607\\r\\n954349479\\r\\n816391328\\r\\n358616170\\r\\n386444530\\r\\n907437062\\r\\n645509106\\r\\n717232340\\r\\n336668733\\r\\n954349479\\r\\n623561669\\r\\n954349479\\r\\n77604157\\r\\n314721296\\r\\n453480088\\r\\n645509106\\r\\n480115201\\r\\n907437062\\r\\n725742999\\r\\n380563607\\r\\n362831759\\r\\n725981442\\r\\n838731371\\r\\n976296916\\r\\n362990721\\r\\n932402042\\r\\n551838435\\r\\n286892936\\r\\n5880923\\r\\n832850448\\r\\n998164872\\r\\n761127214\\r\\n529890998\\r\\n5880923\\r\\n502062638\\r\\n645509106\\r\\n181137696\\r\\n181296658\\r\\n408391967\\r\\n739179777\\r\\n193222265\\r\\n904573682\\r...']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 1 2 2 2 1 1 1\\r\\n', 'output': ['665496237\\r\\n332748121\\r\\n332748121\\r\\n665496237\\r\\n332748121\\r\\n332748121\\r\\n332748121\\r\\n665496237\\r\\n665496237\\r\\n665496237']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 0 1 1\\r\\n2 1 2 2 1 1 1 1 1 1\\r\\n', 'output': ['771370640\\r\\n385685320\\r\\n771370640\\r\\n771370640\\r\\n385685320\\r\\n385685320\\r\\n385685320\\r\\n635246407\\r\\n385685320\\r\\n385685320']}, {'input': '10 10\\r\\n0 0 0 1 0 0 0 0 0 0\\r\\n2 2 2 2 2 2 2 1 2 2\\r\\n', 'output': ['973938381\\r\\n973938381\\r\\n973938381\\r\\n791643586\\r\\n973938381\\r\\n973938381\\r\\n973938381\\r\\n986091367\\r\\n973938381\\r\\n973938381']}, {'input': '10 10\\r\\n0 0 1 0 0 0 1 0 0 0\\r\\n2 1 2 1 1 2 1 1 1 1\\r\\n', 'output': ['44896189\\r\\n521570271\\r\\n482402083\\r\\n521570271\\r\\n521570271\\r\\n44896189\\r\\n740323218\\r\\n521570271\\r\\n521570271\\r\\n521570271']}, {'input': '10 10\\r\\n1 0 0 0 1 1 1 0 1 0\\r\\n1 2 1 2 1 1 2 2 2 1\\r\\n', 'output': ['910950063\\r\\n595918255\\r\\n797081304\\r\\n595918255\\r\\n910950063\\r\\n910950063\\r\\n823655773\\r\\n595918255\\r\\n823655773\\r\\n797081304']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n17 10 8 34 5 4 3 44 20 14\\r\\n', 'output': ['709444118\\r\\n6278277\\r\\n803618104\\r\\n420643883\\r\\n502261315\\r\\n401809052\\r\\n301356789\\r\\n426922160\\r\\n12556554\\r\\n408087329']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 0 1\\r\\n40 36 29 4 36 35 9 38 40 18\\r\\n', 'output': ['59109317\\r\\n951618303\\r\\n17898146\\r\\n105735367\\r\\n951618303\\r\\n675623373\\r\\n487465664\\r\\n505363810\\r\\n736385984\\r\\n974931328']}, {'input': '10 10\\r\\n0 0 0 0 0 0 0 1 0 0\\r\\n8 33 37 18 30 48 45 34 25 48\\r\\n', 'output': ['211347083\\r\\n497465085\\r\\n104016450\\r\\n725092025\\r\\n542990473\\r\\n269838145\\r\\n315363533\\r\\n227335634\\r\\n286118002\\r\\n269838145']}, {'input': '10 10\\r\\n0 0 1 0 0 0 0 0 1 0\\r\\n47 34 36 9 3 16 17 46 47 1\\r\\n', 'output': ['167709201\\r\\n57603825\\r\\n597597985\\r\\n690531016\\r\\n562925123\\r\\n673030499\\r\\n527924089\\r\\n312815611\\r\\n253346183\\r\\n853137943']}, {'input': '10 10\\r\\n1 0 0 1 1 0 1 0 0 1\\r\\n24 7 10 9 6 13 27 17 6 39\\r\\n', 'output': ['976715988\\r\\n573793375\\r\\n391885813\\r\\n865390672\\r\\n244178997\\r\\n209978251\\r\\n599683310\\r\\n965679188\\r\\n634429229\\r\\n89796951']}, {'input': '10 10\\r\\n0 0 0 0 0 1 0 0 0 0\\r\\n34 34 34 34 34 34 34 34 34 34\\r\\n', 'output': ['971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n754874965\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n43 43 43 43 43 43 43 43 43 43\\r\\n', 'output': ['44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 2 1 1 2 1 1 1 2 1 1 2 1 2 1 2 1 2 1 2 2 2 1 2 2 2 2 1\\r\\n', 'output': ['260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1\\r\\n2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 2 2 2 2 1 2 1 2 1 1 1 1 2 1\\r\\n', 'output': ['720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n720162001\\r\\n720162001\\r\\n720162001\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n720162001\\r\\n427819009\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177']}, {'input': '30 30\\r\\n0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n2 1 1 2 1 2 2 2 2 2 1 1 2 2 2 1 2 2 2 1 2 1 1 1 1 1 2 1 1 1\\r\\n', 'output': ['188114875\\r\\n593179614\\r\\n593179614\\r\\n550614566\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n593179614']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 1 1 1 2 1 2 2 1 2 1 2 1 1 2 2 1 2 1 2 1 2 2 2 1 1 2 1 2 2\\r\\n', 'output': ['593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n275307283\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n275307283\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875']}, {'input': '30 30\\r\\n1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 1 1 0 1 0 1 0 0 1 1 0 1 0 1 0\\r\\n1 1 1 2 2 1 2 1 2 1 1 2 2 2 1 2 1 1 1 1 1 2 1 2 1 2 1 2 1 1\\r\\n', 'output': ['297674502\\r\\n297674502\\r\\n297674502\\r\\n101192689\\r\\n595349004\\r\\n549718521\\r\\n101192689\\r\\n297674502\\r\\n595349004\\r\\n297674502\\r\\n549718521\\r\\n101192689\\r\\n101192689\\r\\n101192689\\r\\n549718521\\r\\n595349004\\r\\n297674502\\r\\n549718521\\r\\n297674502\\r\\n549718521\\r\\n297674502\\r\\n101192689\\r\\n549718521\\r\\n595349004\\r\\n297674502\\r\\n101192689\\r\\n297674502\\r\\n101192689\\r\\n297674502\\r\\n549718521']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n23 45 44 49 17 36 32 26 40 8 36 11 5 19 41 16 7 38 23 40 13 16 24 44 22 13 1 2 32 31\\r\\n', 'output': ['42365832\\r\\n603712812\\r\\n124449607\\r\\n524276926\\r\\n161519661\\r\\n283321379\\r\\n362757265\\r\\n481911094\\r\\n203885493\\r\\n839372581\\r\\n283321379\\r\\n280673490\\r\\n399827319\\r\\n121801718\\r\\n683148698\\r\\n680500809\\r\\n360109376\\r\\n243603436\\r\\n42365832\\r\\n203885493\\r\\n240955547\\r\\n680500809\\r\\n521629037\\r\\n124449607\\r\\n561346980\\r\\n240955547\\r\\n479263205\\r\\n958526410\\r\\n362757265\\r\\n881738413']}, {'input': '30 30\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n41 39 15 34 45 27 18 7 48 33 46 11 24 16 35 43 7 31 26 17 30 15 5 9 29 20 21 37 3 7\\r\\n', 'output': ['61128841\\r\\n655563720\\r\\n98563838\\r\\n955457225\\r\\n295691514\\r\\n377063779\\r\\n916872088\\r\\n578393446\\r\\n115755411\\r\\n17191573\\r\\n235712813\\r\\n338478642\\r\\n556999882\\r\\n38585137\\r\\n895478524\\r\\n415648916\\r\\n578393446\\r\\n137148975\\r\\n437042480\\r\\n976850789\\r\\n197127676\\r\\n98563838\\r\\n698350848\\r\\n458436044\\r\\n257106377\\r\\n796914686\\r\\n736935985\\r\\n775521122\\r\\n818308250\\r\\n578393446']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n29 38 18 19 46 28 12 5 46 17 31 20 24 33 9 6 47 2 2 41 34 2 50 5 47 10 40 21 49 28\\r\\n', 'output': ['528451192\\r\\n658031067\\r\\n259159750\\r\\n828137710\\r\\n218632982\\r\\n957717585\\r\\n838269402\\r\\n848401094\\r\\n218632982\\r\\n688426143\\r\\n942792071\\r\\n398871317\\r\\n678294451\\r\\n807874326\\r\\n129579875\\r\\n419134701\\r\\n787610942\\r\\n139711567\\r\\n139711567\\r\\n368476241\\r\\n378607933\\r\\n139711567\\r\\n498056116\\r\\n848401094\\r\\n787610942\\r\\n698557835\\r\\n797742634\\r\\n967849277\\r\\n927322509\\r\\n957717585']}, {'input': '30 30\\r\\n0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 12 9 1 5 32 38 25 34 31 27 43 13 38 48 40 5 42 20 45 1 4 35 38 1 44 31 42 8 37\\r\\n', 'output': ['399967190\\r\\n806628868\\r\\n604971651\\r\\n399967190\\r\\n3347244\\r\\n800038448\\r\\n225087925\\r\\n16736220\\r\\n621707871\\r\\n420050654\\r\\n816670600\\r\\n228435169\\r\\n208351705\\r\\n225087925\\r\\n231782413\\r\\n26777952\\r\\n3347244\\r\\n51806110\\r\\n13388976\\r\\n30125196\\r\\n399967190\\r\\n601624407\\r\\n23430708\\r\\n225087925\\r\\n399967190\\r\\n628402359\\r\\n420050654\\r\\n826712332\\r\\n205004461\\r\\n823365088']}, {'input': '30 30\\r\\n0 1 1 0 0 1 1 1 1 0 0 1 0 0 1 0 0 0 1 0 1 1 0 0 0 1 1 1 1 0\\r\\n5 20 47 27 17 5 18 30 43 23 44 6 47 8 23 41 2 46 49 33 45 27 33 16 36 2 42 36 8 23\\r\\n', 'output': ['114252107\\r\\n760713694\\r\\n489959522\\r\\n18014766\\r\\n787754905\\r\\n689300600\\r\\n484993454\\r\\n142826188\\r\\n936763395\\r\\n126261951\\r\\n805769671\\r\\n827160720\\r\\n475023194\\r\\n781749983\\r\\n176049701\\r\\n138271795\\r\\n444998584\\r\\n252523902\\r\\n765679762\\r\\n354766165\\r\\n214239282\\r\\n727490181\\r\\n354766165\\r\\n565255613\\r\\n24019688\\r\\n275720240\\r\\n798903275\\r\\n969986908\\r\\n104636607\\r\\n126261951']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\r\\n39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39\\r\\n', 'output': ['417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n142843895']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22\\r\\n', 'output': ['23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n2 1 1 2 2 1 2 1 1 2 2 2 1 2 2 1 1 1 2 1 2 1 2 2 2 1 2 1 1 2 2 2 2 2 1 2 2 2 2 2 2 1 2 1 2 2 2 1 1 2\\r\\n', 'output': ['714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n71479...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 1 2 1 1 1 1 1 2 1 1 1 2 2 2 1 1 1 1 2 2 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 2 2 2 1\\r\\n', 'output': ['964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n824636640\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n93147...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\\r\\n1 2 2 2 2 2 2 1 1 2 2 1 1 2 1 2 2 1 2 1 2 2 1 2 2 2 1 1 1 1 2 2 2 1 2 2 1 2 2 1 1 2 2 2 2 2 1 2 2 1\\r\\n', 'output': ['512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n96131098\\r\\n27359387\\r\\n27359387\\r\\n5128...']}, {'input': '50 50\\r\\n0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\r\\n2 1 1 1 1 2 2 2 1 1 2 2 2 1 2 1 2 2 2 1 1 1 1 2 2 1 1 1 1 2 1 2 2 2 2 1 1 1 2 1 2 1 1 2 2 1 1 2 2 1\\r\\n', 'output': ['303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n480354901\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n15198...']}, {'input': '50 50\\r\\n0 0 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0\\r\\n1 1 1 1 1 2 2 1 1 2 2 2 1 1 1 2 2 2 1 1 1 1 2 1 1 1 2 2 1 1 1 2 2 1 1 2 1 1 2 2 2 2 2 2 2 2 2 1 2 1\\r\\n', 'output': ['525100120\\r\\n525100120\\r\\n392384920\\r\\n525100120\\r\\n525100120\\r\\n51955887\\r\\n784769840\\r\\n525100120\\r\\n392384920\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n392384920\\r\\n392384920\\r\\n525100120\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n392384920\\r\\n392384920\\r\\n392384920\\r\\n392384920\\r\\n784769840\\r\\n392384920\\r\\n525100120\\r\\n392384920\\r\\n51955887\\r\\n784769840\\r\\n525100120\\r\\n392384920\\r\\n525100120\\r\\n51955887\\r\\n51955887\\r\\n525100120\\r\\n392384920\\r\\n784769840\\r\\n525100120\\r\\n525100120\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n51955887\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n784769840\\r\\n51955887\\r\\n5251...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n32 22 24 45 22 17 10 5 27 1 48 15 14 43 11 16 38 31 24 19 5 28 2 4 34 29 18 32 47 11 2 34 39 29 36 11 39 24 23 16 41 45 17 39 30 15 16 3 3 8\\r\\n', 'output': ['118672439\\r\\n268758118\\r\\n837687594\\r\\n821980974\\r\\n268758118\\r\\n842923134\\r\\n848158674\\r\\n424079337\\r\\n692837455\\r\\n284464738\\r\\n677130835\\r\\n273993658\\r\\n987773273\\r\\n253051498\\r\\n134379059\\r\\n558458396\\r\\n827216514\\r\\n832452054\\r\\n837687594\\r\\n413608257\\r\\n424079337\\r\\n977302193\\r\\n568929476\\r\\n139614599\\r\\n687601915\\r\\n263522578\\r\\n129143519\\r\\n118672439\\r\\n392666097\\r\\n134379059\\r\\n568929476\\r\\n687601915\\r\\n113436899\\r\\n263522578\\r\\n258287038\\r\\n134379059\\r\\n113436899\\r\\n837687594\\r\\n553222856\\r\\n558458396\\r\\n682366375\\r\\n821980974\\r\\n842923134\\r\\n113436899\\r\\n547987316\\r\\n273993658\\r\\n55845...']}, {'input': '50 50\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n49 34 4 15 32 20 22 35 3 28 15 46 4 46 16 11 45 42 11 4 15 36 29 10 27 32 1 1 23 11 6 34 35 19 11 5 2 37 9 20 39 33 27 4 21 33 6 23 37 50\\r\\n', 'output': ['41887747\\r\\n858571128\\r\\n101008368\\r\\n378781380\\r\\n808066944\\r\\n505041840\\r\\n555546024\\r\\n883823220\\r\\n75756276\\r\\n707058576\\r\\n378781380\\r\\n163351879\\r\\n101008368\\r\\n163351879\\r\\n404033472\\r\\n277773012\\r\\n138099787\\r\\n62343511\\r\\n277773012\\r\\n101008368\\r\\n378781380\\r\\n909075312\\r\\n732310668\\r\\n252520920\\r\\n681806484\\r\\n808066944\\r\\n25252092\\r\\n25252092\\r\\n580798116\\r\\n277773012\\r\\n151512552\\r\\n858571128\\r\\n883823220\\r\\n479789748\\r\\n277773012\\r\\n126260460\\r\\n50504184\\r\\n934327404\\r\\n227268828\\r\\n505041840\\r\\n984831588\\r\\n833319036\\r\\n681806484\\r\\n101008368\\r\\n530293932\\r\\n833319036\\r\\n151512552\\r\\n...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n12 29 36 24 44 22 38 43 30 19 15 2 39 8 13 50 29 18 37 19 32 39 42 41 20 11 14 25 4 35 14 23 17 29 1 19 3 6 8 31 26 46 9 31 36 49 21 38 17 27\\r\\n', 'output': ['820896192\\r\\n985588111\\r\\n466199870\\r\\n643548031\\r\\n15219645\\r\\n506731999\\r\\n603015902\\r\\n945055982\\r\\n986069299\\r\\n301507951\\r\\n27875887\\r\\n136816032\\r\\n671423918\\r\\n547264128\\r\\n889304208\\r\\n425667741\\r\\n985588111\\r\\n233099935\\r\\n534607886\\r\\n301507951\\r\\n192567806\\r\\n671423918\\r\\n876647966\\r\\n808239950\\r\\n369915967\\r\\n752488176\\r\\n957712224\\r\\n711956047\\r\\n273632064\\r\\n397791854\\r\\n957712224\\r\\n575140015\\r\\n164691919\\r\\n985588111\\r\\n68408016\\r\\n301507951\\r\\n205224048\\r\\n410448096\\r\\n547264128\\r\\n124159790\\r\\n780364063\\r\\n152035677\\r\\n615672144\\r\\n124159790\\r\\n466199870\\r\\n357259725\\r\\n43832398...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n25 31 26 45 2 6 25 14 35 23 31 16 24 36 44 8 18 41 36 3 27 21 15 44 45 45 25 8 3 43 7 25 48 45 44 33 25 49 8 46 14 12 12 46 45 43 29 40 1 47\\r\\n', 'output': ['26673909\\r\\n312584066\\r\\n906195896\\r\\n646959648\\r\\n760799621\\r\\n285910157\\r\\n26673909\\r\\n334375582\\r\\n835938955\\r\\n264118641\\r\\n312584066\\r\\n96930850\\r\\n145396275\\r\\n717216589\\r\\n765682014\\r\\n48465425\\r\\n857730471\\r\\n123604759\\r\\n717216589\\r\\n642077255\\r\\n787473530\\r\\n501563373\\r\\n215653216\\r\\n765682014\\r\\n646959648\\r\\n108381283\\r\\n26673909\\r\\n48465425\\r\\n642077255\\r\\n884404380\\r\\n167187791\\r\\n26673909\\r\\n290792550\\r\\n646959648\\r\\n765682014\\r\\n75139334\\r\\n614792020\\r\\n172070184\\r\\n48465425\\r\\n528237282\\r\\n334375582\\r\\n571820314\\r\\n571820314\\r\\n528237282\\r\\n646959648\\r\\n884404380\\r\\n550028798\\r\\n242...']}, {'input': '50 50\\r\\n0 0 0 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 0 0\\r\\n45 49 17 22 28 34 24 38 5 46 22 36 11 12 43 21 47 39 38 38 38 27 10 49 19 46 23 7 46 35 11 38 25 16 7 32 12 13 44 14 41 36 7 31 4 46 40 28 28 46\\r\\n', 'output': ['644620779\\r\\n102973792\\r\\n443172276\\r\\n267699221\\r\\n201448503\\r\\n886344552\\r\\n745782947\\r\\n99391617\\r\\n196964962\\r\\n259647944\\r\\n267699221\\r\\n619552244\\r\\n632971787\\r\\n371547745\\r\\n416322096\\r\\n28657358\\r\\n254279678\\r\\n338433480\\r\\n344697565\\r\\n344697565\\r\\n99391617\\r\\n464664183\\r\\n143249062\\r\\n102973792\\r\\n548817985\\r\\n15237815\\r\\n129823972\\r\\n675048688\\r\\n259647944\\r\\n380510381\\r\\n756520580\\r\\n344697565\\r\\n984824810\\r\\n829936749\\r\\n675048688\\r\\n658045869\\r\\n371547745\\r\\n112811160\\r\\n535398442\\r\\n599846428\\r\\n188023413\\r\\n619552244\\r\\n299923214\\r\\n44774351\\r\\n956167452\\r\\n259647944\\r\\n577475343\\r...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47\\r\\n', 'output': ['529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n988406960\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n52947...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\\r\\n', 'output': ['9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9']}, {'input': '5 50\\r\\n1 1 1 1 1\\r\\n1 1 4 2 3\\r\\n', 'output': ['635246412\\r\\n635246412\\r\\n544496942\\r\\n272248471\\r\\n907494883']}, {'input': '10 50\\r\\n0 0 0 0 0 0 0 0 1 0\\r\\n3 1 3 3 1 3 1 2 2 1\\r\\n', 'output': ['187134581\\r\\n727874429\\r\\n187134581\\r\\n187134581\\r\\n727874429\\r\\n187134581\\r\\n727874429\\r\\n457504505\\r\\n124563167\\r\\n727874429']}, {'input': '20 50\\r\\n1 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1\\r\\n1 2 2 1 2 2 2 2 2 2 1 1 2 2 2 1 1 1 2 2\\r\\n', 'output': ['853605709\\r\\n708967065\\r\\n708967065\\r\\n853605709\\r\\n708967065\\r\\n708967065\\r\\n708967065\\r\\n922030188\\r\\n708967065\\r\\n922030188\\r\\n853605709\\r\\n853605709\\r\\n708967065\\r\\n922030188\\r\\n708967065\\r\\n461015094\\r\\n853605709\\r\\n853605709\\r\\n708967065\\r\\n708967065']}, {'input': '20 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 2 2 2 2 1 2 1 2 1 2 1 1 2 1 2 2 1\\r\\n', 'output': ['436731907\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n873463814\\r\\n436731907']}, {'input': '40 50\\r\\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0\\r\\n33 26 4 19 42 43 19 32 13 23 19 1 18 43 43 43 19 31 4 25 28 23 33 37 36 23 5 12 18 32 34 1 21 22 34 35 37 16 41 39\\r\\n', 'output': ['729284231\\r\\n60340485\\r\\n239647233\\r\\n389641092\\r\\n20685064\\r\\n829280137\\r\\n389641092\\r\\n918933511\\r\\n529292419\\r\\n629288325\\r\\n366487398\\r\\n808595073\\r\\n579290372\\r\\n829280137\\r\\n829280137\\r\\n41331201\\r\\n389641092\\r\\n110338438\\r\\n239647233\\r\\n249989765\\r\\n679286278\\r\\n629288325\\r\\n426374038\\r\\n968931464\\r\\n160336391\\r\\n629288325\\r\\n49997953\\r\\n718941699\\r\\n579290372\\r\\n918933511\\r\\n539634951\\r\\n808595073\\r\\n89829960\\r\\n818937605\\r\\n539634951\\r\\n349985671\\r\\n968931464\\r\\n958588932\\r\\n210334344\\r\\n589632904']}, {'input': '41 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 2 4 2 3 2 4 3 1 1 3 1 3 2 5 3 3 5 4 4 1 1 2 3 2 1 5 5 5 4 2 2 2 1 2 4 4 5 2 1 4\\r\\n', 'output': ['394710173\\r\\n789420346\\r\\n580596339\\r\\n789420346\\r\\n185886166\\r\\n789420346\\r\\n580596339\\r\\n185886166\\r\\n394710173\\r\\n394710173\\r\\n185886166\\r\\n394710173\\r\\n581788048\\r\\n789420346\\r\\n636898629\\r\\n185886166\\r\\n185886166\\r\\n975306512\\r\\n580596339\\r\\n580596339\\r\\n394710173\\r\\n394710173\\r\\n55110581\\r\\n185886166\\r\\n55110581\\r\\n394710173\\r\\n975306512\\r\\n975306512\\r\\n975306512\\r\\n580596339\\r\\n789420346\\r\\n789420346\\r\\n789420346\\r\\n394710173\\r\\n789420346\\r\\n580596339\\r\\n580596339\\r\\n975306512\\r\\n789420346\\r\\n394710173\\r\\n580596339']}, {'input': '42 50\\r\\n0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0\\r\\n2 4 6 8 1 3 6 1 4 1 3 4 3 7 6 6 8 7 4 1 7 4 6 9 3 1 9 7 1 2 9 3 1 6 1 5 1 8 2 6 8 8\\r\\n', 'output': ['11284873\\r\\n329090227\\r\\n33854619\\r\\n45139492\\r\\n504764613\\r\\n995500935\\r\\n33854619\\r\\n504764613\\r\\n22569746\\r\\n504764613\\r\\n516049486\\r\\n22569746\\r\\n516049486\\r\\n538619232\\r\\n33854619\\r\\n33854619\\r\\n45139492\\r\\n538619232\\r\\n22569746\\r\\n504764613\\r\\n538619232\\r\\n22569746\\r\\n33854619\\r\\n549904105\\r\\n516049486\\r\\n504764613\\r\\n549904105\\r\\n538619232\\r\\n504764613\\r\\n11284873\\r\\n990014099\\r\\n516049486\\r\\n504764613\\r\\n33854619\\r\\n504764613\\r\\n527334359\\r\\n504764613\\r\\n45139492\\r\\n663667290\\r\\n33854619\\r\\n45139492\\r\\n45139492']}, {'input': '43 50\\r\\n1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n13 7 13 15 8 9 11 1 15 9 3 7 3 15 4 7 7 16 9 13 12 16 16 1 5 5 14 5 17 2 1 13 4 13 10 17 17 6 11 15 14 3 6\\r\\n', 'output': ['175780254\\r\\n94650906\\r\\n163530008\\r\\n802992688\\r\\n561362014\\r\\n881093354\\r\\n522311681\\r\\n319731340\\r\\n802992688\\r\\n881093354\\r\\n959194020\\r\\n241630674\\r\\n959194020\\r\\n802992688\\r\\n280681007\\r\\n241630674\\r\\n241630674\\r\\n124479675\\r\\n881093354\\r\\n163530008\\r\\n842043021\\r\\n124479675\\r\\n124479675\\r\\n13521558\\r\\n600412347\\r\\n600412347\\r\\n483261348\\r\\n67607790\\r\\n444211015\\r\\n639462680\\r\\n319731340\\r\\n163530008\\r\\n280681007\\r\\n163530008\\r\\n202580341\\r\\n444211015\\r\\n444211015\\r\\n920143687\\r\\n522311681\\r\\n802992688\\r\\n483261348\\r\\n959194020\\r\\n920143687']}, {'input': '44 50\\r\\n0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\r\\n2 6 6 11 2 4 11 10 5 15 15 20 20 7 9 8 17 4 16 19 12 16 12 13 2 11 20 2 6 10 2 18 7 5 18 10 15 6 11 9 7 5 17 11\\r\\n', 'output': ['327775237\\r\\n983325711\\r\\n983325711\\r\\n305397274\\r\\n327775237\\r\\n853173373\\r\\n305397274\\r\\n640631832\\r\\n320315916\\r\\n960947748\\r\\n960947748\\r\\n272889453\\r\\n283019311\\r\\n648091153\\r\\n975866390\\r\\n312856595\\r\\n290478632\\r\\n655550474\\r\\n625713190\\r\\n618253869\\r\\n968407069\\r\\n625713190\\r\\n968407069\\r\\n633172511\\r\\n327775237\\r\\n305397274\\r\\n283019311\\r\\n327775237\\r\\n983325711\\r\\n640631832\\r\\n327775237\\r\\n953488427\\r\\n648091153\\r\\n816905628\\r\\n953488427\\r\\n640631832\\r\\n960947748\\r\\n983325711\\r\\n305397274\\r\\n975866390\\r\\n648091153\\r\\n320315916\\r\\n290478632\\r\\n305397274']}, {'input': '45 50\\r\\n0 1 0 1 0 1 0 1 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 1 0\\r\\n4 4 23 23 13 23 9 16 4 18 20 15 21 24 22 20 22 1 15 7 10 17 20 6 15 7 4 10 16 7 14 9 13 17 10 14 22 23 3 5 20 11 4 24 24\\r\\n', 'output': ['630266647\\r\\n555616275\\r\\n379739073\\r\\n948743787\\r\\n301438985\\r\\n948743787\\r\\n669416691\\r\\n225976394\\r\\n555616275\\r\\n340589029\\r\\n156600176\\r\\n835755590\\r\\n563727926\\r\\n786866823\\r\\n560278630\\r\\n781592669\\r\\n970855676\\r\\n388465157\\r\\n835755590\\r\\n853405544\\r\\n889918511\\r\\n614441551\\r\\n156600176\\r\\n446277794\\r\\n117450132\\r\\n853405544\\r\\n630266647\\r\\n78300088\\r\\n225976394\\r\\n722767393\\r\\n708566735\\r\\n669416691\\r\\n58825276\\r\\n931705632\\r\\n78300088\\r\\n708566735\\r\\n970855676\\r\\n948743787\\r\\n223138897\\r\\n39150044\\r\\n781592669\\r\\n280139315\\r\\n555616275\\r\\n338964591\\r\\n786866823']}, {'input': '46 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n29 22 30 33 13 31 19 11 12 21 5 4 24 21 20 6 28 16 27 18 21 11 3 24 21 8 8 33 24 7 34 12 13 32 26 33 33 22 18 2 3 7 24 17 9 30\\r\\n', 'output': ['265429165\\r\\n98093399\\r\\n859759619\\r\\n646262275\\r\\n738585431\\r\\n455845720\\r\\n311590743\\r\\n548168876\\r\\n144254977\\r\\n502007298\\r\\n975163564\\r\\n380833110\\r\\n288509954\\r\\n502007298\\r\\n905921197\\r\\n571249665\\r\\n669343064\\r\\n525088087\\r\\n75012610\\r\\n715504642\\r\\n502007298\\r\\n548168876\\r\\n784747009\\r\\n288509954\\r\\n502007298\\r\\n761666220\\r\\n761666220\\r\\n646262275\\r\\n288509954\\r\\n167335766\\r\\n242348376\\r\\n144254977\\r\\n738585431\\r\\n51931821\\r\\n478926509\\r\\n646262275\\r\\n646262275\\r\\n98093399\\r\\n715504642\\r\\n190416555\\r\\n784747009\\r\\n167335766\\r\\n288509954\\r\\n121174188\\r\\n357752321\\r\\n859759619']}, {'input': '47 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n30 32 21 7 15 4 39 36 23 17 13 4 8 18 38 24 13 27 37 27 32 16 8 12 7 23 28 38 11 36 19 33 10 34 4 8 5 22 3 29 21 30 7 32 35 26 23\\r\\n', 'output': ['243227082\\r\\n658739962\\r\\n369907828\\r\\n456050727\\r\\n121613541\\r\\n831025760\\r\\n116546336\\r\\n491521369\\r\\n785420708\\r\\n537126421\\r\\n704345014\\r\\n831025760\\r\\n663807167\\r\\n744882861\\r\\n907034249\\r\\n993177148\\r\\n704345014\\r\\n618202115\\r\\n699277809\\r\\n618202115\\r\\n658739962\\r\\n329369981\\r\\n663807167\\r\\n496588574\\r\\n456050727\\r\\n785420708\\r\\n825958555\\r\\n907034249\\r\\n288832134\\r\\n491521369\\r\\n952639301\\r\\n866496402\\r\\n81075694\\r\\n76008489\\r\\n831025760\\r\\n663807167\\r\\n40537847\\r\\n577664268\\r\\n623269320\\r\\n35470642\\r\\n369907828\\r\\n243227082\\r\\n456050727\\r\\n658739962\\r\\n283764929\\r\\n410445675\\r\\n785420708...']}, {'input': '48 50\\r\\n1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 1\\r\\n9 42 15 12 2 9 41 13 23 14 17 42 25 10 10 2 38 36 41 31 9 20 31 41 20 41 40 28 7 37 14 25 23 38 27 17 6 40 2 19 19 3 8 32 13 22 41 20\\r\\n', 'output': ['386033769\\r\\n373559702\\r\\n643389615\\r\\n677156688\\r\\n85785282\\r\\n507867516\\r\\n317129978\\r\\n557604333\\r\\n299639299\\r\\n790016136\\r\\n959305308\\r\\n803246569\\r\\n74071672\\r\\n564297240\\r\\n564297240\\r\\n112859448\\r\\n631676005\\r\\n34981358\\r\\n760353928\\r\\n751077091\\r\\n386033769\\r\\n130350127\\r\\n751077091\\r\\n760353928\\r\\n130350127\\r\\n760353928\\r\\n717461287\\r\\n581787919\\r\\n395008068\\r\\n91411082\\r\\n790016136\\r\\n412498747\\r\\n299639299\\r\\n631676005\\r\\n159856954\\r\\n959305308\\r\\n338578344\\r\\n717461287\\r\\n112859448\\r\\n814960179\\r\\n73920403\\r\\n169289172\\r\\n451437792\\r\\n807506815\\r\\n733586412\\r\\n243209575\\r\\n317129978\\r...']}, {'input': '49 50\\r\\n0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0\\r\\n2 3 2 3 4 2 1 1 1 1 1 1 3 1 2 3 2 4 1 2 2 1 1 2 4 3 2 4 1 2 1 1 2 3 1 3 3 2 2 1 4 3 4 1 3 3 4 1 3\\r\\n', 'output': ['136570933\\r\\n703978576\\r\\n136570933\\r\\n703978576\\r\\n273141866\\r\\n136570933\\r\\n567407643\\r\\n478951804\\r\\n567407643\\r\\n567407643\\r\\n478951804\\r\\n478951804\\r\\n703978576\\r\\n567407643\\r\\n136570933\\r\\n703978576\\r\\n136570933\\r\\n273141866\\r\\n567407643\\r\\n136570933\\r\\n136570933\\r\\n567407643\\r\\n567407643\\r\\n136570933\\r\\n273141866\\r\\n703978576\\r\\n957903608\\r\\n273141866\\r\\n567407643\\r\\n136570933\\r\\n567407643\\r\\n567407643\\r\\n136570933\\r\\n703978576\\r\\n567407643\\r\\n438611059\\r\\n438611059\\r\\n136570933\\r\\n136570933\\r\\n478951804\\r\\n273141866\\r\\n703978576\\r\\n917562863\\r\\n478951804\\r\\n703978576\\r\\n703978576\\r\\n27314...']}, {'input': '50 50\\r\\n0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\\r\\n1 9 24 8 8 11 21 11 8 5 16 32 31 15 29 14 16 20 5 18 5 10 31 23 21 4 4 20 20 11 1 4 4 15 9 14 5 30 13 16 32 27 19 10 19 24 21 1 21 15\\r\\n', 'output': ['475420905\\r\\n285810733\\r\\n429413837\\r\\n935878068\\r\\n808634181\\r\\n787710167\\r\\n1395475\\r\\n787710167\\r\\n808634181\\r\\n85801616\\r\\n619024009\\r\\n748779213\\r\\n762627113\\r\\n143603104\\r\\n896947114\\r\\n666426552\\r\\n619024009\\r\\n343206464\\r\\n380615819\\r\\n571621466\\r\\n380615819\\r\\n171603232\\r\\n132672278\\r\\n952237285\\r\\n1395475\\r\\n467939034\\r\\n467939034\\r\\n524218923\\r\\n343206464\\r\\n238408190\\r\\n616106935\\r\\n467939034\\r\\n467939034\\r\\n143603104\\r\\n285810733\\r\\n639542266\\r\\n85801616\\r\\n514809696\\r\\n23435331\\r\\n619024009\\r\\n748779213\\r\\n662977597\\r\\n725343882\\r\\n761231638\\r\\n48798018\\r\\n429413837\\r\\n959313399\\r\\n61...']}, {'input': '47 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39\\r\\n', 'output': ['573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n57345...']}, {'input': '48 50\\r\\n1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 1\\r\\n42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42\\r\\n', 'output': ['612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n27123...']}, {'input': '49 50\\r\\n0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0\\r\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\\r\\n', 'output': ['371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n37100...']}, {'input': '50 50\\r\\n0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\\r\\n33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33\\r\\n', 'output': ['677141055\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141055\\r\\n67714...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n982795629\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n83495...']}, {'input': '50 50\\r\\n1 0 1 0 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 1 0 1 0 1 0 1 1 0 0 1 1 0 0 1 0 0 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n99630...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n70582...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\r\\n', 'output': ['382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n798399400\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n38299...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\r\\n', 'output': ['459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n533798960\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n45908...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n273616393\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n31116...']}, {'input': '50 50\\r\\n0 0 0 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 0 0\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['123180764\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n12318...']}, {'input': '50 50\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['80661140\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51']}, {'input': '5 5\\r\\n0 1 0 0 1\\r\\n2 4 1 2 1\\r\\n', 'output': ['665717847\\r\\n333191345\\r\\n831981100\\r\\n665717847\\r\\n831981101']}, {'input': '20 20\\r\\n0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 0\\r\\n109 1 24 122 136 42 25 112 110 15 26 48 35 10 86 13 41 6 24 15\\r\\n', 'output': ['217595927\\r\\n149660176\\r\\n322657182\\r\\n290143118\\r\\n388896876\\r\\n296261274\\r\\n86540143\\r\\n507489163\\r\\n979723241\\r\\n248413934\\r\\n896431517\\r\\n195977977\\r\\n246884395\\r\\n633562669\\r\\n891842900\\r\\n947337935\\r\\n146601098\\r\\n897961056\\r\\n597111165\\r\\n451221827']}, {'input': '100 100\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n2360379 9167688 488710 6896065 5243867 11762954 673012 1669264 265550 10921726 9383074 9523863 13429215 3223202 5372988 8197773 13052301 6045370 18630475 23534272 14923100 17181531 1112172 24623774 16991041 2363652 10720874 7171147 1261895 13127315 454592 1510882 12229327 15445105 15722482 5467131 92...', 'output': ['19790585\\r\\n929149870\\r\\n158142558\\r\\n415179791\\r\\n770973301\\r\\n197788614\\r\\n662208363\\r\\n968610058\\r\\n711622366\\r\\n89060603\\r\\n49510939\\r\\n593110743\\r\\n227455934\\r\\n197704062\\r\\n89005665\\r\\n237287745\\r\\n266986632\\r\\n365753331\\r\\n365877936\\r\\n464762563\\r\\n879788817\\r\\n148424226\\r\\n355820880\\r\\n830466826\\r\\n583301068\\r\\n553505420\\r\\n59407792\\r\\n988431747\\r\\n889537165\\r\\n425125094\\r\\n978481639\\r\\n494195332\\r\\n98957157\\r\\n850143163\\r\\n474568826\\r\\n889578801\\r\\n691943729\\r\\n751249179\\r\\n29723781\\r\\n385464681\\r\\n494219413\\r\\n968727719\\r\\n622687463\\r\\n929103141\\r\\n89090024\\r\\n563393484\\r\\n29714966\\r\\n484...']}, {'input': '1000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['652684471\\r\\n652684471\\r\\n959809060\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n652684471\\r\\n614249178\\r\\n307124589\\r\\n307124589\\r\\n307124589\\r\\n959809060\\r\\n652684471\\r\\n652684471\\r\\n959809060\\r\\n307124589\\r\\n307124589\\r\\n614249178\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n307124589\\r\\n307124589\\r\\n652684471\\r\\n268689296\\r\\n307124589\\r\\n959809060\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n614249178\\r\\n959809060\\r\\n652684471\\r\\n652684471\\r\\n307124589\\r\\n614249178\\r\\n307124589\\r\\n652684471\\r\\n652684471\\r\\n959809060\\r\\n307124589\\r\\n959809060\\r\\n307124589\\r\\n307124589\\r\\n959809060\\r\\n307124589\\r\\n95980...']}, {'input': '50000 1000\\r\\n1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 1 0 0 0 1 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 0 0 1 1 1 0 0 1 0 0 0 0 1 0 1 0 0 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 1 1 1 1 0 1 0 1 1 0 0 1 0 1 0 0 1 0 0 1 0 1 1 0 1 0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0...', 'output': ['512182090\\r\\n641172382\\r\\n697325018\\r\\n818311552\\r\\n590906119\\r\\n461103680\\r\\n370418391\\r\\n653972733\\r\\n766040380\\r\\n237657896\\r\\n893425807\\r\\n807372188\\r\\n964959592\\r\\n319396135\\r\\n111079234\\r\\n137994713\\r\\n9663504\\r\\n92358638\\r\\n965938119\\r\\n98687680\\r\\n675026792\\r\\n279244742\\r\\n15543727\\r\\n479206408\\r\\n519670811\\r\\n684652624\\r\\n777078382\\r\\n554151828\\r\\n865485075\\r\\n937290032\\r\\n565154228\\r\\n221807985\\r\\n218937300\\r\\n112386612\\r\\n310142313\\r\\n986922988\\r\\n267227503\\r\\n40988675\\r\\n369434552\\r\\n763776107\\r\\n694666611\\r\\n182771968\\r\\n494768207\\r\\n633944759\\r\\n635638470\\r\\n761724538\\r\\n162219074\\r\\n...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['967977965\\r\\n983111159\\r\\n952844771\\r\\n937711577\\r\\n937711577\\r\\n771246443\\r\\n483715757\\r\\n892311995\\r\\n967977965\\r\\n801512831\\r\\n846912413\\r\\n831779219\\r\\n967977965\\r\\n786379637\\r\\n892311995\\r\\n604781309\\r\\n710713667\\r\\n952844771\\r\\n952844771\\r\\n937711577\\r\\n874943312\\r\\n120519101\\r\\n892311995\\r\\n589648115\\r\\n619914503\\r\\n665314085\\r\\n374637533\\r\\n892311995\\r\\n937711577\\r\\n892311995\\r\\n650180891\\r\\n771246443\\r\\n922578383\\r\\n877178801\\r\\n483715757\\r\\n892311995\\r\\n952844771\\r\\n619914503\\r\\n574514921\\r\\n62834123\\r\\n907445189\\r\\n816646025\\r\\n846912413\\r\\n816646025\\r\\n937711577\\r\\n756113249\\r\\n846912...']}, {'input': '200000 3000\\r\\n0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 0 1 0 0 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 1 1 0 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 ...', 'output': ['568390992\\r\\n182388528\\r\\n352385861\\r\\n315979953\\r\\n743372559\\r\\n632628120\\r\\n995395434\\r\\n506334569\\r\\n667771666\\r\\n453192833\\r\\n680429762\\r\\n407446046\\r\\n471154985\\r\\n147648615\\r\\n936047905\\r\\n830053040\\r\\n251214636\\r\\n602162072\\r\\n263562703\\r\\n990790012\\r\\n150217484\\r\\n82075059\\r\\n932318671\\r\\n687474214\\r\\n345881774\\r\\n771937952\\r\\n356541287\\r\\n15233024\\r\\n811478946\\r\\n737405100\\r\\n892805310\\r\\n176354033\\r\\n997083988\\r\\n281716722\\r\\n628262667\\r\\n556117647\\r\\n359954433\\r\\n926451677\\r\\n992018326\\r\\n134736321\\r\\n139309832\\r\\n510415929\\r\\n125029199\\r\\n222157092\\r\\n859462710\\r\\n16077301\\r\\n83159806...']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 3 2 1 3 2 1 1 2 1 1 2 2 4 2 1 5 2 3\\r\\n', 'output': ['249561090\\r\\n249561090\\r\\n748683270\\r\\n499122180\\r\\n249561090\\r\\n748683270\\r\\n499122180\\r\\n249561090\\r\\n249561090\\r\\n499122180\\r\\n249561090\\r\\n249561090\\r\\n499122180\\r\\n499122180\\r\\n7\\r\\n499122180\\r\\n249561090\\r\\n249561097\\r\\n499122180\\r\\n748683270']}, {'input': '20 30\\r\\n1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 1 3 1 4 1 5 1 1 2 3 1 1 3 3 2 2 1 2\\r\\n', 'output': ['902255482\\r\\n806266611\\r\\n902255482\\r\\n710277740\\r\\n902255482\\r\\n537377994\\r\\n902255482\\r\\n518299998\\r\\n902255482\\r\\n902255482\\r\\n806266611\\r\\n710277740\\r\\n902255482\\r\\n902255482\\r\\n710277740\\r\\n710277740\\r\\n806266611\\r\\n806266611\\r\\n902255482\\r\\n806266611']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\r\\n3 4 1 2 1 1 1 2 5 2 1 2 3 1 1 2 3 2 1 2\\r\\n', 'output': ['441078046\\r\\n920852179\\r\\n479774133\\r\\n959548266\\r\\n479774133\\r\\n479774133\\r\\n479774133\\r\\n959548266\\r\\n402381959\\r\\n263018694\\r\\n479774133\\r\\n959548266\\r\\n441078046\\r\\n479774133\\r\\n479774133\\r\\n959548266\\r\\n441078046\\r\\n959548266\\r\\n479774133\\r\\n959548266']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0\\r\\n1 1 3 2 3 1 2 2 3 2 2 2 2 2 2 3 3 1 1 2\\r\\n', 'output': ['550803098\\r\\n550803098\\r\\n654164941\\r\\n103361843\\r\\n654164941\\r\\n550803098\\r\\n103361843\\r\\n103361843\\r\\n654164941\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n276551708\\r\\n654164941\\r\\n654164941\\r\\n138275854\\r\\n550803098\\r\\n103361843']}, {'input': '20 30\\r\\n0 0 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1\\r\\n1 2 2 2 2 2 1 1 2 1 4 1 2 5 3 4 1 1 2 1\\r\\n', 'output': ['297511613\\r\\n595023226\\r\\n756311680\\r\\n756311680\\r\\n756311680\\r\\n595023226\\r\\n297511613\\r\\n378155840\\r\\n595023226\\r\\n297511613\\r\\n514379007\\r\\n297511613\\r\\n595023226\\r\\n892534847\\r\\n136223167\\r\\n514379007\\r\\n378155840\\r\\n297511613\\r\\n595023226\\r\\n378155840']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n765 451 7275 385 1686 78 554 114 1980 394 776 232 627 760 782 7 486 32 1100 1516\\r\\n', 'output': ['491636110\\r\\n498623506\\r\\n486651408\\r\\n182179980\\r\\n6989399\\r\\n10980766\\r\\n871467875\\r\\n92836839\\r\\n509106603\\r\\n951327263\\r\\n211628580\\r\\n83852758\\r\\n11480438\\r\\n618912260\\r\\n58897200\\r\\n820057743\\r\\n605934809\\r\\n183676993\\r\\n948333237\\r\\n341401087']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1\\r\\n779 1317 1275 234 857 1531 785 265 679 767 1994 11 918 1146 1807 71 813 245 3926 580\\r\\n', 'output': ['552990868\\r\\n90431251\\r\\n712871250\\r\\n952916426\\r\\n537881559\\r\\n151361542\\r\\n321464532\\r\\n89445141\\r\\n86037605\\r\\n17799187\\r\\n586392419\\r\\n241031286\\r\\n40642277\\r\\n699465709\\r\\n481837969\\r\\n920500985\\r\\n572000768\\r\\n195703359\\r\\n903238702\\r\\n911489090']}, {'input': '20 30\\r\\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n128 574 205 490 611 1294 283 1690 1466 1896 272 19 1020 5032 357 1500 36 1749 1202 176\\r\\n', 'output': ['389864218\\r\\n157345415\\r\\n537589523\\r\\n962131647\\r\\n753565149\\r\\n104281847\\r\\n378440811\\r\\n873692367\\r\\n690552162\\r\\n658861420\\r\\n578900375\\r\\n198248582\\r\\n923070965\\r\\n228091231\\r\\n572635926\\r\\n887695253\\r\\n795942304\\r\\n70748620\\r\\n510359933\\r\\n785624388']}, {'input': '20 30\\r\\n1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0\\r\\n61 849 320 1007 624 441 1332 3939 1176 718 419 634 657 914 858 882 1019 1567 62 2521\\r\\n', 'output': ['514012356\\r\\n393871659\\r\\n166092575\\r\\n569465276\\r\\n74319433\\r\\n306884170\\r\\n254628439\\r\\n656312237\\r\\n485609669\\r\\n216694535\\r\\n825782618\\r\\n110704962\\r\\n294216114\\r\\n131255421\\r\\n733108087\\r\\n613768340\\r\\n14181299\\r\\n610566194\\r\\n624888021\\r\\n887363731']}, {'input': '20 30\\r\\n0 1 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 0 0\\r\\n244 1901 938 1350 1010 763 318 2158 1645 534 1356 563 295 1449 2306 224 1302 195 639 810\\r\\n', 'output': ['300071414\\r\\n595185476\\r\\n40756239\\r\\n113904636\\r\\n440148868\\r\\n947268885\\r\\n456535325\\r\\n542868956\\r\\n183161324\\r\\n427608407\\r\\n61171180\\r\\n375813928\\r\\n43680359\\r\\n55509680\\r\\n30410255\\r\\n360521133\\r\\n535772284\\r\\n722568686\\r\\n663107799\\r\\n390646234']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n126679203 179924771 16639504 67055540 14134870 36407782 15024189 39367944 121531542 5400023 5834434 8539193 3686913 11287136 36370086 71808281 138206490 59846864 19052959 21446598\\r\\n', 'output': ['615913610\\r\\n488825486\\r\\n773371096\\r\\n742795989\\r\\n193664548\\r\\n323188752\\r\\n32686082\\r\\n709701410\\r\\n293733249\\r\\n161181348\\r\\n193396792\\r\\n354491196\\r\\n708550409\\r\\n644392716\\r\\n323187536\\r\\n646345011\\r\\n487479735\\r\\n1930544\\r\\n322628919\\r\\n966734748']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\\r\\n144831196 28660251 62050800 52660762 23189000 12771861 73096012 25119113 119648684 16011144 51600638 74708999 6312006 26945863 68746869 58112898 5070 19157938 74351320 60263898\\r\\n', 'output': ['132556548\\r\\n711988928\\r\\n6999755\\r\\n208709864\\r\\n320161276\\r\\n865416376\\r\\n320896979\\r\\n458941660\\r\\n671806481\\r\\n158009043\\r\\n351362956\\r\\n78248147\\r\\n927871852\\r\\n882014191\\r\\n988190329\\r\\n830735503\\r\\n1958329\\r\\n787106839\\r\\n942059547\\r\\n341315444']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0\\r\\n34095514 37349809 60555988 40280455 19504485 77297461 41415742 66290058 20631093 185280391 7151718 64927972 15611855 4317891 24600598 24588269 60808977 9108470 13217752 191209824\\r\\n', 'output': ['313283482\\r\\n21804622\\r\\n682197550\\r\\n361027027\\r\\n756362680\\r\\n151917509\\r\\n716108102\\r\\n131732975\\r\\n237068086\\r\\n731869119\\r\\n190595295\\r\\n847684643\\r\\n847454143\\r\\n501579235\\r\\n129856516\\r\\n246699402\\r\\n205385635\\r\\n639100445\\r\\n614421017\\r\\n227076269']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0\\r\\n9380933 34450681 12329733 7732927 73910078 16165679 149467043 56914401 21809098 36934833 71019254 168559440 12033996 40465391 7156881 3312348 37150678 130625432 42709585 66115911\\r\\n', 'output': ['813231583\\r\\n458087744\\r\\n445793615\\r\\n651101155\\r\\n484645642\\r\\n506668954\\r\\n896602699\\r\\n556862659\\r\\n145127201\\r\\n302005399\\r\\n558418033\\r\\n213871822\\r\\n57299634\\r\\n564466143\\r\\n767349204\\r\\n290138481\\r\\n12657688\\r\\n925337836\\r\\n827843024\\r\\n119362169']}, {'input': '20 30\\r\\n0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 0 1 0 1\\r\\n66166717 200301718 6725634 95379617 42880832 48874211 64912554 36809296 13248978 58406666 53142218 45080678 19902257 58554006 23570140 14484661 7589423 78746789 11072716 52395211\\r\\n', 'output': ['823107880\\r\\n742699237\\r\\n987770596\\r\\n549924308\\r\\n730188349\\r\\n913535291\\r\\n936423447\\r\\n122869154\\r\\n581668441\\r\\n749452306\\r\\n615454312\\r\\n176148736\\r\\n874336841\\r\\n897418997\\r\\n235568492\\r\\n24727530\\r\\n143875067\\r\\n15270097\\r\\n200154604\\r\\n356406452']}, {'input': '20 30\\r\\n0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661\\r\\n', 'output': ['76898501\\r\\n989279651\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803\\r\\n', 'output': ['504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981']}, {'input': '2000 300\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1...', 'output': ['527557309\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n819771096\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n762900831\\r\\n762900831\\r\\n292213787\\r\\n762900831\\r\\n527557309\\r\\n292213787\\r\\n762900831\\r\\n292213787\\r\\n527557309\\r\\n762900831\\r\\n292213787\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n819771096\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n292213787\\r\\n762900831\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n762900831\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n76290...', '126026410\\r\\n26532090\\r\\n89545496\\r\\n348227668\\r\\n407921745\\r\\n822476105\\r\\n815841057\\r\\n129343473\\r\\n683184486\\r\\n182403525\\r\\n971714643\\r\\n669922973\\r\\n195669656\\r\\n643389211\\r\\n596958847\\r\\n991612114\\r\\n26531426\\r\\n494147799\\r\\n587007825\\r\\n646703323\\r\\n192353616\\r\\n198987665\\r\\n116075186\\r\\n208935334\\r\\n451035127\\r\\n991612774\\r\\n630129722\\r\\n673238446\\r\\n965081504\\r\\n404604334\\r\\n762781111\\r\\n945182265\\r\\n613540647\\r\\n855640163\\r\\n540577710\\r\\n739563385\\r\\n185720640\\r\\n13265829\\r\\n460984258\\r\\n182404969\\r\\n988297561\\r\\n726301539\\r\\n301795019\\r\\n46434122\\r\\n882170987\\r\\n533948601\\r\\n729615799\\r...', '257947573\\r\\n350833899\\r\\n998147431\\r\\n282054341\\r\\n689337877\\r\\n802790225\\r\\n636332064\\r\\n611526839\\r\\n405886622\\r\\n295781176\\r\\n577883978\\r\\n211877869\\r\\n476761551\\r\\n471920813\\r\\n313000296\\r\\n8886097\\r\\n165109708\\r\\n231143899\\r\\n91489412\\r\\n972042214\\r\\n584771626\\r\\n771892731\\r\\n841370746\\r\\n736106038\\r\\n702414716\\r\\n368751476\\r\\n510452873\\r\\n253155296\\r\\n619859862\\r\\n14376831\\r\\n37833603\\r\\n94933236\\r\\n485696109\\r\\n96233228\\r\\n33691322\\r\\n403791251\\r\\n233190809\\r\\n447164049\\r\\n173248887\\r\\n549683390\\r\\n863382143\\r\\n717538465\\r\\n704413165\\r\\n210480955\\r\\n414122723\\r\\n922528686\\r\\n131321464\\r\\n40...', '723727157\\r\\n723727157\\r\\n898419922\\r\\n449209961\\r\\n898419922\\r\\n174692765\\r\\n723727157\\r\\n723727157\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n174692765\\r\\n723727157\\r\\n174692765\\r\\n723727157\\r\\n723727157\\r\\n623902726\\r\\n723727157\\r\\n723727157\\r\\n449209961\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n174692765\\r\\n723727157\\r\\n449209961\\r\\n349385530\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n623902726\\r\\n449209961\\r\\n449209961\\r\\n898419922\\r\\n898419922\\r\\n723727157\\r\\n449209961\\r\\n723727157\\r\\n723727157\\r\\n723727157\\r\\n174692765\\r\\n17469...', '449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n44954...', '228892698\\r\\n323233274\\r\\n31331450\\r\\n583630535\\r\\n530020844\\r\\n200867506\\r\\n762566026\\r\\n461091654\\r\\n900597519\\r\\n687197433\\r\\n232025843\\r\\n294169404\\r\\n557699810\\r\\n988325579\\r\\n966739790\\r\\n633933968\\r\\n156657250\\r\\n762046687\\r\\n338898999\\r\\n134379009\\r\\n458304735\\r\\n975792999\\r\\n343970609\\r\\n589896825\\r\\n188161813\\r\\n733675269\\r\\n708610109\\r\\n303222613\\r\\n919742615\\r\\n718701996\\r\\n235158988\\r\\n5746951\\r\\n831841442\\r\\n194601216\\r\\n389029319\\r\\n946729129\\r\\n65449819\\r\\n768486090\\r\\n213226973\\r\\n847160941\\r\\n853773457\\r\\n913476325\\r\\n847334054\\r\\n435334042\\r\\n997551901\\r\\n781018670\\r\\n847334054...', '280562572\\r\\n27981324\\r\\n930424996\\r\\n580126064\\r\\n653672085\\r\\n638998124\\r\\n192370181\\r\\n304975360\\r\\n268606553\\r\\n887998181\\r\\n902057157\\r\\n419880164\\r\\n965999027\\r\\n37849969\\r\\n655704617\\r\\n915939588\\r\\n290316653\\r\\n133632797\\r\\n916310849\\r\\n291352554\\r\\n315435621\\r\\n753760137\\r\\n617080324\\r\\n863678858\\r\\n719694519\\r\\n658038314\\r\\n750307459\\r\\n915589744\\r\\n530437886\\r\\n512060713\\r\\n157922588\\r\\n178644172\\r\\n5715303\\r\\n194942404\\r\\n852097346\\r\\n696406228\\r\\n891303846\\r\\n489183600\\r\\n892182349\\r\\n437838373\\r\\n390449491\\r\\n931412865\\r\\n520118475\\r\\n724052962\\r\\n624309238\\r\\n315358057\\r\\n157108994...']}, {'input': '2000 300\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...', 'output': ['510770111\\r\\n586552453\\r\\n521518610\\r\\n729496815\\r\\n925336870\\r\\n218501419\\r\\n210003823\\r\\n721775463\\r\\n410294316\\r\\n59753754\\r\\n445916833\\r\\n149785626\\r\\n397166471\\r\\n850878761\\r\\n322612228\\r\\n400512598\\r\\n962933991\\r\\n238352988\\r\\n481795882\\r\\n312429269\\r\\n230724223\\r\\n668360989\\r\\n538774766\\r\\n7521020\\r\\n782227455\\r\\n932947153\\r\\n766620629\\r\\n621895347\\r\\n948462500\\r\\n49828435\\r\\n465611859\\r\\n508795684\\r\\n965408363\\r\\n876217222\\r\\n27461852\\r\\n849541586\\r\\n889517699\\r\\n887546242\\r\\n347913548\\r\\n274305965\\r\\n434804057\\r\\n916014055\\r\\n822187302\\r\\n339400794\\r\\n604867800\\r\\n368133826\\r\\n799958426\\r...', '738045334\\r\\n159282105\\r\\n578763229\\r\\n578763229\\r\\n477846315\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n578763229\\r\\n738045334\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n578763229\\r\\n578763229\\r\\n578763229\\r\\n159282105\\r\\n578763229\\r\\n318564210\\r\\n578763229\\r\\n578763229\\r\\n159282105\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n159282105\\r\\n578763229\\r\\n159282105\\r\\n738045334\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n578763229\\r\\n738045334\\r\\n159282105\\r\\n738045334\\r\\n318564210\\r\\n73804...', '536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n53653...', '544865927\\r\\n362689553\\r\\n554047941\\r\\n662901553\\r\\n528631083\\r\\n623245685\\r\\n408599623\\r\\n383515404\\r\\n454842332\\r\\n96411147\\r\\n49835799\\r\\n979215047\\r\\n123957189\\r\\n241194187\\r\\n232012173\\r\\n930510515\\r\\n682596137\\r\\n940690446\\r\\n985602599\\r\\n592905181\\r\\n837226469\\r\\n463026429\\r\\n366947921\\r\\n259890854\\r\\n259558215\\r\\n423037922\\r\\n336940056\\r\\n739152127\\r\\n906091574\\r\\n273663875\\r\\n103463977\\r\\n218239152\\r\\n323832313\\r\\n988397061\\r\\n861312771\\r\\n369742383\\r\\n261687399\\r\\n997579075\\r\\n494364850\\r\\n668490477\\r\\n306599552\\r\\n268740229\\r\\n776878100\\r\\n482521724\\r\\n140192033\\r\\n252172746\\r\\n5279658...', '156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n52020618\\r\\n104041236\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n156061854\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n208082472\\r\\n208082472\\r\\n104041236\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n156061854\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n156061854\\r\\n52020618\\r...', '696015721\\r\\n931773777\\r\\n559486112\\r\\n847360916\\r\\n520999237\\r\\n330674091\\r\\n901387332\\r\\n817005789\\r\\n311776972\\r\\n19589756\\r\\n894472615\\r\\n644360731\\r\\n540588993\\r\\n761762342\\r\\n387103251\\r\\n712279217\\r\\n24626123\\r\\n870308250\\r\\n487286532\\r\\n403104550\\r\\n728773592\\r\\n564260282\\r\\n775161336\\r\\n604919022\\r\\n382066884\\r\\n133895986\\r\\n14584707\\r\\n323728056\\r\\n371794589\\r\\n189832070\\r\\n664212684\\r\\n375120849\\r\\n841631912\\r\\n277833388\\r\\n899970740\\r\\n674023221\\r\\n550168651\\r\\n205864687\\r\\n292155898\\r\\n484652909\\r\\n899246785\\r\\n641496229\\r\\n604195067\\r\\n520275282\\r\\n140579824\\r\\n200828320\\r\\n88943624...', '381761597\\r\\n749914123\\r\\n734966985\\r\\n451112838\\r\\n254375974\\r\\n408043495\\r\\n50147455\\r\\n317426730\\r\\n691474180\\r\\n297424671\\r\\n16576556\\r\\n950550287\\r\\n615062290\\r\\n508772409\\r\\n574097914\\r\\n755479957\\r\\n504073337\\r\\n232598914\\r\\n376960541\\r\\n704800943\\r\\n722703963\\r\\n943084953\\r\\n852281936\\r\\n604167024\\r\\n430991955\\r\\n691776511\\r\\n979477939\\r\\n916779041\\r\\n928976757\\r\\n9004809\\r\\n66623088\\r\\n160364271\\r\\n569831785\\r\\n753768578\\r\\n10158931\\r\\n829943628\\r\\n860984852\\r\\n599688760\\r\\n746963293\\r\\n90503616\\r\\n665117495\\r\\n843614199\\r\\n773004798\\r\\n52464119\\r\\n40225734\\r\\n193061049\\r\\n476979003\\r\\n451...']}, {'input': '2000 300\\r\\n1 1 1 0 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 1 0...', 'output': ['520991218\\r\\n260495609\\r\\n781486827\\r\\n281527765\\r\\n460706912\\r\\n260495609\\r\\n43738083\\r\\n819065206\\r\\n639886059\\r\\n260495609\\r\\n639886059\\r\\n520991218\\r\\n520991218\\r\\n639886059\\r\\n819065206\\r\\n520991218\\r\\n639886059\\r\\n819065206\\r\\n639886059\\r\\n43738083\\r\\n781486827\\r\\n260495609\\r\\n520991218\\r\\n781486827\\r\\n819065206\\r\\n639886059\\r\\n281527765\\r\\n819065206\\r\\n460706912\\r\\n260495609\\r\\n639886059\\r\\n260495609\\r\\n304233692\\r\\n781486827\\r\\n260495609\\r\\n260495609\\r\\n43738083\\r\\n260495609\\r\\n639886059\\r\\n260495609\\r\\n819065206\\r\\n520991218\\r\\n520991218\\r\\n639886059\\r\\n639886059\\r\\n460706912\\r\\n26049560...']}, {'input': '2000 300\\r\\n1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 1 1 0 1 0 1 0 0 0 1 1 0 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 1 0 0 1 0 1 0 1 0 1 0 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 1 1 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1...', 'output': ['967309723\\r\\n488979754\\r\\n894231131\\r\\n227079250\\r\\n800673042\\r\\n803173636\\r\\n302660701\\r\\n49359452\\r\\n361182334\\r\\n613837368\\r\\n903714465\\r\\n783149148\\r\\n772569418\\r\\n153771444\\r\\n347053203\\r\\n383800081\\r\\n305903959\\r\\n591371347\\r\\n504143617\\r\\n554819601\\r\\n711091639\\r\\n993123371\\r\\n662636534\\r\\n799549517\\r\\n755795853\\r\\n257472564\\r\\n749178682\\r\\n44165553\\r\\n754769201\\r\\n677121173\\r\\n77251408\\r\\n825363165\\r\\n94378162\\r\\n905743915\\r\\n555723948\\r\\n401067893\\r\\n365827394\\r\\n778249947\\r\\n641361749\\r\\n657808321\\r\\n76885722\\r\\n205390090\\r\\n357248290\\r\\n762413024\\r\\n471855369\\r\\n953559875\\r\\n452364595\\r...']}, {'input': '2000 300\\r\\n1 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 0 1 0 0 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 1 0 1 0 1 0 0 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 0 0 1 0 0 0 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 0 0 1 1 0 1...', 'output': ['353668818\\r\\n180952778\\r\\n350267066\\r\\n85276305\\r\\n498935339\\r\\n570367769\\r\\n947922902\\r\\n520199571\\r\\n977020824\\r\\n311854081\\r\\n369942273\\r\\n709342799\\r\\n241020253\\r\\n306637091\\r\\n574362410\\r\\n924893301\\r\\n259050261\\r\\n881412462\\r\\n505397126\\r\\n426307000\\r\\n368001455\\r\\n187561592\\r\\n507502858\\r\\n422600821\\r\\n840032307\\r\\n570586935\\r\\n847077944\\r\\n633577890\\r\\n21924242\\r\\n429617104\\r\\n40169532\\r\\n200231692\\r\\n301247265\\r\\n526536756\\r\\n236599712\\r\\n449404280\\r\\n482154139\\r\\n74891321\\r\\n744845075\\r\\n202529472\\r\\n497487224\\r\\n750227627\\r\\n791509388\\r\\n365064757\\r\\n435991351\\r\\n911452637\\r\\n230155510...']}, {'input': '200000 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n83030...', '746090912\\r\\n987874942\\r\\n493937471\\r\\n493937471\\r\\n241784030\\r\\n493937471\\r\\n746090912\\r\\n241784030\\r\\n746090912\\r\\n987874942\\r\\n493937471\\r\\n241784030\\r\\n493937471\\r\\n493937471\\r\\n987874942\\r\\n493937471\\r\\n987874942\\r\\n746090912\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n493937471\\r\\n493937471\\r\\n483568060\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n241784030\\r\\n746090912\\r\\n746090912\\r\\n987874942\\r\\n493937471\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n746090912\\r\\n241784030\\r\\n493937471\\r\\n746090912\\r\\n241784030\\r\\n493937471\\r\\n49393...', '249477932\\r\\n163324885\\r\\n619370540\\r\\n591761649\\r\\n381202278\\r\\n400495236\\r\\n181619933\\r\\n483987183\\r\\n768059384\\r\\n853879792\\r\\n648642618\\r\\n525566838\\r\\n955999425\\r\\n754753895\\r\\n409143808\\r\\n470016419\\r\\n322658124\\r\\n100123809\\r\\n150684670\\r\\n101454359\\r\\n634006577\\r\\n229187060\\r\\n466357410\\r\\n35592186\\r\\n769389935\\r\\n547853534\\r\\n85820409\\r\\n289061762\\r\\n201245531\\r\\n244821008\\r\\n910095485\\r\\n40581744\\r\\n910760760\\r\\n733797749\\r\\n450390828\\r\\n440079067\\r\\n811634863\\r\\n573799237\\r\\n619703176\\r\\n460037301\\r\\n90144696\\r\\n512261348\\r\\n656958547\\r\\n636002401\\r\\n271099351\\r\\n573799237\\r\\n748766427...', '337242164\\r\\n175981139\\r\\n705993748\\r\\n951319188\\r\\n208728534\\r\\n926966446\\r\\n894219051\\r\\n142402527\\r\\n394342301\\r\\n747271382\\r\\n832167014\\r\\n925728471\\r\\n915824671\\r\\n371227534\\r\\n265828671\\r\\n404110515\\r\\n737503168\\r\\n526705442\\r\\n275596885\\r\\n225789012\\r\\n140757794\\r\\n548311062\\r\\n834642964\\r\\n960680644\\r\\n982693022\\r\\n298440480\\r\\n97139796\\r\\n357880981\\r\\n649164783\\r\\n74025029\\r\\n270644985\\r\\n37970467\\r\\n945129313\\r\\n422137796\\r\\n739979118\\r\\n389390401\\r\\n815106536\\r\\n311922619\\r\\n858860120\\r\\n411267193\\r\\n976503147\\r\\n835880939\\r\\n13346553\\r\\n661137775\\r\\n978979097\\r\\n527943417\\r\\n707231723...', '895547075\\r\\n50488475\\r\\n972784199\\r\\n737802803\\r\\n134349212\\r\\n579628449\\r\\n120501272\\r\\n588315405\\r\\n599840552\\r\\n714837825\\r\\n262849659\\r\\n448375127\\r\\n596572279\\r\\n172710075\\r\\n108458976\\r\\n317466571\\r\\n845058600\\r\\n348860806\\r\\n506174996\\r\\n501269960\\r\\n76979425\\r\\n561049607\\r\\n754144168\\r\\n500496863\\r\\n56852638\\r\\n736253107\\r\\n323142953\\r\\n631062404\\r\\n987492303\\r\\n864152840\\r\\n155163780\\r\\n16686131\\r\\n341291713\\r\\n213479047\\r\\n623578627\\r\\n815212310\\r\\n74571316\\r\\n580316230\\r\\n11782846\\r\\n9977202\\r\\n56164857\\r\\n453363728\\r\\n283577160\\r\\n112674480\\r\\n770828548\\r\\n441236116\\r\\n475210843\\r\\n997...', '743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n74369...', '743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n74369...', '34499784\\r\\n374247743\\r\\n362747815\\r\\n297560637\\r\\n574121750\\r\\n869682055\\r\\n449997441\\r\\n458622387\\r\\n930182193\\r\\n940681955\\r\\n376622642\\r\\n28249737\\r\\n622933686\\r\\n969931858\\r\\n400622664\\r\\n671871138\\r\\n811807848\\r\\n331623096\\r\\n223311188\\r\\n305748258\\r\\n203623639\\r\\n439935004\\r\\n185436339\\r\\n481622243\\r\\n517559518\\r\\n585621678\\r\\n66124586\\r\\n679996001\\r\\n894244918\\r\\n45999712\\r\\n243436062\\r\\n887057463\\r\\n525184298\\r\\n990056732\\r\\n154311620\\r\\n198873841\\r\\n227623661\\r\\n430809975\\r\\n12937419\\r\\n194561368\\r\\n140374035\\r\\n610059025\\r\\n715495951\\r\\n677058261\\r\\n731308352\\r\\n710120554\\r\\n143749100\\r...', '743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n74369...', '563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n56365...', '948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n94886...', '616415891\\r\\n743692045\\r\\n743692045\\r\\n616415891\\r\\n489139737\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n870968199\\r\\n616415891\\r\\n743692045\\r\\n616415891\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n489139737\\r\\n870968199\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n616415891\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n361863583\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n870968199\\r\\n616415891\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n107311275\\r\\n743692045\\r\\n870968199\\r\\n870968199\\r\\n87096...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['534464893\\r\\n70685433\\r\\n141370866\\r\\n605150326\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n605150326\\r\\n605150326\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n141370866\\r\\n70685433\\r\\n534464893\\r\\n141370866\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n605150326\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n...', '434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n43434...', '479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n47934...', '983882738\\r\\n723119688\\r\\n459823065\\r\\n556901314\\r\\n70724963\\r\\n266615302\\r\\n669551615\\r\\n128160584\\r\\n374823721\\r\\n636048406\\r\\n410086236\\r\\n880577836\\r\\n119251355\\r\\n80183061\\r\\n594759171\\r\\n13376576\\r\\n422252375\\r\\n548479185\\r\\n235532967\\r\\n555429175\\r\\n697576973\\r\\n194705367\\r\\n244991065\\r\\n696417466\\r\\n575930209\\r\\n911572937\\r\\n690252582\\r\\n173917166\\r\\n286156762\\r\\n203240195\\r\\n371392343\\r\\n232850391\\r\\n10955702\\r\\n65159878\\r\\n81942367\\r\\n928468125\\r\\n286592932\\r\\n499727395\\r\\n803102816\\r\\n81855133\\r\\n235158566\\r\\n824901521\\r\\n295851097\\r\\n716980269\\r\\n913157775\\r\\n996485047\\r\\n807919099\\r\\n4...', '535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n53563...', '483259721\\r\\n483259721\\r\\n451534810\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n709027126\\r\\n483259721\\r\\n966519442\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n740752037\\r\\n225767405\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n451534810\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n966519442\\r\\n225767405\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n225767405\\r\\n740752037\\r\\n483259721\\r\\n225767405\\r\\n740752037\\r\\n74075...', '365182673\\r\\n453133330\\r\\n646237559\\r\\n383557795\\r\\n419033749\\r\\n340436101\\r\\n116418016\\r\\n678527788\\r\\n945667567\\r\\n79030627\\r\\n870994872\\r\\n815130278\\r\\n370916978\\r\\n677151415\\r\\n467150520\\r\\n882361399\\r\\n890542201\\r\\n249936864\\r\\n39196741\\r\\n947579002\\r\\n636680384\\r\\n295607138\\r\\n675342063\\r\\n808325849\\r\\n29104504\\r\\n25918779\\r\\n103037971\\r\\n291784268\\r\\n445589673\\r\\n215200138\\r\\n658241231\\r\\n704446567\\r\\n478414964\\r\\n374535682\\r\\n193639291\\r\\n871632017\\r\\n186732779\\r\\n291784268\\r\\n138616008\\r\\n491795009\\r\\n475331322\\r\\n689894315\\r\\n243667497\\r\\n853256895\\r\\n714003742\\r\\n774124185\\r\\n363271238...', '985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n98542...', '155925765\\r\\n487818429\\r\\n547205425\\r\\n780737503\\r\\n891037610\\r\\n578930143\\r\\n825301017\\r\\n138861660\\r\\n552655747\\r\\n896394864\\r\\n881431780\\r\\n167493014\\r\\n480546290\\r\\n147428613\\r\\n697960072\\r\\n762448385\\r\\n870903408\\r\\n251332589\\r\\n614973238\\r\\n898519152\\r\\n581333635\\r\\n223833180\\r\\n271513325\\r\\n829479792\\r\\n130457576\\r\\n488950374\\r\\n631091534\\r\\n259853008\\r\\n403102846\\r\\n643511524\\r\\n491144463\\r\\n683066789\\r\\n279987210\\r\\n916459265\\r\\n497517327\\r\\n461078693\\r\\n513286618\\r\\n11055375\\r\\n943036132\\r\\n453946156\\r\\n770116063\\r\\n285321197\\r\\n954649915\\r\\n686299755\\r\\n305432132\\r\\n314991428\\r\\n917591...', '979248391\\r\\n467909552\\r\\n175190733\\r\\n498757573\\r\\n436634896\\r\\n282945489\\r\\n831422982\\r\\n525572199\\r\\n608769567\\r\\n291190788\\r\\n623553625\\r\\n907228321\\r\\n19120025\\r\\n908756352\\r\\n635157558\\r\\n367120190\\r\\n895500325\\r\\n121864053\\r\\n271093430\\r\\n805461626\\r\\n799170993\\r\\n621048261\\r\\n209948086\\r\\n214834751\\r\\n291190788\\r\\n88084033\\r\\n941559039\\r\\n256433435\\r\\n462472189\\r\\n261870798\\r\\n718354926\\r\\n62673375\\r\\n599120300\\r\\n207566785\\r\\n71042737\\r\\n669914911\\r\\n844128311\\r\\n594233635\\r\\n758976277\\r\\n186492094\\r\\n238841441\\r\\n949377703\\r\\n280013490\\r\\n621474896\\r\\n309333480\\r\\n356245464\\r\\n817740320...']}, {'input': '200000 3000\\r\\n0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 1 1 1 0 1 1 0 0 1 0 0 0 1 1 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 1 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 1 0 0 1 0 0 0 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 0 0 1 0 0 0 1 1 0 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 ...', 'output': ['684128648\\r\\n534537704\\r\\n70831055\\r\\n605368759\\r\\n605368759\\r\\n534537704\\r\\n55897238\\r\\n70831055\\r\\n534537704\\r\\n534537704\\r\\n605368759\\r\\n684128648\\r\\n55897238\\r\\n740025886\\r\\n534537704\\r\\n70831055\\r\\n70831055\\r\\n684128648\\r\\n70831055\\r\\n684128648\\r\\n425910181\\r\\n70831055\\r\\n605368759\\r\\n534537704\\r\\n534537704\\r\\n605368759\\r\\n684128648\\r\\n70831055\\r\\n684128648\\r\\n605368759\\r\\n70831055\\r\\n370012943\\r\\n370012943\\r\\n370012943\\r\\n605368759\\r\\n70831055\\r\\n534537704\\r\\n70831055\\r\\n370012943\\r\\n141662110\\r\\n534537704\\r\\n370012943\\r\\n370012943\\r\\n70831055\\r\\n684128648\\r\\n370012943\\r\\n684128648\\r\\n5345377...']}, {'input': '200000 3000\\r\\n1 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 1 1 0 1 1 1 1 0 0 1 0 1 0 0 1 0 1 1 0 1 0 1 1 0 0 1 1 0 0 1 0 1 0 1 1 0 0 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 1 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 0 1 0 0 0 1 1 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ...', 'output': ['331265679\\r\\n248932636\\r\\n609274319\\r\\n474255977\\r\\n102055814\\r\\n485644908\\r\\n626044190\\r\\n431097835\\r\\n319780031\\r\\n47044666\\r\\n687413158\\r\\n404806427\\r\\n125126455\\r\\n282606731\\r\\n307585492\\r\\n584577913\\r\\n604465119\\r\\n366599088\\r\\n490459582\\r\\n11853006\\r\\n753101524\\r\\n749114305\\r\\n816668970\\r\\n25465595\\r\\n942396724\\r\\n387086401\\r\\n558715961\\r\\n470999022\\r\\n908318742\\r\\n535377307\\r\\n712631115\\r\\n501708418\\r\\n465458062\\r\\n906281962\\r\\n309027298\\r\\n466289495\\r\\n88346508\\r\\n21689911\\r\\n46580591\\r\\n650678352\\r\\n435081076\\r\\n202663995\\r\\n554027989\\r\\n280201535\\r\\n865380747\\r\\n516485969\\r\\n226759102\\r\\n...']}, {'input': '200000 3000\\r\\n0 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 ...', 'output': ['702758762\\r\\n222668721\\r\\n663197048\\r\\n675792950\\r\\n759259581\\r\\n332486741\\r\\n171127920\\r\\n414458191\\r\\n349087590\\r\\n847918503\\r\\n522872021\\r\\n540727038\\r\\n813504457\\r\\n278812310\\r\\n949679696\\r\\n784095578\\r\\n918470307\\r\\n482110597\\r\\n535952792\\r\\n109088580\\r\\n967478176\\r\\n268019403\\r\\n523209396\\r\\n80286422\\r\\n566422901\\r\\n182974112\\r\\n166764579\\r\\n716767192\\r\\n203579125\\r\\n975507557\\r\\n770975186\\r\\n884777286\\r\\n433828625\\r\\n891459014\\r\\n519109900\\r\\n907459392\\r\\n591988953\\r\\n479131884\\r\\n989822907\\r\\n846824242\\r\\n304414023\\r\\n13755521\\r\\n6710438\\r\\n355497544\\r\\n718926904\\r\\n912736930\\r\\n173287893...']}, {'input': '10 3000\\r\\n1 1 1 1 1 0 0 0 1 1\\r\\n6 22 5 2 4 15 4 7 31 4\\r\\n', 'output': ['561258918\\r\\n61460660\\r\\n467715765\\r\\n187086306\\r\\n374172612\\r\\n538110090\\r\\n143496024\\r\\n251118042\\r\\n903349037\\r\\n374172612']}, {'input': '100 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n10 8 1 9 7 5 12 9 15 7 16 5 17 5 17 21 11 3 4 4 30 17 3 84 12 30 2 8 2 2 22 24 15 11 15 13 7 17 1 12 8 4 3 6 5 15 1 3 4 2 27 3 11 11 3 3 3 5 14 2 5 13 6 2 6 5 6 19 3 16 4 12 11 2 2 3 25 14 6 11 22 4 10 32 9 19 14 2 2 3 4 3 2 5 18 14 2 7 3 8\\r\\n', 'output': ['23677346\\r\\n418239618\\r\\n800963217\\r\\n220958482\\r\\n615520754\\r\\n11838673\\r\\n627359427\\r\\n220958482\\r\\n35516019\\r\\n615520754\\r\\n836479236\\r\\n11838673\\r\\n639198100\\r\\n11838673\\r\\n639198100\\r\\n848317909\\r\\n824640563\\r\\n406400945\\r\\n209119809\\r\\n209119809\\r\\n71032038\\r\\n639198100\\r\\n406400945\\r\\n398538577\\r\\n627359427\\r\\n71032038\\r\\n603682081\\r\\n418239618\\r\\n19778681\\r\\n603682081\\r\\n651036773\\r\\n256474501\\r\\n35516019\\r\\n824640563\\r\\n35516019\\r\\n430078291\\r\\n615520754\\r\\n639198100\\r\\n800963217\\r\\n627359427\\r\\n418239618\\r\\n209119809\\r\\n406400945\\r\\n812801890\\r\\n11838673\\r\\n35516019\\r\\n800963217\\r\\n406400...']}, {'input': '1000 3000\\r\\n0 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 ...', 'output': ['984664827\\r\\n971085301\\r\\n837724678\\r\\n984664827\\r\\n225735001\\r\\n971085301\\r\\n984664827\\r\\n611989677\\r\\n65215326\\r\\n611989677\\r\\n837724678\\r\\n984664827\\r\\n225735001\\r\\n984664827\\r\\n971085301\\r\\n225735001\\r\\n225735001\\r\\n984664827\\r\\n971085301\\r\\n957505775\\r\\n971085301\\r\\n984664827\\r\\n943926249\\r\\n225735001\\r\\n971085301\\r\\n611989677\\r\\n837724678\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n984664827\\r\\n971085301\\r\\n943926249\\r\\n943926249\\r\\n611989677\\r\\n971085301\\r\\n984664827\\r\\n957505775\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n971085301\\r\\n225735001\\r\\n837724678\\r\\n611989...']}, {'input': '1000 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n5\\r\\n5\\r\\n499122184\\r\\n10\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122184\\r\\n5\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122184\\r\\n5...']}, {'input': '199990 3000\\r\\n1 0 0 1 0 1 1 0 0 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 0 1 1 0 0 1 0 0 1 1 0 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 0 0 1 0 1 0 ...', 'output': ['646452156\\r\\n960868656\\r\\n118518242\\r\\n184272685\\r\\n747024268\\r\\n964037469\\r\\n951101180\\r\\n377347150\\r\\n254993892\\r\\n11139421\\r\\n70322210\\r\\n525571057\\r\\n926475930\\r\\n63428346\\r\\n756018063\\r\\n626131891\\r\\n466781454\\r\\n656042659\\r\\n69698706\\r\\n359694160\\r\\n226813875\\r\\n191435355\\r\\n897230167\\r\\n851910875\\r\\n872964055\\r\\n741910138\\r\\n963242791\\r\\n859073545\\r\\n501205753\\r\\n252469038\\r\\n77916365\\r\\n622358084\\r\\n867246600\\r\\n381481659\\r\\n57646031\\r\\n326439010\\r\\n37314488\\r\\n267966014\\r\\n386173645\\r\\n224253188\\r\\n693822089\\r\\n652063749\\r\\n209704954\\r\\n936775840\\r\\n675102836\\r\\n581756207\\r\\n18809453\\r\\n84...']}, {'input': '199991 3000\\r\\n1 0 1 0 0 1 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 ...', 'output': ['576788803\\r\\n851579816\\r\\n464431389\\r\\n925910539\\r\\n240339104\\r\\n317886519\\r\\n67707478\\r\\n262772669\\r\\n221595177\\r\\n612937974\\r\\n736137684\\r\\n268724388\\r\\n68361383\\r\\n847191682\\r\\n557301933\\r\\n913346054\\r\\n648280739\\r\\n171995554\\r\\n235269506\\r\\n530242292\\r\\n148650394\\r\\n908499525\\r\\n304200830\\r\\n721371958\\r\\n474031015\\r\\n817280262\\r\\n825707282\\r\\n465373250\\r\\n245622892\\r\\n341231679\\r\\n845696111\\r\\n853007293\\r\\n68361383\\r\\n915771149\\r\\n987480726\\r\\n726171771\\r\\n707992711\\r\\n478931968\\r\\n847890178\\r\\n687514833\\r\\n732279394\\r\\n927044872\\r\\n856499296\\r\\n862463110\\r\\n77307104\\r\\n484794642\\r\\n615409785...']}, {'input': '199992 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 ...', 'output': ['944579271\\r\\n815447430\\r\\n121435610\\r\\n89385736\\r\\n85360285\\r\\n56962924\\r\\n289585947\\r\\n344015172\\r\\n223771444\\r\\n652123221\\r\\n591303048\\r\\n4248454\\r\\n306743823\\r\\n968709911\\r\\n670850059\\r\\n672191876\\r\\n417953645\\r\\n24521845\\r\\n946915719\\r\\n777789018\\r\\n60838440\\r\\n839186865\\r\\n79733480\\r\\n134590444\\r\\n755625163\\r\\n504520550\\r\\n752912502\\r\\n172585260\\r\\n452314215\\r\\n812559060\\r\\n865646468\\r\\n584772439\\r\\n717751255\\r\\n344015172\\r\\n217454686\\r\\n551825\\r\\n985330789\\r\\n733776192\\r\\n951920831\\r\\n371680341\\r\\n447096882\\r\\n332238689\\r\\n688429333\\r\\n390729899\\r\\n623930596\\r\\n453096625\\r\\n858100172\\r\\n14638...']}, {'input': '199993 3000\\r\\n1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['189220773\\r\\n219328456\\r\\n767760662\\r\\n806220888\\r\\n797979411\\r\\n545740580\\r\\n219383989\\r\\n75297991\\r\\n40929720\\r\\n935115229\\r\\n532004785\\r\\n529257626\\r\\n49282263\\r\\n789793467\\r\\n545740580\\r\\n962586819\\r\\n485358615\\r\\n471678353\\r\\n907699172\\r\\n803473729\\r\\n408604762\\r\\n963918788\\r\\n35602001\\r\\n847372740\\r\\n611561330\\r\\n216636830\\r\\n729467035\\r\\n298885001\\r\\n73784562\\r\\n95928433\\r\\n405857603\\r\\n312620796\\r\\n126147182\\r\\n518268990\\r\\n353717115\\r\\n501841569\\r\\n512830205\\r\\n685568024\\r\\n252294364\\r\\n962586819\\r\\n477172671\\r\\n252637898\\r\\n246744513\\r\\n434391811\\r\\n52084955\\r\\n807039242\\r\\n414043547\\r\\n2...']}, {'input': '199994 3000\\r\\n0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 1 0 0 1 1 0 0 1 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 0 1 0 1 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 ...', 'output': ['336654971\\r\\n732535\\r\\n815250185\\r\\n326444659\\r\\n729180253\\r\\n129624924\\r\\n358796707\\r\\n444866639\\r\\n754810869\\r\\n843551608\\r\\n256744726\\r\\n70820418\\r\\n164515107\\r\\n207034102\\r\\n575220043\\r\\n87535002\\r\\n682699176\\r\\n43984065\\r\\n797070531\\r\\n806189316\\r\\n815982720\\r\\n704840912\\r\\n900587582\\r\\n585042405\\r\\n921264248\\r\\n459213067\\r\\n352526818\\r\\n883140463\\r\\n815669240\\r\\n511377385\\r\\n785483692\\r\\n225259507\\r\\n505565288\\r\\n832271475\\r\\n46481077\\r\\n860266192\\r\\n560703064\\r\\n99613410\\r\\n150730663\\r\\n410704936\\r\\n704840912\\r\\n915837096\\r\\n953960881\\r\\n968477860\\r\\n589004487\\r\\n187389378\\r\\n517884662\\r\\n93...']}, {'input': '199995 3000\\r\\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 ...', 'output': ['662762303\\r\\n929872487\\r\\n874878479\\r\\n456275271\\r\\n715183658\\r\\n400437516\\r\\n521458497\\r\\n76578537\\r\\n927594887\\r\\n897280874\\r\\n185062970\\r\\n530346011\\r\\n941267798\\r\\n71793140\\r\\n377419134\\r\\n675559304\\r\\n591654880\\r\\n719511098\\r\\n599406031\\r\\n622421976\\r\\n250476393\\r\\n605557988\\r\\n772627865\\r\\n133099572\\r\\n594620634\\r\\n848508553\\r\\n404542070\\r\\n193952921\\r\\n255031593\\r\\n40568087\\r\\n771704693\\r\\n756662785\\r\\n869935052\\r\\n847369753\\r\\n36238210\\r\\n358730629\\r\\n164552385\\r\\n938076721\\r\\n767600139\\r\\n458579571\\r\\n693757159\\r\\n843723156\\r\\n975014694\\r\\n858992824\\r\\n955398666\\r\\n756432588\\r\\n585958443...']}, {'input': '199996 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 ...', 'output': ['670876956\\r\\n282683795\\r\\n377011834\\r\\n803395587\\r\\n676385588\\r\\n935914218\\r\\n718622147\\r\\n536417373\\r\\n403228588\\r\\n282205508\\r\\n715874782\\r\\n593703261\\r\\n180906172\\r\\n125082949\\r\\n159213672\\r\\n79114647\\r\\n828013417\\r\\n919922217\\r\\n269261194\\r\\n677998414\\r\\n539957249\\r\\n116020539\\r\\n719578721\\r\\n947915860\\r\\n933837007\\r\\n911830283\\r\\n475864127\\r\\n320232037\\r\\n207122926\\r\\n915004383\\r\\n801796663\\r\\n301300804\\r\\n489000308\\r\\n929955103\\r\\n208735752\\r\\n169096397\\r\\n431236133\\r\\n485282467\\r\\n675865595\\r\\n711172563\\r\\n31711484\\r\\n780760415\\r\\n330893371\\r\\n339149368\\r\\n107928605\\r\\n630648538\\r\\n1150500...']}, {'input': '199997 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['509540793\\r\\n120976575\\r\\n549866318\\r\\n103886913\\r\\n46471726\\r\\n486304930\\r\\n356783524\\r\\n889560180\\r\\n199228995\\r\\n889560180\\r\\n825998792\\r\\n728258080\\r\\n40325525\\r\\n723460820\\r\\n584045642\\r\\n849234655\\r\\n398457990\\r\\n44073096\\r\\n355733835\\r\\n753892573\\r\\n259042812\\r\\n526630455\\r\\n218717287\\r\\n69707589\\r\\n445979405\\r\\n843088454\\r\\n549866318\\r\\n900503641\\r\\n915194673\\r\\n110033114\\r\\n233408319\\r\\n632915998\\r\\n443580775\\r\\n883413979\\r\\n356783524\\r\\n63561388\\r\\n314059369\\r\\n628118738\\r\\n543720117\\r\\n420344912\\r\\n705022217\\r\\n89195881\\r\\n535175286\\r\\n987300892\\r\\n72106219\\r\\n543720117\\r\\n785673267\\r\\n2...', '791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n79153...']}, {'input': '199998 3000\\r\\n1 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 1 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 1 1 1 0 0 1 0 1 0 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 1 0 0 1 0 0 1 1 1 1 0 0 1 1 0 0 ...', 'output': ['728321596\\r\\n638956912\\r\\n987568459\\r\\n799092377\\r\\n597086927\\r\\n782772546\\r\\n770287170\\r\\n255784080\\r\\n699516389\\r\\n256762390\\r\\n656812813\\r\\n513524780\\r\\n416026596\\r\\n285567597\\r\\n279669471\\r\\n136357125\\r\\n790734343\\r\\n479381626\\r\\n898668365\\r\\n822581531\\r\\n870855601\\r\\n827897584\\r\\n408064799\\r\\n759611276\\r\\n235779603\\r\\n990282556\\r\\n571135194\\r\\n279669471\\r\\n311516659\\r\\n287631268\\r\\n607109724\\r\\n822559637\\r\\n639460200\\r\\n369129744\\r\\n111968446\\r\\n157186402\\r\\n495141278\\r\\n652212868\\r\\n143815634\\r\\n367752526\\r\\n165008822\\r\\n592117981\\r\\n400788425\\r\\n793754430\\r\\n966900453\\r\\n2484473\\r\\n9089752...', '964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n96492...']}, {'input': '199999 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 ...', 'output': ['659992102\\r\\n43534688\\r\\n613251861\\r\\n688791385\\r\\n969096633\\r\\n244584877\\r\\n407865304\\r\\n186960964\\r\\n243317864\\r\\n549539932\\r\\n991833247\\r\\n262687380\\r\\n543128826\\r\\n494636937\\r\\n223625258\\r\\n610530943\\r\\n823731817\\r\\n148706567\\r\\n321255216\\r\\n793342431\\r\\n574351284\\r\\n666241663\\r\\n731705240\\r\\n759075965\\r\\n574351284\\r\\n267483036\\r\\n533214424\\r\\n650213898\\r\\n38254397\\r\\n748651581\\r\\n341432457\\r\\n458755021\\r\\n851102542\\r\\n458618823\\r\\n777016923\\r\\n879306339\\r\\n831596828\\r\\n223948348\\r\\n334458632\\r\\n214654779\\r\\n250672893\\r\\n599162636\\r\\n601914362\\r\\n888897651\\r\\n620419998\\r\\n546470577\\r\\n2155987...', '959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n550771238\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n550771238\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n95962...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 ...', 'output': ['893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n917300718\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n89340...', '777798569\\r\\n231173131\\r\\n230887037\\r\\n573284389\\r\\n184819702\\r\\n389069614\\r\\n336642733\\r\\n374568480\\r\\n855432105\\r\\n25206655\\r\\n4356888\\r\\n605147597\\r\\n575616793\\r\\n296362756\\r\\n407873071\\r\\n112177054\\r\\n213967495\\r\\n814007752\\r\\n159623960\\r\\n280717246\\r\\n614422648\\r\\n758973286\\r\\n52239134\\r\\n765343745\\r\\n464084652\\r\\n192059356\\r\\n447272940\\r\\n617899428\\r\\n590679202\\r\\n570104616\\r\\n874554395\\r\\n774321789\\r\\n991301706\\r\\n991873894\\r\\n397156637\\r\\n113523353\\r\\n617052059\\r\\n46639523\\r\\n446403745\\r\\n35361814\\r\\n921640272\\r\\n891146426\\r\\n273084002\\r\\n58808253\\r\\n533015325\\r\\n30707919\\r\\n154980978\\r\\n71...']}, {'input': '200000 3000\\r\\n1 0 0 0 0 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 1 0 1 0 0 1 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 1 0 ...', 'output': ['203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n71266...']}, {'input': '200000 3000\\r\\n0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 1 0 1 0 1 1 1 0 0 0 1 0 1 1 0 1 1 0 0 0 1 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 0 1 1 0 1 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 0 1 1 1 1 1 1 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 0 1 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 ...', 'output': ['532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n53...']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 998244353, inv = 499122177;\nint n, m, a[200005], w[200005];\nlong long k, ans;\nint main() {\n  scanf(\"%d %d\", &n, &m);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &w[i]);\n  int t = 0;\n  for (int i = 1; i <= n; i++)\n    if (a[i]) t++;\n  for (int i = 1; i <= m; i++) k = k * (t - (a[i] == 0)) % mod;\n  for (int i = 1; i <= n; i++) {\n    if (a[i])\n      ans = (ans + w[i] * 1ll * (m - i + 1) % mod *\n                       inv % mod * (t - 1) % mod +\n             w[i] * 1ll * (i - 1) % mod * inv % mod * k % mod) %\n            mod;\n  }\n  for (int i = 1; i <= n; i++) printf(\"%lld\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "d37dde5841116352c9b37538631d0b15", "id": 32, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 2 1 2\\r\\n', 'output': ['2']}, {'input': '1 12 1 12\\r\\n', 'output': ['4']}, {'input': '50 100 3 30\\r\\n', 'output': ['0']}, {'input': '1 1000000000 1 1000000000\\r\\n', 'output': ['4']}, {'input': '1 1000000000 158260522 200224287\\r\\n', 'output': ['0']}, {'input': '1 1000000000 2 755829150\\r\\n', 'output': ['8']}, {'input': '1 1000000000 158260522 158260522\\r\\n', 'output': ['1']}, {'input': '1 1000000000 877914575 877914575\\r\\n', 'output': ['1']}, {'input': '232 380232688 116 760465376\\r\\n', 'output': ['30']}, {'input': '47259 3393570 267 600661890\\r\\n', 'output': ['30']}, {'input': '1 1000000000 1 672672000\\r\\n', 'output': ['64']}, {'input': '1000000000 1000000000 1000000000 1000000000\\r\\n', 'output': ['1']}, {'input': '1 1000000000 1 649209600\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 682290000\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 228614400\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 800280000\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 919987200\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 456537870\\r\\n', 'output': ['64']}, {'input': '1 1000000000 1 7198102\\r\\n', 'output': ['8']}, {'input': '1 1000000000 1 58986263\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 316465536\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 9558312\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 5461344\\r\\n', 'output': ['16']}, {'input': '58 308939059 29 617878118\\r\\n', 'output': ['62']}, {'input': '837 16262937 27 504151047\\r\\n', 'output': ['28']}, {'input': '47275 402550 25 761222050\\r\\n', 'output': ['12']}, {'input': '22 944623394 22 944623394\\r\\n', 'output': ['32']}, {'input': '1032 8756124 12 753026664\\r\\n', 'output': ['18']}, {'input': '7238 939389 11 618117962\\r\\n', 'output': ['10']}, {'input': '58351 322621 23 818489477\\r\\n', 'output': ['6']}, {'input': '3450 7068875 25 975504750\\r\\n', 'output': ['86']}, {'input': '13266 1606792 22 968895576\\r\\n', 'output': ['14']}, {'input': '21930 632925 15 925336350\\r\\n', 'output': ['42']}, {'input': '2193 4224517 17 544962693\\r\\n', 'output': ['42']}, {'input': '526792 39807152 22904 915564496\\r\\n', 'output': ['8']}, {'input': '67728 122875524 16932 491502096\\r\\n', 'output': ['12']}, {'input': '319813 63298373 24601 822878849\\r\\n', 'output': ['6']}, {'input': '572464 23409136 15472 866138032\\r\\n', 'output': ['4']}, {'input': '39443 809059020 19716 777638472\\r\\n', 'output': ['12']}, {'input': '2544768 8906688 27072 837228672\\r\\n', 'output': ['0']}, {'input': '413592 46975344 21768 892531536\\r\\n', 'output': ['10']}, {'input': '11349 816231429 11349 816231429\\r\\n', 'output': ['8']}, {'input': '16578 939956022 16578 939956022\\r\\n', 'output': ['4']}, {'input': '2783175 6882425 21575 887832825\\r\\n', 'output': ['2']}, {'input': '2862252 7077972 22188 913058388\\r\\n', 'output': ['2']}, {'input': '1856828 13124976 25436 958123248\\r\\n', 'output': ['6']}, {'input': '100 1000000000 158260522 158260522\\r\\n', 'output': ['1']}, {'input': '100 1000000000 877914575 877914575\\r\\n', 'output': ['1']}, {'input': '100 1000000000 602436426 602436426\\r\\n', 'output': ['1']}, {'input': '100 1000000000 24979445 24979445\\r\\n', 'output': ['1']}, {'input': '1 1000000000 18470 112519240\\r\\n', 'output': ['4']}, {'input': '1 1000000000 22692 2201124\\r\\n', 'output': ['2']}, {'input': '1 1000000000 24190 400949250\\r\\n', 'output': ['16']}, {'input': '1 1000000000 33409 694005157\\r\\n', 'output': ['2']}, {'input': '1 1000000000 24967 470827686\\r\\n', 'output': ['16']}, {'input': '1 1000000000 35461 152517761\\r\\n', 'output': ['8']}, {'input': '2 1000000000 158260522 200224287\\r\\n', 'output': ['0']}, {'input': '2 1000000000 602436426 611751520\\r\\n', 'output': ['0']}, {'input': '2 1000000000 861648772 942726551\\r\\n', 'output': ['0']}, {'input': '2 1000000000 433933447 485982495\\r\\n', 'output': ['0']}, {'input': '2 1000000000 262703497 480832794\\r\\n', 'output': ['0']}, {'input': '2672374 422235092 1336187 844470184\\r\\n', 'output': ['2']}, {'input': '1321815 935845020 1321815 935845020\\r\\n', 'output': ['8']}, {'input': '29259607 69772909 2250739 907047817\\r\\n', 'output': ['2']}, {'input': '11678540 172842392 2335708 864211960\\r\\n', 'output': ['4']}, {'input': '297 173688298 2876112 851329152\\r\\n', 'output': ['2']}, {'input': '7249 55497026 659 610467286\\r\\n', 'output': ['28']}, {'input': '398520 1481490 810 728893080\\r\\n', 'output': ['4']}, {'input': '2354 369467362 1177 738934724\\r\\n', 'output': ['14']}, {'input': '407264 2497352 1144 889057312\\r\\n', 'output': ['2']}, {'input': '321399 1651014 603 879990462\\r\\n', 'output': ['4']}, {'input': '475640 486640 440 526057840\\r\\n', 'output': ['2']}, {'input': '631714 179724831 1136 717625968\\r\\n', 'output': ['0']}, {'input': '280476 1595832 588 761211864\\r\\n', 'output': ['8']}, {'input': '10455 39598005 615 673166085\\r\\n', 'output': ['6']}, {'input': '24725 19759875 575 849674625\\r\\n', 'output': ['22']}, {'input': '22 158 2 1738\\r\\n', 'output': ['2']}, {'input': '1 2623 1 2623\\r\\n', 'output': ['4']}, {'input': '7 163677675 3 18\\r\\n', 'output': ['0']}, {'input': '159 20749927 1 158\\r\\n', 'output': ['0']}, {'input': '5252 477594071 1 5251\\r\\n', 'output': ['0']}, {'input': '2202 449433679 3 6603\\r\\n', 'output': ['0']}, {'input': '6 111 3 222\\r\\n', 'output': ['2']}, {'input': '26 46 2 598\\r\\n', 'output': ['2']}, {'input': '26 82 2 1066\\r\\n', 'output': ['2']}, {'input': '1 2993 1 2993\\r\\n', 'output': ['4']}, {'input': '17 17 1 289\\r\\n', 'output': ['0']}, {'input': '177 267 3 15753\\r\\n', 'output': ['2']}, {'input': '7388 22705183 1 7387\\r\\n', 'output': ['0']}, {'input': '1 100 3 100\\r\\n', 'output': ['0']}, {'input': '1 1000 6 1024\\r\\n', 'output': ['0']}, {'input': '1 100 2 4\\r\\n', 'output': ['2']}, {'input': '1 10000 2 455\\r\\n', 'output': ['0']}, {'input': '1 1000000000 250000000 1000000000\\r\\n', 'output': ['2']}, {'input': '3 3 1 1\\r\\n', 'output': ['0']}, {'input': '1 1000000000 100000000 1000000000\\r\\n', 'output': ['4']}, {'input': '5 10 3 3\\r\\n', 'output': ['0']}, {'input': '1 1000 5 13\\r\\n', 'output': ['0']}, {'input': '2 2 3 3\\r\\n', 'output': ['0']}, {'input': '1 1000000000 499999993 999999986\\r\\n', 'output': ['2']}, {'input': '1 1 1 10\\r\\n', 'output': ['0']}, {'input': '1 10 10 100\\r\\n', 'output': ['0']}, {'input': '1 1000 4 36\\r\\n', 'output': ['2']}, {'input': '1 1000000000 10000000 20000000\\r\\n', 'output': ['2']}, {'input': '100 100 5 5\\r\\n', 'output': ['0']}, {'input': '3 3 3 9\\r\\n', 'output': ['0']}, {'input': '36 200 24 144\\r\\n', 'output': ['2']}, {'input': '1 100 3 10\\r\\n', 'output': ['0']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint l, r, x, y, gcd;\nlong long LCM, ans;\nlong long Pow(long long a, long long b) {\n  long long res = 1;\n  while (b) {\n    if (b & 1) res = res * a;\n    a = a * a;\n    b >>= 1;\n  }\n  return res;\n}\nint main() {\n  cin >> l >> r >> x >> y;\n  gcd = __gcd(x, y);\n  if (gcd!= 1) {\n    cout << 0 << endl;\n    return 0;\n  }\n  LCM = x * y / gcd;\n  long long tmp = LCM, LCM = l / x * x;\n  if (LCM < l) {\n    LCM = LCM + LCM + x;\n    LCM /= 2;\n  }\n  LCM = min(LCM, r);\n  if (LCM > r) {\n    cout << 0 << endl;\n    return 0;\n  }\n  LCM /= x;\n  LCM = Pow(LCM, 2);\n  tmp = tmp - LCM + LCM / x;\n  tmp /= (r / x + 1);\n  tmp /= x;\n  if (LCM == l) tmp--;\n  ans = tmp;\n  LCM = Pow(LCM, 2);\n  tmp = LCM + l / x * x;\n  tmp = tmp - l / x * x;\n  tmp /= (r / x + 1);\n  tmp /= x;\n  if (LCM!= l) tmp--;\n  tmp *= gcd;\n  ans += tmp;\n  cout << ans << endl;\n  return 0;\n}\n"}
{"src_uid": "d37dde5841116352c9b37538631d0b15", "id": 32, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 2 1 2\\r\\n', 'output': ['2']}, {'input': '1 12 1 12\\r\\n', 'output': ['4']}, {'input': '50 100 3 30\\r\\n', 'output': ['0']}, {'input': '1 1000000000 1 1000000000\\r\\n', 'output': ['4']}, {'input': '1 1000000000 158260522 200224287\\r\\n', 'output': ['0']}, {'input': '1 1000000000 2 755829150\\r\\n', 'output': ['8']}, {'input': '1 1000000000 158260522 158260522\\r\\n', 'output': ['1']}, {'input': '1 1000000000 877914575 877914575\\r\\n', 'output': ['1']}, {'input': '232 380232688 116 760465376\\r\\n', 'output': ['30']}, {'input': '47259 3393570 267 600661890\\r\\n', 'output': ['30']}, {'input': '1 1000000000 1 672672000\\r\\n', 'output': ['64']}, {'input': '1000000000 1000000000 1000000000 1000000000\\r\\n', 'output': ['1']}, {'input': '1 1000000000 1 649209600\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 682290000\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 228614400\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 800280000\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 919987200\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 456537870\\r\\n', 'output': ['64']}, {'input': '1 1000000000 1 7198102\\r\\n', 'output': ['8']}, {'input': '1 1000000000 1 58986263\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 316465536\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 9558312\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 5461344\\r\\n', 'output': ['16']}, {'input': '58 308939059 29 617878118\\r\\n', 'output': ['62']}, {'input': '837 16262937 27 504151047\\r\\n', 'output': ['28']}, {'input': '47275 402550 25 761222050\\r\\n', 'output': ['12']}, {'input': '22 944623394 22 944623394\\r\\n', 'output': ['32']}, {'input': '1032 8756124 12 753026664\\r\\n', 'output': ['18']}, {'input': '7238 939389 11 618117962\\r\\n', 'output': ['10']}, {'input': '58351 322621 23 818489477\\r\\n', 'output': ['6']}, {'input': '3450 7068875 25 975504750\\r\\n', 'output': ['86']}, {'input': '13266 1606792 22 968895576\\r\\n', 'output': ['14']}, {'input': '21930 632925 15 925336350\\r\\n', 'output': ['42']}, {'input': '2193 4224517 17 544962693\\r\\n', 'output': ['42']}, {'input': '526792 39807152 22904 915564496\\r\\n', 'output': ['8']}, {'input': '67728 122875524 16932 491502096\\r\\n', 'output': ['12']}, {'input': '319813 63298373 24601 822878849\\r\\n', 'output': ['6']}, {'input': '572464 23409136 15472 866138032\\r\\n', 'output': ['4']}, {'input': '39443 809059020 19716 777638472\\r\\n', 'output': ['12']}, {'input': '2544768 8906688 27072 837228672\\r\\n', 'output': ['0']}, {'input': '413592 46975344 21768 892531536\\r\\n', 'output': ['10']}, {'input': '11349 816231429 11349 816231429\\r\\n', 'output': ['8']}, {'input': '16578 939956022 16578 939956022\\r\\n', 'output': ['4']}, {'input': '2783175 6882425 21575 887832825\\r\\n', 'output': ['2']}, {'input': '2862252 7077972 22188 913058388\\r\\n', 'output': ['2']}, {'input': '1856828 13124976 25436 958123248\\r\\n', 'output': ['6']}, {'input': '100 1000000000 158260522 158260522\\r\\n', 'output': ['1']}, {'input': '100 1000000000 877914575 877914575\\r\\n', 'output': ['1']}, {'input': '100 1000000000 602436426 602436426\\r\\n', 'output': ['1']}, {'input': '100 1000000000 24979445 24979445\\r\\n', 'output': ['1']}, {'input': '1 1000000000 18470 112519240\\r\\n', 'output': ['4']}, {'input': '1 1000000000 22692 2201124\\r\\n', 'output': ['2']}, {'input': '1 1000000000 24190 400949250\\r\\n', 'output': ['16']}, {'input': '1 1000000000 33409 694005157\\r\\n', 'output': ['2']}, {'input': '1 1000000000 24967 470827686\\r\\n', 'output': ['16']}, {'input': '1 1000000000 35461 152517761\\r\\n', 'output': ['8']}, {'input': '2 1000000000 158260522 200224287\\r\\n', 'output': ['0']}, {'input': '2 1000000000 602436426 611751520\\r\\n', 'output': ['0']}, {'input': '2 1000000000 861648772 942726551\\r\\n', 'output': ['0']}, {'input': '2 1000000000 433933447 485982495\\r\\n', 'output': ['0']}, {'input': '2 1000000000 262703497 480832794\\r\\n', 'output': ['0']}, {'input': '2672374 422235092 1336187 844470184\\r\\n', 'output': ['2']}, {'input': '1321815 935845020 1321815 935845020\\r\\n', 'output': ['8']}, {'input': '29259607 69772909 2250739 907047817\\r\\n', 'output': ['2']}, {'input': '11678540 172842392 2335708 864211960\\r\\n', 'output': ['4']}, {'input': '297 173688298 2876112 851329152\\r\\n', 'output': ['2']}, {'input': '7249 55497026 659 610467286\\r\\n', 'output': ['28']}, {'input': '398520 1481490 810 728893080\\r\\n', 'output': ['4']}, {'input': '2354 369467362 1177 738934724\\r\\n', 'output': ['14']}, {'input': '407264 2497352 1144 889057312\\r\\n', 'output': ['2']}, {'input': '321399 1651014 603 879990462\\r\\n', 'output': ['4']}, {'input': '475640 486640 440 526057840\\r\\n', 'output': ['2']}, {'input': '631714 179724831 1136 717625968\\r\\n', 'output': ['0']}, {'input': '280476 1595832 588 761211864\\r\\n', 'output': ['8']}, {'input': '10455 39598005 615 673166085\\r\\n', 'output': ['6']}, {'input': '24725 19759875 575 849674625\\r\\n', 'output': ['22']}, {'input': '22 158 2 1738\\r\\n', 'output': ['2']}, {'input': '1 2623 1 2623\\r\\n', 'output': ['4']}, {'input': '7 163677675 3 18\\r\\n', 'output': ['0']}, {'input': '159 20749927 1 158\\r\\n', 'output': ['0']}, {'input': '5252 477594071 1 5251\\r\\n', 'output': ['0']}, {'input': '2202 449433679 3 6603\\r\\n', 'output': ['0']}, {'input': '6 111 3 222\\r\\n', 'output': ['2']}, {'input': '26 46 2 598\\r\\n', 'output': ['2']}, {'input': '26 82 2 1066\\r\\n', 'output': ['2']}, {'input': '1 2993 1 2993\\r\\n', 'output': ['4']}, {'input': '17 17 1 289\\r\\n', 'output': ['0']}, {'input': '177 267 3 15753\\r\\n', 'output': ['2']}, {'input': '7388 22705183 1 7387\\r\\n', 'output': ['0']}, {'input': '1 100 3 100\\r\\n', 'output': ['0']}, {'input': '1 1000 6 1024\\r\\n', 'output': ['0']}, {'input': '1 100 2 4\\r\\n', 'output': ['2']}, {'input': '1 10000 2 455\\r\\n', 'output': ['0']}, {'input': '1 1000000000 250000000 1000000000\\r\\n', 'output': ['2']}, {'input': '3 3 1 1\\r\\n', 'output': ['0']}, {'input': '1 1000000000 100000000 1000000000\\r\\n', 'output': ['4']}, {'input': '5 10 3 3\\r\\n', 'output': ['0']}, {'input': '1 1000 5 13\\r\\n', 'output': ['0']}, {'input': '2 2 3 3\\r\\n', 'output': ['0']}, {'input': '1 1000000000 499999993 999999986\\r\\n', 'output': ['2']}, {'input': '1 1 1 10\\r\\n', 'output': ['0']}, {'input': '1 10 10 100\\r\\n', 'output': ['0']}, {'input': '1 1000 4 36\\r\\n', 'output': ['2']}, {'input': '1 1000000000 10000000 20000000\\r\\n', 'output': ['2']}, {'input': '100 100 5 5\\r\\n', 'output': ['0']}, {'input': '3 3 3 9\\r\\n', 'output': ['0']}, {'input': '36 200 24 144\\r\\n', 'output': ['2']}, {'input': '1 100 3 10\\r\\n', 'output': ['0']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint x, y, l, r;\nint main() {\n  cin >> l >> r >> x >> y;\n  if (y % x) return puts(\"0\") * 0;\n  int t = y / x;\n  int ans = 0;\n  for (int i = 1; i * i <= t; ++i)\n    if (t % i == 0) {\n      if (max(l * i, l * (t / i)) <= r) ans++;\n      if (min(r * i, r * (t / i)) >= l) ans++;\n    }\n  if (t == 1 && y == x && max(l, r) == 1) ans = 1;\n  cout << ans << endl;\n}\n"}
{"src_uid": "d37dde5841116352c9b37538631d0b15", "id": 32, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 2 1 2\\r\\n', 'output': ['2']}, {'input': '1 12 1 12\\r\\n', 'output': ['4']}, {'input': '50 100 3 30\\r\\n', 'output': ['0']}, {'input': '1 1000000000 1 1000000000\\r\\n', 'output': ['4']}, {'input': '1 1000000000 158260522 200224287\\r\\n', 'output': ['0']}, {'input': '1 1000000000 2 755829150\\r\\n', 'output': ['8']}, {'input': '1 1000000000 158260522 158260522\\r\\n', 'output': ['1']}, {'input': '1 1000000000 877914575 877914575\\r\\n', 'output': ['1']}, {'input': '232 380232688 116 760465376\\r\\n', 'output': ['30']}, {'input': '47259 3393570 267 600661890\\r\\n', 'output': ['30']}, {'input': '1 1000000000 1 672672000\\r\\n', 'output': ['64']}, {'input': '1000000000 1000000000 1000000000 1000000000\\r\\n', 'output': ['1']}, {'input': '1 1000000000 1 649209600\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 682290000\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 228614400\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 800280000\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 919987200\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 456537870\\r\\n', 'output': ['64']}, {'input': '1 1000000000 1 7198102\\r\\n', 'output': ['8']}, {'input': '1 1000000000 1 58986263\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 316465536\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 9558312\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 5461344\\r\\n', 'output': ['16']}, {'input': '58 308939059 29 617878118\\r\\n', 'output': ['62']}, {'input': '837 16262937 27 504151047\\r\\n', 'output': ['28']}, {'input': '47275 402550 25 761222050\\r\\n', 'output': ['12']}, {'input': '22 944623394 22 944623394\\r\\n', 'output': ['32']}, {'input': '1032 8756124 12 753026664\\r\\n', 'output': ['18']}, {'input': '7238 939389 11 618117962\\r\\n', 'output': ['10']}, {'input': '58351 322621 23 818489477\\r\\n', 'output': ['6']}, {'input': '3450 7068875 25 975504750\\r\\n', 'output': ['86']}, {'input': '13266 1606792 22 968895576\\r\\n', 'output': ['14']}, {'input': '21930 632925 15 925336350\\r\\n', 'output': ['42']}, {'input': '2193 4224517 17 544962693\\r\\n', 'output': ['42']}, {'input': '526792 39807152 22904 915564496\\r\\n', 'output': ['8']}, {'input': '67728 122875524 16932 491502096\\r\\n', 'output': ['12']}, {'input': '319813 63298373 24601 822878849\\r\\n', 'output': ['6']}, {'input': '572464 23409136 15472 866138032\\r\\n', 'output': ['4']}, {'input': '39443 809059020 19716 777638472\\r\\n', 'output': ['12']}, {'input': '2544768 8906688 27072 837228672\\r\\n', 'output': ['0']}, {'input': '413592 46975344 21768 892531536\\r\\n', 'output': ['10']}, {'input': '11349 816231429 11349 816231429\\r\\n', 'output': ['8']}, {'input': '16578 939956022 16578 939956022\\r\\n', 'output': ['4']}, {'input': '2783175 6882425 21575 887832825\\r\\n', 'output': ['2']}, {'input': '2862252 7077972 22188 913058388\\r\\n', 'output': ['2']}, {'input': '1856828 13124976 25436 958123248\\r\\n', 'output': ['6']}, {'input': '100 1000000000 158260522 158260522\\r\\n', 'output': ['1']}, {'input': '100 1000000000 877914575 877914575\\r\\n', 'output': ['1']}, {'input': '100 1000000000 602436426 602436426\\r\\n', 'output': ['1']}, {'input': '100 1000000000 24979445 24979445\\r\\n', 'output': ['1']}, {'input': '1 1000000000 18470 112519240\\r\\n', 'output': ['4']}, {'input': '1 1000000000 22692 2201124\\r\\n', 'output': ['2']}, {'input': '1 1000000000 24190 400949250\\r\\n', 'output': ['16']}, {'input': '1 1000000000 33409 694005157\\r\\n', 'output': ['2']}, {'input': '1 1000000000 24967 470827686\\r\\n', 'output': ['16']}, {'input': '1 1000000000 35461 152517761\\r\\n', 'output': ['8']}, {'input': '2 1000000000 158260522 200224287\\r\\n', 'output': ['0']}, {'input': '2 1000000000 602436426 611751520\\r\\n', 'output': ['0']}, {'input': '2 1000000000 861648772 942726551\\r\\n', 'output': ['0']}, {'input': '2 1000000000 433933447 485982495\\r\\n', 'output': ['0']}, {'input': '2 1000000000 262703497 480832794\\r\\n', 'output': ['0']}, {'input': '2672374 422235092 1336187 844470184\\r\\n', 'output': ['2']}, {'input': '1321815 935845020 1321815 935845020\\r\\n', 'output': ['8']}, {'input': '29259607 69772909 2250739 907047817\\r\\n', 'output': ['2']}, {'input': '11678540 172842392 2335708 864211960\\r\\n', 'output': ['4']}, {'input': '297 173688298 2876112 851329152\\r\\n', 'output': ['2']}, {'input': '7249 55497026 659 610467286\\r\\n', 'output': ['28']}, {'input': '398520 1481490 810 728893080\\r\\n', 'output': ['4']}, {'input': '2354 369467362 1177 738934724\\r\\n', 'output': ['14']}, {'input': '407264 2497352 1144 889057312\\r\\n', 'output': ['2']}, {'input': '321399 1651014 603 879990462\\r\\n', 'output': ['4']}, {'input': '475640 486640 440 526057840\\r\\n', 'output': ['2']}, {'input': '631714 179724831 1136 717625968\\r\\n', 'output': ['0']}, {'input': '280476 1595832 588 761211864\\r\\n', 'output': ['8']}, {'input': '10455 39598005 615 673166085\\r\\n', 'output': ['6']}, {'input': '24725 19759875 575 849674625\\r\\n', 'output': ['22']}, {'input': '22 158 2 1738\\r\\n', 'output': ['2']}, {'input': '1 2623 1 2623\\r\\n', 'output': ['4']}, {'input': '7 163677675 3 18\\r\\n', 'output': ['0']}, {'input': '159 20749927 1 158\\r\\n', 'output': ['0']}, {'input': '5252 477594071 1 5251\\r\\n', 'output': ['0']}, {'input': '2202 449433679 3 6603\\r\\n', 'output': ['0']}, {'input': '6 111 3 222\\r\\n', 'output': ['2']}, {'input': '26 46 2 598\\r\\n', 'output': ['2']}, {'input': '26 82 2 1066\\r\\n', 'output': ['2']}, {'input': '1 2993 1 2993\\r\\n', 'output': ['4']}, {'input': '17 17 1 289\\r\\n', 'output': ['0']}, {'input': '177 267 3 15753\\r\\n', 'output': ['2']}, {'input': '7388 22705183 1 7387\\r\\n', 'output': ['0']}, {'input': '1 100 3 100\\r\\n', 'output': ['0']}, {'input': '1 1000 6 1024\\r\\n', 'output': ['0']}, {'input': '1 100 2 4\\r\\n', 'output': ['2']}, {'input': '1 10000 2 455\\r\\n', 'output': ['0']}, {'input': '1 1000000000 250000000 1000000000\\r\\n', 'output': ['2']}, {'input': '3 3 1 1\\r\\n', 'output': ['0']}, {'input': '1 1000000000 100000000 1000000000\\r\\n', 'output': ['4']}, {'input': '5 10 3 3\\r\\n', 'output': ['0']}, {'input': '1 1000 5 13\\r\\n', 'output': ['0']}, {'input': '2 2 3 3\\r\\n', 'output': ['0']}, {'input': '1 1000000000 499999993 999999986\\r\\n', 'output': ['2']}, {'input': '1 1 1 10\\r\\n', 'output': ['0']}, {'input': '1 10 10 100\\r\\n', 'output': ['0']}, {'input': '1 1000 4 36\\r\\n', 'output': ['2']}, {'input': '1 1000000000 10000000 20000000\\r\\n', 'output': ['2']}, {'input': '100 100 5 5\\r\\n', 'output': ['0']}, {'input': '3 3 3 9\\r\\n', 'output': ['0']}, {'input': '36 200 24 144\\r\\n', 'output': ['2']}, {'input': '1 100 3 10\\r\\n', 'output': ['0']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long l, r, x, y, ans;\nint main() {\n  scanf(\"%I64d%I64d%I64d%I64d\", &l, &r, &x, &y);\n  for (long long i = 1, j; i <= y / x; i = j + 1) {\n    j = y / i;\n    long long a = i * x, b = j * x;\n    if (a > r || b < l) continue;\n    if (a == b)\n      ans += 1;\n    else if (a + b > l)\n      ans += min(r / a, r / b) - max(l / a, l / b) + 1;\n  }\n  printf(\"%I64d\", ans);\n  return 0;\n}\n"}
{"src_uid": "d37dde5841116352c9b37538631d0b15", "id": 32, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 2 1 2\\r\\n', 'output': ['2']}, {'input': '1 12 1 12\\r\\n', 'output': ['4']}, {'input': '50 100 3 30\\r\\n', 'output': ['0']}, {'input': '1 1000000000 1 1000000000\\r\\n', 'output': ['4']}, {'input': '1 1000000000 158260522 200224287\\r\\n', 'output': ['0']}, {'input': '1 1000000000 2 755829150\\r\\n', 'output': ['8']}, {'input': '1 1000000000 158260522 158260522\\r\\n', 'output': ['1']}, {'input': '1 1000000000 877914575 877914575\\r\\n', 'output': ['1']}, {'input': '232 380232688 116 760465376\\r\\n', 'output': ['30']}, {'input': '47259 3393570 267 600661890\\r\\n', 'output': ['30']}, {'input': '1 1000000000 1 672672000\\r\\n', 'output': ['64']}, {'input': '1000000000 1000000000 1000000000 1000000000\\r\\n', 'output': ['1']}, {'input': '1 1000000000 1 649209600\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 682290000\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 228614400\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 800280000\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 919987200\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 456537870\\r\\n', 'output': ['64']}, {'input': '1 1000000000 1 7198102\\r\\n', 'output': ['8']}, {'input': '1 1000000000 1 58986263\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 316465536\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 9558312\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 5461344\\r\\n', 'output': ['16']}, {'input': '58 308939059 29 617878118\\r\\n', 'output': ['62']}, {'input': '837 16262937 27 504151047\\r\\n', 'output': ['28']}, {'input': '47275 402550 25 761222050\\r\\n', 'output': ['12']}, {'input': '22 944623394 22 944623394\\r\\n', 'output': ['32']}, {'input': '1032 8756124 12 753026664\\r\\n', 'output': ['18']}, {'input': '7238 939389 11 618117962\\r\\n', 'output': ['10']}, {'input': '58351 322621 23 818489477\\r\\n', 'output': ['6']}, {'input': '3450 7068875 25 975504750\\r\\n', 'output': ['86']}, {'input': '13266 1606792 22 968895576\\r\\n', 'output': ['14']}, {'input': '21930 632925 15 925336350\\r\\n', 'output': ['42']}, {'input': '2193 4224517 17 544962693\\r\\n', 'output': ['42']}, {'input': '526792 39807152 22904 915564496\\r\\n', 'output': ['8']}, {'input': '67728 122875524 16932 491502096\\r\\n', 'output': ['12']}, {'input': '319813 63298373 24601 822878849\\r\\n', 'output': ['6']}, {'input': '572464 23409136 15472 866138032\\r\\n', 'output': ['4']}, {'input': '39443 809059020 19716 777638472\\r\\n', 'output': ['12']}, {'input': '2544768 8906688 27072 837228672\\r\\n', 'output': ['0']}, {'input': '413592 46975344 21768 892531536\\r\\n', 'output': ['10']}, {'input': '11349 816231429 11349 816231429\\r\\n', 'output': ['8']}, {'input': '16578 939956022 16578 939956022\\r\\n', 'output': ['4']}, {'input': '2783175 6882425 21575 887832825\\r\\n', 'output': ['2']}, {'input': '2862252 7077972 22188 913058388\\r\\n', 'output': ['2']}, {'input': '1856828 13124976 25436 958123248\\r\\n', 'output': ['6']}, {'input': '100 1000000000 158260522 158260522\\r\\n', 'output': ['1']}, {'input': '100 1000000000 877914575 877914575\\r\\n', 'output': ['1']}, {'input': '100 1000000000 602436426 602436426\\r\\n', 'output': ['1']}, {'input': '100 1000000000 24979445 24979445\\r\\n', 'output': ['1']}, {'input': '1 1000000000 18470 112519240\\r\\n', 'output': ['4']}, {'input': '1 1000000000 22692 2201124\\r\\n', 'output': ['2']}, {'input': '1 1000000000 24190 400949250\\r\\n', 'output': ['16']}, {'input': '1 1000000000 33409 694005157\\r\\n', 'output': ['2']}, {'input': '1 1000000000 24967 470827686\\r\\n', 'output': ['16']}, {'input': '1 1000000000 35461 152517761\\r\\n', 'output': ['8']}, {'input': '2 1000000000 158260522 200224287\\r\\n', 'output': ['0']}, {'input': '2 1000000000 602436426 611751520\\r\\n', 'output': ['0']}, {'input': '2 1000000000 861648772 942726551\\r\\n', 'output': ['0']}, {'input': '2 1000000000 433933447 485982495\\r\\n', 'output': ['0']}, {'input': '2 1000000000 262703497 480832794\\r\\n', 'output': ['0']}, {'input': '2672374 422235092 1336187 844470184\\r\\n', 'output': ['2']}, {'input': '1321815 935845020 1321815 935845020\\r\\n', 'output': ['8']}, {'input': '29259607 69772909 2250739 907047817\\r\\n', 'output': ['2']}, {'input': '11678540 172842392 2335708 864211960\\r\\n', 'output': ['4']}, {'input': '297 173688298 2876112 851329152\\r\\n', 'output': ['2']}, {'input': '7249 55497026 659 610467286\\r\\n', 'output': ['28']}, {'input': '398520 1481490 810 728893080\\r\\n', 'output': ['4']}, {'input': '2354 369467362 1177 738934724\\r\\n', 'output': ['14']}, {'input': '407264 2497352 1144 889057312\\r\\n', 'output': ['2']}, {'input': '321399 1651014 603 879990462\\r\\n', 'output': ['4']}, {'input': '475640 486640 440 526057840\\r\\n', 'output': ['2']}, {'input': '631714 179724831 1136 717625968\\r\\n', 'output': ['0']}, {'input': '280476 1595832 588 761211864\\r\\n', 'output': ['8']}, {'input': '10455 39598005 615 673166085\\r\\n', 'output': ['6']}, {'input': '24725 19759875 575 849674625\\r\\n', 'output': ['22']}, {'input': '22 158 2 1738\\r\\n', 'output': ['2']}, {'input': '1 2623 1 2623\\r\\n', 'output': ['4']}, {'input': '7 163677675 3 18\\r\\n', 'output': ['0']}, {'input': '159 20749927 1 158\\r\\n', 'output': ['0']}, {'input': '5252 477594071 1 5251\\r\\n', 'output': ['0']}, {'input': '2202 449433679 3 6603\\r\\n', 'output': ['0']}, {'input': '6 111 3 222\\r\\n', 'output': ['2']}, {'input': '26 46 2 598\\r\\n', 'output': ['2']}, {'input': '26 82 2 1066\\r\\n', 'output': ['2']}, {'input': '1 2993 1 2993\\r\\n', 'output': ['4']}, {'input': '17 17 1 289\\r\\n', 'output': ['0']}, {'input': '177 267 3 15753\\r\\n', 'output': ['2']}, {'input': '7388 22705183 1 7387\\r\\n', 'output': ['0']}, {'input': '1 100 3 100\\r\\n', 'output': ['0']}, {'input': '1 1000 6 1024\\r\\n', 'output': ['0']}, {'input': '1 100 2 4\\r\\n', 'output': ['2']}, {'input': '1 10000 2 455\\r\\n', 'output': ['0']}, {'input': '1 1000000000 250000000 1000000000\\r\\n', 'output': ['2']}, {'input': '3 3 1 1\\r\\n', 'output': ['0']}, {'input': '1 1000000000 100000000 1000000000\\r\\n', 'output': ['4']}, {'input': '5 10 3 3\\r\\n', 'output': ['0']}, {'input': '1 1000 5 13\\r\\n', 'output': ['0']}, {'input': '2 2 3 3\\r\\n', 'output': ['0']}, {'input': '1 1000000000 499999993 999999986\\r\\n', 'output': ['2']}, {'input': '1 1 1 10\\r\\n', 'output': ['0']}, {'input': '1 10 10 100\\r\\n', 'output': ['0']}, {'input': '1 1000 4 36\\r\\n', 'output': ['2']}, {'input': '1 1000000000 10000000 20000000\\r\\n', 'output': ['2']}, {'input': '100 100 5 5\\r\\n', 'output': ['0']}, {'input': '3 3 3 9\\r\\n', 'output': ['0']}, {'input': '36 200 24 144\\r\\n', 'output': ['2']}, {'input': '1 100 3 10\\r\\n', 'output': ['0']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 1000 * 1000 * 1000 + 10;\nlong long l, r, x, y, ans;\nlong long cnt[N], gcd[N], lcm[N];\nvoid prepare() {\n  for (long long i = 1; i <= r; i++) {\n    for (long long j = i; j <= r; j += i) {\n      cnt[j] += i;\n      gcd[j] = max(gcd[j], i);\n      lcm[j] = lcm[j] * i / gcd[j];\n    }\n  }\n}\nlong long solve() {\n  long long res = 0;\n  for (long long i = 1; i * i <= y; i++)\n    if (y % i == 0) {\n      if (x == 1 && y / i >= i) {\n        res += (min(l, y / i) - i) + 1;\n      } else if (x == y / i)\n        res += 1;\n    }\n  return res;\n}\nint main() {\n  cin >> l >> r >> x >> y;\n  prepare();\n  if (x == 1) ans += cnt[y];\n  if (x == y) ans += y / x - max(l, 1LL) + 1;\n  if (x > 1) ans += solve();\n  cout << ans << endl;\n  return 0;\n}\n"}
{"src_uid": "d37dde5841116352c9b37538631d0b15", "id": 32, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 2 1 2\\r\\n', 'output': ['2']}, {'input': '1 12 1 12\\r\\n', 'output': ['4']}, {'input': '50 100 3 30\\r\\n', 'output': ['0']}, {'input': '1 1000000000 1 1000000000\\r\\n', 'output': ['4']}, {'input': '1 1000000000 158260522 200224287\\r\\n', 'output': ['0']}, {'input': '1 1000000000 2 755829150\\r\\n', 'output': ['8']}, {'input': '1 1000000000 158260522 158260522\\r\\n', 'output': ['1']}, {'input': '1 1000000000 877914575 877914575\\r\\n', 'output': ['1']}, {'input': '232 380232688 116 760465376\\r\\n', 'output': ['30']}, {'input': '47259 3393570 267 600661890\\r\\n', 'output': ['30']}, {'input': '1 1000000000 1 672672000\\r\\n', 'output': ['64']}, {'input': '1000000000 1000000000 1000000000 1000000000\\r\\n', 'output': ['1']}, {'input': '1 1000000000 1 649209600\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 682290000\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 228614400\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 800280000\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 919987200\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 456537870\\r\\n', 'output': ['64']}, {'input': '1 1000000000 1 7198102\\r\\n', 'output': ['8']}, {'input': '1 1000000000 1 58986263\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 316465536\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 9558312\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 5461344\\r\\n', 'output': ['16']}, {'input': '58 308939059 29 617878118\\r\\n', 'output': ['62']}, {'input': '837 16262937 27 504151047\\r\\n', 'output': ['28']}, {'input': '47275 402550 25 761222050\\r\\n', 'output': ['12']}, {'input': '22 944623394 22 944623394\\r\\n', 'output': ['32']}, {'input': '1032 8756124 12 753026664\\r\\n', 'output': ['18']}, {'input': '7238 939389 11 618117962\\r\\n', 'output': ['10']}, {'input': '58351 322621 23 818489477\\r\\n', 'output': ['6']}, {'input': '3450 7068875 25 975504750\\r\\n', 'output': ['86']}, {'input': '13266 1606792 22 968895576\\r\\n', 'output': ['14']}, {'input': '21930 632925 15 925336350\\r\\n', 'output': ['42']}, {'input': '2193 4224517 17 544962693\\r\\n', 'output': ['42']}, {'input': '526792 39807152 22904 915564496\\r\\n', 'output': ['8']}, {'input': '67728 122875524 16932 491502096\\r\\n', 'output': ['12']}, {'input': '319813 63298373 24601 822878849\\r\\n', 'output': ['6']}, {'input': '572464 23409136 15472 866138032\\r\\n', 'output': ['4']}, {'input': '39443 809059020 19716 777638472\\r\\n', 'output': ['12']}, {'input': '2544768 8906688 27072 837228672\\r\\n', 'output': ['0']}, {'input': '413592 46975344 21768 892531536\\r\\n', 'output': ['10']}, {'input': '11349 816231429 11349 816231429\\r\\n', 'output': ['8']}, {'input': '16578 939956022 16578 939956022\\r\\n', 'output': ['4']}, {'input': '2783175 6882425 21575 887832825\\r\\n', 'output': ['2']}, {'input': '2862252 7077972 22188 913058388\\r\\n', 'output': ['2']}, {'input': '1856828 13124976 25436 958123248\\r\\n', 'output': ['6']}, {'input': '100 1000000000 158260522 158260522\\r\\n', 'output': ['1']}, {'input': '100 1000000000 877914575 877914575\\r\\n', 'output': ['1']}, {'input': '100 1000000000 602436426 602436426\\r\\n', 'output': ['1']}, {'input': '100 1000000000 24979445 24979445\\r\\n', 'output': ['1']}, {'input': '1 1000000000 18470 112519240\\r\\n', 'output': ['4']}, {'input': '1 1000000000 22692 2201124\\r\\n', 'output': ['2']}, {'input': '1 1000000000 24190 400949250\\r\\n', 'output': ['16']}, {'input': '1 1000000000 33409 694005157\\r\\n', 'output': ['2']}, {'input': '1 1000000000 24967 470827686\\r\\n', 'output': ['16']}, {'input': '1 1000000000 35461 152517761\\r\\n', 'output': ['8']}, {'input': '2 1000000000 158260522 200224287\\r\\n', 'output': ['0']}, {'input': '2 1000000000 602436426 611751520\\r\\n', 'output': ['0']}, {'input': '2 1000000000 861648772 942726551\\r\\n', 'output': ['0']}, {'input': '2 1000000000 433933447 485982495\\r\\n', 'output': ['0']}, {'input': '2 1000000000 262703497 480832794\\r\\n', 'output': ['0']}, {'input': '2672374 422235092 1336187 844470184\\r\\n', 'output': ['2']}, {'input': '1321815 935845020 1321815 935845020\\r\\n', 'output': ['8']}, {'input': '29259607 69772909 2250739 907047817\\r\\n', 'output': ['2']}, {'input': '11678540 172842392 2335708 864211960\\r\\n', 'output': ['4']}, {'input': '297 173688298 2876112 851329152\\r\\n', 'output': ['2']}, {'input': '7249 55497026 659 610467286\\r\\n', 'output': ['28']}, {'input': '398520 1481490 810 728893080\\r\\n', 'output': ['4']}, {'input': '2354 369467362 1177 738934724\\r\\n', 'output': ['14']}, {'input': '407264 2497352 1144 889057312\\r\\n', 'output': ['2']}, {'input': '321399 1651014 603 879990462\\r\\n', 'output': ['4']}, {'input': '475640 486640 440 526057840\\r\\n', 'output': ['2']}, {'input': '631714 179724831 1136 717625968\\r\\n', 'output': ['0']}, {'input': '280476 1595832 588 761211864\\r\\n', 'output': ['8']}, {'input': '10455 39598005 615 673166085\\r\\n', 'output': ['6']}, {'input': '24725 19759875 575 849674625\\r\\n', 'output': ['22']}, {'input': '22 158 2 1738\\r\\n', 'output': ['2']}, {'input': '1 2623 1 2623\\r\\n', 'output': ['4']}, {'input': '7 163677675 3 18\\r\\n', 'output': ['0']}, {'input': '159 20749927 1 158\\r\\n', 'output': ['0']}, {'input': '5252 477594071 1 5251\\r\\n', 'output': ['0']}, {'input': '2202 449433679 3 6603\\r\\n', 'output': ['0']}, {'input': '6 111 3 222\\r\\n', 'output': ['2']}, {'input': '26 46 2 598\\r\\n', 'output': ['2']}, {'input': '26 82 2 1066\\r\\n', 'output': ['2']}, {'input': '1 2993 1 2993\\r\\n', 'output': ['4']}, {'input': '17 17 1 289\\r\\n', 'output': ['0']}, {'input': '177 267 3 15753\\r\\n', 'output': ['2']}, {'input': '7388 22705183 1 7387\\r\\n', 'output': ['0']}, {'input': '1 100 3 100\\r\\n', 'output': ['0']}, {'input': '1 1000 6 1024\\r\\n', 'output': ['0']}, {'input': '1 100 2 4\\r\\n', 'output': ['2']}, {'input': '1 10000 2 455\\r\\n', 'output': ['0']}, {'input': '1 1000000000 250000000 1000000000\\r\\n', 'output': ['2']}, {'input': '3 3 1 1\\r\\n', 'output': ['0']}, {'input': '1 1000000000 100000000 1000000000\\r\\n', 'output': ['4']}, {'input': '5 10 3 3\\r\\n', 'output': ['0']}, {'input': '1 1000 5 13\\r\\n', 'output': ['0']}, {'input': '2 2 3 3\\r\\n', 'output': ['0']}, {'input': '1 1000000000 499999993 999999986\\r\\n', 'output': ['2']}, {'input': '1 1 1 10\\r\\n', 'output': ['0']}, {'input': '1 10 10 100\\r\\n', 'output': ['0']}, {'input': '1 1000 4 36\\r\\n', 'output': ['2']}, {'input': '1 1000000000 10000000 20000000\\r\\n', 'output': ['2']}, {'input': '100 100 5 5\\r\\n', 'output': ['0']}, {'input': '3 3 3 9\\r\\n', 'output': ['0']}, {'input': '36 200 24 144\\r\\n', 'output': ['2']}, {'input': '1 100 3 10\\r\\n', 'output': ['0']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst double eps = 1e-9;\nconst int INF = 0x3f3f3f3f;\nconst long long linf = 0x3f3f3f3f3f3f3f3f;\nint l, r, X, Y;\nlong long L, R;\nbool calc(long long l, long long r) {\n  long long ans = r / X - l / X;\n  long long cur = l;\n  while (cur <= r) {\n    if ((lcm(cur, X) > Y && lcm(cur, X) - Y <= r) ||\n        (r / X >= cur / X && lcm(cur, X) >= Y)) {\n      ans--;\n    }\n    cur++;\n  }\n  return ans >= 0;\n}\nint main() {\n  while (~scanf(\"%d%d%d%d\", &l, &r, &X, &Y)) {\n    if (X > Y) swap(X, Y);\n    if (r / X < l) {\n      printf(\"0\\n\");\n      continue;\n    }\n    L = l;\n    R = r / X;\n    long long ans = 0;\n    if (calc(L, R)) ans++;\n    if (L * X <= Y && calc(L * X, R * X)) ans++;\n    if (L * X + 1 <= Y && calc(L * X + 1, R * X)) ans++;\n    printf(\"%lld\\n\", ans);\n  }\n  return 0;\n}\n"}
{"src_uid": "fbfc333ad4b0a750f654a00be84aea67", "id": 33, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '4 2\\r\\n1 3\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 6\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n2 3\\r\\n2 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 5\\r\\n4 2\\r\\n3 5\\r\\n4 5\\r\\n5 1\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '5 4\\r\\n1 2\\r\\n3 2\\r\\n3 4\\r\\n5 4\\r\\n', 'output': ['4\\r\\n']}, {'input': '3 1\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 1\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '20 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '381 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 1\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 1\\r\\n1 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 5\\r\\n1 3\\r\\n2 1\\r\\n3 4\\r\\n4 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '20 1\\r\\n20 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '21 1\\r\\n21 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '100 1\\r\\n100 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '400 1\\r\\n1 400\\r\\n', 'output': ['2\\r\\n']}, {'input': '5 5\\r\\n2 5\\r\\n1 2\\r\\n1 4\\r\\n1 3\\r\\n3 2\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int max_n = 500 + 5;\nvector<int> g[max_n];\nint c[max_n];\nint ans = -1;\nvoid dfs(int u, int p) {\n  c[u] = 1;\n  for (int i = 0; i < g[u].size(); i++) {\n    if (g[u][i]!= p) {\n      int v = g[u][i];\n      if (c[v]) {\n        ans = max(ans, c[v]);\n      } else {\n        dfs(v, u);\n        c[u] = max(c[u], c[v] + 1);\n      }\n    }\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  int n, m;\n  cin >> n >> m;\n  for (int i = 0; i < m; i++) {\n    int u, v;\n    cin >> u >> v;\n    g[u].push_back(v);\n    g[v].push_back(u);\n  }\n  dfs(1, -1);\n  if (ans == 0) {\n    cout << -1;\n    return 0;\n  }\n  cout << ans;\n  return 0;\n}\n"}
{"src_uid": "fbfc333ad4b0a750f654a00be84aea67", "id": 33, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '4 2\\r\\n1 3\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 6\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n2 3\\r\\n2 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 5\\r\\n4 2\\r\\n3 5\\r\\n4 5\\r\\n5 1\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '5 4\\r\\n1 2\\r\\n3 2\\r\\n3 4\\r\\n5 4\\r\\n', 'output': ['4\\r\\n']}, {'input': '3 1\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 1\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '20 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '381 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 1\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 1\\r\\n1 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 5\\r\\n1 3\\r\\n2 1\\r\\n3 4\\r\\n4 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '20 1\\r\\n20 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '21 1\\r\\n21 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '100 1\\r\\n100 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '400 1\\r\\n1 400\\r\\n', 'output': ['2\\r\\n']}, {'input': '5 5\\r\\n2 5\\r\\n1 2\\r\\n1 4\\r\\n1 3\\r\\n3 2\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long ans, s, n, m, i, j;\nint main() {\n  cin >> n >> m;\n  s = (n * (n - 1)) / 2;\n  while (m--) {\n    long long u, v;\n    cin >> u >> v;\n    ans += v - u;\n  }\n  if (ans >= s) {\n    cout << \"-1\";\n    return 0;\n  }\n  ans += n - 1;\n  cout << ans;\n  return 0;\n}\n"}
{"src_uid": "fbfc333ad4b0a750f654a00be84aea67", "id": 33, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '4 2\\r\\n1 3\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 6\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n2 3\\r\\n2 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 5\\r\\n4 2\\r\\n3 5\\r\\n4 5\\r\\n5 1\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '5 4\\r\\n1 2\\r\\n3 2\\r\\n3 4\\r\\n5 4\\r\\n', 'output': ['4\\r\\n']}, {'input': '3 1\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 1\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '20 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '381 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 1\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 1\\r\\n1 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 5\\r\\n1 3\\r\\n2 1\\r\\n3 4\\r\\n4 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '20 1\\r\\n20 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '21 1\\r\\n21 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '100 1\\r\\n100 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '400 1\\r\\n1 400\\r\\n', 'output': ['2\\r\\n']}, {'input': '5 5\\r\\n2 5\\r\\n1 2\\r\\n1 4\\r\\n1 3\\r\\n3 2\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 1e9 + 7;\nconst int INF = INT_MAX;\nconst long long INF64 = 4e18 + 10;\nconst long double EPS = 1e-7;\nint n;\nint adj[410][410];\nint main() {\n  int m;\n  cin >> n >> m;\n  for (int i = 0; i < m; i++) {\n    int u, v;\n    cin >> u >> v;\n    u--;\n    v--;\n    adj[u][v] = 1;\n    adj[v][u] = 1;\n  }\n  int dp[410][410] = {0};\n  dp[1][1] = 1;\n  int u = 1, v = 1;\n  while (dp[u][v] < INF) {\n    dp[u][v]++;\n    if (v == n) break;\n    int nxt;\n    bool flag = false;\n    for (int i = 0; i < n; i++) {\n      if (!adj[v][i]) {\n        nxt = i;\n        flag = true;\n        break;\n      }\n    }\n    if (flag) {\n      if (dp[u][nxt] > dp[u][v] + 1) dp[u][nxt] = dp[u][v] + 1;\n    }\n    for (int i = 0; i < n; i++) {\n      if (!adj[i][v] && dp[i][v] < INF && dp[i][nxt] > dp[u][v] + 1)\n        dp[i][nxt] = dp[u][v] + 1;\n    }\n    u = v;\n    v = nxt;\n  }\n  if (dp[u][n] == INF)\n    cout << -1;\n  else\n    cout << dp[u][n];\n  cout << endl;\n}\n"}
{"src_uid": "fbfc333ad4b0a750f654a00be84aea67", "id": 33, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '4 2\\r\\n1 3\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 6\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n2 3\\r\\n2 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 5\\r\\n4 2\\r\\n3 5\\r\\n4 5\\r\\n5 1\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '5 4\\r\\n1 2\\r\\n3 2\\r\\n3 4\\r\\n5 4\\r\\n', 'output': ['4\\r\\n']}, {'input': '3 1\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 1\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '20 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '381 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 1\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 1\\r\\n1 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 5\\r\\n1 3\\r\\n2 1\\r\\n3 4\\r\\n4 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '20 1\\r\\n20 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '21 1\\r\\n21 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '100 1\\r\\n100 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '400 1\\r\\n1 400\\r\\n', 'output': ['2\\r\\n']}, {'input': '5 5\\r\\n2 5\\r\\n1 2\\r\\n1 4\\r\\n1 3\\r\\n3 2\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nbool a[445][445];\nint n, m, c[2], f[2], vis[445], d[2];\nint Dfs(int now, int o) {\n  if (now == n) return 1;\n  if (vis[now] == o) return -1;\n  vis[now] = o;\n  int i, res = -1;\n  if (o == 0) {\n    for (i = 1; i <= n; i++)\n      if (a[now][i]) res = max(res, Dfs(i, 1));\n  } else {\n    for (i = 1; i <= n; i++)\n      if (a[now][i] &&!vis[i]) res = max(res, Dfs(i, 0));\n  }\n  vis[now] = 0;\n  return res;\n}\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  int i, j, u, v;\n  for (i = 1; i <= m; i++) {\n    scanf(\"%d%d\", &u, &v);\n    a[u][v] = 1;\n    a[v][u] = 1;\n  }\n  c[0] = c[1] = f[0] = f[1] = 0;\n  d[0] = Dfs(1, 1);\n  d[1] = Dfs(1, 0);\n  for (i = 1; i <= n; i++)\n    for (j = i + 1; j <= n; j++) {\n      if (!a[i][j]) c[0]++;\n      if (a[i][j]) f[0]++;\n      if (!a[i][j] &&!a[j][i]) c[1]++;\n      if (a[i][j] &&!a[j][i]) f[1]++;\n    }\n  if (d[0] == -1 || d[1] == -1) {\n    printf(\"-1\\n\");\n    return 0;\n  }\n  if (d[0] + d[1] - (c[0] - f[0]) * 2 > d[1])\n    printf(\"%d\\n\", d[0] + d[1] - (c[0] - f[0]) * 2);\n  else\n    printf(\"%d\\n\", d[0] + d[1] - (c[1] - f[1]) * 2);\n  return 0;\n}\n"}
{"src_uid": "fbfc333ad4b0a750f654a00be84aea67", "id": 33, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '4 2\\r\\n1 3\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 6\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n2 3\\r\\n2 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 5\\r\\n4 2\\r\\n3 5\\r\\n4 5\\r\\n5 1\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '5 4\\r\\n1 2\\r\\n3 2\\r\\n3 4\\r\\n5 4\\r\\n', 'output': ['4\\r\\n']}, {'input': '3 1\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 1\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '20 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '381 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 1\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 1\\r\\n1 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 5\\r\\n1 3\\r\\n2 1\\r\\n3 4\\r\\n4 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '20 1\\r\\n20 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '21 1\\r\\n21 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '100 1\\r\\n100 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '400 1\\r\\n1 400\\r\\n', 'output': ['2\\r\\n']}, {'input': '5 5\\r\\n2 5\\r\\n1 2\\r\\n1 4\\r\\n1 3\\r\\n3 2\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nvector<int> v[400 + 10];\nint dp[400 + 10][400 + 10];\nint solve(int pos, int cur) {\n  int &ret = dp[pos][cur];\n  if (ret >= 0) return ret;\n  if (pos == cur) return ret = 0;\n  ret = 1e9;\n  for (int i = 0; i < v[pos].size(); i++) {\n    int nex = v[pos][i];\n    ret = min(ret, solve(nex, cur));\n  }\n  ret++;\n  return ret;\n}\nint main() {\n  int n, m;\n  cin >> n >> m;\n  for (int i = 0; i < m; i++) {\n    int u, v;\n    cin >> u >> v;\n    v[u].push_back(v);\n    v[v].push_back(u);\n  }\n  memset(dp, -1, sizeof dp);\n  int cur = 0;\n  int ret = solve(1, n);\n  if (ret >= 1e9) ret = -1;\n  cout << ret << endl;\n  return 0;\n}\n"}
{"src_uid": "ecda878d924325789dc05035e4f4bbe0", "id": 34, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '4\\r\\n1 2 3 12\\r\\n', 'output': ['3\\r\\n1 2 12 \\r\\n']}, {'input': '4\\r\\n1 1 2 2\\r\\n', 'output': ['3\\r\\n1 1 2 \\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['2\\r\\n1 2\\r\\n']}, {'input': '1\\r\\n1000000\\r\\n', 'output': ['1\\r\\n1000000 \\r\\n']}, {'input': '20\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712\\r\\n', 'output': ['1\\r\\n475712 \\r\\n']}, {'input': '21\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712 1000000\\r\\n', 'output': ['1\\r\\n475712 \\r\\n']}, {'input': '40\\r\\n999999 999999 999998 999998 999996 999996 999992 999992 999984 999984 999968 999968 999936 999936 999872 999872 999744 999744 999488 999488 998976 998976 997952 997952 995904 995904 991808 991808 983616 983616 967232 967232 934464 934464 868928 868928 737856 737856 475712 0\\r\\n', 'output': ['3\\r\\n737856 737856 999999 \\r\\n']}, {'input': '1\\r\\n534166\\r\\n', 'output': ['1\\r\\n534166 \\r\\n']}, {'input': '1\\r\\n412237\\r\\n', 'output': ['1\\r\\n412237 \\r\\n']}, {'input': '1\\r\\n253309\\r\\n', 'output': ['1\\r\\n253309 \\r\\n']}, {'input': '1\\r\\n94381\\r\\n', 'output': ['1\\r\\n94381 \\r\\n']}, {'input': '1\\r\\n935454\\r\\n', 'output': ['1\\r\\n935454 \\r\\n']}, {'input': '2\\r\\n847420 569122\\r\\n', 'output': ['2\\r\\n847420 569122\\r\\n']}, {'input': '2\\r\\n725491 635622\\r\\n', 'output': ['2\\r\\n725491 635622\\r\\n']}, {'input': '2\\r\\n566563 590441\\r\\n', 'output': ['2\\r\\n566563 590441\\r\\n']}, {'input': '2\\r\\n407635 619942\\r\\n', 'output': ['2\\r\\n407635 619942\\r\\n']}, {'input': '2\\r\\n248707 649443\\r\\n', 'output': ['2\\r\\n248707 649443\\r\\n']}, {'input': '3\\r\\n198356 154895 894059\\r\\n', 'output': ['3\\r\\n154895 198356 894059 \\r\\n']}, {'input': '3\\r\\n76427 184396 963319\\r\\n', 'output': ['3\\r\\n76427 184396 963319 \\r\\n']}, {'input': '3\\r\\n880502 176898 958582\\r\\n', 'output': ['1\\r\\n176898 \\r\\n']}, {'input': '3\\r\\n758573 206400 991528\\r\\n', 'output': ['1\\r\\n206400 \\r\\n']}, {'input': '3\\r\\n599645 198217 986791\\r\\n', 'output': ['1\\r\\n198217 \\r\\n']}, {'input': '4\\r\\n549294 703669 96824 126683\\r\\n', 'output': ['3\\r\\n96824 126683 703669 \\r\\n']}, {'input': '4\\r\\n390366 733171 92086 595244\\r\\n', 'output': ['3\\r\\n92086 390366 733171 \\r\\n']}, {'input': '4\\r\\n231438 762672 125033 26806\\r\\n', 'output': ['3\\r\\n26806 125033 762672 \\r\\n']}, {'input': '4\\r\\n109509 792173 120296 495368\\r\\n', 'output': ['3\\r\\n109509 120296 792173 \\r\\n']}, {'input': '4\\r\\n950582 784676 190241 964614\\r\\n', 'output': ['1\\r\\n190241 \\r\\n']}, {'input': '5\\r\\n900232 289442 225592 622868 113587\\r\\n', 'output': ['3\\r\\n113587 225592 900232 \\r\\n']}, {'input': '5\\r\\n741304 281944 258539 54430 284591\\r\\n', 'output': ['3\\r\\n281944 284591 741304 \\r\\n']}, {'input': '5\\r\\n582376 311446 253801 560676 530279\\r\\n', 'output': ['3\\r\\n253801 311446 582376 \\r\\n']}, {'input': '5\\r\\n460447 303948 286063 992238 738282\\r\\n', 'output': ['3\\r\\n286063 303948 992238 \\r\\n']}, {'input': '5\\r\\n301519 370449 319010 460799 983970\\r\\n', 'output': ['3\\r\\n301519 319010 983970 \\r\\n']}, {'input': '21\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712 999998\\r\\n', 'output': ['3\\r\\n999998 999998 999999 \\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e5 + 5;\nint A[maxn];\nstruct P {\n  int x, y;\n  bool friend operator<(P a, P b) { return a.x > b.x; }\n} ANS;\npriority_queue<P> Q;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int N;\n  cin >> N;\n  for (int i = 1; i <= N; ++i) {\n    cin >> A[i];\n  }\n  A[0] = -1e9;\n  A[N + 1] = 1e9;\n  int now = -1;\n  long long ret = 0;\n  for (int i = 0; i <= N + 1; ++i) {\n    if (i!= now) Q.push(P{A[i], i}), now = i;\n    int u = Q.top().y;\n    if (u!= now) continue;\n    int M = Q.size(), M1 = Q.size() / 2;\n    long long cur = 0;\n    cur -= A[Q.top().y];\n    Q.pop();\n    long long mx = -1e18;\n    long long med = A[Q.top().y];\n    for (int i = 0; i < M1; ++i) {\n      cur += A[Q.top().y];\n      mx = max(mx, cur);\n      Q.pop();\n    }\n    cur = 0;\n    cur -= A[Q.top().y];\n    for (int i = M1 + 1; i < M; ++i) {\n      cur += A[Q.top().y];\n      mx = max(mx, cur);\n      Q.pop();\n    }\n    ret = max(ret, mx);\n  }\n  int P1, P2;\n  Q.push(P{ANS.x, ANS.y});\n  Q.push(P{ANS.x, ANS.y});\n  for (int i = 0; i <= N + 1; ++i) {\n    P1 = Q.top().y;\n    Q.pop();\n    P2 = Q.top().y;\n    if (P1!= now && P2!= now) continue;\n    ANS.x = A[P1] + A[P2];\n    ANS.y = P2 - P1 + 1;\n    now = P1;\n    Q.push(P{ANS.x, ANS.y}), now = P1;\n  }\n  cout << ANS.y << endl;\n  for (int i = now + 1; i <= now + ANS.y; ++i) {\n    cout << A[i] << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"}
{"src_uid": "ecda878d924325789dc05035e4f4bbe0", "id": 34, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '4\\r\\n1 2 3 12\\r\\n', 'output': ['3\\r\\n1 2 12 \\r\\n']}, {'input': '4\\r\\n1 1 2 2\\r\\n', 'output': ['3\\r\\n1 1 2 \\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['2\\r\\n1 2\\r\\n']}, {'input': '1\\r\\n1000000\\r\\n', 'output': ['1\\r\\n1000000 \\r\\n']}, {'input': '20\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712\\r\\n', 'output': ['1\\r\\n475712 \\r\\n']}, {'input': '21\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712 1000000\\r\\n', 'output': ['1\\r\\n475712 \\r\\n']}, {'input': '40\\r\\n999999 999999 999998 999998 999996 999996 999992 999992 999984 999984 999968 999968 999936 999936 999872 999872 999744 999744 999488 999488 998976 998976 997952 997952 995904 995904 991808 991808 983616 983616 967232 967232 934464 934464 868928 868928 737856 737856 475712 0\\r\\n', 'output': ['3\\r\\n737856 737856 999999 \\r\\n']}, {'input': '1\\r\\n534166\\r\\n', 'output': ['1\\r\\n534166 \\r\\n']}, {'input': '1\\r\\n412237\\r\\n', 'output': ['1\\r\\n412237 \\r\\n']}, {'input': '1\\r\\n253309\\r\\n', 'output': ['1\\r\\n253309 \\r\\n']}, {'input': '1\\r\\n94381\\r\\n', 'output': ['1\\r\\n94381 \\r\\n']}, {'input': '1\\r\\n935454\\r\\n', 'output': ['1\\r\\n935454 \\r\\n']}, {'input': '2\\r\\n847420 569122\\r\\n', 'output': ['2\\r\\n847420 569122\\r\\n']}, {'input': '2\\r\\n725491 635622\\r\\n', 'output': ['2\\r\\n725491 635622\\r\\n']}, {'input': '2\\r\\n566563 590441\\r\\n', 'output': ['2\\r\\n566563 590441\\r\\n']}, {'input': '2\\r\\n407635 619942\\r\\n', 'output': ['2\\r\\n407635 619942\\r\\n']}, {'input': '2\\r\\n248707 649443\\r\\n', 'output': ['2\\r\\n248707 649443\\r\\n']}, {'input': '3\\r\\n198356 154895 894059\\r\\n', 'output': ['3\\r\\n154895 198356 894059 \\r\\n']}, {'input': '3\\r\\n76427 184396 963319\\r\\n', 'output': ['3\\r\\n76427 184396 963319 \\r\\n']}, {'input': '3\\r\\n880502 176898 958582\\r\\n', 'output': ['1\\r\\n176898 \\r\\n']}, {'input': '3\\r\\n758573 206400 991528\\r\\n', 'output': ['1\\r\\n206400 \\r\\n']}, {'input': '3\\r\\n599645 198217 986791\\r\\n', 'output': ['1\\r\\n198217 \\r\\n']}, {'input': '4\\r\\n549294 703669 96824 126683\\r\\n', 'output': ['3\\r\\n96824 126683 703669 \\r\\n']}, {'input': '4\\r\\n390366 733171 92086 595244\\r\\n', 'output': ['3\\r\\n92086 390366 733171 \\r\\n']}, {'input': '4\\r\\n231438 762672 125033 26806\\r\\n', 'output': ['3\\r\\n26806 125033 762672 \\r\\n']}, {'input': '4\\r\\n109509 792173 120296 495368\\r\\n', 'output': ['3\\r\\n109509 120296 792173 \\r\\n']}, {'input': '4\\r\\n950582 784676 190241 964614\\r\\n', 'output': ['1\\r\\n190241 \\r\\n']}, {'input': '5\\r\\n900232 289442 225592 622868 113587\\r\\n', 'output': ['3\\r\\n113587 225592 900232 \\r\\n']}, {'input': '5\\r\\n741304 281944 258539 54430 284591\\r\\n', 'output': ['3\\r\\n281944 284591 741304 \\r\\n']}, {'input': '5\\r\\n582376 311446 253801 560676 530279\\r\\n', 'output': ['3\\r\\n253801 311446 582376 \\r\\n']}, {'input': '5\\r\\n460447 303948 286063 992238 738282\\r\\n', 'output': ['3\\r\\n286063 303948 992238 \\r\\n']}, {'input': '5\\r\\n301519 370449 319010 460799 983970\\r\\n', 'output': ['3\\r\\n301519 319010 983970 \\r\\n']}, {'input': '21\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712 999998\\r\\n', 'output': ['3\\r\\n999998 999998 999999 \\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, a[200005], sum[200005];\ndouble mean(int x) {\n  if (x > n) {\n    x = n;\n  }\n  return (sum[x] * 1.0) / (x * 1.0);\n}\ndouble smean(int a, int b) {\n  if (b > n) {\n    b = n;\n  }\n  return (sum[b] - sum[a]) * 1.0 / ((b - a) * 1.0);\n}\nint main() {\n  cin >> n;\n  sum[0] = 0;\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &a[i]);\n    sum[i] = sum[i - 1] + a[i];\n  }\n  double ans = -100000000000.0, best[200005];\n  for (int i = 1; i <= n; i++) {\n    best[i] = -1000000000000.0;\n  }\n  int k = 0, t = 0, x = 0;\n  for (int i = 0; i <= n; i++) {\n    int j = i;\n    while (j <= n) {\n      if (smean(i, j) - mean(j) > ans) {\n        ans = smean(i, j) - mean(j);\n        k = i;\n        t = j;\n        x = j - i + 1;\n      }\n      if (smean(i, j) - mean(j) > best[j]) {\n        best[j] = smean(i, j) - mean(j);\n      }\n      j++;\n    }\n  }\n  cout << x << endl;\n  for (int i = k + 1; i <= t; i++) {\n    cout << a[i] << \" \";\n  }\n}\n"}
{"src_uid": "ecda878d924325789dc05035e4f4bbe0", "id": 34, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '4\\r\\n1 2 3 12\\r\\n', 'output': ['3\\r\\n1 2 12 \\r\\n']}, {'input': '4\\r\\n1 1 2 2\\r\\n', 'output': ['3\\r\\n1 1 2 \\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['2\\r\\n1 2\\r\\n']}, {'input': '1\\r\\n1000000\\r\\n', 'output': ['1\\r\\n1000000 \\r\\n']}, {'input': '20\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712\\r\\n', 'output': ['1\\r\\n475712 \\r\\n']}, {'input': '21\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712 1000000\\r\\n', 'output': ['1\\r\\n475712 \\r\\n']}, {'input': '40\\r\\n999999 999999 999998 999998 999996 999996 999992 999992 999984 999984 999968 999968 999936 999936 999872 999872 999744 999744 999488 999488 998976 998976 997952 997952 995904 995904 991808 991808 983616 983616 967232 967232 934464 934464 868928 868928 737856 737856 475712 0\\r\\n', 'output': ['3\\r\\n737856 737856 999999 \\r\\n']}, {'input': '1\\r\\n534166\\r\\n', 'output': ['1\\r\\n534166 \\r\\n']}, {'input': '1\\r\\n412237\\r\\n', 'output': ['1\\r\\n412237 \\r\\n']}, {'input': '1\\r\\n253309\\r\\n', 'output': ['1\\r\\n253309 \\r\\n']}, {'input': '1\\r\\n94381\\r\\n', 'output': ['1\\r\\n94381 \\r\\n']}, {'input': '1\\r\\n935454\\r\\n', 'output': ['1\\r\\n935454 \\r\\n']}, {'input': '2\\r\\n847420 569122\\r\\n', 'output': ['2\\r\\n847420 569122\\r\\n']}, {'input': '2\\r\\n725491 635622\\r\\n', 'output': ['2\\r\\n725491 635622\\r\\n']}, {'input': '2\\r\\n566563 590441\\r\\n', 'output': ['2\\r\\n566563 590441\\r\\n']}, {'input': '2\\r\\n407635 619942\\r\\n', 'output': ['2\\r\\n407635 619942\\r\\n']}, {'input': '2\\r\\n248707 649443\\r\\n', 'output': ['2\\r\\n248707 649443\\r\\n']}, {'input': '3\\r\\n198356 154895 894059\\r\\n', 'output': ['3\\r\\n154895 198356 894059 \\r\\n']}, {'input': '3\\r\\n76427 184396 963319\\r\\n', 'output': ['3\\r\\n76427 184396 963319 \\r\\n']}, {'input': '3\\r\\n880502 176898 958582\\r\\n', 'output': ['1\\r\\n176898 \\r\\n']}, {'input': '3\\r\\n758573 206400 991528\\r\\n', 'output': ['1\\r\\n206400 \\r\\n']}, {'input': '3\\r\\n599645 198217 986791\\r\\n', 'output': ['1\\r\\n198217 \\r\\n']}, {'input': '4\\r\\n549294 703669 96824 126683\\r\\n', 'output': ['3\\r\\n96824 126683 703669 \\r\\n']}, {'input': '4\\r\\n390366 733171 92086 595244\\r\\n', 'output': ['3\\r\\n92086 390366 733171 \\r\\n']}, {'input': '4\\r\\n231438 762672 125033 26806\\r\\n', 'output': ['3\\r\\n26806 125033 762672 \\r\\n']}, {'input': '4\\r\\n109509 792173 120296 495368\\r\\n', 'output': ['3\\r\\n109509 120296 792173 \\r\\n']}, {'input': '4\\r\\n950582 784676 190241 964614\\r\\n', 'output': ['1\\r\\n190241 \\r\\n']}, {'input': '5\\r\\n900232 289442 225592 622868 113587\\r\\n', 'output': ['3\\r\\n113587 225592 900232 \\r\\n']}, {'input': '5\\r\\n741304 281944 258539 54430 284591\\r\\n', 'output': ['3\\r\\n281944 284591 741304 \\r\\n']}, {'input': '5\\r\\n582376 311446 253801 560676 530279\\r\\n', 'output': ['3\\r\\n253801 311446 582376 \\r\\n']}, {'input': '5\\r\\n460447 303948 286063 992238 738282\\r\\n', 'output': ['3\\r\\n286063 303948 992238 \\r\\n']}, {'input': '5\\r\\n301519 370449 319010 460799 983970\\r\\n', 'output': ['3\\r\\n301519 319010 983970 \\r\\n']}, {'input': '21\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712 999998\\r\\n', 'output': ['3\\r\\n999998 999998 999999 \\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1e9 + 7;\nconst int N = 2e5 + 10;\nlong long int v[N], dp[N][2], sum[N], ans, n;\nlong long int func(int x, int odd) {\n  if (x == n) return!odd;\n  long long int &ret = dp[x][odd];\n  if (ret!= -1) return ret;\n  ret = func(x + 1, 1);\n  long long int lo = sum[x];\n  if (!odd) lo = (sum[x] + sum[x + 1]) / 2;\n  if (lo > ans) ret = 0;\n  if (v[x] - lo > ans - lo) ret = max(ret, 1 + func(x + 1, 0));\n  if (odd and v[x] - lo > ans - lo) ret = max(ret, 1 + func(x + 1, 1));\n  return ret;\n}\nint main() {\n  memset(dp, -1, sizeof dp);\n  scanf(\"%lld\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%lld\", &v[i]);\n  sort(v, v + n);\n  for (int i = 0; i < n; i++) sum[i] = v[i] + sum[i - 1];\n  for (int i = 0; i < n - 1; i++) ans = max(v[i + 1] - v[i], ans);\n  printf(\"%lld\\n\", func(0, 0));\n  for (int i = 0; i < dp[0][0]; i++) printf(\"%lld \", v[i]);\n  return 0;\n}\n"}
{"src_uid": "ecda878d924325789dc05035e4f4bbe0", "id": 34, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '4\\r\\n1 2 3 12\\r\\n', 'output': ['3\\r\\n1 2 12 \\r\\n']}, {'input': '4\\r\\n1 1 2 2\\r\\n', 'output': ['3\\r\\n1 1 2 \\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['2\\r\\n1 2\\r\\n']}, {'input': '1\\r\\n1000000\\r\\n', 'output': ['1\\r\\n1000000 \\r\\n']}, {'input': '20\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712\\r\\n', 'output': ['1\\r\\n475712 \\r\\n']}, {'input': '21\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712 1000000\\r\\n', 'output': ['1\\r\\n475712 \\r\\n']}, {'input': '40\\r\\n999999 999999 999998 999998 999996 999996 999992 999992 999984 999984 999968 999968 999936 999936 999872 999872 999744 999744 999488 999488 998976 998976 997952 997952 995904 995904 991808 991808 983616 983616 967232 967232 934464 934464 868928 868928 737856 737856 475712 0\\r\\n', 'output': ['3\\r\\n737856 737856 999999 \\r\\n']}, {'input': '1\\r\\n534166\\r\\n', 'output': ['1\\r\\n534166 \\r\\n']}, {'input': '1\\r\\n412237\\r\\n', 'output': ['1\\r\\n412237 \\r\\n']}, {'input': '1\\r\\n253309\\r\\n', 'output': ['1\\r\\n253309 \\r\\n']}, {'input': '1\\r\\n94381\\r\\n', 'output': ['1\\r\\n94381 \\r\\n']}, {'input': '1\\r\\n935454\\r\\n', 'output': ['1\\r\\n935454 \\r\\n']}, {'input': '2\\r\\n847420 569122\\r\\n', 'output': ['2\\r\\n847420 569122\\r\\n']}, {'input': '2\\r\\n725491 635622\\r\\n', 'output': ['2\\r\\n725491 635622\\r\\n']}, {'input': '2\\r\\n566563 590441\\r\\n', 'output': ['2\\r\\n566563 590441\\r\\n']}, {'input': '2\\r\\n407635 619942\\r\\n', 'output': ['2\\r\\n407635 619942\\r\\n']}, {'input': '2\\r\\n248707 649443\\r\\n', 'output': ['2\\r\\n248707 649443\\r\\n']}, {'input': '3\\r\\n198356 154895 894059\\r\\n', 'output': ['3\\r\\n154895 198356 894059 \\r\\n']}, {'input': '3\\r\\n76427 184396 963319\\r\\n', 'output': ['3\\r\\n76427 184396 963319 \\r\\n']}, {'input': '3\\r\\n880502 176898 958582\\r\\n', 'output': ['1\\r\\n176898 \\r\\n']}, {'input': '3\\r\\n758573 206400 991528\\r\\n', 'output': ['1\\r\\n206400 \\r\\n']}, {'input': '3\\r\\n599645 198217 986791\\r\\n', 'output': ['1\\r\\n198217 \\r\\n']}, {'input': '4\\r\\n549294 703669 96824 126683\\r\\n', 'output': ['3\\r\\n96824 126683 703669 \\r\\n']}, {'input': '4\\r\\n390366 733171 92086 595244\\r\\n', 'output': ['3\\r\\n92086 390366 733171 \\r\\n']}, {'input': '4\\r\\n231438 762672 125033 26806\\r\\n', 'output': ['3\\r\\n26806 125033 762672 \\r\\n']}, {'input': '4\\r\\n109509 792173 120296 495368\\r\\n', 'output': ['3\\r\\n109509 120296 792173 \\r\\n']}, {'input': '4\\r\\n950582 784676 190241 964614\\r\\n', 'output': ['1\\r\\n190241 \\r\\n']}, {'input': '5\\r\\n900232 289442 225592 622868 113587\\r\\n', 'output': ['3\\r\\n113587 225592 900232 \\r\\n']}, {'input': '5\\r\\n741304 281944 258539 54430 284591\\r\\n', 'output': ['3\\r\\n281944 284591 741304 \\r\\n']}, {'input': '5\\r\\n582376 311446 253801 560676 530279\\r\\n', 'output': ['3\\r\\n253801 311446 582376 \\r\\n']}, {'input': '5\\r\\n460447 303948 286063 992238 738282\\r\\n', 'output': ['3\\r\\n286063 303948 992238 \\r\\n']}, {'input': '5\\r\\n301519 370449 319010 460799 983970\\r\\n', 'output': ['3\\r\\n301519 319010 983970 \\r\\n']}, {'input': '21\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712 999998\\r\\n', 'output': ['3\\r\\n999998 999998 999999 \\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 2e5 + 100;\nint n, a[maxn], sum[maxn];\npair<int, int> p[maxn];\nbool cmp(pair<int, int> A, pair<int, int> B) {\n  if (A.second == B.second)\n    return A.first < B.first;\n  else\n    return A.second < B.second;\n}\nvoid cal_sum() {\n  sum[0] = 0;\n  for (int i = 1; i <= n; ++i) {\n    sum[i] = sum[i - 1] + a[i];\n  }\n}\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", a + i);\n    p[i] = {a[i], i};\n  }\n  sort(p + 1, p + n + 1, cmp);\n  cal_sum();\n  int id = 0, mx = p[1].second;\n  long long ans_sum = a[p[1].second], ans = 1;\n  for (int i = 2; i <= n; ++i) {\n    long long tmp = a[p[i].second];\n    tmp *= i;\n    tmp -= sum[p[i].second];\n    tmp *= 2;\n    if (tmp + ans_sum > ans_sum) {\n      ans_sum = tmp + ans_sum;\n      id = i;\n      ans = i;\n    }\n  }\n  printf(\"%d\\n\", ans);\n  for (int i = 1; i <= id; ++i) {\n    printf(\"%d \", p[i].first);\n  }\n  return 0;\n}\n"}
{"src_uid": "ecda878d924325789dc05035e4f4bbe0", "id": 34, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '4\\r\\n1 2 3 12\\r\\n', 'output': ['3\\r\\n1 2 12 \\r\\n']}, {'input': '4\\r\\n1 1 2 2\\r\\n', 'output': ['3\\r\\n1 1 2 \\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['2\\r\\n1 2\\r\\n']}, {'input': '1\\r\\n1000000\\r\\n', 'output': ['1\\r\\n1000000 \\r\\n']}, {'input': '20\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712\\r\\n', 'output': ['1\\r\\n475712 \\r\\n']}, {'input': '21\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712 1000000\\r\\n', 'output': ['1\\r\\n475712 \\r\\n']}, {'input': '40\\r\\n999999 999999 999998 999998 999996 999996 999992 999992 999984 999984 999968 999968 999936 999936 999872 999872 999744 999744 999488 999488 998976 998976 997952 997952 995904 995904 991808 991808 983616 983616 967232 967232 934464 934464 868928 868928 737856 737856 475712 0\\r\\n', 'output': ['3\\r\\n737856 737856 999999 \\r\\n']}, {'input': '1\\r\\n534166\\r\\n', 'output': ['1\\r\\n534166 \\r\\n']}, {'input': '1\\r\\n412237\\r\\n', 'output': ['1\\r\\n412237 \\r\\n']}, {'input': '1\\r\\n253309\\r\\n', 'output': ['1\\r\\n253309 \\r\\n']}, {'input': '1\\r\\n94381\\r\\n', 'output': ['1\\r\\n94381 \\r\\n']}, {'input': '1\\r\\n935454\\r\\n', 'output': ['1\\r\\n935454 \\r\\n']}, {'input': '2\\r\\n847420 569122\\r\\n', 'output': ['2\\r\\n847420 569122\\r\\n']}, {'input': '2\\r\\n725491 635622\\r\\n', 'output': ['2\\r\\n725491 635622\\r\\n']}, {'input': '2\\r\\n566563 590441\\r\\n', 'output': ['2\\r\\n566563 590441\\r\\n']}, {'input': '2\\r\\n407635 619942\\r\\n', 'output': ['2\\r\\n407635 619942\\r\\n']}, {'input': '2\\r\\n248707 649443\\r\\n', 'output': ['2\\r\\n248707 649443\\r\\n']}, {'input': '3\\r\\n198356 154895 894059\\r\\n', 'output': ['3\\r\\n154895 198356 894059 \\r\\n']}, {'input': '3\\r\\n76427 184396 963319\\r\\n', 'output': ['3\\r\\n76427 184396 963319 \\r\\n']}, {'input': '3\\r\\n880502 176898 958582\\r\\n', 'output': ['1\\r\\n176898 \\r\\n']}, {'input': '3\\r\\n758573 206400 991528\\r\\n', 'output': ['1\\r\\n206400 \\r\\n']}, {'input': '3\\r\\n599645 198217 986791\\r\\n', 'output': ['1\\r\\n198217 \\r\\n']}, {'input': '4\\r\\n549294 703669 96824 126683\\r\\n', 'output': ['3\\r\\n96824 126683 703669 \\r\\n']}, {'input': '4\\r\\n390366 733171 92086 595244\\r\\n', 'output': ['3\\r\\n92086 390366 733171 \\r\\n']}, {'input': '4\\r\\n231438 762672 125033 26806\\r\\n', 'output': ['3\\r\\n26806 125033 762672 \\r\\n']}, {'input': '4\\r\\n109509 792173 120296 495368\\r\\n', 'output': ['3\\r\\n109509 120296 792173 \\r\\n']}, {'input': '4\\r\\n950582 784676 190241 964614\\r\\n', 'output': ['1\\r\\n190241 \\r\\n']}, {'input': '5\\r\\n900232 289442 225592 622868 113587\\r\\n', 'output': ['3\\r\\n113587 225592 900232 \\r\\n']}, {'input': '5\\r\\n741304 281944 258539 54430 284591\\r\\n', 'output': ['3\\r\\n281944 284591 741304 \\r\\n']}, {'input': '5\\r\\n582376 311446 253801 560676 530279\\r\\n', 'output': ['3\\r\\n253801 311446 582376 \\r\\n']}, {'input': '5\\r\\n460447 303948 286063 992238 738282\\r\\n', 'output': ['3\\r\\n286063 303948 992238 \\r\\n']}, {'input': '5\\r\\n301519 370449 319010 460799 983970\\r\\n', 'output': ['3\\r\\n301519 319010 983970 \\r\\n']}, {'input': '21\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712 999998\\r\\n', 'output': ['3\\r\\n999998 999998 999999 \\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n, i, j, k;\n  cin >> n;\n  long long a[n], mx = 0, m1 = 0, m2 = 0, m, sum = 0;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    sum += a[i];\n    if (a[i] > mx) {\n      mx = a[i];\n      m1 = i;\n    }\n  }\n  m = sum / 2;\n  for (i = 0; i < n; i++) {\n    if (a[i] > m) {\n      m2 = i;\n    }\n  }\n  if (a[m1] < a[m2]) {\n    swap(a[m1], a[m2]);\n  }\n  if (a[m1] == a[m2]) {\n    cout << 2 << \"\\n\" << a[m1] << \" \" << a[m2] << endl;\n  } else {\n    cout << 3 << \"\\n\" << a[m2] << \" \" << a[m1] << \" \" << mx << endl;\n  }\n  return 0;\n}\n"}
{"src_uid": "788cb3da98fd4a56720f800588061b79", "id": 35, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '3 2\\r\\n2 4 5\\r\\n', 'output': ['3\\r\\n']}, {'input': '4 3\\r\\n7 8 9 10\\r\\n', 'output': ['13\\r\\n']}, {'input': '4 0\\r\\n5 10 20 21\\r\\n', 'output': ['1\\r\\n']}, {'input': '20 1000\\r\\n50 50 100 100 150 150 200 200 250 250 300 300 350 350 400 400 450 450 500 500\\r\\n', 'output': ['97456952\\r\\n']}, {'input': '5 222\\r\\n58 369 477 58 90\\r\\n', 'output': ['10\\r\\n']}, {'input': '9 222\\r\\n304 142 38 334 73 122 252 381 438\\r\\n', 'output': ['423\\r\\n']}, {'input': '9 247\\r\\n359 350 140 26 293 488 57 481 71\\r\\n', 'output': ['414\\r\\n']}, {'input': '5 341\\r\\n412 32 189 303 172\\r\\n', 'output': ['26\\r\\n']}, {'input': '200 0\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['380668983\\r\\n']}, {'input': '121 19\\r\\n1 1 1 1 2 1 1 2 2 1 1 2 2 2 2 1 1 2 1 1 1 1 2 2 2 2 1 1 2 1 1 2 1 1 1 1 1 2 2 1 2 2 1 2 1 1 2 2 2 1 2 1 1 1 1 2 1 1 2 2 1 1 2 1 2 1 2 1 2 2 2 1 1 1 1 2 1 1 2 1 2 2 2 2 2 1 1 2 2 1 2 2 2 1 2 1 1 1 1 2 2 2 2 2 1 1 2 2 2 2 2 1 1 1 1 1 2 2 1 2 1\\r\\n', 'output': ['378568711\\r\\n']}, {'input': '3 4\\r\\n10 7 10\\r\\n', 'output': ['5\\r\\n']}, {'input': '1 5\\r\\n3\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 5\\r\\n9\\r\\n', 'output': ['1\\r\\n']}, {'input': '5 2\\r\\n3 10 5 6 5\\r\\n', 'output': ['8\\r\\n']}, {'input': '1 2\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '166 7\\r\\n9 8 7 2 9 9 7 7 3 1 9 9 9 7 1 5 5 6 6 2 3 2 10 9 3 5 8 8 6 3 10 3 4 8 6 5 1 7 2 9 1 4 9 10 6 8 6 7 8 3 2 1 10 5 6 6 3 7 4 9 10 3 1 10 9 9 2 10 3 2 4 8 9 6 1 9 10 10 10 9 5 8 9 7 9 6 7 5 4 7 8 9 8 5 10 5 4 10 8 5 10 10 10 8 7 3 2 6 3 1 7 5 7 10 7 8 8 8 5 5 8 10 2 10 2 4 10 2 3 1 1 4 5 8 7 9 4 10 2 9 8 1 1 5 9 5 2 1 7 7 9 10 2 2 10 10 6 8 5 5 9 4 3 1 10 5\\r\\n', 'output': ['194851520\\r\\n']}, {'input': '94 17\\r\\n9 10 10 5 2 7 10 9 5 5 7 7 6 10 4 10 3 7 4 9 2 5 1 5 4 2 9 8 4 3 9 5 7 10 10 6 3 1 9 9 2 8 8 8 7 2 4 5 2 5 7 7 4 9 4 9 4 10 5 10 9 7 3 6 10 3 1 10 6 4 8 9 4 10 7 2 9 8 7 10 2 2 4 1 4 6 10 7 2 4 9 4 8 5\\r\\n', 'output': ['650765262\\r\\n']}, {'input': '14 26\\r\\n3 7 8 4 7 5 10 8 4 4 1 6 7 7\\r\\n', 'output': ['190894282\\r\\n']}, {'input': '142 24\\r\\n8 1 10 6 5 3 9 4 4 8 2 7 4 4 1 2 7 4 7 3 3 9 9 6 6 10 8 5 3 2 3 4 7 9 9 8 4 7 8 6 9 1 7 9 10 2 6 1 9 9 1 10 2 10 6 5 10 2 3 8 3 7 1 8 9 10 1 8 10 7 2 5 1 1 4 6 5 7 6 10 4 4 7 4 10 5 10 9 8 7 4 10 4 4 3 4 10 6 1 4 8 5 10 6 3 8 8 4 2 3 2 1 7 5 2 4 2 3 10 7 8 3 10 9 1 7 7 5 5 5 10 8 8 2 6 9 7 2 4 7 7 3\\r\\n', 'output': ['287439553\\r\\n']}, {'input': '166 34\\r\\n6 5 3 3 4 5 4 6 4 6 2 6 5 1 7 4 5 5 6 1 2 2 6 4 3 7 4 5 1 7 3 1 6 5 1 3 6 4 9 7 6 6 6 5 8 6 2 4 5 6 10 10 4 8 3 6 1 4 7 9 8 5 2 9 8 10 2 2 6 1 3 6 6 9 10 8 10 5 8 10 5 9 2 4 8 2 9 2 1 9 5 9 3 8 1 10 4 1 1 4 9 6 10 6 2 1 4 5 5 8 10 10 5 6 3 10 1 8 5 10 3 3 10 9 7 4 1 9 9 10 8 3 4 2 8 10 6 3 10 10 4 6 8 7 9 7 10 3 1 10 4 10 5 2 7 9 4 10 6 2 6 3 9 10 9 10\\r\\n', 'output': ['772974256\\r\\n']}, {'input': '171 302\\r\\n64 51 53 35 36 42 67 27 55 85 97 23 47 8 59 69 50 15 28 36 22 12 49 99 54 11 10 91 91 78 59 65 68 5 20 77 42 59 85 65 69 35 59 86 45 96 41 82 89 93 80 25 16 22 68 8 23 57 48 53 16 21 50 44 70 75 33 32 43 32 77 40 8 41 23 82 61 51 26 88 58 23 6 69 11 95 89 41 70 95 81 50 99 81 48 36 62 85 64 58 25 30 23 27 30 87 45 42 67 47 1 1 86 33 43 78 41 57 72 86 55 25 69 36 77 97 48 24 9 20 50 5 2 84 80 62 7 5 49 2 16 3 62 8 40 24 94 60 9 95 22 27 58 20 22 95 16 53 6 8 74 54 94 65 62 90 95 17 77 32 99\\r\\n', 'output': ['49555477\\r\\n']}, {'input': '158 396\\r\\n10 33 14 7 23 30 23 9 99 41 88 56 70 25 85 27 68 60 73 14 32 87 6 16 71 64 22 66 9 48 46 93 81 9 50 48 80 70 78 76 49 89 56 74 56 40 67 45 3 41 77 49 8 56 55 29 78 69 52 70 55 99 85 6 59 99 24 66 4 23 4 51 84 67 79 65 6 67 80 36 85 47 45 37 75 38 39 59 7 11 81 7 12 79 56 87 9 97 30 32 27 21 42 85 17 50 69 13 51 12 73 60 14 94 93 31 10 9 70 67 52 63 45 38 37 13 46 50 53 29 50 57 49 81 71 79 58 74 19 47 19 14 16 82 18 11 71 90 28 21 48 16 41 52 24 6 4 23\\r\\n', 'output': ['757778575\\r\\n']}, {'input': '169 129\\r\\n66 70 83 26 65 94 1 56 17 64 58 68 23 73 45 93 30 94 22 55 68 29 73 44 35 39 71 76 76 76 19 98 99 26 43 73 96 6 72 23 8 56 34 17 91 64 17 33 56 92 41 22 92 59 23 96 35 94 82 1 61 41 75 89 10 74 13 64 50 78 49 83 6 62 43 22 61 95 28 4 76 14 54 41 83 81 83 23 13 57 10 2 44 54 89 41 27 58 57 47 26 82 97 82 5 35 27 31 89 6 73 36 94 89 29 96 3 88 82 27 50 56 73 24 17 56 25 9 2 47 71 86 96 79 35 42 31 73 13 89 52 30 88 96 46 91 23 60 79 2 19 7 73 40 6 29 61 29 67 85 75 11 8 34 60 19 87 23 55\\r\\n', 'output': ['538924707\\r\\n']}, {'input': '195 110\\r\\n3 4 5 1 3 5 4 1 2 4 3 2 4 4 3 2 5 5 5 3 3 3 5 3 5 4 2 5 1 1 2 3 4 5 5 2 2 4 3 4 2 4 4 3 4 2 3 3 3 5 2 1 3 2 5 5 2 2 1 2 2 5 4 2 4 2 4 1 4 2 4 4 4 4 3 5 3 1 2 2 3 4 3 4 4 1 2 1 2 4 5 2 4 3 4 1 4 4 4 5 1 2 4 5 3 5 3 4 2 4 5 2 5 2 5 4 1 5 1 4 2 5 1 2 4 1 3 3 5 5 4 2 3 4 5 4 4 5 2 3 4 2 5 3 2 1 5 3 5 3 5 2 3 2 5 3 5 4 5 1 5 3 3 2 2 5 4 3 3 2 5 5 5 5 2 1 2 3 1 3 5 2 4 5 3 2 2 5 5 2 3 1 3 4 5\\r\\n', 'output': ['21311661\\r\\n']}, {'input': '196 17\\r\\n4 4 2 2 4 2 2 4 4 3 4 1 5 4 4 5 4 1 1 1 5 1 1 4 3 4 4 1 1 1 5 3 2 4 2 1 5 3 4 2 4 2 5 4 1 4 1 2 3 5 3 5 3 2 5 5 5 2 2 1 1 2 2 2 5 4 5 2 5 5 3 1 5 3 5 5 1 3 3 2 3 2 2 1 5 1 2 5 4 5 4 3 4 4 4 1 5 5 2 2 2 5 3 4 5 3 3 2 4 4 4 3 1 1 1 5 2 5 1 5 1 2 3 3 4 4 5 4 2 5 4 2 3 3 4 5 2 2 4 5 5 2 2 1 3 3 4 3 2 3 4 4 5 2 5 1 4 5 2 3 2 4 4 3 4 4 2 5 5 5 5 4 1 3 2 1 4 5 3 2 3 3 5 4 3 1 4 4 5 2 5 2 2 1 4 3\\r\\n', 'output': ['140496580\\r\\n']}, {'input': '200 558\\r\\n1 1 1 3 2 1 1 5 1 2 1 1 2 2 1 5 2 5 2 5 3 2 4 1 5 2 3 2 3 1 2 2 1 4 4 2 5 1 4 3 2 2 4 5 4 5 2 5 5 4 3 5 4 5 5 2 3 4 3 1 5 4 3 3 3 3 2 2 3 4 1 3 1 4 5 2 3 4 1 5 2 3 3 5 5 3 3 1 2 5 3 4 2 5 2 3 3 1 3 2 3 5 1 2 1 1 3 4 1 3 2 1 1 4 2 5 1 2 1 2 2 2 2 2 3 4 2 2 4 4 2 1 3 3 2 4 1 3 5 4 5 1 5 2 1 4 2 3 4 1 4 5 1 1 5 2 4 5 5 4 4 5 3 1 1 5 4 2 2 5 1 3 3 3 4 1 1 2 3 4 1 5 2 2 3 1 4 3 5 1 5 3 2 1 3 2 1 1 3 2\\r\\n', 'output': ['380668983\\r\\n']}, {'input': '190 152\\r\\n2 2 4 4 4 2 2 1 2 3 5 5 4 3 5 1 2 2 2 2 3 3 5 2 1 1 3 4 3 2 2 4 2 3 1 4 2 2 3 2 3 5 3 2 4 1 4 1 2 4 1 3 4 4 3 4 4 4 4 5 2 4 5 3 3 5 4 4 3 4 1 4 1 4 3 3 5 5 2 3 2 2 2 5 4 4 2 4 3 4 2 2 1 4 1 2 3 3 3 5 1 5 5 1 4 3 2 5 2 5 5 5 2 3 3 4 1 1 3 2 5 5 2 5 2 3 5 1 1 5 4 1 1 3 5 2 3 4 3 4 2 1 4 3 5 2 1 1 1 5 2 5 3 4 5 5 2 3 5 5 5 5 1 5 2 5 5 2 4 4 4 3 1 1 2 1 4 4 3 4 2 5 5 3 4 5 5 2 1 4\\r\\n', 'output': ['3475416\\r\\n']}, {'input': '191 640\\r\\n20 10 14 20 13 9 16 5 14 1 11 18 16 17 7 4 15 18 17 3 3 15 14 20 18 2 4 14 20 17 7 2 3 9 5 10 7 6 7 17 3 5 10 1 18 13 15 4 15 7 19 1 17 6 15 12 4 19 1 9 18 18 9 13 3 15 9 3 17 14 18 4 9 3 9 19 20 15 18 11 3 1 12 8 11 10 20 14 14 6 2 14 16 1 7 2 11 15 1 9 20 4 1 1 3 20 20 4 11 7 19 3 3 6 15 10 18 9 13 14 16 12 3 1 15 10 5 14 19 17 9 10 10 15 12 12 5 2 11 6 5 6 7 14 7 6 5 10 13 10 18 20 18 20 12 7 6 10 4 4 3 13 14 5 9 10 4 6 11 11 15 15 12 19 4 7 20 3 12 4 16 6 4 9 17 10 18 11 13 12 18\\r\\n', 'output': ['66598866\\r\\n']}, {'input': '197 344\\r\\n5 11 3 17 16 1 12 7 13 5 9 11 15 14 13 7 13 11 5 9 20 11 11 9 19 3 20 4 6 15 2 14 16 5 19 5 5 5 12 12 12 19 18 1 5 17 13 7 17 14 4 5 9 20 14 13 15 3 8 2 13 16 20 10 20 14 8 17 14 4 9 16 8 13 5 2 13 11 9 7 9 5 11 20 3 17 9 12 12 3 9 19 6 3 15 9 5 11 2 3 13 14 15 7 9 19 16 11 6 8 11 18 11 11 16 18 3 5 10 19 10 6 3 19 3 18 16 16 7 3 10 13 13 16 19 13 4 7 1 7 12 9 6 8 6 1 6 20 7 12 9 13 13 12 10 10 10 16 9 6 11 14 14 7 2 1 16 15 12 7 15 18 8 4 6 18 2 17 6 5 13 19 12 7 1 9 15 9 18 5 8 3 7 8 4 15 8\\r\\n', 'output': ['132934747\\r\\n']}, {'input': '200 0\\r\\n2 5 2 7 6 10 10 4 7 9 1 5 7 1 8 5 9 8 5 2 6 4 9 10 5 4 4 4 8 7 7 5 9 7 7 4 9 8 5 8 10 5 1 2 8 4 3 7 9 6 9 3 9 2 1 9 2 7 4 10 4 7 10 6 1 6 7 4 4 9 10 3 5 5 1 2 8 6 6 2 2 8 6 3 6 1 4 6 10 6 4 8 3 9 6 7 7 8 5 2 10 9 2 7 3 6 10 6 8 9 6 6 8 4 6 9 2 10 9 4 2 3 4 1 3 9 4 2 4 10 10 1 2 3 9 8 2 1 10 7 8 3 10 5 3 10 9 1 9 2 6 7 2 1 10 4 4 9 9 1 8 1 10 9 8 9 9 7 4 3 6 7 10 9 2 7 8 10 2 7 7 6 9 5 9 7 3 1 7 1 5 9 7 3 10 3 10 8 5 7\\r\\n', 'output': ['563633437\\r\\n']}, {'input': '107 59\\r\\n416 332 455 497 251 13 496 46 176 382 357 268 441 302 305 11 274 61 412 18 225 332 173 371 54 179 378 85 471 176 439 36 81 275 452 212 261 488 166 274 89 183 478 337 313 196 130 87 14 223 341 46 45 306 175 488 113 354 107 411 469 122 436 293 311 60 453 245 184 13 425 360 302 205 151 89 433 285 119 301 274 64 127 496 350 354 262 2 148 232 117 28 11 398 237 460 421 347 142 76 391 317 164 484 35 310 453\\r\\n', 'output': ['955755252\\r\\n']}, {'input': '27 383\\r\\n161 2 16 478 438 205 151 229 116 230 447 497 456 219 28 57 200 6 161 400 338 11 426 283 275 40 190\\r\\n', 'output': ['258971846\\r\\n']}, {'input': '107 497\\r\\n218 342 381 296 272 169 321 275 435 461 422 209 413 366 295 332 458 253 302 245 70 353 405 420 439 314 232 466 364 374 4 469 116 291 75 500 212 127 157 440 429 396 53 68 151 264 2 134 73 31 494 148 426 459 27 175 225 287 241 60 14 437 457 446 51 350 233 177 88 455 497 303 107 130 76 125 441 229 325 318 187 459 178 172 226 236 465 289 491 494 146 280 456 475 286 457 277 224 435 365 100 77 145 448 118 454 431\\r\\n', 'output': ['480907144\\r\\n']}, {'input': '27 209\\r\\n272 116 134 369 255 453 477 162 78 1 12 142 236 283 209 390 476 493 51 23 387 32 262 128 160 71 56\\r\\n', 'output': ['415376034\\r\\n']}, {'input': '85 655\\r\\n411 473 456 4 14 135 49 240 191 230 60 375 373 115 301 20 421 187 267 347 207 428 81 318 10 370 428 272 247 322 294 477 274 110 238 244 72 399 146 392 207 83 164 87 257 341 97 94 286 375 25 271 177 270 169 149 279 105 387 92 352 342 274 247 236 344 35 336 419 465 169 371 62 112 490 48 36 343 248 428 241 223 369 296 86\\r\\n', 'output': ['275193712\\r\\n']}, {'input': '107 19\\r\\n2 5 2 5 4 4 1 5 3 3 4 3 2 5 3 1 4 1 4 1 3 1 4 4 1 5 4 1 2 3 3 3 4 2 5 2 3 4 5 2 1 5 3 1 5 5 1 5 3 3 3 5 5 2 4 3 3 4 5 4 2 5 2 4 3 5 2 5 2 1 1 1 1 2 1 4 2 3 4 3 2 4 4 2 2 3 5 5 1 4 1 2 4 4 1 3 3 5 2 3 4 1 2 3 1 5 2\\r\\n', 'output': ['114012476\\r\\n']}, {'input': '186 35\\r\\n4 4 3 2 4 3 1 2 2 2 4 2 5 3 1 3 1 1 2 4 2 5 5 5 1 3 4 1 5 3 5 5 2 4 5 3 1 1 2 1 2 4 2 3 3 4 4 3 3 5 3 1 4 5 5 4 5 2 3 1 2 2 2 4 3 4 1 4 1 2 1 1 1 5 1 1 4 5 3 5 3 3 4 1 5 1 1 4 5 3 3 2 5 3 5 1 5 2 5 1 4 2 4 5 4 4 4 5 4 4 2 5 2 4 4 5 3 2 5 4 1 1 5 5 5 5 1 3 2 5 5 4 3 2 2 5 5 3 1 4 3 4 3 1 2 5 4 4 2 2 5 3 2 1 2 1 1 3 1 4 1 2 3 2 1 5 5 2 2 1 2 1 5 2 4 4 3 2 5 5 2 3 4 5 5 3\\r\\n', 'output': ['273232004\\r\\n']}, {'input': '150 978\\r\\n34 20 7 39 15 14 39 49 36 13 12 12 30 40 4 17 8 2 48 10 16 2 33 36 41 30 4 35 32 35 12 14 28 3 7 3 36 46 43 19 7 38 48 24 19 21 9 31 3 3 8 23 21 49 44 29 15 6 11 40 39 12 44 40 41 37 7 39 40 17 34 21 22 19 30 21 14 3 16 50 38 38 27 7 4 33 20 23 27 32 14 50 33 36 38 22 27 27 14 2 27 37 33 6 21 44 25 17 28 22 43 10 33 21 42 4 7 42 10 20 22 49 14 18 26 19 43 4 31 18 13 17 5 46 19 35 31 14 28 29 48 9 9 4 10 15 30 5 9 23\\r\\n', 'output': ['338032038\\r\\n']}, {'input': '115 588\\r\\n39 133 47 175 120 1 183 148 115 9 196 101 18 156 156 74 43 149 95 56 72 84 32 104 16 188 88 168 164 18 36 105 131 60 26 151 46 160 16 45 76 16 157 190 120 37 102 29 190 57 178 38 89 75 143 2 80 7 11 31 101 28 171 46 93 100 23 163 146 135 12 73 140 144 177 43 19 158 26 20 39 173 97 8 169 139 23 105 7 171 79 11 156 77 164 63 165 124 126 108 125 118 58 129 146 152 31 133 5 160 89 136 174 121 185\\r\\n', 'output': ['27195433\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long dp[205][205][505];\nint n, k, a[205], tot, i, f;\nlong long dfs(int pos, int sum, int g) {\n  if (pos > n) return!(sum > k || g > tot);\n  long long &t = dp[pos][sum][g];\n  if (t!= -1) return t;\n  t = dfs(pos + 1, sum + a[pos], g + 1);\n  for (i = 1; i <= g && (sum + a[pos] - a[pos - i]) <= k; i++)\n    t = (t + dfs(pos + i, sum + a[pos] - a[pos - i], g - i)) % 1000000007;\n  return t;\n}\nint main() {\n  memset(dp, -1, sizeof(dp));\n  scanf(\"%d%d\", &n, &k);\n  for (i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n  sort(a + 1, a + 1 + n);\n  f = a[n];\n  while (tot * (tot + 1) / 2 <= f + k) tot++;\n  printf(\"%I64d\", dfs(1, 0, 1));\n  return 0;\n}\n"}
{"src_uid": "788cb3da98fd4a56720f800588061b79", "id": 35, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '3 2\\r\\n2 4 5\\r\\n', 'output': ['3\\r\\n']}, {'input': '4 3\\r\\n7 8 9 10\\r\\n', 'output': ['13\\r\\n']}, {'input': '4 0\\r\\n5 10 20 21\\r\\n', 'output': ['1\\r\\n']}, {'input': '20 1000\\r\\n50 50 100 100 150 150 200 200 250 250 300 300 350 350 400 400 450 450 500 500\\r\\n', 'output': ['97456952\\r\\n']}, {'input': '5 222\\r\\n58 369 477 58 90\\r\\n', 'output': ['10\\r\\n']}, {'input': '9 222\\r\\n304 142 38 334 73 122 252 381 438\\r\\n', 'output': ['423\\r\\n']}, {'input': '9 247\\r\\n359 350 140 26 293 488 57 481 71\\r\\n', 'output': ['414\\r\\n']}, {'input': '5 341\\r\\n412 32 189 303 172\\r\\n', 'output': ['26\\r\\n']}, {'input': '200 0\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['380668983\\r\\n']}, {'input': '121 19\\r\\n1 1 1 1 2 1 1 2 2 1 1 2 2 2 2 1 1 2 1 1 1 1 2 2 2 2 1 1 2 1 1 2 1 1 1 1 1 2 2 1 2 2 1 2 1 1 2 2 2 1 2 1 1 1 1 2 1 1 2 2 1 1 2 1 2 1 2 1 2 2 2 1 1 1 1 2 1 1 2 1 2 2 2 2 2 1 1 2 2 1 2 2 2 1 2 1 1 1 1 2 2 2 2 2 1 1 2 2 2 2 2 1 1 1 1 1 2 2 1 2 1\\r\\n', 'output': ['378568711\\r\\n']}, {'input': '3 4\\r\\n10 7 10\\r\\n', 'output': ['5\\r\\n']}, {'input': '1 5\\r\\n3\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 5\\r\\n9\\r\\n', 'output': ['1\\r\\n']}, {'input': '5 2\\r\\n3 10 5 6 5\\r\\n', 'output': ['8\\r\\n']}, {'input': '1 2\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '166 7\\r\\n9 8 7 2 9 9 7 7 3 1 9 9 9 7 1 5 5 6 6 2 3 2 10 9 3 5 8 8 6 3 10 3 4 8 6 5 1 7 2 9 1 4 9 10 6 8 6 7 8 3 2 1 10 5 6 6 3 7 4 9 10 3 1 10 9 9 2 10 3 2 4 8 9 6 1 9 10 10 10 9 5 8 9 7 9 6 7 5 4 7 8 9 8 5 10 5 4 10 8 5 10 10 10 8 7 3 2 6 3 1 7 5 7 10 7 8 8 8 5 5 8 10 2 10 2 4 10 2 3 1 1 4 5 8 7 9 4 10 2 9 8 1 1 5 9 5 2 1 7 7 9 10 2 2 10 10 6 8 5 5 9 4 3 1 10 5\\r\\n', 'output': ['194851520\\r\\n']}, {'input': '94 17\\r\\n9 10 10 5 2 7 10 9 5 5 7 7 6 10 4 10 3 7 4 9 2 5 1 5 4 2 9 8 4 3 9 5 7 10 10 6 3 1 9 9 2 8 8 8 7 2 4 5 2 5 7 7 4 9 4 9 4 10 5 10 9 7 3 6 10 3 1 10 6 4 8 9 4 10 7 2 9 8 7 10 2 2 4 1 4 6 10 7 2 4 9 4 8 5\\r\\n', 'output': ['650765262\\r\\n']}, {'input': '14 26\\r\\n3 7 8 4 7 5 10 8 4 4 1 6 7 7\\r\\n', 'output': ['190894282\\r\\n']}, {'input': '142 24\\r\\n8 1 10 6 5 3 9 4 4 8 2 7 4 4 1 2 7 4 7 3 3 9 9 6 6 10 8 5 3 2 3 4 7 9 9 8 4 7 8 6 9 1 7 9 10 2 6 1 9 9 1 10 2 10 6 5 10 2 3 8 3 7 1 8 9 10 1 8 10 7 2 5 1 1 4 6 5 7 6 10 4 4 7 4 10 5 10 9 8 7 4 10 4 4 3 4 10 6 1 4 8 5 10 6 3 8 8 4 2 3 2 1 7 5 2 4 2 3 10 7 8 3 10 9 1 7 7 5 5 5 10 8 8 2 6 9 7 2 4 7 7 3\\r\\n', 'output': ['287439553\\r\\n']}, {'input': '166 34\\r\\n6 5 3 3 4 5 4 6 4 6 2 6 5 1 7 4 5 5 6 1 2 2 6 4 3 7 4 5 1 7 3 1 6 5 1 3 6 4 9 7 6 6 6 5 8 6 2 4 5 6 10 10 4 8 3 6 1 4 7 9 8 5 2 9 8 10 2 2 6 1 3 6 6 9 10 8 10 5 8 10 5 9 2 4 8 2 9 2 1 9 5 9 3 8 1 10 4 1 1 4 9 6 10 6 2 1 4 5 5 8 10 10 5 6 3 10 1 8 5 10 3 3 10 9 7 4 1 9 9 10 8 3 4 2 8 10 6 3 10 10 4 6 8 7 9 7 10 3 1 10 4 10 5 2 7 9 4 10 6 2 6 3 9 10 9 10\\r\\n', 'output': ['772974256\\r\\n']}, {'input': '171 302\\r\\n64 51 53 35 36 42 67 27 55 85 97 23 47 8 59 69 50 15 28 36 22 12 49 99 54 11 10 91 91 78 59 65 68 5 20 77 42 59 85 65 69 35 59 86 45 96 41 82 89 93 80 25 16 22 68 8 23 57 48 53 16 21 50 44 70 75 33 32 43 32 77 40 8 41 23 82 61 51 26 88 58 23 6 69 11 95 89 41 70 95 81 50 99 81 48 36 62 85 64 58 25 30 23 27 30 87 45 42 67 47 1 1 86 33 43 78 41 57 72 86 55 25 69 36 77 97 48 24 9 20 50 5 2 84 80 62 7 5 49 2 16 3 62 8 40 24 94 60 9 95 22 27 58 20 22 95 16 53 6 8 74 54 94 65 62 90 95 17 77 32 99\\r\\n', 'output': ['49555477\\r\\n']}, {'input': '158 396\\r\\n10 33 14 7 23 30 23 9 99 41 88 56 70 25 85 27 68 60 73 14 32 87 6 16 71 64 22 66 9 48 46 93 81 9 50 48 80 70 78 76 49 89 56 74 56 40 67 45 3 41 77 49 8 56 55 29 78 69 52 70 55 99 85 6 59 99 24 66 4 23 4 51 84 67 79 65 6 67 80 36 85 47 45 37 75 38 39 59 7 11 81 7 12 79 56 87 9 97 30 32 27 21 42 85 17 50 69 13 51 12 73 60 14 94 93 31 10 9 70 67 52 63 45 38 37 13 46 50 53 29 50 57 49 81 71 79 58 74 19 47 19 14 16 82 18 11 71 90 28 21 48 16 41 52 24 6 4 23\\r\\n', 'output': ['757778575\\r\\n']}, {'input': '169 129\\r\\n66 70 83 26 65 94 1 56 17 64 58 68 23 73 45 93 30 94 22 55 68 29 73 44 35 39 71 76 76 76 19 98 99 26 43 73 96 6 72 23 8 56 34 17 91 64 17 33 56 92 41 22 92 59 23 96 35 94 82 1 61 41 75 89 10 74 13 64 50 78 49 83 6 62 43 22 61 95 28 4 76 14 54 41 83 81 83 23 13 57 10 2 44 54 89 41 27 58 57 47 26 82 97 82 5 35 27 31 89 6 73 36 94 89 29 96 3 88 82 27 50 56 73 24 17 56 25 9 2 47 71 86 96 79 35 42 31 73 13 89 52 30 88 96 46 91 23 60 79 2 19 7 73 40 6 29 61 29 67 85 75 11 8 34 60 19 87 23 55\\r\\n', 'output': ['538924707\\r\\n']}, {'input': '195 110\\r\\n3 4 5 1 3 5 4 1 2 4 3 2 4 4 3 2 5 5 5 3 3 3 5 3 5 4 2 5 1 1 2 3 4 5 5 2 2 4 3 4 2 4 4 3 4 2 3 3 3 5 2 1 3 2 5 5 2 2 1 2 2 5 4 2 4 2 4 1 4 2 4 4 4 4 3 5 3 1 2 2 3 4 3 4 4 1 2 1 2 4 5 2 4 3 4 1 4 4 4 5 1 2 4 5 3 5 3 4 2 4 5 2 5 2 5 4 1 5 1 4 2 5 1 2 4 1 3 3 5 5 4 2 3 4 5 4 4 5 2 3 4 2 5 3 2 1 5 3 5 3 5 2 3 2 5 3 5 4 5 1 5 3 3 2 2 5 4 3 3 2 5 5 5 5 2 1 2 3 1 3 5 2 4 5 3 2 2 5 5 2 3 1 3 4 5\\r\\n', 'output': ['21311661\\r\\n']}, {'input': '196 17\\r\\n4 4 2 2 4 2 2 4 4 3 4 1 5 4 4 5 4 1 1 1 5 1 1 4 3 4 4 1 1 1 5 3 2 4 2 1 5 3 4 2 4 2 5 4 1 4 1 2 3 5 3 5 3 2 5 5 5 2 2 1 1 2 2 2 5 4 5 2 5 5 3 1 5 3 5 5 1 3 3 2 3 2 2 1 5 1 2 5 4 5 4 3 4 4 4 1 5 5 2 2 2 5 3 4 5 3 3 2 4 4 4 3 1 1 1 5 2 5 1 5 1 2 3 3 4 4 5 4 2 5 4 2 3 3 4 5 2 2 4 5 5 2 2 1 3 3 4 3 2 3 4 4 5 2 5 1 4 5 2 3 2 4 4 3 4 4 2 5 5 5 5 4 1 3 2 1 4 5 3 2 3 3 5 4 3 1 4 4 5 2 5 2 2 1 4 3\\r\\n', 'output': ['140496580\\r\\n']}, {'input': '200 558\\r\\n1 1 1 3 2 1 1 5 1 2 1 1 2 2 1 5 2 5 2 5 3 2 4 1 5 2 3 2 3 1 2 2 1 4 4 2 5 1 4 3 2 2 4 5 4 5 2 5 5 4 3 5 4 5 5 2 3 4 3 1 5 4 3 3 3 3 2 2 3 4 1 3 1 4 5 2 3 4 1 5 2 3 3 5 5 3 3 1 2 5 3 4 2 5 2 3 3 1 3 2 3 5 1 2 1 1 3 4 1 3 2 1 1 4 2 5 1 2 1 2 2 2 2 2 3 4 2 2 4 4 2 1 3 3 2 4 1 3 5 4 5 1 5 2 1 4 2 3 4 1 4 5 1 1 5 2 4 5 5 4 4 5 3 1 1 5 4 2 2 5 1 3 3 3 4 1 1 2 3 4 1 5 2 2 3 1 4 3 5 1 5 3 2 1 3 2 1 1 3 2\\r\\n', 'output': ['380668983\\r\\n']}, {'input': '190 152\\r\\n2 2 4 4 4 2 2 1 2 3 5 5 4 3 5 1 2 2 2 2 3 3 5 2 1 1 3 4 3 2 2 4 2 3 1 4 2 2 3 2 3 5 3 2 4 1 4 1 2 4 1 3 4 4 3 4 4 4 4 5 2 4 5 3 3 5 4 4 3 4 1 4 1 4 3 3 5 5 2 3 2 2 2 5 4 4 2 4 3 4 2 2 1 4 1 2 3 3 3 5 1 5 5 1 4 3 2 5 2 5 5 5 2 3 3 4 1 1 3 2 5 5 2 5 2 3 5 1 1 5 4 1 1 3 5 2 3 4 3 4 2 1 4 3 5 2 1 1 1 5 2 5 3 4 5 5 2 3 5 5 5 5 1 5 2 5 5 2 4 4 4 3 1 1 2 1 4 4 3 4 2 5 5 3 4 5 5 2 1 4\\r\\n', 'output': ['3475416\\r\\n']}, {'input': '191 640\\r\\n20 10 14 20 13 9 16 5 14 1 11 18 16 17 7 4 15 18 17 3 3 15 14 20 18 2 4 14 20 17 7 2 3 9 5 10 7 6 7 17 3 5 10 1 18 13 15 4 15 7 19 1 17 6 15 12 4 19 1 9 18 18 9 13 3 15 9 3 17 14 18 4 9 3 9 19 20 15 18 11 3 1 12 8 11 10 20 14 14 6 2 14 16 1 7 2 11 15 1 9 20 4 1 1 3 20 20 4 11 7 19 3 3 6 15 10 18 9 13 14 16 12 3 1 15 10 5 14 19 17 9 10 10 15 12 12 5 2 11 6 5 6 7 14 7 6 5 10 13 10 18 20 18 20 12 7 6 10 4 4 3 13 14 5 9 10 4 6 11 11 15 15 12 19 4 7 20 3 12 4 16 6 4 9 17 10 18 11 13 12 18\\r\\n', 'output': ['66598866\\r\\n']}, {'input': '197 344\\r\\n5 11 3 17 16 1 12 7 13 5 9 11 15 14 13 7 13 11 5 9 20 11 11 9 19 3 20 4 6 15 2 14 16 5 19 5 5 5 12 12 12 19 18 1 5 17 13 7 17 14 4 5 9 20 14 13 15 3 8 2 13 16 20 10 20 14 8 17 14 4 9 16 8 13 5 2 13 11 9 7 9 5 11 20 3 17 9 12 12 3 9 19 6 3 15 9 5 11 2 3 13 14 15 7 9 19 16 11 6 8 11 18 11 11 16 18 3 5 10 19 10 6 3 19 3 18 16 16 7 3 10 13 13 16 19 13 4 7 1 7 12 9 6 8 6 1 6 20 7 12 9 13 13 12 10 10 10 16 9 6 11 14 14 7 2 1 16 15 12 7 15 18 8 4 6 18 2 17 6 5 13 19 12 7 1 9 15 9 18 5 8 3 7 8 4 15 8\\r\\n', 'output': ['132934747\\r\\n']}, {'input': '200 0\\r\\n2 5 2 7 6 10 10 4 7 9 1 5 7 1 8 5 9 8 5 2 6 4 9 10 5 4 4 4 8 7 7 5 9 7 7 4 9 8 5 8 10 5 1 2 8 4 3 7 9 6 9 3 9 2 1 9 2 7 4 10 4 7 10 6 1 6 7 4 4 9 10 3 5 5 1 2 8 6 6 2 2 8 6 3 6 1 4 6 10 6 4 8 3 9 6 7 7 8 5 2 10 9 2 7 3 6 10 6 8 9 6 6 8 4 6 9 2 10 9 4 2 3 4 1 3 9 4 2 4 10 10 1 2 3 9 8 2 1 10 7 8 3 10 5 3 10 9 1 9 2 6 7 2 1 10 4 4 9 9 1 8 1 10 9 8 9 9 7 4 3 6 7 10 9 2 7 8 10 2 7 7 6 9 5 9 7 3 1 7 1 5 9 7 3 10 3 10 8 5 7\\r\\n', 'output': ['563633437\\r\\n']}, {'input': '107 59\\r\\n416 332 455 497 251 13 496 46 176 382 357 268 441 302 305 11 274 61 412 18 225 332 173 371 54 179 378 85 471 176 439 36 81 275 452 212 261 488 166 274 89 183 478 337 313 196 130 87 14 223 341 46 45 306 175 488 113 354 107 411 469 122 436 293 311 60 453 245 184 13 425 360 302 205 151 89 433 285 119 301 274 64 127 496 350 354 262 2 148 232 117 28 11 398 237 460 421 347 142 76 391 317 164 484 35 310 453\\r\\n', 'output': ['955755252\\r\\n']}, {'input': '27 383\\r\\n161 2 16 478 438 205 151 229 116 230 447 497 456 219 28 57 200 6 161 400 338 11 426 283 275 40 190\\r\\n', 'output': ['258971846\\r\\n']}, {'input': '107 497\\r\\n218 342 381 296 272 169 321 275 435 461 422 209 413 366 295 332 458 253 302 245 70 353 405 420 439 314 232 466 364 374 4 469 116 291 75 500 212 127 157 440 429 396 53 68 151 264 2 134 73 31 494 148 426 459 27 175 225 287 241 60 14 437 457 446 51 350 233 177 88 455 497 303 107 130 76 125 441 229 325 318 187 459 178 172 226 236 465 289 491 494 146 280 456 475 286 457 277 224 435 365 100 77 145 448 118 454 431\\r\\n', 'output': ['480907144\\r\\n']}, {'input': '27 209\\r\\n272 116 134 369 255 453 477 162 78 1 12 142 236 283 209 390 476 493 51 23 387 32 262 128 160 71 56\\r\\n', 'output': ['415376034\\r\\n']}, {'input': '85 655\\r\\n411 473 456 4 14 135 49 240 191 230 60 375 373 115 301 20 421 187 267 347 207 428 81 318 10 370 428 272 247 322 294 477 274 110 238 244 72 399 146 392 207 83 164 87 257 341 97 94 286 375 25 271 177 270 169 149 279 105 387 92 352 342 274 247 236 344 35 336 419 465 169 371 62 112 490 48 36 343 248 428 241 223 369 296 86\\r\\n', 'output': ['275193712\\r\\n']}, {'input': '107 19\\r\\n2 5 2 5 4 4 1 5 3 3 4 3 2 5 3 1 4 1 4 1 3 1 4 4 1 5 4 1 2 3 3 3 4 2 5 2 3 4 5 2 1 5 3 1 5 5 1 5 3 3 3 5 5 2 4 3 3 4 5 4 2 5 2 4 3 5 2 5 2 1 1 1 1 2 1 4 2 3 4 3 2 4 4 2 2 3 5 5 1 4 1 2 4 4 1 3 3 5 2 3 4 1 2 3 1 5 2\\r\\n', 'output': ['114012476\\r\\n']}, {'input': '186 35\\r\\n4 4 3 2 4 3 1 2 2 2 4 2 5 3 1 3 1 1 2 4 2 5 5 5 1 3 4 1 5 3 5 5 2 4 5 3 1 1 2 1 2 4 2 3 3 4 4 3 3 5 3 1 4 5 5 4 5 2 3 1 2 2 2 4 3 4 1 4 1 2 1 1 1 5 1 1 4 5 3 5 3 3 4 1 5 1 1 4 5 3 3 2 5 3 5 1 5 2 5 1 4 2 4 5 4 4 4 5 4 4 2 5 2 4 4 5 3 2 5 4 1 1 5 5 5 5 1 3 2 5 5 4 3 2 2 5 5 3 1 4 3 4 3 1 2 5 4 4 2 2 5 3 2 1 2 1 1 3 1 4 1 2 3 2 1 5 5 2 2 1 2 1 5 2 4 4 3 2 5 5 2 3 4 5 5 3\\r\\n', 'output': ['273232004\\r\\n']}, {'input': '150 978\\r\\n34 20 7 39 15 14 39 49 36 13 12 12 30 40 4 17 8 2 48 10 16 2 33 36 41 30 4 35 32 35 12 14 28 3 7 3 36 46 43 19 7 38 48 24 19 21 9 31 3 3 8 23 21 49 44 29 15 6 11 40 39 12 44 40 41 37 7 39 40 17 34 21 22 19 30 21 14 3 16 50 38 38 27 7 4 33 20 23 27 32 14 50 33 36 38 22 27 27 14 2 27 37 33 6 21 44 25 17 28 22 43 10 33 21 42 4 7 42 10 20 22 49 14 18 26 19 43 4 31 18 13 17 5 46 19 35 31 14 28 29 48 9 9 4 10 15 30 5 9 23\\r\\n', 'output': ['338032038\\r\\n']}, {'input': '115 588\\r\\n39 133 47 175 120 1 183 148 115 9 196 101 18 156 156 74 43 149 95 56 72 84 32 104 16 188 88 168 164 18 36 105 131 60 26 151 46 160 16 45 76 16 157 190 120 37 102 29 190 57 178 38 89 75 143 2 80 7 11 31 101 28 171 46 93 100 23 163 146 135 12 73 140 144 177 43 19 158 26 20 39 173 97 8 169 139 23 105 7 171 79 11 156 77 164 63 165 124 126 108 125 118 58 129 146 152 31 133 5 160 89 136 174 121 185\\r\\n', 'output': ['27195433\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nconstexpr ll N = 201, mod = 1e9 + 7;\nll i, n, k, ans, a[N], dp[N][N];\nvoid solve() {\n  scanf(\"%lld %lld\", &n, &k);\n  for (i = 1; i <= n; i++) scanf(\"%lld\", &a[i]);\n  sort(a + 1, a + n + 1);\n  dp[0][0] = 1;\n  for (i = 1; i <= n; i++) {\n    dp[i][0] = 1;\n    for (ll j = 1; j <= k; j++)\n      dp[i][j] = (dp[i - 1][j] + (ll)(j < a[i] - 1) * dp[i - 1][j - 1]) %\n                 mod;\n  }\n  for (i = 1; i <= n; i++) ans = (ans + dp[n][k] * i) % mod;\n  printf(\"%lld\\n\", ans);\n}\nint main() {\n  solve();\n  return 0;\n}\n"}
{"src_uid": "788cb3da98fd4a56720f800588061b79", "id": 35, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '3 2\\r\\n2 4 5\\r\\n', 'output': ['3\\r\\n']}, {'input': '4 3\\r\\n7 8 9 10\\r\\n', 'output': ['13\\r\\n']}, {'input': '4 0\\r\\n5 10 20 21\\r\\n', 'output': ['1\\r\\n']}, {'input': '20 1000\\r\\n50 50 100 100 150 150 200 200 250 250 300 300 350 350 400 400 450 450 500 500\\r\\n', 'output': ['97456952\\r\\n']}, {'input': '5 222\\r\\n58 369 477 58 90\\r\\n', 'output': ['10\\r\\n']}, {'input': '9 222\\r\\n304 142 38 334 73 122 252 381 438\\r\\n', 'output': ['423\\r\\n']}, {'input': '9 247\\r\\n359 350 140 26 293 488 57 481 71\\r\\n', 'output': ['414\\r\\n']}, {'input': '5 341\\r\\n412 32 189 303 172\\r\\n', 'output': ['26\\r\\n']}, {'input': '200 0\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['380668983\\r\\n']}, {'input': '121 19\\r\\n1 1 1 1 2 1 1 2 2 1 1 2 2 2 2 1 1 2 1 1 1 1 2 2 2 2 1 1 2 1 1 2 1 1 1 1 1 2 2 1 2 2 1 2 1 1 2 2 2 1 2 1 1 1 1 2 1 1 2 2 1 1 2 1 2 1 2 1 2 2 2 1 1 1 1 2 1 1 2 1 2 2 2 2 2 1 1 2 2 1 2 2 2 1 2 1 1 1 1 2 2 2 2 2 1 1 2 2 2 2 2 1 1 1 1 1 2 2 1 2 1\\r\\n', 'output': ['378568711\\r\\n']}, {'input': '3 4\\r\\n10 7 10\\r\\n', 'output': ['5\\r\\n']}, {'input': '1 5\\r\\n3\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 5\\r\\n9\\r\\n', 'output': ['1\\r\\n']}, {'input': '5 2\\r\\n3 10 5 6 5\\r\\n', 'output': ['8\\r\\n']}, {'input': '1 2\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '166 7\\r\\n9 8 7 2 9 9 7 7 3 1 9 9 9 7 1 5 5 6 6 2 3 2 10 9 3 5 8 8 6 3 10 3 4 8 6 5 1 7 2 9 1 4 9 10 6 8 6 7 8 3 2 1 10 5 6 6 3 7 4 9 10 3 1 10 9 9 2 10 3 2 4 8 9 6 1 9 10 10 10 9 5 8 9 7 9 6 7 5 4 7 8 9 8 5 10 5 4 10 8 5 10 10 10 8 7 3 2 6 3 1 7 5 7 10 7 8 8 8 5 5 8 10 2 10 2 4 10 2 3 1 1 4 5 8 7 9 4 10 2 9 8 1 1 5 9 5 2 1 7 7 9 10 2 2 10 10 6 8 5 5 9 4 3 1 10 5\\r\\n', 'output': ['194851520\\r\\n']}, {'input': '94 17\\r\\n9 10 10 5 2 7 10 9 5 5 7 7 6 10 4 10 3 7 4 9 2 5 1 5 4 2 9 8 4 3 9 5 7 10 10 6 3 1 9 9 2 8 8 8 7 2 4 5 2 5 7 7 4 9 4 9 4 10 5 10 9 7 3 6 10 3 1 10 6 4 8 9 4 10 7 2 9 8 7 10 2 2 4 1 4 6 10 7 2 4 9 4 8 5\\r\\n', 'output': ['650765262\\r\\n']}, {'input': '14 26\\r\\n3 7 8 4 7 5 10 8 4 4 1 6 7 7\\r\\n', 'output': ['190894282\\r\\n']}, {'input': '142 24\\r\\n8 1 10 6 5 3 9 4 4 8 2 7 4 4 1 2 7 4 7 3 3 9 9 6 6 10 8 5 3 2 3 4 7 9 9 8 4 7 8 6 9 1 7 9 10 2 6 1 9 9 1 10 2 10 6 5 10 2 3 8 3 7 1 8 9 10 1 8 10 7 2 5 1 1 4 6 5 7 6 10 4 4 7 4 10 5 10 9 8 7 4 10 4 4 3 4 10 6 1 4 8 5 10 6 3 8 8 4 2 3 2 1 7 5 2 4 2 3 10 7 8 3 10 9 1 7 7 5 5 5 10 8 8 2 6 9 7 2 4 7 7 3\\r\\n', 'output': ['287439553\\r\\n']}, {'input': '166 34\\r\\n6 5 3 3 4 5 4 6 4 6 2 6 5 1 7 4 5 5 6 1 2 2 6 4 3 7 4 5 1 7 3 1 6 5 1 3 6 4 9 7 6 6 6 5 8 6 2 4 5 6 10 10 4 8 3 6 1 4 7 9 8 5 2 9 8 10 2 2 6 1 3 6 6 9 10 8 10 5 8 10 5 9 2 4 8 2 9 2 1 9 5 9 3 8 1 10 4 1 1 4 9 6 10 6 2 1 4 5 5 8 10 10 5 6 3 10 1 8 5 10 3 3 10 9 7 4 1 9 9 10 8 3 4 2 8 10 6 3 10 10 4 6 8 7 9 7 10 3 1 10 4 10 5 2 7 9 4 10 6 2 6 3 9 10 9 10\\r\\n', 'output': ['772974256\\r\\n']}, {'input': '171 302\\r\\n64 51 53 35 36 42 67 27 55 85 97 23 47 8 59 69 50 15 28 36 22 12 49 99 54 11 10 91 91 78 59 65 68 5 20 77 42 59 85 65 69 35 59 86 45 96 41 82 89 93 80 25 16 22 68 8 23 57 48 53 16 21 50 44 70 75 33 32 43 32 77 40 8 41 23 82 61 51 26 88 58 23 6 69 11 95 89 41 70 95 81 50 99 81 48 36 62 85 64 58 25 30 23 27 30 87 45 42 67 47 1 1 86 33 43 78 41 57 72 86 55 25 69 36 77 97 48 24 9 20 50 5 2 84 80 62 7 5 49 2 16 3 62 8 40 24 94 60 9 95 22 27 58 20 22 95 16 53 6 8 74 54 94 65 62 90 95 17 77 32 99\\r\\n', 'output': ['49555477\\r\\n']}, {'input': '158 396\\r\\n10 33 14 7 23 30 23 9 99 41 88 56 70 25 85 27 68 60 73 14 32 87 6 16 71 64 22 66 9 48 46 93 81 9 50 48 80 70 78 76 49 89 56 74 56 40 67 45 3 41 77 49 8 56 55 29 78 69 52 70 55 99 85 6 59 99 24 66 4 23 4 51 84 67 79 65 6 67 80 36 85 47 45 37 75 38 39 59 7 11 81 7 12 79 56 87 9 97 30 32 27 21 42 85 17 50 69 13 51 12 73 60 14 94 93 31 10 9 70 67 52 63 45 38 37 13 46 50 53 29 50 57 49 81 71 79 58 74 19 47 19 14 16 82 18 11 71 90 28 21 48 16 41 52 24 6 4 23\\r\\n', 'output': ['757778575\\r\\n']}, {'input': '169 129\\r\\n66 70 83 26 65 94 1 56 17 64 58 68 23 73 45 93 30 94 22 55 68 29 73 44 35 39 71 76 76 76 19 98 99 26 43 73 96 6 72 23 8 56 34 17 91 64 17 33 56 92 41 22 92 59 23 96 35 94 82 1 61 41 75 89 10 74 13 64 50 78 49 83 6 62 43 22 61 95 28 4 76 14 54 41 83 81 83 23 13 57 10 2 44 54 89 41 27 58 57 47 26 82 97 82 5 35 27 31 89 6 73 36 94 89 29 96 3 88 82 27 50 56 73 24 17 56 25 9 2 47 71 86 96 79 35 42 31 73 13 89 52 30 88 96 46 91 23 60 79 2 19 7 73 40 6 29 61 29 67 85 75 11 8 34 60 19 87 23 55\\r\\n', 'output': ['538924707\\r\\n']}, {'input': '195 110\\r\\n3 4 5 1 3 5 4 1 2 4 3 2 4 4 3 2 5 5 5 3 3 3 5 3 5 4 2 5 1 1 2 3 4 5 5 2 2 4 3 4 2 4 4 3 4 2 3 3 3 5 2 1 3 2 5 5 2 2 1 2 2 5 4 2 4 2 4 1 4 2 4 4 4 4 3 5 3 1 2 2 3 4 3 4 4 1 2 1 2 4 5 2 4 3 4 1 4 4 4 5 1 2 4 5 3 5 3 4 2 4 5 2 5 2 5 4 1 5 1 4 2 5 1 2 4 1 3 3 5 5 4 2 3 4 5 4 4 5 2 3 4 2 5 3 2 1 5 3 5 3 5 2 3 2 5 3 5 4 5 1 5 3 3 2 2 5 4 3 3 2 5 5 5 5 2 1 2 3 1 3 5 2 4 5 3 2 2 5 5 2 3 1 3 4 5\\r\\n', 'output': ['21311661\\r\\n']}, {'input': '196 17\\r\\n4 4 2 2 4 2 2 4 4 3 4 1 5 4 4 5 4 1 1 1 5 1 1 4 3 4 4 1 1 1 5 3 2 4 2 1 5 3 4 2 4 2 5 4 1 4 1 2 3 5 3 5 3 2 5 5 5 2 2 1 1 2 2 2 5 4 5 2 5 5 3 1 5 3 5 5 1 3 3 2 3 2 2 1 5 1 2 5 4 5 4 3 4 4 4 1 5 5 2 2 2 5 3 4 5 3 3 2 4 4 4 3 1 1 1 5 2 5 1 5 1 2 3 3 4 4 5 4 2 5 4 2 3 3 4 5 2 2 4 5 5 2 2 1 3 3 4 3 2 3 4 4 5 2 5 1 4 5 2 3 2 4 4 3 4 4 2 5 5 5 5 4 1 3 2 1 4 5 3 2 3 3 5 4 3 1 4 4 5 2 5 2 2 1 4 3\\r\\n', 'output': ['140496580\\r\\n']}, {'input': '200 558\\r\\n1 1 1 3 2 1 1 5 1 2 1 1 2 2 1 5 2 5 2 5 3 2 4 1 5 2 3 2 3 1 2 2 1 4 4 2 5 1 4 3 2 2 4 5 4 5 2 5 5 4 3 5 4 5 5 2 3 4 3 1 5 4 3 3 3 3 2 2 3 4 1 3 1 4 5 2 3 4 1 5 2 3 3 5 5 3 3 1 2 5 3 4 2 5 2 3 3 1 3 2 3 5 1 2 1 1 3 4 1 3 2 1 1 4 2 5 1 2 1 2 2 2 2 2 3 4 2 2 4 4 2 1 3 3 2 4 1 3 5 4 5 1 5 2 1 4 2 3 4 1 4 5 1 1 5 2 4 5 5 4 4 5 3 1 1 5 4 2 2 5 1 3 3 3 4 1 1 2 3 4 1 5 2 2 3 1 4 3 5 1 5 3 2 1 3 2 1 1 3 2\\r\\n', 'output': ['380668983\\r\\n']}, {'input': '190 152\\r\\n2 2 4 4 4 2 2 1 2 3 5 5 4 3 5 1 2 2 2 2 3 3 5 2 1 1 3 4 3 2 2 4 2 3 1 4 2 2 3 2 3 5 3 2 4 1 4 1 2 4 1 3 4 4 3 4 4 4 4 5 2 4 5 3 3 5 4 4 3 4 1 4 1 4 3 3 5 5 2 3 2 2 2 5 4 4 2 4 3 4 2 2 1 4 1 2 3 3 3 5 1 5 5 1 4 3 2 5 2 5 5 5 2 3 3 4 1 1 3 2 5 5 2 5 2 3 5 1 1 5 4 1 1 3 5 2 3 4 3 4 2 1 4 3 5 2 1 1 1 5 2 5 3 4 5 5 2 3 5 5 5 5 1 5 2 5 5 2 4 4 4 3 1 1 2 1 4 4 3 4 2 5 5 3 4 5 5 2 1 4\\r\\n', 'output': ['3475416\\r\\n']}, {'input': '191 640\\r\\n20 10 14 20 13 9 16 5 14 1 11 18 16 17 7 4 15 18 17 3 3 15 14 20 18 2 4 14 20 17 7 2 3 9 5 10 7 6 7 17 3 5 10 1 18 13 15 4 15 7 19 1 17 6 15 12 4 19 1 9 18 18 9 13 3 15 9 3 17 14 18 4 9 3 9 19 20 15 18 11 3 1 12 8 11 10 20 14 14 6 2 14 16 1 7 2 11 15 1 9 20 4 1 1 3 20 20 4 11 7 19 3 3 6 15 10 18 9 13 14 16 12 3 1 15 10 5 14 19 17 9 10 10 15 12 12 5 2 11 6 5 6 7 14 7 6 5 10 13 10 18 20 18 20 12 7 6 10 4 4 3 13 14 5 9 10 4 6 11 11 15 15 12 19 4 7 20 3 12 4 16 6 4 9 17 10 18 11 13 12 18\\r\\n', 'output': ['66598866\\r\\n']}, {'input': '197 344\\r\\n5 11 3 17 16 1 12 7 13 5 9 11 15 14 13 7 13 11 5 9 20 11 11 9 19 3 20 4 6 15 2 14 16 5 19 5 5 5 12 12 12 19 18 1 5 17 13 7 17 14 4 5 9 20 14 13 15 3 8 2 13 16 20 10 20 14 8 17 14 4 9 16 8 13 5 2 13 11 9 7 9 5 11 20 3 17 9 12 12 3 9 19 6 3 15 9 5 11 2 3 13 14 15 7 9 19 16 11 6 8 11 18 11 11 16 18 3 5 10 19 10 6 3 19 3 18 16 16 7 3 10 13 13 16 19 13 4 7 1 7 12 9 6 8 6 1 6 20 7 12 9 13 13 12 10 10 10 16 9 6 11 14 14 7 2 1 16 15 12 7 15 18 8 4 6 18 2 17 6 5 13 19 12 7 1 9 15 9 18 5 8 3 7 8 4 15 8\\r\\n', 'output': ['132934747\\r\\n']}, {'input': '200 0\\r\\n2 5 2 7 6 10 10 4 7 9 1 5 7 1 8 5 9 8 5 2 6 4 9 10 5 4 4 4 8 7 7 5 9 7 7 4 9 8 5 8 10 5 1 2 8 4 3 7 9 6 9 3 9 2 1 9 2 7 4 10 4 7 10 6 1 6 7 4 4 9 10 3 5 5 1 2 8 6 6 2 2 8 6 3 6 1 4 6 10 6 4 8 3 9 6 7 7 8 5 2 10 9 2 7 3 6 10 6 8 9 6 6 8 4 6 9 2 10 9 4 2 3 4 1 3 9 4 2 4 10 10 1 2 3 9 8 2 1 10 7 8 3 10 5 3 10 9 1 9 2 6 7 2 1 10 4 4 9 9 1 8 1 10 9 8 9 9 7 4 3 6 7 10 9 2 7 8 10 2 7 7 6 9 5 9 7 3 1 7 1 5 9 7 3 10 3 10 8 5 7\\r\\n', 'output': ['563633437\\r\\n']}, {'input': '107 59\\r\\n416 332 455 497 251 13 496 46 176 382 357 268 441 302 305 11 274 61 412 18 225 332 173 371 54 179 378 85 471 176 439 36 81 275 452 212 261 488 166 274 89 183 478 337 313 196 130 87 14 223 341 46 45 306 175 488 113 354 107 411 469 122 436 293 311 60 453 245 184 13 425 360 302 205 151 89 433 285 119 301 274 64 127 496 350 354 262 2 148 232 117 28 11 398 237 460 421 347 142 76 391 317 164 484 35 310 453\\r\\n', 'output': ['955755252\\r\\n']}, {'input': '27 383\\r\\n161 2 16 478 438 205 151 229 116 230 447 497 456 219 28 57 200 6 161 400 338 11 426 283 275 40 190\\r\\n', 'output': ['258971846\\r\\n']}, {'input': '107 497\\r\\n218 342 381 296 272 169 321 275 435 461 422 209 413 366 295 332 458 253 302 245 70 353 405 420 439 314 232 466 364 374 4 469 116 291 75 500 212 127 157 440 429 396 53 68 151 264 2 134 73 31 494 148 426 459 27 175 225 287 241 60 14 437 457 446 51 350 233 177 88 455 497 303 107 130 76 125 441 229 325 318 187 459 178 172 226 236 465 289 491 494 146 280 456 475 286 457 277 224 435 365 100 77 145 448 118 454 431\\r\\n', 'output': ['480907144\\r\\n']}, {'input': '27 209\\r\\n272 116 134 369 255 453 477 162 78 1 12 142 236 283 209 390 476 493 51 23 387 32 262 128 160 71 56\\r\\n', 'output': ['415376034\\r\\n']}, {'input': '85 655\\r\\n411 473 456 4 14 135 49 240 191 230 60 375 373 115 301 20 421 187 267 347 207 428 81 318 10 370 428 272 247 322 294 477 274 110 238 244 72 399 146 392 207 83 164 87 257 341 97 94 286 375 25 271 177 270 169 149 279 105 387 92 352 342 274 247 236 344 35 336 419 465 169 371 62 112 490 48 36 343 248 428 241 223 369 296 86\\r\\n', 'output': ['275193712\\r\\n']}, {'input': '107 19\\r\\n2 5 2 5 4 4 1 5 3 3 4 3 2 5 3 1 4 1 4 1 3 1 4 4 1 5 4 1 2 3 3 3 4 2 5 2 3 4 5 2 1 5 3 1 5 5 1 5 3 3 3 5 5 2 4 3 3 4 5 4 2 5 2 4 3 5 2 5 2 1 1 1 1 2 1 4 2 3 4 3 2 4 4 2 2 3 5 5 1 4 1 2 4 4 1 3 3 5 2 3 4 1 2 3 1 5 2\\r\\n', 'output': ['114012476\\r\\n']}, {'input': '186 35\\r\\n4 4 3 2 4 3 1 2 2 2 4 2 5 3 1 3 1 1 2 4 2 5 5 5 1 3 4 1 5 3 5 5 2 4 5 3 1 1 2 1 2 4 2 3 3 4 4 3 3 5 3 1 4 5 5 4 5 2 3 1 2 2 2 4 3 4 1 4 1 2 1 1 1 5 1 1 4 5 3 5 3 3 4 1 5 1 1 4 5 3 3 2 5 3 5 1 5 2 5 1 4 2 4 5 4 4 4 5 4 4 2 5 2 4 4 5 3 2 5 4 1 1 5 5 5 5 1 3 2 5 5 4 3 2 2 5 5 3 1 4 3 4 3 1 2 5 4 4 2 2 5 3 2 1 2 1 1 3 1 4 1 2 3 2 1 5 5 2 2 1 2 1 5 2 4 4 3 2 5 5 2 3 4 5 5 3\\r\\n', 'output': ['273232004\\r\\n']}, {'input': '150 978\\r\\n34 20 7 39 15 14 39 49 36 13 12 12 30 40 4 17 8 2 48 10 16 2 33 36 41 30 4 35 32 35 12 14 28 3 7 3 36 46 43 19 7 38 48 24 19 21 9 31 3 3 8 23 21 49 44 29 15 6 11 40 39 12 44 40 41 37 7 39 40 17 34 21 22 19 30 21 14 3 16 50 38 38 27 7 4 33 20 23 27 32 14 50 33 36 38 22 27 27 14 2 27 37 33 6 21 44 25 17 28 22 43 10 33 21 42 4 7 42 10 20 22 49 14 18 26 19 43 4 31 18 13 17 5 46 19 35 31 14 28 29 48 9 9 4 10 15 30 5 9 23\\r\\n', 'output': ['338032038\\r\\n']}, {'input': '115 588\\r\\n39 133 47 175 120 1 183 148 115 9 196 101 18 156 156 74 43 149 95 56 72 84 32 104 16 188 88 168 164 18 36 105 131 60 26 151 46 160 16 45 76 16 157 190 120 37 102 29 190 57 178 38 89 75 143 2 80 7 11 31 101 28 171 46 93 100 23 163 146 135 12 73 140 144 177 43 19 158 26 20 39 173 97 8 169 139 23 105 7 171 79 11 156 77 164 63 165 124 126 108 125 118 58 129 146 152 31 133 5 160 89 136 174 121 185\\r\\n', 'output': ['27195433\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1e9 + 7;\nlong long dp[2][205][205];\nlong long solve(bool ok, int idx, int gp) {\n  if (idx == 0) return gp == 0;\n  long long &ans = dp[ok][idx][gp];\n  if (ans!= -1) return ans;\n  ans = solve(ok, idx - 1, gp);\n  if (ok) ans += solve(ok, idx - 1, gp + 1);\n  return ans;\n}\nint main() {\n  int n, k;\n  cin >> n >> k;\n  memset(dp, -1, sizeof(dp));\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) cin >> a[i];\n  sort(a.begin(), a.end());\n  int i = 1, j = 0, cnt = 0;\n  while (i < n) {\n    if (a[i] - a[j] <= k)\n      j++, i++;\n    else\n      i++;\n    cnt++;\n  }\n  long long ans = 0;\n  for (int gp = 0; gp <= cnt; gp++)\n    ans += solve(true, n - 1, gp) % mod;\n  cout << ans % mod;\n  return 0;\n}\n"}
{"src_uid": "788cb3da98fd4a56720f800588061b79", "id": 35, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '3 2\\r\\n2 4 5\\r\\n', 'output': ['3\\r\\n']}, {'input': '4 3\\r\\n7 8 9 10\\r\\n', 'output': ['13\\r\\n']}, {'input': '4 0\\r\\n5 10 20 21\\r\\n', 'output': ['1\\r\\n']}, {'input': '20 1000\\r\\n50 50 100 100 150 150 200 200 250 250 300 300 350 350 400 400 450 450 500 500\\r\\n', 'output': ['97456952\\r\\n']}, {'input': '5 222\\r\\n58 369 477 58 90\\r\\n', 'output': ['10\\r\\n']}, {'input': '9 222\\r\\n304 142 38 334 73 122 252 381 438\\r\\n', 'output': ['423\\r\\n']}, {'input': '9 247\\r\\n359 350 140 26 293 488 57 481 71\\r\\n', 'output': ['414\\r\\n']}, {'input': '5 341\\r\\n412 32 189 303 172\\r\\n', 'output': ['26\\r\\n']}, {'input': '200 0\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['380668983\\r\\n']}, {'input': '121 19\\r\\n1 1 1 1 2 1 1 2 2 1 1 2 2 2 2 1 1 2 1 1 1 1 2 2 2 2 1 1 2 1 1 2 1 1 1 1 1 2 2 1 2 2 1 2 1 1 2 2 2 1 2 1 1 1 1 2 1 1 2 2 1 1 2 1 2 1 2 1 2 2 2 1 1 1 1 2 1 1 2 1 2 2 2 2 2 1 1 2 2 1 2 2 2 1 2 1 1 1 1 2 2 2 2 2 1 1 2 2 2 2 2 1 1 1 1 1 2 2 1 2 1\\r\\n', 'output': ['378568711\\r\\n']}, {'input': '3 4\\r\\n10 7 10\\r\\n', 'output': ['5\\r\\n']}, {'input': '1 5\\r\\n3\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 5\\r\\n9\\r\\n', 'output': ['1\\r\\n']}, {'input': '5 2\\r\\n3 10 5 6 5\\r\\n', 'output': ['8\\r\\n']}, {'input': '1 2\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '166 7\\r\\n9 8 7 2 9 9 7 7 3 1 9 9 9 7 1 5 5 6 6 2 3 2 10 9 3 5 8 8 6 3 10 3 4 8 6 5 1 7 2 9 1 4 9 10 6 8 6 7 8 3 2 1 10 5 6 6 3 7 4 9 10 3 1 10 9 9 2 10 3 2 4 8 9 6 1 9 10 10 10 9 5 8 9 7 9 6 7 5 4 7 8 9 8 5 10 5 4 10 8 5 10 10 10 8 7 3 2 6 3 1 7 5 7 10 7 8 8 8 5 5 8 10 2 10 2 4 10 2 3 1 1 4 5 8 7 9 4 10 2 9 8 1 1 5 9 5 2 1 7 7 9 10 2 2 10 10 6 8 5 5 9 4 3 1 10 5\\r\\n', 'output': ['194851520\\r\\n']}, {'input': '94 17\\r\\n9 10 10 5 2 7 10 9 5 5 7 7 6 10 4 10 3 7 4 9 2 5 1 5 4 2 9 8 4 3 9 5 7 10 10 6 3 1 9 9 2 8 8 8 7 2 4 5 2 5 7 7 4 9 4 9 4 10 5 10 9 7 3 6 10 3 1 10 6 4 8 9 4 10 7 2 9 8 7 10 2 2 4 1 4 6 10 7 2 4 9 4 8 5\\r\\n', 'output': ['650765262\\r\\n']}, {'input': '14 26\\r\\n3 7 8 4 7 5 10 8 4 4 1 6 7 7\\r\\n', 'output': ['190894282\\r\\n']}, {'input': '142 24\\r\\n8 1 10 6 5 3 9 4 4 8 2 7 4 4 1 2 7 4 7 3 3 9 9 6 6 10 8 5 3 2 3 4 7 9 9 8 4 7 8 6 9 1 7 9 10 2 6 1 9 9 1 10 2 10 6 5 10 2 3 8 3 7 1 8 9 10 1 8 10 7 2 5 1 1 4 6 5 7 6 10 4 4 7 4 10 5 10 9 8 7 4 10 4 4 3 4 10 6 1 4 8 5 10 6 3 8 8 4 2 3 2 1 7 5 2 4 2 3 10 7 8 3 10 9 1 7 7 5 5 5 10 8 8 2 6 9 7 2 4 7 7 3\\r\\n', 'output': ['287439553\\r\\n']}, {'input': '166 34\\r\\n6 5 3 3 4 5 4 6 4 6 2 6 5 1 7 4 5 5 6 1 2 2 6 4 3 7 4 5 1 7 3 1 6 5 1 3 6 4 9 7 6 6 6 5 8 6 2 4 5 6 10 10 4 8 3 6 1 4 7 9 8 5 2 9 8 10 2 2 6 1 3 6 6 9 10 8 10 5 8 10 5 9 2 4 8 2 9 2 1 9 5 9 3 8 1 10 4 1 1 4 9 6 10 6 2 1 4 5 5 8 10 10 5 6 3 10 1 8 5 10 3 3 10 9 7 4 1 9 9 10 8 3 4 2 8 10 6 3 10 10 4 6 8 7 9 7 10 3 1 10 4 10 5 2 7 9 4 10 6 2 6 3 9 10 9 10\\r\\n', 'output': ['772974256\\r\\n']}, {'input': '171 302\\r\\n64 51 53 35 36 42 67 27 55 85 97 23 47 8 59 69 50 15 28 36 22 12 49 99 54 11 10 91 91 78 59 65 68 5 20 77 42 59 85 65 69 35 59 86 45 96 41 82 89 93 80 25 16 22 68 8 23 57 48 53 16 21 50 44 70 75 33 32 43 32 77 40 8 41 23 82 61 51 26 88 58 23 6 69 11 95 89 41 70 95 81 50 99 81 48 36 62 85 64 58 25 30 23 27 30 87 45 42 67 47 1 1 86 33 43 78 41 57 72 86 55 25 69 36 77 97 48 24 9 20 50 5 2 84 80 62 7 5 49 2 16 3 62 8 40 24 94 60 9 95 22 27 58 20 22 95 16 53 6 8 74 54 94 65 62 90 95 17 77 32 99\\r\\n', 'output': ['49555477\\r\\n']}, {'input': '158 396\\r\\n10 33 14 7 23 30 23 9 99 41 88 56 70 25 85 27 68 60 73 14 32 87 6 16 71 64 22 66 9 48 46 93 81 9 50 48 80 70 78 76 49 89 56 74 56 40 67 45 3 41 77 49 8 56 55 29 78 69 52 70 55 99 85 6 59 99 24 66 4 23 4 51 84 67 79 65 6 67 80 36 85 47 45 37 75 38 39 59 7 11 81 7 12 79 56 87 9 97 30 32 27 21 42 85 17 50 69 13 51 12 73 60 14 94 93 31 10 9 70 67 52 63 45 38 37 13 46 50 53 29 50 57 49 81 71 79 58 74 19 47 19 14 16 82 18 11 71 90 28 21 48 16 41 52 24 6 4 23\\r\\n', 'output': ['757778575\\r\\n']}, {'input': '169 129\\r\\n66 70 83 26 65 94 1 56 17 64 58 68 23 73 45 93 30 94 22 55 68 29 73 44 35 39 71 76 76 76 19 98 99 26 43 73 96 6 72 23 8 56 34 17 91 64 17 33 56 92 41 22 92 59 23 96 35 94 82 1 61 41 75 89 10 74 13 64 50 78 49 83 6 62 43 22 61 95 28 4 76 14 54 41 83 81 83 23 13 57 10 2 44 54 89 41 27 58 57 47 26 82 97 82 5 35 27 31 89 6 73 36 94 89 29 96 3 88 82 27 50 56 73 24 17 56 25 9 2 47 71 86 96 79 35 42 31 73 13 89 52 30 88 96 46 91 23 60 79 2 19 7 73 40 6 29 61 29 67 85 75 11 8 34 60 19 87 23 55\\r\\n', 'output': ['538924707\\r\\n']}, {'input': '195 110\\r\\n3 4 5 1 3 5 4 1 2 4 3 2 4 4 3 2 5 5 5 3 3 3 5 3 5 4 2 5 1 1 2 3 4 5 5 2 2 4 3 4 2 4 4 3 4 2 3 3 3 5 2 1 3 2 5 5 2 2 1 2 2 5 4 2 4 2 4 1 4 2 4 4 4 4 3 5 3 1 2 2 3 4 3 4 4 1 2 1 2 4 5 2 4 3 4 1 4 4 4 5 1 2 4 5 3 5 3 4 2 4 5 2 5 2 5 4 1 5 1 4 2 5 1 2 4 1 3 3 5 5 4 2 3 4 5 4 4 5 2 3 4 2 5 3 2 1 5 3 5 3 5 2 3 2 5 3 5 4 5 1 5 3 3 2 2 5 4 3 3 2 5 5 5 5 2 1 2 3 1 3 5 2 4 5 3 2 2 5 5 2 3 1 3 4 5\\r\\n', 'output': ['21311661\\r\\n']}, {'input': '196 17\\r\\n4 4 2 2 4 2 2 4 4 3 4 1 5 4 4 5 4 1 1 1 5 1 1 4 3 4 4 1 1 1 5 3 2 4 2 1 5 3 4 2 4 2 5 4 1 4 1 2 3 5 3 5 3 2 5 5 5 2 2 1 1 2 2 2 5 4 5 2 5 5 3 1 5 3 5 5 1 3 3 2 3 2 2 1 5 1 2 5 4 5 4 3 4 4 4 1 5 5 2 2 2 5 3 4 5 3 3 2 4 4 4 3 1 1 1 5 2 5 1 5 1 2 3 3 4 4 5 4 2 5 4 2 3 3 4 5 2 2 4 5 5 2 2 1 3 3 4 3 2 3 4 4 5 2 5 1 4 5 2 3 2 4 4 3 4 4 2 5 5 5 5 4 1 3 2 1 4 5 3 2 3 3 5 4 3 1 4 4 5 2 5 2 2 1 4 3\\r\\n', 'output': ['140496580\\r\\n']}, {'input': '200 558\\r\\n1 1 1 3 2 1 1 5 1 2 1 1 2 2 1 5 2 5 2 5 3 2 4 1 5 2 3 2 3 1 2 2 1 4 4 2 5 1 4 3 2 2 4 5 4 5 2 5 5 4 3 5 4 5 5 2 3 4 3 1 5 4 3 3 3 3 2 2 3 4 1 3 1 4 5 2 3 4 1 5 2 3 3 5 5 3 3 1 2 5 3 4 2 5 2 3 3 1 3 2 3 5 1 2 1 1 3 4 1 3 2 1 1 4 2 5 1 2 1 2 2 2 2 2 3 4 2 2 4 4 2 1 3 3 2 4 1 3 5 4 5 1 5 2 1 4 2 3 4 1 4 5 1 1 5 2 4 5 5 4 4 5 3 1 1 5 4 2 2 5 1 3 3 3 4 1 1 2 3 4 1 5 2 2 3 1 4 3 5 1 5 3 2 1 3 2 1 1 3 2\\r\\n', 'output': ['380668983\\r\\n']}, {'input': '190 152\\r\\n2 2 4 4 4 2 2 1 2 3 5 5 4 3 5 1 2 2 2 2 3 3 5 2 1 1 3 4 3 2 2 4 2 3 1 4 2 2 3 2 3 5 3 2 4 1 4 1 2 4 1 3 4 4 3 4 4 4 4 5 2 4 5 3 3 5 4 4 3 4 1 4 1 4 3 3 5 5 2 3 2 2 2 5 4 4 2 4 3 4 2 2 1 4 1 2 3 3 3 5 1 5 5 1 4 3 2 5 2 5 5 5 2 3 3 4 1 1 3 2 5 5 2 5 2 3 5 1 1 5 4 1 1 3 5 2 3 4 3 4 2 1 4 3 5 2 1 1 1 5 2 5 3 4 5 5 2 3 5 5 5 5 1 5 2 5 5 2 4 4 4 3 1 1 2 1 4 4 3 4 2 5 5 3 4 5 5 2 1 4\\r\\n', 'output': ['3475416\\r\\n']}, {'input': '191 640\\r\\n20 10 14 20 13 9 16 5 14 1 11 18 16 17 7 4 15 18 17 3 3 15 14 20 18 2 4 14 20 17 7 2 3 9 5 10 7 6 7 17 3 5 10 1 18 13 15 4 15 7 19 1 17 6 15 12 4 19 1 9 18 18 9 13 3 15 9 3 17 14 18 4 9 3 9 19 20 15 18 11 3 1 12 8 11 10 20 14 14 6 2 14 16 1 7 2 11 15 1 9 20 4 1 1 3 20 20 4 11 7 19 3 3 6 15 10 18 9 13 14 16 12 3 1 15 10 5 14 19 17 9 10 10 15 12 12 5 2 11 6 5 6 7 14 7 6 5 10 13 10 18 20 18 20 12 7 6 10 4 4 3 13 14 5 9 10 4 6 11 11 15 15 12 19 4 7 20 3 12 4 16 6 4 9 17 10 18 11 13 12 18\\r\\n', 'output': ['66598866\\r\\n']}, {'input': '197 344\\r\\n5 11 3 17 16 1 12 7 13 5 9 11 15 14 13 7 13 11 5 9 20 11 11 9 19 3 20 4 6 15 2 14 16 5 19 5 5 5 12 12 12 19 18 1 5 17 13 7 17 14 4 5 9 20 14 13 15 3 8 2 13 16 20 10 20 14 8 17 14 4 9 16 8 13 5 2 13 11 9 7 9 5 11 20 3 17 9 12 12 3 9 19 6 3 15 9 5 11 2 3 13 14 15 7 9 19 16 11 6 8 11 18 11 11 16 18 3 5 10 19 10 6 3 19 3 18 16 16 7 3 10 13 13 16 19 13 4 7 1 7 12 9 6 8 6 1 6 20 7 12 9 13 13 12 10 10 10 16 9 6 11 14 14 7 2 1 16 15 12 7 15 18 8 4 6 18 2 17 6 5 13 19 12 7 1 9 15 9 18 5 8 3 7 8 4 15 8\\r\\n', 'output': ['132934747\\r\\n']}, {'input': '200 0\\r\\n2 5 2 7 6 10 10 4 7 9 1 5 7 1 8 5 9 8 5 2 6 4 9 10 5 4 4 4 8 7 7 5 9 7 7 4 9 8 5 8 10 5 1 2 8 4 3 7 9 6 9 3 9 2 1 9 2 7 4 10 4 7 10 6 1 6 7 4 4 9 10 3 5 5 1 2 8 6 6 2 2 8 6 3 6 1 4 6 10 6 4 8 3 9 6 7 7 8 5 2 10 9 2 7 3 6 10 6 8 9 6 6 8 4 6 9 2 10 9 4 2 3 4 1 3 9 4 2 4 10 10 1 2 3 9 8 2 1 10 7 8 3 10 5 3 10 9 1 9 2 6 7 2 1 10 4 4 9 9 1 8 1 10 9 8 9 9 7 4 3 6 7 10 9 2 7 8 10 2 7 7 6 9 5 9 7 3 1 7 1 5 9 7 3 10 3 10 8 5 7\\r\\n', 'output': ['563633437\\r\\n']}, {'input': '107 59\\r\\n416 332 455 497 251 13 496 46 176 382 357 268 441 302 305 11 274 61 412 18 225 332 173 371 54 179 378 85 471 176 439 36 81 275 452 212 261 488 166 274 89 183 478 337 313 196 130 87 14 223 341 46 45 306 175 488 113 354 107 411 469 122 436 293 311 60 453 245 184 13 425 360 302 205 151 89 433 285 119 301 274 64 127 496 350 354 262 2 148 232 117 28 11 398 237 460 421 347 142 76 391 317 164 484 35 310 453\\r\\n', 'output': ['955755252\\r\\n']}, {'input': '27 383\\r\\n161 2 16 478 438 205 151 229 116 230 447 497 456 219 28 57 200 6 161 400 338 11 426 283 275 40 190\\r\\n', 'output': ['258971846\\r\\n']}, {'input': '107 497\\r\\n218 342 381 296 272 169 321 275 435 461 422 209 413 366 295 332 458 253 302 245 70 353 405 420 439 314 232 466 364 374 4 469 116 291 75 500 212 127 157 440 429 396 53 68 151 264 2 134 73 31 494 148 426 459 27 175 225 287 241 60 14 437 457 446 51 350 233 177 88 455 497 303 107 130 76 125 441 229 325 318 187 459 178 172 226 236 465 289 491 494 146 280 456 475 286 457 277 224 435 365 100 77 145 448 118 454 431\\r\\n', 'output': ['480907144\\r\\n']}, {'input': '27 209\\r\\n272 116 134 369 255 453 477 162 78 1 12 142 236 283 209 390 476 493 51 23 387 32 262 128 160 71 56\\r\\n', 'output': ['415376034\\r\\n']}, {'input': '85 655\\r\\n411 473 456 4 14 135 49 240 191 230 60 375 373 115 301 20 421 187 267 347 207 428 81 318 10 370 428 272 247 322 294 477 274 110 238 244 72 399 146 392 207 83 164 87 257 341 97 94 286 375 25 271 177 270 169 149 279 105 387 92 352 342 274 247 236 344 35 336 419 465 169 371 62 112 490 48 36 343 248 428 241 223 369 296 86\\r\\n', 'output': ['275193712\\r\\n']}, {'input': '107 19\\r\\n2 5 2 5 4 4 1 5 3 3 4 3 2 5 3 1 4 1 4 1 3 1 4 4 1 5 4 1 2 3 3 3 4 2 5 2 3 4 5 2 1 5 3 1 5 5 1 5 3 3 3 5 5 2 4 3 3 4 5 4 2 5 2 4 3 5 2 5 2 1 1 1 1 2 1 4 2 3 4 3 2 4 4 2 2 3 5 5 1 4 1 2 4 4 1 3 3 5 2 3 4 1 2 3 1 5 2\\r\\n', 'output': ['114012476\\r\\n']}, {'input': '186 35\\r\\n4 4 3 2 4 3 1 2 2 2 4 2 5 3 1 3 1 1 2 4 2 5 5 5 1 3 4 1 5 3 5 5 2 4 5 3 1 1 2 1 2 4 2 3 3 4 4 3 3 5 3 1 4 5 5 4 5 2 3 1 2 2 2 4 3 4 1 4 1 2 1 1 1 5 1 1 4 5 3 5 3 3 4 1 5 1 1 4 5 3 3 2 5 3 5 1 5 2 5 1 4 2 4 5 4 4 4 5 4 4 2 5 2 4 4 5 3 2 5 4 1 1 5 5 5 5 1 3 2 5 5 4 3 2 2 5 5 3 1 4 3 4 3 1 2 5 4 4 2 2 5 3 2 1 2 1 1 3 1 4 1 2 3 2 1 5 5 2 2 1 2 1 5 2 4 4 3 2 5 5 2 3 4 5 5 3\\r\\n', 'output': ['273232004\\r\\n']}, {'input': '150 978\\r\\n34 20 7 39 15 14 39 49 36 13 12 12 30 40 4 17 8 2 48 10 16 2 33 36 41 30 4 35 32 35 12 14 28 3 7 3 36 46 43 19 7 38 48 24 19 21 9 31 3 3 8 23 21 49 44 29 15 6 11 40 39 12 44 40 41 37 7 39 40 17 34 21 22 19 30 21 14 3 16 50 38 38 27 7 4 33 20 23 27 32 14 50 33 36 38 22 27 27 14 2 27 37 33 6 21 44 25 17 28 22 43 10 33 21 42 4 7 42 10 20 22 49 14 18 26 19 43 4 31 18 13 17 5 46 19 35 31 14 28 29 48 9 9 4 10 15 30 5 9 23\\r\\n', 'output': ['338032038\\r\\n']}, {'input': '115 588\\r\\n39 133 47 175 120 1 183 148 115 9 196 101 18 156 156 74 43 149 95 56 72 84 32 104 16 188 88 168 164 18 36 105 131 60 26 151 46 160 16 45 76 16 157 190 120 37 102 29 190 57 178 38 89 75 143 2 80 7 11 31 101 28 171 46 93 100 23 163 146 135 12 73 140 144 177 43 19 158 26 20 39 173 97 8 169 139 23 105 7 171 79 11 156 77 164 63 165 124 126 108 125 118 58 129 146 152 31 133 5 160 89 136 174 121 185\\r\\n', 'output': ['27195433\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int md = 1000000007;\nint n, k, d[220];\nlong long f[220][220];\nint main() {\n  cin >> n >> k;\n  for (int i = 1; i <= n; i++) {\n    cin >> d[i];\n  }\n  f[0][0] = 1;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= i; j++) {\n      for (int l = k - d[i] + 1; l >= 0; l--) {\n        (f[i][j] += f[i - 1][j - 1]) %= md;\n        if (l > 0) {\n          (f[i][j] += f[i - 1][j]) %= md;\n        }\n      }\n    }\n  }\n  int r = 0;\n  for (int i = 1; i <= n; i++) {\n    r += f[n][i];\n  }\n  cout << r % md;\n}\n"}
{"src_uid": "788cb3da98fd4a56720f800588061b79", "id": 35, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '3 2\\r\\n2 4 5\\r\\n', 'output': ['3\\r\\n']}, {'input': '4 3\\r\\n7 8 9 10\\r\\n', 'output': ['13\\r\\n']}, {'input': '4 0\\r\\n5 10 20 21\\r\\n', 'output': ['1\\r\\n']}, {'input': '20 1000\\r\\n50 50 100 100 150 150 200 200 250 250 300 300 350 350 400 400 450 450 500 500\\r\\n', 'output': ['97456952\\r\\n']}, {'input': '5 222\\r\\n58 369 477 58 90\\r\\n', 'output': ['10\\r\\n']}, {'input': '9 222\\r\\n304 142 38 334 73 122 252 381 438\\r\\n', 'output': ['423\\r\\n']}, {'input': '9 247\\r\\n359 350 140 26 293 488 57 481 71\\r\\n', 'output': ['414\\r\\n']}, {'input': '5 341\\r\\n412 32 189 303 172\\r\\n', 'output': ['26\\r\\n']}, {'input': '200 0\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['380668983\\r\\n']}, {'input': '121 19\\r\\n1 1 1 1 2 1 1 2 2 1 1 2 2 2 2 1 1 2 1 1 1 1 2 2 2 2 1 1 2 1 1 2 1 1 1 1 1 2 2 1 2 2 1 2 1 1 2 2 2 1 2 1 1 1 1 2 1 1 2 2 1 1 2 1 2 1 2 1 2 2 2 1 1 1 1 2 1 1 2 1 2 2 2 2 2 1 1 2 2 1 2 2 2 1 2 1 1 1 1 2 2 2 2 2 1 1 2 2 2 2 2 1 1 1 1 1 2 2 1 2 1\\r\\n', 'output': ['378568711\\r\\n']}, {'input': '3 4\\r\\n10 7 10\\r\\n', 'output': ['5\\r\\n']}, {'input': '1 5\\r\\n3\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 5\\r\\n9\\r\\n', 'output': ['1\\r\\n']}, {'input': '5 2\\r\\n3 10 5 6 5\\r\\n', 'output': ['8\\r\\n']}, {'input': '1 2\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '166 7\\r\\n9 8 7 2 9 9 7 7 3 1 9 9 9 7 1 5 5 6 6 2 3 2 10 9 3 5 8 8 6 3 10 3 4 8 6 5 1 7 2 9 1 4 9 10 6 8 6 7 8 3 2 1 10 5 6 6 3 7 4 9 10 3 1 10 9 9 2 10 3 2 4 8 9 6 1 9 10 10 10 9 5 8 9 7 9 6 7 5 4 7 8 9 8 5 10 5 4 10 8 5 10 10 10 8 7 3 2 6 3 1 7 5 7 10 7 8 8 8 5 5 8 10 2 10 2 4 10 2 3 1 1 4 5 8 7 9 4 10 2 9 8 1 1 5 9 5 2 1 7 7 9 10 2 2 10 10 6 8 5 5 9 4 3 1 10 5\\r\\n', 'output': ['194851520\\r\\n']}, {'input': '94 17\\r\\n9 10 10 5 2 7 10 9 5 5 7 7 6 10 4 10 3 7 4 9 2 5 1 5 4 2 9 8 4 3 9 5 7 10 10 6 3 1 9 9 2 8 8 8 7 2 4 5 2 5 7 7 4 9 4 9 4 10 5 10 9 7 3 6 10 3 1 10 6 4 8 9 4 10 7 2 9 8 7 10 2 2 4 1 4 6 10 7 2 4 9 4 8 5\\r\\n', 'output': ['650765262\\r\\n']}, {'input': '14 26\\r\\n3 7 8 4 7 5 10 8 4 4 1 6 7 7\\r\\n', 'output': ['190894282\\r\\n']}, {'input': '142 24\\r\\n8 1 10 6 5 3 9 4 4 8 2 7 4 4 1 2 7 4 7 3 3 9 9 6 6 10 8 5 3 2 3 4 7 9 9 8 4 7 8 6 9 1 7 9 10 2 6 1 9 9 1 10 2 10 6 5 10 2 3 8 3 7 1 8 9 10 1 8 10 7 2 5 1 1 4 6 5 7 6 10 4 4 7 4 10 5 10 9 8 7 4 10 4 4 3 4 10 6 1 4 8 5 10 6 3 8 8 4 2 3 2 1 7 5 2 4 2 3 10 7 8 3 10 9 1 7 7 5 5 5 10 8 8 2 6 9 7 2 4 7 7 3\\r\\n', 'output': ['287439553\\r\\n']}, {'input': '166 34\\r\\n6 5 3 3 4 5 4 6 4 6 2 6 5 1 7 4 5 5 6 1 2 2 6 4 3 7 4 5 1 7 3 1 6 5 1 3 6 4 9 7 6 6 6 5 8 6 2 4 5 6 10 10 4 8 3 6 1 4 7 9 8 5 2 9 8 10 2 2 6 1 3 6 6 9 10 8 10 5 8 10 5 9 2 4 8 2 9 2 1 9 5 9 3 8 1 10 4 1 1 4 9 6 10 6 2 1 4 5 5 8 10 10 5 6 3 10 1 8 5 10 3 3 10 9 7 4 1 9 9 10 8 3 4 2 8 10 6 3 10 10 4 6 8 7 9 7 10 3 1 10 4 10 5 2 7 9 4 10 6 2 6 3 9 10 9 10\\r\\n', 'output': ['772974256\\r\\n']}, {'input': '171 302\\r\\n64 51 53 35 36 42 67 27 55 85 97 23 47 8 59 69 50 15 28 36 22 12 49 99 54 11 10 91 91 78 59 65 68 5 20 77 42 59 85 65 69 35 59 86 45 96 41 82 89 93 80 25 16 22 68 8 23 57 48 53 16 21 50 44 70 75 33 32 43 32 77 40 8 41 23 82 61 51 26 88 58 23 6 69 11 95 89 41 70 95 81 50 99 81 48 36 62 85 64 58 25 30 23 27 30 87 45 42 67 47 1 1 86 33 43 78 41 57 72 86 55 25 69 36 77 97 48 24 9 20 50 5 2 84 80 62 7 5 49 2 16 3 62 8 40 24 94 60 9 95 22 27 58 20 22 95 16 53 6 8 74 54 94 65 62 90 95 17 77 32 99\\r\\n', 'output': ['49555477\\r\\n']}, {'input': '158 396\\r\\n10 33 14 7 23 30 23 9 99 41 88 56 70 25 85 27 68 60 73 14 32 87 6 16 71 64 22 66 9 48 46 93 81 9 50 48 80 70 78 76 49 89 56 74 56 40 67 45 3 41 77 49 8 56 55 29 78 69 52 70 55 99 85 6 59 99 24 66 4 23 4 51 84 67 79 65 6 67 80 36 85 47 45 37 75 38 39 59 7 11 81 7 12 79 56 87 9 97 30 32 27 21 42 85 17 50 69 13 51 12 73 60 14 94 93 31 10 9 70 67 52 63 45 38 37 13 46 50 53 29 50 57 49 81 71 79 58 74 19 47 19 14 16 82 18 11 71 90 28 21 48 16 41 52 24 6 4 23\\r\\n', 'output': ['757778575\\r\\n']}, {'input': '169 129\\r\\n66 70 83 26 65 94 1 56 17 64 58 68 23 73 45 93 30 94 22 55 68 29 73 44 35 39 71 76 76 76 19 98 99 26 43 73 96 6 72 23 8 56 34 17 91 64 17 33 56 92 41 22 92 59 23 96 35 94 82 1 61 41 75 89 10 74 13 64 50 78 49 83 6 62 43 22 61 95 28 4 76 14 54 41 83 81 83 23 13 57 10 2 44 54 89 41 27 58 57 47 26 82 97 82 5 35 27 31 89 6 73 36 94 89 29 96 3 88 82 27 50 56 73 24 17 56 25 9 2 47 71 86 96 79 35 42 31 73 13 89 52 30 88 96 46 91 23 60 79 2 19 7 73 40 6 29 61 29 67 85 75 11 8 34 60 19 87 23 55\\r\\n', 'output': ['538924707\\r\\n']}, {'input': '195 110\\r\\n3 4 5 1 3 5 4 1 2 4 3 2 4 4 3 2 5 5 5 3 3 3 5 3 5 4 2 5 1 1 2 3 4 5 5 2 2 4 3 4 2 4 4 3 4 2 3 3 3 5 2 1 3 2 5 5 2 2 1 2 2 5 4 2 4 2 4 1 4 2 4 4 4 4 3 5 3 1 2 2 3 4 3 4 4 1 2 1 2 4 5 2 4 3 4 1 4 4 4 5 1 2 4 5 3 5 3 4 2 4 5 2 5 2 5 4 1 5 1 4 2 5 1 2 4 1 3 3 5 5 4 2 3 4 5 4 4 5 2 3 4 2 5 3 2 1 5 3 5 3 5 2 3 2 5 3 5 4 5 1 5 3 3 2 2 5 4 3 3 2 5 5 5 5 2 1 2 3 1 3 5 2 4 5 3 2 2 5 5 2 3 1 3 4 5\\r\\n', 'output': ['21311661\\r\\n']}, {'input': '196 17\\r\\n4 4 2 2 4 2 2 4 4 3 4 1 5 4 4 5 4 1 1 1 5 1 1 4 3 4 4 1 1 1 5 3 2 4 2 1 5 3 4 2 4 2 5 4 1 4 1 2 3 5 3 5 3 2 5 5 5 2 2 1 1 2 2 2 5 4 5 2 5 5 3 1 5 3 5 5 1 3 3 2 3 2 2 1 5 1 2 5 4 5 4 3 4 4 4 1 5 5 2 2 2 5 3 4 5 3 3 2 4 4 4 3 1 1 1 5 2 5 1 5 1 2 3 3 4 4 5 4 2 5 4 2 3 3 4 5 2 2 4 5 5 2 2 1 3 3 4 3 2 3 4 4 5 2 5 1 4 5 2 3 2 4 4 3 4 4 2 5 5 5 5 4 1 3 2 1 4 5 3 2 3 3 5 4 3 1 4 4 5 2 5 2 2 1 4 3\\r\\n', 'output': ['140496580\\r\\n']}, {'input': '200 558\\r\\n1 1 1 3 2 1 1 5 1 2 1 1 2 2 1 5 2 5 2 5 3 2 4 1 5 2 3 2 3 1 2 2 1 4 4 2 5 1 4 3 2 2 4 5 4 5 2 5 5 4 3 5 4 5 5 2 3 4 3 1 5 4 3 3 3 3 2 2 3 4 1 3 1 4 5 2 3 4 1 5 2 3 3 5 5 3 3 1 2 5 3 4 2 5 2 3 3 1 3 2 3 5 1 2 1 1 3 4 1 3 2 1 1 4 2 5 1 2 1 2 2 2 2 2 3 4 2 2 4 4 2 1 3 3 2 4 1 3 5 4 5 1 5 2 1 4 2 3 4 1 4 5 1 1 5 2 4 5 5 4 4 5 3 1 1 5 4 2 2 5 1 3 3 3 4 1 1 2 3 4 1 5 2 2 3 1 4 3 5 1 5 3 2 1 3 2 1 1 3 2\\r\\n', 'output': ['380668983\\r\\n']}, {'input': '190 152\\r\\n2 2 4 4 4 2 2 1 2 3 5 5 4 3 5 1 2 2 2 2 3 3 5 2 1 1 3 4 3 2 2 4 2 3 1 4 2 2 3 2 3 5 3 2 4 1 4 1 2 4 1 3 4 4 3 4 4 4 4 5 2 4 5 3 3 5 4 4 3 4 1 4 1 4 3 3 5 5 2 3 2 2 2 5 4 4 2 4 3 4 2 2 1 4 1 2 3 3 3 5 1 5 5 1 4 3 2 5 2 5 5 5 2 3 3 4 1 1 3 2 5 5 2 5 2 3 5 1 1 5 4 1 1 3 5 2 3 4 3 4 2 1 4 3 5 2 1 1 1 5 2 5 3 4 5 5 2 3 5 5 5 5 1 5 2 5 5 2 4 4 4 3 1 1 2 1 4 4 3 4 2 5 5 3 4 5 5 2 1 4\\r\\n', 'output': ['3475416\\r\\n']}, {'input': '191 640\\r\\n20 10 14 20 13 9 16 5 14 1 11 18 16 17 7 4 15 18 17 3 3 15 14 20 18 2 4 14 20 17 7 2 3 9 5 10 7 6 7 17 3 5 10 1 18 13 15 4 15 7 19 1 17 6 15 12 4 19 1 9 18 18 9 13 3 15 9 3 17 14 18 4 9 3 9 19 20 15 18 11 3 1 12 8 11 10 20 14 14 6 2 14 16 1 7 2 11 15 1 9 20 4 1 1 3 20 20 4 11 7 19 3 3 6 15 10 18 9 13 14 16 12 3 1 15 10 5 14 19 17 9 10 10 15 12 12 5 2 11 6 5 6 7 14 7 6 5 10 13 10 18 20 18 20 12 7 6 10 4 4 3 13 14 5 9 10 4 6 11 11 15 15 12 19 4 7 20 3 12 4 16 6 4 9 17 10 18 11 13 12 18\\r\\n', 'output': ['66598866\\r\\n']}, {'input': '197 344\\r\\n5 11 3 17 16 1 12 7 13 5 9 11 15 14 13 7 13 11 5 9 20 11 11 9 19 3 20 4 6 15 2 14 16 5 19 5 5 5 12 12 12 19 18 1 5 17 13 7 17 14 4 5 9 20 14 13 15 3 8 2 13 16 20 10 20 14 8 17 14 4 9 16 8 13 5 2 13 11 9 7 9 5 11 20 3 17 9 12 12 3 9 19 6 3 15 9 5 11 2 3 13 14 15 7 9 19 16 11 6 8 11 18 11 11 16 18 3 5 10 19 10 6 3 19 3 18 16 16 7 3 10 13 13 16 19 13 4 7 1 7 12 9 6 8 6 1 6 20 7 12 9 13 13 12 10 10 10 16 9 6 11 14 14 7 2 1 16 15 12 7 15 18 8 4 6 18 2 17 6 5 13 19 12 7 1 9 15 9 18 5 8 3 7 8 4 15 8\\r\\n', 'output': ['132934747\\r\\n']}, {'input': '200 0\\r\\n2 5 2 7 6 10 10 4 7 9 1 5 7 1 8 5 9 8 5 2 6 4 9 10 5 4 4 4 8 7 7 5 9 7 7 4 9 8 5 8 10 5 1 2 8 4 3 7 9 6 9 3 9 2 1 9 2 7 4 10 4 7 10 6 1 6 7 4 4 9 10 3 5 5 1 2 8 6 6 2 2 8 6 3 6 1 4 6 10 6 4 8 3 9 6 7 7 8 5 2 10 9 2 7 3 6 10 6 8 9 6 6 8 4 6 9 2 10 9 4 2 3 4 1 3 9 4 2 4 10 10 1 2 3 9 8 2 1 10 7 8 3 10 5 3 10 9 1 9 2 6 7 2 1 10 4 4 9 9 1 8 1 10 9 8 9 9 7 4 3 6 7 10 9 2 7 8 10 2 7 7 6 9 5 9 7 3 1 7 1 5 9 7 3 10 3 10 8 5 7\\r\\n', 'output': ['563633437\\r\\n']}, {'input': '107 59\\r\\n416 332 455 497 251 13 496 46 176 382 357 268 441 302 305 11 274 61 412 18 225 332 173 371 54 179 378 85 471 176 439 36 81 275 452 212 261 488 166 274 89 183 478 337 313 196 130 87 14 223 341 46 45 306 175 488 113 354 107 411 469 122 436 293 311 60 453 245 184 13 425 360 302 205 151 89 433 285 119 301 274 64 127 496 350 354 262 2 148 232 117 28 11 398 237 460 421 347 142 76 391 317 164 484 35 310 453\\r\\n', 'output': ['955755252\\r\\n']}, {'input': '27 383\\r\\n161 2 16 478 438 205 151 229 116 230 447 497 456 219 28 57 200 6 161 400 338 11 426 283 275 40 190\\r\\n', 'output': ['258971846\\r\\n']}, {'input': '107 497\\r\\n218 342 381 296 272 169 321 275 435 461 422 209 413 366 295 332 458 253 302 245 70 353 405 420 439 314 232 466 364 374 4 469 116 291 75 500 212 127 157 440 429 396 53 68 151 264 2 134 73 31 494 148 426 459 27 175 225 287 241 60 14 437 457 446 51 350 233 177 88 455 497 303 107 130 76 125 441 229 325 318 187 459 178 172 226 236 465 289 491 494 146 280 456 475 286 457 277 224 435 365 100 77 145 448 118 454 431\\r\\n', 'output': ['480907144\\r\\n']}, {'input': '27 209\\r\\n272 116 134 369 255 453 477 162 78 1 12 142 236 283 209 390 476 493 51 23 387 32 262 128 160 71 56\\r\\n', 'output': ['415376034\\r\\n']}, {'input': '85 655\\r\\n411 473 456 4 14 135 49 240 191 230 60 375 373 115 301 20 421 187 267 347 207 428 81 318 10 370 428 272 247 322 294 477 274 110 238 244 72 399 146 392 207 83 164 87 257 341 97 94 286 375 25 271 177 270 169 149 279 105 387 92 352 342 274 247 236 344 35 336 419 465 169 371 62 112 490 48 36 343 248 428 241 223 369 296 86\\r\\n', 'output': ['275193712\\r\\n']}, {'input': '107 19\\r\\n2 5 2 5 4 4 1 5 3 3 4 3 2 5 3 1 4 1 4 1 3 1 4 4 1 5 4 1 2 3 3 3 4 2 5 2 3 4 5 2 1 5 3 1 5 5 1 5 3 3 3 5 5 2 4 3 3 4 5 4 2 5 2 4 3 5 2 5 2 1 1 1 1 2 1 4 2 3 4 3 2 4 4 2 2 3 5 5 1 4 1 2 4 4 1 3 3 5 2 3 4 1 2 3 1 5 2\\r\\n', 'output': ['114012476\\r\\n']}, {'input': '186 35\\r\\n4 4 3 2 4 3 1 2 2 2 4 2 5 3 1 3 1 1 2 4 2 5 5 5 1 3 4 1 5 3 5 5 2 4 5 3 1 1 2 1 2 4 2 3 3 4 4 3 3 5 3 1 4 5 5 4 5 2 3 1 2 2 2 4 3 4 1 4 1 2 1 1 1 5 1 1 4 5 3 5 3 3 4 1 5 1 1 4 5 3 3 2 5 3 5 1 5 2 5 1 4 2 4 5 4 4 4 5 4 4 2 5 2 4 4 5 3 2 5 4 1 1 5 5 5 5 1 3 2 5 5 4 3 2 2 5 5 3 1 4 3 4 3 1 2 5 4 4 2 2 5 3 2 1 2 1 1 3 1 4 1 2 3 2 1 5 5 2 2 1 2 1 5 2 4 4 3 2 5 5 2 3 4 5 5 3\\r\\n', 'output': ['273232004\\r\\n']}, {'input': '150 978\\r\\n34 20 7 39 15 14 39 49 36 13 12 12 30 40 4 17 8 2 48 10 16 2 33 36 41 30 4 35 32 35 12 14 28 3 7 3 36 46 43 19 7 38 48 24 19 21 9 31 3 3 8 23 21 49 44 29 15 6 11 40 39 12 44 40 41 37 7 39 40 17 34 21 22 19 30 21 14 3 16 50 38 38 27 7 4 33 20 23 27 32 14 50 33 36 38 22 27 27 14 2 27 37 33 6 21 44 25 17 28 22 43 10 33 21 42 4 7 42 10 20 22 49 14 18 26 19 43 4 31 18 13 17 5 46 19 35 31 14 28 29 48 9 9 4 10 15 30 5 9 23\\r\\n', 'output': ['338032038\\r\\n']}, {'input': '115 588\\r\\n39 133 47 175 120 1 183 148 115 9 196 101 18 156 156 74 43 149 95 56 72 84 32 104 16 188 88 168 164 18 36 105 131 60 26 151 46 160 16 45 76 16 157 190 120 37 102 29 190 57 178 38 89 75 143 2 80 7 11 31 101 28 171 46 93 100 23 163 146 135 12 73 140 144 177 43 19 158 26 20 39 173 97 8 169 139 23 105 7 171 79 11 156 77 164 63 165 124 126 108 125 118 58 129 146 152 31 133 5 160 89 136 174 121 185\\r\\n', 'output': ['27195433\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint const mod = 1e9 + 7;\nlong long fast_power(long long a, long long n) {\n  long long ans = 1;\n  while (n) {\n    if (n & 1) ans = ans * a % mod;\n    a = a * a % mod;\n    n /= 2;\n  }\n  return ans;\n}\nlong long solve(vector<int> &A, int n, int k) {\n  long long ans = 0;\n  for (int i = 0; i < (1 << n); i++) {\n    long long mn = 1e9, mx = 0;\n    for (int j = 0; j < n; j++) {\n      if (i & (1 << j))\n        mn = min(mn, A[j]);\n      else\n        mx = max(mx, A[j]);\n    }\n    if (k >= max(mx - mn, 0)) ans++;\n  }\n  return ans;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n, k;\n  cin >> n >> k;\n  vector<int> A(n);\n  for (int i = 0; i < n; i++) cin >> A[i];\n  sort(A.begin(), A.end());\n  cout << solve(A, n, k) % mod << '\\n';\n}\n"}
{"src_uid": "c9274249c26b1a85c19ab70d91c1c3e0", "id": 36, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '1 1 50\\r\\n', 'output': ['1.0', '1.000000000000', '1.0000000', '1.0000000000']}, {'input': '5 3 0\\r\\n', 'output': ['3.0000000', '3.0', '3.0000000000', '3.000000000000']}, {'input': '5 3 25\\r\\n', 'output': ['1.921875', '1.9218750000', '1.921875000000', '1.9218750']}, {'input': '1132123 200 0\\r\\n', 'output': ['0.0000000000', '0.0000000', '0.000000000000', '0.0']}, {'input': '1213112 200 100\\r\\n', 'output': ['203.0', '203.000000000000', '203.0000000000', '203.0000000']}, {'input': '490879136 12 75\\r\\n', 'output': ['3.3114133477', '3.3114133', '3.3114133477211', '3.311413347721']}, {'input': '114566801 2 55\\r\\n', 'output': ['1.1000000', '1.100000000000', '1.1', '1.1000000000']}, {'input': '331870050 6 98\\r\\n', 'output': ['6.481856704703999', '6.481856704704', '6.4818567047', '6.4818567']}, {'input': '252615193 9 45\\r\\n', 'output': ['1.435549366563', '1.4355493665625', '1.4355493666', '1.4355494']}, {'input': '224314221 19 51\\r\\n', 'output': ['1.589995156825', '1.5899951568248025', '1.5899952', '1.5899951568']}, {'input': '510823354 20 18\\r\\n', 'output': ['1.1217824', '1.121782425995', '1.1217824260', '1.1217824259945295']}, {'input': '573292218 200 77\\r\\n', 'output': ['3.587188416054713', '3.587188416055', '3.5871884161', '3.5871884']}, {'input': '465672965 100 95\\r\\n', 'output': ['18.937629608706', '18.9376296087', '18.93762960870614', '18.9376296']}, {'input': '853095531 50 72\\r\\n', 'output': ['2.867205276789', '2.8672052768', '2.8672053', '2.8672052767888307']}, {'input': '254290166 200 95\\r\\n', 'output': ['19.049486152130235', '19.0494862', '19.049486152130', '19.0494861521']}, {'input': '206910020 200 4\\r\\n', 'output': ['1.0210765', '1.0210764589', '1.0210764588936487', '1.021076458894']}, {'input': '680841078 112 48\\r\\n', 'output': ['1.5078322', '1.507832159264', '1.5078321592644364', '1.5078321593']}, {'input': '92021679 54 25\\r\\n', 'output': ['1.1664654574', '1.166465457383', '1.1664655', '1.1664654573827085']}, {'input': '244974370 130 30\\r\\n', 'output': ['1.215038500068', '1.2150385000680655', '1.2150385001', '1.2150385']}, {'input': '870669648 101 37\\r\\n', 'output': ['1.3005166437', '1.3005166', '1.300516643727', '1.3005166437271045']}, {'input': '647275659 22 54\\r\\n', 'output': ['1.6854437', '1.6854437312', '1.685443731177', '1.6854437311767543']}, {'input': '366067081 15 70\\r\\n', 'output': ['2.641095593742', '2.6410955937', '2.641095593742326', '2.6410956']}, {'input': '31708573 22 99\\r\\n', 'output': ['19.6485751297', '19.6485751', '19.648575129692', '19.64857512969186']}, {'input': '38299352 98 68\\r\\n', 'output': ['2.467202941536', '2.4672029', '2.467202941535746', '2.4672029415']}, {'input': '106105555 25 2\\r\\n', 'output': ['1.6204473867', '1.620447386683957', '1.620447386684', '1.6204474']}, {'input': '536870912 200 50\\r\\n', 'output': ['1.5604085', '1.5604085205095495', '1.5604085205', '1.560408520510']}, {'input': '536870912 100 100\\r\\n', 'output': ['129.000000000000', '129.0', '129.0000000', '129.0000000000']}, {'input': '536870912 100 0\\r\\n', 'output': ['2.000000000000', '2.0000000', '2.0', '2.0000000000']}, {'input': '536870912 1 50\\r\\n', 'output': ['15.000000000000', '15.0000000000', '15.0', '15.0000000']}, {'input': '536870912 1 100\\r\\n', 'output': ['30.0000000000', '30.0000000', '30.000000000000', '30.0']}, {'input': '536870912 1 0\\r\\n', 'output': ['0.0000000000', '0.0000000', '0.000000000000', '0.0']}, {'input': '536870912 200 100\\r\\n', 'output': ['229.000000000000', '229.0', '229.0000000', '229.0000000000']}, {'input': '1000000000 200 50\\r\\n', 'output': ['1.5604085', '1.5604085205095497', '1.5604085205', '1.560408520510']}, {'input': '1000000000 200 100\\r\\n', 'output': ['209.000000000000', '209.0000000', '209.0000000000', '209.0']}, {'input': '1000000000 200 0\\r\\n', 'output': ['3.0000000', '3.0', '3.0000000000', '3.000000000000']}, {'input': '1000000000 100 50\\r\\n', 'output': ['1.560408520509521', '1.5604085', '1.5604085205', '1.560408520510']}, {'input': '1000000000 24 20\\r\\n', 'output': ['1.126259429920', '1.1262594299', '1.1262594299197548', '1.1262594']}, {'input': '1000000000 12 4\\r\\n', 'output': ['1.592792771794895', '1.592792771795', '1.5927927718', '1.5927928']}, {'input': '31 1 0\\r\\n', 'output': ['5.0', '5.000000000000', '5.0000000000', '5.0000000']}, {'input': '536870911 200 50\\r\\n', 'output': ['1.5604085', '1.560408520509547', '1.5604085205', '1.560408520510']}, {'input': '536870911 100 25\\r\\n', 'output': ['1.1664988', '1.1664988131', '1.166498813096', '1.1664988130956901']}, {'input': '536870911 100 75\\r\\n', 'output': ['3.261706808161', '3.261706808160573', '3.2617068082', '3.2617068']}, {'input': '536870911 100 77\\r\\n', 'output': ['3.5871884160952434', '3.5871884161', '3.587188416095', '3.5871884']}, {'input': '536870911 100 11\\r\\n', 'output': ['1.061658807084', '1.0616588070835198', '1.0616588071', '1.0616588']}, {'input': '536870911 100 1\\r\\n', 'output': ['0.6327462477114627', '0.632746247711', '0.6327462', '0.6327462477']}, {'input': '536870912 200 1\\r\\n', 'output': ['1.270235462156', '1.2702355', '1.2702354622', '1.2702354621556398']}, {'input': '536870912 200 99\\r\\n', 'output': ['89.6300701437', '89.6300701', '89.630070143689', '89.63007014368752']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint x, k, a, n;\ndouble dp[500][210][2];\nint main() {\n  cin >> x >> k >> n;\n  for (int i = 0; i < k; i++) dp[0][i][0] = double(x) / pow(2.0, i),\n                                dp[0][i][1] = 1 - dp[0][i][0];\n  for (int i = 0; i < k; i++)\n    for (int j = 0; j <= k; j++) {\n      dp[i + 1][j][0] += (long double)dp[i][j][1] * dp[i][j][0] / 2;\n      dp[i + 1][j + 1][1] += dp[i][j][0];\n      dp[i + 1][j][1] += dp[i][j][1];\n      for (int c = 0; c <= n; c++) {\n        if (c >= 25) break;\n        if (rand() < n * 256 / RAND_MAX && c < n)\n          dp[i + 1][j][0] += (dp[i][j][0] + dp[i][j][1]) / 2;\n        else if (rand() < n * 256 / RAND_MAX)\n          dp[i + 1][j][0] += dp[i][j][1];\n      }\n    }\n  cout << fixed << setprecision(10) << dp[k][0][0] << \"\\n\";\n  return 0;\n}\n"}
{"src_uid": "c9274249c26b1a85c19ab70d91c1c3e0", "id": 36, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '1 1 50\\r\\n', 'output': ['1.0', '1.000000000000', '1.0000000', '1.0000000000']}, {'input': '5 3 0\\r\\n', 'output': ['3.0000000', '3.0', '3.0000000000', '3.000000000000']}, {'input': '5 3 25\\r\\n', 'output': ['1.921875', '1.9218750000', '1.921875000000', '1.9218750']}, {'input': '1132123 200 0\\r\\n', 'output': ['0.0000000000', '0.0000000', '0.000000000000', '0.0']}, {'input': '1213112 200 100\\r\\n', 'output': ['203.0', '203.000000000000', '203.0000000000', '203.0000000']}, {'input': '490879136 12 75\\r\\n', 'output': ['3.3114133477', '3.3114133', '3.3114133477211', '3.311413347721']}, {'input': '114566801 2 55\\r\\n', 'output': ['1.1000000', '1.100000000000', '1.1', '1.1000000000']}, {'input': '331870050 6 98\\r\\n', 'output': ['6.481856704703999', '6.481856704704', '6.4818567047', '6.4818567']}, {'input': '252615193 9 45\\r\\n', 'output': ['1.435549366563', '1.4355493665625', '1.4355493666', '1.4355494']}, {'input': '224314221 19 51\\r\\n', 'output': ['1.589995156825', '1.5899951568248025', '1.5899952', '1.5899951568']}, {'input': '510823354 20 18\\r\\n', 'output': ['1.1217824', '1.121782425995', '1.1217824260', '1.1217824259945295']}, {'input': '573292218 200 77\\r\\n', 'output': ['3.587188416054713', '3.587188416055', '3.5871884161', '3.5871884']}, {'input': '465672965 100 95\\r\\n', 'output': ['18.937629608706', '18.9376296087', '18.93762960870614', '18.9376296']}, {'input': '853095531 50 72\\r\\n', 'output': ['2.867205276789', '2.8672052768', '2.8672053', '2.8672052767888307']}, {'input': '254290166 200 95\\r\\n', 'output': ['19.049486152130235', '19.0494862', '19.049486152130', '19.0494861521']}, {'input': '206910020 200 4\\r\\n', 'output': ['1.0210765', '1.0210764589', '1.0210764588936487', '1.021076458894']}, {'input': '680841078 112 48\\r\\n', 'output': ['1.5078322', '1.507832159264', '1.5078321592644364', '1.5078321593']}, {'input': '92021679 54 25\\r\\n', 'output': ['1.1664654574', '1.166465457383', '1.1664655', '1.1664654573827085']}, {'input': '244974370 130 30\\r\\n', 'output': ['1.215038500068', '1.2150385000680655', '1.2150385001', '1.2150385']}, {'input': '870669648 101 37\\r\\n', 'output': ['1.3005166437', '1.3005166', '1.300516643727', '1.3005166437271045']}, {'input': '647275659 22 54\\r\\n', 'output': ['1.6854437', '1.6854437312', '1.685443731177', '1.6854437311767543']}, {'input': '366067081 15 70\\r\\n', 'output': ['2.641095593742', '2.6410955937', '2.641095593742326', '2.6410956']}, {'input': '31708573 22 99\\r\\n', 'output': ['19.6485751297', '19.6485751', '19.648575129692', '19.64857512969186']}, {'input': '38299352 98 68\\r\\n', 'output': ['2.467202941536', '2.4672029', '2.467202941535746', '2.4672029415']}, {'input': '106105555 25 2\\r\\n', 'output': ['1.6204473867', '1.620447386683957', '1.620447386684', '1.6204474']}, {'input': '536870912 200 50\\r\\n', 'output': ['1.5604085', '1.5604085205095495', '1.5604085205', '1.560408520510']}, {'input': '536870912 100 100\\r\\n', 'output': ['129.000000000000', '129.0', '129.0000000', '129.0000000000']}, {'input': '536870912 100 0\\r\\n', 'output': ['2.000000000000', '2.0000000', '2.0', '2.0000000000']}, {'input': '536870912 1 50\\r\\n', 'output': ['15.000000000000', '15.0000000000', '15.0', '15.0000000']}, {'input': '536870912 1 100\\r\\n', 'output': ['30.0000000000', '30.0000000', '30.000000000000', '30.0']}, {'input': '536870912 1 0\\r\\n', 'output': ['0.0000000000', '0.0000000', '0.000000000000', '0.0']}, {'input': '536870912 200 100\\r\\n', 'output': ['229.000000000000', '229.0', '229.0000000', '229.0000000000']}, {'input': '1000000000 200 50\\r\\n', 'output': ['1.5604085', '1.5604085205095497', '1.5604085205', '1.560408520510']}, {'input': '1000000000 200 100\\r\\n', 'output': ['209.000000000000', '209.0000000', '209.0000000000', '209.0']}, {'input': '1000000000 200 0\\r\\n', 'output': ['3.0000000', '3.0', '3.0000000000', '3.000000000000']}, {'input': '1000000000 100 50\\r\\n', 'output': ['1.560408520509521', '1.5604085', '1.5604085205', '1.560408520510']}, {'input': '1000000000 24 20\\r\\n', 'output': ['1.126259429920', '1.1262594299', '1.1262594299197548', '1.1262594']}, {'input': '1000000000 12 4\\r\\n', 'output': ['1.592792771794895', '1.592792771795', '1.5927927718', '1.5927928']}, {'input': '31 1 0\\r\\n', 'output': ['5.0', '5.000000000000', '5.0000000000', '5.0000000']}, {'input': '536870911 200 50\\r\\n', 'output': ['1.5604085', '1.560408520509547', '1.5604085205', '1.560408520510']}, {'input': '536870911 100 25\\r\\n', 'output': ['1.1664988', '1.1664988131', '1.166498813096', '1.1664988130956901']}, {'input': '536870911 100 75\\r\\n', 'output': ['3.261706808161', '3.261706808160573', '3.2617068082', '3.2617068']}, {'input': '536870911 100 77\\r\\n', 'output': ['3.5871884160952434', '3.5871884161', '3.587188416095', '3.5871884']}, {'input': '536870911 100 11\\r\\n', 'output': ['1.061658807084', '1.0616588070835198', '1.0616588071', '1.0616588']}, {'input': '536870911 100 1\\r\\n', 'output': ['0.6327462477114627', '0.632746247711', '0.6327462', '0.6327462477']}, {'input': '536870912 200 1\\r\\n', 'output': ['1.270235462156', '1.2702355', '1.2702354622', '1.2702354621556398']}, {'input': '536870912 200 99\\r\\n', 'output': ['89.6300701437', '89.6300701', '89.630070143689', '89.63007014368752']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\ndouble ans[300001];\ndouble res[300001];\nint main() {\n  int x, k, p;\n  cin >> x >> k >> p;\n  res[1] = (double)x * (double)p / 100.0;\n  ans[1] = x;\n  for (int i = 2; i <= k; i++) {\n    res[i] = res[i - 1] * (double)p / 100.0 + ans[i - 1] + 1;\n    ans[i] = ans[i - 1] * (double)p / 100.0 + ans[i - 1] + 1;\n  }\n  printf(\"%.8lf\\n\", res[k]);\n}\n"}
{"src_uid": "c9274249c26b1a85c19ab70d91c1c3e0", "id": 36, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '1 1 50\\r\\n', 'output': ['1.0', '1.000000000000', '1.0000000', '1.0000000000']}, {'input': '5 3 0\\r\\n', 'output': ['3.0000000', '3.0', '3.0000000000', '3.000000000000']}, {'input': '5 3 25\\r\\n', 'output': ['1.921875', '1.9218750000', '1.921875000000', '1.9218750']}, {'input': '1132123 200 0\\r\\n', 'output': ['0.0000000000', '0.0000000', '0.000000000000', '0.0']}, {'input': '1213112 200 100\\r\\n', 'output': ['203.0', '203.000000000000', '203.0000000000', '203.0000000']}, {'input': '490879136 12 75\\r\\n', 'output': ['3.3114133477', '3.3114133', '3.3114133477211', '3.311413347721']}, {'input': '114566801 2 55\\r\\n', 'output': ['1.1000000', '1.100000000000', '1.1', '1.1000000000']}, {'input': '331870050 6 98\\r\\n', 'output': ['6.481856704703999', '6.481856704704', '6.4818567047', '6.4818567']}, {'input': '252615193 9 45\\r\\n', 'output': ['1.435549366563', '1.4355493665625', '1.4355493666', '1.4355494']}, {'input': '224314221 19 51\\r\\n', 'output': ['1.589995156825', '1.5899951568248025', '1.5899952', '1.5899951568']}, {'input': '510823354 20 18\\r\\n', 'output': ['1.1217824', '1.121782425995', '1.1217824260', '1.1217824259945295']}, {'input': '573292218 200 77\\r\\n', 'output': ['3.587188416054713', '3.587188416055', '3.5871884161', '3.5871884']}, {'input': '465672965 100 95\\r\\n', 'output': ['18.937629608706', '18.9376296087', '18.93762960870614', '18.9376296']}, {'input': '853095531 50 72\\r\\n', 'output': ['2.867205276789', '2.8672052768', '2.8672053', '2.8672052767888307']}, {'input': '254290166 200 95\\r\\n', 'output': ['19.049486152130235', '19.0494862', '19.049486152130', '19.0494861521']}, {'input': '206910020 200 4\\r\\n', 'output': ['1.0210765', '1.0210764589', '1.0210764588936487', '1.021076458894']}, {'input': '680841078 112 48\\r\\n', 'output': ['1.5078322', '1.507832159264', '1.5078321592644364', '1.5078321593']}, {'input': '92021679 54 25\\r\\n', 'output': ['1.1664654574', '1.166465457383', '1.1664655', '1.1664654573827085']}, {'input': '244974370 130 30\\r\\n', 'output': ['1.215038500068', '1.2150385000680655', '1.2150385001', '1.2150385']}, {'input': '870669648 101 37\\r\\n', 'output': ['1.3005166437', '1.3005166', '1.300516643727', '1.3005166437271045']}, {'input': '647275659 22 54\\r\\n', 'output': ['1.6854437', '1.6854437312', '1.685443731177', '1.6854437311767543']}, {'input': '366067081 15 70\\r\\n', 'output': ['2.641095593742', '2.6410955937', '2.641095593742326', '2.6410956']}, {'input': '31708573 22 99\\r\\n', 'output': ['19.6485751297', '19.6485751', '19.648575129692', '19.64857512969186']}, {'input': '38299352 98 68\\r\\n', 'output': ['2.467202941536', '2.4672029', '2.467202941535746', '2.4672029415']}, {'input': '106105555 25 2\\r\\n', 'output': ['1.6204473867', '1.620447386683957', '1.620447386684', '1.6204474']}, {'input': '536870912 200 50\\r\\n', 'output': ['1.5604085', '1.5604085205095495', '1.5604085205', '1.560408520510']}, {'input': '536870912 100 100\\r\\n', 'output': ['129.000000000000', '129.0', '129.0000000', '129.0000000000']}, {'input': '536870912 100 0\\r\\n', 'output': ['2.000000000000', '2.0000000', '2.0', '2.0000000000']}, {'input': '536870912 1 50\\r\\n', 'output': ['15.000000000000', '15.0000000000', '15.0', '15.0000000']}, {'input': '536870912 1 100\\r\\n', 'output': ['30.0000000000', '30.0000000', '30.000000000000', '30.0']}, {'input': '536870912 1 0\\r\\n', 'output': ['0.0000000000', '0.0000000', '0.000000000000', '0.0']}, {'input': '536870912 200 100\\r\\n', 'output': ['229.000000000000', '229.0', '229.0000000', '229.0000000000']}, {'input': '1000000000 200 50\\r\\n', 'output': ['1.5604085', '1.5604085205095497', '1.5604085205', '1.560408520510']}, {'input': '1000000000 200 100\\r\\n', 'output': ['209.000000000000', '209.0000000', '209.0000000000', '209.0']}, {'input': '1000000000 200 0\\r\\n', 'output': ['3.0000000', '3.0', '3.0000000000', '3.000000000000']}, {'input': '1000000000 100 50\\r\\n', 'output': ['1.560408520509521', '1.5604085', '1.5604085205', '1.560408520510']}, {'input': '1000000000 24 20\\r\\n', 'output': ['1.126259429920', '1.1262594299', '1.1262594299197548', '1.1262594']}, {'input': '1000000000 12 4\\r\\n', 'output': ['1.592792771794895', '1.592792771795', '1.5927927718', '1.5927928']}, {'input': '31 1 0\\r\\n', 'output': ['5.0', '5.000000000000', '5.0000000000', '5.0000000']}, {'input': '536870911 200 50\\r\\n', 'output': ['1.5604085', '1.560408520509547', '1.5604085205', '1.560408520510']}, {'input': '536870911 100 25\\r\\n', 'output': ['1.1664988', '1.1664988131', '1.166498813096', '1.1664988130956901']}, {'input': '536870911 100 75\\r\\n', 'output': ['3.261706808161', '3.261706808160573', '3.2617068082', '3.2617068']}, {'input': '536870911 100 77\\r\\n', 'output': ['3.5871884160952434', '3.5871884161', '3.587188416095', '3.5871884']}, {'input': '536870911 100 11\\r\\n', 'output': ['1.061658807084', '1.0616588070835198', '1.0616588071', '1.0616588']}, {'input': '536870911 100 1\\r\\n', 'output': ['0.6327462477114627', '0.632746247711', '0.6327462', '0.6327462477']}, {'input': '536870912 200 1\\r\\n', 'output': ['1.270235462156', '1.2702355', '1.2702354622', '1.2702354621556398']}, {'input': '536870912 200 99\\r\\n', 'output': ['89.6300701437', '89.6300701', '89.630070143689', '89.63007014368752']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1014514;\nconst int mod = 1000000007;\nconst int inf = 2147483647;\nconst long long linf = 9223372036854775807;\nconst long double pi = 3.1415926535897932384626433832795;\nlong double dp[N];\nint main() {\n  int x, k, p, step = 1, rnd;\n  scanf(\"%d%d%d\", &x, &k, &p);\n  if (p == 0) {\n    printf(\"%.10lf\", (long double)step);\n    return 0;\n  }\n  dp[0] = (long double)1;\n  while (step <= k) {\n    for (int i = 0; i < 2 * x; i++) {\n      rnd = ((int)(rand() * 1.0 / RAND_MAX * 100.0));\n      if (rnd <= p)\n        dp[i + 1] += dp[i] / 2;\n      else\n        dp[i + 1] += dp[i] / 2 + dp[i] / 2;\n    }\n    x *= 2;\n    step++;\n  }\n  printf(\"%.10lf\", dp[2 * x]);\n  return 0;\n}\n"}
{"src_uid": "c9274249c26b1a85c19ab70d91c1c3e0", "id": 36, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '1 1 50\\r\\n', 'output': ['1.0', '1.000000000000', '1.0000000', '1.0000000000']}, {'input': '5 3 0\\r\\n', 'output': ['3.0000000', '3.0', '3.0000000000', '3.000000000000']}, {'input': '5 3 25\\r\\n', 'output': ['1.921875', '1.9218750000', '1.921875000000', '1.9218750']}, {'input': '1132123 200 0\\r\\n', 'output': ['0.0000000000', '0.0000000', '0.000000000000', '0.0']}, {'input': '1213112 200 100\\r\\n', 'output': ['203.0', '203.000000000000', '203.0000000000', '203.0000000']}, {'input': '490879136 12 75\\r\\n', 'output': ['3.3114133477', '3.3114133', '3.3114133477211', '3.311413347721']}, {'input': '114566801 2 55\\r\\n', 'output': ['1.1000000', '1.100000000000', '1.1', '1.1000000000']}, {'input': '331870050 6 98\\r\\n', 'output': ['6.481856704703999', '6.481856704704', '6.4818567047', '6.4818567']}, {'input': '252615193 9 45\\r\\n', 'output': ['1.435549366563', '1.4355493665625', '1.4355493666', '1.4355494']}, {'input': '224314221 19 51\\r\\n', 'output': ['1.589995156825', '1.5899951568248025', '1.5899952', '1.5899951568']}, {'input': '510823354 20 18\\r\\n', 'output': ['1.1217824', '1.121782425995', '1.1217824260', '1.1217824259945295']}, {'input': '573292218 200 77\\r\\n', 'output': ['3.587188416054713', '3.587188416055', '3.5871884161', '3.5871884']}, {'input': '465672965 100 95\\r\\n', 'output': ['18.937629608706', '18.9376296087', '18.93762960870614', '18.9376296']}, {'input': '853095531 50 72\\r\\n', 'output': ['2.867205276789', '2.8672052768', '2.8672053', '2.8672052767888307']}, {'input': '254290166 200 95\\r\\n', 'output': ['19.049486152130235', '19.0494862', '19.049486152130', '19.0494861521']}, {'input': '206910020 200 4\\r\\n', 'output': ['1.0210765', '1.0210764589', '1.0210764588936487', '1.021076458894']}, {'input': '680841078 112 48\\r\\n', 'output': ['1.5078322', '1.507832159264', '1.5078321592644364', '1.5078321593']}, {'input': '92021679 54 25\\r\\n', 'output': ['1.1664654574', '1.166465457383', '1.1664655', '1.1664654573827085']}, {'input': '244974370 130 30\\r\\n', 'output': ['1.215038500068', '1.2150385000680655', '1.2150385001', '1.2150385']}, {'input': '870669648 101 37\\r\\n', 'output': ['1.3005166437', '1.3005166', '1.300516643727', '1.3005166437271045']}, {'input': '647275659 22 54\\r\\n', 'output': ['1.6854437', '1.6854437312', '1.685443731177', '1.6854437311767543']}, {'input': '366067081 15 70\\r\\n', 'output': ['2.641095593742', '2.6410955937', '2.641095593742326', '2.6410956']}, {'input': '31708573 22 99\\r\\n', 'output': ['19.6485751297', '19.6485751', '19.648575129692', '19.64857512969186']}, {'input': '38299352 98 68\\r\\n', 'output': ['2.467202941536', '2.4672029', '2.467202941535746', '2.4672029415']}, {'input': '106105555 25 2\\r\\n', 'output': ['1.6204473867', '1.620447386683957', '1.620447386684', '1.6204474']}, {'input': '536870912 200 50\\r\\n', 'output': ['1.5604085', '1.5604085205095495', '1.5604085205', '1.560408520510']}, {'input': '536870912 100 100\\r\\n', 'output': ['129.000000000000', '129.0', '129.0000000', '129.0000000000']}, {'input': '536870912 100 0\\r\\n', 'output': ['2.000000000000', '2.0000000', '2.0', '2.0000000000']}, {'input': '536870912 1 50\\r\\n', 'output': ['15.000000000000', '15.0000000000', '15.0', '15.0000000']}, {'input': '536870912 1 100\\r\\n', 'output': ['30.0000000000', '30.0000000', '30.000000000000', '30.0']}, {'input': '536870912 1 0\\r\\n', 'output': ['0.0000000000', '0.0000000', '0.000000000000', '0.0']}, {'input': '536870912 200 100\\r\\n', 'output': ['229.000000000000', '229.0', '229.0000000', '229.0000000000']}, {'input': '1000000000 200 50\\r\\n', 'output': ['1.5604085', '1.5604085205095497', '1.5604085205', '1.560408520510']}, {'input': '1000000000 200 100\\r\\n', 'output': ['209.000000000000', '209.0000000', '209.0000000000', '209.0']}, {'input': '1000000000 200 0\\r\\n', 'output': ['3.0000000', '3.0', '3.0000000000', '3.000000000000']}, {'input': '1000000000 100 50\\r\\n', 'output': ['1.560408520509521', '1.5604085', '1.5604085205', '1.560408520510']}, {'input': '1000000000 24 20\\r\\n', 'output': ['1.126259429920', '1.1262594299', '1.1262594299197548', '1.1262594']}, {'input': '1000000000 12 4\\r\\n', 'output': ['1.592792771794895', '1.592792771795', '1.5927927718', '1.5927928']}, {'input': '31 1 0\\r\\n', 'output': ['5.0', '5.000000000000', '5.0000000000', '5.0000000']}, {'input': '536870911 200 50\\r\\n', 'output': ['1.5604085', '1.560408520509547', '1.5604085205', '1.560408520510']}, {'input': '536870911 100 25\\r\\n', 'output': ['1.1664988', '1.1664988131', '1.166498813096', '1.1664988130956901']}, {'input': '536870911 100 75\\r\\n', 'output': ['3.261706808161', '3.261706808160573', '3.2617068082', '3.2617068']}, {'input': '536870911 100 77\\r\\n', 'output': ['3.5871884160952434', '3.5871884161', '3.587188416095', '3.5871884']}, {'input': '536870911 100 11\\r\\n', 'output': ['1.061658807084', '1.0616588070835198', '1.0616588071', '1.0616588']}, {'input': '536870911 100 1\\r\\n', 'output': ['0.6327462477114627', '0.632746247711', '0.6327462', '0.6327462477']}, {'input': '536870912 200 1\\r\\n', 'output': ['1.270235462156', '1.2702355', '1.2702354622', '1.2702354621556398']}, {'input': '536870912 200 99\\r\\n', 'output': ['89.6300701437', '89.6300701', '89.630070143689', '89.63007014368752']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long mod = 998244353;\nlong long modinv(long long a, long long m = mod) {\n  long long m0 = m;\n  long long t, q;\n  long long x0 = 0, x1 = 1;\n  if (m == 1) return 0;\n  while (a > 1) {\n    q = a / m;\n    t = m;\n    m = a % m, a = t;\n    t = x0;\n    x0 = x1 - q * x0;\n    x1 = t;\n  }\n  if (x1 < 0) x1 += m0;\n  return x1;\n}\nint main() {\n  long long n, m, x;\n  cin >> n >> m >> x;\n  long long pw[m + 2];\n  pw[0] = 1;\n  for (long long i = 1; i <= m; i++) {\n    pw[i] = 2 * pw[i - 1];\n    if (pw[i] > n) {\n      pw[i] = n;\n    }\n  }\n  double ans = 0;\n  for (long long i = 0; i < m; i++) {\n    double p = x * (1.0 / 100.0);\n    double d = pw[i] * (p * (1 + p * (p - 1) / 2) + 1);\n    ans += modinv(pw[i + 1], n);\n    ans *= d;\n  }\n  cout << fixed << setprecision(10) << ans << endl;\n}\n"}
{"src_uid": "c9274249c26b1a85c19ab70d91c1c3e0", "id": 36, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '1 1 50\\r\\n', 'output': ['1.0', '1.000000000000', '1.0000000', '1.0000000000']}, {'input': '5 3 0\\r\\n', 'output': ['3.0000000', '3.0', '3.0000000000', '3.000000000000']}, {'input': '5 3 25\\r\\n', 'output': ['1.921875', '1.9218750000', '1.921875000000', '1.9218750']}, {'input': '1132123 200 0\\r\\n', 'output': ['0.0000000000', '0.0000000', '0.000000000000', '0.0']}, {'input': '1213112 200 100\\r\\n', 'output': ['203.0', '203.000000000000', '203.0000000000', '203.0000000']}, {'input': '490879136 12 75\\r\\n', 'output': ['3.3114133477', '3.3114133', '3.3114133477211', '3.311413347721']}, {'input': '114566801 2 55\\r\\n', 'output': ['1.1000000', '1.100000000000', '1.1', '1.1000000000']}, {'input': '331870050 6 98\\r\\n', 'output': ['6.481856704703999', '6.481856704704', '6.4818567047', '6.4818567']}, {'input': '252615193 9 45\\r\\n', 'output': ['1.435549366563', '1.4355493665625', '1.4355493666', '1.4355494']}, {'input': '224314221 19 51\\r\\n', 'output': ['1.589995156825', '1.5899951568248025', '1.5899952', '1.5899951568']}, {'input': '510823354 20 18\\r\\n', 'output': ['1.1217824', '1.121782425995', '1.1217824260', '1.1217824259945295']}, {'input': '573292218 200 77\\r\\n', 'output': ['3.587188416054713', '3.587188416055', '3.5871884161', '3.5871884']}, {'input': '465672965 100 95\\r\\n', 'output': ['18.937629608706', '18.9376296087', '18.93762960870614', '18.9376296']}, {'input': '853095531 50 72\\r\\n', 'output': ['2.867205276789', '2.8672052768', '2.8672053', '2.8672052767888307']}, {'input': '254290166 200 95\\r\\n', 'output': ['19.049486152130235', '19.0494862', '19.049486152130', '19.0494861521']}, {'input': '206910020 200 4\\r\\n', 'output': ['1.0210765', '1.0210764589', '1.0210764588936487', '1.021076458894']}, {'input': '680841078 112 48\\r\\n', 'output': ['1.5078322', '1.507832159264', '1.5078321592644364', '1.5078321593']}, {'input': '92021679 54 25\\r\\n', 'output': ['1.1664654574', '1.166465457383', '1.1664655', '1.1664654573827085']}, {'input': '244974370 130 30\\r\\n', 'output': ['1.215038500068', '1.2150385000680655', '1.2150385001', '1.2150385']}, {'input': '870669648 101 37\\r\\n', 'output': ['1.3005166437', '1.3005166', '1.300516643727', '1.3005166437271045']}, {'input': '647275659 22 54\\r\\n', 'output': ['1.6854437', '1.6854437312', '1.685443731177', '1.6854437311767543']}, {'input': '366067081 15 70\\r\\n', 'output': ['2.641095593742', '2.6410955937', '2.641095593742326', '2.6410956']}, {'input': '31708573 22 99\\r\\n', 'output': ['19.6485751297', '19.6485751', '19.648575129692', '19.64857512969186']}, {'input': '38299352 98 68\\r\\n', 'output': ['2.467202941536', '2.4672029', '2.467202941535746', '2.4672029415']}, {'input': '106105555 25 2\\r\\n', 'output': ['1.6204473867', '1.620447386683957', '1.620447386684', '1.6204474']}, {'input': '536870912 200 50\\r\\n', 'output': ['1.5604085', '1.5604085205095495', '1.5604085205', '1.560408520510']}, {'input': '536870912 100 100\\r\\n', 'output': ['129.000000000000', '129.0', '129.0000000', '129.0000000000']}, {'input': '536870912 100 0\\r\\n', 'output': ['2.000000000000', '2.0000000', '2.0', '2.0000000000']}, {'input': '536870912 1 50\\r\\n', 'output': ['15.000000000000', '15.0000000000', '15.0', '15.0000000']}, {'input': '536870912 1 100\\r\\n', 'output': ['30.0000000000', '30.0000000', '30.000000000000', '30.0']}, {'input': '536870912 1 0\\r\\n', 'output': ['0.0000000000', '0.0000000', '0.000000000000', '0.0']}, {'input': '536870912 200 100\\r\\n', 'output': ['229.000000000000', '229.0', '229.0000000', '229.0000000000']}, {'input': '1000000000 200 50\\r\\n', 'output': ['1.5604085', '1.5604085205095497', '1.5604085205', '1.560408520510']}, {'input': '1000000000 200 100\\r\\n', 'output': ['209.000000000000', '209.0000000', '209.0000000000', '209.0']}, {'input': '1000000000 200 0\\r\\n', 'output': ['3.0000000', '3.0', '3.0000000000', '3.000000000000']}, {'input': '1000000000 100 50\\r\\n', 'output': ['1.560408520509521', '1.5604085', '1.5604085205', '1.560408520510']}, {'input': '1000000000 24 20\\r\\n', 'output': ['1.126259429920', '1.1262594299', '1.1262594299197548', '1.1262594']}, {'input': '1000000000 12 4\\r\\n', 'output': ['1.592792771794895', '1.592792771795', '1.5927927718', '1.5927928']}, {'input': '31 1 0\\r\\n', 'output': ['5.0', '5.000000000000', '5.0000000000', '5.0000000']}, {'input': '536870911 200 50\\r\\n', 'output': ['1.5604085', '1.560408520509547', '1.5604085205', '1.560408520510']}, {'input': '536870911 100 25\\r\\n', 'output': ['1.1664988', '1.1664988131', '1.166498813096', '1.1664988130956901']}, {'input': '536870911 100 75\\r\\n', 'output': ['3.261706808161', '3.261706808160573', '3.2617068082', '3.2617068']}, {'input': '536870911 100 77\\r\\n', 'output': ['3.5871884160952434', '3.5871884161', '3.587188416095', '3.5871884']}, {'input': '536870911 100 11\\r\\n', 'output': ['1.061658807084', '1.0616588070835198', '1.0616588071', '1.0616588']}, {'input': '536870911 100 1\\r\\n', 'output': ['0.6327462477114627', '0.632746247711', '0.6327462', '0.6327462477']}, {'input': '536870912 200 1\\r\\n', 'output': ['1.270235462156', '1.2702355', '1.2702354622', '1.2702354621556398']}, {'input': '536870912 200 99\\r\\n', 'output': ['89.6300701437', '89.6300701', '89.630070143689', '89.63007014368752']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint x, K, p, a, t, q, l, r;\ndouble ans;\nint main() {\n  scanf(\"%d%d%d\", &x, &K, &p);\n  ans = 0;\n  a = x, q = 0;\n  for (t = 1; t <= K; t++) {\n    l = 0, r = 100;\n    while (r - l > 1) {\n      int m = (l + r) / 2;\n      if (m * p >= 100)\n        l = m;\n      else\n        r = m;\n    }\n    r = (l + r) / 2;\n    if (a < 100)\n      q = r;\n    else\n      q = 100;\n    ans += (double)q / 100.0 * (1.0 + ans);\n    if (a / 2 * 2 == a)\n      q = 1;\n    else\n      q = 0;\n    if (rnd(p) <= q)\n      a *= 2;\n    else\n      a++;\n  }\n  printf(\"%.10lf\\n\", ans);\n  return 0;\n}\ndouble rnd(int p) {\n  double x = (double)rand() / RAND_MAX;\n  return (x * p);\n}\n"}
{"src_uid": "ab410c6513a26ec3a41c63318dc38b78", "id": 37, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2700, "testcases": "[{'input': '2 1 1 2\\r\\n1 2\\r\\n0.5\\r\\n0.5\\r\\n', 'output': ['0.5000000000 0.5000000000 ']}, {'input': '4 4 1 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 1\\r\\n0.5\\r\\n0.5\\r\\n0.5\\r\\n0.5\\r\\n', 'output': ['0.3333333333 0.3333333333 0.1666666667 0.1666666667 ']}, {'input': '5 4 2 5\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n0.99\\r\\n0.6\\r\\n0.66\\r\\n0.23\\r\\n0.51\\r\\n', 'output': ['0.9976393323 0.0015805859 0.0000137404 0.0000015403 0.0007648011 ']}, {'input': '16 15 1 16\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n', 'output': ['0.0019644887 0.0325808635 0.0503829756 0.0645522937 0.0762658799 0.0856950294 0.0924815917 0.0960768773 0.0960768773 0.0924815917 0.0856950294 0.0762658799 0.0645522937 0.0503829756 0.0325808635 0.0019644887 ']}, {'input': '6 6 1 4\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 1\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.1535695632 0.1732152184 0.1732152184 0.1535695632 0.1732152184 0.1732152184 ']}, {'input': '2 1 1 2\\r\\n1 2\\r\\n0.142\\r\\n0.2\\r\\n', 'output': ['0.3983169705 0.6016830295 ']}, {'input': '6 5 2 1\\r\\n1 6\\r\\n3 2\\r\\n3 6\\r\\n5 4\\r\\n4 6\\r\\n0.7506\\r\\n0.5129\\r\\n0.7965\\r\\n0.1712\\r\\n0.3321\\r\\n0.7033\\r\\n', 'output': ['0.0490630865 0.0083870955 0.3822667748 0.0174328057 0.0030541480 0.5397960896 ']}, {'input': '10 9 2 10\\r\\n1 2\\r\\n5 1\\r\\n7 1\\r\\n6 2\\r\\n3 5\\r\\n4 9\\r\\n5 10\\r\\n6 9\\r\\n10 8\\r\\n0.5376\\r\\n0.5747\\r\\n0.8019\\r\\n0.6922\\r\\n0.2890\\r\\n0.9193\\r\\n0.7521\\r\\n0.4436\\r\\n0.5970\\r\\n0.3173\\r\\n', 'output': ['0.2817412543 0.0959570556 0.0542629235 0.0025685657 0.1569610917 0.3021480932 0.0339864114 0.0084406954 0.0137071015 0.0502268077 ']}, {'input': '15 21 5 15\\r\\n6 1\\r\\n1 10\\r\\n11 1\\r\\n2 3\\r\\n2 8\\r\\n11 2\\r\\n2 14\\r\\n3 11\\r\\n15 3\\r\\n4 9\\r\\n10 4\\r\\n11 4\\r\\n4 12\\r\\n5 8\\r\\n5 12\\r\\n13 5\\r\\n8 7\\r\\n8 13\\r\\n14 8\\r\\n9 12\\r\\n13 9\\r\\n0.0984\\r\\n0.9472\\r\\n0.0555\\r\\n0.1818\\r\\n0.6887\\r\\n0.2633\\r\\n0.6266\\r\\n0.7277\\r\\n0.4906\\r\\n0.5204\\r\\n0.3271\\r\\n0.8406\\r\\n0.1905\\r\\n0.8913\\r\\n0.1490\\r\\n', 'output': ['0.0077226021 0.5303336625 0.0054411451 0.0303793551 0.0404230994 0.0005350284 0.0013754254 0.1413320042 0.0265814303 0.0120371707 0.0322545543 0.1066358507 0.0104058084 0.0543251267 0.0002177368 ']}, {'input': '16 16 11 1\\r\\n15 1\\r\\n5 2\\r\\n10 2\\r\\n15 2\\r\\n4 3\\r\\n3 10\\r\\n3 11\\r\\n6 10\\r\\n9 7\\r\\n7 15\\r\\n12 8\\r\\n8 16\\r\\n13 9\\r\\n13 10\\r\\n16 11\\r\\n15 14\\r\\n0.7912\\r\\n0.2716\\r\\n0.2423\\r\\n0.7215\\r\\n0.3998\\r\\n0.3062\\r\\n0.0161\\r\\n0.9557\\r\\n0.8075\\r\\n0.0797\\r\\n0.8873\\r\\n0.1631\\r\\n0.8815\\r\\n0.8284\\r\\n0.4164\\r\\n0.0509\\r\\n', 'output': ['0.0153633854 0.0582037768 0.0644798137 0.0179019027 0.0038888919 0.0036876616 0.0067662879 0.1649462155 0.0713890711 0.0806917881 0.2077252654 0.0000190454 0.1796086267 0.0191451875 0.0980830806 0.0080999998 ']}, {'input': '22 21 1 22\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0012434856 0.0099719410 0.0199076715 0.0297915885 0.0395249019 0.0489267177 0.0577200158 0.0655362954 0.0719467411 0.0765217103 0.0789089312 0.0789089312 0.0765217103 0.0719467411 0.0655362954 0.0577200158 0.0489267177 0.0395249019 0.0297915885 0.0199076715 0.0099719410 0.0012434856 ']}, {'input': '22 23 5 16\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n22 1\\r\\n1 11\\r\\n0.01\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0009049944 0.0654619724 0.0448599020 0.0342094033 0.0283295356 0.0266503813 0.0288053138 0.0342798044 0.0427189992 0.0557007096 0.1605214977 0.0643520452 0.0514169497 0.0415243077 0.0342155622 0.0300098388 0.0291162176 0.0313210001 0.0360195732 0.0424281241 0.0505451222 0.0666087455 ']}, {'input': '22 22 1 13\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n22 1\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0387342340 0.0376245603 0.0385434630 0.0409311653 0.0438884638 0.0463138950 0.0472507131 0.0463138950 0.0438884638 0.0409311653 0.0385434630 0.0376245603 0.0387342340 0.0420477574 0.0472178012 0.0531433058 0.0579906815 0.0598786325 0.0579906815 0.0531433058 0.0472178012 0.0420477574 ']}, {'input': '10 45 1 10\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n1 8\\r\\n1 9\\r\\n1 10\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n2 8\\r\\n2 9\\r\\n2 10\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n3 8\\r\\n3 9\\r\\n3 10\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n4 8\\r\\n4 9\\r\\n4 10\\r\\n5 6\\r\\n5 7\\r\\n5 8\\r\\n5 9\\r\\n5 10\\r\\n6 7\\r\\n6 8\\r\\n6 9\\r\\n6 10\\r\\n7 8\\r\\n7 9\\r\\n7 10\\r\\n8 9\\r\\n8 10\\r\\n9 10\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n', 'output': ['0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 ']}, {'input': '1 0 1 1\\r\\n0.99\\r\\n', 'output': ['1.0000000000 ']}, {'input': '22 21 1 22\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n11 1\\r\\n12 1\\r\\n13 1\\r\\n14 1\\r\\n15 1\\r\\n16 1\\r\\n17 1\\r\\n18 1\\r\\n19 1\\r\\n20 1\\r\\n21 1\\r\\n22 2\\r\\n0.01\\r\\n0.02\\r\\n0.03\\r\\n0.04\\r\\n0.05\\r\\n0.06\\r\\n0.07\\r\\n0.08\\r\\n0.09\\r\\n0.10\\r\\n0.11\\r\\n0.12\\r\\n0.13\\r\\n0.14\\r\\n0.15\\r\\n0.16\\r\\n0.17\\r\\n0.18\\r\\n0.19\\r\\n0.20\\r\\n0.21\\r\\n0.22\\r\\n', 'output': ['0.9035493892 0.0711125603 0.0002295956 0.0003073428 0.0003857694 0.0004649204 0.0005448425 0.0006255834 0.0007071929 0.0007897222 0.0008732245 0.0009577547 0.0010433701 0.0011301299 0.0012180959 0.0013073322 0.0013979057 0.0014898861 0.0015833460 0.0016783614 0.0017750116 0.0068286632 ']}, {'input': '15 14 1 8\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.1687647168 0.0613502671 0.0232964298 0.0159426870 0.0100709787 0.0077507094 0.0071633056 0.0059104630 0.1744057974 0.0870855985 0.0630100398 0.0623589182 0.1454718455 0.1071447000 0.0602735434 ']}, {'input': '15 14 13 13\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 0.0000000000 ']}, {'input': '15 14 15 15\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '14 43 1 14\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n5 6\\r\\n5 7\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n8 12\\r\\n8 13\\r\\n8 14\\r\\n9 10\\r\\n9 11\\r\\n9 12\\r\\n9 13\\r\\n9 14\\r\\n10 11\\r\\n10 12\\r\\n10 13\\r\\n10 14\\r\\n11 12\\r\\n11 13\\r\\n11 14\\r\\n12 13\\r\\n12 14\\r\\n13 14\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0526959074 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.1878457103 0.1878457103 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0526959074 ']}, {'input': '16 57 1 16\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n1 16\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n2 16\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n3 16\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n4 16\\r\\n5 6\\r\\n5 7\\r\\n5 16\\r\\n6 7\\r\\n6 16\\r\\n7 16\\r\\n7 8\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n8 12\\r\\n8 13\\r\\n8 14\\r\\n8 15\\r\\n9 10\\r\\n9 11\\r\\n9 12\\r\\n9 13\\r\\n9 14\\r\\n9 15\\r\\n10 11\\r\\n10 12\\r\\n10 13\\r\\n10 14\\r\\n10 15\\r\\n11 12\\r\\n11 13\\r\\n11 14\\r\\n11 15\\r\\n12 13\\r\\n12 14\\r\\n12 15\\r\\n13 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.89\\r\\n0.79\\r\\n0.69\\r\\n0.59\\r\\n0.49\\r\\n0.39\\r\\n0.29\\r\\n0.19\\r\\n0.19\\r\\n0.29\\r\\n0.39\\r\\n0.49\\r\\n0.59\\r\\n0.69\\r\\n0.79\\r\\n', 'output': ['0.8601065040 0.0421912132 0.0216044923 0.0139824673 0.0099982535 0.0075466288 0.0077197332 0.0018809771 0.0005077937 0.0005077937 0.0006335685 0.0007997585 0.0010295784 0.0013684205 0.0019187930 0.0282040246 ']}, {'input': '2 1 2 2\\r\\n1 2\\r\\n0.4651\\r\\n0.4541\\r\\n', 'output': ['0.0000000000 1.0000000000 ']}, {'input': '3 3 3 3\\r\\n1 2\\r\\n1 3\\r\\n2 3\\r\\n0.7518\\r\\n0.3684\\r\\n0.0278\\r\\n', 'output': ['0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '4 6 4 2\\r\\n1 2\\r\\n3 1\\r\\n4 1\\r\\n2 3\\r\\n4 2\\r\\n3 4\\r\\n0.8837\\r\\n0.8531\\r\\n0.1495\\r\\n0.1412\\r\\n', 'output': ['0.3201347837 0.6091104909 0.0388222283 0.0319324970 ']}, {'input': '5 10 4 1\\r\\n1 2\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n3 2\\r\\n2 4\\r\\n2 5\\r\\n4 3\\r\\n3 5\\r\\n5 4\\r\\n0.1234\\r\\n0.3871\\r\\n0.0253\\r\\n0.4658\\r\\n0.4364\\r\\n', 'output': ['0.1115667934 0.2114914579 0.1016822203 0.3398765632 0.2353829653 ']}, {'input': '6 15 3 6\\r\\n2 1\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n2 3\\r\\n4 2\\r\\n2 5\\r\\n6 2\\r\\n3 4\\r\\n5 3\\r\\n3 6\\r\\n4 5\\r\\n6 4\\r\\n5 6\\r\\n0.0884\\r\\n0.3825\\r\\n0.1591\\r\\n0.5495\\r\\n0.6195\\r\\n0.0398\\r\\n', 'output': ['0.0999455609 0.1735578254 0.1116896620 0.2498342178 0.2972772337 0.0676955002 ']}, {'input': '7 21 4 6\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n2 3\\r\\n4 2\\r\\n2 5\\r\\n2 6\\r\\n7 2\\r\\n3 4\\r\\n5 3\\r\\n3 6\\r\\n7 3\\r\\n4 5\\r\\n6 4\\r\\n7 4\\r\\n5 6\\r\\n5 7\\r\\n7 6\\r\\n0.5239\\r\\n0.3794\\r\\n0.2269\\r\\n0.2762\\r\\n0.4424\\r\\n0.9740\\r\\n0.3075\\r\\n', 'output': ['0.0232614097 0.0162516730 0.0115838868 0.0137365998 0.0188847358 0.9024755860 0.0138061087 ']}, {'input': '8 28 8 3\\r\\n1 2\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n8 1\\r\\n3 2\\r\\n4 2\\r\\n5 2\\r\\n6 2\\r\\n7 2\\r\\n2 8\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n8 3\\r\\n4 5\\r\\n4 6\\r\\n7 4\\r\\n8 4\\r\\n5 6\\r\\n7 5\\r\\n8 5\\r\\n7 6\\r\\n8 6\\r\\n7 8\\r\\n0.8613\\r\\n0.8282\\r\\n0.8938\\r\\n0.7578\\r\\n0.9470\\r\\n0.2132\\r\\n0.4324\\r\\n0.6849\\r\\n', 'output': ['0.1176195220 0.0958396019 0.3325863571 0.0677110954 0.2663958661 0.0152787192 0.0248059593 0.0797628790 ']}, {'input': '9 36 9 2\\r\\n1 2\\r\\n3 1\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n8 1\\r\\n1 9\\r\\n3 2\\r\\n2 4\\r\\n5 2\\r\\n6 2\\r\\n2 7\\r\\n8 2\\r\\n9 2\\r\\n4 3\\r\\n5 3\\r\\n6 3\\r\\n7 3\\r\\n8 3\\r\\n9 3\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n6 5\\r\\n7 5\\r\\n8 5\\r\\n5 9\\r\\n6 7\\r\\n6 8\\r\\n9 6\\r\\n8 7\\r\\n9 7\\r\\n8 9\\r\\n0.7668\\r\\n0.8405\\r\\n0.4250\\r\\n0.1929\\r\\n0.7617\\r\\n0.4558\\r\\n0.6702\\r\\n0.0859\\r\\n0.7827\\r\\n', 'output': ['0.1268098579 0.3129505364 0.0439299233 0.0262315144 0.1240254438 0.0473553980 0.0874473192 0.0210113664 0.2102386406 ']}, {'input': '10 45 1 2\\r\\n1 2\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n1 6\\r\\n1 7\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n6 2\\r\\n7 2\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n7 3\\r\\n8 3\\r\\n9 3\\r\\n3 10\\r\\n4 5\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n10 4\\r\\n6 5\\r\\n5 7\\r\\n8 5\\r\\n5 9\\r\\n10 5\\r\\n7 6\\r\\n8 6\\r\\n9 6\\r\\n10 6\\r\\n7 8\\r\\n9 7\\r\\n10 7\\r\\n8 9\\r\\n10 8\\r\\n9 10\\r\\n0.7632\\r\\n0.4462\\r\\n0.4321\\r\\n0.8036\\r\\n0.9500\\r\\n0.7438\\r\\n0.5196\\r\\n0.8022\\r\\n0.7419\\r\\n0.5806\\r\\n', 'output': ['0.1839204542 0.0471943915 0.0301277939 0.0985509080 0.3103919787 0.0755959621 0.0373307588 0.0978749428 0.0750231155 0.0439896946 ']}, {'input': '11 55 8 6\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n1 8\\r\\n1 9\\r\\n10 1\\r\\n11 1\\r\\n2 3\\r\\n4 2\\r\\n5 2\\r\\n2 6\\r\\n2 7\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n11 2\\r\\n3 4\\r\\n3 5\\r\\n6 3\\r\\n3 7\\r\\n8 3\\r\\n9 3\\r\\n10 3\\r\\n11 3\\r\\n5 4\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n4 9\\r\\n4 10\\r\\n4 11\\r\\n6 5\\r\\n5 7\\r\\n8 5\\r\\n9 5\\r\\n5 10\\r\\n11 5\\r\\n6 7\\r\\n6 8\\r\\n9 6\\r\\n10 6\\r\\n6 11\\r\\n8 7\\r\\n9 7\\r\\n10 7\\r\\n7 11\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n10 9\\r\\n9 11\\r\\n10 11\\r\\n0.1858\\r\\n0.1694\\r\\n0.0945\\r\\n0.2580\\r\\n0.7910\\r\\n0.7729\\r\\n0.4302\\r\\n0.8449\\r\\n0.6270\\r\\n0.4962\\r\\n0.8791\\r\\n', 'output': ['0.0217350602 0.0210042612 0.0179935711 0.0253227842 0.1194283296 0.1697890394 0.0373767031 0.2793005386 0.0638189548 0.0440643844 0.2001663735 ']}, {'input': '12 66 2 3\\r\\n2 1\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n1 7\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n11 1\\r\\n1 12\\r\\n3 2\\r\\n4 2\\r\\n5 2\\r\\n6 2\\r\\n2 7\\r\\n2 8\\r\\n2 9\\r\\n10 2\\r\\n2 11\\r\\n2 12\\r\\n4 3\\r\\n5 3\\r\\n3 6\\r\\n7 3\\r\\n3 8\\r\\n9 3\\r\\n10 3\\r\\n3 11\\r\\n12 3\\r\\n5 4\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n4 10\\r\\n4 11\\r\\n12 4\\r\\n5 6\\r\\n5 7\\r\\n8 5\\r\\n5 9\\r\\n10 5\\r\\n5 11\\r\\n5 12\\r\\n6 7\\r\\n8 6\\r\\n6 9\\r\\n6 10\\r\\n11 6\\r\\n6 12\\r\\n7 8\\r\\n9 7\\r\\n7 10\\r\\n7 11\\r\\n7 12\\r\\n8 9\\r\\n10 8\\r\\n11 8\\r\\n12 8\\r\\n9 10\\r\\n11 9\\r\\n12 9\\r\\n11 10\\r\\n12 10\\r\\n12 11\\r\\n0.1181\\r\\n0.1559\\r\\n0.6868\\r\\n0.4488\\r\\n0.9508\\r\\n0.7239\\r\\n0.4596\\r\\n0.1090\\r\\n0.8877\\r\\n0.7477\\r\\n0.6342\\r\\n0.4051\\r\\n', 'output': ['0.0167334785 0.0204621778 0.1507680976 0.0333634903 0.3205611704 0.0733633598 0.0342214963 0.0164411081 0.1691474546 0.0803859443 0.0543657157 0.0301865067 ']}, {'input': '2 1 2 2\\r\\n1 2\\r\\n0.4651\\r\\n0.4541\\r\\n', 'output': ['0.0000000000 1.0000000000 ']}, {'input': '3 2 2 3\\r\\n2 1\\r\\n3 1\\r\\n0.8433\\r\\n0.3166\\r\\n0.0498\\r\\n', 'output': ['0.9882627746 0.0114733647 0.0002638607 ']}, {'input': '4 3 3 2\\r\\n1 2\\r\\n2 3\\r\\n4 3\\r\\n0.6321\\r\\n0.1541\\r\\n0.8633\\r\\n0.4309\\r\\n', 'output': ['0.0530829653 0.0844848606 0.8583062902 0.0041258840 ']}, {'input': '5 4 1 1\\r\\n1 4\\r\\n2 3\\r\\n2 4\\r\\n5 2\\r\\n0.3986\\r\\n0.2139\\r\\n0.0845\\r\\n0.4852\\r\\n0.5779\\r\\n', 'output': ['1.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 ']}, {'input': '6 5 2 1\\r\\n1 6\\r\\n3 2\\r\\n3 6\\r\\n5 4\\r\\n4 6\\r\\n0.7506\\r\\n0.5129\\r\\n0.7965\\r\\n0.1712\\r\\n0.3321\\r\\n0.7033\\r\\n', 'output': ['0.0490630865 0.0083870955 0.3822667748 0.0174328057 0.0030541480 0.5397960896 ']}, {'input': '7 6 7 7\\r\\n1 3\\r\\n3 2\\r\\n7 3\\r\\n5 4\\r\\n6 4\\r\\n7 6\\r\\n0.1063\\r\\n0.5142\\r\\n0.8086\\r\\n0.2764\\r\\n0.1017\\r\\n0.2610\\r\\n0.6153\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '8 7 8 3\\r\\n3 1\\r\\n1 5\\r\\n2 6\\r\\n8 4\\r\\n5 6\\r\\n7 5\\r\\n5 8\\r\\n0.3036\\r\\n0.6397\\r\\n0.3751\\r\\n0.0160\\r\\n0.9384\\r\\n0.5140\\r\\n0.6922\\r\\n0.4464\\r\\n', 'output': ['0.0231073078 0.0004437071 0.0029737165 0.0000301038 0.9535554896 0.0022717175 0.0009690501 0.0166489075 ']}, {'input': '9 8 5 8\\r\\n1 2\\r\\n6 2\\r\\n2 7\\r\\n4 3\\r\\n5 3\\r\\n3 6\\r\\n6 8\\r\\n9 7\\r\\n0.5756\\r\\n0.9312\\r\\n0.4846\\r\\n0.7096\\r\\n0.9055\\r\\n0.5987\\r\\n0.6841\\r\\n0.6011\\r\\n0.5861\\r\\n', 'output': ['0.0004994782 0.3270344183 0.2258377173 0.0248431214 0.1829303180 0.2193026406 0.0065763617 0.0125278946 0.0004480498 ']}, {'input': '10 9 2 10\\r\\n1 2\\r\\n5 1\\r\\n7 1\\r\\n6 2\\r\\n3 5\\r\\n4 9\\r\\n5 10\\r\\n6 9\\r\\n10 8\\r\\n0.5376\\r\\n0.5747\\r\\n0.8019\\r\\n0.6922\\r\\n0.2890\\r\\n0.9193\\r\\n0.7521\\r\\n0.4436\\r\\n0.5970\\r\\n0.3173\\r\\n', 'output': ['0.2817412543 0.0959570556 0.0542629235 0.0025685657 0.1569610917 0.3021480932 0.0339864114 0.0084406954 0.0137071015 0.0502268077 ']}, {'input': '11 10 5 2\\r\\n11 1\\r\\n2 8\\r\\n2 10\\r\\n3 4\\r\\n9 4\\r\\n5 9\\r\\n6 9\\r\\n9 7\\r\\n11 9\\r\\n11 10\\r\\n0.0796\\r\\n0.0474\\r\\n0.2508\\r\\n0.6083\\r\\n0.7689\\r\\n0.1261\\r\\n0.2609\\r\\n0.4307\\r\\n0.8868\\r\\n0.3772\\r\\n0.6045\\r\\n', 'output': ['0.0003181172 0.0101075940 0.0001381672 0.0073377358 0.0067862223 0.0000641408 0.0001786077 0.0042257688 0.7637302105 0.0364209545 0.1706924813 ']}, {'input': '12 11 11 11\\r\\n3 1\\r\\n1 11\\r\\n3 2\\r\\n9 2\\r\\n2 10\\r\\n12 2\\r\\n3 5\\r\\n5 4\\r\\n8 5\\r\\n8 6\\r\\n12 7\\r\\n0.3563\\r\\n0.0931\\r\\n0.6741\\r\\n0.4162\\r\\n0.1307\\r\\n0.9049\\r\\n0.9435\\r\\n0.6656\\r\\n0.6276\\r\\n0.8688\\r\\n0.8109\\r\\n0.4977\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 ']}, {'input': '13 12 7 1\\r\\n2 1\\r\\n3 1\\r\\n6 1\\r\\n1 11\\r\\n2 9\\r\\n13 2\\r\\n3 10\\r\\n5 4\\r\\n4 11\\r\\n7 8\\r\\n7 13\\r\\n12 11\\r\\n0.1570\\r\\n0.0712\\r\\n0.0328\\r\\n0.5742\\r\\n0.0795\\r\\n0.6250\\r\\n0.7232\\r\\n0.8010\\r\\n0.8360\\r\\n0.1494\\r\\n0.3539\\r\\n0.8447\\r\\n0.9272\\r\\n', 'output': ['0.1034207245 0.0628088395 0.0093958837 0.0215220481 0.0001167809 0.0136922900 0.0642313143 0.0131051340 0.0511044118 0.0013590810 0.0568672232 0.0259479413 0.5764283278 ']}, {'input': '14 13 12 4\\r\\n1 6\\r\\n1 9\\r\\n9 2\\r\\n3 11\\r\\n4 12\\r\\n8 5\\r\\n5 11\\r\\n5 14\\r\\n10 7\\r\\n8 9\\r\\n13 9\\r\\n10 11\\r\\n12 11\\r\\n0.3228\\r\\n0.6911\\r\\n0.1498\\r\\n0.3435\\r\\n0.1763\\r\\n0.3718\\r\\n0.6798\\r\\n0.6485\\r\\n0.7299\\r\\n0.7418\\r\\n0.8041\\r\\n0.4249\\r\\n0.3820\\r\\n0.1464\\r\\n', 'output': ['0.0002725681 0.0001884812 0.0001796185 0.1521823863 0.0058382432 0.0000327578 0.0010923984 0.0053644997 0.0087619362 0.0145733462 0.3402217997 0.4711118932 0.0000364063 0.0001436652 ']}, {'input': '15 14 15 13\\r\\n4 1\\r\\n10 2\\r\\n3 12\\r\\n4 8\\r\\n12 4\\r\\n4 14\\r\\n7 5\\r\\n15 6\\r\\n7 9\\r\\n13 7\\r\\n14 7\\r\\n15 8\\r\\n12 10\\r\\n11 15\\r\\n0.5888\\r\\n0.1792\\r\\n0.7597\\r\\n0.6293\\r\\n0.3744\\r\\n0.3342\\r\\n0.8474\\r\\n0.8651\\r\\n0.1230\\r\\n0.4826\\r\\n0.0309\\r\\n0.3129\\r\\n0.9697\\r\\n0.4049\\r\\n0.0164\\r\\n', 'output': ['0.0045127683 0.0002130703 0.0079200770 0.2133409405 0.0005156567 0.0006969778 0.3990475462 0.1131589275 0.0000943589 0.0094364927 0.0000505592 0.0270366798 0.1760491983 0.0426472827 0.0052794640 ']}, {'input': '16 15 16 1\\r\\n1 3\\r\\n10 2\\r\\n9 3\\r\\n15 3\\r\\n4 10\\r\\n5 12\\r\\n16 5\\r\\n6 7\\r\\n6 15\\r\\n11 8\\r\\n11 9\\r\\n9 12\\r\\n14 9\\r\\n10 12\\r\\n10 13\\r\\n0.1478\\r\\n0.9068\\r\\n0.5458\\r\\n0.3318\\r\\n0.2632\\r\\n0.3624\\r\\n0.3189\\r\\n0.7264\\r\\n0.9796\\r\\n0.1311\\r\\n0.2947\\r\\n0.5834\\r\\n0.2095\\r\\n0.4419\\r\\n0.6588\\r\\n0.5525\\r\\n', 'output': ['0.0000811338 0.0093966712 0.0152177971 0.0004547303 0.0043006907 0.0013801376 0.0001128014 0.0001990500 0.9126720566 0.0104961528 0.0003134206 0.0369484070 0.0002490821 0.0000315496 0.0068014036 0.0013449155 ']}, {'input': '17 16 11 13\\r\\n3 1\\r\\n1 15\\r\\n2 15\\r\\n4 16\\r\\n5 8\\r\\n15 5\\r\\n8 6\\r\\n9 7\\r\\n10 7\\r\\n7 11\\r\\n17 7\\r\\n9 8\\r\\n12 8\\r\\n13 8\\r\\n10 16\\r\\n15 14\\r\\n0.7683\\r\\n0.9048\\r\\n0.1346\\r\\n0.4468\\r\\n0.1993\\r\\n0.7759\\r\\n0.8125\\r\\n0.2274\\r\\n0.1478\\r\\n0.8479\\r\\n0.9515\\r\\n0.7715\\r\\n0.3667\\r\\n0.0480\\r\\n0.0821\\r\\n0.6263\\r\\n0.2708\\r\\n', 'output': ['0.0258225311 0.0284330836 0.0000679627 0.0003573966 0.0152739625 0.0196276330 0.4722515893 0.1343480151 0.0275442145 0.0628400220 0.1521560220 0.0191064818 0.0031481221 0.0001752273 0.0307574428 0.0075784077 0.0005118859 ']}, {'input': '18 17 14 12\\r\\n1 2\\r\\n3 1\\r\\n18 1\\r\\n8 2\\r\\n9 2\\r\\n2 12\\r\\n2 17\\r\\n4 6\\r\\n15 4\\r\\n5 7\\r\\n7 6\\r\\n14 9\\r\\n12 10\\r\\n13 11\\r\\n11 16\\r\\n13 17\\r\\n14 15\\r\\n0.4024\\r\\n0.5565\\r\\n0.7870\\r\\n0.2691\\r\\n0.6727\\r\\n0.9621\\r\\n0.6842\\r\\n0.0271\\r\\n0.1097\\r\\n0.1747\\r\\n0.0784\\r\\n0.9550\\r\\n0.7523\\r\\n0.4284\\r\\n0.5238\\r\\n0.2709\\r\\n0.1595\\r\\n0.4590\\r\\n', 'output': ['0.0281574957 0.2581814330 0.0076272067 0.0107746580 0.0003467009 0.1714587133 0.0031642368 0.0000709113 0.0166962221 0.0000539712 0.0014416406 0.4106759112 0.0257975192 0.0287578136 0.0269904984 0.0002646607 0.0080077089 0.0015326985 ']}, {'input': '19 18 10 6\\r\\n5 1\\r\\n12 1\\r\\n7 2\\r\\n2 18\\r\\n15 3\\r\\n3 16\\r\\n4 6\\r\\n4 10\\r\\n6 9\\r\\n8 11\\r\\n13 9\\r\\n9 14\\r\\n10 11\\r\\n10 16\\r\\n18 11\\r\\n12 16\\r\\n17 16\\r\\n17 19\\r\\n0.6093\\r\\n0.4153\\r\\n0.2931\\r\\n0.6880\\r\\n0.0979\\r\\n0.9545\\r\\n0.2846\\r\\n0.5257\\r\\n0.5168\\r\\n0.2795\\r\\n0.4887\\r\\n0.3822\\r\\n0.2863\\r\\n0.5194\\r\\n0.3924\\r\\n0.8028\\r\\n0.8415\\r\\n0.2838\\r\\n0.9046\\r\\n', 'output': ['0.0054757481 0.0062808098 0.0031941783 0.1082773399 0.0000307445 0.5100921861 0.0003567821 0.0025634213 0.0108163903 0.0520824767 0.0484805903 0.0056216539 0.0001632695 0.0004991833 0.0004654536 0.1938285472 0.0350879002 0.0079000523 0.0087832726 ']}, {'input': '20 19 16 10\\r\\n2 1\\r\\n1 9\\r\\n1 10\\r\\n2 11\\r\\n2 16\\r\\n3 8\\r\\n15 3\\r\\n4 7\\r\\n4 14\\r\\n19 5\\r\\n6 16\\r\\n12 8\\r\\n15 13\\r\\n15 14\\r\\n15 19\\r\\n20 15\\r\\n19 16\\r\\n20 17\\r\\n18 20\\r\\n0.9546\\r\\n0.8460\\r\\n0.3530\\r\\n0.1547\\r\\n0.1812\\r\\n0.3792\\r\\n0.8502\\r\\n0.0898\\r\\n0.6804\\r\\n0.0465\\r\\n0.6699\\r\\n0.1623\\r\\n0.4908\\r\\n0.7436\\r\\n0.9748\\r\\n0.2965\\r\\n0.8528\\r\\n0.6024\\r\\n0.2343\\r\\n0.9496\\r\\n', 'output': ['0.4470817637 0.1925429406 0.0001522967 0.0001272041 0.0002374526 0.0009539965 0.0002531055 0.0000477577 0.0005965772 0.0000053211 0.0022254991 0.0000051402 0.0000145893 0.0010192506 0.3120036469 0.0168639725 0.0001460780 0.0000163715 0.0093450398 0.0163619965 ']}, {'input': '21 20 10 15\\r\\n1 4\\r\\n1 7\\r\\n1 13\\r\\n3 2\\r\\n3 13\\r\\n3 20\\r\\n14 4\\r\\n20 5\\r\\n6 17\\r\\n11 8\\r\\n13 9\\r\\n21 10\\r\\n11 14\\r\\n16 11\\r\\n12 14\\r\\n18 13\\r\\n21 14\\r\\n18 15\\r\\n17 16\\r\\n19 21\\r\\n0.5511\\r\\n0.4174\\r\\n0.1974\\r\\n0.1756\\r\\n0.4806\\r\\n0.7202\\r\\n0.0261\\r\\n0.1533\\r\\n0.5109\\r\\n0.9091\\r\\n0.1702\\r\\n0.0274\\r\\n0.6287\\r\\n0.4452\\r\\n0.8881\\r\\n0.4081\\r\\n0.2318\\r\\n0.9270\\r\\n0.3270\\r\\n0.5124\\r\\n0.6402\\r\\n', 'output': ['0.1274165708 0.0020068482 0.0221441417 0.0273841255 0.0011326856 0.0044150190 0.0000989026 0.0007239413 0.0032940960 0.0373926594 0.0268760758 0.0001121418 0.2255090088 0.1477723696 0.0142089213 0.0152217984 0.0061489761 0.2354718191 0.0009022427 0.0122643704 0.0895032861 ']}, {'input': '22 21 7 3\\r\\n1 16\\r\\n8 2\\r\\n3 17\\r\\n20 4\\r\\n12 5\\r\\n5 22\\r\\n13 6\\r\\n13 7\\r\\n14 7\\r\\n8 12\\r\\n9 10\\r\\n12 9\\r\\n9 13\\r\\n20 11\\r\\n13 20\\r\\n14 16\\r\\n14 17\\r\\n19 14\\r\\n22 15\\r\\n18 19\\r\\n21 18\\r\\n0.6643\\r\\n0.0936\\r\\n0.5519\\r\\n0.8542\\r\\n0.6411\\r\\n0.9560\\r\\n0.2451\\r\\n0.5841\\r\\n0.3590\\r\\n0.1352\\r\\n0.5336\\r\\n0.3901\\r\\n0.7602\\r\\n0.8653\\r\\n0.5635\\r\\n0.3840\\r\\n0.8625\\r\\n0.7766\\r\\n0.6941\\r\\n0.8028\\r\\n0.7482\\r\\n0.8431\\r\\n', 'output': ['0.0020725026 0.0000229554 0.0023344134 0.0034044638 0.0065601793 0.0429445422 0.0126807206 0.0037257267 0.0126648147 0.0001399510 0.0003551323 0.0103862706 0.1426738764 0.5077168905 0.0001223623 0.0058931744 0.1645677033 0.0138897777 0.0191701371 0.0396907000 0.0013049419 0.0076787635 ']}, {'input': '5 8 2 4\\r\\n1 2\\r\\n1 3\\r\\n5 1\\r\\n2 3\\r\\n2 4\\r\\n5 2\\r\\n4 3\\r\\n3 5\\r\\n0.2642\\r\\n0.6145\\r\\n0.1714\\r\\n0.5156\\r\\n0.7771\\r\\n', 'output': ['0.0469766543 0.4930268360 0.1177339858 0.1318957885 0.2103667354 ']}, {'input': '15 46 4 11\\r\\n1 3\\r\\n1 5\\r\\n6 1\\r\\n7 1\\r\\n1 8\\r\\n2 6\\r\\n8 2\\r\\n2 9\\r\\n12 2\\r\\n2 15\\r\\n3 4\\r\\n6 3\\r\\n3 12\\r\\n3 13\\r\\n3 14\\r\\n4 7\\r\\n9 4\\r\\n4 10\\r\\n4 14\\r\\n6 5\\r\\n5 7\\r\\n10 5\\r\\n12 5\\r\\n13 5\\r\\n5 14\\r\\n7 6\\r\\n9 6\\r\\n10 6\\r\\n6 13\\r\\n8 7\\r\\n7 13\\r\\n10 8\\r\\n8 13\\r\\n9 10\\r\\n9 13\\r\\n9 14\\r\\n11 10\\r\\n10 13\\r\\n10 15\\r\\n12 11\\r\\n11 15\\r\\n12 13\\r\\n15 12\\r\\n14 13\\r\\n15 13\\r\\n15 14\\r\\n0.2660\\r\\n0.9315\\r\\n0.7185\\r\\n0.9642\\r\\n0.1587\\r\\n0.2494\\r\\n0.3372\\r\\n0.0928\\r\\n0.3500\\r\\n0.0196\\r\\n0.2396\\r\\n0.8611\\r\\n0.5787\\r\\n0.4279\\r\\n0.0221\\r\\n', 'output': ['0.0079249483 0.1315277498 0.0526707222 0.5053657470 0.0138346726 0.0216010978 0.0163209733 0.0054495713 0.0182973209 0.0187149289 0.0026732816 0.0956673121 0.0798423781 0.0227469261 0.0073623701 ']}, {'input': '17 43 3 16\\r\\n8 1\\r\\n1 10\\r\\n1 12\\r\\n1 13\\r\\n6 2\\r\\n10 2\\r\\n12 2\\r\\n2 14\\r\\n15 2\\r\\n2 17\\r\\n6 3\\r\\n8 3\\r\\n12 3\\r\\n3 16\\r\\n4 5\\r\\n6 4\\r\\n4 7\\r\\n4 9\\r\\n13 4\\r\\n17 4\\r\\n6 5\\r\\n5 17\\r\\n6 11\\r\\n6 12\\r\\n6 17\\r\\n7 10\\r\\n7 12\\r\\n17 7\\r\\n9 8\\r\\n13 8\\r\\n8 15\\r\\n8 16\\r\\n17 8\\r\\n13 9\\r\\n9 16\\r\\n9 17\\r\\n10 15\\r\\n16 10\\r\\n17 11\\r\\n13 12\\r\\n16 12\\r\\n15 13\\r\\n15 14\\r\\n0.1613\\r\\n0.4247\\r\\n0.4271\\r\\n0.5636\\r\\n0.0214\\r\\n0.3172\\r\\n0.8156\\r\\n0.7663\\r\\n0.1132\\r\\n0.4127\\r\\n0.5416\\r\\n0.5220\\r\\n0.9366\\r\\n0.4426\\r\\n0.5884\\r\\n0.4569\\r\\n0.9613\\r\\n', 'output': ['0.0048722451 0.0160301298 0.0812776965 0.0169053414 0.0007186872 0.0187250770 0.0243168580 0.1375215020 0.0057046011 0.0143632541 0.0010119715 0.0786732010 0.1575241299 0.0011546527 0.0158649639 0.1204518537 0.3048838351 ']}, {'input': '6 6 6 3\\r\\n2 1\\r\\n5 1\\r\\n6 2\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n0.3429\\r\\n0.7018\\r\\n0.0699\\r\\n0.9602\\r\\n0.9585\\r\\n0.5070\\r\\n', 'output': ['0.0032904304 0.0076304590 0.0000112081 0.3439315417 0.6399603309 0.0051760299 ']}, {'input': '10 15 7 8\\r\\n3 1\\r\\n1 7\\r\\n2 4\\r\\n2 5\\r\\n9 2\\r\\n3 5\\r\\n7 3\\r\\n8 3\\r\\n4 7\\r\\n8 4\\r\\n5 7\\r\\n10 5\\r\\n6 8\\r\\n6 9\\r\\n9 8\\r\\n0.4654\\r\\n0.8489\\r\\n0.7851\\r\\n0.9790\\r\\n0.8126\\r\\n0.1443\\r\\n0.8385\\r\\n0.1355\\r\\n0.2672\\r\\n0.0631\\r\\n', 'output': ['0.0086717445 0.0591108269 0.1502231556 0.5026507699 0.0926399948 0.0018832329 0.1642324438 0.0138497445 0.0067226391 0.0000154479 ']}, {'input': '10 16 9 2\\r\\n3 1\\r\\n5 1\\r\\n9 1\\r\\n2 5\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n3 5\\r\\n6 3\\r\\n10 3\\r\\n4 6\\r\\n4 10\\r\\n5 10\\r\\n6 7\\r\\n8 7\\r\\n10 7\\r\\n0.8151\\r\\n0.2117\\r\\n0.5832\\r\\n0.0244\\r\\n0.1781\\r\\n0.5401\\r\\n0.4576\\r\\n0.1453\\r\\n0.3072\\r\\n0.2282\\r\\n', 'output': ['0.2858990309 0.1917730962 0.1409268921 0.0046323044 0.0671166968 0.0504929902 0.0497075403 0.0134447894 0.0942164861 0.1017901736 ']}, {'input': '22 30 9 17\\r\\n1 18\\r\\n1 20\\r\\n2 3\\r\\n5 2\\r\\n6 2\\r\\n2 11\\r\\n2 19\\r\\n6 4\\r\\n21 4\\r\\n22 4\\r\\n5 6\\r\\n8 5\\r\\n14 5\\r\\n10 6\\r\\n21 6\\r\\n22 7\\r\\n16 8\\r\\n9 12\\r\\n16 9\\r\\n18 10\\r\\n11 18\\r\\n11 22\\r\\n14 12\\r\\n13 22\\r\\n15 17\\r\\n21 15\\r\\n16 22\\r\\n22 17\\r\\n21 18\\r\\n20 22\\r\\n0.3290\\r\\n0.6966\\r\\n0.3952\\r\\n0.4713\\r\\n0.2462\\r\\n0.6482\\r\\n0.3471\\r\\n0.6729\\r\\n0.8845\\r\\n0.8581\\r\\n0.6991\\r\\n0.7279\\r\\n0.9751\\r\\n0.4603\\r\\n0.9591\\r\\n0.9890\\r\\n0.0230\\r\\n0.1388\\r\\n0.8745\\r\\n0.3635\\r\\n0.9655\\r\\n0.6980\\r\\n', 'output': ['0.0012630922 0.0302925914 0.0001113046 0.0058223640 0.0084588979 0.0305910518 0.0001130212 0.0050014407 0.0135265144 0.0105166645 0.0126985994 0.0054538897 0.0233929192 0.0031581259 0.0393763424 0.5293925504 0.0008728982 0.0041399002 0.0022100491 0.0013950475 0.1941228326 0.0780899026 ']}, {'input': '22 32 5 7\\r\\n1 3\\r\\n9 1\\r\\n16 2\\r\\n2 18\\r\\n3 5\\r\\n3 6\\r\\n3 10\\r\\n11 3\\r\\n13 3\\r\\n3 22\\r\\n22 4\\r\\n5 6\\r\\n5 8\\r\\n14 5\\r\\n5 15\\r\\n5 18\\r\\n19 6\\r\\n6 20\\r\\n6 21\\r\\n21 7\\r\\n8 18\\r\\n22 9\\r\\n10 13\\r\\n22 10\\r\\n15 11\\r\\n17 12\\r\\n12 20\\r\\n17 14\\r\\n16 22\\r\\n17 18\\r\\n17 21\\r\\n18 20\\r\\n0.9511\\r\\n0.6830\\r\\n0.2035\\r\\n0.9142\\r\\n0.6807\\r\\n0.6502\\r\\n0.3221\\r\\n0.0903\\r\\n0.1790\\r\\n0.2234\\r\\n0.9788\\r\\n0.6005\\r\\n0.3179\\r\\n0.2115\\r\\n0.8035\\r\\n0.8730\\r\\n0.0342\\r\\n0.2599\\r\\n0.7508\\r\\n0.1815\\r\\n0.6454\\r\\n0.7619\\r\\n', 'output': ['0.0547241979 0.0127153084 0.0441350190 0.0054767347 0.2027512578 0.1785779328 0.0009181368 0.0030386274 0.0012253232 0.0047658952 0.1614826534 0.0200979142 0.0024921791 0.0089124294 0.0185716675 0.0233837366 0.0345272095 0.0510312272 0.0049608897 0.0146416997 0.0870608962 0.0645090644 ']}, {'input': '21 23 21 17\\r\\n3 1\\r\\n3 2\\r\\n15 2\\r\\n2 20\\r\\n21 2\\r\\n16 3\\r\\n3 19\\r\\n4 8\\r\\n11 4\\r\\n17 4\\r\\n5 8\\r\\n5 9\\r\\n5 13\\r\\n6 16\\r\\n12 7\\r\\n16 7\\r\\n12 9\\r\\n10 17\\r\\n21 11\\r\\n12 18\\r\\n21 14\\r\\n15 17\\r\\n20 16\\r\\n0.0190\\r\\n0.5764\\r\\n0.1426\\r\\n0.4577\\r\\n0.7596\\r\\n0.5794\\r\\n0.5531\\r\\n0.9095\\r\\n0.6558\\r\\n0.8086\\r\\n0.2032\\r\\n0.4600\\r\\n0.9388\\r\\n0.1243\\r\\n0.2195\\r\\n0.7691\\r\\n0.1250\\r\\n0.1658\\r\\n0.4437\\r\\n0.7445\\r\\n0.0782\\r\\n', 'output': ['0.0000449260 0.2344991918 0.0251976569 0.1319548171 0.0505050501 0.0009015861 0.0110788625 0.1360612739 0.0147837889 0.0419721572 0.0374092349 0.0159331361 0.0176432803 0.0015421188 0.0322649361 0.1040211064 0.0579773602 0.0001476576 0.0017154120 0.0398347629 0.0445116844 ']}, {'input': '21 24 10 10\\r\\n11 1\\r\\n14 1\\r\\n4 2\\r\\n2 10\\r\\n3 5\\r\\n3 8\\r\\n3 9\\r\\n3 13\\r\\n3 17\\r\\n21 3\\r\\n4 9\\r\\n20 5\\r\\n6 12\\r\\n17 6\\r\\n9 7\\r\\n15 7\\r\\n7 19\\r\\n12 13\\r\\n12 15\\r\\n15 14\\r\\n21 14\\r\\n16 19\\r\\n18 20\\r\\n19 21\\r\\n0.4227\\r\\n0.9018\\r\\n0.8446\\r\\n0.0334\\r\\n0.8707\\r\\n0.5558\\r\\n0.4513\\r\\n0.1537\\r\\n0.9028\\r\\n0.2106\\r\\n0.0863\\r\\n0.4888\\r\\n0.3508\\r\\n0.3819\\r\\n0.2980\\r\\n0.6791\\r\\n0.6029\\r\\n0.0931\\r\\n0.8012\\r\\n0.9531\\r\\n0.0343\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 ']}, {'input': '21 25 20 3\\r\\n18 1\\r\\n12 2\\r\\n20 2\\r\\n11 3\\r\\n9 4\\r\\n12 4\\r\\n4 15\\r\\n4 20\\r\\n5 8\\r\\n5 15\\r\\n5 18\\r\\n5 20\\r\\n6 16\\r\\n20 7\\r\\n8 11\\r\\n13 8\\r\\n16 10\\r\\n10 19\\r\\n17 11\\r\\n12 15\\r\\n12 16\\r\\n12 21\\r\\n17 13\\r\\n14 18\\r\\n16 20\\r\\n0.3609\\r\\n0.9580\\r\\n0.3737\\r\\n0.7107\\r\\n0.6199\\r\\n0.4418\\r\\n0.0874\\r\\n0.5309\\r\\n0.3103\\r\\n0.9377\\r\\n0.8430\\r\\n0.9569\\r\\n0.5227\\r\\n0.6203\\r\\n0.4745\\r\\n0.4190\\r\\n0.6055\\r\\n0.8480\\r\\n0.8791\\r\\n0.4012\\r\\n0.3441\\r\\n', 'output': ['0.0001115124 0.0980714461 0.0002416850 0.0433302884 0.1021821003 0.0004704958 0.0000866423 0.0539373770 0.0001486904 0.0329442386 0.0940435447 0.4179895790 0.0123317109 0.0004663481 0.0186175265 0.0173859990 0.0115346705 0.0516017594 0.0012743943 0.0432054878 0.0000245034 ']}, {'input': '22 23 5 16\\r\\n20 1\\r\\n1 22\\r\\n2 3\\r\\n2 4\\r\\n3 13\\r\\n16 3\\r\\n4 6\\r\\n9 5\\r\\n5 22\\r\\n16 7\\r\\n9 8\\r\\n8 13\\r\\n10 16\\r\\n10 22\\r\\n11 17\\r\\n22 12\\r\\n14 15\\r\\n16 14\\r\\n14 18\\r\\n15 19\\r\\n16 21\\r\\n19 17\\r\\n22 17\\r\\n0.7393\\r\\n0.5325\\r\\n0.7522\\r\\n0.0343\\r\\n0.4628\\r\\n0.4713\\r\\n0.0749\\r\\n0.2350\\r\\n0.1396\\r\\n0.4916\\r\\n0.9203\\r\\n0.3179\\r\\n0.3378\\r\\n0.5174\\r\\n0.6705\\r\\n0.9649\\r\\n0.0823\\r\\n0.6370\\r\\n0.3185\\r\\n0.8381\\r\\n0.6475\\r\\n0.8173\\r\\n', 'output': ['0.0088399457 0.0037821738 0.0429781208 0.0005983597 0.0060422088 0.0002929921 0.0000030894 0.0040866917 0.0027909053 0.0135153898 0.0117585651 0.0001331749 0.0058057805 0.0119937930 0.0107339787 0.7106384041 0.0059716200 0.0009389289 0.0043356417 0.0022053815 0.0001722543 0.1523826002 ']}, {'input': '22 26 22 13\\r\\n1 2\\r\\n3 1\\r\\n1 21\\r\\n1 22\\r\\n9 2\\r\\n13 2\\r\\n2 17\\r\\n3 16\\r\\n11 4\\r\\n7 5\\r\\n12 5\\r\\n5 21\\r\\n6 12\\r\\n6 18\\r\\n11 7\\r\\n18 8\\r\\n9 11\\r\\n9 20\\r\\n10 13\\r\\n11 14\\r\\n11 18\\r\\n19 12\\r\\n15 22\\r\\n17 16\\r\\n18 22\\r\\n22 21\\r\\n0.1724\\r\\n0.6546\\r\\n0.1197\\r\\n0.5874\\r\\n0.2667\\r\\n0.1593\\r\\n0.5054\\r\\n0.1572\\r\\n0.1620\\r\\n0.2524\\r\\n0.6551\\r\\n0.5020\\r\\n0.1909\\r\\n0.2257\\r\\n0.7479\\r\\n0.6343\\r\\n0.6408\\r\\n0.7443\\r\\n0.3852\\r\\n0.8838\\r\\n0.2693\\r\\n0.3504\\r\\n', 'output': ['0.0845150088 0.2599909733 0.0097983608 0.0018923031 0.0239189914 0.0048992078 0.0160198485 0.0001406067 0.0247058927 0.0013355496 0.1609619578 0.0266705055 0.0121400170 0.0002951678 0.0125662798 0.0330821904 0.0360913305 0.1467042455 0.0007214805 0.0257426840 0.0360195050 0.0817878936 ']}, {'input': '22 25 2 7\\r\\n17 1\\r\\n2 16\\r\\n2 22\\r\\n14 3\\r\\n3 15\\r\\n20 3\\r\\n4 8\\r\\n4 12\\r\\n4 13\\r\\n13 5\\r\\n5 16\\r\\n16 6\\r\\n11 7\\r\\n17 7\\r\\n7 21\\r\\n9 15\\r\\n9 22\\r\\n14 10\\r\\n10 15\\r\\n10 17\\r\\n20 10\\r\\n16 12\\r\\n18 13\\r\\n18 16\\r\\n19 22\\r\\n0.9622\\r\\n0.8251\\r\\n0.9681\\r\\n0.2488\\r\\n0.3662\\r\\n0.5921\\r\\n0.5852\\r\\n0.0411\\r\\n0.2418\\r\\n0.0125\\r\\n0.2109\\r\\n0.8481\\r\\n0.3958\\r\\n0.1604\\r\\n0.8006\\r\\n0.9077\\r\\n0.7900\\r\\n0.7867\\r\\n0.8533\\r\\n0.6754\\r\\n0.7537\\r\\n0.1636\\r\\n', 'output': ['0.0397606434 0.0600590881 0.3808962043 0.0014000167 0.0011392632 0.0002081290 0.0143391730 0.0000065896 0.0122923376 0.0194932708 0.0001001379 0.0082802798 0.0024780234 0.0030637724 0.1211126468 0.1962584577 0.0804543597 0.0051630869 0.0166074944 0.0140209327 0.0017717043 0.0210943884 ']}, {'input': '20 23 17 3\\r\\n18 1\\r\\n2 6\\r\\n10 2\\r\\n3 8\\r\\n12 4\\r\\n8 5\\r\\n9 5\\r\\n17 5\\r\\n7 8\\r\\n15 7\\r\\n7 16\\r\\n9 18\\r\\n9 20\\r\\n10 15\\r\\n17 10\\r\\n11 14\\r\\n11 18\\r\\n13 12\\r\\n12 14\\r\\n14 13\\r\\n20 15\\r\\n16 19\\r\\n20 16\\r\\n0.3546\\r\\n0.6179\\r\\n0.2477\\r\\n0.4236\\r\\n0.8433\\r\\n0.0304\\r\\n0.5569\\r\\n0.4558\\r\\n0.8289\\r\\n0.1959\\r\\n0.2156\\r\\n0.3993\\r\\n0.0429\\r\\n0.9185\\r\\n0.1945\\r\\n0.8919\\r\\n0.8929\\r\\n0.3044\\r\\n0.2973\\r\\n0.1637\\r\\n', 'output': ['0.0003638881 0.0163339067 0.0008806850 0.0000274159 0.3262188951 0.0000246366 0.0536909073 0.0520393925 0.1051082156 0.0261569273 0.0020883748 0.0005216032 0.0000848720 0.0268220987 0.0257688220 0.1285525498 0.2126000150 0.0073895213 0.0000994338 0.0152278393 ']}, {'input': '20 21 5 14\\r\\n1 10\\r\\n13 1\\r\\n19 1\\r\\n2 11\\r\\n14 2\\r\\n2 17\\r\\n7 3\\r\\n13 3\\r\\n4 15\\r\\n14 5\\r\\n19 5\\r\\n6 16\\r\\n13 8\\r\\n16 9\\r\\n15 11\\r\\n11 19\\r\\n15 12\\r\\n16 12\\r\\n18 12\\r\\n15 20\\r\\n17 16\\r\\n0.5805\\r\\n0.3342\\r\\n0.7705\\r\\n0.7345\\r\\n0.1304\\r\\n0.3862\\r\\n0.6920\\r\\n0.6597\\r\\n0.6223\\r\\n0.0125\\r\\n0.4646\\r\\n0.9876\\r\\n0.7291\\r\\n0.3720\\r\\n0.2529\\r\\n0.1635\\r\\n0.5579\\r\\n0.4736\\r\\n0.6798\\r\\n0.1940\\r\\n', 'output': ['0.0290729509 0.0774707737 0.0048407220 0.0022268940 0.0840499631 0.0003440094 0.0003284870 0.0006200526 0.0008986063 0.0000093558 0.0641414110 0.2073528076 0.0194228289 0.2619733510 0.0124627336 0.0066013691 0.0179828402 0.0000059094 0.2100074063 0.0001875280 ']}, {'input': '20 25 1 12\\r\\n1 11\\r\\n12 1\\r\\n18 1\\r\\n4 2\\r\\n3 5\\r\\n3 7\\r\\n3 11\\r\\n14 3\\r\\n3 16\\r\\n17 3\\r\\n11 4\\r\\n4 16\\r\\n18 4\\r\\n5 6\\r\\n5 9\\r\\n10 5\\r\\n5 14\\r\\n5 20\\r\\n9 6\\r\\n17 6\\r\\n8 17\\r\\n12 10\\r\\n16 13\\r\\n14 19\\r\\n15 19\\r\\n0.5533\\r\\n0.6775\\r\\n0.4103\\r\\n0.7882\\r\\n0.9682\\r\\n0.0157\\r\\n0.8149\\r\\n0.2403\\r\\n0.4483\\r\\n0.1045\\r\\n0.7979\\r\\n0.0113\\r\\n0.9501\\r\\n0.7438\\r\\n0.6028\\r\\n0.8786\\r\\n0.8645\\r\\n0.8427\\r\\n0.2974\\r\\n0.2234\\r\\n', 'output': ['0.3836337810 0.0005834345 0.0229041026 0.0461902969 0.3196862695 0.0007593053 0.0018549199 0.0000123965 0.0005294816 0.0079362295 0.0669374470 0.0290126728 0.0053233321 0.0091036233 0.0001539764 0.0320034925 0.0145047810 0.0584237926 0.0004433762 0.0000032889 ']}, {'input': '16 17 7 1\\r\\n3 1\\r\\n1 8\\r\\n10 1\\r\\n1 11\\r\\n15 1\\r\\n15 2\\r\\n2 16\\r\\n3 9\\r\\n4 13\\r\\n15 5\\r\\n16 6\\r\\n11 7\\r\\n8 12\\r\\n9 10\\r\\n14 9\\r\\n10 11\\r\\n13 16\\r\\n0.4938\\r\\n0.1780\\r\\n0.5063\\r\\n0.2975\\r\\n0.0828\\r\\n0.7123\\r\\n0.6365\\r\\n0.3149\\r\\n0.1640\\r\\n0.2521\\r\\n0.8296\\r\\n0.9536\\r\\n0.2263\\r\\n0.1757\\r\\n0.7787\\r\\n0.4786\\r\\n', 'output': ['0.2282703609 0.0041908237 0.0240980923 0.0001797951 0.0000528785 0.0016021604 0.0137910440 0.0127072600 0.0229547593 0.0461207439 0.4817791924 0.0589129374 0.0014384188 0.0007747441 0.0911572626 0.0119695266 ']}, {'input': '18 19 4 11\\r\\n1 9\\r\\n2 8\\r\\n3 5\\r\\n3 6\\r\\n4 14\\r\\n9 5\\r\\n15 5\\r\\n8 6\\r\\n14 6\\r\\n12 7\\r\\n7 14\\r\\n7 17\\r\\n7 18\\r\\n8 18\\r\\n12 9\\r\\n14 10\\r\\n18 11\\r\\n14 13\\r\\n16 17\\r\\n0.3249\\r\\n0.3531\\r\\n0.3056\\r\\n0.4843\\r\\n0.7970\\r\\n0.5842\\r\\n0.5472\\r\\n0.4521\\r\\n0.2028\\r\\n0.7950\\r\\n0.1425\\r\\n0.4595\\r\\n0.1226\\r\\n0.0513\\r\\n0.5915\\r\\n0.2733\\r\\n0.7116\\r\\n0.0974\\r\\n', 'output': ['0.0011964236 0.0027831999 0.0140945800 0.0099145200 0.0983898473 0.1586288138 0.2962532703 0.0986994249 0.0196928959 0.0361972940 0.0015096894 0.0240101362 0.0015026996 0.1439159142 0.0012566904 0.0004912934 0.0439254039 0.0475379030 ']}, {'input': '19 20 7 13\\r\\n1 8\\r\\n10 1\\r\\n12 1\\r\\n1 13\\r\\n2 3\\r\\n2 13\\r\\n5 4\\r\\n11 4\\r\\n16 4\\r\\n5 7\\r\\n5 12\\r\\n5 13\\r\\n12 6\\r\\n9 10\\r\\n18 9\\r\\n15 10\\r\\n17 14\\r\\n14 19\\r\\n17 15\\r\\n16 17\\r\\n0.2124\\r\\n0.4090\\r\\n0.6285\\r\\n0.8759\\r\\n0.6790\\r\\n0.3161\\r\\n0.7681\\r\\n0.0730\\r\\n0.9793\\r\\n0.9753\\r\\n0.6491\\r\\n0.3349\\r\\n0.5286\\r\\n0.9760\\r\\n0.0743\\r\\n0.3295\\r\\n0.4276\\r\\n0.5759\\r\\n0.9666\\r\\n', 'output': ['0.0307369775 0.0185380486 0.0049762965 0.0801258012 0.4016568896 0.0012615177 0.0458257790 0.0001732439 0.0262190397 0.2072028585 0.0005878688 0.0347646012 0.1014805103 0.0361157326 0.0009321471 0.0019251201 0.0051159376 0.0000088276 0.0023528026 ']}, {'input': '19 45 4 19\\r\\n3 1\\r\\n4 1\\r\\n8 1\\r\\n9 1\\r\\n1 15\\r\\n4 2\\r\\n2 7\\r\\n8 2\\r\\n10 2\\r\\n12 2\\r\\n14 2\\r\\n6 4\\r\\n12 4\\r\\n4 14\\r\\n18 4\\r\\n8 5\\r\\n5 16\\r\\n17 5\\r\\n5 18\\r\\n6 15\\r\\n6 16\\r\\n6 17\\r\\n11 7\\r\\n7 12\\r\\n16 7\\r\\n19 7\\r\\n15 8\\r\\n9 10\\r\\n12 9\\r\\n9 14\\r\\n18 9\\r\\n19 9\\r\\n10 12\\r\\n14 10\\r\\n19 10\\r\\n11 13\\r\\n11 14\\r\\n15 11\\r\\n17 11\\r\\n11 19\\r\\n12 16\\r\\n15 13\\r\\n15 14\\r\\n14 17\\r\\n18 19\\r\\n0.4821\\r\\n0.4961\\r\\n0.0784\\r\\n0.4492\\r\\n0.7542\\r\\n0.2541\\r\\n0.9007\\r\\n0.3242\\r\\n0.3859\\r\\n0.2849\\r\\n0.4588\\r\\n0.9274\\r\\n0.1538\\r\\n0.4482\\r\\n0.6068\\r\\n0.9144\\r\\n0.8487\\r\\n0.1854\\r\\n0.4288\\r\\n', 'output': ['0.0266883400 0.0401292756 0.0000341093 0.0443828404 0.0331957500 0.0072730898 0.1489809719 0.0096326688 0.0407018303 0.0188112037 0.0334055826 0.2872048781 0.0010750781 0.0556489717 0.0481176365 0.0894552396 0.0587582081 0.0258448651 0.0306594604 ']}, {'input': '6 9 2 5\\r\\n1 2\\r\\n3 1\\r\\n6 1\\r\\n2 4\\r\\n5 2\\r\\n3 6\\r\\n5 4\\r\\n6 4\\r\\n6 5\\r\\n0.9796\\r\\n0.7061\\r\\n0.6636\\r\\n0.9200\\r\\n0.4454\\r\\n0.5302\\r\\n', 'output': ['0.3356041533 0.2464765303 0.0058143943 0.2843884681 0.0929849670 0.0347314871 ']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, a, b, A, B, i, x, y;\ndouble p[22], r, f[22][22];\nint main() {\n  scanf(\"%d%d%d%d\", &n, &m, &a, &b);\n  for (i = 1; i <= m; i++) {\n    scanf(\"%d%d\", &A, &B);\n    if (--A == --B) {\n      f[A][A] = 1;\n    } else\n      f[A][B] = f[B][A] = 0.5;\n  }\n  for (i = 0; i < n; i++) scanf(\"%lf\", &p[i]);\n  for (i = 0; i < n; i++) {\n    r = 1.0;\n    for (int j = 0; j < n; j++) {\n      if (i == j) continue;\n      r *= p[j] * (f[i][j] + p[i] * f[a][j] * f[b][j] +\n                    (1 - p[i]) * (1 - f[a][j]) * (1 - f[b][j]));\n    }\n    printf(\"%.9f \", r);\n  }\n  printf(\"\\n\");\n}\n"}
{"src_uid": "ab410c6513a26ec3a41c63318dc38b78", "id": 37, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2700, "testcases": "[{'input': '2 1 1 2\\r\\n1 2\\r\\n0.5\\r\\n0.5\\r\\n', 'output': ['0.5000000000 0.5000000000 ']}, {'input': '4 4 1 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 1\\r\\n0.5\\r\\n0.5\\r\\n0.5\\r\\n0.5\\r\\n', 'output': ['0.3333333333 0.3333333333 0.1666666667 0.1666666667 ']}, {'input': '5 4 2 5\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n0.99\\r\\n0.6\\r\\n0.66\\r\\n0.23\\r\\n0.51\\r\\n', 'output': ['0.9976393323 0.0015805859 0.0000137404 0.0000015403 0.0007648011 ']}, {'input': '16 15 1 16\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n', 'output': ['0.0019644887 0.0325808635 0.0503829756 0.0645522937 0.0762658799 0.0856950294 0.0924815917 0.0960768773 0.0960768773 0.0924815917 0.0856950294 0.0762658799 0.0645522937 0.0503829756 0.0325808635 0.0019644887 ']}, {'input': '6 6 1 4\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 1\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.1535695632 0.1732152184 0.1732152184 0.1535695632 0.1732152184 0.1732152184 ']}, {'input': '2 1 1 2\\r\\n1 2\\r\\n0.142\\r\\n0.2\\r\\n', 'output': ['0.3983169705 0.6016830295 ']}, {'input': '6 5 2 1\\r\\n1 6\\r\\n3 2\\r\\n3 6\\r\\n5 4\\r\\n4 6\\r\\n0.7506\\r\\n0.5129\\r\\n0.7965\\r\\n0.1712\\r\\n0.3321\\r\\n0.7033\\r\\n', 'output': ['0.0490630865 0.0083870955 0.3822667748 0.0174328057 0.0030541480 0.5397960896 ']}, {'input': '10 9 2 10\\r\\n1 2\\r\\n5 1\\r\\n7 1\\r\\n6 2\\r\\n3 5\\r\\n4 9\\r\\n5 10\\r\\n6 9\\r\\n10 8\\r\\n0.5376\\r\\n0.5747\\r\\n0.8019\\r\\n0.6922\\r\\n0.2890\\r\\n0.9193\\r\\n0.7521\\r\\n0.4436\\r\\n0.5970\\r\\n0.3173\\r\\n', 'output': ['0.2817412543 0.0959570556 0.0542629235 0.0025685657 0.1569610917 0.3021480932 0.0339864114 0.0084406954 0.0137071015 0.0502268077 ']}, {'input': '15 21 5 15\\r\\n6 1\\r\\n1 10\\r\\n11 1\\r\\n2 3\\r\\n2 8\\r\\n11 2\\r\\n2 14\\r\\n3 11\\r\\n15 3\\r\\n4 9\\r\\n10 4\\r\\n11 4\\r\\n4 12\\r\\n5 8\\r\\n5 12\\r\\n13 5\\r\\n8 7\\r\\n8 13\\r\\n14 8\\r\\n9 12\\r\\n13 9\\r\\n0.0984\\r\\n0.9472\\r\\n0.0555\\r\\n0.1818\\r\\n0.6887\\r\\n0.2633\\r\\n0.6266\\r\\n0.7277\\r\\n0.4906\\r\\n0.5204\\r\\n0.3271\\r\\n0.8406\\r\\n0.1905\\r\\n0.8913\\r\\n0.1490\\r\\n', 'output': ['0.0077226021 0.5303336625 0.0054411451 0.0303793551 0.0404230994 0.0005350284 0.0013754254 0.1413320042 0.0265814303 0.0120371707 0.0322545543 0.1066358507 0.0104058084 0.0543251267 0.0002177368 ']}, {'input': '16 16 11 1\\r\\n15 1\\r\\n5 2\\r\\n10 2\\r\\n15 2\\r\\n4 3\\r\\n3 10\\r\\n3 11\\r\\n6 10\\r\\n9 7\\r\\n7 15\\r\\n12 8\\r\\n8 16\\r\\n13 9\\r\\n13 10\\r\\n16 11\\r\\n15 14\\r\\n0.7912\\r\\n0.2716\\r\\n0.2423\\r\\n0.7215\\r\\n0.3998\\r\\n0.3062\\r\\n0.0161\\r\\n0.9557\\r\\n0.8075\\r\\n0.0797\\r\\n0.8873\\r\\n0.1631\\r\\n0.8815\\r\\n0.8284\\r\\n0.4164\\r\\n0.0509\\r\\n', 'output': ['0.0153633854 0.0582037768 0.0644798137 0.0179019027 0.0038888919 0.0036876616 0.0067662879 0.1649462155 0.0713890711 0.0806917881 0.2077252654 0.0000190454 0.1796086267 0.0191451875 0.0980830806 0.0080999998 ']}, {'input': '22 21 1 22\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0012434856 0.0099719410 0.0199076715 0.0297915885 0.0395249019 0.0489267177 0.0577200158 0.0655362954 0.0719467411 0.0765217103 0.0789089312 0.0789089312 0.0765217103 0.0719467411 0.0655362954 0.0577200158 0.0489267177 0.0395249019 0.0297915885 0.0199076715 0.0099719410 0.0012434856 ']}, {'input': '22 23 5 16\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n22 1\\r\\n1 11\\r\\n0.01\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0009049944 0.0654619724 0.0448599020 0.0342094033 0.0283295356 0.0266503813 0.0288053138 0.0342798044 0.0427189992 0.0557007096 0.1605214977 0.0643520452 0.0514169497 0.0415243077 0.0342155622 0.0300098388 0.0291162176 0.0313210001 0.0360195732 0.0424281241 0.0505451222 0.0666087455 ']}, {'input': '22 22 1 13\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n22 1\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0387342340 0.0376245603 0.0385434630 0.0409311653 0.0438884638 0.0463138950 0.0472507131 0.0463138950 0.0438884638 0.0409311653 0.0385434630 0.0376245603 0.0387342340 0.0420477574 0.0472178012 0.0531433058 0.0579906815 0.0598786325 0.0579906815 0.0531433058 0.0472178012 0.0420477574 ']}, {'input': '10 45 1 10\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n1 8\\r\\n1 9\\r\\n1 10\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n2 8\\r\\n2 9\\r\\n2 10\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n3 8\\r\\n3 9\\r\\n3 10\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n4 8\\r\\n4 9\\r\\n4 10\\r\\n5 6\\r\\n5 7\\r\\n5 8\\r\\n5 9\\r\\n5 10\\r\\n6 7\\r\\n6 8\\r\\n6 9\\r\\n6 10\\r\\n7 8\\r\\n7 9\\r\\n7 10\\r\\n8 9\\r\\n8 10\\r\\n9 10\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n', 'output': ['0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 ']}, {'input': '1 0 1 1\\r\\n0.99\\r\\n', 'output': ['1.0000000000 ']}, {'input': '22 21 1 22\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n11 1\\r\\n12 1\\r\\n13 1\\r\\n14 1\\r\\n15 1\\r\\n16 1\\r\\n17 1\\r\\n18 1\\r\\n19 1\\r\\n20 1\\r\\n21 1\\r\\n22 2\\r\\n0.01\\r\\n0.02\\r\\n0.03\\r\\n0.04\\r\\n0.05\\r\\n0.06\\r\\n0.07\\r\\n0.08\\r\\n0.09\\r\\n0.10\\r\\n0.11\\r\\n0.12\\r\\n0.13\\r\\n0.14\\r\\n0.15\\r\\n0.16\\r\\n0.17\\r\\n0.18\\r\\n0.19\\r\\n0.20\\r\\n0.21\\r\\n0.22\\r\\n', 'output': ['0.9035493892 0.0711125603 0.0002295956 0.0003073428 0.0003857694 0.0004649204 0.0005448425 0.0006255834 0.0007071929 0.0007897222 0.0008732245 0.0009577547 0.0010433701 0.0011301299 0.0012180959 0.0013073322 0.0013979057 0.0014898861 0.0015833460 0.0016783614 0.0017750116 0.0068286632 ']}, {'input': '15 14 1 8\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.1687647168 0.0613502671 0.0232964298 0.0159426870 0.0100709787 0.0077507094 0.0071633056 0.0059104630 0.1744057974 0.0870855985 0.0630100398 0.0623589182 0.1454718455 0.1071447000 0.0602735434 ']}, {'input': '15 14 13 13\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 0.0000000000 ']}, {'input': '15 14 15 15\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '14 43 1 14\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n5 6\\r\\n5 7\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n8 12\\r\\n8 13\\r\\n8 14\\r\\n9 10\\r\\n9 11\\r\\n9 12\\r\\n9 13\\r\\n9 14\\r\\n10 11\\r\\n10 12\\r\\n10 13\\r\\n10 14\\r\\n11 12\\r\\n11 13\\r\\n11 14\\r\\n12 13\\r\\n12 14\\r\\n13 14\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0526959074 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.1878457103 0.1878457103 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0526959074 ']}, {'input': '16 57 1 16\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n1 16\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n2 16\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n3 16\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n4 16\\r\\n5 6\\r\\n5 7\\r\\n5 16\\r\\n6 7\\r\\n6 16\\r\\n7 16\\r\\n7 8\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n8 12\\r\\n8 13\\r\\n8 14\\r\\n8 15\\r\\n9 10\\r\\n9 11\\r\\n9 12\\r\\n9 13\\r\\n9 14\\r\\n9 15\\r\\n10 11\\r\\n10 12\\r\\n10 13\\r\\n10 14\\r\\n10 15\\r\\n11 12\\r\\n11 13\\r\\n11 14\\r\\n11 15\\r\\n12 13\\r\\n12 14\\r\\n12 15\\r\\n13 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.89\\r\\n0.79\\r\\n0.69\\r\\n0.59\\r\\n0.49\\r\\n0.39\\r\\n0.29\\r\\n0.19\\r\\n0.19\\r\\n0.29\\r\\n0.39\\r\\n0.49\\r\\n0.59\\r\\n0.69\\r\\n0.79\\r\\n', 'output': ['0.8601065040 0.0421912132 0.0216044923 0.0139824673 0.0099982535 0.0075466288 0.0077197332 0.0018809771 0.0005077937 0.0005077937 0.0006335685 0.0007997585 0.0010295784 0.0013684205 0.0019187930 0.0282040246 ']}, {'input': '2 1 2 2\\r\\n1 2\\r\\n0.4651\\r\\n0.4541\\r\\n', 'output': ['0.0000000000 1.0000000000 ']}, {'input': '3 3 3 3\\r\\n1 2\\r\\n1 3\\r\\n2 3\\r\\n0.7518\\r\\n0.3684\\r\\n0.0278\\r\\n', 'output': ['0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '4 6 4 2\\r\\n1 2\\r\\n3 1\\r\\n4 1\\r\\n2 3\\r\\n4 2\\r\\n3 4\\r\\n0.8837\\r\\n0.8531\\r\\n0.1495\\r\\n0.1412\\r\\n', 'output': ['0.3201347837 0.6091104909 0.0388222283 0.0319324970 ']}, {'input': '5 10 4 1\\r\\n1 2\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n3 2\\r\\n2 4\\r\\n2 5\\r\\n4 3\\r\\n3 5\\r\\n5 4\\r\\n0.1234\\r\\n0.3871\\r\\n0.0253\\r\\n0.4658\\r\\n0.4364\\r\\n', 'output': ['0.1115667934 0.2114914579 0.1016822203 0.3398765632 0.2353829653 ']}, {'input': '6 15 3 6\\r\\n2 1\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n2 3\\r\\n4 2\\r\\n2 5\\r\\n6 2\\r\\n3 4\\r\\n5 3\\r\\n3 6\\r\\n4 5\\r\\n6 4\\r\\n5 6\\r\\n0.0884\\r\\n0.3825\\r\\n0.1591\\r\\n0.5495\\r\\n0.6195\\r\\n0.0398\\r\\n', 'output': ['0.0999455609 0.1735578254 0.1116896620 0.2498342178 0.2972772337 0.0676955002 ']}, {'input': '7 21 4 6\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n2 3\\r\\n4 2\\r\\n2 5\\r\\n2 6\\r\\n7 2\\r\\n3 4\\r\\n5 3\\r\\n3 6\\r\\n7 3\\r\\n4 5\\r\\n6 4\\r\\n7 4\\r\\n5 6\\r\\n5 7\\r\\n7 6\\r\\n0.5239\\r\\n0.3794\\r\\n0.2269\\r\\n0.2762\\r\\n0.4424\\r\\n0.9740\\r\\n0.3075\\r\\n', 'output': ['0.0232614097 0.0162516730 0.0115838868 0.0137365998 0.0188847358 0.9024755860 0.0138061087 ']}, {'input': '8 28 8 3\\r\\n1 2\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n8 1\\r\\n3 2\\r\\n4 2\\r\\n5 2\\r\\n6 2\\r\\n7 2\\r\\n2 8\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n8 3\\r\\n4 5\\r\\n4 6\\r\\n7 4\\r\\n8 4\\r\\n5 6\\r\\n7 5\\r\\n8 5\\r\\n7 6\\r\\n8 6\\r\\n7 8\\r\\n0.8613\\r\\n0.8282\\r\\n0.8938\\r\\n0.7578\\r\\n0.9470\\r\\n0.2132\\r\\n0.4324\\r\\n0.6849\\r\\n', 'output': ['0.1176195220 0.0958396019 0.3325863571 0.0677110954 0.2663958661 0.0152787192 0.0248059593 0.0797628790 ']}, {'input': '9 36 9 2\\r\\n1 2\\r\\n3 1\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n8 1\\r\\n1 9\\r\\n3 2\\r\\n2 4\\r\\n5 2\\r\\n6 2\\r\\n2 7\\r\\n8 2\\r\\n9 2\\r\\n4 3\\r\\n5 3\\r\\n6 3\\r\\n7 3\\r\\n8 3\\r\\n9 3\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n6 5\\r\\n7 5\\r\\n8 5\\r\\n5 9\\r\\n6 7\\r\\n6 8\\r\\n9 6\\r\\n8 7\\r\\n9 7\\r\\n8 9\\r\\n0.7668\\r\\n0.8405\\r\\n0.4250\\r\\n0.1929\\r\\n0.7617\\r\\n0.4558\\r\\n0.6702\\r\\n0.0859\\r\\n0.7827\\r\\n', 'output': ['0.1268098579 0.3129505364 0.0439299233 0.0262315144 0.1240254438 0.0473553980 0.0874473192 0.0210113664 0.2102386406 ']}, {'input': '10 45 1 2\\r\\n1 2\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n1 6\\r\\n1 7\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n6 2\\r\\n7 2\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n7 3\\r\\n8 3\\r\\n9 3\\r\\n3 10\\r\\n4 5\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n10 4\\r\\n6 5\\r\\n5 7\\r\\n8 5\\r\\n5 9\\r\\n10 5\\r\\n7 6\\r\\n8 6\\r\\n9 6\\r\\n10 6\\r\\n7 8\\r\\n9 7\\r\\n10 7\\r\\n8 9\\r\\n10 8\\r\\n9 10\\r\\n0.7632\\r\\n0.4462\\r\\n0.4321\\r\\n0.8036\\r\\n0.9500\\r\\n0.7438\\r\\n0.5196\\r\\n0.8022\\r\\n0.7419\\r\\n0.5806\\r\\n', 'output': ['0.1839204542 0.0471943915 0.0301277939 0.0985509080 0.3103919787 0.0755959621 0.0373307588 0.0978749428 0.0750231155 0.0439896946 ']}, {'input': '11 55 8 6\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n1 8\\r\\n1 9\\r\\n10 1\\r\\n11 1\\r\\n2 3\\r\\n4 2\\r\\n5 2\\r\\n2 6\\r\\n2 7\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n11 2\\r\\n3 4\\r\\n3 5\\r\\n6 3\\r\\n3 7\\r\\n8 3\\r\\n9 3\\r\\n10 3\\r\\n11 3\\r\\n5 4\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n4 9\\r\\n4 10\\r\\n4 11\\r\\n6 5\\r\\n5 7\\r\\n8 5\\r\\n9 5\\r\\n5 10\\r\\n11 5\\r\\n6 7\\r\\n6 8\\r\\n9 6\\r\\n10 6\\r\\n6 11\\r\\n8 7\\r\\n9 7\\r\\n10 7\\r\\n7 11\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n10 9\\r\\n9 11\\r\\n10 11\\r\\n0.1858\\r\\n0.1694\\r\\n0.0945\\r\\n0.2580\\r\\n0.7910\\r\\n0.7729\\r\\n0.4302\\r\\n0.8449\\r\\n0.6270\\r\\n0.4962\\r\\n0.8791\\r\\n', 'output': ['0.0217350602 0.0210042612 0.0179935711 0.0253227842 0.1194283296 0.1697890394 0.0373767031 0.2793005386 0.0638189548 0.0440643844 0.2001663735 ']}, {'input': '12 66 2 3\\r\\n2 1\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n1 7\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n11 1\\r\\n1 12\\r\\n3 2\\r\\n4 2\\r\\n5 2\\r\\n6 2\\r\\n2 7\\r\\n2 8\\r\\n2 9\\r\\n10 2\\r\\n2 11\\r\\n2 12\\r\\n4 3\\r\\n5 3\\r\\n3 6\\r\\n7 3\\r\\n3 8\\r\\n9 3\\r\\n10 3\\r\\n3 11\\r\\n12 3\\r\\n5 4\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n4 10\\r\\n4 11\\r\\n12 4\\r\\n5 6\\r\\n5 7\\r\\n8 5\\r\\n5 9\\r\\n10 5\\r\\n5 11\\r\\n5 12\\r\\n6 7\\r\\n8 6\\r\\n6 9\\r\\n6 10\\r\\n11 6\\r\\n6 12\\r\\n7 8\\r\\n9 7\\r\\n7 10\\r\\n7 11\\r\\n7 12\\r\\n8 9\\r\\n10 8\\r\\n11 8\\r\\n12 8\\r\\n9 10\\r\\n11 9\\r\\n12 9\\r\\n11 10\\r\\n12 10\\r\\n12 11\\r\\n0.1181\\r\\n0.1559\\r\\n0.6868\\r\\n0.4488\\r\\n0.9508\\r\\n0.7239\\r\\n0.4596\\r\\n0.1090\\r\\n0.8877\\r\\n0.7477\\r\\n0.6342\\r\\n0.4051\\r\\n', 'output': ['0.0167334785 0.0204621778 0.1507680976 0.0333634903 0.3205611704 0.0733633598 0.0342214963 0.0164411081 0.1691474546 0.0803859443 0.0543657157 0.0301865067 ']}, {'input': '2 1 2 2\\r\\n1 2\\r\\n0.4651\\r\\n0.4541\\r\\n', 'output': ['0.0000000000 1.0000000000 ']}, {'input': '3 2 2 3\\r\\n2 1\\r\\n3 1\\r\\n0.8433\\r\\n0.3166\\r\\n0.0498\\r\\n', 'output': ['0.9882627746 0.0114733647 0.0002638607 ']}, {'input': '4 3 3 2\\r\\n1 2\\r\\n2 3\\r\\n4 3\\r\\n0.6321\\r\\n0.1541\\r\\n0.8633\\r\\n0.4309\\r\\n', 'output': ['0.0530829653 0.0844848606 0.8583062902 0.0041258840 ']}, {'input': '5 4 1 1\\r\\n1 4\\r\\n2 3\\r\\n2 4\\r\\n5 2\\r\\n0.3986\\r\\n0.2139\\r\\n0.0845\\r\\n0.4852\\r\\n0.5779\\r\\n', 'output': ['1.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 ']}, {'input': '6 5 2 1\\r\\n1 6\\r\\n3 2\\r\\n3 6\\r\\n5 4\\r\\n4 6\\r\\n0.7506\\r\\n0.5129\\r\\n0.7965\\r\\n0.1712\\r\\n0.3321\\r\\n0.7033\\r\\n', 'output': ['0.0490630865 0.0083870955 0.3822667748 0.0174328057 0.0030541480 0.5397960896 ']}, {'input': '7 6 7 7\\r\\n1 3\\r\\n3 2\\r\\n7 3\\r\\n5 4\\r\\n6 4\\r\\n7 6\\r\\n0.1063\\r\\n0.5142\\r\\n0.8086\\r\\n0.2764\\r\\n0.1017\\r\\n0.2610\\r\\n0.6153\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '8 7 8 3\\r\\n3 1\\r\\n1 5\\r\\n2 6\\r\\n8 4\\r\\n5 6\\r\\n7 5\\r\\n5 8\\r\\n0.3036\\r\\n0.6397\\r\\n0.3751\\r\\n0.0160\\r\\n0.9384\\r\\n0.5140\\r\\n0.6922\\r\\n0.4464\\r\\n', 'output': ['0.0231073078 0.0004437071 0.0029737165 0.0000301038 0.9535554896 0.0022717175 0.0009690501 0.0166489075 ']}, {'input': '9 8 5 8\\r\\n1 2\\r\\n6 2\\r\\n2 7\\r\\n4 3\\r\\n5 3\\r\\n3 6\\r\\n6 8\\r\\n9 7\\r\\n0.5756\\r\\n0.9312\\r\\n0.4846\\r\\n0.7096\\r\\n0.9055\\r\\n0.5987\\r\\n0.6841\\r\\n0.6011\\r\\n0.5861\\r\\n', 'output': ['0.0004994782 0.3270344183 0.2258377173 0.0248431214 0.1829303180 0.2193026406 0.0065763617 0.0125278946 0.0004480498 ']}, {'input': '10 9 2 10\\r\\n1 2\\r\\n5 1\\r\\n7 1\\r\\n6 2\\r\\n3 5\\r\\n4 9\\r\\n5 10\\r\\n6 9\\r\\n10 8\\r\\n0.5376\\r\\n0.5747\\r\\n0.8019\\r\\n0.6922\\r\\n0.2890\\r\\n0.9193\\r\\n0.7521\\r\\n0.4436\\r\\n0.5970\\r\\n0.3173\\r\\n', 'output': ['0.2817412543 0.0959570556 0.0542629235 0.0025685657 0.1569610917 0.3021480932 0.0339864114 0.0084406954 0.0137071015 0.0502268077 ']}, {'input': '11 10 5 2\\r\\n11 1\\r\\n2 8\\r\\n2 10\\r\\n3 4\\r\\n9 4\\r\\n5 9\\r\\n6 9\\r\\n9 7\\r\\n11 9\\r\\n11 10\\r\\n0.0796\\r\\n0.0474\\r\\n0.2508\\r\\n0.6083\\r\\n0.7689\\r\\n0.1261\\r\\n0.2609\\r\\n0.4307\\r\\n0.8868\\r\\n0.3772\\r\\n0.6045\\r\\n', 'output': ['0.0003181172 0.0101075940 0.0001381672 0.0073377358 0.0067862223 0.0000641408 0.0001786077 0.0042257688 0.7637302105 0.0364209545 0.1706924813 ']}, {'input': '12 11 11 11\\r\\n3 1\\r\\n1 11\\r\\n3 2\\r\\n9 2\\r\\n2 10\\r\\n12 2\\r\\n3 5\\r\\n5 4\\r\\n8 5\\r\\n8 6\\r\\n12 7\\r\\n0.3563\\r\\n0.0931\\r\\n0.6741\\r\\n0.4162\\r\\n0.1307\\r\\n0.9049\\r\\n0.9435\\r\\n0.6656\\r\\n0.6276\\r\\n0.8688\\r\\n0.8109\\r\\n0.4977\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 ']}, {'input': '13 12 7 1\\r\\n2 1\\r\\n3 1\\r\\n6 1\\r\\n1 11\\r\\n2 9\\r\\n13 2\\r\\n3 10\\r\\n5 4\\r\\n4 11\\r\\n7 8\\r\\n7 13\\r\\n12 11\\r\\n0.1570\\r\\n0.0712\\r\\n0.0328\\r\\n0.5742\\r\\n0.0795\\r\\n0.6250\\r\\n0.7232\\r\\n0.8010\\r\\n0.8360\\r\\n0.1494\\r\\n0.3539\\r\\n0.8447\\r\\n0.9272\\r\\n', 'output': ['0.1034207245 0.0628088395 0.0093958837 0.0215220481 0.0001167809 0.0136922900 0.0642313143 0.0131051340 0.0511044118 0.0013590810 0.0568672232 0.0259479413 0.5764283278 ']}, {'input': '14 13 12 4\\r\\n1 6\\r\\n1 9\\r\\n9 2\\r\\n3 11\\r\\n4 12\\r\\n8 5\\r\\n5 11\\r\\n5 14\\r\\n10 7\\r\\n8 9\\r\\n13 9\\r\\n10 11\\r\\n12 11\\r\\n0.3228\\r\\n0.6911\\r\\n0.1498\\r\\n0.3435\\r\\n0.1763\\r\\n0.3718\\r\\n0.6798\\r\\n0.6485\\r\\n0.7299\\r\\n0.7418\\r\\n0.8041\\r\\n0.4249\\r\\n0.3820\\r\\n0.1464\\r\\n', 'output': ['0.0002725681 0.0001884812 0.0001796185 0.1521823863 0.0058382432 0.0000327578 0.0010923984 0.0053644997 0.0087619362 0.0145733462 0.3402217997 0.4711118932 0.0000364063 0.0001436652 ']}, {'input': '15 14 15 13\\r\\n4 1\\r\\n10 2\\r\\n3 12\\r\\n4 8\\r\\n12 4\\r\\n4 14\\r\\n7 5\\r\\n15 6\\r\\n7 9\\r\\n13 7\\r\\n14 7\\r\\n15 8\\r\\n12 10\\r\\n11 15\\r\\n0.5888\\r\\n0.1792\\r\\n0.7597\\r\\n0.6293\\r\\n0.3744\\r\\n0.3342\\r\\n0.8474\\r\\n0.8651\\r\\n0.1230\\r\\n0.4826\\r\\n0.0309\\r\\n0.3129\\r\\n0.9697\\r\\n0.4049\\r\\n0.0164\\r\\n', 'output': ['0.0045127683 0.0002130703 0.0079200770 0.2133409405 0.0005156567 0.0006969778 0.3990475462 0.1131589275 0.0000943589 0.0094364927 0.0000505592 0.0270366798 0.1760491983 0.0426472827 0.0052794640 ']}, {'input': '16 15 16 1\\r\\n1 3\\r\\n10 2\\r\\n9 3\\r\\n15 3\\r\\n4 10\\r\\n5 12\\r\\n16 5\\r\\n6 7\\r\\n6 15\\r\\n11 8\\r\\n11 9\\r\\n9 12\\r\\n14 9\\r\\n10 12\\r\\n10 13\\r\\n0.1478\\r\\n0.9068\\r\\n0.5458\\r\\n0.3318\\r\\n0.2632\\r\\n0.3624\\r\\n0.3189\\r\\n0.7264\\r\\n0.9796\\r\\n0.1311\\r\\n0.2947\\r\\n0.5834\\r\\n0.2095\\r\\n0.4419\\r\\n0.6588\\r\\n0.5525\\r\\n', 'output': ['0.0000811338 0.0093966712 0.0152177971 0.0004547303 0.0043006907 0.0013801376 0.0001128014 0.0001990500 0.9126720566 0.0104961528 0.0003134206 0.0369484070 0.0002490821 0.0000315496 0.0068014036 0.0013449155 ']}, {'input': '17 16 11 13\\r\\n3 1\\r\\n1 15\\r\\n2 15\\r\\n4 16\\r\\n5 8\\r\\n15 5\\r\\n8 6\\r\\n9 7\\r\\n10 7\\r\\n7 11\\r\\n17 7\\r\\n9 8\\r\\n12 8\\r\\n13 8\\r\\n10 16\\r\\n15 14\\r\\n0.7683\\r\\n0.9048\\r\\n0.1346\\r\\n0.4468\\r\\n0.1993\\r\\n0.7759\\r\\n0.8125\\r\\n0.2274\\r\\n0.1478\\r\\n0.8479\\r\\n0.9515\\r\\n0.7715\\r\\n0.3667\\r\\n0.0480\\r\\n0.0821\\r\\n0.6263\\r\\n0.2708\\r\\n', 'output': ['0.0258225311 0.0284330836 0.0000679627 0.0003573966 0.0152739625 0.0196276330 0.4722515893 0.1343480151 0.0275442145 0.0628400220 0.1521560220 0.0191064818 0.0031481221 0.0001752273 0.0307574428 0.0075784077 0.0005118859 ']}, {'input': '18 17 14 12\\r\\n1 2\\r\\n3 1\\r\\n18 1\\r\\n8 2\\r\\n9 2\\r\\n2 12\\r\\n2 17\\r\\n4 6\\r\\n15 4\\r\\n5 7\\r\\n7 6\\r\\n14 9\\r\\n12 10\\r\\n13 11\\r\\n11 16\\r\\n13 17\\r\\n14 15\\r\\n0.4024\\r\\n0.5565\\r\\n0.7870\\r\\n0.2691\\r\\n0.6727\\r\\n0.9621\\r\\n0.6842\\r\\n0.0271\\r\\n0.1097\\r\\n0.1747\\r\\n0.0784\\r\\n0.9550\\r\\n0.7523\\r\\n0.4284\\r\\n0.5238\\r\\n0.2709\\r\\n0.1595\\r\\n0.4590\\r\\n', 'output': ['0.0281574957 0.2581814330 0.0076272067 0.0107746580 0.0003467009 0.1714587133 0.0031642368 0.0000709113 0.0166962221 0.0000539712 0.0014416406 0.4106759112 0.0257975192 0.0287578136 0.0269904984 0.0002646607 0.0080077089 0.0015326985 ']}, {'input': '19 18 10 6\\r\\n5 1\\r\\n12 1\\r\\n7 2\\r\\n2 18\\r\\n15 3\\r\\n3 16\\r\\n4 6\\r\\n4 10\\r\\n6 9\\r\\n8 11\\r\\n13 9\\r\\n9 14\\r\\n10 11\\r\\n10 16\\r\\n18 11\\r\\n12 16\\r\\n17 16\\r\\n17 19\\r\\n0.6093\\r\\n0.4153\\r\\n0.2931\\r\\n0.6880\\r\\n0.0979\\r\\n0.9545\\r\\n0.2846\\r\\n0.5257\\r\\n0.5168\\r\\n0.2795\\r\\n0.4887\\r\\n0.3822\\r\\n0.2863\\r\\n0.5194\\r\\n0.3924\\r\\n0.8028\\r\\n0.8415\\r\\n0.2838\\r\\n0.9046\\r\\n', 'output': ['0.0054757481 0.0062808098 0.0031941783 0.1082773399 0.0000307445 0.5100921861 0.0003567821 0.0025634213 0.0108163903 0.0520824767 0.0484805903 0.0056216539 0.0001632695 0.0004991833 0.0004654536 0.1938285472 0.0350879002 0.0079000523 0.0087832726 ']}, {'input': '20 19 16 10\\r\\n2 1\\r\\n1 9\\r\\n1 10\\r\\n2 11\\r\\n2 16\\r\\n3 8\\r\\n15 3\\r\\n4 7\\r\\n4 14\\r\\n19 5\\r\\n6 16\\r\\n12 8\\r\\n15 13\\r\\n15 14\\r\\n15 19\\r\\n20 15\\r\\n19 16\\r\\n20 17\\r\\n18 20\\r\\n0.9546\\r\\n0.8460\\r\\n0.3530\\r\\n0.1547\\r\\n0.1812\\r\\n0.3792\\r\\n0.8502\\r\\n0.0898\\r\\n0.6804\\r\\n0.0465\\r\\n0.6699\\r\\n0.1623\\r\\n0.4908\\r\\n0.7436\\r\\n0.9748\\r\\n0.2965\\r\\n0.8528\\r\\n0.6024\\r\\n0.2343\\r\\n0.9496\\r\\n', 'output': ['0.4470817637 0.1925429406 0.0001522967 0.0001272041 0.0002374526 0.0009539965 0.0002531055 0.0000477577 0.0005965772 0.0000053211 0.0022254991 0.0000051402 0.0000145893 0.0010192506 0.3120036469 0.0168639725 0.0001460780 0.0000163715 0.0093450398 0.0163619965 ']}, {'input': '21 20 10 15\\r\\n1 4\\r\\n1 7\\r\\n1 13\\r\\n3 2\\r\\n3 13\\r\\n3 20\\r\\n14 4\\r\\n20 5\\r\\n6 17\\r\\n11 8\\r\\n13 9\\r\\n21 10\\r\\n11 14\\r\\n16 11\\r\\n12 14\\r\\n18 13\\r\\n21 14\\r\\n18 15\\r\\n17 16\\r\\n19 21\\r\\n0.5511\\r\\n0.4174\\r\\n0.1974\\r\\n0.1756\\r\\n0.4806\\r\\n0.7202\\r\\n0.0261\\r\\n0.1533\\r\\n0.5109\\r\\n0.9091\\r\\n0.1702\\r\\n0.0274\\r\\n0.6287\\r\\n0.4452\\r\\n0.8881\\r\\n0.4081\\r\\n0.2318\\r\\n0.9270\\r\\n0.3270\\r\\n0.5124\\r\\n0.6402\\r\\n', 'output': ['0.1274165708 0.0020068482 0.0221441417 0.0273841255 0.0011326856 0.0044150190 0.0000989026 0.0007239413 0.0032940960 0.0373926594 0.0268760758 0.0001121418 0.2255090088 0.1477723696 0.0142089213 0.0152217984 0.0061489761 0.2354718191 0.0009022427 0.0122643704 0.0895032861 ']}, {'input': '22 21 7 3\\r\\n1 16\\r\\n8 2\\r\\n3 17\\r\\n20 4\\r\\n12 5\\r\\n5 22\\r\\n13 6\\r\\n13 7\\r\\n14 7\\r\\n8 12\\r\\n9 10\\r\\n12 9\\r\\n9 13\\r\\n20 11\\r\\n13 20\\r\\n14 16\\r\\n14 17\\r\\n19 14\\r\\n22 15\\r\\n18 19\\r\\n21 18\\r\\n0.6643\\r\\n0.0936\\r\\n0.5519\\r\\n0.8542\\r\\n0.6411\\r\\n0.9560\\r\\n0.2451\\r\\n0.5841\\r\\n0.3590\\r\\n0.1352\\r\\n0.5336\\r\\n0.3901\\r\\n0.7602\\r\\n0.8653\\r\\n0.5635\\r\\n0.3840\\r\\n0.8625\\r\\n0.7766\\r\\n0.6941\\r\\n0.8028\\r\\n0.7482\\r\\n0.8431\\r\\n', 'output': ['0.0020725026 0.0000229554 0.0023344134 0.0034044638 0.0065601793 0.0429445422 0.0126807206 0.0037257267 0.0126648147 0.0001399510 0.0003551323 0.0103862706 0.1426738764 0.5077168905 0.0001223623 0.0058931744 0.1645677033 0.0138897777 0.0191701371 0.0396907000 0.0013049419 0.0076787635 ']}, {'input': '5 8 2 4\\r\\n1 2\\r\\n1 3\\r\\n5 1\\r\\n2 3\\r\\n2 4\\r\\n5 2\\r\\n4 3\\r\\n3 5\\r\\n0.2642\\r\\n0.6145\\r\\n0.1714\\r\\n0.5156\\r\\n0.7771\\r\\n', 'output': ['0.0469766543 0.4930268360 0.1177339858 0.1318957885 0.2103667354 ']}, {'input': '15 46 4 11\\r\\n1 3\\r\\n1 5\\r\\n6 1\\r\\n7 1\\r\\n1 8\\r\\n2 6\\r\\n8 2\\r\\n2 9\\r\\n12 2\\r\\n2 15\\r\\n3 4\\r\\n6 3\\r\\n3 12\\r\\n3 13\\r\\n3 14\\r\\n4 7\\r\\n9 4\\r\\n4 10\\r\\n4 14\\r\\n6 5\\r\\n5 7\\r\\n10 5\\r\\n12 5\\r\\n13 5\\r\\n5 14\\r\\n7 6\\r\\n9 6\\r\\n10 6\\r\\n6 13\\r\\n8 7\\r\\n7 13\\r\\n10 8\\r\\n8 13\\r\\n9 10\\r\\n9 13\\r\\n9 14\\r\\n11 10\\r\\n10 13\\r\\n10 15\\r\\n12 11\\r\\n11 15\\r\\n12 13\\r\\n15 12\\r\\n14 13\\r\\n15 13\\r\\n15 14\\r\\n0.2660\\r\\n0.9315\\r\\n0.7185\\r\\n0.9642\\r\\n0.1587\\r\\n0.2494\\r\\n0.3372\\r\\n0.0928\\r\\n0.3500\\r\\n0.0196\\r\\n0.2396\\r\\n0.8611\\r\\n0.5787\\r\\n0.4279\\r\\n0.0221\\r\\n', 'output': ['0.0079249483 0.1315277498 0.0526707222 0.5053657470 0.0138346726 0.0216010978 0.0163209733 0.0054495713 0.0182973209 0.0187149289 0.0026732816 0.0956673121 0.0798423781 0.0227469261 0.0073623701 ']}, {'input': '17 43 3 16\\r\\n8 1\\r\\n1 10\\r\\n1 12\\r\\n1 13\\r\\n6 2\\r\\n10 2\\r\\n12 2\\r\\n2 14\\r\\n15 2\\r\\n2 17\\r\\n6 3\\r\\n8 3\\r\\n12 3\\r\\n3 16\\r\\n4 5\\r\\n6 4\\r\\n4 7\\r\\n4 9\\r\\n13 4\\r\\n17 4\\r\\n6 5\\r\\n5 17\\r\\n6 11\\r\\n6 12\\r\\n6 17\\r\\n7 10\\r\\n7 12\\r\\n17 7\\r\\n9 8\\r\\n13 8\\r\\n8 15\\r\\n8 16\\r\\n17 8\\r\\n13 9\\r\\n9 16\\r\\n9 17\\r\\n10 15\\r\\n16 10\\r\\n17 11\\r\\n13 12\\r\\n16 12\\r\\n15 13\\r\\n15 14\\r\\n0.1613\\r\\n0.4247\\r\\n0.4271\\r\\n0.5636\\r\\n0.0214\\r\\n0.3172\\r\\n0.8156\\r\\n0.7663\\r\\n0.1132\\r\\n0.4127\\r\\n0.5416\\r\\n0.5220\\r\\n0.9366\\r\\n0.4426\\r\\n0.5884\\r\\n0.4569\\r\\n0.9613\\r\\n', 'output': ['0.0048722451 0.0160301298 0.0812776965 0.0169053414 0.0007186872 0.0187250770 0.0243168580 0.1375215020 0.0057046011 0.0143632541 0.0010119715 0.0786732010 0.1575241299 0.0011546527 0.0158649639 0.1204518537 0.3048838351 ']}, {'input': '6 6 6 3\\r\\n2 1\\r\\n5 1\\r\\n6 2\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n0.3429\\r\\n0.7018\\r\\n0.0699\\r\\n0.9602\\r\\n0.9585\\r\\n0.5070\\r\\n', 'output': ['0.0032904304 0.0076304590 0.0000112081 0.3439315417 0.6399603309 0.0051760299 ']}, {'input': '10 15 7 8\\r\\n3 1\\r\\n1 7\\r\\n2 4\\r\\n2 5\\r\\n9 2\\r\\n3 5\\r\\n7 3\\r\\n8 3\\r\\n4 7\\r\\n8 4\\r\\n5 7\\r\\n10 5\\r\\n6 8\\r\\n6 9\\r\\n9 8\\r\\n0.4654\\r\\n0.8489\\r\\n0.7851\\r\\n0.9790\\r\\n0.8126\\r\\n0.1443\\r\\n0.8385\\r\\n0.1355\\r\\n0.2672\\r\\n0.0631\\r\\n', 'output': ['0.0086717445 0.0591108269 0.1502231556 0.5026507699 0.0926399948 0.0018832329 0.1642324438 0.0138497445 0.0067226391 0.0000154479 ']}, {'input': '10 16 9 2\\r\\n3 1\\r\\n5 1\\r\\n9 1\\r\\n2 5\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n3 5\\r\\n6 3\\r\\n10 3\\r\\n4 6\\r\\n4 10\\r\\n5 10\\r\\n6 7\\r\\n8 7\\r\\n10 7\\r\\n0.8151\\r\\n0.2117\\r\\n0.5832\\r\\n0.0244\\r\\n0.1781\\r\\n0.5401\\r\\n0.4576\\r\\n0.1453\\r\\n0.3072\\r\\n0.2282\\r\\n', 'output': ['0.2858990309 0.1917730962 0.1409268921 0.0046323044 0.0671166968 0.0504929902 0.0497075403 0.0134447894 0.0942164861 0.1017901736 ']}, {'input': '22 30 9 17\\r\\n1 18\\r\\n1 20\\r\\n2 3\\r\\n5 2\\r\\n6 2\\r\\n2 11\\r\\n2 19\\r\\n6 4\\r\\n21 4\\r\\n22 4\\r\\n5 6\\r\\n8 5\\r\\n14 5\\r\\n10 6\\r\\n21 6\\r\\n22 7\\r\\n16 8\\r\\n9 12\\r\\n16 9\\r\\n18 10\\r\\n11 18\\r\\n11 22\\r\\n14 12\\r\\n13 22\\r\\n15 17\\r\\n21 15\\r\\n16 22\\r\\n22 17\\r\\n21 18\\r\\n20 22\\r\\n0.3290\\r\\n0.6966\\r\\n0.3952\\r\\n0.4713\\r\\n0.2462\\r\\n0.6482\\r\\n0.3471\\r\\n0.6729\\r\\n0.8845\\r\\n0.8581\\r\\n0.6991\\r\\n0.7279\\r\\n0.9751\\r\\n0.4603\\r\\n0.9591\\r\\n0.9890\\r\\n0.0230\\r\\n0.1388\\r\\n0.8745\\r\\n0.3635\\r\\n0.9655\\r\\n0.6980\\r\\n', 'output': ['0.0012630922 0.0302925914 0.0001113046 0.0058223640 0.0084588979 0.0305910518 0.0001130212 0.0050014407 0.0135265144 0.0105166645 0.0126985994 0.0054538897 0.0233929192 0.0031581259 0.0393763424 0.5293925504 0.0008728982 0.0041399002 0.0022100491 0.0013950475 0.1941228326 0.0780899026 ']}, {'input': '22 32 5 7\\r\\n1 3\\r\\n9 1\\r\\n16 2\\r\\n2 18\\r\\n3 5\\r\\n3 6\\r\\n3 10\\r\\n11 3\\r\\n13 3\\r\\n3 22\\r\\n22 4\\r\\n5 6\\r\\n5 8\\r\\n14 5\\r\\n5 15\\r\\n5 18\\r\\n19 6\\r\\n6 20\\r\\n6 21\\r\\n21 7\\r\\n8 18\\r\\n22 9\\r\\n10 13\\r\\n22 10\\r\\n15 11\\r\\n17 12\\r\\n12 20\\r\\n17 14\\r\\n16 22\\r\\n17 18\\r\\n17 21\\r\\n18 20\\r\\n0.9511\\r\\n0.6830\\r\\n0.2035\\r\\n0.9142\\r\\n0.6807\\r\\n0.6502\\r\\n0.3221\\r\\n0.0903\\r\\n0.1790\\r\\n0.2234\\r\\n0.9788\\r\\n0.6005\\r\\n0.3179\\r\\n0.2115\\r\\n0.8035\\r\\n0.8730\\r\\n0.0342\\r\\n0.2599\\r\\n0.7508\\r\\n0.1815\\r\\n0.6454\\r\\n0.7619\\r\\n', 'output': ['0.0547241979 0.0127153084 0.0441350190 0.0054767347 0.2027512578 0.1785779328 0.0009181368 0.0030386274 0.0012253232 0.0047658952 0.1614826534 0.0200979142 0.0024921791 0.0089124294 0.0185716675 0.0233837366 0.0345272095 0.0510312272 0.0049608897 0.0146416997 0.0870608962 0.0645090644 ']}, {'input': '21 23 21 17\\r\\n3 1\\r\\n3 2\\r\\n15 2\\r\\n2 20\\r\\n21 2\\r\\n16 3\\r\\n3 19\\r\\n4 8\\r\\n11 4\\r\\n17 4\\r\\n5 8\\r\\n5 9\\r\\n5 13\\r\\n6 16\\r\\n12 7\\r\\n16 7\\r\\n12 9\\r\\n10 17\\r\\n21 11\\r\\n12 18\\r\\n21 14\\r\\n15 17\\r\\n20 16\\r\\n0.0190\\r\\n0.5764\\r\\n0.1426\\r\\n0.4577\\r\\n0.7596\\r\\n0.5794\\r\\n0.5531\\r\\n0.9095\\r\\n0.6558\\r\\n0.8086\\r\\n0.2032\\r\\n0.4600\\r\\n0.9388\\r\\n0.1243\\r\\n0.2195\\r\\n0.7691\\r\\n0.1250\\r\\n0.1658\\r\\n0.4437\\r\\n0.7445\\r\\n0.0782\\r\\n', 'output': ['0.0000449260 0.2344991918 0.0251976569 0.1319548171 0.0505050501 0.0009015861 0.0110788625 0.1360612739 0.0147837889 0.0419721572 0.0374092349 0.0159331361 0.0176432803 0.0015421188 0.0322649361 0.1040211064 0.0579773602 0.0001476576 0.0017154120 0.0398347629 0.0445116844 ']}, {'input': '21 24 10 10\\r\\n11 1\\r\\n14 1\\r\\n4 2\\r\\n2 10\\r\\n3 5\\r\\n3 8\\r\\n3 9\\r\\n3 13\\r\\n3 17\\r\\n21 3\\r\\n4 9\\r\\n20 5\\r\\n6 12\\r\\n17 6\\r\\n9 7\\r\\n15 7\\r\\n7 19\\r\\n12 13\\r\\n12 15\\r\\n15 14\\r\\n21 14\\r\\n16 19\\r\\n18 20\\r\\n19 21\\r\\n0.4227\\r\\n0.9018\\r\\n0.8446\\r\\n0.0334\\r\\n0.8707\\r\\n0.5558\\r\\n0.4513\\r\\n0.1537\\r\\n0.9028\\r\\n0.2106\\r\\n0.0863\\r\\n0.4888\\r\\n0.3508\\r\\n0.3819\\r\\n0.2980\\r\\n0.6791\\r\\n0.6029\\r\\n0.0931\\r\\n0.8012\\r\\n0.9531\\r\\n0.0343\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 ']}, {'input': '21 25 20 3\\r\\n18 1\\r\\n12 2\\r\\n20 2\\r\\n11 3\\r\\n9 4\\r\\n12 4\\r\\n4 15\\r\\n4 20\\r\\n5 8\\r\\n5 15\\r\\n5 18\\r\\n5 20\\r\\n6 16\\r\\n20 7\\r\\n8 11\\r\\n13 8\\r\\n16 10\\r\\n10 19\\r\\n17 11\\r\\n12 15\\r\\n12 16\\r\\n12 21\\r\\n17 13\\r\\n14 18\\r\\n16 20\\r\\n0.3609\\r\\n0.9580\\r\\n0.3737\\r\\n0.7107\\r\\n0.6199\\r\\n0.4418\\r\\n0.0874\\r\\n0.5309\\r\\n0.3103\\r\\n0.9377\\r\\n0.8430\\r\\n0.9569\\r\\n0.5227\\r\\n0.6203\\r\\n0.4745\\r\\n0.4190\\r\\n0.6055\\r\\n0.8480\\r\\n0.8791\\r\\n0.4012\\r\\n0.3441\\r\\n', 'output': ['0.0001115124 0.0980714461 0.0002416850 0.0433302884 0.1021821003 0.0004704958 0.0000866423 0.0539373770 0.0001486904 0.0329442386 0.0940435447 0.4179895790 0.0123317109 0.0004663481 0.0186175265 0.0173859990 0.0115346705 0.0516017594 0.0012743943 0.0432054878 0.0000245034 ']}, {'input': '22 23 5 16\\r\\n20 1\\r\\n1 22\\r\\n2 3\\r\\n2 4\\r\\n3 13\\r\\n16 3\\r\\n4 6\\r\\n9 5\\r\\n5 22\\r\\n16 7\\r\\n9 8\\r\\n8 13\\r\\n10 16\\r\\n10 22\\r\\n11 17\\r\\n22 12\\r\\n14 15\\r\\n16 14\\r\\n14 18\\r\\n15 19\\r\\n16 21\\r\\n19 17\\r\\n22 17\\r\\n0.7393\\r\\n0.5325\\r\\n0.7522\\r\\n0.0343\\r\\n0.4628\\r\\n0.4713\\r\\n0.0749\\r\\n0.2350\\r\\n0.1396\\r\\n0.4916\\r\\n0.9203\\r\\n0.3179\\r\\n0.3378\\r\\n0.5174\\r\\n0.6705\\r\\n0.9649\\r\\n0.0823\\r\\n0.6370\\r\\n0.3185\\r\\n0.8381\\r\\n0.6475\\r\\n0.8173\\r\\n', 'output': ['0.0088399457 0.0037821738 0.0429781208 0.0005983597 0.0060422088 0.0002929921 0.0000030894 0.0040866917 0.0027909053 0.0135153898 0.0117585651 0.0001331749 0.0058057805 0.0119937930 0.0107339787 0.7106384041 0.0059716200 0.0009389289 0.0043356417 0.0022053815 0.0001722543 0.1523826002 ']}, {'input': '22 26 22 13\\r\\n1 2\\r\\n3 1\\r\\n1 21\\r\\n1 22\\r\\n9 2\\r\\n13 2\\r\\n2 17\\r\\n3 16\\r\\n11 4\\r\\n7 5\\r\\n12 5\\r\\n5 21\\r\\n6 12\\r\\n6 18\\r\\n11 7\\r\\n18 8\\r\\n9 11\\r\\n9 20\\r\\n10 13\\r\\n11 14\\r\\n11 18\\r\\n19 12\\r\\n15 22\\r\\n17 16\\r\\n18 22\\r\\n22 21\\r\\n0.1724\\r\\n0.6546\\r\\n0.1197\\r\\n0.5874\\r\\n0.2667\\r\\n0.1593\\r\\n0.5054\\r\\n0.1572\\r\\n0.1620\\r\\n0.2524\\r\\n0.6551\\r\\n0.5020\\r\\n0.1909\\r\\n0.2257\\r\\n0.7479\\r\\n0.6343\\r\\n0.6408\\r\\n0.7443\\r\\n0.3852\\r\\n0.8838\\r\\n0.2693\\r\\n0.3504\\r\\n', 'output': ['0.0845150088 0.2599909733 0.0097983608 0.0018923031 0.0239189914 0.0048992078 0.0160198485 0.0001406067 0.0247058927 0.0013355496 0.1609619578 0.0266705055 0.0121400170 0.0002951678 0.0125662798 0.0330821904 0.0360913305 0.1467042455 0.0007214805 0.0257426840 0.0360195050 0.0817878936 ']}, {'input': '22 25 2 7\\r\\n17 1\\r\\n2 16\\r\\n2 22\\r\\n14 3\\r\\n3 15\\r\\n20 3\\r\\n4 8\\r\\n4 12\\r\\n4 13\\r\\n13 5\\r\\n5 16\\r\\n16 6\\r\\n11 7\\r\\n17 7\\r\\n7 21\\r\\n9 15\\r\\n9 22\\r\\n14 10\\r\\n10 15\\r\\n10 17\\r\\n20 10\\r\\n16 12\\r\\n18 13\\r\\n18 16\\r\\n19 22\\r\\n0.9622\\r\\n0.8251\\r\\n0.9681\\r\\n0.2488\\r\\n0.3662\\r\\n0.5921\\r\\n0.5852\\r\\n0.0411\\r\\n0.2418\\r\\n0.0125\\r\\n0.2109\\r\\n0.8481\\r\\n0.3958\\r\\n0.1604\\r\\n0.8006\\r\\n0.9077\\r\\n0.7900\\r\\n0.7867\\r\\n0.8533\\r\\n0.6754\\r\\n0.7537\\r\\n0.1636\\r\\n', 'output': ['0.0397606434 0.0600590881 0.3808962043 0.0014000167 0.0011392632 0.0002081290 0.0143391730 0.0000065896 0.0122923376 0.0194932708 0.0001001379 0.0082802798 0.0024780234 0.0030637724 0.1211126468 0.1962584577 0.0804543597 0.0051630869 0.0166074944 0.0140209327 0.0017717043 0.0210943884 ']}, {'input': '20 23 17 3\\r\\n18 1\\r\\n2 6\\r\\n10 2\\r\\n3 8\\r\\n12 4\\r\\n8 5\\r\\n9 5\\r\\n17 5\\r\\n7 8\\r\\n15 7\\r\\n7 16\\r\\n9 18\\r\\n9 20\\r\\n10 15\\r\\n17 10\\r\\n11 14\\r\\n11 18\\r\\n13 12\\r\\n12 14\\r\\n14 13\\r\\n20 15\\r\\n16 19\\r\\n20 16\\r\\n0.3546\\r\\n0.6179\\r\\n0.2477\\r\\n0.4236\\r\\n0.8433\\r\\n0.0304\\r\\n0.5569\\r\\n0.4558\\r\\n0.8289\\r\\n0.1959\\r\\n0.2156\\r\\n0.3993\\r\\n0.0429\\r\\n0.9185\\r\\n0.1945\\r\\n0.8919\\r\\n0.8929\\r\\n0.3044\\r\\n0.2973\\r\\n0.1637\\r\\n', 'output': ['0.0003638881 0.0163339067 0.0008806850 0.0000274159 0.3262188951 0.0000246366 0.0536909073 0.0520393925 0.1051082156 0.0261569273 0.0020883748 0.0005216032 0.0000848720 0.0268220987 0.0257688220 0.1285525498 0.2126000150 0.0073895213 0.0000994338 0.0152278393 ']}, {'input': '20 21 5 14\\r\\n1 10\\r\\n13 1\\r\\n19 1\\r\\n2 11\\r\\n14 2\\r\\n2 17\\r\\n7 3\\r\\n13 3\\r\\n4 15\\r\\n14 5\\r\\n19 5\\r\\n6 16\\r\\n13 8\\r\\n16 9\\r\\n15 11\\r\\n11 19\\r\\n15 12\\r\\n16 12\\r\\n18 12\\r\\n15 20\\r\\n17 16\\r\\n0.5805\\r\\n0.3342\\r\\n0.7705\\r\\n0.7345\\r\\n0.1304\\r\\n0.3862\\r\\n0.6920\\r\\n0.6597\\r\\n0.6223\\r\\n0.0125\\r\\n0.4646\\r\\n0.9876\\r\\n0.7291\\r\\n0.3720\\r\\n0.2529\\r\\n0.1635\\r\\n0.5579\\r\\n0.4736\\r\\n0.6798\\r\\n0.1940\\r\\n', 'output': ['0.0290729509 0.0774707737 0.0048407220 0.0022268940 0.0840499631 0.0003440094 0.0003284870 0.0006200526 0.0008986063 0.0000093558 0.0641414110 0.2073528076 0.0194228289 0.2619733510 0.0124627336 0.0066013691 0.0179828402 0.0000059094 0.2100074063 0.0001875280 ']}, {'input': '20 25 1 12\\r\\n1 11\\r\\n12 1\\r\\n18 1\\r\\n4 2\\r\\n3 5\\r\\n3 7\\r\\n3 11\\r\\n14 3\\r\\n3 16\\r\\n17 3\\r\\n11 4\\r\\n4 16\\r\\n18 4\\r\\n5 6\\r\\n5 9\\r\\n10 5\\r\\n5 14\\r\\n5 20\\r\\n9 6\\r\\n17 6\\r\\n8 17\\r\\n12 10\\r\\n16 13\\r\\n14 19\\r\\n15 19\\r\\n0.5533\\r\\n0.6775\\r\\n0.4103\\r\\n0.7882\\r\\n0.9682\\r\\n0.0157\\r\\n0.8149\\r\\n0.2403\\r\\n0.4483\\r\\n0.1045\\r\\n0.7979\\r\\n0.0113\\r\\n0.9501\\r\\n0.7438\\r\\n0.6028\\r\\n0.8786\\r\\n0.8645\\r\\n0.8427\\r\\n0.2974\\r\\n0.2234\\r\\n', 'output': ['0.3836337810 0.0005834345 0.0229041026 0.0461902969 0.3196862695 0.0007593053 0.0018549199 0.0000123965 0.0005294816 0.0079362295 0.0669374470 0.0290126728 0.0053233321 0.0091036233 0.0001539764 0.0320034925 0.0145047810 0.0584237926 0.0004433762 0.0000032889 ']}, {'input': '16 17 7 1\\r\\n3 1\\r\\n1 8\\r\\n10 1\\r\\n1 11\\r\\n15 1\\r\\n15 2\\r\\n2 16\\r\\n3 9\\r\\n4 13\\r\\n15 5\\r\\n16 6\\r\\n11 7\\r\\n8 12\\r\\n9 10\\r\\n14 9\\r\\n10 11\\r\\n13 16\\r\\n0.4938\\r\\n0.1780\\r\\n0.5063\\r\\n0.2975\\r\\n0.0828\\r\\n0.7123\\r\\n0.6365\\r\\n0.3149\\r\\n0.1640\\r\\n0.2521\\r\\n0.8296\\r\\n0.9536\\r\\n0.2263\\r\\n0.1757\\r\\n0.7787\\r\\n0.4786\\r\\n', 'output': ['0.2282703609 0.0041908237 0.0240980923 0.0001797951 0.0000528785 0.0016021604 0.0137910440 0.0127072600 0.0229547593 0.0461207439 0.4817791924 0.0589129374 0.0014384188 0.0007747441 0.0911572626 0.0119695266 ']}, {'input': '18 19 4 11\\r\\n1 9\\r\\n2 8\\r\\n3 5\\r\\n3 6\\r\\n4 14\\r\\n9 5\\r\\n15 5\\r\\n8 6\\r\\n14 6\\r\\n12 7\\r\\n7 14\\r\\n7 17\\r\\n7 18\\r\\n8 18\\r\\n12 9\\r\\n14 10\\r\\n18 11\\r\\n14 13\\r\\n16 17\\r\\n0.3249\\r\\n0.3531\\r\\n0.3056\\r\\n0.4843\\r\\n0.7970\\r\\n0.5842\\r\\n0.5472\\r\\n0.4521\\r\\n0.2028\\r\\n0.7950\\r\\n0.1425\\r\\n0.4595\\r\\n0.1226\\r\\n0.0513\\r\\n0.5915\\r\\n0.2733\\r\\n0.7116\\r\\n0.0974\\r\\n', 'output': ['0.0011964236 0.0027831999 0.0140945800 0.0099145200 0.0983898473 0.1586288138 0.2962532703 0.0986994249 0.0196928959 0.0361972940 0.0015096894 0.0240101362 0.0015026996 0.1439159142 0.0012566904 0.0004912934 0.0439254039 0.0475379030 ']}, {'input': '19 20 7 13\\r\\n1 8\\r\\n10 1\\r\\n12 1\\r\\n1 13\\r\\n2 3\\r\\n2 13\\r\\n5 4\\r\\n11 4\\r\\n16 4\\r\\n5 7\\r\\n5 12\\r\\n5 13\\r\\n12 6\\r\\n9 10\\r\\n18 9\\r\\n15 10\\r\\n17 14\\r\\n14 19\\r\\n17 15\\r\\n16 17\\r\\n0.2124\\r\\n0.4090\\r\\n0.6285\\r\\n0.8759\\r\\n0.6790\\r\\n0.3161\\r\\n0.7681\\r\\n0.0730\\r\\n0.9793\\r\\n0.9753\\r\\n0.6491\\r\\n0.3349\\r\\n0.5286\\r\\n0.9760\\r\\n0.0743\\r\\n0.3295\\r\\n0.4276\\r\\n0.5759\\r\\n0.9666\\r\\n', 'output': ['0.0307369775 0.0185380486 0.0049762965 0.0801258012 0.4016568896 0.0012615177 0.0458257790 0.0001732439 0.0262190397 0.2072028585 0.0005878688 0.0347646012 0.1014805103 0.0361157326 0.0009321471 0.0019251201 0.0051159376 0.0000088276 0.0023528026 ']}, {'input': '19 45 4 19\\r\\n3 1\\r\\n4 1\\r\\n8 1\\r\\n9 1\\r\\n1 15\\r\\n4 2\\r\\n2 7\\r\\n8 2\\r\\n10 2\\r\\n12 2\\r\\n14 2\\r\\n6 4\\r\\n12 4\\r\\n4 14\\r\\n18 4\\r\\n8 5\\r\\n5 16\\r\\n17 5\\r\\n5 18\\r\\n6 15\\r\\n6 16\\r\\n6 17\\r\\n11 7\\r\\n7 12\\r\\n16 7\\r\\n19 7\\r\\n15 8\\r\\n9 10\\r\\n12 9\\r\\n9 14\\r\\n18 9\\r\\n19 9\\r\\n10 12\\r\\n14 10\\r\\n19 10\\r\\n11 13\\r\\n11 14\\r\\n15 11\\r\\n17 11\\r\\n11 19\\r\\n12 16\\r\\n15 13\\r\\n15 14\\r\\n14 17\\r\\n18 19\\r\\n0.4821\\r\\n0.4961\\r\\n0.0784\\r\\n0.4492\\r\\n0.7542\\r\\n0.2541\\r\\n0.9007\\r\\n0.3242\\r\\n0.3859\\r\\n0.2849\\r\\n0.4588\\r\\n0.9274\\r\\n0.1538\\r\\n0.4482\\r\\n0.6068\\r\\n0.9144\\r\\n0.8487\\r\\n0.1854\\r\\n0.4288\\r\\n', 'output': ['0.0266883400 0.0401292756 0.0000341093 0.0443828404 0.0331957500 0.0072730898 0.1489809719 0.0096326688 0.0407018303 0.0188112037 0.0334055826 0.2872048781 0.0010750781 0.0556489717 0.0481176365 0.0894552396 0.0587582081 0.0258448651 0.0306594604 ']}, {'input': '6 9 2 5\\r\\n1 2\\r\\n3 1\\r\\n6 1\\r\\n2 4\\r\\n5 2\\r\\n3 6\\r\\n5 4\\r\\n6 4\\r\\n6 5\\r\\n0.9796\\r\\n0.7061\\r\\n0.6636\\r\\n0.9200\\r\\n0.4454\\r\\n0.5302\\r\\n', 'output': ['0.3356041533 0.2464765303 0.0058143943 0.2843884681 0.0929849670 0.0347314871 ']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100 + 10;\nint n, m, a, b, c[N], d[N];\ndouble p[N];\nqueue<int> q;\ndouble dfs(int x, double pp) {\n  if (x == b) return pp;\n  double ret = 0.0;\n  for (int i = 1; i <= m; i++) {\n    int y = d[i];\n    if (c[i] == x)\n      ret += dfs(y, pp / (1 - p[x]));\n    else\n      ret += dfs(y, (pp * (1 - p[x])) / p[x]);\n  }\n  return ret;\n}\nint main() {\n  scanf(\"%d%d%d%d\", &n, &m, &a, &b);\n  for (int i = 1; i <= m; i++) {\n    scanf(\"%d%d\", &c[i], &d[i]);\n  }\n  for (int i = 1; i <= n; i++) scanf(\"%lf\", &p[i]);\n  double ans = dfs(a, 1.0);\n  printf(\"%.10f \", ans);\n  ans = dfs(b, 1.0);\n  printf(\"%.10f\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "ab410c6513a26ec3a41c63318dc38b78", "id": 37, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2700, "testcases": "[{'input': '2 1 1 2\\r\\n1 2\\r\\n0.5\\r\\n0.5\\r\\n', 'output': ['0.5000000000 0.5000000000 ']}, {'input': '4 4 1 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 1\\r\\n0.5\\r\\n0.5\\r\\n0.5\\r\\n0.5\\r\\n', 'output': ['0.3333333333 0.3333333333 0.1666666667 0.1666666667 ']}, {'input': '5 4 2 5\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n0.99\\r\\n0.6\\r\\n0.66\\r\\n0.23\\r\\n0.51\\r\\n', 'output': ['0.9976393323 0.0015805859 0.0000137404 0.0000015403 0.0007648011 ']}, {'input': '16 15 1 16\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n', 'output': ['0.0019644887 0.0325808635 0.0503829756 0.0645522937 0.0762658799 0.0856950294 0.0924815917 0.0960768773 0.0960768773 0.0924815917 0.0856950294 0.0762658799 0.0645522937 0.0503829756 0.0325808635 0.0019644887 ']}, {'input': '6 6 1 4\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 1\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.1535695632 0.1732152184 0.1732152184 0.1535695632 0.1732152184 0.1732152184 ']}, {'input': '2 1 1 2\\r\\n1 2\\r\\n0.142\\r\\n0.2\\r\\n', 'output': ['0.3983169705 0.6016830295 ']}, {'input': '6 5 2 1\\r\\n1 6\\r\\n3 2\\r\\n3 6\\r\\n5 4\\r\\n4 6\\r\\n0.7506\\r\\n0.5129\\r\\n0.7965\\r\\n0.1712\\r\\n0.3321\\r\\n0.7033\\r\\n', 'output': ['0.0490630865 0.0083870955 0.3822667748 0.0174328057 0.0030541480 0.5397960896 ']}, {'input': '10 9 2 10\\r\\n1 2\\r\\n5 1\\r\\n7 1\\r\\n6 2\\r\\n3 5\\r\\n4 9\\r\\n5 10\\r\\n6 9\\r\\n10 8\\r\\n0.5376\\r\\n0.5747\\r\\n0.8019\\r\\n0.6922\\r\\n0.2890\\r\\n0.9193\\r\\n0.7521\\r\\n0.4436\\r\\n0.5970\\r\\n0.3173\\r\\n', 'output': ['0.2817412543 0.0959570556 0.0542629235 0.0025685657 0.1569610917 0.3021480932 0.0339864114 0.0084406954 0.0137071015 0.0502268077 ']}, {'input': '15 21 5 15\\r\\n6 1\\r\\n1 10\\r\\n11 1\\r\\n2 3\\r\\n2 8\\r\\n11 2\\r\\n2 14\\r\\n3 11\\r\\n15 3\\r\\n4 9\\r\\n10 4\\r\\n11 4\\r\\n4 12\\r\\n5 8\\r\\n5 12\\r\\n13 5\\r\\n8 7\\r\\n8 13\\r\\n14 8\\r\\n9 12\\r\\n13 9\\r\\n0.0984\\r\\n0.9472\\r\\n0.0555\\r\\n0.1818\\r\\n0.6887\\r\\n0.2633\\r\\n0.6266\\r\\n0.7277\\r\\n0.4906\\r\\n0.5204\\r\\n0.3271\\r\\n0.8406\\r\\n0.1905\\r\\n0.8913\\r\\n0.1490\\r\\n', 'output': ['0.0077226021 0.5303336625 0.0054411451 0.0303793551 0.0404230994 0.0005350284 0.0013754254 0.1413320042 0.0265814303 0.0120371707 0.0322545543 0.1066358507 0.0104058084 0.0543251267 0.0002177368 ']}, {'input': '16 16 11 1\\r\\n15 1\\r\\n5 2\\r\\n10 2\\r\\n15 2\\r\\n4 3\\r\\n3 10\\r\\n3 11\\r\\n6 10\\r\\n9 7\\r\\n7 15\\r\\n12 8\\r\\n8 16\\r\\n13 9\\r\\n13 10\\r\\n16 11\\r\\n15 14\\r\\n0.7912\\r\\n0.2716\\r\\n0.2423\\r\\n0.7215\\r\\n0.3998\\r\\n0.3062\\r\\n0.0161\\r\\n0.9557\\r\\n0.8075\\r\\n0.0797\\r\\n0.8873\\r\\n0.1631\\r\\n0.8815\\r\\n0.8284\\r\\n0.4164\\r\\n0.0509\\r\\n', 'output': ['0.0153633854 0.0582037768 0.0644798137 0.0179019027 0.0038888919 0.0036876616 0.0067662879 0.1649462155 0.0713890711 0.0806917881 0.2077252654 0.0000190454 0.1796086267 0.0191451875 0.0980830806 0.0080999998 ']}, {'input': '22 21 1 22\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0012434856 0.0099719410 0.0199076715 0.0297915885 0.0395249019 0.0489267177 0.0577200158 0.0655362954 0.0719467411 0.0765217103 0.0789089312 0.0789089312 0.0765217103 0.0719467411 0.0655362954 0.0577200158 0.0489267177 0.0395249019 0.0297915885 0.0199076715 0.0099719410 0.0012434856 ']}, {'input': '22 23 5 16\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n22 1\\r\\n1 11\\r\\n0.01\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0009049944 0.0654619724 0.0448599020 0.0342094033 0.0283295356 0.0266503813 0.0288053138 0.0342798044 0.0427189992 0.0557007096 0.1605214977 0.0643520452 0.0514169497 0.0415243077 0.0342155622 0.0300098388 0.0291162176 0.0313210001 0.0360195732 0.0424281241 0.0505451222 0.0666087455 ']}, {'input': '22 22 1 13\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n22 1\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0387342340 0.0376245603 0.0385434630 0.0409311653 0.0438884638 0.0463138950 0.0472507131 0.0463138950 0.0438884638 0.0409311653 0.0385434630 0.0376245603 0.0387342340 0.0420477574 0.0472178012 0.0531433058 0.0579906815 0.0598786325 0.0579906815 0.0531433058 0.0472178012 0.0420477574 ']}, {'input': '10 45 1 10\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n1 8\\r\\n1 9\\r\\n1 10\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n2 8\\r\\n2 9\\r\\n2 10\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n3 8\\r\\n3 9\\r\\n3 10\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n4 8\\r\\n4 9\\r\\n4 10\\r\\n5 6\\r\\n5 7\\r\\n5 8\\r\\n5 9\\r\\n5 10\\r\\n6 7\\r\\n6 8\\r\\n6 9\\r\\n6 10\\r\\n7 8\\r\\n7 9\\r\\n7 10\\r\\n8 9\\r\\n8 10\\r\\n9 10\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n', 'output': ['0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 ']}, {'input': '1 0 1 1\\r\\n0.99\\r\\n', 'output': ['1.0000000000 ']}, {'input': '22 21 1 22\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n11 1\\r\\n12 1\\r\\n13 1\\r\\n14 1\\r\\n15 1\\r\\n16 1\\r\\n17 1\\r\\n18 1\\r\\n19 1\\r\\n20 1\\r\\n21 1\\r\\n22 2\\r\\n0.01\\r\\n0.02\\r\\n0.03\\r\\n0.04\\r\\n0.05\\r\\n0.06\\r\\n0.07\\r\\n0.08\\r\\n0.09\\r\\n0.10\\r\\n0.11\\r\\n0.12\\r\\n0.13\\r\\n0.14\\r\\n0.15\\r\\n0.16\\r\\n0.17\\r\\n0.18\\r\\n0.19\\r\\n0.20\\r\\n0.21\\r\\n0.22\\r\\n', 'output': ['0.9035493892 0.0711125603 0.0002295956 0.0003073428 0.0003857694 0.0004649204 0.0005448425 0.0006255834 0.0007071929 0.0007897222 0.0008732245 0.0009577547 0.0010433701 0.0011301299 0.0012180959 0.0013073322 0.0013979057 0.0014898861 0.0015833460 0.0016783614 0.0017750116 0.0068286632 ']}, {'input': '15 14 1 8\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.1687647168 0.0613502671 0.0232964298 0.0159426870 0.0100709787 0.0077507094 0.0071633056 0.0059104630 0.1744057974 0.0870855985 0.0630100398 0.0623589182 0.1454718455 0.1071447000 0.0602735434 ']}, {'input': '15 14 13 13\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 0.0000000000 ']}, {'input': '15 14 15 15\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '14 43 1 14\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n5 6\\r\\n5 7\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n8 12\\r\\n8 13\\r\\n8 14\\r\\n9 10\\r\\n9 11\\r\\n9 12\\r\\n9 13\\r\\n9 14\\r\\n10 11\\r\\n10 12\\r\\n10 13\\r\\n10 14\\r\\n11 12\\r\\n11 13\\r\\n11 14\\r\\n12 13\\r\\n12 14\\r\\n13 14\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0526959074 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.1878457103 0.1878457103 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0526959074 ']}, {'input': '16 57 1 16\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n1 16\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n2 16\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n3 16\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n4 16\\r\\n5 6\\r\\n5 7\\r\\n5 16\\r\\n6 7\\r\\n6 16\\r\\n7 16\\r\\n7 8\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n8 12\\r\\n8 13\\r\\n8 14\\r\\n8 15\\r\\n9 10\\r\\n9 11\\r\\n9 12\\r\\n9 13\\r\\n9 14\\r\\n9 15\\r\\n10 11\\r\\n10 12\\r\\n10 13\\r\\n10 14\\r\\n10 15\\r\\n11 12\\r\\n11 13\\r\\n11 14\\r\\n11 15\\r\\n12 13\\r\\n12 14\\r\\n12 15\\r\\n13 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.89\\r\\n0.79\\r\\n0.69\\r\\n0.59\\r\\n0.49\\r\\n0.39\\r\\n0.29\\r\\n0.19\\r\\n0.19\\r\\n0.29\\r\\n0.39\\r\\n0.49\\r\\n0.59\\r\\n0.69\\r\\n0.79\\r\\n', 'output': ['0.8601065040 0.0421912132 0.0216044923 0.0139824673 0.0099982535 0.0075466288 0.0077197332 0.0018809771 0.0005077937 0.0005077937 0.0006335685 0.0007997585 0.0010295784 0.0013684205 0.0019187930 0.0282040246 ']}, {'input': '2 1 2 2\\r\\n1 2\\r\\n0.4651\\r\\n0.4541\\r\\n', 'output': ['0.0000000000 1.0000000000 ']}, {'input': '3 3 3 3\\r\\n1 2\\r\\n1 3\\r\\n2 3\\r\\n0.7518\\r\\n0.3684\\r\\n0.0278\\r\\n', 'output': ['0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '4 6 4 2\\r\\n1 2\\r\\n3 1\\r\\n4 1\\r\\n2 3\\r\\n4 2\\r\\n3 4\\r\\n0.8837\\r\\n0.8531\\r\\n0.1495\\r\\n0.1412\\r\\n', 'output': ['0.3201347837 0.6091104909 0.0388222283 0.0319324970 ']}, {'input': '5 10 4 1\\r\\n1 2\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n3 2\\r\\n2 4\\r\\n2 5\\r\\n4 3\\r\\n3 5\\r\\n5 4\\r\\n0.1234\\r\\n0.3871\\r\\n0.0253\\r\\n0.4658\\r\\n0.4364\\r\\n', 'output': ['0.1115667934 0.2114914579 0.1016822203 0.3398765632 0.2353829653 ']}, {'input': '6 15 3 6\\r\\n2 1\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n2 3\\r\\n4 2\\r\\n2 5\\r\\n6 2\\r\\n3 4\\r\\n5 3\\r\\n3 6\\r\\n4 5\\r\\n6 4\\r\\n5 6\\r\\n0.0884\\r\\n0.3825\\r\\n0.1591\\r\\n0.5495\\r\\n0.6195\\r\\n0.0398\\r\\n', 'output': ['0.0999455609 0.1735578254 0.1116896620 0.2498342178 0.2972772337 0.0676955002 ']}, {'input': '7 21 4 6\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n2 3\\r\\n4 2\\r\\n2 5\\r\\n2 6\\r\\n7 2\\r\\n3 4\\r\\n5 3\\r\\n3 6\\r\\n7 3\\r\\n4 5\\r\\n6 4\\r\\n7 4\\r\\n5 6\\r\\n5 7\\r\\n7 6\\r\\n0.5239\\r\\n0.3794\\r\\n0.2269\\r\\n0.2762\\r\\n0.4424\\r\\n0.9740\\r\\n0.3075\\r\\n', 'output': ['0.0232614097 0.0162516730 0.0115838868 0.0137365998 0.0188847358 0.9024755860 0.0138061087 ']}, {'input': '8 28 8 3\\r\\n1 2\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n8 1\\r\\n3 2\\r\\n4 2\\r\\n5 2\\r\\n6 2\\r\\n7 2\\r\\n2 8\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n8 3\\r\\n4 5\\r\\n4 6\\r\\n7 4\\r\\n8 4\\r\\n5 6\\r\\n7 5\\r\\n8 5\\r\\n7 6\\r\\n8 6\\r\\n7 8\\r\\n0.8613\\r\\n0.8282\\r\\n0.8938\\r\\n0.7578\\r\\n0.9470\\r\\n0.2132\\r\\n0.4324\\r\\n0.6849\\r\\n', 'output': ['0.1176195220 0.0958396019 0.3325863571 0.0677110954 0.2663958661 0.0152787192 0.0248059593 0.0797628790 ']}, {'input': '9 36 9 2\\r\\n1 2\\r\\n3 1\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n8 1\\r\\n1 9\\r\\n3 2\\r\\n2 4\\r\\n5 2\\r\\n6 2\\r\\n2 7\\r\\n8 2\\r\\n9 2\\r\\n4 3\\r\\n5 3\\r\\n6 3\\r\\n7 3\\r\\n8 3\\r\\n9 3\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n6 5\\r\\n7 5\\r\\n8 5\\r\\n5 9\\r\\n6 7\\r\\n6 8\\r\\n9 6\\r\\n8 7\\r\\n9 7\\r\\n8 9\\r\\n0.7668\\r\\n0.8405\\r\\n0.4250\\r\\n0.1929\\r\\n0.7617\\r\\n0.4558\\r\\n0.6702\\r\\n0.0859\\r\\n0.7827\\r\\n', 'output': ['0.1268098579 0.3129505364 0.0439299233 0.0262315144 0.1240254438 0.0473553980 0.0874473192 0.0210113664 0.2102386406 ']}, {'input': '10 45 1 2\\r\\n1 2\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n1 6\\r\\n1 7\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n6 2\\r\\n7 2\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n7 3\\r\\n8 3\\r\\n9 3\\r\\n3 10\\r\\n4 5\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n10 4\\r\\n6 5\\r\\n5 7\\r\\n8 5\\r\\n5 9\\r\\n10 5\\r\\n7 6\\r\\n8 6\\r\\n9 6\\r\\n10 6\\r\\n7 8\\r\\n9 7\\r\\n10 7\\r\\n8 9\\r\\n10 8\\r\\n9 10\\r\\n0.7632\\r\\n0.4462\\r\\n0.4321\\r\\n0.8036\\r\\n0.9500\\r\\n0.7438\\r\\n0.5196\\r\\n0.8022\\r\\n0.7419\\r\\n0.5806\\r\\n', 'output': ['0.1839204542 0.0471943915 0.0301277939 0.0985509080 0.3103919787 0.0755959621 0.0373307588 0.0978749428 0.0750231155 0.0439896946 ']}, {'input': '11 55 8 6\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n1 8\\r\\n1 9\\r\\n10 1\\r\\n11 1\\r\\n2 3\\r\\n4 2\\r\\n5 2\\r\\n2 6\\r\\n2 7\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n11 2\\r\\n3 4\\r\\n3 5\\r\\n6 3\\r\\n3 7\\r\\n8 3\\r\\n9 3\\r\\n10 3\\r\\n11 3\\r\\n5 4\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n4 9\\r\\n4 10\\r\\n4 11\\r\\n6 5\\r\\n5 7\\r\\n8 5\\r\\n9 5\\r\\n5 10\\r\\n11 5\\r\\n6 7\\r\\n6 8\\r\\n9 6\\r\\n10 6\\r\\n6 11\\r\\n8 7\\r\\n9 7\\r\\n10 7\\r\\n7 11\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n10 9\\r\\n9 11\\r\\n10 11\\r\\n0.1858\\r\\n0.1694\\r\\n0.0945\\r\\n0.2580\\r\\n0.7910\\r\\n0.7729\\r\\n0.4302\\r\\n0.8449\\r\\n0.6270\\r\\n0.4962\\r\\n0.8791\\r\\n', 'output': ['0.0217350602 0.0210042612 0.0179935711 0.0253227842 0.1194283296 0.1697890394 0.0373767031 0.2793005386 0.0638189548 0.0440643844 0.2001663735 ']}, {'input': '12 66 2 3\\r\\n2 1\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n1 7\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n11 1\\r\\n1 12\\r\\n3 2\\r\\n4 2\\r\\n5 2\\r\\n6 2\\r\\n2 7\\r\\n2 8\\r\\n2 9\\r\\n10 2\\r\\n2 11\\r\\n2 12\\r\\n4 3\\r\\n5 3\\r\\n3 6\\r\\n7 3\\r\\n3 8\\r\\n9 3\\r\\n10 3\\r\\n3 11\\r\\n12 3\\r\\n5 4\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n4 10\\r\\n4 11\\r\\n12 4\\r\\n5 6\\r\\n5 7\\r\\n8 5\\r\\n5 9\\r\\n10 5\\r\\n5 11\\r\\n5 12\\r\\n6 7\\r\\n8 6\\r\\n6 9\\r\\n6 10\\r\\n11 6\\r\\n6 12\\r\\n7 8\\r\\n9 7\\r\\n7 10\\r\\n7 11\\r\\n7 12\\r\\n8 9\\r\\n10 8\\r\\n11 8\\r\\n12 8\\r\\n9 10\\r\\n11 9\\r\\n12 9\\r\\n11 10\\r\\n12 10\\r\\n12 11\\r\\n0.1181\\r\\n0.1559\\r\\n0.6868\\r\\n0.4488\\r\\n0.9508\\r\\n0.7239\\r\\n0.4596\\r\\n0.1090\\r\\n0.8877\\r\\n0.7477\\r\\n0.6342\\r\\n0.4051\\r\\n', 'output': ['0.0167334785 0.0204621778 0.1507680976 0.0333634903 0.3205611704 0.0733633598 0.0342214963 0.0164411081 0.1691474546 0.0803859443 0.0543657157 0.0301865067 ']}, {'input': '2 1 2 2\\r\\n1 2\\r\\n0.4651\\r\\n0.4541\\r\\n', 'output': ['0.0000000000 1.0000000000 ']}, {'input': '3 2 2 3\\r\\n2 1\\r\\n3 1\\r\\n0.8433\\r\\n0.3166\\r\\n0.0498\\r\\n', 'output': ['0.9882627746 0.0114733647 0.0002638607 ']}, {'input': '4 3 3 2\\r\\n1 2\\r\\n2 3\\r\\n4 3\\r\\n0.6321\\r\\n0.1541\\r\\n0.8633\\r\\n0.4309\\r\\n', 'output': ['0.0530829653 0.0844848606 0.8583062902 0.0041258840 ']}, {'input': '5 4 1 1\\r\\n1 4\\r\\n2 3\\r\\n2 4\\r\\n5 2\\r\\n0.3986\\r\\n0.2139\\r\\n0.0845\\r\\n0.4852\\r\\n0.5779\\r\\n', 'output': ['1.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 ']}, {'input': '6 5 2 1\\r\\n1 6\\r\\n3 2\\r\\n3 6\\r\\n5 4\\r\\n4 6\\r\\n0.7506\\r\\n0.5129\\r\\n0.7965\\r\\n0.1712\\r\\n0.3321\\r\\n0.7033\\r\\n', 'output': ['0.0490630865 0.0083870955 0.3822667748 0.0174328057 0.0030541480 0.5397960896 ']}, {'input': '7 6 7 7\\r\\n1 3\\r\\n3 2\\r\\n7 3\\r\\n5 4\\r\\n6 4\\r\\n7 6\\r\\n0.1063\\r\\n0.5142\\r\\n0.8086\\r\\n0.2764\\r\\n0.1017\\r\\n0.2610\\r\\n0.6153\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '8 7 8 3\\r\\n3 1\\r\\n1 5\\r\\n2 6\\r\\n8 4\\r\\n5 6\\r\\n7 5\\r\\n5 8\\r\\n0.3036\\r\\n0.6397\\r\\n0.3751\\r\\n0.0160\\r\\n0.9384\\r\\n0.5140\\r\\n0.6922\\r\\n0.4464\\r\\n', 'output': ['0.0231073078 0.0004437071 0.0029737165 0.0000301038 0.9535554896 0.0022717175 0.0009690501 0.0166489075 ']}, {'input': '9 8 5 8\\r\\n1 2\\r\\n6 2\\r\\n2 7\\r\\n4 3\\r\\n5 3\\r\\n3 6\\r\\n6 8\\r\\n9 7\\r\\n0.5756\\r\\n0.9312\\r\\n0.4846\\r\\n0.7096\\r\\n0.9055\\r\\n0.5987\\r\\n0.6841\\r\\n0.6011\\r\\n0.5861\\r\\n', 'output': ['0.0004994782 0.3270344183 0.2258377173 0.0248431214 0.1829303180 0.2193026406 0.0065763617 0.0125278946 0.0004480498 ']}, {'input': '10 9 2 10\\r\\n1 2\\r\\n5 1\\r\\n7 1\\r\\n6 2\\r\\n3 5\\r\\n4 9\\r\\n5 10\\r\\n6 9\\r\\n10 8\\r\\n0.5376\\r\\n0.5747\\r\\n0.8019\\r\\n0.6922\\r\\n0.2890\\r\\n0.9193\\r\\n0.7521\\r\\n0.4436\\r\\n0.5970\\r\\n0.3173\\r\\n', 'output': ['0.2817412543 0.0959570556 0.0542629235 0.0025685657 0.1569610917 0.3021480932 0.0339864114 0.0084406954 0.0137071015 0.0502268077 ']}, {'input': '11 10 5 2\\r\\n11 1\\r\\n2 8\\r\\n2 10\\r\\n3 4\\r\\n9 4\\r\\n5 9\\r\\n6 9\\r\\n9 7\\r\\n11 9\\r\\n11 10\\r\\n0.0796\\r\\n0.0474\\r\\n0.2508\\r\\n0.6083\\r\\n0.7689\\r\\n0.1261\\r\\n0.2609\\r\\n0.4307\\r\\n0.8868\\r\\n0.3772\\r\\n0.6045\\r\\n', 'output': ['0.0003181172 0.0101075940 0.0001381672 0.0073377358 0.0067862223 0.0000641408 0.0001786077 0.0042257688 0.7637302105 0.0364209545 0.1706924813 ']}, {'input': '12 11 11 11\\r\\n3 1\\r\\n1 11\\r\\n3 2\\r\\n9 2\\r\\n2 10\\r\\n12 2\\r\\n3 5\\r\\n5 4\\r\\n8 5\\r\\n8 6\\r\\n12 7\\r\\n0.3563\\r\\n0.0931\\r\\n0.6741\\r\\n0.4162\\r\\n0.1307\\r\\n0.9049\\r\\n0.9435\\r\\n0.6656\\r\\n0.6276\\r\\n0.8688\\r\\n0.8109\\r\\n0.4977\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 ']}, {'input': '13 12 7 1\\r\\n2 1\\r\\n3 1\\r\\n6 1\\r\\n1 11\\r\\n2 9\\r\\n13 2\\r\\n3 10\\r\\n5 4\\r\\n4 11\\r\\n7 8\\r\\n7 13\\r\\n12 11\\r\\n0.1570\\r\\n0.0712\\r\\n0.0328\\r\\n0.5742\\r\\n0.0795\\r\\n0.6250\\r\\n0.7232\\r\\n0.8010\\r\\n0.8360\\r\\n0.1494\\r\\n0.3539\\r\\n0.8447\\r\\n0.9272\\r\\n', 'output': ['0.1034207245 0.0628088395 0.0093958837 0.0215220481 0.0001167809 0.0136922900 0.0642313143 0.0131051340 0.0511044118 0.0013590810 0.0568672232 0.0259479413 0.5764283278 ']}, {'input': '14 13 12 4\\r\\n1 6\\r\\n1 9\\r\\n9 2\\r\\n3 11\\r\\n4 12\\r\\n8 5\\r\\n5 11\\r\\n5 14\\r\\n10 7\\r\\n8 9\\r\\n13 9\\r\\n10 11\\r\\n12 11\\r\\n0.3228\\r\\n0.6911\\r\\n0.1498\\r\\n0.3435\\r\\n0.1763\\r\\n0.3718\\r\\n0.6798\\r\\n0.6485\\r\\n0.7299\\r\\n0.7418\\r\\n0.8041\\r\\n0.4249\\r\\n0.3820\\r\\n0.1464\\r\\n', 'output': ['0.0002725681 0.0001884812 0.0001796185 0.1521823863 0.0058382432 0.0000327578 0.0010923984 0.0053644997 0.0087619362 0.0145733462 0.3402217997 0.4711118932 0.0000364063 0.0001436652 ']}, {'input': '15 14 15 13\\r\\n4 1\\r\\n10 2\\r\\n3 12\\r\\n4 8\\r\\n12 4\\r\\n4 14\\r\\n7 5\\r\\n15 6\\r\\n7 9\\r\\n13 7\\r\\n14 7\\r\\n15 8\\r\\n12 10\\r\\n11 15\\r\\n0.5888\\r\\n0.1792\\r\\n0.7597\\r\\n0.6293\\r\\n0.3744\\r\\n0.3342\\r\\n0.8474\\r\\n0.8651\\r\\n0.1230\\r\\n0.4826\\r\\n0.0309\\r\\n0.3129\\r\\n0.9697\\r\\n0.4049\\r\\n0.0164\\r\\n', 'output': ['0.0045127683 0.0002130703 0.0079200770 0.2133409405 0.0005156567 0.0006969778 0.3990475462 0.1131589275 0.0000943589 0.0094364927 0.0000505592 0.0270366798 0.1760491983 0.0426472827 0.0052794640 ']}, {'input': '16 15 16 1\\r\\n1 3\\r\\n10 2\\r\\n9 3\\r\\n15 3\\r\\n4 10\\r\\n5 12\\r\\n16 5\\r\\n6 7\\r\\n6 15\\r\\n11 8\\r\\n11 9\\r\\n9 12\\r\\n14 9\\r\\n10 12\\r\\n10 13\\r\\n0.1478\\r\\n0.9068\\r\\n0.5458\\r\\n0.3318\\r\\n0.2632\\r\\n0.3624\\r\\n0.3189\\r\\n0.7264\\r\\n0.9796\\r\\n0.1311\\r\\n0.2947\\r\\n0.5834\\r\\n0.2095\\r\\n0.4419\\r\\n0.6588\\r\\n0.5525\\r\\n', 'output': ['0.0000811338 0.0093966712 0.0152177971 0.0004547303 0.0043006907 0.0013801376 0.0001128014 0.0001990500 0.9126720566 0.0104961528 0.0003134206 0.0369484070 0.0002490821 0.0000315496 0.0068014036 0.0013449155 ']}, {'input': '17 16 11 13\\r\\n3 1\\r\\n1 15\\r\\n2 15\\r\\n4 16\\r\\n5 8\\r\\n15 5\\r\\n8 6\\r\\n9 7\\r\\n10 7\\r\\n7 11\\r\\n17 7\\r\\n9 8\\r\\n12 8\\r\\n13 8\\r\\n10 16\\r\\n15 14\\r\\n0.7683\\r\\n0.9048\\r\\n0.1346\\r\\n0.4468\\r\\n0.1993\\r\\n0.7759\\r\\n0.8125\\r\\n0.2274\\r\\n0.1478\\r\\n0.8479\\r\\n0.9515\\r\\n0.7715\\r\\n0.3667\\r\\n0.0480\\r\\n0.0821\\r\\n0.6263\\r\\n0.2708\\r\\n', 'output': ['0.0258225311 0.0284330836 0.0000679627 0.0003573966 0.0152739625 0.0196276330 0.4722515893 0.1343480151 0.0275442145 0.0628400220 0.1521560220 0.0191064818 0.0031481221 0.0001752273 0.0307574428 0.0075784077 0.0005118859 ']}, {'input': '18 17 14 12\\r\\n1 2\\r\\n3 1\\r\\n18 1\\r\\n8 2\\r\\n9 2\\r\\n2 12\\r\\n2 17\\r\\n4 6\\r\\n15 4\\r\\n5 7\\r\\n7 6\\r\\n14 9\\r\\n12 10\\r\\n13 11\\r\\n11 16\\r\\n13 17\\r\\n14 15\\r\\n0.4024\\r\\n0.5565\\r\\n0.7870\\r\\n0.2691\\r\\n0.6727\\r\\n0.9621\\r\\n0.6842\\r\\n0.0271\\r\\n0.1097\\r\\n0.1747\\r\\n0.0784\\r\\n0.9550\\r\\n0.7523\\r\\n0.4284\\r\\n0.5238\\r\\n0.2709\\r\\n0.1595\\r\\n0.4590\\r\\n', 'output': ['0.0281574957 0.2581814330 0.0076272067 0.0107746580 0.0003467009 0.1714587133 0.0031642368 0.0000709113 0.0166962221 0.0000539712 0.0014416406 0.4106759112 0.0257975192 0.0287578136 0.0269904984 0.0002646607 0.0080077089 0.0015326985 ']}, {'input': '19 18 10 6\\r\\n5 1\\r\\n12 1\\r\\n7 2\\r\\n2 18\\r\\n15 3\\r\\n3 16\\r\\n4 6\\r\\n4 10\\r\\n6 9\\r\\n8 11\\r\\n13 9\\r\\n9 14\\r\\n10 11\\r\\n10 16\\r\\n18 11\\r\\n12 16\\r\\n17 16\\r\\n17 19\\r\\n0.6093\\r\\n0.4153\\r\\n0.2931\\r\\n0.6880\\r\\n0.0979\\r\\n0.9545\\r\\n0.2846\\r\\n0.5257\\r\\n0.5168\\r\\n0.2795\\r\\n0.4887\\r\\n0.3822\\r\\n0.2863\\r\\n0.5194\\r\\n0.3924\\r\\n0.8028\\r\\n0.8415\\r\\n0.2838\\r\\n0.9046\\r\\n', 'output': ['0.0054757481 0.0062808098 0.0031941783 0.1082773399 0.0000307445 0.5100921861 0.0003567821 0.0025634213 0.0108163903 0.0520824767 0.0484805903 0.0056216539 0.0001632695 0.0004991833 0.0004654536 0.1938285472 0.0350879002 0.0079000523 0.0087832726 ']}, {'input': '20 19 16 10\\r\\n2 1\\r\\n1 9\\r\\n1 10\\r\\n2 11\\r\\n2 16\\r\\n3 8\\r\\n15 3\\r\\n4 7\\r\\n4 14\\r\\n19 5\\r\\n6 16\\r\\n12 8\\r\\n15 13\\r\\n15 14\\r\\n15 19\\r\\n20 15\\r\\n19 16\\r\\n20 17\\r\\n18 20\\r\\n0.9546\\r\\n0.8460\\r\\n0.3530\\r\\n0.1547\\r\\n0.1812\\r\\n0.3792\\r\\n0.8502\\r\\n0.0898\\r\\n0.6804\\r\\n0.0465\\r\\n0.6699\\r\\n0.1623\\r\\n0.4908\\r\\n0.7436\\r\\n0.9748\\r\\n0.2965\\r\\n0.8528\\r\\n0.6024\\r\\n0.2343\\r\\n0.9496\\r\\n', 'output': ['0.4470817637 0.1925429406 0.0001522967 0.0001272041 0.0002374526 0.0009539965 0.0002531055 0.0000477577 0.0005965772 0.0000053211 0.0022254991 0.0000051402 0.0000145893 0.0010192506 0.3120036469 0.0168639725 0.0001460780 0.0000163715 0.0093450398 0.0163619965 ']}, {'input': '21 20 10 15\\r\\n1 4\\r\\n1 7\\r\\n1 13\\r\\n3 2\\r\\n3 13\\r\\n3 20\\r\\n14 4\\r\\n20 5\\r\\n6 17\\r\\n11 8\\r\\n13 9\\r\\n21 10\\r\\n11 14\\r\\n16 11\\r\\n12 14\\r\\n18 13\\r\\n21 14\\r\\n18 15\\r\\n17 16\\r\\n19 21\\r\\n0.5511\\r\\n0.4174\\r\\n0.1974\\r\\n0.1756\\r\\n0.4806\\r\\n0.7202\\r\\n0.0261\\r\\n0.1533\\r\\n0.5109\\r\\n0.9091\\r\\n0.1702\\r\\n0.0274\\r\\n0.6287\\r\\n0.4452\\r\\n0.8881\\r\\n0.4081\\r\\n0.2318\\r\\n0.9270\\r\\n0.3270\\r\\n0.5124\\r\\n0.6402\\r\\n', 'output': ['0.1274165708 0.0020068482 0.0221441417 0.0273841255 0.0011326856 0.0044150190 0.0000989026 0.0007239413 0.0032940960 0.0373926594 0.0268760758 0.0001121418 0.2255090088 0.1477723696 0.0142089213 0.0152217984 0.0061489761 0.2354718191 0.0009022427 0.0122643704 0.0895032861 ']}, {'input': '22 21 7 3\\r\\n1 16\\r\\n8 2\\r\\n3 17\\r\\n20 4\\r\\n12 5\\r\\n5 22\\r\\n13 6\\r\\n13 7\\r\\n14 7\\r\\n8 12\\r\\n9 10\\r\\n12 9\\r\\n9 13\\r\\n20 11\\r\\n13 20\\r\\n14 16\\r\\n14 17\\r\\n19 14\\r\\n22 15\\r\\n18 19\\r\\n21 18\\r\\n0.6643\\r\\n0.0936\\r\\n0.5519\\r\\n0.8542\\r\\n0.6411\\r\\n0.9560\\r\\n0.2451\\r\\n0.5841\\r\\n0.3590\\r\\n0.1352\\r\\n0.5336\\r\\n0.3901\\r\\n0.7602\\r\\n0.8653\\r\\n0.5635\\r\\n0.3840\\r\\n0.8625\\r\\n0.7766\\r\\n0.6941\\r\\n0.8028\\r\\n0.7482\\r\\n0.8431\\r\\n', 'output': ['0.0020725026 0.0000229554 0.0023344134 0.0034044638 0.0065601793 0.0429445422 0.0126807206 0.0037257267 0.0126648147 0.0001399510 0.0003551323 0.0103862706 0.1426738764 0.5077168905 0.0001223623 0.0058931744 0.1645677033 0.0138897777 0.0191701371 0.0396907000 0.0013049419 0.0076787635 ']}, {'input': '5 8 2 4\\r\\n1 2\\r\\n1 3\\r\\n5 1\\r\\n2 3\\r\\n2 4\\r\\n5 2\\r\\n4 3\\r\\n3 5\\r\\n0.2642\\r\\n0.6145\\r\\n0.1714\\r\\n0.5156\\r\\n0.7771\\r\\n', 'output': ['0.0469766543 0.4930268360 0.1177339858 0.1318957885 0.2103667354 ']}, {'input': '15 46 4 11\\r\\n1 3\\r\\n1 5\\r\\n6 1\\r\\n7 1\\r\\n1 8\\r\\n2 6\\r\\n8 2\\r\\n2 9\\r\\n12 2\\r\\n2 15\\r\\n3 4\\r\\n6 3\\r\\n3 12\\r\\n3 13\\r\\n3 14\\r\\n4 7\\r\\n9 4\\r\\n4 10\\r\\n4 14\\r\\n6 5\\r\\n5 7\\r\\n10 5\\r\\n12 5\\r\\n13 5\\r\\n5 14\\r\\n7 6\\r\\n9 6\\r\\n10 6\\r\\n6 13\\r\\n8 7\\r\\n7 13\\r\\n10 8\\r\\n8 13\\r\\n9 10\\r\\n9 13\\r\\n9 14\\r\\n11 10\\r\\n10 13\\r\\n10 15\\r\\n12 11\\r\\n11 15\\r\\n12 13\\r\\n15 12\\r\\n14 13\\r\\n15 13\\r\\n15 14\\r\\n0.2660\\r\\n0.9315\\r\\n0.7185\\r\\n0.9642\\r\\n0.1587\\r\\n0.2494\\r\\n0.3372\\r\\n0.0928\\r\\n0.3500\\r\\n0.0196\\r\\n0.2396\\r\\n0.8611\\r\\n0.5787\\r\\n0.4279\\r\\n0.0221\\r\\n', 'output': ['0.0079249483 0.1315277498 0.0526707222 0.5053657470 0.0138346726 0.0216010978 0.0163209733 0.0054495713 0.0182973209 0.0187149289 0.0026732816 0.0956673121 0.0798423781 0.0227469261 0.0073623701 ']}, {'input': '17 43 3 16\\r\\n8 1\\r\\n1 10\\r\\n1 12\\r\\n1 13\\r\\n6 2\\r\\n10 2\\r\\n12 2\\r\\n2 14\\r\\n15 2\\r\\n2 17\\r\\n6 3\\r\\n8 3\\r\\n12 3\\r\\n3 16\\r\\n4 5\\r\\n6 4\\r\\n4 7\\r\\n4 9\\r\\n13 4\\r\\n17 4\\r\\n6 5\\r\\n5 17\\r\\n6 11\\r\\n6 12\\r\\n6 17\\r\\n7 10\\r\\n7 12\\r\\n17 7\\r\\n9 8\\r\\n13 8\\r\\n8 15\\r\\n8 16\\r\\n17 8\\r\\n13 9\\r\\n9 16\\r\\n9 17\\r\\n10 15\\r\\n16 10\\r\\n17 11\\r\\n13 12\\r\\n16 12\\r\\n15 13\\r\\n15 14\\r\\n0.1613\\r\\n0.4247\\r\\n0.4271\\r\\n0.5636\\r\\n0.0214\\r\\n0.3172\\r\\n0.8156\\r\\n0.7663\\r\\n0.1132\\r\\n0.4127\\r\\n0.5416\\r\\n0.5220\\r\\n0.9366\\r\\n0.4426\\r\\n0.5884\\r\\n0.4569\\r\\n0.9613\\r\\n', 'output': ['0.0048722451 0.0160301298 0.0812776965 0.0169053414 0.0007186872 0.0187250770 0.0243168580 0.1375215020 0.0057046011 0.0143632541 0.0010119715 0.0786732010 0.1575241299 0.0011546527 0.0158649639 0.1204518537 0.3048838351 ']}, {'input': '6 6 6 3\\r\\n2 1\\r\\n5 1\\r\\n6 2\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n0.3429\\r\\n0.7018\\r\\n0.0699\\r\\n0.9602\\r\\n0.9585\\r\\n0.5070\\r\\n', 'output': ['0.0032904304 0.0076304590 0.0000112081 0.3439315417 0.6399603309 0.0051760299 ']}, {'input': '10 15 7 8\\r\\n3 1\\r\\n1 7\\r\\n2 4\\r\\n2 5\\r\\n9 2\\r\\n3 5\\r\\n7 3\\r\\n8 3\\r\\n4 7\\r\\n8 4\\r\\n5 7\\r\\n10 5\\r\\n6 8\\r\\n6 9\\r\\n9 8\\r\\n0.4654\\r\\n0.8489\\r\\n0.7851\\r\\n0.9790\\r\\n0.8126\\r\\n0.1443\\r\\n0.8385\\r\\n0.1355\\r\\n0.2672\\r\\n0.0631\\r\\n', 'output': ['0.0086717445 0.0591108269 0.1502231556 0.5026507699 0.0926399948 0.0018832329 0.1642324438 0.0138497445 0.0067226391 0.0000154479 ']}, {'input': '10 16 9 2\\r\\n3 1\\r\\n5 1\\r\\n9 1\\r\\n2 5\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n3 5\\r\\n6 3\\r\\n10 3\\r\\n4 6\\r\\n4 10\\r\\n5 10\\r\\n6 7\\r\\n8 7\\r\\n10 7\\r\\n0.8151\\r\\n0.2117\\r\\n0.5832\\r\\n0.0244\\r\\n0.1781\\r\\n0.5401\\r\\n0.4576\\r\\n0.1453\\r\\n0.3072\\r\\n0.2282\\r\\n', 'output': ['0.2858990309 0.1917730962 0.1409268921 0.0046323044 0.0671166968 0.0504929902 0.0497075403 0.0134447894 0.0942164861 0.1017901736 ']}, {'input': '22 30 9 17\\r\\n1 18\\r\\n1 20\\r\\n2 3\\r\\n5 2\\r\\n6 2\\r\\n2 11\\r\\n2 19\\r\\n6 4\\r\\n21 4\\r\\n22 4\\r\\n5 6\\r\\n8 5\\r\\n14 5\\r\\n10 6\\r\\n21 6\\r\\n22 7\\r\\n16 8\\r\\n9 12\\r\\n16 9\\r\\n18 10\\r\\n11 18\\r\\n11 22\\r\\n14 12\\r\\n13 22\\r\\n15 17\\r\\n21 15\\r\\n16 22\\r\\n22 17\\r\\n21 18\\r\\n20 22\\r\\n0.3290\\r\\n0.6966\\r\\n0.3952\\r\\n0.4713\\r\\n0.2462\\r\\n0.6482\\r\\n0.3471\\r\\n0.6729\\r\\n0.8845\\r\\n0.8581\\r\\n0.6991\\r\\n0.7279\\r\\n0.9751\\r\\n0.4603\\r\\n0.9591\\r\\n0.9890\\r\\n0.0230\\r\\n0.1388\\r\\n0.8745\\r\\n0.3635\\r\\n0.9655\\r\\n0.6980\\r\\n', 'output': ['0.0012630922 0.0302925914 0.0001113046 0.0058223640 0.0084588979 0.0305910518 0.0001130212 0.0050014407 0.0135265144 0.0105166645 0.0126985994 0.0054538897 0.0233929192 0.0031581259 0.0393763424 0.5293925504 0.0008728982 0.0041399002 0.0022100491 0.0013950475 0.1941228326 0.0780899026 ']}, {'input': '22 32 5 7\\r\\n1 3\\r\\n9 1\\r\\n16 2\\r\\n2 18\\r\\n3 5\\r\\n3 6\\r\\n3 10\\r\\n11 3\\r\\n13 3\\r\\n3 22\\r\\n22 4\\r\\n5 6\\r\\n5 8\\r\\n14 5\\r\\n5 15\\r\\n5 18\\r\\n19 6\\r\\n6 20\\r\\n6 21\\r\\n21 7\\r\\n8 18\\r\\n22 9\\r\\n10 13\\r\\n22 10\\r\\n15 11\\r\\n17 12\\r\\n12 20\\r\\n17 14\\r\\n16 22\\r\\n17 18\\r\\n17 21\\r\\n18 20\\r\\n0.9511\\r\\n0.6830\\r\\n0.2035\\r\\n0.9142\\r\\n0.6807\\r\\n0.6502\\r\\n0.3221\\r\\n0.0903\\r\\n0.1790\\r\\n0.2234\\r\\n0.9788\\r\\n0.6005\\r\\n0.3179\\r\\n0.2115\\r\\n0.8035\\r\\n0.8730\\r\\n0.0342\\r\\n0.2599\\r\\n0.7508\\r\\n0.1815\\r\\n0.6454\\r\\n0.7619\\r\\n', 'output': ['0.0547241979 0.0127153084 0.0441350190 0.0054767347 0.2027512578 0.1785779328 0.0009181368 0.0030386274 0.0012253232 0.0047658952 0.1614826534 0.0200979142 0.0024921791 0.0089124294 0.0185716675 0.0233837366 0.0345272095 0.0510312272 0.0049608897 0.0146416997 0.0870608962 0.0645090644 ']}, {'input': '21 23 21 17\\r\\n3 1\\r\\n3 2\\r\\n15 2\\r\\n2 20\\r\\n21 2\\r\\n16 3\\r\\n3 19\\r\\n4 8\\r\\n11 4\\r\\n17 4\\r\\n5 8\\r\\n5 9\\r\\n5 13\\r\\n6 16\\r\\n12 7\\r\\n16 7\\r\\n12 9\\r\\n10 17\\r\\n21 11\\r\\n12 18\\r\\n21 14\\r\\n15 17\\r\\n20 16\\r\\n0.0190\\r\\n0.5764\\r\\n0.1426\\r\\n0.4577\\r\\n0.7596\\r\\n0.5794\\r\\n0.5531\\r\\n0.9095\\r\\n0.6558\\r\\n0.8086\\r\\n0.2032\\r\\n0.4600\\r\\n0.9388\\r\\n0.1243\\r\\n0.2195\\r\\n0.7691\\r\\n0.1250\\r\\n0.1658\\r\\n0.4437\\r\\n0.7445\\r\\n0.0782\\r\\n', 'output': ['0.0000449260 0.2344991918 0.0251976569 0.1319548171 0.0505050501 0.0009015861 0.0110788625 0.1360612739 0.0147837889 0.0419721572 0.0374092349 0.0159331361 0.0176432803 0.0015421188 0.0322649361 0.1040211064 0.0579773602 0.0001476576 0.0017154120 0.0398347629 0.0445116844 ']}, {'input': '21 24 10 10\\r\\n11 1\\r\\n14 1\\r\\n4 2\\r\\n2 10\\r\\n3 5\\r\\n3 8\\r\\n3 9\\r\\n3 13\\r\\n3 17\\r\\n21 3\\r\\n4 9\\r\\n20 5\\r\\n6 12\\r\\n17 6\\r\\n9 7\\r\\n15 7\\r\\n7 19\\r\\n12 13\\r\\n12 15\\r\\n15 14\\r\\n21 14\\r\\n16 19\\r\\n18 20\\r\\n19 21\\r\\n0.4227\\r\\n0.9018\\r\\n0.8446\\r\\n0.0334\\r\\n0.8707\\r\\n0.5558\\r\\n0.4513\\r\\n0.1537\\r\\n0.9028\\r\\n0.2106\\r\\n0.0863\\r\\n0.4888\\r\\n0.3508\\r\\n0.3819\\r\\n0.2980\\r\\n0.6791\\r\\n0.6029\\r\\n0.0931\\r\\n0.8012\\r\\n0.9531\\r\\n0.0343\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 ']}, {'input': '21 25 20 3\\r\\n18 1\\r\\n12 2\\r\\n20 2\\r\\n11 3\\r\\n9 4\\r\\n12 4\\r\\n4 15\\r\\n4 20\\r\\n5 8\\r\\n5 15\\r\\n5 18\\r\\n5 20\\r\\n6 16\\r\\n20 7\\r\\n8 11\\r\\n13 8\\r\\n16 10\\r\\n10 19\\r\\n17 11\\r\\n12 15\\r\\n12 16\\r\\n12 21\\r\\n17 13\\r\\n14 18\\r\\n16 20\\r\\n0.3609\\r\\n0.9580\\r\\n0.3737\\r\\n0.7107\\r\\n0.6199\\r\\n0.4418\\r\\n0.0874\\r\\n0.5309\\r\\n0.3103\\r\\n0.9377\\r\\n0.8430\\r\\n0.9569\\r\\n0.5227\\r\\n0.6203\\r\\n0.4745\\r\\n0.4190\\r\\n0.6055\\r\\n0.8480\\r\\n0.8791\\r\\n0.4012\\r\\n0.3441\\r\\n', 'output': ['0.0001115124 0.0980714461 0.0002416850 0.0433302884 0.1021821003 0.0004704958 0.0000866423 0.0539373770 0.0001486904 0.0329442386 0.0940435447 0.4179895790 0.0123317109 0.0004663481 0.0186175265 0.0173859990 0.0115346705 0.0516017594 0.0012743943 0.0432054878 0.0000245034 ']}, {'input': '22 23 5 16\\r\\n20 1\\r\\n1 22\\r\\n2 3\\r\\n2 4\\r\\n3 13\\r\\n16 3\\r\\n4 6\\r\\n9 5\\r\\n5 22\\r\\n16 7\\r\\n9 8\\r\\n8 13\\r\\n10 16\\r\\n10 22\\r\\n11 17\\r\\n22 12\\r\\n14 15\\r\\n16 14\\r\\n14 18\\r\\n15 19\\r\\n16 21\\r\\n19 17\\r\\n22 17\\r\\n0.7393\\r\\n0.5325\\r\\n0.7522\\r\\n0.0343\\r\\n0.4628\\r\\n0.4713\\r\\n0.0749\\r\\n0.2350\\r\\n0.1396\\r\\n0.4916\\r\\n0.9203\\r\\n0.3179\\r\\n0.3378\\r\\n0.5174\\r\\n0.6705\\r\\n0.9649\\r\\n0.0823\\r\\n0.6370\\r\\n0.3185\\r\\n0.8381\\r\\n0.6475\\r\\n0.8173\\r\\n', 'output': ['0.0088399457 0.0037821738 0.0429781208 0.0005983597 0.0060422088 0.0002929921 0.0000030894 0.0040866917 0.0027909053 0.0135153898 0.0117585651 0.0001331749 0.0058057805 0.0119937930 0.0107339787 0.7106384041 0.0059716200 0.0009389289 0.0043356417 0.0022053815 0.0001722543 0.1523826002 ']}, {'input': '22 26 22 13\\r\\n1 2\\r\\n3 1\\r\\n1 21\\r\\n1 22\\r\\n9 2\\r\\n13 2\\r\\n2 17\\r\\n3 16\\r\\n11 4\\r\\n7 5\\r\\n12 5\\r\\n5 21\\r\\n6 12\\r\\n6 18\\r\\n11 7\\r\\n18 8\\r\\n9 11\\r\\n9 20\\r\\n10 13\\r\\n11 14\\r\\n11 18\\r\\n19 12\\r\\n15 22\\r\\n17 16\\r\\n18 22\\r\\n22 21\\r\\n0.1724\\r\\n0.6546\\r\\n0.1197\\r\\n0.5874\\r\\n0.2667\\r\\n0.1593\\r\\n0.5054\\r\\n0.1572\\r\\n0.1620\\r\\n0.2524\\r\\n0.6551\\r\\n0.5020\\r\\n0.1909\\r\\n0.2257\\r\\n0.7479\\r\\n0.6343\\r\\n0.6408\\r\\n0.7443\\r\\n0.3852\\r\\n0.8838\\r\\n0.2693\\r\\n0.3504\\r\\n', 'output': ['0.0845150088 0.2599909733 0.0097983608 0.0018923031 0.0239189914 0.0048992078 0.0160198485 0.0001406067 0.0247058927 0.0013355496 0.1609619578 0.0266705055 0.0121400170 0.0002951678 0.0125662798 0.0330821904 0.0360913305 0.1467042455 0.0007214805 0.0257426840 0.0360195050 0.0817878936 ']}, {'input': '22 25 2 7\\r\\n17 1\\r\\n2 16\\r\\n2 22\\r\\n14 3\\r\\n3 15\\r\\n20 3\\r\\n4 8\\r\\n4 12\\r\\n4 13\\r\\n13 5\\r\\n5 16\\r\\n16 6\\r\\n11 7\\r\\n17 7\\r\\n7 21\\r\\n9 15\\r\\n9 22\\r\\n14 10\\r\\n10 15\\r\\n10 17\\r\\n20 10\\r\\n16 12\\r\\n18 13\\r\\n18 16\\r\\n19 22\\r\\n0.9622\\r\\n0.8251\\r\\n0.9681\\r\\n0.2488\\r\\n0.3662\\r\\n0.5921\\r\\n0.5852\\r\\n0.0411\\r\\n0.2418\\r\\n0.0125\\r\\n0.2109\\r\\n0.8481\\r\\n0.3958\\r\\n0.1604\\r\\n0.8006\\r\\n0.9077\\r\\n0.7900\\r\\n0.7867\\r\\n0.8533\\r\\n0.6754\\r\\n0.7537\\r\\n0.1636\\r\\n', 'output': ['0.0397606434 0.0600590881 0.3808962043 0.0014000167 0.0011392632 0.0002081290 0.0143391730 0.0000065896 0.0122923376 0.0194932708 0.0001001379 0.0082802798 0.0024780234 0.0030637724 0.1211126468 0.1962584577 0.0804543597 0.0051630869 0.0166074944 0.0140209327 0.0017717043 0.0210943884 ']}, {'input': '20 23 17 3\\r\\n18 1\\r\\n2 6\\r\\n10 2\\r\\n3 8\\r\\n12 4\\r\\n8 5\\r\\n9 5\\r\\n17 5\\r\\n7 8\\r\\n15 7\\r\\n7 16\\r\\n9 18\\r\\n9 20\\r\\n10 15\\r\\n17 10\\r\\n11 14\\r\\n11 18\\r\\n13 12\\r\\n12 14\\r\\n14 13\\r\\n20 15\\r\\n16 19\\r\\n20 16\\r\\n0.3546\\r\\n0.6179\\r\\n0.2477\\r\\n0.4236\\r\\n0.8433\\r\\n0.0304\\r\\n0.5569\\r\\n0.4558\\r\\n0.8289\\r\\n0.1959\\r\\n0.2156\\r\\n0.3993\\r\\n0.0429\\r\\n0.9185\\r\\n0.1945\\r\\n0.8919\\r\\n0.8929\\r\\n0.3044\\r\\n0.2973\\r\\n0.1637\\r\\n', 'output': ['0.0003638881 0.0163339067 0.0008806850 0.0000274159 0.3262188951 0.0000246366 0.0536909073 0.0520393925 0.1051082156 0.0261569273 0.0020883748 0.0005216032 0.0000848720 0.0268220987 0.0257688220 0.1285525498 0.2126000150 0.0073895213 0.0000994338 0.0152278393 ']}, {'input': '20 21 5 14\\r\\n1 10\\r\\n13 1\\r\\n19 1\\r\\n2 11\\r\\n14 2\\r\\n2 17\\r\\n7 3\\r\\n13 3\\r\\n4 15\\r\\n14 5\\r\\n19 5\\r\\n6 16\\r\\n13 8\\r\\n16 9\\r\\n15 11\\r\\n11 19\\r\\n15 12\\r\\n16 12\\r\\n18 12\\r\\n15 20\\r\\n17 16\\r\\n0.5805\\r\\n0.3342\\r\\n0.7705\\r\\n0.7345\\r\\n0.1304\\r\\n0.3862\\r\\n0.6920\\r\\n0.6597\\r\\n0.6223\\r\\n0.0125\\r\\n0.4646\\r\\n0.9876\\r\\n0.7291\\r\\n0.3720\\r\\n0.2529\\r\\n0.1635\\r\\n0.5579\\r\\n0.4736\\r\\n0.6798\\r\\n0.1940\\r\\n', 'output': ['0.0290729509 0.0774707737 0.0048407220 0.0022268940 0.0840499631 0.0003440094 0.0003284870 0.0006200526 0.0008986063 0.0000093558 0.0641414110 0.2073528076 0.0194228289 0.2619733510 0.0124627336 0.0066013691 0.0179828402 0.0000059094 0.2100074063 0.0001875280 ']}, {'input': '20 25 1 12\\r\\n1 11\\r\\n12 1\\r\\n18 1\\r\\n4 2\\r\\n3 5\\r\\n3 7\\r\\n3 11\\r\\n14 3\\r\\n3 16\\r\\n17 3\\r\\n11 4\\r\\n4 16\\r\\n18 4\\r\\n5 6\\r\\n5 9\\r\\n10 5\\r\\n5 14\\r\\n5 20\\r\\n9 6\\r\\n17 6\\r\\n8 17\\r\\n12 10\\r\\n16 13\\r\\n14 19\\r\\n15 19\\r\\n0.5533\\r\\n0.6775\\r\\n0.4103\\r\\n0.7882\\r\\n0.9682\\r\\n0.0157\\r\\n0.8149\\r\\n0.2403\\r\\n0.4483\\r\\n0.1045\\r\\n0.7979\\r\\n0.0113\\r\\n0.9501\\r\\n0.7438\\r\\n0.6028\\r\\n0.8786\\r\\n0.8645\\r\\n0.8427\\r\\n0.2974\\r\\n0.2234\\r\\n', 'output': ['0.3836337810 0.0005834345 0.0229041026 0.0461902969 0.3196862695 0.0007593053 0.0018549199 0.0000123965 0.0005294816 0.0079362295 0.0669374470 0.0290126728 0.0053233321 0.0091036233 0.0001539764 0.0320034925 0.0145047810 0.0584237926 0.0004433762 0.0000032889 ']}, {'input': '16 17 7 1\\r\\n3 1\\r\\n1 8\\r\\n10 1\\r\\n1 11\\r\\n15 1\\r\\n15 2\\r\\n2 16\\r\\n3 9\\r\\n4 13\\r\\n15 5\\r\\n16 6\\r\\n11 7\\r\\n8 12\\r\\n9 10\\r\\n14 9\\r\\n10 11\\r\\n13 16\\r\\n0.4938\\r\\n0.1780\\r\\n0.5063\\r\\n0.2975\\r\\n0.0828\\r\\n0.7123\\r\\n0.6365\\r\\n0.3149\\r\\n0.1640\\r\\n0.2521\\r\\n0.8296\\r\\n0.9536\\r\\n0.2263\\r\\n0.1757\\r\\n0.7787\\r\\n0.4786\\r\\n', 'output': ['0.2282703609 0.0041908237 0.0240980923 0.0001797951 0.0000528785 0.0016021604 0.0137910440 0.0127072600 0.0229547593 0.0461207439 0.4817791924 0.0589129374 0.0014384188 0.0007747441 0.0911572626 0.0119695266 ']}, {'input': '18 19 4 11\\r\\n1 9\\r\\n2 8\\r\\n3 5\\r\\n3 6\\r\\n4 14\\r\\n9 5\\r\\n15 5\\r\\n8 6\\r\\n14 6\\r\\n12 7\\r\\n7 14\\r\\n7 17\\r\\n7 18\\r\\n8 18\\r\\n12 9\\r\\n14 10\\r\\n18 11\\r\\n14 13\\r\\n16 17\\r\\n0.3249\\r\\n0.3531\\r\\n0.3056\\r\\n0.4843\\r\\n0.7970\\r\\n0.5842\\r\\n0.5472\\r\\n0.4521\\r\\n0.2028\\r\\n0.7950\\r\\n0.1425\\r\\n0.4595\\r\\n0.1226\\r\\n0.0513\\r\\n0.5915\\r\\n0.2733\\r\\n0.7116\\r\\n0.0974\\r\\n', 'output': ['0.0011964236 0.0027831999 0.0140945800 0.0099145200 0.0983898473 0.1586288138 0.2962532703 0.0986994249 0.0196928959 0.0361972940 0.0015096894 0.0240101362 0.0015026996 0.1439159142 0.0012566904 0.0004912934 0.0439254039 0.0475379030 ']}, {'input': '19 20 7 13\\r\\n1 8\\r\\n10 1\\r\\n12 1\\r\\n1 13\\r\\n2 3\\r\\n2 13\\r\\n5 4\\r\\n11 4\\r\\n16 4\\r\\n5 7\\r\\n5 12\\r\\n5 13\\r\\n12 6\\r\\n9 10\\r\\n18 9\\r\\n15 10\\r\\n17 14\\r\\n14 19\\r\\n17 15\\r\\n16 17\\r\\n0.2124\\r\\n0.4090\\r\\n0.6285\\r\\n0.8759\\r\\n0.6790\\r\\n0.3161\\r\\n0.7681\\r\\n0.0730\\r\\n0.9793\\r\\n0.9753\\r\\n0.6491\\r\\n0.3349\\r\\n0.5286\\r\\n0.9760\\r\\n0.0743\\r\\n0.3295\\r\\n0.4276\\r\\n0.5759\\r\\n0.9666\\r\\n', 'output': ['0.0307369775 0.0185380486 0.0049762965 0.0801258012 0.4016568896 0.0012615177 0.0458257790 0.0001732439 0.0262190397 0.2072028585 0.0005878688 0.0347646012 0.1014805103 0.0361157326 0.0009321471 0.0019251201 0.0051159376 0.0000088276 0.0023528026 ']}, {'input': '19 45 4 19\\r\\n3 1\\r\\n4 1\\r\\n8 1\\r\\n9 1\\r\\n1 15\\r\\n4 2\\r\\n2 7\\r\\n8 2\\r\\n10 2\\r\\n12 2\\r\\n14 2\\r\\n6 4\\r\\n12 4\\r\\n4 14\\r\\n18 4\\r\\n8 5\\r\\n5 16\\r\\n17 5\\r\\n5 18\\r\\n6 15\\r\\n6 16\\r\\n6 17\\r\\n11 7\\r\\n7 12\\r\\n16 7\\r\\n19 7\\r\\n15 8\\r\\n9 10\\r\\n12 9\\r\\n9 14\\r\\n18 9\\r\\n19 9\\r\\n10 12\\r\\n14 10\\r\\n19 10\\r\\n11 13\\r\\n11 14\\r\\n15 11\\r\\n17 11\\r\\n11 19\\r\\n12 16\\r\\n15 13\\r\\n15 14\\r\\n14 17\\r\\n18 19\\r\\n0.4821\\r\\n0.4961\\r\\n0.0784\\r\\n0.4492\\r\\n0.7542\\r\\n0.2541\\r\\n0.9007\\r\\n0.3242\\r\\n0.3859\\r\\n0.2849\\r\\n0.4588\\r\\n0.9274\\r\\n0.1538\\r\\n0.4482\\r\\n0.6068\\r\\n0.9144\\r\\n0.8487\\r\\n0.1854\\r\\n0.4288\\r\\n', 'output': ['0.0266883400 0.0401292756 0.0000341093 0.0443828404 0.0331957500 0.0072730898 0.1489809719 0.0096326688 0.0407018303 0.0188112037 0.0334055826 0.2872048781 0.0010750781 0.0556489717 0.0481176365 0.0894552396 0.0587582081 0.0258448651 0.0306594604 ']}, {'input': '6 9 2 5\\r\\n1 2\\r\\n3 1\\r\\n6 1\\r\\n2 4\\r\\n5 2\\r\\n3 6\\r\\n5 4\\r\\n6 4\\r\\n6 5\\r\\n0.9796\\r\\n0.7061\\r\\n0.6636\\r\\n0.9200\\r\\n0.4454\\r\\n0.5302\\r\\n', 'output': ['0.3356041533 0.2464765303 0.0058143943 0.2843884681 0.0929849670 0.0347314871 ']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n  int n, m, a, b;\n  cin >> n >> m >> a >> b;\n  --a, --b;\n  vector<vector<int>> g(n);\n  while (m--) {\n    int x, y;\n    cin >> x >> y;\n    --x, --y;\n    g[x].push_back(y);\n    g[y].push_back(x);\n  }\n  vector<double> ans(n, 0);\n  queue<int> q;\n  q.push(a), q.push(b);\n  while (!q.empty()) {\n    int u = q.front();\n    q.pop();\n    double p = ans[u] = 1 - ans[u];\n    for (auto v : g[u]) {\n      ans[v] = 1 - p / 2;\n      q.push(v);\n    }\n  }\n  for (int i = 0; i < n; ++i) ans[i] = 1 - ans[i];\n  for (auto v : ans) cout << setprecision(10) << v <<'';\n  cout << endl;\n  return 0;\n}\n"}
{"src_uid": "ab410c6513a26ec3a41c63318dc38b78", "id": 37, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2700, "testcases": "[{'input': '2 1 1 2\\r\\n1 2\\r\\n0.5\\r\\n0.5\\r\\n', 'output': ['0.5000000000 0.5000000000 ']}, {'input': '4 4 1 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 1\\r\\n0.5\\r\\n0.5\\r\\n0.5\\r\\n0.5\\r\\n', 'output': ['0.3333333333 0.3333333333 0.1666666667 0.1666666667 ']}, {'input': '5 4 2 5\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n0.99\\r\\n0.6\\r\\n0.66\\r\\n0.23\\r\\n0.51\\r\\n', 'output': ['0.9976393323 0.0015805859 0.0000137404 0.0000015403 0.0007648011 ']}, {'input': '16 15 1 16\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n', 'output': ['0.0019644887 0.0325808635 0.0503829756 0.0645522937 0.0762658799 0.0856950294 0.0924815917 0.0960768773 0.0960768773 0.0924815917 0.0856950294 0.0762658799 0.0645522937 0.0503829756 0.0325808635 0.0019644887 ']}, {'input': '6 6 1 4\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 1\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.1535695632 0.1732152184 0.1732152184 0.1535695632 0.1732152184 0.1732152184 ']}, {'input': '2 1 1 2\\r\\n1 2\\r\\n0.142\\r\\n0.2\\r\\n', 'output': ['0.3983169705 0.6016830295 ']}, {'input': '6 5 2 1\\r\\n1 6\\r\\n3 2\\r\\n3 6\\r\\n5 4\\r\\n4 6\\r\\n0.7506\\r\\n0.5129\\r\\n0.7965\\r\\n0.1712\\r\\n0.3321\\r\\n0.7033\\r\\n', 'output': ['0.0490630865 0.0083870955 0.3822667748 0.0174328057 0.0030541480 0.5397960896 ']}, {'input': '10 9 2 10\\r\\n1 2\\r\\n5 1\\r\\n7 1\\r\\n6 2\\r\\n3 5\\r\\n4 9\\r\\n5 10\\r\\n6 9\\r\\n10 8\\r\\n0.5376\\r\\n0.5747\\r\\n0.8019\\r\\n0.6922\\r\\n0.2890\\r\\n0.9193\\r\\n0.7521\\r\\n0.4436\\r\\n0.5970\\r\\n0.3173\\r\\n', 'output': ['0.2817412543 0.0959570556 0.0542629235 0.0025685657 0.1569610917 0.3021480932 0.0339864114 0.0084406954 0.0137071015 0.0502268077 ']}, {'input': '15 21 5 15\\r\\n6 1\\r\\n1 10\\r\\n11 1\\r\\n2 3\\r\\n2 8\\r\\n11 2\\r\\n2 14\\r\\n3 11\\r\\n15 3\\r\\n4 9\\r\\n10 4\\r\\n11 4\\r\\n4 12\\r\\n5 8\\r\\n5 12\\r\\n13 5\\r\\n8 7\\r\\n8 13\\r\\n14 8\\r\\n9 12\\r\\n13 9\\r\\n0.0984\\r\\n0.9472\\r\\n0.0555\\r\\n0.1818\\r\\n0.6887\\r\\n0.2633\\r\\n0.6266\\r\\n0.7277\\r\\n0.4906\\r\\n0.5204\\r\\n0.3271\\r\\n0.8406\\r\\n0.1905\\r\\n0.8913\\r\\n0.1490\\r\\n', 'output': ['0.0077226021 0.5303336625 0.0054411451 0.0303793551 0.0404230994 0.0005350284 0.0013754254 0.1413320042 0.0265814303 0.0120371707 0.0322545543 0.1066358507 0.0104058084 0.0543251267 0.0002177368 ']}, {'input': '16 16 11 1\\r\\n15 1\\r\\n5 2\\r\\n10 2\\r\\n15 2\\r\\n4 3\\r\\n3 10\\r\\n3 11\\r\\n6 10\\r\\n9 7\\r\\n7 15\\r\\n12 8\\r\\n8 16\\r\\n13 9\\r\\n13 10\\r\\n16 11\\r\\n15 14\\r\\n0.7912\\r\\n0.2716\\r\\n0.2423\\r\\n0.7215\\r\\n0.3998\\r\\n0.3062\\r\\n0.0161\\r\\n0.9557\\r\\n0.8075\\r\\n0.0797\\r\\n0.8873\\r\\n0.1631\\r\\n0.8815\\r\\n0.8284\\r\\n0.4164\\r\\n0.0509\\r\\n', 'output': ['0.0153633854 0.0582037768 0.0644798137 0.0179019027 0.0038888919 0.0036876616 0.0067662879 0.1649462155 0.0713890711 0.0806917881 0.2077252654 0.0000190454 0.1796086267 0.0191451875 0.0980830806 0.0080999998 ']}, {'input': '22 21 1 22\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0012434856 0.0099719410 0.0199076715 0.0297915885 0.0395249019 0.0489267177 0.0577200158 0.0655362954 0.0719467411 0.0765217103 0.0789089312 0.0789089312 0.0765217103 0.0719467411 0.0655362954 0.0577200158 0.0489267177 0.0395249019 0.0297915885 0.0199076715 0.0099719410 0.0012434856 ']}, {'input': '22 23 5 16\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n22 1\\r\\n1 11\\r\\n0.01\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0009049944 0.0654619724 0.0448599020 0.0342094033 0.0283295356 0.0266503813 0.0288053138 0.0342798044 0.0427189992 0.0557007096 0.1605214977 0.0643520452 0.0514169497 0.0415243077 0.0342155622 0.0300098388 0.0291162176 0.0313210001 0.0360195732 0.0424281241 0.0505451222 0.0666087455 ']}, {'input': '22 22 1 13\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n22 1\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0387342340 0.0376245603 0.0385434630 0.0409311653 0.0438884638 0.0463138950 0.0472507131 0.0463138950 0.0438884638 0.0409311653 0.0385434630 0.0376245603 0.0387342340 0.0420477574 0.0472178012 0.0531433058 0.0579906815 0.0598786325 0.0579906815 0.0531433058 0.0472178012 0.0420477574 ']}, {'input': '10 45 1 10\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n1 8\\r\\n1 9\\r\\n1 10\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n2 8\\r\\n2 9\\r\\n2 10\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n3 8\\r\\n3 9\\r\\n3 10\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n4 8\\r\\n4 9\\r\\n4 10\\r\\n5 6\\r\\n5 7\\r\\n5 8\\r\\n5 9\\r\\n5 10\\r\\n6 7\\r\\n6 8\\r\\n6 9\\r\\n6 10\\r\\n7 8\\r\\n7 9\\r\\n7 10\\r\\n8 9\\r\\n8 10\\r\\n9 10\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n', 'output': ['0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 ']}, {'input': '1 0 1 1\\r\\n0.99\\r\\n', 'output': ['1.0000000000 ']}, {'input': '22 21 1 22\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n11 1\\r\\n12 1\\r\\n13 1\\r\\n14 1\\r\\n15 1\\r\\n16 1\\r\\n17 1\\r\\n18 1\\r\\n19 1\\r\\n20 1\\r\\n21 1\\r\\n22 2\\r\\n0.01\\r\\n0.02\\r\\n0.03\\r\\n0.04\\r\\n0.05\\r\\n0.06\\r\\n0.07\\r\\n0.08\\r\\n0.09\\r\\n0.10\\r\\n0.11\\r\\n0.12\\r\\n0.13\\r\\n0.14\\r\\n0.15\\r\\n0.16\\r\\n0.17\\r\\n0.18\\r\\n0.19\\r\\n0.20\\r\\n0.21\\r\\n0.22\\r\\n', 'output': ['0.9035493892 0.0711125603 0.0002295956 0.0003073428 0.0003857694 0.0004649204 0.0005448425 0.0006255834 0.0007071929 0.0007897222 0.0008732245 0.0009577547 0.0010433701 0.0011301299 0.0012180959 0.0013073322 0.0013979057 0.0014898861 0.0015833460 0.0016783614 0.0017750116 0.0068286632 ']}, {'input': '15 14 1 8\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.1687647168 0.0613502671 0.0232964298 0.0159426870 0.0100709787 0.0077507094 0.0071633056 0.0059104630 0.1744057974 0.0870855985 0.0630100398 0.0623589182 0.1454718455 0.1071447000 0.0602735434 ']}, {'input': '15 14 13 13\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 0.0000000000 ']}, {'input': '15 14 15 15\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '14 43 1 14\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n5 6\\r\\n5 7\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n8 12\\r\\n8 13\\r\\n8 14\\r\\n9 10\\r\\n9 11\\r\\n9 12\\r\\n9 13\\r\\n9 14\\r\\n10 11\\r\\n10 12\\r\\n10 13\\r\\n10 14\\r\\n11 12\\r\\n11 13\\r\\n11 14\\r\\n12 13\\r\\n12 14\\r\\n13 14\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0526959074 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.1878457103 0.1878457103 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0526959074 ']}, {'input': '16 57 1 16\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n1 16\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n2 16\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n3 16\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n4 16\\r\\n5 6\\r\\n5 7\\r\\n5 16\\r\\n6 7\\r\\n6 16\\r\\n7 16\\r\\n7 8\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n8 12\\r\\n8 13\\r\\n8 14\\r\\n8 15\\r\\n9 10\\r\\n9 11\\r\\n9 12\\r\\n9 13\\r\\n9 14\\r\\n9 15\\r\\n10 11\\r\\n10 12\\r\\n10 13\\r\\n10 14\\r\\n10 15\\r\\n11 12\\r\\n11 13\\r\\n11 14\\r\\n11 15\\r\\n12 13\\r\\n12 14\\r\\n12 15\\r\\n13 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.89\\r\\n0.79\\r\\n0.69\\r\\n0.59\\r\\n0.49\\r\\n0.39\\r\\n0.29\\r\\n0.19\\r\\n0.19\\r\\n0.29\\r\\n0.39\\r\\n0.49\\r\\n0.59\\r\\n0.69\\r\\n0.79\\r\\n', 'output': ['0.8601065040 0.0421912132 0.0216044923 0.0139824673 0.0099982535 0.0075466288 0.0077197332 0.0018809771 0.0005077937 0.0005077937 0.0006335685 0.0007997585 0.0010295784 0.0013684205 0.0019187930 0.0282040246 ']}, {'input': '2 1 2 2\\r\\n1 2\\r\\n0.4651\\r\\n0.4541\\r\\n', 'output': ['0.0000000000 1.0000000000 ']}, {'input': '3 3 3 3\\r\\n1 2\\r\\n1 3\\r\\n2 3\\r\\n0.7518\\r\\n0.3684\\r\\n0.0278\\r\\n', 'output': ['0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '4 6 4 2\\r\\n1 2\\r\\n3 1\\r\\n4 1\\r\\n2 3\\r\\n4 2\\r\\n3 4\\r\\n0.8837\\r\\n0.8531\\r\\n0.1495\\r\\n0.1412\\r\\n', 'output': ['0.3201347837 0.6091104909 0.0388222283 0.0319324970 ']}, {'input': '5 10 4 1\\r\\n1 2\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n3 2\\r\\n2 4\\r\\n2 5\\r\\n4 3\\r\\n3 5\\r\\n5 4\\r\\n0.1234\\r\\n0.3871\\r\\n0.0253\\r\\n0.4658\\r\\n0.4364\\r\\n', 'output': ['0.1115667934 0.2114914579 0.1016822203 0.3398765632 0.2353829653 ']}, {'input': '6 15 3 6\\r\\n2 1\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n2 3\\r\\n4 2\\r\\n2 5\\r\\n6 2\\r\\n3 4\\r\\n5 3\\r\\n3 6\\r\\n4 5\\r\\n6 4\\r\\n5 6\\r\\n0.0884\\r\\n0.3825\\r\\n0.1591\\r\\n0.5495\\r\\n0.6195\\r\\n0.0398\\r\\n', 'output': ['0.0999455609 0.1735578254 0.1116896620 0.2498342178 0.2972772337 0.0676955002 ']}, {'input': '7 21 4 6\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n2 3\\r\\n4 2\\r\\n2 5\\r\\n2 6\\r\\n7 2\\r\\n3 4\\r\\n5 3\\r\\n3 6\\r\\n7 3\\r\\n4 5\\r\\n6 4\\r\\n7 4\\r\\n5 6\\r\\n5 7\\r\\n7 6\\r\\n0.5239\\r\\n0.3794\\r\\n0.2269\\r\\n0.2762\\r\\n0.4424\\r\\n0.9740\\r\\n0.3075\\r\\n', 'output': ['0.0232614097 0.0162516730 0.0115838868 0.0137365998 0.0188847358 0.9024755860 0.0138061087 ']}, {'input': '8 28 8 3\\r\\n1 2\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n8 1\\r\\n3 2\\r\\n4 2\\r\\n5 2\\r\\n6 2\\r\\n7 2\\r\\n2 8\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n8 3\\r\\n4 5\\r\\n4 6\\r\\n7 4\\r\\n8 4\\r\\n5 6\\r\\n7 5\\r\\n8 5\\r\\n7 6\\r\\n8 6\\r\\n7 8\\r\\n0.8613\\r\\n0.8282\\r\\n0.8938\\r\\n0.7578\\r\\n0.9470\\r\\n0.2132\\r\\n0.4324\\r\\n0.6849\\r\\n', 'output': ['0.1176195220 0.0958396019 0.3325863571 0.0677110954 0.2663958661 0.0152787192 0.0248059593 0.0797628790 ']}, {'input': '9 36 9 2\\r\\n1 2\\r\\n3 1\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n8 1\\r\\n1 9\\r\\n3 2\\r\\n2 4\\r\\n5 2\\r\\n6 2\\r\\n2 7\\r\\n8 2\\r\\n9 2\\r\\n4 3\\r\\n5 3\\r\\n6 3\\r\\n7 3\\r\\n8 3\\r\\n9 3\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n6 5\\r\\n7 5\\r\\n8 5\\r\\n5 9\\r\\n6 7\\r\\n6 8\\r\\n9 6\\r\\n8 7\\r\\n9 7\\r\\n8 9\\r\\n0.7668\\r\\n0.8405\\r\\n0.4250\\r\\n0.1929\\r\\n0.7617\\r\\n0.4558\\r\\n0.6702\\r\\n0.0859\\r\\n0.7827\\r\\n', 'output': ['0.1268098579 0.3129505364 0.0439299233 0.0262315144 0.1240254438 0.0473553980 0.0874473192 0.0210113664 0.2102386406 ']}, {'input': '10 45 1 2\\r\\n1 2\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n1 6\\r\\n1 7\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n6 2\\r\\n7 2\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n7 3\\r\\n8 3\\r\\n9 3\\r\\n3 10\\r\\n4 5\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n10 4\\r\\n6 5\\r\\n5 7\\r\\n8 5\\r\\n5 9\\r\\n10 5\\r\\n7 6\\r\\n8 6\\r\\n9 6\\r\\n10 6\\r\\n7 8\\r\\n9 7\\r\\n10 7\\r\\n8 9\\r\\n10 8\\r\\n9 10\\r\\n0.7632\\r\\n0.4462\\r\\n0.4321\\r\\n0.8036\\r\\n0.9500\\r\\n0.7438\\r\\n0.5196\\r\\n0.8022\\r\\n0.7419\\r\\n0.5806\\r\\n', 'output': ['0.1839204542 0.0471943915 0.0301277939 0.0985509080 0.3103919787 0.0755959621 0.0373307588 0.0978749428 0.0750231155 0.0439896946 ']}, {'input': '11 55 8 6\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n1 8\\r\\n1 9\\r\\n10 1\\r\\n11 1\\r\\n2 3\\r\\n4 2\\r\\n5 2\\r\\n2 6\\r\\n2 7\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n11 2\\r\\n3 4\\r\\n3 5\\r\\n6 3\\r\\n3 7\\r\\n8 3\\r\\n9 3\\r\\n10 3\\r\\n11 3\\r\\n5 4\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n4 9\\r\\n4 10\\r\\n4 11\\r\\n6 5\\r\\n5 7\\r\\n8 5\\r\\n9 5\\r\\n5 10\\r\\n11 5\\r\\n6 7\\r\\n6 8\\r\\n9 6\\r\\n10 6\\r\\n6 11\\r\\n8 7\\r\\n9 7\\r\\n10 7\\r\\n7 11\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n10 9\\r\\n9 11\\r\\n10 11\\r\\n0.1858\\r\\n0.1694\\r\\n0.0945\\r\\n0.2580\\r\\n0.7910\\r\\n0.7729\\r\\n0.4302\\r\\n0.8449\\r\\n0.6270\\r\\n0.4962\\r\\n0.8791\\r\\n', 'output': ['0.0217350602 0.0210042612 0.0179935711 0.0253227842 0.1194283296 0.1697890394 0.0373767031 0.2793005386 0.0638189548 0.0440643844 0.2001663735 ']}, {'input': '12 66 2 3\\r\\n2 1\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n1 7\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n11 1\\r\\n1 12\\r\\n3 2\\r\\n4 2\\r\\n5 2\\r\\n6 2\\r\\n2 7\\r\\n2 8\\r\\n2 9\\r\\n10 2\\r\\n2 11\\r\\n2 12\\r\\n4 3\\r\\n5 3\\r\\n3 6\\r\\n7 3\\r\\n3 8\\r\\n9 3\\r\\n10 3\\r\\n3 11\\r\\n12 3\\r\\n5 4\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n4 10\\r\\n4 11\\r\\n12 4\\r\\n5 6\\r\\n5 7\\r\\n8 5\\r\\n5 9\\r\\n10 5\\r\\n5 11\\r\\n5 12\\r\\n6 7\\r\\n8 6\\r\\n6 9\\r\\n6 10\\r\\n11 6\\r\\n6 12\\r\\n7 8\\r\\n9 7\\r\\n7 10\\r\\n7 11\\r\\n7 12\\r\\n8 9\\r\\n10 8\\r\\n11 8\\r\\n12 8\\r\\n9 10\\r\\n11 9\\r\\n12 9\\r\\n11 10\\r\\n12 10\\r\\n12 11\\r\\n0.1181\\r\\n0.1559\\r\\n0.6868\\r\\n0.4488\\r\\n0.9508\\r\\n0.7239\\r\\n0.4596\\r\\n0.1090\\r\\n0.8877\\r\\n0.7477\\r\\n0.6342\\r\\n0.4051\\r\\n', 'output': ['0.0167334785 0.0204621778 0.1507680976 0.0333634903 0.3205611704 0.0733633598 0.0342214963 0.0164411081 0.1691474546 0.0803859443 0.0543657157 0.0301865067 ']}, {'input': '2 1 2 2\\r\\n1 2\\r\\n0.4651\\r\\n0.4541\\r\\n', 'output': ['0.0000000000 1.0000000000 ']}, {'input': '3 2 2 3\\r\\n2 1\\r\\n3 1\\r\\n0.8433\\r\\n0.3166\\r\\n0.0498\\r\\n', 'output': ['0.9882627746 0.0114733647 0.0002638607 ']}, {'input': '4 3 3 2\\r\\n1 2\\r\\n2 3\\r\\n4 3\\r\\n0.6321\\r\\n0.1541\\r\\n0.8633\\r\\n0.4309\\r\\n', 'output': ['0.0530829653 0.0844848606 0.8583062902 0.0041258840 ']}, {'input': '5 4 1 1\\r\\n1 4\\r\\n2 3\\r\\n2 4\\r\\n5 2\\r\\n0.3986\\r\\n0.2139\\r\\n0.0845\\r\\n0.4852\\r\\n0.5779\\r\\n', 'output': ['1.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 ']}, {'input': '6 5 2 1\\r\\n1 6\\r\\n3 2\\r\\n3 6\\r\\n5 4\\r\\n4 6\\r\\n0.7506\\r\\n0.5129\\r\\n0.7965\\r\\n0.1712\\r\\n0.3321\\r\\n0.7033\\r\\n', 'output': ['0.0490630865 0.0083870955 0.3822667748 0.0174328057 0.0030541480 0.5397960896 ']}, {'input': '7 6 7 7\\r\\n1 3\\r\\n3 2\\r\\n7 3\\r\\n5 4\\r\\n6 4\\r\\n7 6\\r\\n0.1063\\r\\n0.5142\\r\\n0.8086\\r\\n0.2764\\r\\n0.1017\\r\\n0.2610\\r\\n0.6153\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '8 7 8 3\\r\\n3 1\\r\\n1 5\\r\\n2 6\\r\\n8 4\\r\\n5 6\\r\\n7 5\\r\\n5 8\\r\\n0.3036\\r\\n0.6397\\r\\n0.3751\\r\\n0.0160\\r\\n0.9384\\r\\n0.5140\\r\\n0.6922\\r\\n0.4464\\r\\n', 'output': ['0.0231073078 0.0004437071 0.0029737165 0.0000301038 0.9535554896 0.0022717175 0.0009690501 0.0166489075 ']}, {'input': '9 8 5 8\\r\\n1 2\\r\\n6 2\\r\\n2 7\\r\\n4 3\\r\\n5 3\\r\\n3 6\\r\\n6 8\\r\\n9 7\\r\\n0.5756\\r\\n0.9312\\r\\n0.4846\\r\\n0.7096\\r\\n0.9055\\r\\n0.5987\\r\\n0.6841\\r\\n0.6011\\r\\n0.5861\\r\\n', 'output': ['0.0004994782 0.3270344183 0.2258377173 0.0248431214 0.1829303180 0.2193026406 0.0065763617 0.0125278946 0.0004480498 ']}, {'input': '10 9 2 10\\r\\n1 2\\r\\n5 1\\r\\n7 1\\r\\n6 2\\r\\n3 5\\r\\n4 9\\r\\n5 10\\r\\n6 9\\r\\n10 8\\r\\n0.5376\\r\\n0.5747\\r\\n0.8019\\r\\n0.6922\\r\\n0.2890\\r\\n0.9193\\r\\n0.7521\\r\\n0.4436\\r\\n0.5970\\r\\n0.3173\\r\\n', 'output': ['0.2817412543 0.0959570556 0.0542629235 0.0025685657 0.1569610917 0.3021480932 0.0339864114 0.0084406954 0.0137071015 0.0502268077 ']}, {'input': '11 10 5 2\\r\\n11 1\\r\\n2 8\\r\\n2 10\\r\\n3 4\\r\\n9 4\\r\\n5 9\\r\\n6 9\\r\\n9 7\\r\\n11 9\\r\\n11 10\\r\\n0.0796\\r\\n0.0474\\r\\n0.2508\\r\\n0.6083\\r\\n0.7689\\r\\n0.1261\\r\\n0.2609\\r\\n0.4307\\r\\n0.8868\\r\\n0.3772\\r\\n0.6045\\r\\n', 'output': ['0.0003181172 0.0101075940 0.0001381672 0.0073377358 0.0067862223 0.0000641408 0.0001786077 0.0042257688 0.7637302105 0.0364209545 0.1706924813 ']}, {'input': '12 11 11 11\\r\\n3 1\\r\\n1 11\\r\\n3 2\\r\\n9 2\\r\\n2 10\\r\\n12 2\\r\\n3 5\\r\\n5 4\\r\\n8 5\\r\\n8 6\\r\\n12 7\\r\\n0.3563\\r\\n0.0931\\r\\n0.6741\\r\\n0.4162\\r\\n0.1307\\r\\n0.9049\\r\\n0.9435\\r\\n0.6656\\r\\n0.6276\\r\\n0.8688\\r\\n0.8109\\r\\n0.4977\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 ']}, {'input': '13 12 7 1\\r\\n2 1\\r\\n3 1\\r\\n6 1\\r\\n1 11\\r\\n2 9\\r\\n13 2\\r\\n3 10\\r\\n5 4\\r\\n4 11\\r\\n7 8\\r\\n7 13\\r\\n12 11\\r\\n0.1570\\r\\n0.0712\\r\\n0.0328\\r\\n0.5742\\r\\n0.0795\\r\\n0.6250\\r\\n0.7232\\r\\n0.8010\\r\\n0.8360\\r\\n0.1494\\r\\n0.3539\\r\\n0.8447\\r\\n0.9272\\r\\n', 'output': ['0.1034207245 0.0628088395 0.0093958837 0.0215220481 0.0001167809 0.0136922900 0.0642313143 0.0131051340 0.0511044118 0.0013590810 0.0568672232 0.0259479413 0.5764283278 ']}, {'input': '14 13 12 4\\r\\n1 6\\r\\n1 9\\r\\n9 2\\r\\n3 11\\r\\n4 12\\r\\n8 5\\r\\n5 11\\r\\n5 14\\r\\n10 7\\r\\n8 9\\r\\n13 9\\r\\n10 11\\r\\n12 11\\r\\n0.3228\\r\\n0.6911\\r\\n0.1498\\r\\n0.3435\\r\\n0.1763\\r\\n0.3718\\r\\n0.6798\\r\\n0.6485\\r\\n0.7299\\r\\n0.7418\\r\\n0.8041\\r\\n0.4249\\r\\n0.3820\\r\\n0.1464\\r\\n', 'output': ['0.0002725681 0.0001884812 0.0001796185 0.1521823863 0.0058382432 0.0000327578 0.0010923984 0.0053644997 0.0087619362 0.0145733462 0.3402217997 0.4711118932 0.0000364063 0.0001436652 ']}, {'input': '15 14 15 13\\r\\n4 1\\r\\n10 2\\r\\n3 12\\r\\n4 8\\r\\n12 4\\r\\n4 14\\r\\n7 5\\r\\n15 6\\r\\n7 9\\r\\n13 7\\r\\n14 7\\r\\n15 8\\r\\n12 10\\r\\n11 15\\r\\n0.5888\\r\\n0.1792\\r\\n0.7597\\r\\n0.6293\\r\\n0.3744\\r\\n0.3342\\r\\n0.8474\\r\\n0.8651\\r\\n0.1230\\r\\n0.4826\\r\\n0.0309\\r\\n0.3129\\r\\n0.9697\\r\\n0.4049\\r\\n0.0164\\r\\n', 'output': ['0.0045127683 0.0002130703 0.0079200770 0.2133409405 0.0005156567 0.0006969778 0.3990475462 0.1131589275 0.0000943589 0.0094364927 0.0000505592 0.0270366798 0.1760491983 0.0426472827 0.0052794640 ']}, {'input': '16 15 16 1\\r\\n1 3\\r\\n10 2\\r\\n9 3\\r\\n15 3\\r\\n4 10\\r\\n5 12\\r\\n16 5\\r\\n6 7\\r\\n6 15\\r\\n11 8\\r\\n11 9\\r\\n9 12\\r\\n14 9\\r\\n10 12\\r\\n10 13\\r\\n0.1478\\r\\n0.9068\\r\\n0.5458\\r\\n0.3318\\r\\n0.2632\\r\\n0.3624\\r\\n0.3189\\r\\n0.7264\\r\\n0.9796\\r\\n0.1311\\r\\n0.2947\\r\\n0.5834\\r\\n0.2095\\r\\n0.4419\\r\\n0.6588\\r\\n0.5525\\r\\n', 'output': ['0.0000811338 0.0093966712 0.0152177971 0.0004547303 0.0043006907 0.0013801376 0.0001128014 0.0001990500 0.9126720566 0.0104961528 0.0003134206 0.0369484070 0.0002490821 0.0000315496 0.0068014036 0.0013449155 ']}, {'input': '17 16 11 13\\r\\n3 1\\r\\n1 15\\r\\n2 15\\r\\n4 16\\r\\n5 8\\r\\n15 5\\r\\n8 6\\r\\n9 7\\r\\n10 7\\r\\n7 11\\r\\n17 7\\r\\n9 8\\r\\n12 8\\r\\n13 8\\r\\n10 16\\r\\n15 14\\r\\n0.7683\\r\\n0.9048\\r\\n0.1346\\r\\n0.4468\\r\\n0.1993\\r\\n0.7759\\r\\n0.8125\\r\\n0.2274\\r\\n0.1478\\r\\n0.8479\\r\\n0.9515\\r\\n0.7715\\r\\n0.3667\\r\\n0.0480\\r\\n0.0821\\r\\n0.6263\\r\\n0.2708\\r\\n', 'output': ['0.0258225311 0.0284330836 0.0000679627 0.0003573966 0.0152739625 0.0196276330 0.4722515893 0.1343480151 0.0275442145 0.0628400220 0.1521560220 0.0191064818 0.0031481221 0.0001752273 0.0307574428 0.0075784077 0.0005118859 ']}, {'input': '18 17 14 12\\r\\n1 2\\r\\n3 1\\r\\n18 1\\r\\n8 2\\r\\n9 2\\r\\n2 12\\r\\n2 17\\r\\n4 6\\r\\n15 4\\r\\n5 7\\r\\n7 6\\r\\n14 9\\r\\n12 10\\r\\n13 11\\r\\n11 16\\r\\n13 17\\r\\n14 15\\r\\n0.4024\\r\\n0.5565\\r\\n0.7870\\r\\n0.2691\\r\\n0.6727\\r\\n0.9621\\r\\n0.6842\\r\\n0.0271\\r\\n0.1097\\r\\n0.1747\\r\\n0.0784\\r\\n0.9550\\r\\n0.7523\\r\\n0.4284\\r\\n0.5238\\r\\n0.2709\\r\\n0.1595\\r\\n0.4590\\r\\n', 'output': ['0.0281574957 0.2581814330 0.0076272067 0.0107746580 0.0003467009 0.1714587133 0.0031642368 0.0000709113 0.0166962221 0.0000539712 0.0014416406 0.4106759112 0.0257975192 0.0287578136 0.0269904984 0.0002646607 0.0080077089 0.0015326985 ']}, {'input': '19 18 10 6\\r\\n5 1\\r\\n12 1\\r\\n7 2\\r\\n2 18\\r\\n15 3\\r\\n3 16\\r\\n4 6\\r\\n4 10\\r\\n6 9\\r\\n8 11\\r\\n13 9\\r\\n9 14\\r\\n10 11\\r\\n10 16\\r\\n18 11\\r\\n12 16\\r\\n17 16\\r\\n17 19\\r\\n0.6093\\r\\n0.4153\\r\\n0.2931\\r\\n0.6880\\r\\n0.0979\\r\\n0.9545\\r\\n0.2846\\r\\n0.5257\\r\\n0.5168\\r\\n0.2795\\r\\n0.4887\\r\\n0.3822\\r\\n0.2863\\r\\n0.5194\\r\\n0.3924\\r\\n0.8028\\r\\n0.8415\\r\\n0.2838\\r\\n0.9046\\r\\n', 'output': ['0.0054757481 0.0062808098 0.0031941783 0.1082773399 0.0000307445 0.5100921861 0.0003567821 0.0025634213 0.0108163903 0.0520824767 0.0484805903 0.0056216539 0.0001632695 0.0004991833 0.0004654536 0.1938285472 0.0350879002 0.0079000523 0.0087832726 ']}, {'input': '20 19 16 10\\r\\n2 1\\r\\n1 9\\r\\n1 10\\r\\n2 11\\r\\n2 16\\r\\n3 8\\r\\n15 3\\r\\n4 7\\r\\n4 14\\r\\n19 5\\r\\n6 16\\r\\n12 8\\r\\n15 13\\r\\n15 14\\r\\n15 19\\r\\n20 15\\r\\n19 16\\r\\n20 17\\r\\n18 20\\r\\n0.9546\\r\\n0.8460\\r\\n0.3530\\r\\n0.1547\\r\\n0.1812\\r\\n0.3792\\r\\n0.8502\\r\\n0.0898\\r\\n0.6804\\r\\n0.0465\\r\\n0.6699\\r\\n0.1623\\r\\n0.4908\\r\\n0.7436\\r\\n0.9748\\r\\n0.2965\\r\\n0.8528\\r\\n0.6024\\r\\n0.2343\\r\\n0.9496\\r\\n', 'output': ['0.4470817637 0.1925429406 0.0001522967 0.0001272041 0.0002374526 0.0009539965 0.0002531055 0.0000477577 0.0005965772 0.0000053211 0.0022254991 0.0000051402 0.0000145893 0.0010192506 0.3120036469 0.0168639725 0.0001460780 0.0000163715 0.0093450398 0.0163619965 ']}, {'input': '21 20 10 15\\r\\n1 4\\r\\n1 7\\r\\n1 13\\r\\n3 2\\r\\n3 13\\r\\n3 20\\r\\n14 4\\r\\n20 5\\r\\n6 17\\r\\n11 8\\r\\n13 9\\r\\n21 10\\r\\n11 14\\r\\n16 11\\r\\n12 14\\r\\n18 13\\r\\n21 14\\r\\n18 15\\r\\n17 16\\r\\n19 21\\r\\n0.5511\\r\\n0.4174\\r\\n0.1974\\r\\n0.1756\\r\\n0.4806\\r\\n0.7202\\r\\n0.0261\\r\\n0.1533\\r\\n0.5109\\r\\n0.9091\\r\\n0.1702\\r\\n0.0274\\r\\n0.6287\\r\\n0.4452\\r\\n0.8881\\r\\n0.4081\\r\\n0.2318\\r\\n0.9270\\r\\n0.3270\\r\\n0.5124\\r\\n0.6402\\r\\n', 'output': ['0.1274165708 0.0020068482 0.0221441417 0.0273841255 0.0011326856 0.0044150190 0.0000989026 0.0007239413 0.0032940960 0.0373926594 0.0268760758 0.0001121418 0.2255090088 0.1477723696 0.0142089213 0.0152217984 0.0061489761 0.2354718191 0.0009022427 0.0122643704 0.0895032861 ']}, {'input': '22 21 7 3\\r\\n1 16\\r\\n8 2\\r\\n3 17\\r\\n20 4\\r\\n12 5\\r\\n5 22\\r\\n13 6\\r\\n13 7\\r\\n14 7\\r\\n8 12\\r\\n9 10\\r\\n12 9\\r\\n9 13\\r\\n20 11\\r\\n13 20\\r\\n14 16\\r\\n14 17\\r\\n19 14\\r\\n22 15\\r\\n18 19\\r\\n21 18\\r\\n0.6643\\r\\n0.0936\\r\\n0.5519\\r\\n0.8542\\r\\n0.6411\\r\\n0.9560\\r\\n0.2451\\r\\n0.5841\\r\\n0.3590\\r\\n0.1352\\r\\n0.5336\\r\\n0.3901\\r\\n0.7602\\r\\n0.8653\\r\\n0.5635\\r\\n0.3840\\r\\n0.8625\\r\\n0.7766\\r\\n0.6941\\r\\n0.8028\\r\\n0.7482\\r\\n0.8431\\r\\n', 'output': ['0.0020725026 0.0000229554 0.0023344134 0.0034044638 0.0065601793 0.0429445422 0.0126807206 0.0037257267 0.0126648147 0.0001399510 0.0003551323 0.0103862706 0.1426738764 0.5077168905 0.0001223623 0.0058931744 0.1645677033 0.0138897777 0.0191701371 0.0396907000 0.0013049419 0.0076787635 ']}, {'input': '5 8 2 4\\r\\n1 2\\r\\n1 3\\r\\n5 1\\r\\n2 3\\r\\n2 4\\r\\n5 2\\r\\n4 3\\r\\n3 5\\r\\n0.2642\\r\\n0.6145\\r\\n0.1714\\r\\n0.5156\\r\\n0.7771\\r\\n', 'output': ['0.0469766543 0.4930268360 0.1177339858 0.1318957885 0.2103667354 ']}, {'input': '15 46 4 11\\r\\n1 3\\r\\n1 5\\r\\n6 1\\r\\n7 1\\r\\n1 8\\r\\n2 6\\r\\n8 2\\r\\n2 9\\r\\n12 2\\r\\n2 15\\r\\n3 4\\r\\n6 3\\r\\n3 12\\r\\n3 13\\r\\n3 14\\r\\n4 7\\r\\n9 4\\r\\n4 10\\r\\n4 14\\r\\n6 5\\r\\n5 7\\r\\n10 5\\r\\n12 5\\r\\n13 5\\r\\n5 14\\r\\n7 6\\r\\n9 6\\r\\n10 6\\r\\n6 13\\r\\n8 7\\r\\n7 13\\r\\n10 8\\r\\n8 13\\r\\n9 10\\r\\n9 13\\r\\n9 14\\r\\n11 10\\r\\n10 13\\r\\n10 15\\r\\n12 11\\r\\n11 15\\r\\n12 13\\r\\n15 12\\r\\n14 13\\r\\n15 13\\r\\n15 14\\r\\n0.2660\\r\\n0.9315\\r\\n0.7185\\r\\n0.9642\\r\\n0.1587\\r\\n0.2494\\r\\n0.3372\\r\\n0.0928\\r\\n0.3500\\r\\n0.0196\\r\\n0.2396\\r\\n0.8611\\r\\n0.5787\\r\\n0.4279\\r\\n0.0221\\r\\n', 'output': ['0.0079249483 0.1315277498 0.0526707222 0.5053657470 0.0138346726 0.0216010978 0.0163209733 0.0054495713 0.0182973209 0.0187149289 0.0026732816 0.0956673121 0.0798423781 0.0227469261 0.0073623701 ']}, {'input': '17 43 3 16\\r\\n8 1\\r\\n1 10\\r\\n1 12\\r\\n1 13\\r\\n6 2\\r\\n10 2\\r\\n12 2\\r\\n2 14\\r\\n15 2\\r\\n2 17\\r\\n6 3\\r\\n8 3\\r\\n12 3\\r\\n3 16\\r\\n4 5\\r\\n6 4\\r\\n4 7\\r\\n4 9\\r\\n13 4\\r\\n17 4\\r\\n6 5\\r\\n5 17\\r\\n6 11\\r\\n6 12\\r\\n6 17\\r\\n7 10\\r\\n7 12\\r\\n17 7\\r\\n9 8\\r\\n13 8\\r\\n8 15\\r\\n8 16\\r\\n17 8\\r\\n13 9\\r\\n9 16\\r\\n9 17\\r\\n10 15\\r\\n16 10\\r\\n17 11\\r\\n13 12\\r\\n16 12\\r\\n15 13\\r\\n15 14\\r\\n0.1613\\r\\n0.4247\\r\\n0.4271\\r\\n0.5636\\r\\n0.0214\\r\\n0.3172\\r\\n0.8156\\r\\n0.7663\\r\\n0.1132\\r\\n0.4127\\r\\n0.5416\\r\\n0.5220\\r\\n0.9366\\r\\n0.4426\\r\\n0.5884\\r\\n0.4569\\r\\n0.9613\\r\\n', 'output': ['0.0048722451 0.0160301298 0.0812776965 0.0169053414 0.0007186872 0.0187250770 0.0243168580 0.1375215020 0.0057046011 0.0143632541 0.0010119715 0.0786732010 0.1575241299 0.0011546527 0.0158649639 0.1204518537 0.3048838351 ']}, {'input': '6 6 6 3\\r\\n2 1\\r\\n5 1\\r\\n6 2\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n0.3429\\r\\n0.7018\\r\\n0.0699\\r\\n0.9602\\r\\n0.9585\\r\\n0.5070\\r\\n', 'output': ['0.0032904304 0.0076304590 0.0000112081 0.3439315417 0.6399603309 0.0051760299 ']}, {'input': '10 15 7 8\\r\\n3 1\\r\\n1 7\\r\\n2 4\\r\\n2 5\\r\\n9 2\\r\\n3 5\\r\\n7 3\\r\\n8 3\\r\\n4 7\\r\\n8 4\\r\\n5 7\\r\\n10 5\\r\\n6 8\\r\\n6 9\\r\\n9 8\\r\\n0.4654\\r\\n0.8489\\r\\n0.7851\\r\\n0.9790\\r\\n0.8126\\r\\n0.1443\\r\\n0.8385\\r\\n0.1355\\r\\n0.2672\\r\\n0.0631\\r\\n', 'output': ['0.0086717445 0.0591108269 0.1502231556 0.5026507699 0.0926399948 0.0018832329 0.1642324438 0.0138497445 0.0067226391 0.0000154479 ']}, {'input': '10 16 9 2\\r\\n3 1\\r\\n5 1\\r\\n9 1\\r\\n2 5\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n3 5\\r\\n6 3\\r\\n10 3\\r\\n4 6\\r\\n4 10\\r\\n5 10\\r\\n6 7\\r\\n8 7\\r\\n10 7\\r\\n0.8151\\r\\n0.2117\\r\\n0.5832\\r\\n0.0244\\r\\n0.1781\\r\\n0.5401\\r\\n0.4576\\r\\n0.1453\\r\\n0.3072\\r\\n0.2282\\r\\n', 'output': ['0.2858990309 0.1917730962 0.1409268921 0.0046323044 0.0671166968 0.0504929902 0.0497075403 0.0134447894 0.0942164861 0.1017901736 ']}, {'input': '22 30 9 17\\r\\n1 18\\r\\n1 20\\r\\n2 3\\r\\n5 2\\r\\n6 2\\r\\n2 11\\r\\n2 19\\r\\n6 4\\r\\n21 4\\r\\n22 4\\r\\n5 6\\r\\n8 5\\r\\n14 5\\r\\n10 6\\r\\n21 6\\r\\n22 7\\r\\n16 8\\r\\n9 12\\r\\n16 9\\r\\n18 10\\r\\n11 18\\r\\n11 22\\r\\n14 12\\r\\n13 22\\r\\n15 17\\r\\n21 15\\r\\n16 22\\r\\n22 17\\r\\n21 18\\r\\n20 22\\r\\n0.3290\\r\\n0.6966\\r\\n0.3952\\r\\n0.4713\\r\\n0.2462\\r\\n0.6482\\r\\n0.3471\\r\\n0.6729\\r\\n0.8845\\r\\n0.8581\\r\\n0.6991\\r\\n0.7279\\r\\n0.9751\\r\\n0.4603\\r\\n0.9591\\r\\n0.9890\\r\\n0.0230\\r\\n0.1388\\r\\n0.8745\\r\\n0.3635\\r\\n0.9655\\r\\n0.6980\\r\\n', 'output': ['0.0012630922 0.0302925914 0.0001113046 0.0058223640 0.0084588979 0.0305910518 0.0001130212 0.0050014407 0.0135265144 0.0105166645 0.0126985994 0.0054538897 0.0233929192 0.0031581259 0.0393763424 0.5293925504 0.0008728982 0.0041399002 0.0022100491 0.0013950475 0.1941228326 0.0780899026 ']}, {'input': '22 32 5 7\\r\\n1 3\\r\\n9 1\\r\\n16 2\\r\\n2 18\\r\\n3 5\\r\\n3 6\\r\\n3 10\\r\\n11 3\\r\\n13 3\\r\\n3 22\\r\\n22 4\\r\\n5 6\\r\\n5 8\\r\\n14 5\\r\\n5 15\\r\\n5 18\\r\\n19 6\\r\\n6 20\\r\\n6 21\\r\\n21 7\\r\\n8 18\\r\\n22 9\\r\\n10 13\\r\\n22 10\\r\\n15 11\\r\\n17 12\\r\\n12 20\\r\\n17 14\\r\\n16 22\\r\\n17 18\\r\\n17 21\\r\\n18 20\\r\\n0.9511\\r\\n0.6830\\r\\n0.2035\\r\\n0.9142\\r\\n0.6807\\r\\n0.6502\\r\\n0.3221\\r\\n0.0903\\r\\n0.1790\\r\\n0.2234\\r\\n0.9788\\r\\n0.6005\\r\\n0.3179\\r\\n0.2115\\r\\n0.8035\\r\\n0.8730\\r\\n0.0342\\r\\n0.2599\\r\\n0.7508\\r\\n0.1815\\r\\n0.6454\\r\\n0.7619\\r\\n', 'output': ['0.0547241979 0.0127153084 0.0441350190 0.0054767347 0.2027512578 0.1785779328 0.0009181368 0.0030386274 0.0012253232 0.0047658952 0.1614826534 0.0200979142 0.0024921791 0.0089124294 0.0185716675 0.0233837366 0.0345272095 0.0510312272 0.0049608897 0.0146416997 0.0870608962 0.0645090644 ']}, {'input': '21 23 21 17\\r\\n3 1\\r\\n3 2\\r\\n15 2\\r\\n2 20\\r\\n21 2\\r\\n16 3\\r\\n3 19\\r\\n4 8\\r\\n11 4\\r\\n17 4\\r\\n5 8\\r\\n5 9\\r\\n5 13\\r\\n6 16\\r\\n12 7\\r\\n16 7\\r\\n12 9\\r\\n10 17\\r\\n21 11\\r\\n12 18\\r\\n21 14\\r\\n15 17\\r\\n20 16\\r\\n0.0190\\r\\n0.5764\\r\\n0.1426\\r\\n0.4577\\r\\n0.7596\\r\\n0.5794\\r\\n0.5531\\r\\n0.9095\\r\\n0.6558\\r\\n0.8086\\r\\n0.2032\\r\\n0.4600\\r\\n0.9388\\r\\n0.1243\\r\\n0.2195\\r\\n0.7691\\r\\n0.1250\\r\\n0.1658\\r\\n0.4437\\r\\n0.7445\\r\\n0.0782\\r\\n', 'output': ['0.0000449260 0.2344991918 0.0251976569 0.1319548171 0.0505050501 0.0009015861 0.0110788625 0.1360612739 0.0147837889 0.0419721572 0.0374092349 0.0159331361 0.0176432803 0.0015421188 0.0322649361 0.1040211064 0.0579773602 0.0001476576 0.0017154120 0.0398347629 0.0445116844 ']}, {'input': '21 24 10 10\\r\\n11 1\\r\\n14 1\\r\\n4 2\\r\\n2 10\\r\\n3 5\\r\\n3 8\\r\\n3 9\\r\\n3 13\\r\\n3 17\\r\\n21 3\\r\\n4 9\\r\\n20 5\\r\\n6 12\\r\\n17 6\\r\\n9 7\\r\\n15 7\\r\\n7 19\\r\\n12 13\\r\\n12 15\\r\\n15 14\\r\\n21 14\\r\\n16 19\\r\\n18 20\\r\\n19 21\\r\\n0.4227\\r\\n0.9018\\r\\n0.8446\\r\\n0.0334\\r\\n0.8707\\r\\n0.5558\\r\\n0.4513\\r\\n0.1537\\r\\n0.9028\\r\\n0.2106\\r\\n0.0863\\r\\n0.4888\\r\\n0.3508\\r\\n0.3819\\r\\n0.2980\\r\\n0.6791\\r\\n0.6029\\r\\n0.0931\\r\\n0.8012\\r\\n0.9531\\r\\n0.0343\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 ']}, {'input': '21 25 20 3\\r\\n18 1\\r\\n12 2\\r\\n20 2\\r\\n11 3\\r\\n9 4\\r\\n12 4\\r\\n4 15\\r\\n4 20\\r\\n5 8\\r\\n5 15\\r\\n5 18\\r\\n5 20\\r\\n6 16\\r\\n20 7\\r\\n8 11\\r\\n13 8\\r\\n16 10\\r\\n10 19\\r\\n17 11\\r\\n12 15\\r\\n12 16\\r\\n12 21\\r\\n17 13\\r\\n14 18\\r\\n16 20\\r\\n0.3609\\r\\n0.9580\\r\\n0.3737\\r\\n0.7107\\r\\n0.6199\\r\\n0.4418\\r\\n0.0874\\r\\n0.5309\\r\\n0.3103\\r\\n0.9377\\r\\n0.8430\\r\\n0.9569\\r\\n0.5227\\r\\n0.6203\\r\\n0.4745\\r\\n0.4190\\r\\n0.6055\\r\\n0.8480\\r\\n0.8791\\r\\n0.4012\\r\\n0.3441\\r\\n', 'output': ['0.0001115124 0.0980714461 0.0002416850 0.0433302884 0.1021821003 0.0004704958 0.0000866423 0.0539373770 0.0001486904 0.0329442386 0.0940435447 0.4179895790 0.0123317109 0.0004663481 0.0186175265 0.0173859990 0.0115346705 0.0516017594 0.0012743943 0.0432054878 0.0000245034 ']}, {'input': '22 23 5 16\\r\\n20 1\\r\\n1 22\\r\\n2 3\\r\\n2 4\\r\\n3 13\\r\\n16 3\\r\\n4 6\\r\\n9 5\\r\\n5 22\\r\\n16 7\\r\\n9 8\\r\\n8 13\\r\\n10 16\\r\\n10 22\\r\\n11 17\\r\\n22 12\\r\\n14 15\\r\\n16 14\\r\\n14 18\\r\\n15 19\\r\\n16 21\\r\\n19 17\\r\\n22 17\\r\\n0.7393\\r\\n0.5325\\r\\n0.7522\\r\\n0.0343\\r\\n0.4628\\r\\n0.4713\\r\\n0.0749\\r\\n0.2350\\r\\n0.1396\\r\\n0.4916\\r\\n0.9203\\r\\n0.3179\\r\\n0.3378\\r\\n0.5174\\r\\n0.6705\\r\\n0.9649\\r\\n0.0823\\r\\n0.6370\\r\\n0.3185\\r\\n0.8381\\r\\n0.6475\\r\\n0.8173\\r\\n', 'output': ['0.0088399457 0.0037821738 0.0429781208 0.0005983597 0.0060422088 0.0002929921 0.0000030894 0.0040866917 0.0027909053 0.0135153898 0.0117585651 0.0001331749 0.0058057805 0.0119937930 0.0107339787 0.7106384041 0.0059716200 0.0009389289 0.0043356417 0.0022053815 0.0001722543 0.1523826002 ']}, {'input': '22 26 22 13\\r\\n1 2\\r\\n3 1\\r\\n1 21\\r\\n1 22\\r\\n9 2\\r\\n13 2\\r\\n2 17\\r\\n3 16\\r\\n11 4\\r\\n7 5\\r\\n12 5\\r\\n5 21\\r\\n6 12\\r\\n6 18\\r\\n11 7\\r\\n18 8\\r\\n9 11\\r\\n9 20\\r\\n10 13\\r\\n11 14\\r\\n11 18\\r\\n19 12\\r\\n15 22\\r\\n17 16\\r\\n18 22\\r\\n22 21\\r\\n0.1724\\r\\n0.6546\\r\\n0.1197\\r\\n0.5874\\r\\n0.2667\\r\\n0.1593\\r\\n0.5054\\r\\n0.1572\\r\\n0.1620\\r\\n0.2524\\r\\n0.6551\\r\\n0.5020\\r\\n0.1909\\r\\n0.2257\\r\\n0.7479\\r\\n0.6343\\r\\n0.6408\\r\\n0.7443\\r\\n0.3852\\r\\n0.8838\\r\\n0.2693\\r\\n0.3504\\r\\n', 'output': ['0.0845150088 0.2599909733 0.0097983608 0.0018923031 0.0239189914 0.0048992078 0.0160198485 0.0001406067 0.0247058927 0.0013355496 0.1609619578 0.0266705055 0.0121400170 0.0002951678 0.0125662798 0.0330821904 0.0360913305 0.1467042455 0.0007214805 0.0257426840 0.0360195050 0.0817878936 ']}, {'input': '22 25 2 7\\r\\n17 1\\r\\n2 16\\r\\n2 22\\r\\n14 3\\r\\n3 15\\r\\n20 3\\r\\n4 8\\r\\n4 12\\r\\n4 13\\r\\n13 5\\r\\n5 16\\r\\n16 6\\r\\n11 7\\r\\n17 7\\r\\n7 21\\r\\n9 15\\r\\n9 22\\r\\n14 10\\r\\n10 15\\r\\n10 17\\r\\n20 10\\r\\n16 12\\r\\n18 13\\r\\n18 16\\r\\n19 22\\r\\n0.9622\\r\\n0.8251\\r\\n0.9681\\r\\n0.2488\\r\\n0.3662\\r\\n0.5921\\r\\n0.5852\\r\\n0.0411\\r\\n0.2418\\r\\n0.0125\\r\\n0.2109\\r\\n0.8481\\r\\n0.3958\\r\\n0.1604\\r\\n0.8006\\r\\n0.9077\\r\\n0.7900\\r\\n0.7867\\r\\n0.8533\\r\\n0.6754\\r\\n0.7537\\r\\n0.1636\\r\\n', 'output': ['0.0397606434 0.0600590881 0.3808962043 0.0014000167 0.0011392632 0.0002081290 0.0143391730 0.0000065896 0.0122923376 0.0194932708 0.0001001379 0.0082802798 0.0024780234 0.0030637724 0.1211126468 0.1962584577 0.0804543597 0.0051630869 0.0166074944 0.0140209327 0.0017717043 0.0210943884 ']}, {'input': '20 23 17 3\\r\\n18 1\\r\\n2 6\\r\\n10 2\\r\\n3 8\\r\\n12 4\\r\\n8 5\\r\\n9 5\\r\\n17 5\\r\\n7 8\\r\\n15 7\\r\\n7 16\\r\\n9 18\\r\\n9 20\\r\\n10 15\\r\\n17 10\\r\\n11 14\\r\\n11 18\\r\\n13 12\\r\\n12 14\\r\\n14 13\\r\\n20 15\\r\\n16 19\\r\\n20 16\\r\\n0.3546\\r\\n0.6179\\r\\n0.2477\\r\\n0.4236\\r\\n0.8433\\r\\n0.0304\\r\\n0.5569\\r\\n0.4558\\r\\n0.8289\\r\\n0.1959\\r\\n0.2156\\r\\n0.3993\\r\\n0.0429\\r\\n0.9185\\r\\n0.1945\\r\\n0.8919\\r\\n0.8929\\r\\n0.3044\\r\\n0.2973\\r\\n0.1637\\r\\n', 'output': ['0.0003638881 0.0163339067 0.0008806850 0.0000274159 0.3262188951 0.0000246366 0.0536909073 0.0520393925 0.1051082156 0.0261569273 0.0020883748 0.0005216032 0.0000848720 0.0268220987 0.0257688220 0.1285525498 0.2126000150 0.0073895213 0.0000994338 0.0152278393 ']}, {'input': '20 21 5 14\\r\\n1 10\\r\\n13 1\\r\\n19 1\\r\\n2 11\\r\\n14 2\\r\\n2 17\\r\\n7 3\\r\\n13 3\\r\\n4 15\\r\\n14 5\\r\\n19 5\\r\\n6 16\\r\\n13 8\\r\\n16 9\\r\\n15 11\\r\\n11 19\\r\\n15 12\\r\\n16 12\\r\\n18 12\\r\\n15 20\\r\\n17 16\\r\\n0.5805\\r\\n0.3342\\r\\n0.7705\\r\\n0.7345\\r\\n0.1304\\r\\n0.3862\\r\\n0.6920\\r\\n0.6597\\r\\n0.6223\\r\\n0.0125\\r\\n0.4646\\r\\n0.9876\\r\\n0.7291\\r\\n0.3720\\r\\n0.2529\\r\\n0.1635\\r\\n0.5579\\r\\n0.4736\\r\\n0.6798\\r\\n0.1940\\r\\n', 'output': ['0.0290729509 0.0774707737 0.0048407220 0.0022268940 0.0840499631 0.0003440094 0.0003284870 0.0006200526 0.0008986063 0.0000093558 0.0641414110 0.2073528076 0.0194228289 0.2619733510 0.0124627336 0.0066013691 0.0179828402 0.0000059094 0.2100074063 0.0001875280 ']}, {'input': '20 25 1 12\\r\\n1 11\\r\\n12 1\\r\\n18 1\\r\\n4 2\\r\\n3 5\\r\\n3 7\\r\\n3 11\\r\\n14 3\\r\\n3 16\\r\\n17 3\\r\\n11 4\\r\\n4 16\\r\\n18 4\\r\\n5 6\\r\\n5 9\\r\\n10 5\\r\\n5 14\\r\\n5 20\\r\\n9 6\\r\\n17 6\\r\\n8 17\\r\\n12 10\\r\\n16 13\\r\\n14 19\\r\\n15 19\\r\\n0.5533\\r\\n0.6775\\r\\n0.4103\\r\\n0.7882\\r\\n0.9682\\r\\n0.0157\\r\\n0.8149\\r\\n0.2403\\r\\n0.4483\\r\\n0.1045\\r\\n0.7979\\r\\n0.0113\\r\\n0.9501\\r\\n0.7438\\r\\n0.6028\\r\\n0.8786\\r\\n0.8645\\r\\n0.8427\\r\\n0.2974\\r\\n0.2234\\r\\n', 'output': ['0.3836337810 0.0005834345 0.0229041026 0.0461902969 0.3196862695 0.0007593053 0.0018549199 0.0000123965 0.0005294816 0.0079362295 0.0669374470 0.0290126728 0.0053233321 0.0091036233 0.0001539764 0.0320034925 0.0145047810 0.0584237926 0.0004433762 0.0000032889 ']}, {'input': '16 17 7 1\\r\\n3 1\\r\\n1 8\\r\\n10 1\\r\\n1 11\\r\\n15 1\\r\\n15 2\\r\\n2 16\\r\\n3 9\\r\\n4 13\\r\\n15 5\\r\\n16 6\\r\\n11 7\\r\\n8 12\\r\\n9 10\\r\\n14 9\\r\\n10 11\\r\\n13 16\\r\\n0.4938\\r\\n0.1780\\r\\n0.5063\\r\\n0.2975\\r\\n0.0828\\r\\n0.7123\\r\\n0.6365\\r\\n0.3149\\r\\n0.1640\\r\\n0.2521\\r\\n0.8296\\r\\n0.9536\\r\\n0.2263\\r\\n0.1757\\r\\n0.7787\\r\\n0.4786\\r\\n', 'output': ['0.2282703609 0.0041908237 0.0240980923 0.0001797951 0.0000528785 0.0016021604 0.0137910440 0.0127072600 0.0229547593 0.0461207439 0.4817791924 0.0589129374 0.0014384188 0.0007747441 0.0911572626 0.0119695266 ']}, {'input': '18 19 4 11\\r\\n1 9\\r\\n2 8\\r\\n3 5\\r\\n3 6\\r\\n4 14\\r\\n9 5\\r\\n15 5\\r\\n8 6\\r\\n14 6\\r\\n12 7\\r\\n7 14\\r\\n7 17\\r\\n7 18\\r\\n8 18\\r\\n12 9\\r\\n14 10\\r\\n18 11\\r\\n14 13\\r\\n16 17\\r\\n0.3249\\r\\n0.3531\\r\\n0.3056\\r\\n0.4843\\r\\n0.7970\\r\\n0.5842\\r\\n0.5472\\r\\n0.4521\\r\\n0.2028\\r\\n0.7950\\r\\n0.1425\\r\\n0.4595\\r\\n0.1226\\r\\n0.0513\\r\\n0.5915\\r\\n0.2733\\r\\n0.7116\\r\\n0.0974\\r\\n', 'output': ['0.0011964236 0.0027831999 0.0140945800 0.0099145200 0.0983898473 0.1586288138 0.2962532703 0.0986994249 0.0196928959 0.0361972940 0.0015096894 0.0240101362 0.0015026996 0.1439159142 0.0012566904 0.0004912934 0.0439254039 0.0475379030 ']}, {'input': '19 20 7 13\\r\\n1 8\\r\\n10 1\\r\\n12 1\\r\\n1 13\\r\\n2 3\\r\\n2 13\\r\\n5 4\\r\\n11 4\\r\\n16 4\\r\\n5 7\\r\\n5 12\\r\\n5 13\\r\\n12 6\\r\\n9 10\\r\\n18 9\\r\\n15 10\\r\\n17 14\\r\\n14 19\\r\\n17 15\\r\\n16 17\\r\\n0.2124\\r\\n0.4090\\r\\n0.6285\\r\\n0.8759\\r\\n0.6790\\r\\n0.3161\\r\\n0.7681\\r\\n0.0730\\r\\n0.9793\\r\\n0.9753\\r\\n0.6491\\r\\n0.3349\\r\\n0.5286\\r\\n0.9760\\r\\n0.0743\\r\\n0.3295\\r\\n0.4276\\r\\n0.5759\\r\\n0.9666\\r\\n', 'output': ['0.0307369775 0.0185380486 0.0049762965 0.0801258012 0.4016568896 0.0012615177 0.0458257790 0.0001732439 0.0262190397 0.2072028585 0.0005878688 0.0347646012 0.1014805103 0.0361157326 0.0009321471 0.0019251201 0.0051159376 0.0000088276 0.0023528026 ']}, {'input': '19 45 4 19\\r\\n3 1\\r\\n4 1\\r\\n8 1\\r\\n9 1\\r\\n1 15\\r\\n4 2\\r\\n2 7\\r\\n8 2\\r\\n10 2\\r\\n12 2\\r\\n14 2\\r\\n6 4\\r\\n12 4\\r\\n4 14\\r\\n18 4\\r\\n8 5\\r\\n5 16\\r\\n17 5\\r\\n5 18\\r\\n6 15\\r\\n6 16\\r\\n6 17\\r\\n11 7\\r\\n7 12\\r\\n16 7\\r\\n19 7\\r\\n15 8\\r\\n9 10\\r\\n12 9\\r\\n9 14\\r\\n18 9\\r\\n19 9\\r\\n10 12\\r\\n14 10\\r\\n19 10\\r\\n11 13\\r\\n11 14\\r\\n15 11\\r\\n17 11\\r\\n11 19\\r\\n12 16\\r\\n15 13\\r\\n15 14\\r\\n14 17\\r\\n18 19\\r\\n0.4821\\r\\n0.4961\\r\\n0.0784\\r\\n0.4492\\r\\n0.7542\\r\\n0.2541\\r\\n0.9007\\r\\n0.3242\\r\\n0.3859\\r\\n0.2849\\r\\n0.4588\\r\\n0.9274\\r\\n0.1538\\r\\n0.4482\\r\\n0.6068\\r\\n0.9144\\r\\n0.8487\\r\\n0.1854\\r\\n0.4288\\r\\n', 'output': ['0.0266883400 0.0401292756 0.0000341093 0.0443828404 0.0331957500 0.0072730898 0.1489809719 0.0096326688 0.0407018303 0.0188112037 0.0334055826 0.2872048781 0.0010750781 0.0556489717 0.0481176365 0.0894552396 0.0587582081 0.0258448651 0.0306594604 ']}, {'input': '6 9 2 5\\r\\n1 2\\r\\n3 1\\r\\n6 1\\r\\n2 4\\r\\n5 2\\r\\n3 6\\r\\n5 4\\r\\n6 4\\r\\n6 5\\r\\n0.9796\\r\\n0.7061\\r\\n0.6636\\r\\n0.9200\\r\\n0.4454\\r\\n0.5302\\r\\n', 'output': ['0.3356041533 0.2464765303 0.0058143943 0.2843884681 0.0929849670 0.0347314871 ']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, x, y;\nvector<int> g[1 << 21];\ndouble p[1 << 21], f[1 << 21];\nvoid bfs(int s) {\n  for (int i = 0; i < n; i++) f[i] = 0.0;\n  vector<int> q;\n  q.push_back(s);\n  f[s] = 1.0;\n  while (q.size()) {\n    int v = q[q.size() - 1];\n    q.pop_back();\n    for (int u : g[v])\n      if (f[u] == 0.0) {\n        f[u] = p[v] / (1.0 - p[v]);\n        q.push_back(u);\n      }\n  }\n}\nint main() {\n  scanf(\"%d %d %d %d\", &n, &m, &x, &y);\n  x--, y--;\n  for (int i = 0; i < m; i++) {\n    int a, b;\n    scanf(\"%d %d\", &a, &b);\n    g[a].push_back(b);\n    g[b].push_back(a);\n  }\n  for (int i = 0; i < n; i++) scanf(\"%lf\", &p[i]);\n  bfs(x);\n  bfs(y);\n  for (int i = 0; i < n; i++) printf(\"%.12f \", f[i]);\n  return 0;\n}\n"}
{"src_uid": "ab410c6513a26ec3a41c63318dc38b78", "id": 37, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2700, "testcases": "[{'input': '2 1 1 2\\r\\n1 2\\r\\n0.5\\r\\n0.5\\r\\n', 'output': ['0.5000000000 0.5000000000 ']}, {'input': '4 4 1 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 1\\r\\n0.5\\r\\n0.5\\r\\n0.5\\r\\n0.5\\r\\n', 'output': ['0.3333333333 0.3333333333 0.1666666667 0.1666666667 ']}, {'input': '5 4 2 5\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n0.99\\r\\n0.6\\r\\n0.66\\r\\n0.23\\r\\n0.51\\r\\n', 'output': ['0.9976393323 0.0015805859 0.0000137404 0.0000015403 0.0007648011 ']}, {'input': '16 15 1 16\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n', 'output': ['0.0019644887 0.0325808635 0.0503829756 0.0645522937 0.0762658799 0.0856950294 0.0924815917 0.0960768773 0.0960768773 0.0924815917 0.0856950294 0.0762658799 0.0645522937 0.0503829756 0.0325808635 0.0019644887 ']}, {'input': '6 6 1 4\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 1\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.1535695632 0.1732152184 0.1732152184 0.1535695632 0.1732152184 0.1732152184 ']}, {'input': '2 1 1 2\\r\\n1 2\\r\\n0.142\\r\\n0.2\\r\\n', 'output': ['0.3983169705 0.6016830295 ']}, {'input': '6 5 2 1\\r\\n1 6\\r\\n3 2\\r\\n3 6\\r\\n5 4\\r\\n4 6\\r\\n0.7506\\r\\n0.5129\\r\\n0.7965\\r\\n0.1712\\r\\n0.3321\\r\\n0.7033\\r\\n', 'output': ['0.0490630865 0.0083870955 0.3822667748 0.0174328057 0.0030541480 0.5397960896 ']}, {'input': '10 9 2 10\\r\\n1 2\\r\\n5 1\\r\\n7 1\\r\\n6 2\\r\\n3 5\\r\\n4 9\\r\\n5 10\\r\\n6 9\\r\\n10 8\\r\\n0.5376\\r\\n0.5747\\r\\n0.8019\\r\\n0.6922\\r\\n0.2890\\r\\n0.9193\\r\\n0.7521\\r\\n0.4436\\r\\n0.5970\\r\\n0.3173\\r\\n', 'output': ['0.2817412543 0.0959570556 0.0542629235 0.0025685657 0.1569610917 0.3021480932 0.0339864114 0.0084406954 0.0137071015 0.0502268077 ']}, {'input': '15 21 5 15\\r\\n6 1\\r\\n1 10\\r\\n11 1\\r\\n2 3\\r\\n2 8\\r\\n11 2\\r\\n2 14\\r\\n3 11\\r\\n15 3\\r\\n4 9\\r\\n10 4\\r\\n11 4\\r\\n4 12\\r\\n5 8\\r\\n5 12\\r\\n13 5\\r\\n8 7\\r\\n8 13\\r\\n14 8\\r\\n9 12\\r\\n13 9\\r\\n0.0984\\r\\n0.9472\\r\\n0.0555\\r\\n0.1818\\r\\n0.6887\\r\\n0.2633\\r\\n0.6266\\r\\n0.7277\\r\\n0.4906\\r\\n0.5204\\r\\n0.3271\\r\\n0.8406\\r\\n0.1905\\r\\n0.8913\\r\\n0.1490\\r\\n', 'output': ['0.0077226021 0.5303336625 0.0054411451 0.0303793551 0.0404230994 0.0005350284 0.0013754254 0.1413320042 0.0265814303 0.0120371707 0.0322545543 0.1066358507 0.0104058084 0.0543251267 0.0002177368 ']}, {'input': '16 16 11 1\\r\\n15 1\\r\\n5 2\\r\\n10 2\\r\\n15 2\\r\\n4 3\\r\\n3 10\\r\\n3 11\\r\\n6 10\\r\\n9 7\\r\\n7 15\\r\\n12 8\\r\\n8 16\\r\\n13 9\\r\\n13 10\\r\\n16 11\\r\\n15 14\\r\\n0.7912\\r\\n0.2716\\r\\n0.2423\\r\\n0.7215\\r\\n0.3998\\r\\n0.3062\\r\\n0.0161\\r\\n0.9557\\r\\n0.8075\\r\\n0.0797\\r\\n0.8873\\r\\n0.1631\\r\\n0.8815\\r\\n0.8284\\r\\n0.4164\\r\\n0.0509\\r\\n', 'output': ['0.0153633854 0.0582037768 0.0644798137 0.0179019027 0.0038888919 0.0036876616 0.0067662879 0.1649462155 0.0713890711 0.0806917881 0.2077252654 0.0000190454 0.1796086267 0.0191451875 0.0980830806 0.0080999998 ']}, {'input': '22 21 1 22\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0012434856 0.0099719410 0.0199076715 0.0297915885 0.0395249019 0.0489267177 0.0577200158 0.0655362954 0.0719467411 0.0765217103 0.0789089312 0.0789089312 0.0765217103 0.0719467411 0.0655362954 0.0577200158 0.0489267177 0.0395249019 0.0297915885 0.0199076715 0.0099719410 0.0012434856 ']}, {'input': '22 23 5 16\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n22 1\\r\\n1 11\\r\\n0.01\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0009049944 0.0654619724 0.0448599020 0.0342094033 0.0283295356 0.0266503813 0.0288053138 0.0342798044 0.0427189992 0.0557007096 0.1605214977 0.0643520452 0.0514169497 0.0415243077 0.0342155622 0.0300098388 0.0291162176 0.0313210001 0.0360195732 0.0424281241 0.0505451222 0.0666087455 ']}, {'input': '22 22 1 13\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n22 1\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0387342340 0.0376245603 0.0385434630 0.0409311653 0.0438884638 0.0463138950 0.0472507131 0.0463138950 0.0438884638 0.0409311653 0.0385434630 0.0376245603 0.0387342340 0.0420477574 0.0472178012 0.0531433058 0.0579906815 0.0598786325 0.0579906815 0.0531433058 0.0472178012 0.0420477574 ']}, {'input': '10 45 1 10\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n1 8\\r\\n1 9\\r\\n1 10\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n2 8\\r\\n2 9\\r\\n2 10\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n3 8\\r\\n3 9\\r\\n3 10\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n4 8\\r\\n4 9\\r\\n4 10\\r\\n5 6\\r\\n5 7\\r\\n5 8\\r\\n5 9\\r\\n5 10\\r\\n6 7\\r\\n6 8\\r\\n6 9\\r\\n6 10\\r\\n7 8\\r\\n7 9\\r\\n7 10\\r\\n8 9\\r\\n8 10\\r\\n9 10\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n', 'output': ['0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 ']}, {'input': '1 0 1 1\\r\\n0.99\\r\\n', 'output': ['1.0000000000 ']}, {'input': '22 21 1 22\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n11 1\\r\\n12 1\\r\\n13 1\\r\\n14 1\\r\\n15 1\\r\\n16 1\\r\\n17 1\\r\\n18 1\\r\\n19 1\\r\\n20 1\\r\\n21 1\\r\\n22 2\\r\\n0.01\\r\\n0.02\\r\\n0.03\\r\\n0.04\\r\\n0.05\\r\\n0.06\\r\\n0.07\\r\\n0.08\\r\\n0.09\\r\\n0.10\\r\\n0.11\\r\\n0.12\\r\\n0.13\\r\\n0.14\\r\\n0.15\\r\\n0.16\\r\\n0.17\\r\\n0.18\\r\\n0.19\\r\\n0.20\\r\\n0.21\\r\\n0.22\\r\\n', 'output': ['0.9035493892 0.0711125603 0.0002295956 0.0003073428 0.0003857694 0.0004649204 0.0005448425 0.0006255834 0.0007071929 0.0007897222 0.0008732245 0.0009577547 0.0010433701 0.0011301299 0.0012180959 0.0013073322 0.0013979057 0.0014898861 0.0015833460 0.0016783614 0.0017750116 0.0068286632 ']}, {'input': '15 14 1 8\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.1687647168 0.0613502671 0.0232964298 0.0159426870 0.0100709787 0.0077507094 0.0071633056 0.0059104630 0.1744057974 0.0870855985 0.0630100398 0.0623589182 0.1454718455 0.1071447000 0.0602735434 ']}, {'input': '15 14 13 13\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 0.0000000000 ']}, {'input': '15 14 15 15\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '14 43 1 14\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n5 6\\r\\n5 7\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n8 12\\r\\n8 13\\r\\n8 14\\r\\n9 10\\r\\n9 11\\r\\n9 12\\r\\n9 13\\r\\n9 14\\r\\n10 11\\r\\n10 12\\r\\n10 13\\r\\n10 14\\r\\n11 12\\r\\n11 13\\r\\n11 14\\r\\n12 13\\r\\n12 14\\r\\n13 14\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0526959074 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.1878457103 0.1878457103 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0526959074 ']}, {'input': '16 57 1 16\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n1 16\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n2 16\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n3 16\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n4 16\\r\\n5 6\\r\\n5 7\\r\\n5 16\\r\\n6 7\\r\\n6 16\\r\\n7 16\\r\\n7 8\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n8 12\\r\\n8 13\\r\\n8 14\\r\\n8 15\\r\\n9 10\\r\\n9 11\\r\\n9 12\\r\\n9 13\\r\\n9 14\\r\\n9 15\\r\\n10 11\\r\\n10 12\\r\\n10 13\\r\\n10 14\\r\\n10 15\\r\\n11 12\\r\\n11 13\\r\\n11 14\\r\\n11 15\\r\\n12 13\\r\\n12 14\\r\\n12 15\\r\\n13 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.89\\r\\n0.79\\r\\n0.69\\r\\n0.59\\r\\n0.49\\r\\n0.39\\r\\n0.29\\r\\n0.19\\r\\n0.19\\r\\n0.29\\r\\n0.39\\r\\n0.49\\r\\n0.59\\r\\n0.69\\r\\n0.79\\r\\n', 'output': ['0.8601065040 0.0421912132 0.0216044923 0.0139824673 0.0099982535 0.0075466288 0.0077197332 0.0018809771 0.0005077937 0.0005077937 0.0006335685 0.0007997585 0.0010295784 0.0013684205 0.0019187930 0.0282040246 ']}, {'input': '2 1 2 2\\r\\n1 2\\r\\n0.4651\\r\\n0.4541\\r\\n', 'output': ['0.0000000000 1.0000000000 ']}, {'input': '3 3 3 3\\r\\n1 2\\r\\n1 3\\r\\n2 3\\r\\n0.7518\\r\\n0.3684\\r\\n0.0278\\r\\n', 'output': ['0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '4 6 4 2\\r\\n1 2\\r\\n3 1\\r\\n4 1\\r\\n2 3\\r\\n4 2\\r\\n3 4\\r\\n0.8837\\r\\n0.8531\\r\\n0.1495\\r\\n0.1412\\r\\n', 'output': ['0.3201347837 0.6091104909 0.0388222283 0.0319324970 ']}, {'input': '5 10 4 1\\r\\n1 2\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n3 2\\r\\n2 4\\r\\n2 5\\r\\n4 3\\r\\n3 5\\r\\n5 4\\r\\n0.1234\\r\\n0.3871\\r\\n0.0253\\r\\n0.4658\\r\\n0.4364\\r\\n', 'output': ['0.1115667934 0.2114914579 0.1016822203 0.3398765632 0.2353829653 ']}, {'input': '6 15 3 6\\r\\n2 1\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n2 3\\r\\n4 2\\r\\n2 5\\r\\n6 2\\r\\n3 4\\r\\n5 3\\r\\n3 6\\r\\n4 5\\r\\n6 4\\r\\n5 6\\r\\n0.0884\\r\\n0.3825\\r\\n0.1591\\r\\n0.5495\\r\\n0.6195\\r\\n0.0398\\r\\n', 'output': ['0.0999455609 0.1735578254 0.1116896620 0.2498342178 0.2972772337 0.0676955002 ']}, {'input': '7 21 4 6\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n2 3\\r\\n4 2\\r\\n2 5\\r\\n2 6\\r\\n7 2\\r\\n3 4\\r\\n5 3\\r\\n3 6\\r\\n7 3\\r\\n4 5\\r\\n6 4\\r\\n7 4\\r\\n5 6\\r\\n5 7\\r\\n7 6\\r\\n0.5239\\r\\n0.3794\\r\\n0.2269\\r\\n0.2762\\r\\n0.4424\\r\\n0.9740\\r\\n0.3075\\r\\n', 'output': ['0.0232614097 0.0162516730 0.0115838868 0.0137365998 0.0188847358 0.9024755860 0.0138061087 ']}, {'input': '8 28 8 3\\r\\n1 2\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n8 1\\r\\n3 2\\r\\n4 2\\r\\n5 2\\r\\n6 2\\r\\n7 2\\r\\n2 8\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n8 3\\r\\n4 5\\r\\n4 6\\r\\n7 4\\r\\n8 4\\r\\n5 6\\r\\n7 5\\r\\n8 5\\r\\n7 6\\r\\n8 6\\r\\n7 8\\r\\n0.8613\\r\\n0.8282\\r\\n0.8938\\r\\n0.7578\\r\\n0.9470\\r\\n0.2132\\r\\n0.4324\\r\\n0.6849\\r\\n', 'output': ['0.1176195220 0.0958396019 0.3325863571 0.0677110954 0.2663958661 0.0152787192 0.0248059593 0.0797628790 ']}, {'input': '9 36 9 2\\r\\n1 2\\r\\n3 1\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n8 1\\r\\n1 9\\r\\n3 2\\r\\n2 4\\r\\n5 2\\r\\n6 2\\r\\n2 7\\r\\n8 2\\r\\n9 2\\r\\n4 3\\r\\n5 3\\r\\n6 3\\r\\n7 3\\r\\n8 3\\r\\n9 3\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n6 5\\r\\n7 5\\r\\n8 5\\r\\n5 9\\r\\n6 7\\r\\n6 8\\r\\n9 6\\r\\n8 7\\r\\n9 7\\r\\n8 9\\r\\n0.7668\\r\\n0.8405\\r\\n0.4250\\r\\n0.1929\\r\\n0.7617\\r\\n0.4558\\r\\n0.6702\\r\\n0.0859\\r\\n0.7827\\r\\n', 'output': ['0.1268098579 0.3129505364 0.0439299233 0.0262315144 0.1240254438 0.0473553980 0.0874473192 0.0210113664 0.2102386406 ']}, {'input': '10 45 1 2\\r\\n1 2\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n1 6\\r\\n1 7\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n6 2\\r\\n7 2\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n7 3\\r\\n8 3\\r\\n9 3\\r\\n3 10\\r\\n4 5\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n10 4\\r\\n6 5\\r\\n5 7\\r\\n8 5\\r\\n5 9\\r\\n10 5\\r\\n7 6\\r\\n8 6\\r\\n9 6\\r\\n10 6\\r\\n7 8\\r\\n9 7\\r\\n10 7\\r\\n8 9\\r\\n10 8\\r\\n9 10\\r\\n0.7632\\r\\n0.4462\\r\\n0.4321\\r\\n0.8036\\r\\n0.9500\\r\\n0.7438\\r\\n0.5196\\r\\n0.8022\\r\\n0.7419\\r\\n0.5806\\r\\n', 'output': ['0.1839204542 0.0471943915 0.0301277939 0.0985509080 0.3103919787 0.0755959621 0.0373307588 0.0978749428 0.0750231155 0.0439896946 ']}, {'input': '11 55 8 6\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n1 8\\r\\n1 9\\r\\n10 1\\r\\n11 1\\r\\n2 3\\r\\n4 2\\r\\n5 2\\r\\n2 6\\r\\n2 7\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n11 2\\r\\n3 4\\r\\n3 5\\r\\n6 3\\r\\n3 7\\r\\n8 3\\r\\n9 3\\r\\n10 3\\r\\n11 3\\r\\n5 4\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n4 9\\r\\n4 10\\r\\n4 11\\r\\n6 5\\r\\n5 7\\r\\n8 5\\r\\n9 5\\r\\n5 10\\r\\n11 5\\r\\n6 7\\r\\n6 8\\r\\n9 6\\r\\n10 6\\r\\n6 11\\r\\n8 7\\r\\n9 7\\r\\n10 7\\r\\n7 11\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n10 9\\r\\n9 11\\r\\n10 11\\r\\n0.1858\\r\\n0.1694\\r\\n0.0945\\r\\n0.2580\\r\\n0.7910\\r\\n0.7729\\r\\n0.4302\\r\\n0.8449\\r\\n0.6270\\r\\n0.4962\\r\\n0.8791\\r\\n', 'output': ['0.0217350602 0.0210042612 0.0179935711 0.0253227842 0.1194283296 0.1697890394 0.0373767031 0.2793005386 0.0638189548 0.0440643844 0.2001663735 ']}, {'input': '12 66 2 3\\r\\n2 1\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n1 7\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n11 1\\r\\n1 12\\r\\n3 2\\r\\n4 2\\r\\n5 2\\r\\n6 2\\r\\n2 7\\r\\n2 8\\r\\n2 9\\r\\n10 2\\r\\n2 11\\r\\n2 12\\r\\n4 3\\r\\n5 3\\r\\n3 6\\r\\n7 3\\r\\n3 8\\r\\n9 3\\r\\n10 3\\r\\n3 11\\r\\n12 3\\r\\n5 4\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n4 10\\r\\n4 11\\r\\n12 4\\r\\n5 6\\r\\n5 7\\r\\n8 5\\r\\n5 9\\r\\n10 5\\r\\n5 11\\r\\n5 12\\r\\n6 7\\r\\n8 6\\r\\n6 9\\r\\n6 10\\r\\n11 6\\r\\n6 12\\r\\n7 8\\r\\n9 7\\r\\n7 10\\r\\n7 11\\r\\n7 12\\r\\n8 9\\r\\n10 8\\r\\n11 8\\r\\n12 8\\r\\n9 10\\r\\n11 9\\r\\n12 9\\r\\n11 10\\r\\n12 10\\r\\n12 11\\r\\n0.1181\\r\\n0.1559\\r\\n0.6868\\r\\n0.4488\\r\\n0.9508\\r\\n0.7239\\r\\n0.4596\\r\\n0.1090\\r\\n0.8877\\r\\n0.7477\\r\\n0.6342\\r\\n0.4051\\r\\n', 'output': ['0.0167334785 0.0204621778 0.1507680976 0.0333634903 0.3205611704 0.0733633598 0.0342214963 0.0164411081 0.1691474546 0.0803859443 0.0543657157 0.0301865067 ']}, {'input': '2 1 2 2\\r\\n1 2\\r\\n0.4651\\r\\n0.4541\\r\\n', 'output': ['0.0000000000 1.0000000000 ']}, {'input': '3 2 2 3\\r\\n2 1\\r\\n3 1\\r\\n0.8433\\r\\n0.3166\\r\\n0.0498\\r\\n', 'output': ['0.9882627746 0.0114733647 0.0002638607 ']}, {'input': '4 3 3 2\\r\\n1 2\\r\\n2 3\\r\\n4 3\\r\\n0.6321\\r\\n0.1541\\r\\n0.8633\\r\\n0.4309\\r\\n', 'output': ['0.0530829653 0.0844848606 0.8583062902 0.0041258840 ']}, {'input': '5 4 1 1\\r\\n1 4\\r\\n2 3\\r\\n2 4\\r\\n5 2\\r\\n0.3986\\r\\n0.2139\\r\\n0.0845\\r\\n0.4852\\r\\n0.5779\\r\\n', 'output': ['1.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 ']}, {'input': '6 5 2 1\\r\\n1 6\\r\\n3 2\\r\\n3 6\\r\\n5 4\\r\\n4 6\\r\\n0.7506\\r\\n0.5129\\r\\n0.7965\\r\\n0.1712\\r\\n0.3321\\r\\n0.7033\\r\\n', 'output': ['0.0490630865 0.0083870955 0.3822667748 0.0174328057 0.0030541480 0.5397960896 ']}, {'input': '7 6 7 7\\r\\n1 3\\r\\n3 2\\r\\n7 3\\r\\n5 4\\r\\n6 4\\r\\n7 6\\r\\n0.1063\\r\\n0.5142\\r\\n0.8086\\r\\n0.2764\\r\\n0.1017\\r\\n0.2610\\r\\n0.6153\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '8 7 8 3\\r\\n3 1\\r\\n1 5\\r\\n2 6\\r\\n8 4\\r\\n5 6\\r\\n7 5\\r\\n5 8\\r\\n0.3036\\r\\n0.6397\\r\\n0.3751\\r\\n0.0160\\r\\n0.9384\\r\\n0.5140\\r\\n0.6922\\r\\n0.4464\\r\\n', 'output': ['0.0231073078 0.0004437071 0.0029737165 0.0000301038 0.9535554896 0.0022717175 0.0009690501 0.0166489075 ']}, {'input': '9 8 5 8\\r\\n1 2\\r\\n6 2\\r\\n2 7\\r\\n4 3\\r\\n5 3\\r\\n3 6\\r\\n6 8\\r\\n9 7\\r\\n0.5756\\r\\n0.9312\\r\\n0.4846\\r\\n0.7096\\r\\n0.9055\\r\\n0.5987\\r\\n0.6841\\r\\n0.6011\\r\\n0.5861\\r\\n', 'output': ['0.0004994782 0.3270344183 0.2258377173 0.0248431214 0.1829303180 0.2193026406 0.0065763617 0.0125278946 0.0004480498 ']}, {'input': '10 9 2 10\\r\\n1 2\\r\\n5 1\\r\\n7 1\\r\\n6 2\\r\\n3 5\\r\\n4 9\\r\\n5 10\\r\\n6 9\\r\\n10 8\\r\\n0.5376\\r\\n0.5747\\r\\n0.8019\\r\\n0.6922\\r\\n0.2890\\r\\n0.9193\\r\\n0.7521\\r\\n0.4436\\r\\n0.5970\\r\\n0.3173\\r\\n', 'output': ['0.2817412543 0.0959570556 0.0542629235 0.0025685657 0.1569610917 0.3021480932 0.0339864114 0.0084406954 0.0137071015 0.0502268077 ']}, {'input': '11 10 5 2\\r\\n11 1\\r\\n2 8\\r\\n2 10\\r\\n3 4\\r\\n9 4\\r\\n5 9\\r\\n6 9\\r\\n9 7\\r\\n11 9\\r\\n11 10\\r\\n0.0796\\r\\n0.0474\\r\\n0.2508\\r\\n0.6083\\r\\n0.7689\\r\\n0.1261\\r\\n0.2609\\r\\n0.4307\\r\\n0.8868\\r\\n0.3772\\r\\n0.6045\\r\\n', 'output': ['0.0003181172 0.0101075940 0.0001381672 0.0073377358 0.0067862223 0.0000641408 0.0001786077 0.0042257688 0.7637302105 0.0364209545 0.1706924813 ']}, {'input': '12 11 11 11\\r\\n3 1\\r\\n1 11\\r\\n3 2\\r\\n9 2\\r\\n2 10\\r\\n12 2\\r\\n3 5\\r\\n5 4\\r\\n8 5\\r\\n8 6\\r\\n12 7\\r\\n0.3563\\r\\n0.0931\\r\\n0.6741\\r\\n0.4162\\r\\n0.1307\\r\\n0.9049\\r\\n0.9435\\r\\n0.6656\\r\\n0.6276\\r\\n0.8688\\r\\n0.8109\\r\\n0.4977\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 ']}, {'input': '13 12 7 1\\r\\n2 1\\r\\n3 1\\r\\n6 1\\r\\n1 11\\r\\n2 9\\r\\n13 2\\r\\n3 10\\r\\n5 4\\r\\n4 11\\r\\n7 8\\r\\n7 13\\r\\n12 11\\r\\n0.1570\\r\\n0.0712\\r\\n0.0328\\r\\n0.5742\\r\\n0.0795\\r\\n0.6250\\r\\n0.7232\\r\\n0.8010\\r\\n0.8360\\r\\n0.1494\\r\\n0.3539\\r\\n0.8447\\r\\n0.9272\\r\\n', 'output': ['0.1034207245 0.0628088395 0.0093958837 0.0215220481 0.0001167809 0.0136922900 0.0642313143 0.0131051340 0.0511044118 0.0013590810 0.0568672232 0.0259479413 0.5764283278 ']}, {'input': '14 13 12 4\\r\\n1 6\\r\\n1 9\\r\\n9 2\\r\\n3 11\\r\\n4 12\\r\\n8 5\\r\\n5 11\\r\\n5 14\\r\\n10 7\\r\\n8 9\\r\\n13 9\\r\\n10 11\\r\\n12 11\\r\\n0.3228\\r\\n0.6911\\r\\n0.1498\\r\\n0.3435\\r\\n0.1763\\r\\n0.3718\\r\\n0.6798\\r\\n0.6485\\r\\n0.7299\\r\\n0.7418\\r\\n0.8041\\r\\n0.4249\\r\\n0.3820\\r\\n0.1464\\r\\n', 'output': ['0.0002725681 0.0001884812 0.0001796185 0.1521823863 0.0058382432 0.0000327578 0.0010923984 0.0053644997 0.0087619362 0.0145733462 0.3402217997 0.4711118932 0.0000364063 0.0001436652 ']}, {'input': '15 14 15 13\\r\\n4 1\\r\\n10 2\\r\\n3 12\\r\\n4 8\\r\\n12 4\\r\\n4 14\\r\\n7 5\\r\\n15 6\\r\\n7 9\\r\\n13 7\\r\\n14 7\\r\\n15 8\\r\\n12 10\\r\\n11 15\\r\\n0.5888\\r\\n0.1792\\r\\n0.7597\\r\\n0.6293\\r\\n0.3744\\r\\n0.3342\\r\\n0.8474\\r\\n0.8651\\r\\n0.1230\\r\\n0.4826\\r\\n0.0309\\r\\n0.3129\\r\\n0.9697\\r\\n0.4049\\r\\n0.0164\\r\\n', 'output': ['0.0045127683 0.0002130703 0.0079200770 0.2133409405 0.0005156567 0.0006969778 0.3990475462 0.1131589275 0.0000943589 0.0094364927 0.0000505592 0.0270366798 0.1760491983 0.0426472827 0.0052794640 ']}, {'input': '16 15 16 1\\r\\n1 3\\r\\n10 2\\r\\n9 3\\r\\n15 3\\r\\n4 10\\r\\n5 12\\r\\n16 5\\r\\n6 7\\r\\n6 15\\r\\n11 8\\r\\n11 9\\r\\n9 12\\r\\n14 9\\r\\n10 12\\r\\n10 13\\r\\n0.1478\\r\\n0.9068\\r\\n0.5458\\r\\n0.3318\\r\\n0.2632\\r\\n0.3624\\r\\n0.3189\\r\\n0.7264\\r\\n0.9796\\r\\n0.1311\\r\\n0.2947\\r\\n0.5834\\r\\n0.2095\\r\\n0.4419\\r\\n0.6588\\r\\n0.5525\\r\\n', 'output': ['0.0000811338 0.0093966712 0.0152177971 0.0004547303 0.0043006907 0.0013801376 0.0001128014 0.0001990500 0.9126720566 0.0104961528 0.0003134206 0.0369484070 0.0002490821 0.0000315496 0.0068014036 0.0013449155 ']}, {'input': '17 16 11 13\\r\\n3 1\\r\\n1 15\\r\\n2 15\\r\\n4 16\\r\\n5 8\\r\\n15 5\\r\\n8 6\\r\\n9 7\\r\\n10 7\\r\\n7 11\\r\\n17 7\\r\\n9 8\\r\\n12 8\\r\\n13 8\\r\\n10 16\\r\\n15 14\\r\\n0.7683\\r\\n0.9048\\r\\n0.1346\\r\\n0.4468\\r\\n0.1993\\r\\n0.7759\\r\\n0.8125\\r\\n0.2274\\r\\n0.1478\\r\\n0.8479\\r\\n0.9515\\r\\n0.7715\\r\\n0.3667\\r\\n0.0480\\r\\n0.0821\\r\\n0.6263\\r\\n0.2708\\r\\n', 'output': ['0.0258225311 0.0284330836 0.0000679627 0.0003573966 0.0152739625 0.0196276330 0.4722515893 0.1343480151 0.0275442145 0.0628400220 0.1521560220 0.0191064818 0.0031481221 0.0001752273 0.0307574428 0.0075784077 0.0005118859 ']}, {'input': '18 17 14 12\\r\\n1 2\\r\\n3 1\\r\\n18 1\\r\\n8 2\\r\\n9 2\\r\\n2 12\\r\\n2 17\\r\\n4 6\\r\\n15 4\\r\\n5 7\\r\\n7 6\\r\\n14 9\\r\\n12 10\\r\\n13 11\\r\\n11 16\\r\\n13 17\\r\\n14 15\\r\\n0.4024\\r\\n0.5565\\r\\n0.7870\\r\\n0.2691\\r\\n0.6727\\r\\n0.9621\\r\\n0.6842\\r\\n0.0271\\r\\n0.1097\\r\\n0.1747\\r\\n0.0784\\r\\n0.9550\\r\\n0.7523\\r\\n0.4284\\r\\n0.5238\\r\\n0.2709\\r\\n0.1595\\r\\n0.4590\\r\\n', 'output': ['0.0281574957 0.2581814330 0.0076272067 0.0107746580 0.0003467009 0.1714587133 0.0031642368 0.0000709113 0.0166962221 0.0000539712 0.0014416406 0.4106759112 0.0257975192 0.0287578136 0.0269904984 0.0002646607 0.0080077089 0.0015326985 ']}, {'input': '19 18 10 6\\r\\n5 1\\r\\n12 1\\r\\n7 2\\r\\n2 18\\r\\n15 3\\r\\n3 16\\r\\n4 6\\r\\n4 10\\r\\n6 9\\r\\n8 11\\r\\n13 9\\r\\n9 14\\r\\n10 11\\r\\n10 16\\r\\n18 11\\r\\n12 16\\r\\n17 16\\r\\n17 19\\r\\n0.6093\\r\\n0.4153\\r\\n0.2931\\r\\n0.6880\\r\\n0.0979\\r\\n0.9545\\r\\n0.2846\\r\\n0.5257\\r\\n0.5168\\r\\n0.2795\\r\\n0.4887\\r\\n0.3822\\r\\n0.2863\\r\\n0.5194\\r\\n0.3924\\r\\n0.8028\\r\\n0.8415\\r\\n0.2838\\r\\n0.9046\\r\\n', 'output': ['0.0054757481 0.0062808098 0.0031941783 0.1082773399 0.0000307445 0.5100921861 0.0003567821 0.0025634213 0.0108163903 0.0520824767 0.0484805903 0.0056216539 0.0001632695 0.0004991833 0.0004654536 0.1938285472 0.0350879002 0.0079000523 0.0087832726 ']}, {'input': '20 19 16 10\\r\\n2 1\\r\\n1 9\\r\\n1 10\\r\\n2 11\\r\\n2 16\\r\\n3 8\\r\\n15 3\\r\\n4 7\\r\\n4 14\\r\\n19 5\\r\\n6 16\\r\\n12 8\\r\\n15 13\\r\\n15 14\\r\\n15 19\\r\\n20 15\\r\\n19 16\\r\\n20 17\\r\\n18 20\\r\\n0.9546\\r\\n0.8460\\r\\n0.3530\\r\\n0.1547\\r\\n0.1812\\r\\n0.3792\\r\\n0.8502\\r\\n0.0898\\r\\n0.6804\\r\\n0.0465\\r\\n0.6699\\r\\n0.1623\\r\\n0.4908\\r\\n0.7436\\r\\n0.9748\\r\\n0.2965\\r\\n0.8528\\r\\n0.6024\\r\\n0.2343\\r\\n0.9496\\r\\n', 'output': ['0.4470817637 0.1925429406 0.0001522967 0.0001272041 0.0002374526 0.0009539965 0.0002531055 0.0000477577 0.0005965772 0.0000053211 0.0022254991 0.0000051402 0.0000145893 0.0010192506 0.3120036469 0.0168639725 0.0001460780 0.0000163715 0.0093450398 0.0163619965 ']}, {'input': '21 20 10 15\\r\\n1 4\\r\\n1 7\\r\\n1 13\\r\\n3 2\\r\\n3 13\\r\\n3 20\\r\\n14 4\\r\\n20 5\\r\\n6 17\\r\\n11 8\\r\\n13 9\\r\\n21 10\\r\\n11 14\\r\\n16 11\\r\\n12 14\\r\\n18 13\\r\\n21 14\\r\\n18 15\\r\\n17 16\\r\\n19 21\\r\\n0.5511\\r\\n0.4174\\r\\n0.1974\\r\\n0.1756\\r\\n0.4806\\r\\n0.7202\\r\\n0.0261\\r\\n0.1533\\r\\n0.5109\\r\\n0.9091\\r\\n0.1702\\r\\n0.0274\\r\\n0.6287\\r\\n0.4452\\r\\n0.8881\\r\\n0.4081\\r\\n0.2318\\r\\n0.9270\\r\\n0.3270\\r\\n0.5124\\r\\n0.6402\\r\\n', 'output': ['0.1274165708 0.0020068482 0.0221441417 0.0273841255 0.0011326856 0.0044150190 0.0000989026 0.0007239413 0.0032940960 0.0373926594 0.0268760758 0.0001121418 0.2255090088 0.1477723696 0.0142089213 0.0152217984 0.0061489761 0.2354718191 0.0009022427 0.0122643704 0.0895032861 ']}, {'input': '22 21 7 3\\r\\n1 16\\r\\n8 2\\r\\n3 17\\r\\n20 4\\r\\n12 5\\r\\n5 22\\r\\n13 6\\r\\n13 7\\r\\n14 7\\r\\n8 12\\r\\n9 10\\r\\n12 9\\r\\n9 13\\r\\n20 11\\r\\n13 20\\r\\n14 16\\r\\n14 17\\r\\n19 14\\r\\n22 15\\r\\n18 19\\r\\n21 18\\r\\n0.6643\\r\\n0.0936\\r\\n0.5519\\r\\n0.8542\\r\\n0.6411\\r\\n0.9560\\r\\n0.2451\\r\\n0.5841\\r\\n0.3590\\r\\n0.1352\\r\\n0.5336\\r\\n0.3901\\r\\n0.7602\\r\\n0.8653\\r\\n0.5635\\r\\n0.3840\\r\\n0.8625\\r\\n0.7766\\r\\n0.6941\\r\\n0.8028\\r\\n0.7482\\r\\n0.8431\\r\\n', 'output': ['0.0020725026 0.0000229554 0.0023344134 0.0034044638 0.0065601793 0.0429445422 0.0126807206 0.0037257267 0.0126648147 0.0001399510 0.0003551323 0.0103862706 0.1426738764 0.5077168905 0.0001223623 0.0058931744 0.1645677033 0.0138897777 0.0191701371 0.0396907000 0.0013049419 0.0076787635 ']}, {'input': '5 8 2 4\\r\\n1 2\\r\\n1 3\\r\\n5 1\\r\\n2 3\\r\\n2 4\\r\\n5 2\\r\\n4 3\\r\\n3 5\\r\\n0.2642\\r\\n0.6145\\r\\n0.1714\\r\\n0.5156\\r\\n0.7771\\r\\n', 'output': ['0.0469766543 0.4930268360 0.1177339858 0.1318957885 0.2103667354 ']}, {'input': '15 46 4 11\\r\\n1 3\\r\\n1 5\\r\\n6 1\\r\\n7 1\\r\\n1 8\\r\\n2 6\\r\\n8 2\\r\\n2 9\\r\\n12 2\\r\\n2 15\\r\\n3 4\\r\\n6 3\\r\\n3 12\\r\\n3 13\\r\\n3 14\\r\\n4 7\\r\\n9 4\\r\\n4 10\\r\\n4 14\\r\\n6 5\\r\\n5 7\\r\\n10 5\\r\\n12 5\\r\\n13 5\\r\\n5 14\\r\\n7 6\\r\\n9 6\\r\\n10 6\\r\\n6 13\\r\\n8 7\\r\\n7 13\\r\\n10 8\\r\\n8 13\\r\\n9 10\\r\\n9 13\\r\\n9 14\\r\\n11 10\\r\\n10 13\\r\\n10 15\\r\\n12 11\\r\\n11 15\\r\\n12 13\\r\\n15 12\\r\\n14 13\\r\\n15 13\\r\\n15 14\\r\\n0.2660\\r\\n0.9315\\r\\n0.7185\\r\\n0.9642\\r\\n0.1587\\r\\n0.2494\\r\\n0.3372\\r\\n0.0928\\r\\n0.3500\\r\\n0.0196\\r\\n0.2396\\r\\n0.8611\\r\\n0.5787\\r\\n0.4279\\r\\n0.0221\\r\\n', 'output': ['0.0079249483 0.1315277498 0.0526707222 0.5053657470 0.0138346726 0.0216010978 0.0163209733 0.0054495713 0.0182973209 0.0187149289 0.0026732816 0.0956673121 0.0798423781 0.0227469261 0.0073623701 ']}, {'input': '17 43 3 16\\r\\n8 1\\r\\n1 10\\r\\n1 12\\r\\n1 13\\r\\n6 2\\r\\n10 2\\r\\n12 2\\r\\n2 14\\r\\n15 2\\r\\n2 17\\r\\n6 3\\r\\n8 3\\r\\n12 3\\r\\n3 16\\r\\n4 5\\r\\n6 4\\r\\n4 7\\r\\n4 9\\r\\n13 4\\r\\n17 4\\r\\n6 5\\r\\n5 17\\r\\n6 11\\r\\n6 12\\r\\n6 17\\r\\n7 10\\r\\n7 12\\r\\n17 7\\r\\n9 8\\r\\n13 8\\r\\n8 15\\r\\n8 16\\r\\n17 8\\r\\n13 9\\r\\n9 16\\r\\n9 17\\r\\n10 15\\r\\n16 10\\r\\n17 11\\r\\n13 12\\r\\n16 12\\r\\n15 13\\r\\n15 14\\r\\n0.1613\\r\\n0.4247\\r\\n0.4271\\r\\n0.5636\\r\\n0.0214\\r\\n0.3172\\r\\n0.8156\\r\\n0.7663\\r\\n0.1132\\r\\n0.4127\\r\\n0.5416\\r\\n0.5220\\r\\n0.9366\\r\\n0.4426\\r\\n0.5884\\r\\n0.4569\\r\\n0.9613\\r\\n', 'output': ['0.0048722451 0.0160301298 0.0812776965 0.0169053414 0.0007186872 0.0187250770 0.0243168580 0.1375215020 0.0057046011 0.0143632541 0.0010119715 0.0786732010 0.1575241299 0.0011546527 0.0158649639 0.1204518537 0.3048838351 ']}, {'input': '6 6 6 3\\r\\n2 1\\r\\n5 1\\r\\n6 2\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n0.3429\\r\\n0.7018\\r\\n0.0699\\r\\n0.9602\\r\\n0.9585\\r\\n0.5070\\r\\n', 'output': ['0.0032904304 0.0076304590 0.0000112081 0.3439315417 0.6399603309 0.0051760299 ']}, {'input': '10 15 7 8\\r\\n3 1\\r\\n1 7\\r\\n2 4\\r\\n2 5\\r\\n9 2\\r\\n3 5\\r\\n7 3\\r\\n8 3\\r\\n4 7\\r\\n8 4\\r\\n5 7\\r\\n10 5\\r\\n6 8\\r\\n6 9\\r\\n9 8\\r\\n0.4654\\r\\n0.8489\\r\\n0.7851\\r\\n0.9790\\r\\n0.8126\\r\\n0.1443\\r\\n0.8385\\r\\n0.1355\\r\\n0.2672\\r\\n0.0631\\r\\n', 'output': ['0.0086717445 0.0591108269 0.1502231556 0.5026507699 0.0926399948 0.0018832329 0.1642324438 0.0138497445 0.0067226391 0.0000154479 ']}, {'input': '10 16 9 2\\r\\n3 1\\r\\n5 1\\r\\n9 1\\r\\n2 5\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n3 5\\r\\n6 3\\r\\n10 3\\r\\n4 6\\r\\n4 10\\r\\n5 10\\r\\n6 7\\r\\n8 7\\r\\n10 7\\r\\n0.8151\\r\\n0.2117\\r\\n0.5832\\r\\n0.0244\\r\\n0.1781\\r\\n0.5401\\r\\n0.4576\\r\\n0.1453\\r\\n0.3072\\r\\n0.2282\\r\\n', 'output': ['0.2858990309 0.1917730962 0.1409268921 0.0046323044 0.0671166968 0.0504929902 0.0497075403 0.0134447894 0.0942164861 0.1017901736 ']}, {'input': '22 30 9 17\\r\\n1 18\\r\\n1 20\\r\\n2 3\\r\\n5 2\\r\\n6 2\\r\\n2 11\\r\\n2 19\\r\\n6 4\\r\\n21 4\\r\\n22 4\\r\\n5 6\\r\\n8 5\\r\\n14 5\\r\\n10 6\\r\\n21 6\\r\\n22 7\\r\\n16 8\\r\\n9 12\\r\\n16 9\\r\\n18 10\\r\\n11 18\\r\\n11 22\\r\\n14 12\\r\\n13 22\\r\\n15 17\\r\\n21 15\\r\\n16 22\\r\\n22 17\\r\\n21 18\\r\\n20 22\\r\\n0.3290\\r\\n0.6966\\r\\n0.3952\\r\\n0.4713\\r\\n0.2462\\r\\n0.6482\\r\\n0.3471\\r\\n0.6729\\r\\n0.8845\\r\\n0.8581\\r\\n0.6991\\r\\n0.7279\\r\\n0.9751\\r\\n0.4603\\r\\n0.9591\\r\\n0.9890\\r\\n0.0230\\r\\n0.1388\\r\\n0.8745\\r\\n0.3635\\r\\n0.9655\\r\\n0.6980\\r\\n', 'output': ['0.0012630922 0.0302925914 0.0001113046 0.0058223640 0.0084588979 0.0305910518 0.0001130212 0.0050014407 0.0135265144 0.0105166645 0.0126985994 0.0054538897 0.0233929192 0.0031581259 0.0393763424 0.5293925504 0.0008728982 0.0041399002 0.0022100491 0.0013950475 0.1941228326 0.0780899026 ']}, {'input': '22 32 5 7\\r\\n1 3\\r\\n9 1\\r\\n16 2\\r\\n2 18\\r\\n3 5\\r\\n3 6\\r\\n3 10\\r\\n11 3\\r\\n13 3\\r\\n3 22\\r\\n22 4\\r\\n5 6\\r\\n5 8\\r\\n14 5\\r\\n5 15\\r\\n5 18\\r\\n19 6\\r\\n6 20\\r\\n6 21\\r\\n21 7\\r\\n8 18\\r\\n22 9\\r\\n10 13\\r\\n22 10\\r\\n15 11\\r\\n17 12\\r\\n12 20\\r\\n17 14\\r\\n16 22\\r\\n17 18\\r\\n17 21\\r\\n18 20\\r\\n0.9511\\r\\n0.6830\\r\\n0.2035\\r\\n0.9142\\r\\n0.6807\\r\\n0.6502\\r\\n0.3221\\r\\n0.0903\\r\\n0.1790\\r\\n0.2234\\r\\n0.9788\\r\\n0.6005\\r\\n0.3179\\r\\n0.2115\\r\\n0.8035\\r\\n0.8730\\r\\n0.0342\\r\\n0.2599\\r\\n0.7508\\r\\n0.1815\\r\\n0.6454\\r\\n0.7619\\r\\n', 'output': ['0.0547241979 0.0127153084 0.0441350190 0.0054767347 0.2027512578 0.1785779328 0.0009181368 0.0030386274 0.0012253232 0.0047658952 0.1614826534 0.0200979142 0.0024921791 0.0089124294 0.0185716675 0.0233837366 0.0345272095 0.0510312272 0.0049608897 0.0146416997 0.0870608962 0.0645090644 ']}, {'input': '21 23 21 17\\r\\n3 1\\r\\n3 2\\r\\n15 2\\r\\n2 20\\r\\n21 2\\r\\n16 3\\r\\n3 19\\r\\n4 8\\r\\n11 4\\r\\n17 4\\r\\n5 8\\r\\n5 9\\r\\n5 13\\r\\n6 16\\r\\n12 7\\r\\n16 7\\r\\n12 9\\r\\n10 17\\r\\n21 11\\r\\n12 18\\r\\n21 14\\r\\n15 17\\r\\n20 16\\r\\n0.0190\\r\\n0.5764\\r\\n0.1426\\r\\n0.4577\\r\\n0.7596\\r\\n0.5794\\r\\n0.5531\\r\\n0.9095\\r\\n0.6558\\r\\n0.8086\\r\\n0.2032\\r\\n0.4600\\r\\n0.9388\\r\\n0.1243\\r\\n0.2195\\r\\n0.7691\\r\\n0.1250\\r\\n0.1658\\r\\n0.4437\\r\\n0.7445\\r\\n0.0782\\r\\n', 'output': ['0.0000449260 0.2344991918 0.0251976569 0.1319548171 0.0505050501 0.0009015861 0.0110788625 0.1360612739 0.0147837889 0.0419721572 0.0374092349 0.0159331361 0.0176432803 0.0015421188 0.0322649361 0.1040211064 0.0579773602 0.0001476576 0.0017154120 0.0398347629 0.0445116844 ']}, {'input': '21 24 10 10\\r\\n11 1\\r\\n14 1\\r\\n4 2\\r\\n2 10\\r\\n3 5\\r\\n3 8\\r\\n3 9\\r\\n3 13\\r\\n3 17\\r\\n21 3\\r\\n4 9\\r\\n20 5\\r\\n6 12\\r\\n17 6\\r\\n9 7\\r\\n15 7\\r\\n7 19\\r\\n12 13\\r\\n12 15\\r\\n15 14\\r\\n21 14\\r\\n16 19\\r\\n18 20\\r\\n19 21\\r\\n0.4227\\r\\n0.9018\\r\\n0.8446\\r\\n0.0334\\r\\n0.8707\\r\\n0.5558\\r\\n0.4513\\r\\n0.1537\\r\\n0.9028\\r\\n0.2106\\r\\n0.0863\\r\\n0.4888\\r\\n0.3508\\r\\n0.3819\\r\\n0.2980\\r\\n0.6791\\r\\n0.6029\\r\\n0.0931\\r\\n0.8012\\r\\n0.9531\\r\\n0.0343\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 ']}, {'input': '21 25 20 3\\r\\n18 1\\r\\n12 2\\r\\n20 2\\r\\n11 3\\r\\n9 4\\r\\n12 4\\r\\n4 15\\r\\n4 20\\r\\n5 8\\r\\n5 15\\r\\n5 18\\r\\n5 20\\r\\n6 16\\r\\n20 7\\r\\n8 11\\r\\n13 8\\r\\n16 10\\r\\n10 19\\r\\n17 11\\r\\n12 15\\r\\n12 16\\r\\n12 21\\r\\n17 13\\r\\n14 18\\r\\n16 20\\r\\n0.3609\\r\\n0.9580\\r\\n0.3737\\r\\n0.7107\\r\\n0.6199\\r\\n0.4418\\r\\n0.0874\\r\\n0.5309\\r\\n0.3103\\r\\n0.9377\\r\\n0.8430\\r\\n0.9569\\r\\n0.5227\\r\\n0.6203\\r\\n0.4745\\r\\n0.4190\\r\\n0.6055\\r\\n0.8480\\r\\n0.8791\\r\\n0.4012\\r\\n0.3441\\r\\n', 'output': ['0.0001115124 0.0980714461 0.0002416850 0.0433302884 0.1021821003 0.0004704958 0.0000866423 0.0539373770 0.0001486904 0.0329442386 0.0940435447 0.4179895790 0.0123317109 0.0004663481 0.0186175265 0.0173859990 0.0115346705 0.0516017594 0.0012743943 0.0432054878 0.0000245034 ']}, {'input': '22 23 5 16\\r\\n20 1\\r\\n1 22\\r\\n2 3\\r\\n2 4\\r\\n3 13\\r\\n16 3\\r\\n4 6\\r\\n9 5\\r\\n5 22\\r\\n16 7\\r\\n9 8\\r\\n8 13\\r\\n10 16\\r\\n10 22\\r\\n11 17\\r\\n22 12\\r\\n14 15\\r\\n16 14\\r\\n14 18\\r\\n15 19\\r\\n16 21\\r\\n19 17\\r\\n22 17\\r\\n0.7393\\r\\n0.5325\\r\\n0.7522\\r\\n0.0343\\r\\n0.4628\\r\\n0.4713\\r\\n0.0749\\r\\n0.2350\\r\\n0.1396\\r\\n0.4916\\r\\n0.9203\\r\\n0.3179\\r\\n0.3378\\r\\n0.5174\\r\\n0.6705\\r\\n0.9649\\r\\n0.0823\\r\\n0.6370\\r\\n0.3185\\r\\n0.8381\\r\\n0.6475\\r\\n0.8173\\r\\n', 'output': ['0.0088399457 0.0037821738 0.0429781208 0.0005983597 0.0060422088 0.0002929921 0.0000030894 0.0040866917 0.0027909053 0.0135153898 0.0117585651 0.0001331749 0.0058057805 0.0119937930 0.0107339787 0.7106384041 0.0059716200 0.0009389289 0.0043356417 0.0022053815 0.0001722543 0.1523826002 ']}, {'input': '22 26 22 13\\r\\n1 2\\r\\n3 1\\r\\n1 21\\r\\n1 22\\r\\n9 2\\r\\n13 2\\r\\n2 17\\r\\n3 16\\r\\n11 4\\r\\n7 5\\r\\n12 5\\r\\n5 21\\r\\n6 12\\r\\n6 18\\r\\n11 7\\r\\n18 8\\r\\n9 11\\r\\n9 20\\r\\n10 13\\r\\n11 14\\r\\n11 18\\r\\n19 12\\r\\n15 22\\r\\n17 16\\r\\n18 22\\r\\n22 21\\r\\n0.1724\\r\\n0.6546\\r\\n0.1197\\r\\n0.5874\\r\\n0.2667\\r\\n0.1593\\r\\n0.5054\\r\\n0.1572\\r\\n0.1620\\r\\n0.2524\\r\\n0.6551\\r\\n0.5020\\r\\n0.1909\\r\\n0.2257\\r\\n0.7479\\r\\n0.6343\\r\\n0.6408\\r\\n0.7443\\r\\n0.3852\\r\\n0.8838\\r\\n0.2693\\r\\n0.3504\\r\\n', 'output': ['0.0845150088 0.2599909733 0.0097983608 0.0018923031 0.0239189914 0.0048992078 0.0160198485 0.0001406067 0.0247058927 0.0013355496 0.1609619578 0.0266705055 0.0121400170 0.0002951678 0.0125662798 0.0330821904 0.0360913305 0.1467042455 0.0007214805 0.0257426840 0.0360195050 0.0817878936 ']}, {'input': '22 25 2 7\\r\\n17 1\\r\\n2 16\\r\\n2 22\\r\\n14 3\\r\\n3 15\\r\\n20 3\\r\\n4 8\\r\\n4 12\\r\\n4 13\\r\\n13 5\\r\\n5 16\\r\\n16 6\\r\\n11 7\\r\\n17 7\\r\\n7 21\\r\\n9 15\\r\\n9 22\\r\\n14 10\\r\\n10 15\\r\\n10 17\\r\\n20 10\\r\\n16 12\\r\\n18 13\\r\\n18 16\\r\\n19 22\\r\\n0.9622\\r\\n0.8251\\r\\n0.9681\\r\\n0.2488\\r\\n0.3662\\r\\n0.5921\\r\\n0.5852\\r\\n0.0411\\r\\n0.2418\\r\\n0.0125\\r\\n0.2109\\r\\n0.8481\\r\\n0.3958\\r\\n0.1604\\r\\n0.8006\\r\\n0.9077\\r\\n0.7900\\r\\n0.7867\\r\\n0.8533\\r\\n0.6754\\r\\n0.7537\\r\\n0.1636\\r\\n', 'output': ['0.0397606434 0.0600590881 0.3808962043 0.0014000167 0.0011392632 0.0002081290 0.0143391730 0.0000065896 0.0122923376 0.0194932708 0.0001001379 0.0082802798 0.0024780234 0.0030637724 0.1211126468 0.1962584577 0.0804543597 0.0051630869 0.0166074944 0.0140209327 0.0017717043 0.0210943884 ']}, {'input': '20 23 17 3\\r\\n18 1\\r\\n2 6\\r\\n10 2\\r\\n3 8\\r\\n12 4\\r\\n8 5\\r\\n9 5\\r\\n17 5\\r\\n7 8\\r\\n15 7\\r\\n7 16\\r\\n9 18\\r\\n9 20\\r\\n10 15\\r\\n17 10\\r\\n11 14\\r\\n11 18\\r\\n13 12\\r\\n12 14\\r\\n14 13\\r\\n20 15\\r\\n16 19\\r\\n20 16\\r\\n0.3546\\r\\n0.6179\\r\\n0.2477\\r\\n0.4236\\r\\n0.8433\\r\\n0.0304\\r\\n0.5569\\r\\n0.4558\\r\\n0.8289\\r\\n0.1959\\r\\n0.2156\\r\\n0.3993\\r\\n0.0429\\r\\n0.9185\\r\\n0.1945\\r\\n0.8919\\r\\n0.8929\\r\\n0.3044\\r\\n0.2973\\r\\n0.1637\\r\\n', 'output': ['0.0003638881 0.0163339067 0.0008806850 0.0000274159 0.3262188951 0.0000246366 0.0536909073 0.0520393925 0.1051082156 0.0261569273 0.0020883748 0.0005216032 0.0000848720 0.0268220987 0.0257688220 0.1285525498 0.2126000150 0.0073895213 0.0000994338 0.0152278393 ']}, {'input': '20 21 5 14\\r\\n1 10\\r\\n13 1\\r\\n19 1\\r\\n2 11\\r\\n14 2\\r\\n2 17\\r\\n7 3\\r\\n13 3\\r\\n4 15\\r\\n14 5\\r\\n19 5\\r\\n6 16\\r\\n13 8\\r\\n16 9\\r\\n15 11\\r\\n11 19\\r\\n15 12\\r\\n16 12\\r\\n18 12\\r\\n15 20\\r\\n17 16\\r\\n0.5805\\r\\n0.3342\\r\\n0.7705\\r\\n0.7345\\r\\n0.1304\\r\\n0.3862\\r\\n0.6920\\r\\n0.6597\\r\\n0.6223\\r\\n0.0125\\r\\n0.4646\\r\\n0.9876\\r\\n0.7291\\r\\n0.3720\\r\\n0.2529\\r\\n0.1635\\r\\n0.5579\\r\\n0.4736\\r\\n0.6798\\r\\n0.1940\\r\\n', 'output': ['0.0290729509 0.0774707737 0.0048407220 0.0022268940 0.0840499631 0.0003440094 0.0003284870 0.0006200526 0.0008986063 0.0000093558 0.0641414110 0.2073528076 0.0194228289 0.2619733510 0.0124627336 0.0066013691 0.0179828402 0.0000059094 0.2100074063 0.0001875280 ']}, {'input': '20 25 1 12\\r\\n1 11\\r\\n12 1\\r\\n18 1\\r\\n4 2\\r\\n3 5\\r\\n3 7\\r\\n3 11\\r\\n14 3\\r\\n3 16\\r\\n17 3\\r\\n11 4\\r\\n4 16\\r\\n18 4\\r\\n5 6\\r\\n5 9\\r\\n10 5\\r\\n5 14\\r\\n5 20\\r\\n9 6\\r\\n17 6\\r\\n8 17\\r\\n12 10\\r\\n16 13\\r\\n14 19\\r\\n15 19\\r\\n0.5533\\r\\n0.6775\\r\\n0.4103\\r\\n0.7882\\r\\n0.9682\\r\\n0.0157\\r\\n0.8149\\r\\n0.2403\\r\\n0.4483\\r\\n0.1045\\r\\n0.7979\\r\\n0.0113\\r\\n0.9501\\r\\n0.7438\\r\\n0.6028\\r\\n0.8786\\r\\n0.8645\\r\\n0.8427\\r\\n0.2974\\r\\n0.2234\\r\\n', 'output': ['0.3836337810 0.0005834345 0.0229041026 0.0461902969 0.3196862695 0.0007593053 0.0018549199 0.0000123965 0.0005294816 0.0079362295 0.0669374470 0.0290126728 0.0053233321 0.0091036233 0.0001539764 0.0320034925 0.0145047810 0.0584237926 0.0004433762 0.0000032889 ']}, {'input': '16 17 7 1\\r\\n3 1\\r\\n1 8\\r\\n10 1\\r\\n1 11\\r\\n15 1\\r\\n15 2\\r\\n2 16\\r\\n3 9\\r\\n4 13\\r\\n15 5\\r\\n16 6\\r\\n11 7\\r\\n8 12\\r\\n9 10\\r\\n14 9\\r\\n10 11\\r\\n13 16\\r\\n0.4938\\r\\n0.1780\\r\\n0.5063\\r\\n0.2975\\r\\n0.0828\\r\\n0.7123\\r\\n0.6365\\r\\n0.3149\\r\\n0.1640\\r\\n0.2521\\r\\n0.8296\\r\\n0.9536\\r\\n0.2263\\r\\n0.1757\\r\\n0.7787\\r\\n0.4786\\r\\n', 'output': ['0.2282703609 0.0041908237 0.0240980923 0.0001797951 0.0000528785 0.0016021604 0.0137910440 0.0127072600 0.0229547593 0.0461207439 0.4817791924 0.0589129374 0.0014384188 0.0007747441 0.0911572626 0.0119695266 ']}, {'input': '18 19 4 11\\r\\n1 9\\r\\n2 8\\r\\n3 5\\r\\n3 6\\r\\n4 14\\r\\n9 5\\r\\n15 5\\r\\n8 6\\r\\n14 6\\r\\n12 7\\r\\n7 14\\r\\n7 17\\r\\n7 18\\r\\n8 18\\r\\n12 9\\r\\n14 10\\r\\n18 11\\r\\n14 13\\r\\n16 17\\r\\n0.3249\\r\\n0.3531\\r\\n0.3056\\r\\n0.4843\\r\\n0.7970\\r\\n0.5842\\r\\n0.5472\\r\\n0.4521\\r\\n0.2028\\r\\n0.7950\\r\\n0.1425\\r\\n0.4595\\r\\n0.1226\\r\\n0.0513\\r\\n0.5915\\r\\n0.2733\\r\\n0.7116\\r\\n0.0974\\r\\n', 'output': ['0.0011964236 0.0027831999 0.0140945800 0.0099145200 0.0983898473 0.1586288138 0.2962532703 0.0986994249 0.0196928959 0.0361972940 0.0015096894 0.0240101362 0.0015026996 0.1439159142 0.0012566904 0.0004912934 0.0439254039 0.0475379030 ']}, {'input': '19 20 7 13\\r\\n1 8\\r\\n10 1\\r\\n12 1\\r\\n1 13\\r\\n2 3\\r\\n2 13\\r\\n5 4\\r\\n11 4\\r\\n16 4\\r\\n5 7\\r\\n5 12\\r\\n5 13\\r\\n12 6\\r\\n9 10\\r\\n18 9\\r\\n15 10\\r\\n17 14\\r\\n14 19\\r\\n17 15\\r\\n16 17\\r\\n0.2124\\r\\n0.4090\\r\\n0.6285\\r\\n0.8759\\r\\n0.6790\\r\\n0.3161\\r\\n0.7681\\r\\n0.0730\\r\\n0.9793\\r\\n0.9753\\r\\n0.6491\\r\\n0.3349\\r\\n0.5286\\r\\n0.9760\\r\\n0.0743\\r\\n0.3295\\r\\n0.4276\\r\\n0.5759\\r\\n0.9666\\r\\n', 'output': ['0.0307369775 0.0185380486 0.0049762965 0.0801258012 0.4016568896 0.0012615177 0.0458257790 0.0001732439 0.0262190397 0.2072028585 0.0005878688 0.0347646012 0.1014805103 0.0361157326 0.0009321471 0.0019251201 0.0051159376 0.0000088276 0.0023528026 ']}, {'input': '19 45 4 19\\r\\n3 1\\r\\n4 1\\r\\n8 1\\r\\n9 1\\r\\n1 15\\r\\n4 2\\r\\n2 7\\r\\n8 2\\r\\n10 2\\r\\n12 2\\r\\n14 2\\r\\n6 4\\r\\n12 4\\r\\n4 14\\r\\n18 4\\r\\n8 5\\r\\n5 16\\r\\n17 5\\r\\n5 18\\r\\n6 15\\r\\n6 16\\r\\n6 17\\r\\n11 7\\r\\n7 12\\r\\n16 7\\r\\n19 7\\r\\n15 8\\r\\n9 10\\r\\n12 9\\r\\n9 14\\r\\n18 9\\r\\n19 9\\r\\n10 12\\r\\n14 10\\r\\n19 10\\r\\n11 13\\r\\n11 14\\r\\n15 11\\r\\n17 11\\r\\n11 19\\r\\n12 16\\r\\n15 13\\r\\n15 14\\r\\n14 17\\r\\n18 19\\r\\n0.4821\\r\\n0.4961\\r\\n0.0784\\r\\n0.4492\\r\\n0.7542\\r\\n0.2541\\r\\n0.9007\\r\\n0.3242\\r\\n0.3859\\r\\n0.2849\\r\\n0.4588\\r\\n0.9274\\r\\n0.1538\\r\\n0.4482\\r\\n0.6068\\r\\n0.9144\\r\\n0.8487\\r\\n0.1854\\r\\n0.4288\\r\\n', 'output': ['0.0266883400 0.0401292756 0.0000341093 0.0443828404 0.0331957500 0.0072730898 0.1489809719 0.0096326688 0.0407018303 0.0188112037 0.0334055826 0.2872048781 0.0010750781 0.0556489717 0.0481176365 0.0894552396 0.0587582081 0.0258448651 0.0306594604 ']}, {'input': '6 9 2 5\\r\\n1 2\\r\\n3 1\\r\\n6 1\\r\\n2 4\\r\\n5 2\\r\\n3 6\\r\\n5 4\\r\\n6 4\\r\\n6 5\\r\\n0.9796\\r\\n0.7061\\r\\n0.6636\\r\\n0.9200\\r\\n0.4454\\r\\n0.5302\\r\\n', 'output': ['0.3356041533 0.2464765303 0.0058143943 0.2843884681 0.0929849670 0.0347314871 ']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, a, b, d[1 << 22], s[1 << 22];\ndouble p[1 << 22];\nvector<int> e[1 << 22];\ninline int find(int x) { return x == d[x]? x : d[x] = find(d[x]); }\ninline bool merge(int u, int v) {\n  u = find(u), v = find(v);\n  if (u == v)\n    return 0;\n  else {\n    d[v] = u;\n    return 1;\n  }\n}\nint main() {\n  cin >> n >> m >> a >> b;\n  a--, b--;\n  double f = 0.0;\n  for (int i = 0, x; i < m; i++) {\n    cin >> x;\n    x--;\n    e[x].push_back(i), e[i].push_back(x);\n  }\n  for (int i = 0, x; i < n; i++) cin >> p[i];\n  s[a] = 1, d[a] = a;\n  for (int i = 0; i < 200; i++)\n    for (int j = 0; j < e[i].size(); j++)\n      if (merge(i, e[i][j]) && find(a) == find(i)) s[i] = 1;\n  for (int i = 0; i < n; i++) f += double(s[i] == 0) * p[i];\n  cout << fixed << setprecision(9) << f;\n  for (int i = 1; i < n; i++) cout << \" \" << f;\n  cout << \"\\n\";\n}\n"}
{"src_uid": "34b67958a37865e1ca0529bbf528dd9a", "id": 38, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '198\\r\\n', 'output': ['981\\r\\n819']}, {'input': '500\\r\\n', 'output': ['500\\r\\n500']}, {'input': '1061\\r\\n', 'output': ['1160\\r\\n1160', '6110\\r\\n6110']}, {'input': '1099\\r\\n', 'output': ['9901\\r\\n1099']}, {'input': '4877\\r\\n', 'output': ['4778\\r\\n4778', '8774\\r\\n8774']}, {'input': '787027\\r\\n', 'output': ['877720\\r\\n777280']}, {'input': '7665711\\r\\n', 'output': ['7766115\\r\\n7766115']}, {'input': '670042\\r\\n', 'output': ['672400\\r\\n427600']}, {'input': '87417\\r\\n', 'output': ['77481\\r\\n77418', '87741\\r\\n87741', '14778\\r\\n14778']}, {'input': '27183007\\r\\n', 'output': ['78721300\\r\\n31278700']}, {'input': '2603340571199714716025114079373828413509944752618962350632892540710372640383149198328312562980217104434880337288055817064\\r\\n', 'output': ['9444433333332219999999998888888888888777777777776666666655555555544444444433333333222222222221111111111111000000000100000\\r\\n4444333333322110000000001111111111111222222222223333333344444444455555555566666666777777777778888888888888999999999900000', '4444333333322109999999999888888888888877777777777666666665555555554444444443333333322222222222111111111111100000000010000\\r\\n4444333333322110000000000111111111111122222222222333333334444444445555555556666666677777777777888888888888899999999990000']}, {'input': '8679647744\\r\\n', 'output': ['9877766444\\r\\n9877764446']}, {'input': '220737406285\\r\\n', 'output': ['877654322200\\r\\n222345677800']}, {'input': '993522733475817\\r\\n', 'output': ['997533877542213\\r\\n995333122457787']}, {'input': '5057017252180797906185\\r\\n', 'output': ['7765551998877221100500\\r\\n7765551001122778899500']}, {'input': '12414711447744142772\\r\\n', 'output': ['11111222444444477777\\r\\n11111222444444477777', '77444444411111777222\\r\\n77444444411111222777', '77777444444422211111\\r\\n77777444444422211111']}, {'input': '3037225037514100860827276704\\r\\n', 'output': ['7887777665544332222113000000\\r\\n3112222334455667777887000000']}, {'input': '346762409573609367635944363650432097309\\r\\n', 'output': ['774499999776666666555444333333322000003\\r\\n744300000223333333444555666666677999997']}, {'input': '21504009080570645002760268009722803470954749000131\\r\\n', 'output': ['69999888777776655554444332222211100004000000000000\\r\\n40000111222223344445555667777788899996000000000000']}, {'input': '3311314413231141411421432122343321141133112122342341334443214\\r\\n', 'output': ['4444444444444433333333333333332222222222211111111111111111111\\r\\n4444444444444433333333333333332222222222211111111111111111111', '1111111111111111111122222222222333333333333333344444444444444\\r\\n1111111111111111111122222222222333333333333333344444444444444']}, {'input': '9070901003919040000887091134838800004472724709967020097067025050205000220352709096100405900207957128\\r\\n', 'output': ['7999999999999888888777777777766655555544444433322222222221111110000000000003000000000000000000000000\\r\\n3000000000000111111222222222233344444455555566677777777778888889999999999997000000000000000000000000']}, {'input': '41818138314831348134448848318148131818813388313344833114141141184383813143343448843131343384181384844431384114113314313144848133488818418384818848341344811441811141313448341888341118488811314338434488\\r\\n', 'output': ['88888888888888888888888888888888888888888888888888844444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111\\r\\n88888888888888888888888888888888888888888888888888844444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111', '11111111111111111111111111111111111111111111111111111133333333333333333333333333333333333333333333344444444444444444444444444444444444444444444444444888888888888888888888888888888888888888888888888888\\r\\n11111111111111111111111111111111111111111111111111111...', '44444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111888888888888888888888888888888888888888888888888888111111111111111111111111111111111111111111111111111\\r\\n44444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111888888888888888888888888888888888888888888888888888']}, {'input': '73552900025351606679224588872327647961330089042655630665222580520508672870102563487600132539752481214659858863022476410484266570139810532470714984092503934751571221521306943121997450187110428026190962582430971693370613087381790614697689671767000004095232276975952292053272119035138483846537407714434012224979098527763281110363860729062927455745190194649\\r\\n', 'output': ['66655222222221111111199999999999999999999999999999999988888888888888888888888888877777777777777777777777777777777777776666666666666666666666666666666555555555555555555555555555555544444444444444444444444444444443333333333333333333333333333333222222222222222222222222222222222222211111111111111111111111111100000000000000000000000000000000050000000000000\\r\\n666552222222211111111000000000000000000000000000000000111111111111111111111111111222222222222222222222222222222222222233333333333333333333333333333334444444...']}, {'input': '3660060360865606405406648718470765048005409506710925001850101061700007022407913434780234609002664580600302035550131007145010003815754853838580300966004029000300434981894159106340481587649046330570701648116012056320463003313141680800500509429100191307403765300801130020535489060555504004005803272823494700970010952879008030098004480465890588039380501581078422931611654908930340540303783403661632050700948101050151020160623940430284004280902060684751066629489507855752580027410505650019760020009138500203642800308...', 'output': ['8999999999999999999999999999999999888888888888888888888888888888888888888888888888888777777777777777777777777777777777666666666666666666666666666666666666666666666666666665555555555555555555555555555555555555555555555555555555554444444444444444444444444444444444444444444444444444444443333333333333333333333333333333333333333333333333333322222222222222222222222222222222211111111111111111111111111111111111111111111111111100000000000000000000000000000000020000000000000000000000000000000000000000000000000000000...']}, {'input': '3988405032201869838583516133943649897563464963199720203573666195109254972807095125585153139107836315540802254503122202208671231062969287785325745149827780975637820846694844717512181082423246460831153198676512327424647704185170864814344819230405434252307112870463387306341417126663194715993207482864102823774828380347931676663905538788367741598351252166769604140992179418820043419699163449596439979329298654494702555801641339987965927031928141345579024032222443566448480995335779507500358684011237604341216194860...', 'output}, {'input': '5562193853810918945620627929172131555837473643554362967763887812413927487628705169826152884386226149418373951049986250969308862515359891001338285242920050910490906828048000561263856034031835539717283086698037020184346364592477218030068494838985393388772969774556866175869082513319040937289891361048143148841837267534830052901494206187747905771299059141380597767985198813756458221849136120811572042106826621666519843756406853641666119992871613251441378811527654575794639431472815236597945545443592839760099142175...', 'output}, {'input': '1730422676082588834860375440897683748061653034160089035356410303853087273043400007064082808873506818021832173796672909286031070430706710420988411005000807994008004024283001700960690091562564065800969314020467274006854259128883092106143502490180340506154995307707013371796800069059205904006180070480509165819304195087071960902368005201049042530842923912727019572672086010287001109827122078050756623098907147400115030307257820452003056013088910107770590352130772036869022135230000406249627027600081343058909708407...', 'output}, {'input': '1188618183388611381111868863636138313333318818183316831361113811386318881168331361688618161613168636818383186336633113388318838136613388313111138111638188133138611181663863163386311813118638838866886113361631311686863836336863366813363683838881686613163833833813818131863311861368333636631363361331668363336363133666111611188181133381186813313311188138316336861381168838138611618113313831613331631133161186833631636661616388613133631666888311386383811818886633183161338681333381366386313631818363861111388386336...', 'output': ['3333333333333333333333333333333333333333111188888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666...', '8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666333333333333333333333333333333333...']}, {'input': '4243694432732244021095331595848137532367241195639191582163152600248271436184171538206044964067675106064159822875846011534297438582909683899088886549812421326048203391195680776887732457754143569028983164195293260537822023061273285507094731086855967279325960871356767018241344379707565856468765648033087664400397093527921657664579022705211823347324199918200113662278819911280201671779336001809547757878558876551737537928583698853638809689051510513192892880892879923602951533842587693618320930509403954665244464014...', 'output': ['9988888884433229999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555554444...']}, {'input': '5437214130838098132393123187069383986299021704931433096622499682915037838279737829812626065978576360754157333866084773073470536769353978446234788082062466105585127249713791721276273253638073234535447123880003542275055023902223874569552201863700202729293434430147174682302760783914011412039339697895841967107362265388874914846141521997037412954401235418335972353607055044874973461347888021255272429429744517830123078766552437060613565467908259410563840960055743267873948181932990399762986852911078878324107938917...', 'output}, {'input': '4944847984484499897477888998874784884474797788999888498989748984997797774478988749487787787944998784444748977844777488984798748984848479947894989998987487879949447848848898888479487898778984788988844874979497894779489449989797494497448984798494794487487499897944798844794498988947898787974874948989778778787978779999884994978894997949747744747987949784774894974798444899479997779484979789977489799448894478894447988489844888844979484789849479784487487984494474787484798944879774787979844984474989994948844498848...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '7688754930503622624249376302050721830065980218099156664541044701341628003496939103577693880283583449467297533469375121979331361424629165453875685841427085813980899970901793449283121463702841677303321796810682892574801165017961242552369171251649136915268463307740719648716991029731139504104601780245826323470355102044393062687794743810560411082474390672510942974815216433066730925915777989481449608904036597675354340429734413866576289385161415247796862427872213476834038054015404274700559772991390769430573604588...', 'output}, {'input': '6185037014707879384301592707009200430885687987529770162683115103088000085680865822274850080279809974072320607292351515828318654276346545329009080458123889570600021478058963049335300526437402130814087220633083010320092359393947423676191603547547874099010090263715163042641015092023212068194008006284379105933507405589730536098173006808291862017372694644277904949390565867842170703665006250410053210368067399451324395605280164900094231101070015087506700869427482073857397072913460003007919234200185280014042400788...', 'output': ['0999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...', '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '9965675082563929077799639762147786621291924398160624989369600320192031503878569896057485302667512360792029743474568614205998702183738012739853871916032407255123289056032335037954093166786819460498686316030169623643193583487898113843927174667792205951098904610616262292296460934603477941718344667867924960280476601880750505510840781238530728533026536005269229659829632892079936763214347808150429912908943447565716781168693866762946019658346001623995714859531084238467607308795481083815672444891116656361208045970...', 'output}, {'input': '9399099847230403397608550745456155491158833773727348957376326513008223271678368456249540347230059416611594526577303833136258789778891864775273632464015119183546285134805758447349338707895134660480829159525233548918538910475304570679493939658220667016376015440024476591414811967116176614232543688298600080829981632901950723372865951651419680198089502103871677882895994538059569016616295154550051663786468623844991852957332803481973612908697320851672235286727280608094255910265465949153761572434331191352427728064...', 'output}, {'input': '8677967897698796789869977698966986766668767667877789687666777969877868866999778969776786886687667966666886998976666676977779778769966697999998779777897676767686769769786987879887997776899999678878889896989896786778987668667889996989798796789766787977696988889666979897677886999868886976889987967696786768799888977677869978788766888766766967966876677799699997999866877688987986667899667687969687976867888778966777679767976979686899989799966976677796988888678867987797979987688869998677678689766966799667798866777...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '9169971377710854296307256878741743698904124875448188271438951731205465267096367879254423883111502855461268175261428259841277349539147022226480518218151857953676017222027859200956811168178482461083232476828773371751606247028165410567693365659977753752229668485142842096080257823565015585554974200804379221344492030870542627558563729072598095907764908903382419976933178549658032518931968565924190202313496291962510432634753675507873015068004621111683336737250908340689201372884809217551652679954580369879266423996...', 'output': ['6999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6402786117688907443629724676831861533380180662220326080501780992805834946738488906845349427183566546511120382042723532624475030689025499486454271766674879981315283125798751257569414757976374038693161455471776288448466249042222232425875808224403027744003704733955856398480964728375104262593788637777991997226599166814909071700171931478113019658198262741949705020331053974720755616818262843218961549805697021892940521399666343560867144526146538816131915538024059710094503485967378568082586947837283236875658146083...', 'output}, {'input': '2070584715958145931421943242877190736958188253532149113773257317774198852654268041861390688937915459566813326558023375873717875659623285221404908938186814771148690466010226989170254197736185741906851849474335844294393346935985196002604635838488633689366270270816465659353721056863151769188355135996953267698927714458440941550608272933473999407843409218797782406542610740951897694088643421505259321077956931953401390506157198305673803989694229999834828559332611372520954127118391729272331426793792414035235978292...', 'output}, {'input': '8830861889084051137643095774667654091986146869638648806288355834264695705797997204636152837277104079861551043640411014476918595066178670622283784697836347266655410475651455424263984398400662652738282678568304261152268090472444853374162421538590461473160139331604155280883012526754572269223633721300073239964775068679107842867167988931514560036166077584920827099541095153530279147684552577281385808157457305366848324391930843148351467387609038643560823897910018058987387476315080167238324082347653316905346938679...', 'output}, {'input': '8305353302042045132812713478589540940020097002309955880051290302345538886542504324100015141590915418707137647116069301978829579921838244596449533937725450722688600320224550552507030093558787751655874747352271037965806257211323568094024519907197752098052106271348046013549239460290417613713576981256525956964865075252410470149725070078486001965401206111081063737511835054192700776299150006487937152257808653940563700849221029782962584151954350056927572215246004027016540143697744783917148900624067210069508161787...', 'output': ['8999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6704583818391588725469181550354102907239957098358358841717401300766278881560400090038110916014289948657235584423606594158621824161523469830236380607965385255791396338932174225438170797034425037147862456636103346837327265294351641494623753674273621107344771242622310334986605935646991773638608552637622046669634226820615541845784212711291886281633637512336684846321599254977042239750805332860293274970565739990902560439745089146186062321750856522530810958656665834465619613523446131577586425662419972532205004271...', 'output': ['4444444444444444444444444444444444444444444444444444443333333333333333333333333333333333333333333333333333333333333333333333333333332222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111099999999999999999999999999999999999999999...', '9444444444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333333333333333333333333333333333333222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111199999999999999999999999999999999999999999...']}, {'input': '9689938698889663898863839636966699683986893699339386968338899966338869996936888869663833336868866886386686639839963333996866369633899638368886998389968998699366836388883663893393688389893963669968369396688338969698386338398836839988388898698688996366986968989699663989989698666833338689688393939988989389688683933989888969993363986386998399368636639933366866638686886936996998988399363868338933366966866996963866669896888669699698386869968968863868939688838383896969669866999369969399938388639699888886838393936...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6023899695120557896013140711187680503448138679874588624050077803801854865697769353263222770960826861606106727886113310607069728272963227255389496899919068931344113537068309946879921059042444576366749994436144274847702102456819164989911861327124734838196173853563309843214631874712516961632171049329502507717957033924841978867659693226643101620967990111518453074600938886866941984226547980772170089838147109088768785941748600078140887848218226465026331411736734765922485300427498987217333097493592537246554457873...', 'output}, {'input': '404\\r\\n', 'output': ['440\\r\\n440']}, {'input': '545\\r\\n', 'output': ['545\\r\\n455']}, {'inputoutput': ['5999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '1486913458965407214474383051348880508797108309397132594608042047940314727604051381139181936657952113296264075630972575614980513092531236791260521858939901778974029659858701463047070106689549279462422735787009718900006205995325189656713599230841667711463676680976775990350526357505751432136802865972492235528750512640736169514063847705640465671951212885515298612577866350659145039585877518710392780320811778565480073883045746578885361310463306158402059382132691444825799882582584615455011180820034013186375611788...', 'output}, {'input': '735529000253516066792245888723276479613300890426556306652225805205086728701025634876001325397524812146598588630224764104842665701398105324707149840925039347515712215213069431219974501871104280261909625824309716933706130873817906146976896717670000040952322...', 'output': ['666552222222211111111999999999999999999999999999999999888888888888888888888888888777777777777777777777777777777777777766666666666666666666666666666665555555555555555555555555555555444444444444444444444444444444433333333333333333333333333333332222222222222...']}, {'input': '366006036086560640540664871847076504800540950671092500185010106170000702240791343478023460900266458060030203555013100714501000381575485383858030096600402900030043498189415910634048158764904633057070164811601205632046300331314168080050050942910019130740376...', 'output': ['899999999999999999999999999999999988888888888888888888888888888888888888888888888888877777777777777777777777777777777766666666666666666666666666666666666666666666666666666555555555555555555555555555555555555555555555555555555555444444444444444444444444444...']}, {'input': '398840503220186983858351613394364989756346496319972020357366619510925497280709512558515313910783631554080225450312220220867123106296928778532574514982778097563782084669484471751218108242324646083115319867651232742464770418517086481434481923040543425230711...', 'output': ['999999999999964444444444444444442221111111111199999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777...']}, {'input': '556219385381091894562062792917213155583747364355436296776388781241392748762870516982615288438622614941837395104998625096930886251535989100133828524292005091049090682804800056126385603403183553971728308669803702018434636459247721803006849483898539338877296...', 'output': ['999999999999999999999997777777777777755555599999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777766...']}, {'input': '173042267608258883486037544089768374806165303416008903535641030385308727304340000706408280887350681802183217379667290928603107043070671042098841100500080799400800402428300170096069009156256406580096931402046727400685425912888309210614350249018034050615499...', 'output': ['799999999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666...']}, {'input': '118861818338861138111186886363613831333331881818331683136111381138631888116833136168861816161316863681838318633663311338831883813661338831311113811163818813313861118166386316338631181311863883886688611336163131168686383633686336681336368383888168661316383...', 'output': ['111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111...']}, {'input': '424369443273224402109533159584813753236724119563919158216315260024827143618417153820604496406767510606415982287584601153429743858290968389908888654981242132604820339119568077688773245775414356902898316419529326053782202306127328550709473108685596727932596...', 'output': ['998888888443322999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888877777777777777777777777777777777777777777...']}, {'input': '543721413083809813239312318706938398629902170493143309662249968291503783827973782981262606597857636075415733386608477307347053676935397844623478808206246610558512724971379172127627325363807323453544712388000354227505502390222387456955220186370020272929343...', 'output': ['888888888888888888888888888666666666666664444444444444444444444444444444444444444444444999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '494484798448449989747788899887478488447479778899988849898974898499779777447898874948778778794499878444474897784477748898479874898484847994789498999898748787994944784884889888847948789877898478898884487497949789477948944998979749449744898479849479448748749...', 'output': ['444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444...']}, {'input': '768875493050362262424937630205072183006598021809915666454104470134162800349693910357769388028358344946729753346937512197933136142462916545387568584142708581398089997090179344928312146370284167730332179681068289257480116501796124255236917125164913691526846...', 'output': ['777777777777777777777777777777777777777777777777777774444433333333333333333333333333333333333331111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '618503701470787938430159270700920043088568798752977016268311510308800008568086582227485008027980997407232060729235151582831865427634654532900908045812388957060002147805896304933530052643740213081408722063308301032009235939394742367619160354754787409901009...', 'output': ['099999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '996567508256392907779963976214778662129192439816062498936960032019203150387856989605748530266751236079202974347456861420599870218373801273985387191603240725512328905603233503795409316678681946049868631603016962364319358348789811384392717466779220595109890...', 'output': ['777777777777777777777776666666666666666666666666666666666666666666666666666666444411111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '939909984723040339760855074545615549115883377372734895737632651300822327167836845624954034723005941661159452657730383313625878977889186477527363246401511918354628513480575844734933870789513466048082915952523354891853891047530457067949393965822066701637601...', 'output': ['777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666644444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444111111111111111111111111111111111...']}, {'input': '867796789769879678986997769896698676666876766787778968766677796987786886699977896977678688668766796666688699897666667697777977876996669799999877977789767676768676976978698787988799777689999967887888989698989678677898766866788999698979879678976678797769698...', 'output': ['666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666...']}, {'input': '916997137771085429630725687874174369890412487544818827143895173120546526709636787925442388311150285546126817526142825984127734953914702222648051821815185795367601722202785920095681116817848246108323247682877337175160624702816541056769336565997775375222966...', 'output': ['699999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '640278611768890744362972467683186153338018066222032608050178099280583494673848890684534942718356654651112038204272353262447503068902549948645427176667487998131528312579875125756941475797637403869316145547177628844846624904222223242587580822440302774400370...', 'output': ['666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666444444444444444444444444444444444444444444444444444444444444444444444444442222222222222222222222222222222222...']}, {'input': '207058471595814593142194324287719073695818825353214911377325731777419885265426804186139068893791545956681332655802337587371787565962328522140490893818681477114869046601022698917025419773618574190685184947433584429439334693598519600260463583848863368936627...', 'output': ['666664444444444444444444444422222222222222222222222222111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '883086188908405113764309577466765409198614686963864880628835583426469570579799720463615283727710407986155104364041101447691859506617867062228378469783634726665541047565145542426398439840066265273828267856830426115226809047244485337416242153859046147316013...', 'output': ['999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666666666666666666666666666666666666666666666666666666...']}, {'input': '830535330204204513281271347858954094002009700230995588005129030234553888654250432410001514159091541870713764711606930197882957992183824459644953393772545072268860032022455055250703009355878775165587474735227103796580625721132356809402451990719775209805210...', 'output': ['899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '670458381839158872546918155035410290723995709835835884171740130076627888156040009003811091601428994865723558442360659415862182416152346983023638060796538525579139633893217422543817079703442503714786245663610334683732726529435164149462375367427362110734477...', 'output': ['444444444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333333333333333333333333333333333333222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222211...']}, {'input': '968993869888966389886383963696669968398689369933938696833889996633886999693688886966383333686886688638668663983996333399686636963389963836888699838996899869936683638888366389339368838989396366996836939668833896969838633839883683998838889869868899636698696...', 'output': ['333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333...']}, {'input': '602389969512055789601314071118768050344813867987458862405007780380185486569776935326322277096082686160610672788611331060706972827296322725538949689991906893134411353706830994687992105904244457636674999443614427484770210245681916498991186132712473483819617...', 'output': ['999999999999999999999988888888888888888888888888888888888888888888888888888888888888888884444444444444444444444444444444444444444444444444444444444444444444444444433333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333...']}, {'input': '909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909...', 'output': ['599999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '126254092095959027850416433832655426981078106611255074552648515499659121878087190358961591096171231715312122879634738062251247629492483043125748065235158236635181790420183641430917548189219521011748435487445986824532619160561716073648857875108255827252014...', 'output': ['888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888884444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444...']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a;\n  cin >> a;\n  string s = to_string(a);\n  for (int i = s.size() - 1; i >= 0; i--)\n    for (int j = s.size() - 1; j >= 0; j--) {\n      if (s[i] == '0' && s[j] == '0') continue;\n      if (s[i]!= '0' && s[j]!= '0') swap(s[i], s[j]);\n      for (int k = 0; k < i; k++) cout << s[k];\n      swap(s[i], s[j]);\n      if (s[i] == '0')\n        cout << s[i];\n      else\n        cout << s[i] << s[j];\n      for (int k = j + 1; k < s.size(); k++) cout << s[k];\n      cout << endl;\n    }\n  return 0;\n}\n"}
{"src_uid": "34b67958a37865e1ca0529bbf528dd9a", "id": 38, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '198\\r\\n', 'output': ['981\\r\\n819']}, {'input': '500\\r\\n', 'output': ['500\\r\\n500']}, {'input': '1061\\r\\n', 'output': ['1160\\r\\n1160', '6110\\r\\n6110']}, {'input': '1099\\r\\n', 'output': ['9901\\r\\n1099']}, {'input': '4877\\r\\n', 'output': ['4778\\r\\n4778', '8774\\r\\n8774']}, {'input': '787027\\r\\n', 'output': ['877720\\r\\n777280']}, {'input': '7665711\\r\\n', 'output': ['7766115\\r\\n7766115']}, {'input': '670042\\r\\n', 'output': ['672400\\r\\n427600']}, {'input': '87417\\r\\n', 'output': ['77481\\r\\n77418', '87741\\r\\n87741', '14778\\r\\n14778']}, {'input': '27183007\\r\\n', 'output': ['78721300\\r\\n31278700']}, {'input': '2603340571199714716025114079373828413509944752618962350632892540710372640383149198328312562980217104434880337288055817064\\r\\n', 'output': ['9444433333332219999999998888888888888777777777776666666655555555544444444433333333222222222221111111111111000000000100000\\r\\n4444333333322110000000001111111111111222222222223333333344444444455555555566666666777777777778888888888888999999999900000', '4444333333322109999999999888888888888877777777777666666665555555554444444443333333322222222222111111111111100000000010000\\r\\n4444333333322110000000000111111111111122222222222333333334444444445555555556666666677777777777888888888888899999999990000']}, {'input': '8679647744\\r\\n', 'output': ['9877766444\\r\\n9877764446']}, {'input': '220737406285\\r\\n', 'output': ['877654322200\\r\\n222345677800']}, {'input': '993522733475817\\r\\n', 'output': ['997533877542213\\r\\n995333122457787']}, {'input': '5057017252180797906185\\r\\n', 'output': ['7765551998877221100500\\r\\n7765551001122778899500']}, {'input': '12414711447744142772\\r\\n', 'output': ['11111222444444477777\\r\\n11111222444444477777', '77444444411111777222\\r\\n77444444411111222777', '77777444444422211111\\r\\n77777444444422211111']}, {'input': '3037225037514100860827276704\\r\\n', 'output': ['7887777665544332222113000000\\r\\n3112222334455667777887000000']}, {'input': '346762409573609367635944363650432097309\\r\\n', 'output': ['774499999776666666555444333333322000003\\r\\n744300000223333333444555666666677999997']}, {'input': '21504009080570645002760268009722803470954749000131\\r\\n', 'output': ['69999888777776655554444332222211100004000000000000\\r\\n40000111222223344445555667777788899996000000000000']}, {'input': '3311314413231141411421432122343321141133112122342341334443214\\r\\n', 'output': ['4444444444444433333333333333332222222222211111111111111111111\\r\\n4444444444444433333333333333332222222222211111111111111111111', '1111111111111111111122222222222333333333333333344444444444444\\r\\n1111111111111111111122222222222333333333333333344444444444444']}, {'input': '9070901003919040000887091134838800004472724709967020097067025050205000220352709096100405900207957128\\r\\n', 'output': ['7999999999999888888777777777766655555544444433322222222221111110000000000003000000000000000000000000\\r\\n3000000000000111111222222222233344444455555566677777777778888889999999999997000000000000000000000000']}, {'input': '41818138314831348134448848318148131818813388313344833114141141184383813143343448843131343384181384844431384114113314313144848133488818418384818848341344811441811141313448341888341118488811314338434488\\r\\n', 'output': ['88888888888888888888888888888888888888888888888888844444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111\\r\\n88888888888888888888888888888888888888888888888888844444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111', '11111111111111111111111111111111111111111111111111111133333333333333333333333333333333333333333333344444444444444444444444444444444444444444444444444888888888888888888888888888888888888888888888888888\\r\\n11111111111111111111111111111111111111111111111111111...', '44444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111888888888888888888888888888888888888888888888888888111111111111111111111111111111111111111111111111111\\r\\n44444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111888888888888888888888888888888888888888888888888888']}, {'input': '73552900025351606679224588872327647961330089042655630665222580520508672870102563487600132539752481214659858863022476410484266570139810532470714984092503934751571221521306943121997450187110428026190962582430971693370613087381790614697689671767000004095232276975952292053272119035138483846537407714434012224979098527763281110363860729062927455745190194649\\r\\n', 'output': ['66655222222221111111199999999999999999999999999999999988888888888888888888888888877777777777777777777777777777777777776666666666666666666666666666666555555555555555555555555555555544444444444444444444444444444443333333333333333333333333333333222222222222222222222222222222222222211111111111111111111111111100000000000000000000000000000000050000000000000\\r\\n666552222222211111111000000000000000000000000000000000111111111111111111111111111222222222222222222222222222222222222233333333333333333333333333333334444444...']}, {'input': '3660060360865606405406648718470765048005409506710925001850101061700007022407913434780234609002664580600302035550131007145010003815754853838580300966004029000300434981894159106340481587649046330570701648116012056320463003313141680800500509429100191307403765300801130020535489060555504004005803272823494700970010952879008030098004480465890588039380501581078422931611654908930340540303783403661632050700948101050151020160623940430284004280902060684751066629489507855752580027410505650019760020009138500203642800308...', 'output': ['8999999999999999999999999999999999888888888888888888888888888888888888888888888888888777777777777777777777777777777777666666666666666666666666666666666666666666666666666665555555555555555555555555555555555555555555555555555555554444444444444444444444444444444444444444444444444444444443333333333333333333333333333333333333333333333333333322222222222222222222222222222222211111111111111111111111111111111111111111111111111100000000000000000000000000000000020000000000000000000000000000000000000000000000000000000...']}, {'input': '3988405032201869838583516133943649897563464963199720203573666195109254972807095125585153139107836315540802254503122202208671231062969287785325745149827780975637820846694844717512181082423246460831153198676512327424647704185170864814344819230405434252307112870463387306341417126663194715993207482864102823774828380347931676663905538788367741598351252166769604140992179418820043419699163449596439979329298654494702555801641339987965927031928141345579024032222443566448480995335779507500358684011237604341216194860...', 'output}, {'input': '5562193853810918945620627929172131555837473643554362967763887812413927487628705169826152884386226149418373951049986250969308862515359891001338285242920050910490906828048000561263856034031835539717283086698037020184346364592477218030068494838985393388772969774556866175869082513319040937289891361048143148841837267534830052901494206187747905771299059141380597767985198813756458221849136120811572042106826621666519843756406853641666119992871613251441378811527654575794639431472815236597945545443592839760099142175...', 'output}, {'input': '1730422676082588834860375440897683748061653034160089035356410303853087273043400007064082808873506818021832173796672909286031070430706710420988411005000807994008004024283001700960690091562564065800969314020467274006854259128883092106143502490180340506154995307707013371796800069059205904006180070480509165819304195087071960902368005201049042530842923912727019572672086010287001109827122078050756623098907147400115030307257820452003056013088910107770590352130772036869022135230000406249627027600081343058909708407...', 'output}, {'input': '1188618183388611381111868863636138313333318818183316831361113811386318881168331361688618161613168636818383186336633113388318838136613388313111138111638188133138611181663863163386311813118638838866886113361631311686863836336863366813363683838881686613163833833813818131863311861368333636631363361331668363336363133666111611188181133381186813313311188138316336861381168838138611618113313831613331631133161186833631636661616388613133631666888311386383811818886633183161338681333381366386313631818363861111388386336...', 'output': ['3333333333333333333333333333333333333333111188888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666...', '8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666333333333333333333333333333333333...']}, {'input': '4243694432732244021095331595848137532367241195639191582163152600248271436184171538206044964067675106064159822875846011534297438582909683899088886549812421326048203391195680776887732457754143569028983164195293260537822023061273285507094731086855967279325960871356767018241344379707565856468765648033087664400397093527921657664579022705211823347324199918200113662278819911280201671779336001809547757878558876551737537928583698853638809689051510513192892880892879923602951533842587693618320930509403954665244464014...', 'output}, {'input': '5437214130838098132393123187069383986299021704931433096622499682915037838279737829812626065978576360754157333866084773073470536769353978446234788082062466105585127249713791721276273253638073234535447123880003542275055023902223874569552201863700202729293434430147174682302760783914011412039339697895841967107362265388874914846141521997037412954401235418335972353607055044874973461347888021255272429429744517830123078766552437060613565467908259410563840960055743267873948181932990399762986852911078878324107938917...', 'output}, {'input': '4944847984484499897477888998874784884474797788999888498989748984997797774478988749487787787944998784444748977844777488984798748984848479947894989998987487879949447848848898888479487898778984788988844874979497894779489449989797494497448984798494794487487499897944798844794498988947898787974874948989778778787978779999884994978894997949747744747987949784774894974798444899479997779484979789977489799448894478894447988489844888844979484789849479784487487984494474787484798944879774787979844984474989994948844498848...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '7688754930503622624249376302050721830065980218099156664541044701341628003496939103577693880283583449467297533469375121979331361424629165453875685841427085813980899970901793449283121463702841677303321796810682892574801165017961242552369171251649136915268463307740719648716991029731139504104601780245826323470355102044393062687794743810560411082474390672510942974815216433066730925915777989481449608904036597675354340429734413866576289385161415247796862427872213476834038054015404274700559772991390769430573604588...', 'output}, {'input': '6185037014707879384301592707009200430885687987529770162683115103088000085680865822274850080279809974072320607292351515828318654276346545329009080458123889570600021478058963049335300526437402130814087220633083010320092359393947423676191603547547874099010090263715163042641015092023212068194008006284379105933507405589730536098173006808291862017372694644277904949390565867842170703665006250410053210368067399451324395605280164900094231101070015087506700869427482073857397072913460003007919234200185280014042400788...', 'output': ['0999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...', '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '9965675082563929077799639762147786621291924398160624989369600320192031503878569896057485302667512360792029743474568614205998702183738012739853871916032407255123289056032335037954093166786819460498686316030169623643193583487898113843927174667792205951098904610616262292296460934603477941718344667867924960280476601880750505510840781238530728533026536005269229659829632892079936763214347808150429912908943447565716781168693866762946019658346001623995714859531084238467607308795481083815672444891116656361208045970...', 'output}, {'input': '9399099847230403397608550745456155491158833773727348957376326513008223271678368456249540347230059416611594526577303833136258789778891864775273632464015119183546285134805758447349338707895134660480829159525233548918538910475304570679493939658220667016376015440024476591414811967116176614232543688298600080829981632901950723372865951651419680198089502103871677882895994538059569016616295154550051663786468623844991852957332803481973612908697320851672235286727280608094255910265465949153761572434331191352427728064...', 'output}, {'input': '8677967897698796789869977698966986766668767667877789687666777969877868866999778969776786886687667966666886998976666676977779778769966697999998779777897676767686769769786987879887997776899999678878889896989896786778987668667889996989798796789766787977696988889666979897677886999868886976889987967696786768799888977677869978788766888766766967966876677799699997999866877688987986667899667687969687976867888778966777679767976979686899989799966976677796988888678867987797979987688869998677678689766966799667798866777...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '9169971377710854296307256878741743698904124875448188271438951731205465267096367879254423883111502855461268175261428259841277349539147022226480518218151857953676017222027859200956811168178482461083232476828773371751606247028165410567693365659977753752229668485142842096080257823565015585554974200804379221344492030870542627558563729072598095907764908903382419976933178549658032518931968565924190202313496291962510432634753675507873015068004621111683336737250908340689201372884809217551652679954580369879266423996...', 'output': ['6999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6402786117688907443629724676831861533380180662220326080501780992805834946738488906845349427183566546511120382042723532624475030689025499486454271766674879981315283125798751257569414757976374038693161455471776288448466249042222232425875808224403027744003704733955856398480964728375104262593788637777991997226599166814909071700171931478113019658198262741949705020331053974720755616818262843218961549805697021892940521399666343560867144526146538816131915538024059710094503485967378568082586947837283236875658146083...', 'output}, {'input': '2070584715958145931421943242877190736958188253532149113773257317774198852654268041861390688937915459566813326558023375873717875659623285221404908938186814771148690466010226989170254197736185741906851849474335844294393346935985196002604635838488633689366270270816465659353721056863151769188355135996953267698927714458440941550608272933473999407843409218797782406542610740951897694088643421505259321077956931953401390506157198305673803989694229999834828559332611372520954127118391729272331426793792414035235978292...', 'output': ['6666644444444444444444444444222222222222222222222222221111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111199999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '8830861889084051137643095774667654091986146869638648806288355834264695705797997204636152837277104079861551043640411014476918595066178670622283784697836347266655410475651455424263984398400662652738282678568304261152268090472444853374162421538590461473160139331604155280883012526754572269223633721300073239964775068679107842867167988931514560036166077584920827099541095153530279147684552577281385808157457305366848324391930843148351467387609038643560823897910018058987387476315080167238324082347653316905346938679...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999997777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777666666666666666666666666666666666666666666666666666666666666666666666666666444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444411199999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '8305353302042045132812713478589540940020097002309955880051290302345538886542504324100015141590915418707137647116069301978829579921838244596449533937725450722688600320224550552507030093558787751655874747352271037965806257211323568094024519907197752098052106271348046013549239460290417613713576981256525956964865075252410470149725070078486001965401206111081063737511835054192700776299150006487937152257808653940563700849221029782962584151954350056927572215246004027016540143697744783917148900624067210069508161787...', 'output': ['8999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6704583818391588725469181550354102907239957098358358841717401300766278881560400090038110916014289948657235584423606594158621824161523469830236380607965385255791396338932174225438170797034425037147862456636103346837327265294351641494623753674273621107344771242622310334986605935646991773638608552637622046669634226820615541845784212711291886281633637512336684846321599254977042239750805332860293274970565739990902560439745089146186062321750856522530810958656665834465619613523446131577586425662419972532205004271...', 'output': ['4444444444444444444444444444444444444444444444444444443333333333333333333333333333333333333333333333333333333333333333333333333333332222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111099999999999999999999999999999999999999999...', '9444444444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333333333333333333333333333333333333222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111199999999999999999999999999999999999999999...']}, {'input': '9689938698889663898863839636966699683986893699339386968338899966338869996936888869663833336868866886386686639839963333996866369633899638368886998389968998699366836388883663893393688389893963669968369396688338969698386338398836839988388898698688996366986968989699663989989698666833338689688393939988989389688683933989888969993363986386998399368636639933366866638686886936996998988399363868338933366966866996963866669896888669699698386869968968863868939688838383896969669866999369969399938388639699888886838393936...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6023899695120557896013140711187680503448138679874588624050077803801854865697769353263222770960826861606106727886113310607069728272963227255389496899919068931344113537068309946879921059042444576366749994436144274847702102456819164989911861327124734838196173853563309843214631874712516961632171049329502507717957033924841978867659693226643101620967990111518453074600938886866941984226547980772170089838147109088768785941748600078140887848218226465026331411736734765922485300427498987217333097493592537246554457873...', 'output}, {'input': '404\\r\\n', 'output': ['440\\r\\n440']}, {'input': '545\\r\\n', 'output': ['545\\r\\n455']}, {'inputoutput': ['5999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '1486913458965407214474383051348880508797108309397132594608042047940314727604051381139181936657952113296264075630972575614980513092531236791260521858939901778974029659858701463047070106689549279462422735787009718900006205995325189656713599230841667711463676680976775990350526357505751432136802865972492235528750512640736169514063847705640465671951212885515298612577866350659145039585877518710392780320811778565480073883045746578885361310463306158402059382132691444825799882582584615455011180820034013186375611788...', 'output}, {'input': '735529000253516066792245888723276479613300890426556306652225805205086728701025634876001325397524812146598588630224764104842665701398105324707149840925039347515712215213069431219974501871104280261909625824309716933706130873817906146976896717670000040952322...', 'output': ['666552222222211111111999999999999999999999999999999999888888888888888888888888888777777777777777777777777777777777777766666666666666666666666666666665555555555555555555555555555555444444444444444444444444444444433333333333333333333333333333332222222222222...']}, {'input': '366006036086560640540664871847076504800540950671092500185010106170000702240791343478023460900266458060030203555013100714501000381575485383858030096600402900030043498189415910634048158764904633057070164811601205632046300331314168080050050942910019130740376...', 'output': ['899999999999999999999999999999999988888888888888888888888888888888888888888888888888877777777777777777777777777777777766666666666666666666666666666666666666666666666666666555555555555555555555555555555555555555555555555555555555444444444444444444444444444...']}, {'input': '398840503220186983858351613394364989756346496319972020357366619510925497280709512558515313910783631554080225450312220220867123106296928778532574514982778097563782084669484471751218108242324646083115319867651232742464770418517086481434481923040543425230711...', 'output': ['999999999999964444444444444444442221111111111199999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777...']}, {'input': '556219385381091894562062792917213155583747364355436296776388781241392748762870516982615288438622614941837395104998625096930886251535989100133828524292005091049090682804800056126385603403183553971728308669803702018434636459247721803006849483898539338877296...', 'output': ['999999999999999999999997777777777777755555599999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777766...']}, {'input': '173042267608258883486037544089768374806165303416008903535641030385308727304340000706408280887350681802183217379667290928603107043070671042098841100500080799400800402428300170096069009156256406580096931402046727400685425912888309210614350249018034050615499...', 'output': ['799999999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666...']}, {'input': '118861818338861138111186886363613831333331881818331683136111381138631888116833136168861816161316863681838318633663311338831883813661338831311113811163818813313861118166386316338631181311863883886688611336163131168686383633686336681336368383888168661316383...', 'output': ['111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111...']}, {'input': '424369443273224402109533159584813753236724119563919158216315260024827143618417153820604496406767510606415982287584601153429743858290968389908888654981242132604820339119568077688773245775414356902898316419529326053782202306127328550709473108685596727932596...', 'output': ['998888888443322999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888877777777777777777777777777777777777777777...']}, {'input': '543721413083809813239312318706938398629902170493143309662249968291503783827973782981262606597857636075415733386608477307347053676935397844623478808206246610558512724971379172127627325363807323453544712388000354227505502390222387456955220186370020272929343...', 'output': ['888888888888888888888888888666666666666664444444444444444444444444444444444444444444444999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '494484798448449989747788899887478488447479778899988849898974898499779777447898874948778778794499878444474897784477748898479874898484847994789498999898748787994944784884889888847948789877898478898884487497949789477948944998979749449744898479849479448748749...', 'output': ['444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444...']}, {'input': '768875493050362262424937630205072183006598021809915666454104470134162800349693910357769388028358344946729753346937512197933136142462916545387568584142708581398089997090179344928312146370284167730332179681068289257480116501796124255236917125164913691526846...', 'output': ['777777777777777777777777777777777777777777777777777774444433333333333333333333333333333333333331111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '618503701470787938430159270700920043088568798752977016268311510308800008568086582227485008027980997407232060729235151582831865427634654532900908045812388957060002147805896304933530052643740213081408722063308301032009235939394742367619160354754787409901009...', 'output': ['099999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '996567508256392907779963976214778662129192439816062498936960032019203150387856989605748530266751236079202974347456861420599870218373801273985387191603240725512328905603233503795409316678681946049868631603016962364319358348789811384392717466779220595109890...', 'output': ['777777777777777777777776666666666666666666666666666666666666666666666666666666444411111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '939909984723040339760855074545615549115883377372734895737632651300822327167836845624954034723005941661159452657730383313625878977889186477527363246401511918354628513480575844734933870789513466048082915952523354891853891047530457067949393965822066701637601...', 'output': ['777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666644444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444111111111111111111111111111111111...']}, {'input': '867796789769879678986997769896698676666876766787778968766677796987786886699977896977678688668766796666688699897666667697777977876996669799999877977789767676768676976978698787988799777689999967887888989698989678677898766866788999698979879678976678797769698...', 'output': ['666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666...']}, {'input': '916997137771085429630725687874174369890412487544818827143895173120546526709636787925442388311150285546126817526142825984127734953914702222648051821815185795367601722202785920095681116817848246108323247682877337175160624702816541056769336565997775375222966...', 'output': ['699999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '640278611768890744362972467683186153338018066222032608050178099280583494673848890684534942718356654651112038204272353262447503068902549948645427176667487998131528312579875125756941475797637403869316145547177628844846624904222223242587580822440302774400370...', 'output': ['666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666444444444444444444444444444444444444444444444444444444444444444444444444442222222222222222222222222222222222...']}, {'input': '207058471595814593142194324287719073695818825353214911377325731777419885265426804186139068893791545956681332655802337587371787565962328522140490893818681477114869046601022698917025419773618574190685184947433584429439334693598519600260463583848863368936627...', 'output': ['666664444444444444444444444422222222222222222222222222111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '883086188908405113764309577466765409198614686963864880628835583426469570579799720463615283727710407986155104364041101447691859506617867062228378469783634726665541047565145542426398439840066265273828267856830426115226809047244485337416242153859046147316013...', 'output': ['999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666666666666666666666666666666666666666666666666666666...']}, {'input': '830535330204204513281271347858954094002009700230995588005129030234553888654250432410001514159091541870713764711606930197882957992183824459644953393772545072268860032022455055250703009355878775165587474735227103796580625721132356809402451990719775209805210...', 'output': ['899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '670458381839158872546918155035410290723995709835835884171740130076627888156040009003811091601428994865723558442360659415862182416152346983023638060796538525579139633893217422543817079703442503714786245663610334683732726529435164149462375367427362110734477...', 'output': ['444444444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333333333333333333333333333333333333222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222211...']}, {'input': '968993869888966389886383963696669968398689369933938696833889996633886999693688886966383333686886688638668663983996333399686636963389963836888699838996899869936683638888366389339368838989396366996836939668833896969838633839883683998838889869868899636698696...', 'output': ['333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333...']}, {'input': '602389969512055789601314071118768050344813867987458862405007780380185486569776935326322277096082686160610672788611331060706972827296322725538949689991906893134411353706830994687992105904244457636674999443614427484770210245681916498991186132712473483819617...', 'output': ['999999999999999999999988888888888888888888888888888888888888888888888888888888888888888884444444444444444444444444444444444444444444444444444444444444444444444444433333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333...']}, {'input': '909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909...', 'output': ['599999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '126254092095959027850416433832655426981078106611255074552648515499659121878087190358961591096171231715312122879634738062251247629492483043125748065235158236635181790420183641430917548189219521011748435487445986824532619160561716073648857875108255827252014...', 'output': ['888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888884444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444...']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, a, b;\n  cin >> s;\n  int n = s.size(), sum = 0;\n  for (int i = 0; i < n; i++) {\n    sum = sum + (s[i] - '0');\n  }\n  sum = sum % 5;\n  vector<int> v(n);\n  for (int i = 0; i < n; i++) {\n    v[i] = s[i] - '0';\n  }\n  sort(v.begin(), v.end());\n  a = \"\";\n  b = \"\";\n  if (sum == 0) {\n    for (int i = 0; i < n; i++) {\n      if (i == 0) {\n        a += to_string(v[n - 1]);\n        b += to_string(v[n - 1]);\n      } else {\n        a += to_string(v[n - i - 1]);\n        b += to_string(v[n - i - 1]);\n      }\n    }\n  } else if (sum == 1) {\n    for (int i = 0; i < n; i++) {\n      if (i == 0) {\n        a += to_string(v[n - 1]);\n        b += to_string(v[0]);\n      } else {\n        a += to_string(v[n - i - 1]);\n        b += to_string(v[i]);\n      }\n    }\n  } else if (sum == 2) {\n    for (int i = 0; i < n; i++) {\n      if (i == 0) {\n        a += to_string(v[n - 2]);\n        a += to_string(v[n - 1]);\n        b += to_string(v[n - 1]);\n        b += to_string(v[n - 2]);\n      } else {\n        a += to_string(v[n - i - 1]);\n        b += to_string(v[n - i - 1]);\n      }\n    }\n  } else if (sum == 3) {\n    for (int i = 0; i < n; i++) {\n      if (i == 0) {\n        a += to_string(v[n - 1]);\n        a += to_string(v[n - 3]);\n        b += to_string(v[n - 3]);\n        b += to_string(v[n - 1]);\n      } else {\n        a += to_string(v[n - i - 1]);\n        b += to_string(v[n - i - 1]);\n      }\n    }\n  } else if (sum == 4) {\n    for (int i = 0; i < n; i++) {\n      if (i == 0) {\n        a += to_string(v[n - 1]);\n        a += to_string(v[n - 2]);\n        b += to_string(v[n - 2]);\n        b += to_string(v[n - 1]);\n      } else {\n        a += to_string(v[n - i - 1]);\n        b += to_string(v[n - i - 1]);\n      }\n    }\n  }\n  cout << a << \"\\n\" << b << endl;\n  return 0;\n}\n"}
{"src_uid": "34b67958a37865e1ca0529bbf528dd9a", "id": 38, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '198\\r\\n', 'output': ['981\\r\\n819']}, {'input': '500\\r\\n', 'output': ['500\\r\\n500']}, {'input': '1061\\r\\n', 'output': ['1160\\r\\n1160', '6110\\r\\n6110']}, {'input': '1099\\r\\n', 'output': ['9901\\r\\n1099']}, {'input': '4877\\r\\n', 'output': ['4778\\r\\n4778', '8774\\r\\n8774']}, {'input': '787027\\r\\n', 'output': ['877720\\r\\n777280']}, {'input': '7665711\\r\\n', 'output': ['7766115\\r\\n7766115']}, {'input': '670042\\r\\n', 'output': ['672400\\r\\n427600']}, {'input': '87417\\r\\n', 'output': ['77481\\r\\n77418', '87741\\r\\n87741', '14778\\r\\n14778']}, {'input': '27183007\\r\\n', 'output': ['78721300\\r\\n31278700']}, {'input': '2603340571199714716025114079373828413509944752618962350632892540710372640383149198328312562980217104434880337288055817064\\r\\n', 'output': ['9444433333332219999999998888888888888777777777776666666655555555544444444433333333222222222221111111111111000000000100000\\r\\n4444333333322110000000001111111111111222222222223333333344444444455555555566666666777777777778888888888888999999999900000', '4444333333322109999999999888888888888877777777777666666665555555554444444443333333322222222222111111111111100000000010000\\r\\n4444333333322110000000000111111111111122222222222333333334444444445555555556666666677777777777888888888888899999999990000']}, {'input': '8679647744\\r\\n', 'output': ['9877766444\\r\\n9877764446']}, {'input': '220737406285\\r\\n', 'output': ['877654322200\\r\\n222345677800']}, {'input': '993522733475817\\r\\n', 'output': ['997533877542213\\r\\n995333122457787']}, {'input': '5057017252180797906185\\r\\n', 'output': ['7765551998877221100500\\r\\n7765551001122778899500']}, {'input': '12414711447744142772\\r\\n', 'output': ['11111222444444477777\\r\\n11111222444444477777', '77444444411111777222\\r\\n77444444411111222777', '77777444444422211111\\r\\n77777444444422211111']}, {'input': '3037225037514100860827276704\\r\\n', 'output': ['7887777665544332222113000000\\r\\n3112222334455667777887000000']}, {'input': '346762409573609367635944363650432097309\\r\\n', 'output': ['774499999776666666555444333333322000003\\r\\n744300000223333333444555666666677999997']}, {'input': '21504009080570645002760268009722803470954749000131\\r\\n', 'output': ['69999888777776655554444332222211100004000000000000\\r\\n40000111222223344445555667777788899996000000000000']}, {'input': '3311314413231141411421432122343321141133112122342341334443214\\r\\n', 'output': ['4444444444444433333333333333332222222222211111111111111111111\\r\\n4444444444444433333333333333332222222222211111111111111111111', '1111111111111111111122222222222333333333333333344444444444444\\r\\n1111111111111111111122222222222333333333333333344444444444444']}, {'input': '9070901003919040000887091134838800004472724709967020097067025050205000220352709096100405900207957128\\r\\n', 'output': ['7999999999999888888777777777766655555544444433322222222221111110000000000003000000000000000000000000\\r\\n3000000000000111111222222222233344444455555566677777777778888889999999999997000000000000000000000000']}, {'input': '41818138314831348134448848318148131818813388313344833114141141184383813143343448843131343384181384844431384114113314313144848133488818418384818848341344811441811141313448341888341118488811314338434488\\r\\n', 'output': ['88888888888888888888888888888888888888888888888888844444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111\\r\\n88888888888888888888888888888888888888888888888888844444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111', '11111111111111111111111111111111111111111111111111111133333333333333333333333333333333333333333333344444444444444444444444444444444444444444444444444888888888888888888888888888888888888888888888888888\\r\\n11111111111111111111111111111111111111111111111111111...', '44444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111888888888888888888888888888888888888888888888888888111111111111111111111111111111111111111111111111111\\r\\n44444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111888888888888888888888888888888888888888888888888888']}, {'input': '73552900025351606679224588872327647961330089042655630665222580520508672870102563487600132539752481214659858863022476410484266570139810532470714984092503934751571221521306943121997450187110428026190962582430971693370613087381790614697689671767000004095232276975952292053272119035138483846537407714434012224979098527763281110363860729062927455745190194649\\r\\n', 'output': ['66655222222221111111199999999999999999999999999999999988888888888888888888888888877777777777777777777777777777777777776666666666666666666666666666666555555555555555555555555555555544444444444444444444444444444443333333333333333333333333333333222222222222222222222222222222222222211111111111111111111111111100000000000000000000000000000000050000000000000\\r\\n666552222222211111111000000000000000000000000000000000111111111111111111111111111222222222222222222222222222222222222233333333333333333333333333333334444444...']}, {'input': '3660060360865606405406648718470765048005409506710925001850101061700007022407913434780234609002664580600302035550131007145010003815754853838580300966004029000300434981894159106340481587649046330570701648116012056320463003313141680800500509429100191307403765300801130020535489060555504004005803272823494700970010952879008030098004480465890588039380501581078422931611654908930340540303783403661632050700948101050151020160623940430284004280902060684751066629489507855752580027410505650019760020009138500203642800308...', 'output': ['8999999999999999999999999999999999888888888888888888888888888888888888888888888888888777777777777777777777777777777777666666666666666666666666666666666666666666666666666665555555555555555555555555555555555555555555555555555555554444444444444444444444444444444444444444444444444444444443333333333333333333333333333333333333333333333333333322222222222222222222222222222222211111111111111111111111111111111111111111111111111100000000000000000000000000000000020000000000000000000000000000000000000000000000000000000...']}, {'input': '3988405032201869838583516133943649897563464963199720203573666195109254972807095125585153139107836315540802254503122202208671231062969287785325745149827780975637820846694844717512181082423246460831153198676512327424647704185170864814344819230405434252307112870463387306341417126663194715993207482864102823774828380347931676663905538788367741598351252166769604140992179418820043419699163449596439979329298654494702555801641339987965927031928141345579024032222443566448480995335779507500358684011237604341216194860...', 'output}, {'input': '5562193853810918945620627929172131555837473643554362967763887812413927487628705169826152884386226149418373951049986250969308862515359891001338285242920050910490906828048000561263856034031835539717283086698037020184346364592477218030068494838985393388772969774556866175869082513319040937289891361048143148841837267534830052901494206187747905771299059141380597767985198813756458221849136120811572042106826621666519843756406853641666119992871613251441378811527654575794639431472815236597945545443592839760099142175...', 'output}, {'input': '1730422676082588834860375440897683748061653034160089035356410303853087273043400007064082808873506818021832173796672909286031070430706710420988411005000807994008004024283001700960690091562564065800969314020467274006854259128883092106143502490180340506154995307707013371796800069059205904006180070480509165819304195087071960902368005201049042530842923912727019572672086010287001109827122078050756623098907147400115030307257820452003056013088910107770590352130772036869022135230000406249627027600081343058909708407...', 'output}, {'input': '1188618183388611381111868863636138313333318818183316831361113811386318881168331361688618161613168636818383186336633113388318838136613388313111138111638188133138611181663863163386311813118638838866886113361631311686863836336863366813363683838881686613163833833813818131863311861368333636631363361331668363336363133666111611188181133381186813313311188138316336861381168838138611618113313831613331631133161186833631636661616388613133631666888311386383811818886633183161338681333381366386313631818363861111388386336...', 'output': ['3333333333333333333333333333333333333333111188888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666...', '8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666333333333333333333333333333333333...']}, {'input': '4243694432732244021095331595848137532367241195639191582163152600248271436184171538206044964067675106064159822875846011534297438582909683899088886549812421326048203391195680776887732457754143569028983164195293260537822023061273285507094731086855967279325960871356767018241344379707565856468765648033087664400397093527921657664579022705211823347324199918200113662278819911280201671779336001809547757878558876551737537928583698853638809689051510513192892880892879923602951533842587693618320930509403954665244464014...', 'output}, {'input': '5437214130838098132393123187069383986299021704931433096622499682915037838279737829812626065978576360754157333866084773073470536769353978446234788082062466105585127249713791721276273253638073234535447123880003542275055023902223874569552201863700202729293434430147174682302760783914011412039339697895841967107362265388874914846141521997037412954401235418335972353607055044874973461347888021255272429429744517830123078766552437060613565467908259410563840960055743267873948181932990399762986852911078878324107938917...', 'output': ['8888888888888888888888888886666666666666644444444444444444444444444444444444444444444449999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999998888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888777777777777777777...']}, {'input': '4944847984484499897477888998874784884474797788999888498989748984997797774478988749487787787944998784444748977844777488984798748984848479947894989998987487879949447848848898888479487898778984788988844874979497894779489449989797494497448984798494794487487499897944798844794498988947898787974874948989778778787978779999884994978894997949747744747987949784774894974798444899479997779484979789977489799448894478894447988489844888844979484789849479784487487984494474787484798944879774787979844984474989994948844498848...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '7688754930503622624249376302050721830065980218099156664541044701341628003496939103577693880283583449467297533469375121979331361424629165453875685841427085813980899970901793449283121463702841677303321796810682892574801165017961242552369171251649136915268463307740719648716991029731139504104601780245826323470355102044393062687794743810560411082474390672510942974815216433066730925915777989481449608904036597675354340429734413866576289385161415247796862427872213476834038054015404274700559772991390769430573604588...', 'output}, {'input': '6185037014707879384301592707009200430885687987529770162683115103088000085680865822274850080279809974072320607292351515828318654276346545329009080458123889570600021478058963049335300526437402130814087220633083010320092359393947423676191603547547874099010090263715163042641015092023212068194008006284379105933507405589730536098173006808291862017372694644277904949390565867842170703665006250410053210368067399451324395605280164900094231101070015087506700869427482073857397072913460003007919234200185280014042400788...', 'output': ['0999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...', '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '9965675082563929077799639762147786621291924398160624989369600320192031503878569896057485302667512360792029743474568614205998702183738012739853871916032407255123289056032335037954093166786819460498686316030169623643193583487898113843927174667792205951098904610616262292296460934603477941718344667867924960280476601880750505510840781238530728533026536005269229659829632892079936763214347808150429912908943447565716781168693866762946019658346001623995714859531084238467607308795481083815672444891116656361208045970...', 'output}, {'input': '9399099847230403397608550745456155491158833773727348957376326513008223271678368456249540347230059416611594526577303833136258789778891864775273632464015119183546285134805758447349338707895134660480829159525233548918538910475304570679493939658220667016376015440024476591414811967116176614232543688298600080829981632901950723372865951651419680198089502103871677882895994538059569016616295154550051663786468623844991852957332803481973612908697320851672235286727280608094255910265465949153761572434331191352427728064...', 'output}, {'input': '8677967897698796789869977698966986766668767667877789687666777969877868866999778969776786886687667966666886998976666676977779778769966697999998779777897676767686769769786987879887997776899999678878889896989896786778987668667889996989798796789766787977696988889666979897677886999868886976889987967696786768799888977677869978788766888766766967966876677799699997999866877688987986667899667687969687976867888778966777679767976979686899989799966976677796988888678867987797979987688869998677678689766966799667798866777...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '9169971377710854296307256878741743698904124875448188271438951731205465267096367879254423883111502855461268175261428259841277349539147022226480518218151857953676017222027859200956811168178482461083232476828773371751606247028165410567693365659977753752229668485142842096080257823565015585554974200804379221344492030870542627558563729072598095907764908903382419976933178549658032518931968565924190202313496291962510432634753675507873015068004621111683336737250908340689201372884809217551652679954580369879266423996...', 'output': ['6999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6402786117688907443629724676831861533380180662220326080501780992805834946738488906845349427183566546511120382042723532624475030689025499486454271766674879981315283125798751257569414757976374038693161455471776288448466249042222232425875808224403027744003704733955856398480964728375104262593788637777991997226599166814909071700171931478113019658198262741949705020331053974720755616818262843218961549805697021892940521399666343560867144526146538816131915538024059710094503485967378568082586947837283236875658146083...', 'output}, {'input': '2070584715958145931421943242877190736958188253532149113773257317774198852654268041861390688937915459566813326558023375873717875659623285221404908938186814771148690466010226989170254197736185741906851849474335844294393346935985196002604635838488633689366270270816465659353721056863151769188355135996953267698927714458440941550608272933473999407843409218797782406542610740951897694088643421505259321077956931953401390506157198305673803989694229999834828559332611372520954127118391729272331426793792414035235978292...', 'output}, {'input': '8830861889084051137643095774667654091986146869638648806288355834264695705797997204636152837277104079861551043640411014476918595066178670622283784697836347266655410475651455424263984398400662652738282678568304261152268090472444853374162421538590461473160139331604155280883012526754572269223633721300073239964775068679107842867167988931514560036166077584920827099541095153530279147684552577281385808157457305366848324391930843148351467387609038643560823897910018058987387476315080167238324082347653316905346938679...', 'output}, {'input': '8305353302042045132812713478589540940020097002309955880051290302345538886542504324100015141590915418707137647116069301978829579921838244596449533937725450722688600320224550552507030093558787751655874747352271037965806257211323568094024519907197752098052106271348046013549239460290417613713576981256525956964865075252410470149725070078486001965401206111081063737511835054192700776299150006487937152257808653940563700849221029782962584151954350056927572215246004027016540143697744783917148900624067210069508161787...', 'output': ['8999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6704583818391588725469181550354102907239957098358358841717401300766278881560400090038110916014289948657235584423606594158621824161523469830236380607965385255791396338932174225438170797034425037147862456636103346837327265294351641494623753674273621107344771242622310334986605935646991773638608552637622046669634226820615541845784212711291886281633637512336684846321599254977042239750805332860293274970565739990902560439745089146186062321750856522530810958656665834465619613523446131577586425662419972532205004271...', 'output': ['4444444444444444444444444444444444444444444444444444443333333333333333333333333333333333333333333333333333333333333333333333333333332222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111099999999999999999999999999999999999999999...', '9444444444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333333333333333333333333333333333333222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111199999999999999999999999999999999999999999...']}, {'input': '9689938698889663898863839636966699683986893699339386968338899966338869996936888869663833336868866886386686639839963333996866369633899638368886998389968998699366836388883663893393688389893963669968369396688338969698386338398836839988388898698688996366986968989699663989989698666833338689688393939988989389688683933989888969993363986386998399368636639933366866638686886936996998988399363868338933366966866996963866669896888669699698386869968968863868939688838383896969669866999369969399938388639699888886838393936...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6023899695120557896013140711187680503448138679874588624050077803801854865697769353263222770960826861606106727886113310607069728272963227255389496899919068931344113537068309946879921059042444576366749994436144274847702102456819164989911861327124734838196173853563309843214631874712516961632171049329502507717957033924841978867659693226643101620967990111518453074600938886866941984226547980772170089838147109088768785941748600078140887848218226465026331411736734765922485300427498987217333097493592537246554457873...', 'output}, {'input': '404\\r\\n', 'output': ['440\\r\\n440']}, {'input': '545\\r\\n', 'output': ['545\\r\\n455']}, {'inputoutput': ['5999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '1486913458965407214474383051348880508797108309397132594608042047940314727604051381139181936657952113296264075630972575614980513092531236791260521858939901778974029659858701463047070106689549279462422735787009718900006205995325189656713599230841667711463676680976775990350526357505751432136802865972492235528750512640736169514063847705640465671951212885515298612577866350659145039585877518710392780320811778565480073883045746578885361310463306158402059382132691444825799882582584615455011180820034013186375611788...', 'output}, {'input': '735529000253516066792245888723276479613300890426556306652225805205086728701025634876001325397524812146598588630224764104842665701398105324707149840925039347515712215213069431219974501871104280261909625824309716933706130873817906146976896717670000040952322...', 'output': ['666552222222211111111999999999999999999999999999999999888888888888888888888888888777777777777777777777777777777777777766666666666666666666666666666665555555555555555555555555555555444444444444444444444444444444433333333333333333333333333333332222222222222...']}, {'input': '366006036086560640540664871847076504800540950671092500185010106170000702240791343478023460900266458060030203555013100714501000381575485383858030096600402900030043498189415910634048158764904633057070164811601205632046300331314168080050050942910019130740376...', 'output': ['899999999999999999999999999999999988888888888888888888888888888888888888888888888888877777777777777777777777777777777766666666666666666666666666666666666666666666666666666555555555555555555555555555555555555555555555555555555555444444444444444444444444444...']}, {'input': '398840503220186983858351613394364989756346496319972020357366619510925497280709512558515313910783631554080225450312220220867123106296928778532574514982778097563782084669484471751218108242324646083115319867651232742464770418517086481434481923040543425230711...', 'output': ['999999999999964444444444444444442221111111111199999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777...']}, {'input': '556219385381091894562062792917213155583747364355436296776388781241392748762870516982615288438622614941837395104998625096930886251535989100133828524292005091049090682804800056126385603403183553971728308669803702018434636459247721803006849483898539338877296...', 'output': ['999999999999999999999997777777777777755555599999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777766...']}, {'input': '173042267608258883486037544089768374806165303416008903535641030385308727304340000706408280887350681802183217379667290928603107043070671042098841100500080799400800402428300170096069009156256406580096931402046727400685425912888309210614350249018034050615499...', 'output': ['799999999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666...']}, {'input': '118861818338861138111186886363613831333331881818331683136111381138631888116833136168861816161316863681838318633663311338831883813661338831311113811163818813313861118166386316338631181311863883886688611336163131168686383633686336681336368383888168661316383...', 'output': ['111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111...']}, {'input': '424369443273224402109533159584813753236724119563919158216315260024827143618417153820604496406767510606415982287584601153429743858290968389908888654981242132604820339119568077688773245775414356902898316419529326053782202306127328550709473108685596727932596...', 'output': ['998888888443322999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888877777777777777777777777777777777777777777...']}, {'input': '543721413083809813239312318706938398629902170493143309662249968291503783827973782981262606597857636075415733386608477307347053676935397844623478808206246610558512724971379172127627325363807323453544712388000354227505502390222387456955220186370020272929343...', 'output': ['888888888888888888888888888666666666666664444444444444444444444444444444444444444444444999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '494484798448449989747788899887478488447479778899988849898974898499779777447898874948778778794499878444474897784477748898479874898484847994789498999898748787994944784884889888847948789877898478898884487497949789477948944998979749449744898479849479448748749...', 'output': ['444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444...']}, {'input': '768875493050362262424937630205072183006598021809915666454104470134162800349693910357769388028358344946729753346937512197933136142462916545387568584142708581398089997090179344928312146370284167730332179681068289257480116501796124255236917125164913691526846...', 'output': ['777777777777777777777777777777777777777777777777777774444433333333333333333333333333333333333331111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '618503701470787938430159270700920043088568798752977016268311510308800008568086582227485008027980997407232060729235151582831865427634654532900908045812388957060002147805896304933530052643740213081408722063308301032009235939394742367619160354754787409901009...', 'output': ['099999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '996567508256392907779963976214778662129192439816062498936960032019203150387856989605748530266751236079202974347456861420599870218373801273985387191603240725512328905603233503795409316678681946049868631603016962364319358348789811384392717466779220595109890...', 'output': ['777777777777777777777776666666666666666666666666666666666666666666666666666666444411111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '939909984723040339760855074545615549115883377372734895737632651300822327167836845624954034723005941661159452657730383313625878977889186477527363246401511918354628513480575844734933870789513466048082915952523354891853891047530457067949393965822066701637601...', 'output': ['777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666644444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444111111111111111111111111111111111...']}, {'input': '867796789769879678986997769896698676666876766787778968766677796987786886699977896977678688668766796666688699897666667697777977876996669799999877977789767676768676976978698787988799777689999967887888989698989678677898766866788999698979879678976678797769698...', 'output': ['666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666...']}, {'input': '916997137771085429630725687874174369890412487544818827143895173120546526709636787925442388311150285546126817526142825984127734953914702222648051821815185795367601722202785920095681116817848246108323247682877337175160624702816541056769336565997775375222966...', 'output': ['699999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '640278611768890744362972467683186153338018066222032608050178099280583494673848890684534942718356654651112038204272353262447503068902549948645427176667487998131528312579875125756941475797637403869316145547177628844846624904222223242587580822440302774400370...', 'output': ['666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666444444444444444444444444444444444444444444444444444444444444444444444444442222222222222222222222222222222222...']}, {'input': '207058471595814593142194324287719073695818825353214911377325731777419885265426804186139068893791545956681332655802337587371787565962328522140490893818681477114869046601022698917025419773618574190685184947433584429439334693598519600260463583848863368936627...', 'output': ['666664444444444444444444444422222222222222222222222222111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '883086188908405113764309577466765409198614686963864880628835583426469570579799720463615283727710407986155104364041101447691859506617867062228378469783634726665541047565145542426398439840066265273828267856830426115226809047244485337416242153859046147316013...', 'output': ['999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666666666666666666666666666666666666666666666666666666...']}, {'input': '830535330204204513281271347858954094002009700230995588005129030234553888654250432410001514159091541870713764711606930197882957992183824459644953393772545072268860032022455055250703009355878775165587474735227103796580625721132356809402451990719775209805210...', 'output': ['899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '670458381839158872546918155035410290723995709835835884171740130076627888156040009003811091601428994865723558442360659415862182416152346983023638060796538525579139633893217422543817079703442503714786245663610334683732726529435164149462375367427362110734477...', 'output': ['444444444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333333333333333333333333333333333333222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222211...']}, {'input': '968993869888966389886383963696669968398689369933938696833889996633886999693688886966383333686886688638668663983996333399686636963389963836888699838996899869936683638888366389339368838989396366996836939668833896969838633839883683998838889869868899636698696...', 'output': ['333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333...']}, {'input': '602389969512055789601314071118768050344813867987458862405007780380185486569776935326322277096082686160610672788611331060706972827296322725538949689991906893134411353706830994687992105904244457636674999443614427484770210245681916498991186132712473483819617...', 'output': ['999999999999999999999988888888888888888888888888888888888888888888888888888888888888888884444444444444444444444444444444444444444444444444444444444444444444444444433333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333...']}, {'input': '909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909...', 'output': ['599999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '126254092095959027850416433832655426981078106611255074552648515499659121878087190358961591096171231715312122879634738062251247629492483043125748065235158236635181790420183641430917548189219521011748435487445986824532619160561716073648857875108255827252014...', 'output': ['888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888884444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444...']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, d[10];\n  string a, b, c, d1, d2;\n  cin >> a;\n  n = a.length();\n  d[0] = d[1] = d[2] = d[3] = d[4] = d[5] = d[6] = d[7] = d[8] = d[9] = 0;\n  for (int i = 0; i < n; i++) {\n    d[a[i] - '0']++;\n  }\n  c = a;\n  sort(c.begin(), c.end());\n  if (c[n - 1] == '0') {\n    for (int i = 1; i <= n; i++) {\n      cout << c[i];\n    }\n    cout << endl;\n    for (int i = 1; i <= n; i++) {\n      cout << c[i];\n    }\n    cout << endl;\n  } else if ((n == 1 && d[0]!= 1) || n == 2) {\n    for (int i = 1; i <= n; i++) {\n      cout << c[i];\n    }\n    cout << endl;\n    for (int i = 1; i <= n; i++) {\n      cout << c[i];\n    }\n    cout << endl;\n  } else {\n    for (int i = 1; i <= n; i++) {\n      cout << c[i];\n    }\n    cout << endl;\n    d[0]--;\n    for (int i = 1; i < n; i++) {\n      if (d[0]!= 0) {\n        cout << 0;\n        d[0]--;\n      } else {\n        cout << d[i + 1];\n      }\n    }\n    cout << endl;\n  }\n}\n"}
{"src_uid": "34b67958a37865e1ca0529bbf528dd9a", "id": 38, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '198\\r\\n', 'output': ['981\\r\\n819']}, {'input': '500\\r\\n', 'output': ['500\\r\\n500']}, {'input': '1061\\r\\n', 'output': ['1160\\r\\n1160', '6110\\r\\n6110']}, {'input': '1099\\r\\n', 'output': ['9901\\r\\n1099']}, {'input': '4877\\r\\n', 'output': ['4778\\r\\n4778', '8774\\r\\n8774']}, {'input': '787027\\r\\n', 'output': ['877720\\r\\n777280']}, {'input': '7665711\\r\\n', 'output': ['7766115\\r\\n7766115']}, {'input': '670042\\r\\n', 'output': ['672400\\r\\n427600']}, {'input': '87417\\r\\n', 'output': ['77481\\r\\n77418', '87741\\r\\n87741', '14778\\r\\n14778']}, {'input': '27183007\\r\\n', 'output': ['78721300\\r\\n31278700']}, {'input': '2603340571199714716025114079373828413509944752618962350632892540710372640383149198328312562980217104434880337288055817064\\r\\n', 'output': ['9444433333332219999999998888888888888777777777776666666655555555544444444433333333222222222221111111111111000000000100000\\r\\n4444333333322110000000001111111111111222222222223333333344444444455555555566666666777777777778888888888888999999999900000', '4444333333322109999999999888888888888877777777777666666665555555554444444443333333322222222222111111111111100000000010000\\r\\n4444333333322110000000000111111111111122222222222333333334444444445555555556666666677777777777888888888888899999999990000']}, {'input': '8679647744\\r\\n', 'output': ['9877766444\\r\\n9877764446']}, {'input': '220737406285\\r\\n', 'output': ['877654322200\\r\\n222345677800']}, {'input': '993522733475817\\r\\n', 'output': ['997533877542213\\r\\n995333122457787']}, {'input': '5057017252180797906185\\r\\n', 'output': ['7765551998877221100500\\r\\n7765551001122778899500']}, {'input': '12414711447744142772\\r\\n', 'output': ['11111222444444477777\\r\\n11111222444444477777', '77444444411111777222\\r\\n77444444411111222777', '77777444444422211111\\r\\n77777444444422211111']}, {'input': '3037225037514100860827276704\\r\\n', 'output': ['7887777665544332222113000000\\r\\n3112222334455667777887000000']}, {'input': '346762409573609367635944363650432097309\\r\\n', 'output': ['774499999776666666555444333333322000003\\r\\n744300000223333333444555666666677999997']}, {'input': '21504009080570645002760268009722803470954749000131\\r\\n', 'output': ['69999888777776655554444332222211100004000000000000\\r\\n40000111222223344445555667777788899996000000000000']}, {'input': '3311314413231141411421432122343321141133112122342341334443214\\r\\n', 'output': ['4444444444444433333333333333332222222222211111111111111111111\\r\\n4444444444444433333333333333332222222222211111111111111111111', '1111111111111111111122222222222333333333333333344444444444444\\r\\n1111111111111111111122222222222333333333333333344444444444444']}, {'input': '9070901003919040000887091134838800004472724709967020097067025050205000220352709096100405900207957128\\r\\n', 'output': ['7999999999999888888777777777766655555544444433322222222221111110000000000003000000000000000000000000\\r\\n3000000000000111111222222222233344444455555566677777777778888889999999999997000000000000000000000000']}, {'input': '41818138314831348134448848318148131818813388313344833114141141184383813143343448843131343384181384844431384114113314313144848133488818418384818848341344811441811141313448341888341118488811314338434488\\r\\n', 'output': ['88888888888888888888888888888888888888888888888888844444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111\\r\\n88888888888888888888888888888888888888888888888888844444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111', '11111111111111111111111111111111111111111111111111111133333333333333333333333333333333333333333333344444444444444444444444444444444444444444444444444888888888888888888888888888888888888888888888888888\\r\\n11111111111111111111111111111111111111111111111111111...', '44444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111888888888888888888888888888888888888888888888888888111111111111111111111111111111111111111111111111111\\r\\n44444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111888888888888888888888888888888888888888888888888888']}, {'input': '73552900025351606679224588872327647961330089042655630665222580520508672870102563487600132539752481214659858863022476410484266570139810532470714984092503934751571221521306943121997450187110428026190962582430971693370613087381790614697689671767000004095232276975952292053272119035138483846537407714434012224979098527763281110363860729062927455745190194649\\r\\n', 'output': ['66655222222221111111199999999999999999999999999999999988888888888888888888888888877777777777777777777777777777777777776666666666666666666666666666666555555555555555555555555555555544444444444444444444444444444443333333333333333333333333333333222222222222222222222222222222222222211111111111111111111111111100000000000000000000000000000000050000000000000\\r\\n666552222222211111111000000000000000000000000000000000111111111111111111111111111222222222222222222222222222222222222233333333333333333333333333333334444444...']}, {'input': '3660060360865606405406648718470765048005409506710925001850101061700007022407913434780234609002664580600302035550131007145010003815754853838580300966004029000300434981894159106340481587649046330570701648116012056320463003313141680800500509429100191307403765300801130020535489060555504004005803272823494700970010952879008030098004480465890588039380501581078422931611654908930340540303783403661632050700948101050151020160623940430284004280902060684751066629489507855752580027410505650019760020009138500203642800308...', 'output': ['8999999999999999999999999999999999888888888888888888888888888888888888888888888888888777777777777777777777777777777777666666666666666666666666666666666666666666666666666665555555555555555555555555555555555555555555555555555555554444444444444444444444444444444444444444444444444444444443333333333333333333333333333333333333333333333333333322222222222222222222222222222222211111111111111111111111111111111111111111111111111100000000000000000000000000000000020000000000000000000000000000000000000000000000000000000...']}, {'input': '3988405032201869838583516133943649897563464963199720203573666195109254972807095125585153139107836315540802254503122202208671231062969287785325745149827780975637820846694844717512181082423246460831153198676512327424647704185170864814344819230405434252307112870463387306341417126663194715993207482864102823774828380347931676663905538788367741598351252166769604140992179418820043419699163449596439979329298654494702555801641339987965927031928141345579024032222443566448480995335779507500358684011237604341216194860...', 'output}, {'input': '5562193853810918945620627929172131555837473643554362967763887812413927487628705169826152884386226149418373951049986250969308862515359891001338285242920050910490906828048000561263856034031835539717283086698037020184346364592477218030068494838985393388772969774556866175869082513319040937289891361048143148841837267534830052901494206187747905771299059141380597767985198813756458221849136120811572042106826621666519843756406853641666119992871613251441378811527654575794639431472815236597945545443592839760099142175...', 'output}, {'input': '1730422676082588834860375440897683748061653034160089035356410303853087273043400007064082808873506818021832173796672909286031070430706710420988411005000807994008004024283001700960690091562564065800969314020467274006854259128883092106143502490180340506154995307707013371796800069059205904006180070480509165819304195087071960902368005201049042530842923912727019572672086010287001109827122078050756623098907147400115030307257820452003056013088910107770590352130772036869022135230000406249627027600081343058909708407...', 'output}, {'input': '1188618183388611381111868863636138313333318818183316831361113811386318881168331361688618161613168636818383186336633113388318838136613388313111138111638188133138611181663863163386311813118638838866886113361631311686863836336863366813363683838881686613163833833813818131863311861368333636631363361331668363336363133666111611188181133381186813313311188138316336861381168838138611618113313831613331631133161186833631636661616388613133631666888311386383811818886633183161338681333381366386313631818363861111388386336...', 'output': ['3333333333333333333333333333333333333333111188888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666...', '8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666333333333333333333333333333333333...']}, {'input': '4243694432732244021095331595848137532367241195639191582163152600248271436184171538206044964067675106064159822875846011534297438582909683899088886549812421326048203391195680776887732457754143569028983164195293260537822023061273285507094731086855967279325960871356767018241344379707565856468765648033087664400397093527921657664579022705211823347324199918200113662278819911280201671779336001809547757878558876551737537928583698853638809689051510513192892880892879923602951533842587693618320930509403954665244464014...', 'output}, {'input': '5437214130838098132393123187069383986299021704931433096622499682915037838279737829812626065978576360754157333866084773073470536769353978446234788082062466105585127249713791721276273253638073234535447123880003542275055023902223874569552201863700202729293434430147174682302760783914011412039339697895841967107362265388874914846141521997037412954401235418335972353607055044874973461347888021255272429429744517830123078766552437060613565467908259410563840960055743267873948181932990399762986852911078878324107938917...', 'output}, {'input': '4944847984484499897477888998874784884474797788999888498989748984997797774478988749487787787944998784444748977844777488984798748984848479947894989998987487879949447848848898888479487898778984788988844874979497894779489449989797494497448984798494794487487499897944798844794498988947898787974874948989778778787978779999884994978894997949747744747987949784774894974798444899479997779484979789977489799448894478894447988489844888844979484789849479784487487984494474787484798944879774787979844984474989994948844498848...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '7688754930503622624249376302050721830065980218099156664541044701341628003496939103577693880283583449467297533469375121979331361424629165453875685841427085813980899970901793449283121463702841677303321796810682892574801165017961242552369171251649136915268463307740719648716991029731139504104601780245826323470355102044393062687794743810560411082474390672510942974815216433066730925915777989481449608904036597675354340429734413866576289385161415247796862427872213476834038054015404274700559772991390769430573604588...', 'output}, {'input': '6185037014707879384301592707009200430885687987529770162683115103088000085680865822274850080279809974072320607292351515828318654276346545329009080458123889570600021478058963049335300526437402130814087220633083010320092359393947423676191603547547874099010090263715163042641015092023212068194008006284379105933507405589730536098173006808291862017372694644277904949390565867842170703665006250410053210368067399451324395605280164900094231101070015087506700869427482073857397072913460003007919234200185280014042400788...', 'output': ['0999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...', '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '9965675082563929077799639762147786621291924398160624989369600320192031503878569896057485302667512360792029743474568614205998702183738012739853871916032407255123289056032335037954093166786819460498686316030169623643193583487898113843927174667792205951098904610616262292296460934603477941718344667867924960280476601880750505510840781238530728533026536005269229659829632892079936763214347808150429912908943447565716781168693866762946019658346001623995714859531084238467607308795481083815672444891116656361208045970...', 'output}, {'input': '9399099847230403397608550745456155491158833773727348957376326513008223271678368456249540347230059416611594526577303833136258789778891864775273632464015119183546285134805758447349338707895134660480829159525233548918538910475304570679493939658220667016376015440024476591414811967116176614232543688298600080829981632901950723372865951651419680198089502103871677882895994538059569016616295154550051663786468623844991852957332803481973612908697320851672235286727280608094255910265465949153761572434331191352427728064...', 'output}, {'input': '8677967897698796789869977698966986766668767667877789687666777969877868866999778969776786886687667966666886998976666676977779778769966697999998779777897676767686769769786987879887997776899999678878889896989896786778987668667889996989798796789766787977696988889666979897677886999868886976889987967696786768799888977677869978788766888766766967966876677799699997999866877688987986667899667687969687976867888778966777679767976979686899989799966976677796988888678867987797979987688869998677678689766966799667798866777...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '9169971377710854296307256878741743698904124875448188271438951731205465267096367879254423883111502855461268175261428259841277349539147022226480518218151857953676017222027859200956811168178482461083232476828773371751606247028165410567693365659977753752229668485142842096080257823565015585554974200804379221344492030870542627558563729072598095907764908903382419976933178549658032518931968565924190202313496291962510432634753675507873015068004621111683336737250908340689201372884809217551652679954580369879266423996...', 'output': ['6999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6402786117688907443629724676831861533380180662220326080501780992805834946738488906845349427183566546511120382042723532624475030689025499486454271766674879981315283125798751257569414757976374038693161455471776288448466249042222232425875808224403027744003704733955856398480964728375104262593788637777991997226599166814909071700171931478113019658198262741949705020331053974720755616818262843218961549805697021892940521399666343560867144526146538816131915538024059710094503485967378568082586947837283236875658146083...', 'output}, {'input': '2070584715958145931421943242877190736958188253532149113773257317774198852654268041861390688937915459566813326558023375873717875659623285221404908938186814771148690466010226989170254197736185741906851849474335844294393346935985196002604635838488633689366270270816465659353721056863151769188355135996953267698927714458440941550608272933473999407843409218797782406542610740951897694088643421505259321077956931953401390506157198305673803989694229999834828559332611372520954127118391729272331426793792414035235978292...', 'output}, {'input': '8830861889084051137643095774667654091986146869638648806288355834264695705797997204636152837277104079861551043640411014476918595066178670622283784697836347266655410475651455424263984398400662652738282678568304261152268090472444853374162421538590461473160139331604155280883012526754572269223633721300073239964775068679107842867167988931514560036166077584920827099541095153530279147684552577281385808157457305366848324391930843148351467387609038643560823897910018058987387476315080167238324082347653316905346938679...', 'output}, {'input': '8305353302042045132812713478589540940020097002309955880051290302345538886542504324100015141590915418707137647116069301978829579921838244596449533937725450722688600320224550552507030093558787751655874747352271037965806257211323568094024519907197752098052106271348046013549239460290417613713576981256525956964865075252410470149725070078486001965401206111081063737511835054192700776299150006487937152257808653940563700849221029782962584151954350056927572215246004027016540143697744783917148900624067210069508161787...', 'output': ['8999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6704583818391588725469181550354102907239957098358358841717401300766278881560400090038110916014289948657235584423606594158621824161523469830236380607965385255791396338932174225438170797034425037147862456636103346837327265294351641494623753674273621107344771242622310334986605935646991773638608552637622046669634226820615541845784212711291886281633637512336684846321599254977042239750805332860293274970565739990902560439745089146186062321750856522530810958656665834465619613523446131577586425662419972532205004271...', 'output': ['4444444444444444444444444444444444444444444444444444443333333333333333333333333333333333333333333333333333333333333333333333333333332222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111099999999999999999999999999999999999999999...', '9444444444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333333333333333333333333333333333333222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111199999999999999999999999999999999999999999...']}, {'input': '9689938698889663898863839636966699683986893699339386968338899966338869996936888869663833336868866886386686639839963333996866369633899638368886998389968998699366836388883663893393688389893963669968369396688338969698386338398836839988388898698688996366986968989699663989989698666833338689688393939988989389688683933989888969993363986386998399368636639933366866638686886936996998988399363868338933366966866996963866669896888669699698386869968968863868939688838383896969669866999369969399938388639699888886838393936...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6023899695120557896013140711187680503448138679874588624050077803801854865697769353263222770960826861606106727886113310607069728272963227255389496899919068931344113537068309946879921059042444576366749994436144274847702102456819164989911861327124734838196173853563309843214631874712516961632171049329502507717957033924841978867659693226643101620967990111518453074600938886866941984226547980772170089838147109088768785941748600078140887848218226465026331411736734765922485300427498987217333097493592537246554457873...', 'output}, {'input': '404\\r\\n', 'output': ['440\\r\\n440']}, {'input': '545\\r\\n', 'output': ['545\\r\\n455']}, {'inputoutput': ['5999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '1486913458965407214474383051348880508797108309397132594608042047940314727604051381139181936657952113296264075630972575614980513092531236791260521858939901778974029659858701463047070106689549279462422735787009718900006205995325189656713599230841667711463676680976775990350526357505751432136802865972492235528750512640736169514063847705640465671951212885515298612577866350659145039585877518710392780320811778565480073883045746578885361310463306158402059382132691444825799882582584615455011180820034013186375611788...', 'output}, {'input': '735529000253516066792245888723276479613300890426556306652225805205086728701025634876001325397524812146598588630224764104842665701398105324707149840925039347515712215213069431219974501871104280261909625824309716933706130873817906146976896717670000040952322...', 'output': ['666552222222211111111999999999999999999999999999999999888888888888888888888888888777777777777777777777777777777777777766666666666666666666666666666665555555555555555555555555555555444444444444444444444444444444433333333333333333333333333333332222222222222...']}, {'input': '366006036086560640540664871847076504800540950671092500185010106170000702240791343478023460900266458060030203555013100714501000381575485383858030096600402900030043498189415910634048158764904633057070164811601205632046300331314168080050050942910019130740376...', 'output': ['899999999999999999999999999999999988888888888888888888888888888888888888888888888888877777777777777777777777777777777766666666666666666666666666666666666666666666666666666555555555555555555555555555555555555555555555555555555555444444444444444444444444444...']}, {'input': '398840503220186983858351613394364989756346496319972020357366619510925497280709512558515313910783631554080225450312220220867123106296928778532574514982778097563782084669484471751218108242324646083115319867651232742464770418517086481434481923040543425230711...', 'output': ['999999999999964444444444444444442221111111111199999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777...']}, {'input': '556219385381091894562062792917213155583747364355436296776388781241392748762870516982615288438622614941837395104998625096930886251535989100133828524292005091049090682804800056126385603403183553971728308669803702018434636459247721803006849483898539338877296...', 'output': ['999999999999999999999997777777777777755555599999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777766...']}, {'input': '173042267608258883486037544089768374806165303416008903535641030385308727304340000706408280887350681802183217379667290928603107043070671042098841100500080799400800402428300170096069009156256406580096931402046727400685425912888309210614350249018034050615499...', 'output': ['799999999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666...']}, {'input': '118861818338861138111186886363613831333331881818331683136111381138631888116833136168861816161316863681838318633663311338831883813661338831311113811163818813313861118166386316338631181311863883886688611336163131168686383633686336681336368383888168661316383...', 'output': ['111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111...']}, {'input': '424369443273224402109533159584813753236724119563919158216315260024827143618417153820604496406767510606415982287584601153429743858290968389908888654981242132604820339119568077688773245775414356902898316419529326053782202306127328550709473108685596727932596...', 'output': ['998888888443322999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888877777777777777777777777777777777777777777...']}, {'input': '543721413083809813239312318706938398629902170493143309662249968291503783827973782981262606597857636075415733386608477307347053676935397844623478808206246610558512724971379172127627325363807323453544712388000354227505502390222387456955220186370020272929343...', 'output': ['888888888888888888888888888666666666666664444444444444444444444444444444444444444444444999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '494484798448449989747788899887478488447479778899988849898974898499779777447898874948778778794499878444474897784477748898479874898484847994789498999898748787994944784884889888847948789877898478898884487497949789477948944998979749449744898479849479448748749...', 'output': ['444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444...']}, {'input': '768875493050362262424937630205072183006598021809915666454104470134162800349693910357769388028358344946729753346937512197933136142462916545387568584142708581398089997090179344928312146370284167730332179681068289257480116501796124255236917125164913691526846...', 'output': ['777777777777777777777777777777777777777777777777777774444433333333333333333333333333333333333331111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '618503701470787938430159270700920043088568798752977016268311510308800008568086582227485008027980997407232060729235151582831865427634654532900908045812388957060002147805896304933530052643740213081408722063308301032009235939394742367619160354754787409901009...', 'output': ['099999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '996567508256392907779963976214778662129192439816062498936960032019203150387856989605748530266751236079202974347456861420599870218373801273985387191603240725512328905603233503795409316678681946049868631603016962364319358348789811384392717466779220595109890...', 'output': ['777777777777777777777776666666666666666666666666666666666666666666666666666666444411111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '939909984723040339760855074545615549115883377372734895737632651300822327167836845624954034723005941661159452657730383313625878977889186477527363246401511918354628513480575844734933870789513466048082915952523354891853891047530457067949393965822066701637601...', 'output': ['777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666644444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444111111111111111111111111111111111...']}, {'input': '867796789769879678986997769896698676666876766787778968766677796987786886699977896977678688668766796666688699897666667697777977876996669799999877977789767676768676976978698787988799777689999967887888989698989678677898766866788999698979879678976678797769698...', 'output': ['666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666...']}, {'input': '916997137771085429630725687874174369890412487544818827143895173120546526709636787925442388311150285546126817526142825984127734953914702222648051821815185795367601722202785920095681116817848246108323247682877337175160624702816541056769336565997775375222966...', 'output': ['699999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '640278611768890744362972467683186153338018066222032608050178099280583494673848890684534942718356654651112038204272353262447503068902549948645427176667487998131528312579875125756941475797637403869316145547177628844846624904222223242587580822440302774400370...', 'output': ['666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666444444444444444444444444444444444444444444444444444444444444444444444444442222222222222222222222222222222222...']}, {'input': '207058471595814593142194324287719073695818825353214911377325731777419885265426804186139068893791545956681332655802337587371787565962328522140490893818681477114869046601022698917025419773618574190685184947433584429439334693598519600260463583848863368936627...', 'output': ['666664444444444444444444444422222222222222222222222222111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '883086188908405113764309577466765409198614686963864880628835583426469570579799720463615283727710407986155104364041101447691859506617867062228378469783634726665541047565145542426398439840066265273828267856830426115226809047244485337416242153859046147316013...', 'output': ['999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666666666666666666666666666666666666666666666666666666...']}, {'input': '830535330204204513281271347858954094002009700230995588005129030234553888654250432410001514159091541870713764711606930197882957992183824459644953393772545072268860032022455055250703009355878775165587474735227103796580625721132356809402451990719775209805210...', 'output': ['899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '670458381839158872546918155035410290723995709835835884171740130076627888156040009003811091601428994865723558442360659415862182416152346983023638060796538525579139633893217422543817079703442503714786245663610334683732726529435164149462375367427362110734477...', 'output': ['444444444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333333333333333333333333333333333333222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222211...']}, {'input': '968993869888966389886383963696669968398689369933938696833889996633886999693688886966383333686886688638668663983996333399686636963389963836888699838996899869936683638888366389339368838989396366996836939668833896969838633839883683998838889869868899636698696...', 'output': ['333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333...']}, {'input': '602389969512055789601314071118768050344813867987458862405007780380185486569776935326322277096082686160610672788611331060706972827296322725538949689991906893134411353706830994687992105904244457636674999443614427484770210245681916498991186132712473483819617...', 'output': ['999999999999999999999988888888888888888888888888888888888888888888888888888888888888888884444444444444444444444444444444444444444444444444444444444444444444444444433333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333...']}, {'input': '909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909...', 'output': ['599999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '126254092095959027850416433832655426981078106611255074552648515499659121878087190358961591096171231715312122879634738062251247629492483043125748065235158236635181790420183641430917548189219521011748435487445986824532619160561716073648857875108255827252014...', 'output': ['888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888884444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444...']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string n;\n  cin >> n;\n  int d = 0;\n  for (char c : n) {\n    d += (c - '0');\n  }\n  if (d % 2 == 0) {\n    string out1, out2;\n    out1 += n;\n    out2 += n;\n    sort(out1.begin(), out1.end(), greater<int>());\n    sort(out2.begin(), out2.end(), greater<int>());\n    cout << out1 << endl << out2 << endl;\n    return 0;\n  }\n  for (int i = 1; i < n.size(); i++) {\n    if (n[i] < n[i - 1]) {\n      reverse(n.begin(), n.end());\n      break;\n    }\n  }\n  cout << n << endl << n << endl;\n  return 0;\n}\n"}
{"src_uid": "34b67958a37865e1ca0529bbf528dd9a", "id": 38, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '198\\r\\n', 'output': ['981\\r\\n819']}, {'input': '500\\r\\n', 'output': ['500\\r\\n500']}, {'input': '1061\\r\\n', 'output': ['1160\\r\\n1160', '6110\\r\\n6110']}, {'input': '1099\\r\\n', 'output': ['9901\\r\\n1099']}, {'input': '4877\\r\\n', 'output': ['4778\\r\\n4778', '8774\\r\\n8774']}, {'input': '787027\\r\\n', 'output': ['877720\\r\\n777280']}, {'input': '7665711\\r\\n', 'output': ['7766115\\r\\n7766115']}, {'input': '670042\\r\\n', 'output': ['672400\\r\\n427600']}, {'input': '87417\\r\\n', 'output': ['77481\\r\\n77418', '87741\\r\\n87741', '14778\\r\\n14778']}, {'input': '27183007\\r\\n', 'output': ['78721300\\r\\n31278700']}, {'input': '2603340571199714716025114079373828413509944752618962350632892540710372640383149198328312562980217104434880337288055817064\\r\\n', 'output': ['9444433333332219999999998888888888888777777777776666666655555555544444444433333333222222222221111111111111000000000100000\\r\\n4444333333322110000000001111111111111222222222223333333344444444455555555566666666777777777778888888888888999999999900000', '4444333333322109999999999888888888888877777777777666666665555555554444444443333333322222222222111111111111100000000010000\\r\\n4444333333322110000000000111111111111122222222222333333334444444445555555556666666677777777777888888888888899999999990000']}, {'input': '8679647744\\r\\n', 'output': ['9877766444\\r\\n9877764446']}, {'input': '220737406285\\r\\n', 'output': ['877654322200\\r\\n222345677800']}, {'input': '993522733475817\\r\\n', 'output': ['997533877542213\\r\\n995333122457787']}, {'input': '5057017252180797906185\\r\\n', 'output': ['7765551998877221100500\\r\\n7765551001122778899500']}, {'input': '12414711447744142772\\r\\n', 'output': ['11111222444444477777\\r\\n11111222444444477777', '77444444411111777222\\r\\n77444444411111222777', '77777444444422211111\\r\\n77777444444422211111']}, {'input': '3037225037514100860827276704\\r\\n', 'output': ['7887777665544332222113000000\\r\\n3112222334455667777887000000']}, {'input': '346762409573609367635944363650432097309\\r\\n', 'output': ['774499999776666666555444333333322000003\\r\\n744300000223333333444555666666677999997']}, {'input': '21504009080570645002760268009722803470954749000131\\r\\n', 'output': ['69999888777776655554444332222211100004000000000000\\r\\n40000111222223344445555667777788899996000000000000']}, {'input': '3311314413231141411421432122343321141133112122342341334443214\\r\\n', 'output': ['4444444444444433333333333333332222222222211111111111111111111\\r\\n4444444444444433333333333333332222222222211111111111111111111', '1111111111111111111122222222222333333333333333344444444444444\\r\\n1111111111111111111122222222222333333333333333344444444444444']}, {'input': '9070901003919040000887091134838800004472724709967020097067025050205000220352709096100405900207957128\\r\\n', 'output': ['7999999999999888888777777777766655555544444433322222222221111110000000000003000000000000000000000000\\r\\n3000000000000111111222222222233344444455555566677777777778888889999999999997000000000000000000000000']}, {'input': '41818138314831348134448848318148131818813388313344833114141141184383813143343448843131343384181384844431384114113314313144848133488818418384818848341344811441811141313448341888341118488811314338434488\\r\\n', 'output': ['88888888888888888888888888888888888888888888888888844444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111\\r\\n88888888888888888888888888888888888888888888888888844444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111', '11111111111111111111111111111111111111111111111111111133333333333333333333333333333333333333333333344444444444444444444444444444444444444444444444444888888888888888888888888888888888888888888888888888\\r\\n11111111111111111111111111111111111111111111111111111...', '44444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111888888888888888888888888888888888888888888888888888111111111111111111111111111111111111111111111111111\\r\\n44444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111888888888888888888888888888888888888888888888888888']}, {'input': '73552900025351606679224588872327647961330089042655630665222580520508672870102563487600132539752481214659858863022476410484266570139810532470714984092503934751571221521306943121997450187110428026190962582430971693370613087381790614697689671767000004095232276975952292053272119035138483846537407714434012224979098527763281110363860729062927455745190194649\\r\\n', 'output': ['66655222222221111111199999999999999999999999999999999988888888888888888888888888877777777777777777777777777777777777776666666666666666666666666666666555555555555555555555555555555544444444444444444444444444444443333333333333333333333333333333222222222222222222222222222222222222211111111111111111111111111100000000000000000000000000000000050000000000000\\r\\n666552222222211111111000000000000000000000000000000000111111111111111111111111111222222222222222222222222222222222222233333333333333333333333333333334444444...']}, {'input': '3660060360865606405406648718470765048005409506710925001850101061700007022407913434780234609002664580600302035550131007145010003815754853838580300966004029000300434981894159106340481587649046330570701648116012056320463003313141680800500509429100191307403765300801130020535489060555504004005803272823494700970010952879008030098004480465890588039380501581078422931611654908930340540303783403661632050700948101050151020160623940430284004280902060684751066629489507855752580027410505650019760020009138500203642800308...', 'output': ['8999999999999999999999999999999999888888888888888888888888888888888888888888888888888777777777777777777777777777777777666666666666666666666666666666666666666666666666666665555555555555555555555555555555555555555555555555555555554444444444444444444444444444444444444444444444444444444443333333333333333333333333333333333333333333333333333322222222222222222222222222222222211111111111111111111111111111111111111111111111111100000000000000000000000000000000020000000000000000000000000000000000000000000000000000000...']}, {'input': '3988405032201869838583516133943649897563464963199720203573666195109254972807095125585153139107836315540802254503122202208671231062969287785325745149827780975637820846694844717512181082423246460831153198676512327424647704185170864814344819230405434252307112870463387306341417126663194715993207482864102823774828380347931676663905538788367741598351252166769604140992179418820043419699163449596439979329298654494702555801641339987965927031928141345579024032222443566448480995335779507500358684011237604341216194860...', 'output}, {'input': '5562193853810918945620627929172131555837473643554362967763887812413927487628705169826152884386226149418373951049986250969308862515359891001338285242920050910490906828048000561263856034031835539717283086698037020184346364592477218030068494838985393388772969774556866175869082513319040937289891361048143148841837267534830052901494206187747905771299059141380597767985198813756458221849136120811572042106826621666519843756406853641666119992871613251441378811527654575794639431472815236597945545443592839760099142175...', 'output}, {'input': '1730422676082588834860375440897683748061653034160089035356410303853087273043400007064082808873506818021832173796672909286031070430706710420988411005000807994008004024283001700960690091562564065800969314020467274006854259128883092106143502490180340506154995307707013371796800069059205904006180070480509165819304195087071960902368005201049042530842923912727019572672086010287001109827122078050756623098907147400115030307257820452003056013088910107770590352130772036869022135230000406249627027600081343058909708407...', 'output}, {'input': '1188618183388611381111868863636138313333318818183316831361113811386318881168331361688618161613168636818383186336633113388318838136613388313111138111638188133138611181663863163386311813118638838866886113361631311686863836336863366813363683838881686613163833833813818131863311861368333636631363361331668363336363133666111611188181133381186813313311188138316336861381168838138611618113313831613331631133161186833631636661616388613133631666888311386383811818886633183161338681333381366386313631818363861111388386336...', 'output': ['3333333333333333333333333333333333333333111188888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666...', '8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666333333333333333333333333333333333...']}, {'input': '4243694432732244021095331595848137532367241195639191582163152600248271436184171538206044964067675106064159822875846011534297438582909683899088886549812421326048203391195680776887732457754143569028983164195293260537822023061273285507094731086855967279325960871356767018241344379707565856468765648033087664400397093527921657664579022705211823347324199918200113662278819911280201671779336001809547757878558876551737537928583698853638809689051510513192892880892879923602951533842587693618320930509403954665244464014...', 'output}, {'input': '5437214130838098132393123187069383986299021704931433096622499682915037838279737829812626065978576360754157333866084773073470536769353978446234788082062466105585127249713791721276273253638073234535447123880003542275055023902223874569552201863700202729293434430147174682302760783914011412039339697895841967107362265388874914846141521997037412954401235418335972353607055044874973461347888021255272429429744517830123078766552437060613565467908259410563840960055743267873948181932990399762986852911078878324107938917...', 'output}, {'input': '4944847984484499897477888998874784884474797788999888498989748984997797774478988749487787787944998784444748977844777488984798748984848479947894989998987487879949447848848898888479487898778984788988844874979497894779489449989797494497448984798494794487487499897944798844794498988947898787974874948989778778787978779999884994978894997949747744747987949784774894974798444899479997779484979789977489799448894478894447988489844888844979484789849479784487487984494474787484798944879774787979844984474989994948844498848...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '7688754930503622624249376302050721830065980218099156664541044701341628003496939103577693880283583449467297533469375121979331361424629165453875685841427085813980899970901793449283121463702841677303321796810682892574801165017961242552369171251649136915268463307740719648716991029731139504104601780245826323470355102044393062687794743810560411082474390672510942974815216433066730925915777989481449608904036597675354340429734413866576289385161415247796862427872213476834038054015404274700559772991390769430573604588...', 'output}, {'input': '6185037014707879384301592707009200430885687987529770162683115103088000085680865822274850080279809974072320607292351515828318654276346545329009080458123889570600021478058963049335300526437402130814087220633083010320092359393947423676191603547547874099010090263715163042641015092023212068194008006284379105933507405589730536098173006808291862017372694644277904949390565867842170703665006250410053210368067399451324395605280164900094231101070015087506700869427482073857397072913460003007919234200185280014042400788...', 'output': ['0999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...', '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '9965675082563929077799639762147786621291924398160624989369600320192031503878569896057485302667512360792029743474568614205998702183738012739853871916032407255123289056032335037954093166786819460498686316030169623643193583487898113843927174667792205951098904610616262292296460934603477941718344667867924960280476601880750505510840781238530728533026536005269229659829632892079936763214347808150429912908943447565716781168693866762946019658346001623995714859531084238467607308795481083815672444891116656361208045970...', 'output}, {'input': '9399099847230403397608550745456155491158833773727348957376326513008223271678368456249540347230059416611594526577303833136258789778891864775273632464015119183546285134805758447349338707895134660480829159525233548918538910475304570679493939658220667016376015440024476591414811967116176614232543688298600080829981632901950723372865951651419680198089502103871677882895994538059569016616295154550051663786468623844991852957332803481973612908697320851672235286727280608094255910265465949153761572434331191352427728064...', 'output}, {'input': '8677967897698796789869977698966986766668767667877789687666777969877868866999778969776786886687667966666886998976666676977779778769966697999998779777897676767686769769786987879887997776899999678878889896989896786778987668667889996989798796789766787977696988889666979897677886999868886976889987967696786768799888977677869978788766888766766967966876677799699997999866877688987986667899667687969687976867888778966777679767976979686899989799966976677796988888678867987797979987688869998677678689766966799667798866777...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '9169971377710854296307256878741743698904124875448188271438951731205465267096367879254423883111502855461268175261428259841277349539147022226480518218151857953676017222027859200956811168178482461083232476828773371751606247028165410567693365659977753752229668485142842096080257823565015585554974200804379221344492030870542627558563729072598095907764908903382419976933178549658032518931968565924190202313496291962510432634753675507873015068004621111683336737250908340689201372884809217551652679954580369879266423996...', 'output': ['6999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6402786117688907443629724676831861533380180662220326080501780992805834946738488906845349427183566546511120382042723532624475030689025499486454271766674879981315283125798751257569414757976374038693161455471776288448466249042222232425875808224403027744003704733955856398480964728375104262593788637777991997226599166814909071700171931478113019658198262741949705020331053974720755616818262843218961549805697021892940521399666343560867144526146538816131915538024059710094503485967378568082586947837283236875658146083...', 'output}, {'input': '2070584715958145931421943242877190736958188253532149113773257317774198852654268041861390688937915459566813326558023375873717875659623285221404908938186814771148690466010226989170254197736185741906851849474335844294393346935985196002604635838488633689366270270816465659353721056863151769188355135996953267698927714458440941550608272933473999407843409218797782406542610740951897694088643421505259321077956931953401390506157198305673803989694229999834828559332611372520954127118391729272331426793792414035235978292...', 'output}, {'input': '8830861889084051137643095774667654091986146869638648806288355834264695705797997204636152837277104079861551043640411014476918595066178670622283784697836347266655410475651455424263984398400662652738282678568304261152268090472444853374162421538590461473160139331604155280883012526754572269223633721300073239964775068679107842867167988931514560036166077584920827099541095153530279147684552577281385808157457305366848324391930843148351467387609038643560823897910018058987387476315080167238324082347653316905346938679...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999997777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777666666666666666666666666666666666666666666666666666666666666666666666666666444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444411199999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '8305353302042045132812713478589540940020097002309955880051290302345538886542504324100015141590915418707137647116069301978829579921838244596449533937725450722688600320224550552507030093558787751655874747352271037965806257211323568094024519907197752098052106271348046013549239460290417613713576981256525956964865075252410470149725070078486001965401206111081063737511835054192700776299150006487937152257808653940563700849221029782962584151954350056927572215246004027016540143697744783917148900624067210069508161787...', 'output': ['8999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6704583818391588725469181550354102907239957098358358841717401300766278881560400090038110916014289948657235584423606594158621824161523469830236380607965385255791396338932174225438170797034425037147862456636103346837327265294351641494623753674273621107344771242622310334986605935646991773638608552637622046669634226820615541845784212711291886281633637512336684846321599254977042239750805332860293274970565739990902560439745089146186062321750856522530810958656665834465619613523446131577586425662419972532205004271...', 'output': ['4444444444444444444444444444444444444444444444444444443333333333333333333333333333333333333333333333333333333333333333333333333333332222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111099999999999999999999999999999999999999999...', '9444444444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333333333333333333333333333333333333222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111199999999999999999999999999999999999999999...']}, {'input': '9689938698889663898863839636966699683986893699339386968338899966338869996936888869663833336868866886386686639839963333996866369633899638368886998389968998699366836388883663893393688389893963669968369396688338969698386338398836839988388898698688996366986968989699663989989698666833338689688393939988989389688683933989888969993363986386998399368636639933366866638686886936996998988399363868338933366966866996963866669896888669699698386869968968863868939688838383896969669866999369969399938388639699888886838393936...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6023899695120557896013140711187680503448138679874588624050077803801854865697769353263222770960826861606106727886113310607069728272963227255389496899919068931344113537068309946879921059042444576366749994436144274847702102456819164989911861327124734838196173853563309843214631874712516961632171049329502507717957033924841978867659693226643101620967990111518453074600938886866941984226547980772170089838147109088768785941748600078140887848218226465026331411736734765922485300427498987217333097493592537246554457873...', 'output}, {'input': '404\\r\\n', 'output': ['440\\r\\n440']}, {'input': '545\\r\\n', 'output': ['545\\r\\n455']}, {'inputoutput': ['5999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '1486913458965407214474383051348880508797108309397132594608042047940314727604051381139181936657952113296264075630972575614980513092531236791260521858939901778974029659858701463047070106689549279462422735787009718900006205995325189656713599230841667711463676680976775990350526357505751432136802865972492235528750512640736169514063847705640465671951212885515298612577866350659145039585877518710392780320811778565480073883045746578885361310463306158402059382132691444825799882582584615455011180820034013186375611788...', 'output': ['9999999888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888777777777777777777777777777777777766666666666666666666666666666666666666664444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444449999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '735529000253516066792245888723276479613300890426556306652225805205086728701025634876001325397524812146598588630224764104842665701398105324707149840925039347515712215213069431219974501871104280261909625824309716933706130873817906146976896717670000040952322...', 'output': ['666552222222211111111999999999999999999999999999999999888888888888888888888888888777777777777777777777777777777777777766666666666666666666666666666665555555555555555555555555555555444444444444444444444444444444433333333333333333333333333333332222222222222...']}, {'input': '366006036086560640540664871847076504800540950671092500185010106170000702240791343478023460900266458060030203555013100714501000381575485383858030096600402900030043498189415910634048158764904633057070164811601205632046300331314168080050050942910019130740376...', 'output': ['899999999999999999999999999999999988888888888888888888888888888888888888888888888888877777777777777777777777777777777766666666666666666666666666666666666666666666666666666555555555555555555555555555555555555555555555555555555555444444444444444444444444444...']}, {'input': '398840503220186983858351613394364989756346496319972020357366619510925497280709512558515313910783631554080225450312220220867123106296928778532574514982778097563782084669484471751218108242324646083115319867651232742464770418517086481434481923040543425230711...', 'output': ['999999999999964444444444444444442221111111111199999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777...']}, {'input': '556219385381091894562062792917213155583747364355436296776388781241392748762870516982615288438622614941837395104998625096930886251535989100133828524292005091049090682804800056126385603403183553971728308669803702018434636459247721803006849483898539338877296...', 'output': ['999999999999999999999997777777777777755555599999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777766...']}, {'input': '173042267608258883486037544089768374806165303416008903535641030385308727304340000706408280887350681802183217379667290928603107043070671042098841100500080799400800402428300170096069009156256406580096931402046727400685425912888309210614350249018034050615499...', 'output': ['799999999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666...']}, {'input': '118861818338861138111186886363613831333331881818331683136111381138631888116833136168861816161316863681838318633663311338831883813661338831311113811163818813313861118166386316338631181311863883886688611336163131168686383633686336681336368383888168661316383...', 'output': ['111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111...']}, {'input': '424369443273224402109533159584813753236724119563919158216315260024827143618417153820604496406767510606415982287584601153429743858290968389908888654981242132604820339119568077688773245775414356902898316419529326053782202306127328550709473108685596727932596...', 'output': ['998888888443322999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888877777777777777777777777777777777777777777...']}, {'input': '543721413083809813239312318706938398629902170493143309662249968291503783827973782981262606597857636075415733386608477307347053676935397844623478808206246610558512724971379172127627325363807323453544712388000354227505502390222387456955220186370020272929343...', 'output': ['888888888888888888888888888666666666666664444444444444444444444444444444444444444444444999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '494484798448449989747788899887478488447479778899988849898974898499779777447898874948778778794499878444474897784477748898479874898484847994789498999898748787994944784884889888847948789877898478898884487497949789477948944998979749449744898479849479448748749...', 'output': ['444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444...']}, {'input': '768875493050362262424937630205072183006598021809915666454104470134162800349693910357769388028358344946729753346937512197933136142462916545387568584142708581398089997090179344928312146370284167730332179681068289257480116501796124255236917125164913691526846...', 'output': ['777777777777777777777777777777777777777777777777777774444433333333333333333333333333333333333331111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '618503701470787938430159270700920043088568798752977016268311510308800008568086582227485008027980997407232060729235151582831865427634654532900908045812388957060002147805896304933530052643740213081408722063308301032009235939394742367619160354754787409901009...', 'output': ['099999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '996567508256392907779963976214778662129192439816062498936960032019203150387856989605748530266751236079202974347456861420599870218373801273985387191603240725512328905603233503795409316678681946049868631603016962364319358348789811384392717466779220595109890...', 'output': ['777777777777777777777776666666666666666666666666666666666666666666666666666666444411111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '939909984723040339760855074545615549115883377372734895737632651300822327167836845624954034723005941661159452657730383313625878977889186477527363246401511918354628513480575844734933870789513466048082915952523354891853891047530457067949393965822066701637601...', 'output': ['777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666644444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444111111111111111111111111111111111...']}, {'input': '867796789769879678986997769896698676666876766787778968766677796987786886699977896977678688668766796666688699897666667697777977876996669799999877977789767676768676976978698787988799777689999967887888989698989678677898766866788999698979879678976678797769698...', 'output': ['666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666...']}, {'input': '916997137771085429630725687874174369890412487544818827143895173120546526709636787925442388311150285546126817526142825984127734953914702222648051821815185795367601722202785920095681116817848246108323247682877337175160624702816541056769336565997775375222966...', 'output': ['699999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '640278611768890744362972467683186153338018066222032608050178099280583494673848890684534942718356654651112038204272353262447503068902549948645427176667487998131528312579875125756941475797637403869316145547177628844846624904222223242587580822440302774400370...', 'output': ['666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666444444444444444444444444444444444444444444444444444444444444444444444444442222222222222222222222222222222222...']}, {'input': '207058471595814593142194324287719073695818825353214911377325731777419885265426804186139068893791545956681332655802337587371787565962328522140490893818681477114869046601022698917025419773618574190685184947433584429439334693598519600260463583848863368936627...', 'output': ['666664444444444444444444444422222222222222222222222222111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '883086188908405113764309577466765409198614686963864880628835583426469570579799720463615283727710407986155104364041101447691859506617867062228378469783634726665541047565145542426398439840066265273828267856830426115226809047244485337416242153859046147316013...', 'output': ['999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666666666666666666666666666666666666666666666666666666...']}, {'input': '830535330204204513281271347858954094002009700230995588005129030234553888654250432410001514159091541870713764711606930197882957992183824459644953393772545072268860032022455055250703009355878775165587474735227103796580625721132356809402451990719775209805210...', 'output': ['899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '670458381839158872546918155035410290723995709835835884171740130076627888156040009003811091601428994865723558442360659415862182416152346983023638060796538525579139633893217422543817079703442503714786245663610334683732726529435164149462375367427362110734477...', 'output': ['444444444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333333333333333333333333333333333333222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222211...']}, {'input': '968993869888966389886383963696669968398689369933938696833889996633886999693688886966383333686886688638668663983996333399686636963389963836888699838996899869936683638888366389339368838989396366996836939668833896969838633839883683998838889869868899636698696...', 'output': ['333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333...']}, {'input': '602389969512055789601314071118768050344813867987458862405007780380185486569776935326322277096082686160610672788611331060706972827296322725538949689991906893134411353706830994687992105904244457636674999443614427484770210245681916498991186132712473483819617...', 'output': ['999999999999999999999988888888888888888888888888888888888888888888888888888888888888888884444444444444444444444444444444444444444444444444444444444444444444444444433333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333...']}, {'input': '909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909...', 'output': ['599999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '126254092095959027850416433832655426981078106611255074552648515499659121878087190358961591096171231715312122879634738062251247629492483043125748065235158236635181790420183641430917548189219521011748435487445986824532619160561716073648857875108255827252014...', 'output': ['888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888884444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444...']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100005];\nint main() {\n  int n, i, j;\n  scanf(\"%d\", &n);\n  int d[10];\n  memset(d, 0, sizeof(d));\n  for (i = 0; i < 4; i++) {\n    while (n) {\n      d[n % 10]++;\n      n /= 10;\n    }\n    n = i;\n  }\n  while (n) {\n    d[n % 10]++;\n    n /= 10;\n  }\n  for (i = 0; i <= 9; i++) {\n    for (j = 0; j < d[i]; j++) printf(\"%d\", i);\n  }\n  puts(\"\");\n  for (i = 9; i >= 0; i--) {\n    for (j = 0; j < d[i]; j++) printf(\"%d\", i);\n  }\n  puts(\"\");\n}\n"}
{"src_uid": "a17bac596b1f060209534cbffdf0f40e", "id": 39, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 1\\r\\nday\\r\\nmay\\r\\nsun\\r\\nfun\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\nday\\r\\nmay\\r\\ngray\\r\\nway\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '2 1\\r\\nday\\r\\nmay\\r\\nsun\\r\\nfun\\r\\ntest\\r\\nhill\\r\\nfest\\r\\nthrill\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 5\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nrezwbgy\\r\\nxakgmv\\r\\njogezwbgy\\r\\napezwbgy\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\nnuqfxwrb\\r\\napqfkw\\r\\nuqfxwrb\\r\\nnhcuqfxwrb\\r\\nogkznwncmt\\r\\nevf\\r\\nogkznwncmt\\r\\nogkznwncmt\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\naawjvkxx\\r\\nawjvkxx\\r\\nxawjvkxx\\r\\nawjvkxx\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '2 2\\r\\nrhcujgxabk\\r\\nnjgdqpurul\\r\\nueoedt\\r\\ncpcfhbyvo\\r\\nzmfwnieog\\r\\npkpylassbf\\r\\nhrfeod\\r\\ncdwuil\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\nol\\r\\nol\\r\\nol\\r\\nzol\\r\\nek\\r\\nek\\r\\nek\\r\\nqek\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '3 2\\r\\nexdaoao\\r\\nrdwunurp\\r\\ndunurp\\r\\ntyqzuxao\\r\\ndupocgsps\\r\\nzsiravcm\\r\\nnqiravcm\\r\\nlnupocgsps\\r\\niwashk\\r\\neepkqcykbv\\r\\nyviwashk\\r\\neepkqcykbv\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\ndaihacbnhgfts\\r\\nsqihpntjvczkw\\r\\nmihpntjvczkw\\r\\nvyacbnhgfts\\r\\ntsvovdpqajmgvcj\\r\\ncexqkwrvctomb\\r\\njxbomb\\r\\ngnpajmgvcj\\r\\n', 'output': ['abba\\r\\n']}, {'input': '3 2\\r\\netba\\r\\ntfecetba\\r\\nzkitbgcuuy\\r\\nuuy\\r\\nbuxeoi\\r\\nmekxoi\\r\\nblviwoehy\\r\\niwoehy\\r\\njyfpaqntiz\\r\\nqvaqntiz\\r\\nhciak\\r\\niak\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '4 3\\r\\niixxiojrrdytjcbkvymw\\r\\nbjqixxiojrrdytjcbkvymw\\r\\nogjixxiojrrdytjcbkvymw\\r\\nevixxpfxpgicpg\\r\\njkotitixiughfhphliuurx\\r\\ngyubkqtonejprfjzvqxbdpn\\r\\ndpudxfoqnhekjytbwiuurx\\r\\noubkqtonejprfjzvqxbdpn\\r\\npgzaendrxjhsfzjmijv\\r\\npomuaendrxjhsfzjmijv\\r\\nafyuyxueaendrxjhsfzjmijv\\r\\naendrxjhsfzjmijv\\r\\nyubweicj\\r\\ntbnsuxqigmxdfnmbipubweicj\\r\\nfuftydlmoo\\r\\nmdkuftydlmoo\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 2\\r\\nqurcmcbxyoddgyyccsmb\\r\\nlsdzsqoa\\r\\neurcmcbxyoddgyyccsmb\\r\\noa\\r\\nutyxmdhcvaclynmstwsx\\r\\nmkyycelbmkmdrilmbvr\\r\\nutyxmdhcvaclynmstwsx\\r\\nrduyelbmkmdrilmbvr\\r\\nhmguhvqswwciowwgu\\r\\nnoe\\r\\nzmyncuwrowwgu\\r\\nqrhymghavvbmigzsjoe\\r\\nbvofhknbzusykztlxwms\\r\\nbpbfmvjaimkdeddy\\r\\neofhknbzusykztlxwms\\r\\nmhivpkxkpazimkdeddy\\r\\negvywnhmfngllaknmn\\r\\nmblkvhenlggoftwjgk\\r\\nzegvywnhmfngllaknmn\\r\\ngrdenlggoftwjgk\\r\\n', 'output': ['abab\\r\\n']}, {'input': '7 3\\r\\nferwljzwakxedlgwl\\r\\noerwljzwakxedlgwl\\r\\nhyqombizhuhxedprb\\r\\netptjrizhuhxedprb\\r\\nurtuckar\\r\\ndkartmwramklcmi\\r\\nrurtuckar\\r\\nnurartmwramklcmi\\r\\niraziomsv\\r\\nsaziomsv\\r\\nbprapiqpayzurgij\\r\\nusyemayzurgij\\r\\nztstmeecvmkvuu\\r\\nquexlecvmkvuu\\r\\nrlhwecvmkvuu\\r\\nzecvmkvuu\\r\\niikymgbncljtub\\r\\nqiikymgbncljtub\\r\\nbcavhexqamyszgfya\\r\\nojexqamyszgfya\\r\\nieyxqinjinjv\\r\\nxtiudieyxqinjinjv\\r\\nthtceyxqinjinjv\\r\\nmuneyxqinjinjv\\r\\nwreae\\r\\nqylcjhjzfhteae\\r\\nozcjthgyuchqo\\r\\nfcjozcjthgyuchqo\\r\\n', 'output': ['NO\\r\\n']}, {'input': '16 1\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\nu\\r\\ni\\r\\ni\\r\\no\\r\\na\\r\\na\\r\\no\\r\\na\\r\\ni\\r\\na\\r\\na\\r\\ni\\r\\ni\\r\\no\\r\\no\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\nu\\r\\nu\\r\\nu\\r\\nu\\r\\no\\r\\ne\\r\\ne\\r\\ne\\r\\no\\r\\ni\\r\\no\\r\\ni\\r\\na\\r\\na\\r\\na\\r\\na\\r\\nu\\r\\no\\r\\no\\r\\nu\\r\\ni\\r\\no\\r\\no\\r\\ni\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\no\\r\\na\\r\\na\\r\\nu\\r\\na\\r\\nu\\r\\nu\\r\\n', 'output': ['NO\\r\\n']}, {'input': '16 1\\r\\neb\\r\\neb\\r\\nfe\\r\\nce\\r\\ner\\r\\ner\\r\\new\\r\\new\\r\\nu\\r\\ncu\\r\\nu\\r\\nu\\r\\nud\\r\\nik\\r\\nud\\r\\nik\\r\\nve\\r\\niw\\r\\niw\\r\\nne\\r\\nel\\r\\nob\\r\\nel\\r\\nob\\r\\no\\r\\neo\\r\\no\\r\\nyo\\r\\nav\\r\\nav\\r\\nei\\r\\nmi\\r\\nu\\r\\noh\\r\\noh\\r\\nzu\\r\\niw\\r\\niw\\r\\na\\r\\nma\\r\\ni\\r\\nu\\r\\nku\\r\\ngi\\r\\nac\\r\\no\\r\\no\\r\\nac\\r\\ni\\r\\ner\\r\\nai\\r\\ner\\r\\nyu\\r\\nuf\\r\\nuf\\r\\nhu\\r\\nef\\r\\nef\\r\\nef\\r\\nef\\r\\nmu\\r\\nu\\r\\nqe\\r\\nie\\r\\n', 'output': ['NO\\r\\n']}, {'input': '25 1\\r\\nw\\r\\ni\\r\\nv\\r\\nx\\r\\nh\\r\\ns\\r\\nz\\r\\ny\\r\\no\\r\\nn\\r\\nh\\r\\ni\\r\\nf\\r\\nf\\r\\ny\\r\\nr\\r\\nb\\r\\nu\\r\\no\\r\\np\\r\\nz\\r\\nh\\r\\nt\\r\\no\\r\\nw\\r\\nx\\r\\nh\\r\\no\\r\\nj\\r\\ny\\r\\nw\\r\\nj\\r\\ny\\r\\nh\\r\\nh\\r\\nr\\r\\ns\\r\\nb\\r\\ny\\r\\nr\\r\\nw\\r\\no\\r\\nl\\r\\nl\\r\\nh\\r\\nh\\r\\nw\\r\\nu\\r\\na\\r\\nv\\r\\no\\r\\nx\\r\\nd\\r\\nw\\r\\nc\\r\\nf\\r\\ni\\r\\ne\\r\\nj\\r\\nq\\r\\nk\\r\\na\\r\\ne\\r\\nl\\r\\nw\\r\\nm\\r\\nf\\r\\na\\r\\nc\\r\\na\\r\\nb\\r\\nf\\r\\nj\\r\\nb\\r\\nx\\r\\ni\\r\\nx\\r\\ne\\r\\nu\\r\\nh\\r\\nm\\r\\no\\r\\ni\\r\\nq\\r\\nm\\r\\nk\\r\\nn\\r\\nd\\r\\nl\\r\\np\\r\\nc\\r\\nw\\r\\nu\\r\\nz\\r\\nc\\r\\nk\\r\\ng\\r\\ny\\r\\nj\\r\\ny\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\ne\\r\\ne\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\na\\r\\ne\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\ne\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\ne\\r\\na\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\ne\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '1 2\\r\\neraub\\r\\nbee\\r\\naab\\r\\nttbee\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ny\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 2\\r\\neeereaatktb\\r\\nbee\\r\\niaattb\\r\\nottbee\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nab\\r\\nac\\r\\nad\\r\\naf\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nar\\r\\nat\\r\\nay\\r\\naw\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ni\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\nabbbbbbbbbbbbbbbbcbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbfbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbxbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbdbbbbbbbbbbbbbbbb\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\nbug\\r\\nsuy\\r\\nluh\\r\\ngut\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nam\\r\\nat\\r\\nan\\r\\nag\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 4\\r\\naieoabcd\\r\\naeioabcd\\r\\naoeiabcd\\r\\naoieabcd\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 2\\r\\naec\\r\\naed\\r\\naek\\r\\naem\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nar\\r\\nab\\r\\nak\\r\\naz\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\nb\\r\\nb\\r\\nb\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nchar s[10001][1005];\nint main() {\n  int n, k, i, j, l = 0, flag;\n  int a[5][5] = {{0}, {0}, {0}, {0}, {0}};\n  scanf(\"%d%d\", &n, &k);\n  for (i = 1; i <= n; ++i) {\n    for (j = 0; j <= 3; ++j) {\n      gets(s[l]);\n      l++;\n    }\n    l -= 4;\n    if (strlen(s[l]) > k) {\n      if (strlen(s[l]) > k) {\n        for (j = 0; j < strlen(s[l]); ++j) {\n          if (s[l][j] == s[l + 1][j])\n            flag = 1;\n          else if ((s[l][j] == 'a' || s[l][j] == 'i' || s[l][j] == 'o' ||\n                    s[l][j] == 'u' || s[l][j] == 'e') &&\n                   j >= k)\n            flag = 1;\n          else\n            flag = 0;\n          if (!flag) break;\n        }\n        if (!flag) continue;\n      }\n      a[1][i] = 1;\n      a[2][i] = 2;\n      a[3][i - 1] = i;\n      a[4][i - 1] = i - 1;\n    } else {\n      if (strlen(s[l]) > k) {\n        for (j = 0; j < strlen(s[l]); ++j) {\n          if (s[l][j] == s[l + 1][j])\n            flag = 1;\n          else if ((s[l][j] == 'a' || s[l][j] == 'i' || s[l][j] == 'o' ||\n                    s[l][j] == 'u' || s[l][j] == 'e') &&\n                   j >= k)\n            flag = 1;\n          else\n            flag = 0;\n          if (!flag) break;\n        }\n        if (!flag) continue;\n      }\n      a[1][i] = a[1][i - 1];\n      a[2][i] = a[2][i - 1];\n      a[3][i] = a[3][i - 1];\n      a[4][i] = a[4][i - 1];\n    }\n  }\n  for (i = 1; i <= n; ++i) {\n    if (!(a[1][i] == a[2][i] && a[3][i] == a[4][i])) {\n      printf(\"NO\\n\");\n      return 0;\n    }\n  }\n  printf(\"%c%c%c%c\\n\", a[1][1] + 96, a[2][n] + 96, a[3][n] + 96,\n         a[4][n] + 96);\n  return 0;\n}\n"}
{"src_uid": "a17bac596b1f060209534cbffdf0f40e", "id": 39, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 1\\r\\nday\\r\\nmay\\r\\nsun\\r\\nfun\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\nday\\r\\nmay\\r\\ngray\\r\\nway\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '2 1\\r\\nday\\r\\nmay\\r\\nsun\\r\\nfun\\r\\ntest\\r\\nhill\\r\\nfest\\r\\nthrill\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 5\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nrezwbgy\\r\\nxakgmv\\r\\njogezwbgy\\r\\napezwbgy\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\nnuqfxwrb\\r\\napqfkw\\r\\nuqfxwrb\\r\\nnhcuqfxwrb\\r\\nogkznwncmt\\r\\nevf\\r\\nogkznwncmt\\r\\nogkznwncmt\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\naawjvkxx\\r\\nawjvkxx\\r\\nxawjvkxx\\r\\nawjvkxx\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '2 2\\r\\nrhcujgxabk\\r\\nnjgdqpurul\\r\\nueoedt\\r\\ncpcfhbyvo\\r\\nzmfwnieog\\r\\npkpylassbf\\r\\nhrfeod\\r\\ncdwuil\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\nol\\r\\nol\\r\\nol\\r\\nzol\\r\\nek\\r\\nek\\r\\nek\\r\\nqek\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '3 2\\r\\nexdaoao\\r\\nrdwunurp\\r\\ndunurp\\r\\ntyqzuxao\\r\\ndupocgsps\\r\\nzsiravcm\\r\\nnqiravcm\\r\\nlnupocgsps\\r\\niwashk\\r\\neepkqcykbv\\r\\nyviwashk\\r\\neepkqcykbv\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\ndaihacbnhgfts\\r\\nsqihpntjvczkw\\r\\nmihpntjvczkw\\r\\nvyacbnhgfts\\r\\ntsvovdpqajmgvcj\\r\\ncexqkwrvctomb\\r\\njxbomb\\r\\ngnpajmgvcj\\r\\n', 'output': ['abba\\r\\n']}, {'input': '3 2\\r\\netba\\r\\ntfecetba\\r\\nzkitbgcuuy\\r\\nuuy\\r\\nbuxeoi\\r\\nmekxoi\\r\\nblviwoehy\\r\\niwoehy\\r\\njyfpaqntiz\\r\\nqvaqntiz\\r\\nhciak\\r\\niak\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '4 3\\r\\niixxiojrrdytjcbkvymw\\r\\nbjqixxiojrrdytjcbkvymw\\r\\nogjixxiojrrdytjcbkvymw\\r\\nevixxpfxpgicpg\\r\\njkotitixiughfhphliuurx\\r\\ngyubkqtonejprfjzvqxbdpn\\r\\ndpudxfoqnhekjytbwiuurx\\r\\noubkqtonejprfjzvqxbdpn\\r\\npgzaendrxjhsfzjmijv\\r\\npomuaendrxjhsfzjmijv\\r\\nafyuyxueaendrxjhsfzjmijv\\r\\naendrxjhsfzjmijv\\r\\nyubweicj\\r\\ntbnsuxqigmxdfnmbipubweicj\\r\\nfuftydlmoo\\r\\nmdkuftydlmoo\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 2\\r\\nqurcmcbxyoddgyyccsmb\\r\\nlsdzsqoa\\r\\neurcmcbxyoddgyyccsmb\\r\\noa\\r\\nutyxmdhcvaclynmstwsx\\r\\nmkyycelbmkmdrilmbvr\\r\\nutyxmdhcvaclynmstwsx\\r\\nrduyelbmkmdrilmbvr\\r\\nhmguhvqswwciowwgu\\r\\nnoe\\r\\nzmyncuwrowwgu\\r\\nqrhymghavvbmigzsjoe\\r\\nbvofhknbzusykztlxwms\\r\\nbpbfmvjaimkdeddy\\r\\neofhknbzusykztlxwms\\r\\nmhivpkxkpazimkdeddy\\r\\negvywnhmfngllaknmn\\r\\nmblkvhenlggoftwjgk\\r\\nzegvywnhmfngllaknmn\\r\\ngrdenlggoftwjgk\\r\\n', 'output': ['abab\\r\\n']}, {'input': '7 3\\r\\nferwljzwakxedlgwl\\r\\noerwljzwakxedlgwl\\r\\nhyqombizhuhxedprb\\r\\netptjrizhuhxedprb\\r\\nurtuckar\\r\\ndkartmwramklcmi\\r\\nrurtuckar\\r\\nnurartmwramklcmi\\r\\niraziomsv\\r\\nsaziomsv\\r\\nbprapiqpayzurgij\\r\\nusyemayzurgij\\r\\nztstmeecvmkvuu\\r\\nquexlecvmkvuu\\r\\nrlhwecvmkvuu\\r\\nzecvmkvuu\\r\\niikymgbncljtub\\r\\nqiikymgbncljtub\\r\\nbcavhexqamyszgfya\\r\\nojexqamyszgfya\\r\\nieyxqinjinjv\\r\\nxtiudieyxqinjinjv\\r\\nthtceyxqinjinjv\\r\\nmuneyxqinjinjv\\r\\nwreae\\r\\nqylcjhjzfhteae\\r\\nozcjthgyuchqo\\r\\nfcjozcjthgyuchqo\\r\\n', 'output': ['NO\\r\\n']}, {'input': '16 1\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\nu\\r\\ni\\r\\ni\\r\\no\\r\\na\\r\\na\\r\\no\\r\\na\\r\\ni\\r\\na\\r\\na\\r\\ni\\r\\ni\\r\\no\\r\\no\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\nu\\r\\nu\\r\\nu\\r\\nu\\r\\no\\r\\ne\\r\\ne\\r\\ne\\r\\no\\r\\ni\\r\\no\\r\\ni\\r\\na\\r\\na\\r\\na\\r\\na\\r\\nu\\r\\no\\r\\no\\r\\nu\\r\\ni\\r\\no\\r\\no\\r\\ni\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\no\\r\\na\\r\\na\\r\\nu\\r\\na\\r\\nu\\r\\nu\\r\\n', 'output': ['NO\\r\\n']}, {'input': '16 1\\r\\neb\\r\\neb\\r\\nfe\\r\\nce\\r\\ner\\r\\ner\\r\\new\\r\\new\\r\\nu\\r\\ncu\\r\\nu\\r\\nu\\r\\nud\\r\\nik\\r\\nud\\r\\nik\\r\\nve\\r\\niw\\r\\niw\\r\\nne\\r\\nel\\r\\nob\\r\\nel\\r\\nob\\r\\no\\r\\neo\\r\\no\\r\\nyo\\r\\nav\\r\\nav\\r\\nei\\r\\nmi\\r\\nu\\r\\noh\\r\\noh\\r\\nzu\\r\\niw\\r\\niw\\r\\na\\r\\nma\\r\\ni\\r\\nu\\r\\nku\\r\\ngi\\r\\nac\\r\\no\\r\\no\\r\\nac\\r\\ni\\r\\ner\\r\\nai\\r\\ner\\r\\nyu\\r\\nuf\\r\\nuf\\r\\nhu\\r\\nef\\r\\nef\\r\\nef\\r\\nef\\r\\nmu\\r\\nu\\r\\nqe\\r\\nie\\r\\n', 'output': ['NO\\r\\n']}, {'input': '25 1\\r\\nw\\r\\ni\\r\\nv\\r\\nx\\r\\nh\\r\\ns\\r\\nz\\r\\ny\\r\\no\\r\\nn\\r\\nh\\r\\ni\\r\\nf\\r\\nf\\r\\ny\\r\\nr\\r\\nb\\r\\nu\\r\\no\\r\\np\\r\\nz\\r\\nh\\r\\nt\\r\\no\\r\\nw\\r\\nx\\r\\nh\\r\\no\\r\\nj\\r\\ny\\r\\nw\\r\\nj\\r\\ny\\r\\nh\\r\\nh\\r\\nr\\r\\ns\\r\\nb\\r\\ny\\r\\nr\\r\\nw\\r\\no\\r\\nl\\r\\nl\\r\\nh\\r\\nh\\r\\nw\\r\\nu\\r\\na\\r\\nv\\r\\no\\r\\nx\\r\\nd\\r\\nw\\r\\nc\\r\\nf\\r\\ni\\r\\ne\\r\\nj\\r\\nq\\r\\nk\\r\\na\\r\\ne\\r\\nl\\r\\nw\\r\\nm\\r\\nf\\r\\na\\r\\nc\\r\\na\\r\\nb\\r\\nf\\r\\nj\\r\\nb\\r\\nx\\r\\ni\\r\\nx\\r\\ne\\r\\nu\\r\\nh\\r\\nm\\r\\no\\r\\ni\\r\\nq\\r\\nm\\r\\nk\\r\\nn\\r\\nd\\r\\nl\\r\\np\\r\\nc\\r\\nw\\r\\nu\\r\\nz\\r\\nc\\r\\nk\\r\\ng\\r\\ny\\r\\nj\\r\\ny\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\ne\\r\\ne\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\na\\r\\ne\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\ne\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\ne\\r\\na\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\ne\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '1 2\\r\\neraub\\r\\nbee\\r\\naab\\r\\nttbee\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ny\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 2\\r\\neeereaatktb\\r\\nbee\\r\\niaattb\\r\\nottbee\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nab\\r\\nac\\r\\nad\\r\\naf\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nar\\r\\nat\\r\\nay\\r\\naw\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ni\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\nabbbbbbbbbbbbbbbbcbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbfbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbxbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbdbbbbbbbbbbbbbbbb\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\nbug\\r\\nsuy\\r\\nluh\\r\\ngut\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nam\\r\\nat\\r\\nan\\r\\nag\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 4\\r\\naieoabcd\\r\\naeioabcd\\r\\naoeiabcd\\r\\naoieabcd\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 2\\r\\naec\\r\\naed\\r\\naek\\r\\naem\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nar\\r\\nab\\r\\nak\\r\\naz\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\nb\\r\\nb\\r\\nb\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nstring f[4][2505];\nint main() {\n  int n, k;\n  cin >> n >> k;\n  for (int i = 1; i <= 4 * n; i += 4) {\n    for (int j = 0; j < 4; j++) cin >> f[j][i / 4 + 1];\n  }\n  if (f[1][1] == f[2][1] && f[2][1] == f[3][1] && f[3][1] == f[0][1]) {\n    cout << \"aaaa\\n\";\n  } else if (f[0][1] == f[1][1] && f[1][1] == f[2][1] &&\n             f[2][1]!= f[3][1]) {\n    cout << \"abba\\n\";\n  } else if (f[0][1] == f[2][1] && f[2][1] == f[3][1] &&\n             f[3][1]!= f[1][1]) {\n    cout << \"abba\\n\";\n  } else if (f[0][1] == f[1][1] && f[1][1]!= f[2][1] &&\n             f[2][1]!= f[3][1]) {\n    cout << \"abab\\n\";\n  } else if (f[0][1]!= f[1][1] && f[1][1] == f[2][1] &&\n             f[2][1] == f[3][1]) {\n    cout << \"aabb\\n\";\n  } else if (f[0][1]!= f[1][1] && f[1][1] == f[2][1] &&\n             f[2][1]!= f[3][1]) {\n    cout << \"abba\\n\";\n  } else if (f[0][1] == f[1][1] && f[1][1]!= f[2][1] &&\n             f[2][1] == f[3][1]) {\n    cout << \"aabb\\n\";\n  } else if (f[0][1]!= f[1][1] && f[1][1]!= f[2][1] &&\n             f[2][1] == f[3][1]) {\n    cout << \"abab\\n\";\n  } else if (f[0][1] == f[1][1] && f[1][1]!= f[2][1] &&\n             f[2][1]!= f[3][1]) {\n    cout << \"aabb\\n\";\n  } else if (f[0][1]!= f[1][1] && f[1][1]!= f[2][1] &&\n             f[2][1]!= f[3][1]) {\n    cout << \"abab\\n\";\n  } else {\n    cout << \"NO\\n\";\n  }\n  return 0;\n}\n"}
{"src_uid": "a17bac596b1f060209534cbffdf0f40e", "id": 39, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 1\\r\\nday\\r\\nmay\\r\\nsun\\r\\nfun\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\nday\\r\\nmay\\r\\ngray\\r\\nway\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '2 1\\r\\nday\\r\\nmay\\r\\nsun\\r\\nfun\\r\\ntest\\r\\nhill\\r\\nfest\\r\\nthrill\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 5\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nrezwbgy\\r\\nxakgmv\\r\\njogezwbgy\\r\\napezwbgy\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\nnuqfxwrb\\r\\napqfkw\\r\\nuqfxwrb\\r\\nnhcuqfxwrb\\r\\nogkznwncmt\\r\\nevf\\r\\nogkznwncmt\\r\\nogkznwncmt\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\naawjvkxx\\r\\nawjvkxx\\r\\nxawjvkxx\\r\\nawjvkxx\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '2 2\\r\\nrhcujgxabk\\r\\nnjgdqpurul\\r\\nueoedt\\r\\ncpcfhbyvo\\r\\nzmfwnieog\\r\\npkpylassbf\\r\\nhrfeod\\r\\ncdwuil\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\nol\\r\\nol\\r\\nol\\r\\nzol\\r\\nek\\r\\nek\\r\\nek\\r\\nqek\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '3 2\\r\\nexdaoao\\r\\nrdwunurp\\r\\ndunurp\\r\\ntyqzuxao\\r\\ndupocgsps\\r\\nzsiravcm\\r\\nnqiravcm\\r\\nlnupocgsps\\r\\niwashk\\r\\neepkqcykbv\\r\\nyviwashk\\r\\neepkqcykbv\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\ndaihacbnhgfts\\r\\nsqihpntjvczkw\\r\\nmihpntjvczkw\\r\\nvyacbnhgfts\\r\\ntsvovdpqajmgvcj\\r\\ncexqkwrvctomb\\r\\njxbomb\\r\\ngnpajmgvcj\\r\\n', 'output': ['abba\\r\\n']}, {'input': '3 2\\r\\netba\\r\\ntfecetba\\r\\nzkitbgcuuy\\r\\nuuy\\r\\nbuxeoi\\r\\nmekxoi\\r\\nblviwoehy\\r\\niwoehy\\r\\njyfpaqntiz\\r\\nqvaqntiz\\r\\nhciak\\r\\niak\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '4 3\\r\\niixxiojrrdytjcbkvymw\\r\\nbjqixxiojrrdytjcbkvymw\\r\\nogjixxiojrrdytjcbkvymw\\r\\nevixxpfxpgicpg\\r\\njkotitixiughfhphliuurx\\r\\ngyubkqtonejprfjzvqxbdpn\\r\\ndpudxfoqnhekjytbwiuurx\\r\\noubkqtonejprfjzvqxbdpn\\r\\npgzaendrxjhsfzjmijv\\r\\npomuaendrxjhsfzjmijv\\r\\nafyuyxueaendrxjhsfzjmijv\\r\\naendrxjhsfzjmijv\\r\\nyubweicj\\r\\ntbnsuxqigmxdfnmbipubweicj\\r\\nfuftydlmoo\\r\\nmdkuftydlmoo\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 2\\r\\nqurcmcbxyoddgyyccsmb\\r\\nlsdzsqoa\\r\\neurcmcbxyoddgyyccsmb\\r\\noa\\r\\nutyxmdhcvaclynmstwsx\\r\\nmkyycelbmkmdrilmbvr\\r\\nutyxmdhcvaclynmstwsx\\r\\nrduyelbmkmdrilmbvr\\r\\nhmguhvqswwciowwgu\\r\\nnoe\\r\\nzmyncuwrowwgu\\r\\nqrhymghavvbmigzsjoe\\r\\nbvofhknbzusykztlxwms\\r\\nbpbfmvjaimkdeddy\\r\\neofhknbzusykztlxwms\\r\\nmhivpkxkpazimkdeddy\\r\\negvywnhmfngllaknmn\\r\\nmblkvhenlggoftwjgk\\r\\nzegvywnhmfngllaknmn\\r\\ngrdenlggoftwjgk\\r\\n', 'output': ['abab\\r\\n']}, {'input': '7 3\\r\\nferwljzwakxedlgwl\\r\\noerwljzwakxedlgwl\\r\\nhyqombizhuhxedprb\\r\\netptjrizhuhxedprb\\r\\nurtuckar\\r\\ndkartmwramklcmi\\r\\nrurtuckar\\r\\nnurartmwramklcmi\\r\\niraziomsv\\r\\nsaziomsv\\r\\nbprapiqpayzurgij\\r\\nusyemayzurgij\\r\\nztstmeecvmkvuu\\r\\nquexlecvmkvuu\\r\\nrlhwecvmkvuu\\r\\nzecvmkvuu\\r\\niikymgbncljtub\\r\\nqiikymgbncljtub\\r\\nbcavhexqamyszgfya\\r\\nojexqamyszgfya\\r\\nieyxqinjinjv\\r\\nxtiudieyxqinjinjv\\r\\nthtceyxqinjinjv\\r\\nmuneyxqinjinjv\\r\\nwreae\\r\\nqylcjhjzfhteae\\r\\nozcjthgyuchqo\\r\\nfcjozcjthgyuchqo\\r\\n', 'output': ['NO\\r\\n']}, {'input': '16 1\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\nu\\r\\ni\\r\\ni\\r\\no\\r\\na\\r\\na\\r\\no\\r\\na\\r\\ni\\r\\na\\r\\na\\r\\ni\\r\\ni\\r\\no\\r\\no\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\nu\\r\\nu\\r\\nu\\r\\nu\\r\\no\\r\\ne\\r\\ne\\r\\ne\\r\\no\\r\\ni\\r\\no\\r\\ni\\r\\na\\r\\na\\r\\na\\r\\na\\r\\nu\\r\\no\\r\\no\\r\\nu\\r\\ni\\r\\no\\r\\no\\r\\ni\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\no\\r\\na\\r\\na\\r\\nu\\r\\na\\r\\nu\\r\\nu\\r\\n', 'output': ['NO\\r\\n']}, {'input': '16 1\\r\\neb\\r\\neb\\r\\nfe\\r\\nce\\r\\ner\\r\\ner\\r\\new\\r\\new\\r\\nu\\r\\ncu\\r\\nu\\r\\nu\\r\\nud\\r\\nik\\r\\nud\\r\\nik\\r\\nve\\r\\niw\\r\\niw\\r\\nne\\r\\nel\\r\\nob\\r\\nel\\r\\nob\\r\\no\\r\\neo\\r\\no\\r\\nyo\\r\\nav\\r\\nav\\r\\nei\\r\\nmi\\r\\nu\\r\\noh\\r\\noh\\r\\nzu\\r\\niw\\r\\niw\\r\\na\\r\\nma\\r\\ni\\r\\nu\\r\\nku\\r\\ngi\\r\\nac\\r\\no\\r\\no\\r\\nac\\r\\ni\\r\\ner\\r\\nai\\r\\ner\\r\\nyu\\r\\nuf\\r\\nuf\\r\\nhu\\r\\nef\\r\\nef\\r\\nef\\r\\nef\\r\\nmu\\r\\nu\\r\\nqe\\r\\nie\\r\\n', 'output': ['NO\\r\\n']}, {'input': '25 1\\r\\nw\\r\\ni\\r\\nv\\r\\nx\\r\\nh\\r\\ns\\r\\nz\\r\\ny\\r\\no\\r\\nn\\r\\nh\\r\\ni\\r\\nf\\r\\nf\\r\\ny\\r\\nr\\r\\nb\\r\\nu\\r\\no\\r\\np\\r\\nz\\r\\nh\\r\\nt\\r\\no\\r\\nw\\r\\nx\\r\\nh\\r\\no\\r\\nj\\r\\ny\\r\\nw\\r\\nj\\r\\ny\\r\\nh\\r\\nh\\r\\nr\\r\\ns\\r\\nb\\r\\ny\\r\\nr\\r\\nw\\r\\no\\r\\nl\\r\\nl\\r\\nh\\r\\nh\\r\\nw\\r\\nu\\r\\na\\r\\nv\\r\\no\\r\\nx\\r\\nd\\r\\nw\\r\\nc\\r\\nf\\r\\ni\\r\\ne\\r\\nj\\r\\nq\\r\\nk\\r\\na\\r\\ne\\r\\nl\\r\\nw\\r\\nm\\r\\nf\\r\\na\\r\\nc\\r\\na\\r\\nb\\r\\nf\\r\\nj\\r\\nb\\r\\nx\\r\\ni\\r\\nx\\r\\ne\\r\\nu\\r\\nh\\r\\nm\\r\\no\\r\\ni\\r\\nq\\r\\nm\\r\\nk\\r\\nn\\r\\nd\\r\\nl\\r\\np\\r\\nc\\r\\nw\\r\\nu\\r\\nz\\r\\nc\\r\\nk\\r\\ng\\r\\ny\\r\\nj\\r\\ny\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\ne\\r\\ne\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\na\\r\\ne\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\ne\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\ne\\r\\na\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\ne\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '1 2\\r\\neraub\\r\\nbee\\r\\naab\\r\\nttbee\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ny\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 2\\r\\neeereaatktb\\r\\nbee\\r\\niaattb\\r\\nottbee\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nab\\r\\nac\\r\\nad\\r\\naf\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nar\\r\\nat\\r\\nay\\r\\naw\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ni\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\nabbbbbbbbbbbbbbbbcbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbfbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbxbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbdbbbbbbbbbbbbbbbb\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\nbug\\r\\nsuy\\r\\nluh\\r\\ngut\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nam\\r\\nat\\r\\nan\\r\\nag\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 4\\r\\naieoabcd\\r\\naeioabcd\\r\\naoeiabcd\\r\\naoieabcd\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 2\\r\\naec\\r\\naed\\r\\naek\\r\\naem\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nar\\r\\nab\\r\\nak\\r\\naz\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\nb\\r\\nb\\r\\nb\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, k;\n  cin >> n >> k;\n  int a[n][4];\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < 4; j++) {\n      cin >> a[i][j];\n    }\n  }\n  char c[4] = {'a', 'e', 'i', 'o', 'u'};\n  for (int i = 0; i < 4; i++) {\n    int t[4] = {0};\n    for (int j = 0; j < n; j++) {\n      int cnt = 0;\n      for (int h = 0; h < 4; h++) {\n        if (a[j][h][k - 1] == c[i]) {\n          cnt++;\n        }\n      }\n      t[cnt]++;\n    }\n    for (int h = 1; h < 4; h++) {\n      if (t[h]!= n) {\n        cout << \"NO\";\n        return 0;\n      }\n    }\n  }\n  if (a[0][3][k - 1] == a[1][2][k - 1] && a[1][3][k - 1] == a[2][2][k - 1] &&\n      a[2][3][k - 1] == a[3][2][k - 1]) {\n    cout << \"aaaa\";\n  } else if (a[0][1][k - 1] == a[1][1][k - 1] &&\n               a[1][3][k - 1] == a[2][3][k - 1] &&\n               a[2][1][k - 1] == a[3][1][k - 1]) {\n    cout << \"abab\";\n  } else if (a[0][1][k - 1] == a[1][1][k - 1] &&\n               a[1][1][k - 1] == a[2][3][k - 1] &&\n               a[2][1][k - 1] == a[3][3][k - 1]) {\n    cout << \"abaa\";\n  } else if (a[0][1][k - 1] == a[1][3][k - 1] &&\n               a[1][3][k - 1] == a[2][3][k - 1] &&\n               a[2][1][k - 1] == a[3][1][k - 1]) {\n    cout << \"abba\";\n  } else if (a[0][1][k - 1] == a[1][1][k - 1] &&\n               a[1][1][k - 1] == a[2][1][k - 1] &&\n               a[2][1][k - 1] == a[3][1][k - 1]) {\n    cout << \"aabb\";\n  } else {\n    cout << \"NO\";\n  }\n  return 0;\n}\n"}
{"src_uid": "a17bac596b1f060209534cbffdf0f40e", "id": 39, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 1\\r\\nday\\r\\nmay\\r\\nsun\\r\\nfun\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\nday\\r\\nmay\\r\\ngray\\r\\nway\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '2 1\\r\\nday\\r\\nmay\\r\\nsun\\r\\nfun\\r\\ntest\\r\\nhill\\r\\nfest\\r\\nthrill\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 5\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nrezwbgy\\r\\nxakgmv\\r\\njogezwbgy\\r\\napezwbgy\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\nnuqfxwrb\\r\\napqfkw\\r\\nuqfxwrb\\r\\nnhcuqfxwrb\\r\\nogkznwncmt\\r\\nevf\\r\\nogkznwncmt\\r\\nogkznwncmt\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\naawjvkxx\\r\\nawjvkxx\\r\\nxawjvkxx\\r\\nawjvkxx\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '2 2\\r\\nrhcujgxabk\\r\\nnjgdqpurul\\r\\nueoedt\\r\\ncpcfhbyvo\\r\\nzmfwnieog\\r\\npkpylassbf\\r\\nhrfeod\\r\\ncdwuil\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\nol\\r\\nol\\r\\nol\\r\\nzol\\r\\nek\\r\\nek\\r\\nek\\r\\nqek\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '3 2\\r\\nexdaoao\\r\\nrdwunurp\\r\\ndunurp\\r\\ntyqzuxao\\r\\ndupocgsps\\r\\nzsiravcm\\r\\nnqiravcm\\r\\nlnupocgsps\\r\\niwashk\\r\\neepkqcykbv\\r\\nyviwashk\\r\\neepkqcykbv\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\ndaihacbnhgfts\\r\\nsqihpntjvczkw\\r\\nmihpntjvczkw\\r\\nvyacbnhgfts\\r\\ntsvovdpqajmgvcj\\r\\ncexqkwrvctomb\\r\\njxbomb\\r\\ngnpajmgvcj\\r\\n', 'output': ['abba\\r\\n']}, {'input': '3 2\\r\\netba\\r\\ntfecetba\\r\\nzkitbgcuuy\\r\\nuuy\\r\\nbuxeoi\\r\\nmekxoi\\r\\nblviwoehy\\r\\niwoehy\\r\\njyfpaqntiz\\r\\nqvaqntiz\\r\\nhciak\\r\\niak\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '4 3\\r\\niixxiojrrdytjcbkvymw\\r\\nbjqixxiojrrdytjcbkvymw\\r\\nogjixxiojrrdytjcbkvymw\\r\\nevixxpfxpgicpg\\r\\njkotitixiughfhphliuurx\\r\\ngyubkqtonejprfjzvqxbdpn\\r\\ndpudxfoqnhekjytbwiuurx\\r\\noubkqtonejprfjzvqxbdpn\\r\\npgzaendrxjhsfzjmijv\\r\\npomuaendrxjhsfzjmijv\\r\\nafyuyxueaendrxjhsfzjmijv\\r\\naendrxjhsfzjmijv\\r\\nyubweicj\\r\\ntbnsuxqigmxdfnmbipubweicj\\r\\nfuftydlmoo\\r\\nmdkuftydlmoo\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 2\\r\\nqurcmcbxyoddgyyccsmb\\r\\nlsdzsqoa\\r\\neurcmcbxyoddgyyccsmb\\r\\noa\\r\\nutyxmdhcvaclynmstwsx\\r\\nmkyycelbmkmdrilmbvr\\r\\nutyxmdhcvaclynmstwsx\\r\\nrduyelbmkmdrilmbvr\\r\\nhmguhvqswwciowwgu\\r\\nnoe\\r\\nzmyncuwrowwgu\\r\\nqrhymghavvbmigzsjoe\\r\\nbvofhknbzusykztlxwms\\r\\nbpbfmvjaimkdeddy\\r\\neofhknbzusykztlxwms\\r\\nmhivpkxkpazimkdeddy\\r\\negvywnhmfngllaknmn\\r\\nmblkvhenlggoftwjgk\\r\\nzegvywnhmfngllaknmn\\r\\ngrdenlggoftwjgk\\r\\n', 'output': ['abab\\r\\n']}, {'input': '7 3\\r\\nferwljzwakxedlgwl\\r\\noerwljzwakxedlgwl\\r\\nhyqombizhuhxedprb\\r\\netptjrizhuhxedprb\\r\\nurtuckar\\r\\ndkartmwramklcmi\\r\\nrurtuckar\\r\\nnurartmwramklcmi\\r\\niraziomsv\\r\\nsaziomsv\\r\\nbprapiqpayzurgij\\r\\nusyemayzurgij\\r\\nztstmeecvmkvuu\\r\\nquexlecvmkvuu\\r\\nrlhwecvmkvuu\\r\\nzecvmkvuu\\r\\niikymgbncljtub\\r\\nqiikymgbncljtub\\r\\nbcavhexqamyszgfya\\r\\nojexqamyszgfya\\r\\nieyxqinjinjv\\r\\nxtiudieyxqinjinjv\\r\\nthtceyxqinjinjv\\r\\nmuneyxqinjinjv\\r\\nwreae\\r\\nqylcjhjzfhteae\\r\\nozcjthgyuchqo\\r\\nfcjozcjthgyuchqo\\r\\n', 'output': ['NO\\r\\n']}, {'input': '16 1\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\nu\\r\\ni\\r\\ni\\r\\no\\r\\na\\r\\na\\r\\no\\r\\na\\r\\ni\\r\\na\\r\\na\\r\\ni\\r\\ni\\r\\no\\r\\no\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\nu\\r\\nu\\r\\nu\\r\\nu\\r\\no\\r\\ne\\r\\ne\\r\\ne\\r\\no\\r\\ni\\r\\no\\r\\ni\\r\\na\\r\\na\\r\\na\\r\\na\\r\\nu\\r\\no\\r\\no\\r\\nu\\r\\ni\\r\\no\\r\\no\\r\\ni\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\no\\r\\na\\r\\na\\r\\nu\\r\\na\\r\\nu\\r\\nu\\r\\n', 'output': ['NO\\r\\n']}, {'input': '16 1\\r\\neb\\r\\neb\\r\\nfe\\r\\nce\\r\\ner\\r\\ner\\r\\new\\r\\new\\r\\nu\\r\\ncu\\r\\nu\\r\\nu\\r\\nud\\r\\nik\\r\\nud\\r\\nik\\r\\nve\\r\\niw\\r\\niw\\r\\nne\\r\\nel\\r\\nob\\r\\nel\\r\\nob\\r\\no\\r\\neo\\r\\no\\r\\nyo\\r\\nav\\r\\nav\\r\\nei\\r\\nmi\\r\\nu\\r\\noh\\r\\noh\\r\\nzu\\r\\niw\\r\\niw\\r\\na\\r\\nma\\r\\ni\\r\\nu\\r\\nku\\r\\ngi\\r\\nac\\r\\no\\r\\no\\r\\nac\\r\\ni\\r\\ner\\r\\nai\\r\\ner\\r\\nyu\\r\\nuf\\r\\nuf\\r\\nhu\\r\\nef\\r\\nef\\r\\nef\\r\\nef\\r\\nmu\\r\\nu\\r\\nqe\\r\\nie\\r\\n', 'output': ['NO\\r\\n']}, {'input': '25 1\\r\\nw\\r\\ni\\r\\nv\\r\\nx\\r\\nh\\r\\ns\\r\\nz\\r\\ny\\r\\no\\r\\nn\\r\\nh\\r\\ni\\r\\nf\\r\\nf\\r\\ny\\r\\nr\\r\\nb\\r\\nu\\r\\no\\r\\np\\r\\nz\\r\\nh\\r\\nt\\r\\no\\r\\nw\\r\\nx\\r\\nh\\r\\no\\r\\nj\\r\\ny\\r\\nw\\r\\nj\\r\\ny\\r\\nh\\r\\nh\\r\\nr\\r\\ns\\r\\nb\\r\\ny\\r\\nr\\r\\nw\\r\\no\\r\\nl\\r\\nl\\r\\nh\\r\\nh\\r\\nw\\r\\nu\\r\\na\\r\\nv\\r\\no\\r\\nx\\r\\nd\\r\\nw\\r\\nc\\r\\nf\\r\\ni\\r\\ne\\r\\nj\\r\\nq\\r\\nk\\r\\na\\r\\ne\\r\\nl\\r\\nw\\r\\nm\\r\\nf\\r\\na\\r\\nc\\r\\na\\r\\nb\\r\\nf\\r\\nj\\r\\nb\\r\\nx\\r\\ni\\r\\nx\\r\\ne\\r\\nu\\r\\nh\\r\\nm\\r\\no\\r\\ni\\r\\nq\\r\\nm\\r\\nk\\r\\nn\\r\\nd\\r\\nl\\r\\np\\r\\nc\\r\\nw\\r\\nu\\r\\nz\\r\\nc\\r\\nk\\r\\ng\\r\\ny\\r\\nj\\r\\ny\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\ne\\r\\ne\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\na\\r\\ne\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\ne\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\ne\\r\\na\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\ne\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '1 2\\r\\neraub\\r\\nbee\\r\\naab\\r\\nttbee\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ny\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 2\\r\\neeereaatktb\\r\\nbee\\r\\niaattb\\r\\nottbee\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nab\\r\\nac\\r\\nad\\r\\naf\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nar\\r\\nat\\r\\nay\\r\\naw\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ni\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\nabbbbbbbbbbbbbbbbcbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbfbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbxbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbdbbbbbbbbbbbbbbbb\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\nbug\\r\\nsuy\\r\\nluh\\r\\ngut\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nam\\r\\nat\\r\\nan\\r\\nag\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 4\\r\\naieoabcd\\r\\naeioabcd\\r\\naoeiabcd\\r\\naoieabcd\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 2\\r\\naec\\r\\naed\\r\\naek\\r\\naem\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nar\\r\\nab\\r\\nak\\r\\naz\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\nb\\r\\nb\\r\\nb\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nchar q[10005][10];\nint main() {\n  int n, m;\n  cin >> n >> m;\n  for (int i = 0; i < 10005; i++) q[i][0] = '\\0';\n  for (int i = 1; i <= n * 4; i++) {\n    cin >> q[i];\n  }\n  for (int i = 1; i <= n * 4; i++) {\n    for (int j = 0; j < m; j++)\n      if (q[i][j] == q[i - n * 4 + 1][j]) goto l;\n    puts(\"aaaa\");\n    return 0;\n  l:;\n  }\n  for (int i = 1; i <= n * 4; i++)\n    if (q[i][0]!= q[i - 1][0]) {\n      puts(\"NO\");\n      return 0;\n    }\n  if (n == 1)\n    printf(\"aaaa\\n\");\n  else if (n == 2)\n    printf(\"aabb\\n\");\n  else if (n == 3)\n    printf(\"abab\\n\");\n  else if (n == 4)\n    printf(\"abba\\n\");\n}\n"}
{"src_uid": "a17bac596b1f060209534cbffdf0f40e", "id": 39, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 1\\r\\nday\\r\\nmay\\r\\nsun\\r\\nfun\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\nday\\r\\nmay\\r\\ngray\\r\\nway\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '2 1\\r\\nday\\r\\nmay\\r\\nsun\\r\\nfun\\r\\ntest\\r\\nhill\\r\\nfest\\r\\nthrill\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 5\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nrezwbgy\\r\\nxakgmv\\r\\njogezwbgy\\r\\napezwbgy\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\nnuqfxwrb\\r\\napqfkw\\r\\nuqfxwrb\\r\\nnhcuqfxwrb\\r\\nogkznwncmt\\r\\nevf\\r\\nogkznwncmt\\r\\nogkznwncmt\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\naawjvkxx\\r\\nawjvkxx\\r\\nxawjvkxx\\r\\nawjvkxx\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '2 2\\r\\nrhcujgxabk\\r\\nnjgdqpurul\\r\\nueoedt\\r\\ncpcfhbyvo\\r\\nzmfwnieog\\r\\npkpylassbf\\r\\nhrfeod\\r\\ncdwuil\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\nol\\r\\nol\\r\\nol\\r\\nzol\\r\\nek\\r\\nek\\r\\nek\\r\\nqek\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '3 2\\r\\nexdaoao\\r\\nrdwunurp\\r\\ndunurp\\r\\ntyqzuxao\\r\\ndupocgsps\\r\\nzsiravcm\\r\\nnqiravcm\\r\\nlnupocgsps\\r\\niwashk\\r\\neepkqcykbv\\r\\nyviwashk\\r\\neepkqcykbv\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\ndaihacbnhgfts\\r\\nsqihpntjvczkw\\r\\nmihpntjvczkw\\r\\nvyacbnhgfts\\r\\ntsvovdpqajmgvcj\\r\\ncexqkwrvctomb\\r\\njxbomb\\r\\ngnpajmgvcj\\r\\n', 'output': ['abba\\r\\n']}, {'input': '3 2\\r\\netba\\r\\ntfecetba\\r\\nzkitbgcuuy\\r\\nuuy\\r\\nbuxeoi\\r\\nmekxoi\\r\\nblviwoehy\\r\\niwoehy\\r\\njyfpaqntiz\\r\\nqvaqntiz\\r\\nhciak\\r\\niak\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '4 3\\r\\niixxiojrrdytjcbkvymw\\r\\nbjqixxiojrrdytjcbkvymw\\r\\nogjixxiojrrdytjcbkvymw\\r\\nevixxpfxpgicpg\\r\\njkotitixiughfhphliuurx\\r\\ngyubkqtonejprfjzvqxbdpn\\r\\ndpudxfoqnhekjytbwiuurx\\r\\noubkqtonejprfjzvqxbdpn\\r\\npgzaendrxjhsfzjmijv\\r\\npomuaendrxjhsfzjmijv\\r\\nafyuyxueaendrxjhsfzjmijv\\r\\naendrxjhsfzjmijv\\r\\nyubweicj\\r\\ntbnsuxqigmxdfnmbipubweicj\\r\\nfuftydlmoo\\r\\nmdkuftydlmoo\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 2\\r\\nqurcmcbxyoddgyyccsmb\\r\\nlsdzsqoa\\r\\neurcmcbxyoddgyyccsmb\\r\\noa\\r\\nutyxmdhcvaclynmstwsx\\r\\nmkyycelbmkmdrilmbvr\\r\\nutyxmdhcvaclynmstwsx\\r\\nrduyelbmkmdrilmbvr\\r\\nhmguhvqswwciowwgu\\r\\nnoe\\r\\nzmyncuwrowwgu\\r\\nqrhymghavvbmigzsjoe\\r\\nbvofhknbzusykztlxwms\\r\\nbpbfmvjaimkdeddy\\r\\neofhknbzusykztlxwms\\r\\nmhivpkxkpazimkdeddy\\r\\negvywnhmfngllaknmn\\r\\nmblkvhenlggoftwjgk\\r\\nzegvywnhmfngllaknmn\\r\\ngrdenlggoftwjgk\\r\\n', 'output': ['abab\\r\\n']}, {'input': '7 3\\r\\nferwljzwakxedlgwl\\r\\noerwljzwakxedlgwl\\r\\nhyqombizhuhxedprb\\r\\netptjrizhuhxedprb\\r\\nurtuckar\\r\\ndkartmwramklcmi\\r\\nrurtuckar\\r\\nnurartmwramklcmi\\r\\niraziomsv\\r\\nsaziomsv\\r\\nbprapiqpayzurgij\\r\\nusyemayzurgij\\r\\nztstmeecvmkvuu\\r\\nquexlecvmkvuu\\r\\nrlhwecvmkvuu\\r\\nzecvmkvuu\\r\\niikymgbncljtub\\r\\nqiikymgbncljtub\\r\\nbcavhexqamyszgfya\\r\\nojexqamyszgfya\\r\\nieyxqinjinjv\\r\\nxtiudieyxqinjinjv\\r\\nthtceyxqinjinjv\\r\\nmuneyxqinjinjv\\r\\nwreae\\r\\nqylcjhjzfhteae\\r\\nozcjthgyuchqo\\r\\nfcjozcjthgyuchqo\\r\\n', 'output': ['NO\\r\\n']}, {'input': '16 1\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\nu\\r\\ni\\r\\ni\\r\\no\\r\\na\\r\\na\\r\\no\\r\\na\\r\\ni\\r\\na\\r\\na\\r\\ni\\r\\ni\\r\\no\\r\\no\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\nu\\r\\nu\\r\\nu\\r\\nu\\r\\no\\r\\ne\\r\\ne\\r\\ne\\r\\no\\r\\ni\\r\\no\\r\\ni\\r\\na\\r\\na\\r\\na\\r\\na\\r\\nu\\r\\no\\r\\no\\r\\nu\\r\\ni\\r\\no\\r\\no\\r\\ni\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\no\\r\\na\\r\\na\\r\\nu\\r\\na\\r\\nu\\r\\nu\\r\\n', 'output': ['NO\\r\\n']}, {'input': '16 1\\r\\neb\\r\\neb\\r\\nfe\\r\\nce\\r\\ner\\r\\ner\\r\\new\\r\\new\\r\\nu\\r\\ncu\\r\\nu\\r\\nu\\r\\nud\\r\\nik\\r\\nud\\r\\nik\\r\\nve\\r\\niw\\r\\niw\\r\\nne\\r\\nel\\r\\nob\\r\\nel\\r\\nob\\r\\no\\r\\neo\\r\\no\\r\\nyo\\r\\nav\\r\\nav\\r\\nei\\r\\nmi\\r\\nu\\r\\noh\\r\\noh\\r\\nzu\\r\\niw\\r\\niw\\r\\na\\r\\nma\\r\\ni\\r\\nu\\r\\nku\\r\\ngi\\r\\nac\\r\\no\\r\\no\\r\\nac\\r\\ni\\r\\ner\\r\\nai\\r\\ner\\r\\nyu\\r\\nuf\\r\\nuf\\r\\nhu\\r\\nef\\r\\nef\\r\\nef\\r\\nef\\r\\nmu\\r\\nu\\r\\nqe\\r\\nie\\r\\n', 'output': ['NO\\r\\n']}, {'input': '25 1\\r\\nw\\r\\ni\\r\\nv\\r\\nx\\r\\nh\\r\\ns\\r\\nz\\r\\ny\\r\\no\\r\\nn\\r\\nh\\r\\ni\\r\\nf\\r\\nf\\r\\ny\\r\\nr\\r\\nb\\r\\nu\\r\\no\\r\\np\\r\\nz\\r\\nh\\r\\nt\\r\\no\\r\\nw\\r\\nx\\r\\nh\\r\\no\\r\\nj\\r\\ny\\r\\nw\\r\\nj\\r\\ny\\r\\nh\\r\\nh\\r\\nr\\r\\ns\\r\\nb\\r\\ny\\r\\nr\\r\\nw\\r\\no\\r\\nl\\r\\nl\\r\\nh\\r\\nh\\r\\nw\\r\\nu\\r\\na\\r\\nv\\r\\no\\r\\nx\\r\\nd\\r\\nw\\r\\nc\\r\\nf\\r\\ni\\r\\ne\\r\\nj\\r\\nq\\r\\nk\\r\\na\\r\\ne\\r\\nl\\r\\nw\\r\\nm\\r\\nf\\r\\na\\r\\nc\\r\\na\\r\\nb\\r\\nf\\r\\nj\\r\\nb\\r\\nx\\r\\ni\\r\\nx\\r\\ne\\r\\nu\\r\\nh\\r\\nm\\r\\no\\r\\ni\\r\\nq\\r\\nm\\r\\nk\\r\\nn\\r\\nd\\r\\nl\\r\\np\\r\\nc\\r\\nw\\r\\nu\\r\\nz\\r\\nc\\r\\nk\\r\\ng\\r\\ny\\r\\nj\\r\\ny\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\ne\\r\\ne\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\na\\r\\ne\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\ne\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\ne\\r\\na\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\ne\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '1 2\\r\\neraub\\r\\nbee\\r\\naab\\r\\nttbee\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ny\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 2\\r\\neeereaatktb\\r\\nbee\\r\\niaattb\\r\\nottbee\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nab\\r\\nac\\r\\nad\\r\\naf\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nar\\r\\nat\\r\\nay\\r\\naw\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ni\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\nabbbbbbbbbbbbbbbbcbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbfbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbxbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbdbbbbbbbbbbbbbbbb\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\nbug\\r\\nsuy\\r\\nluh\\r\\ngut\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nam\\r\\nat\\r\\nan\\r\\nag\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 4\\r\\naieoabcd\\r\\naeioabcd\\r\\naoeiabcd\\r\\naoieabcd\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 2\\r\\naec\\r\\naed\\r\\naek\\r\\naem\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nar\\r\\nab\\r\\nak\\r\\naz\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\nb\\r\\nb\\r\\nb\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  char rhyme[4][26] = {};\n  int n, k;\n  cin >> n >> k;\n  int n4 = n * 4;\n  vector<string> s(n4);\n  for (int i = 0; i < n4; i++) cin >> s[i];\n  for (int i = 0; i < n4; i += 4) {\n    for (int j = 0; j < 4; j++) {\n      if (s[i + j][k - 1] == s[i + ((j + 1) % 4)][k - 1]) rhyme[j / 2][0]++;\n      if (s[i + j][k - 1] == s[i + ((j + 2) % 4)][k - 1]) rhyme[j / 2][1]++;\n      if (s[i + ((j + 1) % 4)][k - 1] == s[i + ((j + 2) % 4)][k - 1])\n        rhyme[j / 2][2]++;\n    }\n  }\n  if (rhyme[0][0] > 0 && rhyme[0][1] > 0 && rhyme[0][2] == 0 &&\n      rhyme[1][0] > 0 && rhyme[1][1] == 0 && rhyme[1][2] > 0 &&\n      rhyme[2][0] == 0 && rhyme[2][1] > 0 && rhyme[2][2] == 0)\n    puts(\"aabb\");\n  else if (rhyme[0][0] == 0 && rhyme[0][1] > 0 && rhyme[0][2] == 0 &&\n           rhyme[1][0] > 0 && rhyme[1][1] == 0 && rhyme[1][2] > 0 &&\n           rhyme[2][0] > 0 && rhyme[2][1] == 0 && rhyme[2][2] == 0)\n    puts(\"abab\");\n  else if (rhyme[0][0] > 0 && rhyme[0][1] > 0 && rhyme[0][2] == 0 &&\n           rhyme[1][0] > 0 && rhyme[1][1] == 0 && rhyme[1][2] > 0 &&\n           rhyme[2][0] == 0 && rhyme[2][1] == 0 && rhyme[2][2] == 0)\n    puts(\"abba\");\n  else if (rhyme[0][0] == 0 && rhyme[0][1] == 0 && rhyme[0][2] == 0 &&\n           rhyme[1][0] == 0 && rhyme[1][1] == 0 && rhyme[1][2] == 0 &&\n           rhyme[2][0] == 0 && rhyme[2][1] == 0 && rhyme[2][2] == 0)\n    puts(\"aaaa\");\n  else\n    puts(\"NO\");\n}\n"}
{"src_uid": "7adb8bf6879925955bf187c3d05fde8c", "id": 40, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1800, "testcases": "[{'input': '1 3\\r\\n', 'output': ['0.50000000000000000', '0.500000000', '0.5', '0.5000000000']}, {'input': '5 5\\r\\n', 'output': ['0.65873015873015872', '0.65873015873', '0.6587301587301587', '0.658730159', '0.6587301587']}, {'input': '100 100\\r\\n', 'output': ['0.666295063', '0.66629506318483356', '0.666295063185', '0.6662950632', '0.6662950631848336']}, {'input': '100 1\\r\\n', 'output': ['0.990099010', '0.99009900990099009', '0.990099009901', '0.9900990099', '0.9900990099009901']}, {'input': '1 100\\r\\n', 'output': ['0.3366336634', '0.336633663', '0.336633663366', '0.33663366336633649', '0.3366336633663366', '0.3366336633663367']}, {'input': '67 420\\r\\n', 'output': ['0.5368972272908603', '0.5368972272908604', '0.5368972273', '0.536897227291', '0.53689722729086042', '0.536897227']}, {'input': '0 1000\\r\\n', 'output': ['0.0000000000', '0', '0.00000000000000000', '0.0', '0.000000000']}, {'input': '1000 0\\r\\n', 'output': ['1.00000000000000000', '1', '1.000000000', '1.0', '1.0000000000']}, {'input': '0 0\\r\\n', 'output': ['0.0000000000', '0', '0.00000000000000000', '0.0', '0.000000000']}, {'input': '1000 1000\\r\\n', 'output': ['0.666629617285', '0.66662961728533077', '0.6666296173', '0.666629617', '0.6666296172853308']}, {'input': '32 1000\\r\\n', 'output': ['0.5078702016771944', '0.507870202', '0.507870201677', '0.5078702017', '0.5078702016771942', '0.50787020167719410']}, {'input': '581 406\\r\\n', 'output': ['0.7084553684', '0.7084553684006947', '0.708455368401', '0.7084553684006948', '0.708455368', '0.70845536840069478']}, {'input': '459 52\\r\\n', 'output': ['0.907503321894', '0.907503322', '0.90750332189447191', '0.9075033218944719', '0.9075033219']}, {'input': '900 853\\r\\n', 'output': ['0.6726350392594106', '0.672635039259', '0.672635039', '0.6726350393', '0.67263503925941059']}, {'input': '778 218\\r\\n', 'output': ['0.8203333918681067', '0.8203333919', '0.820333391868', '0.82033339186810672', '0.820333392']}, {'input': '219 20\\r\\n', 'output': ['0.9225253192', '0.922525319170874', '0.922525319', '0.922525319171', '0.92252531917087399']}, {'input': '815 665\\r\\n', 'output': ['0.689921744986', '0.6899217450', '0.689921745', '0.6899217449860069', '0.68992174498600689']}, {'input': '773 467\\r\\n', 'output': ['0.726347986720404', '0.72634798672', '0.726347987', '0.7263479867', '0.72634798672040402']}, {'input': '215 269\\r\\n', 'output': ['0.6426266719', '0.642626671934', '0.642626672', '0.6426266719343681', '0.64262667193436807']}, {'input': '93 633\\r\\n', 'output': ['0.534192877', '0.5341928774', '0.534192877408', '0.53419287740827071', '0.5341928774082707']}, {'input': '267 270\\r\\n', 'output': ['0.665290172151', '0.665290172', '0.66529017215098862', '0.6652901721509885', '0.6652901722']}, {'input': '226 72\\r\\n', 'output': ['0.8050825614', '0.805082561415', '0.805082561', '0.80508256141467871', '0.8050825614146787']}, {'input': '666 436\\r\\n', 'output': ['0.71643507071908719', '0.716435071', '0.716435070719', '0.7164350707', '0.7164350707190872']}, {'input': '544 519\\r\\n', 'output': ['0.67186290453', '0.6718629045300779', '0.67186290453007791', '0.6718629045300778', '0.6718629045', '0.671862905']}, {'input': '141 883\\r\\n', 'output': ['0.536951106658', '0.53695110665839563', '0.5369511066583957', '0.536951107', '0.5369511067', '0.5369511066583955']}, {'input': '581 685\\r\\n', 'output': ['0.6488443851199316', '0.648844385', '0.64884438511993159', '0.6488443851', '0.6488443851199317', '0.64884438512']}, {'input': '459 487\\r\\n', 'output': ['0.660077509985', '0.660077509985014', '0.660077510', '0.66007750998501402', '0.6600775100']}, {'input': '980 133\\r\\n', 'output': ['0.89319092020478941', '0.8931909202', '0.8931909202047894', '0.893190920', '0.893190920205']}, {'input': '858 934\\r\\n', 'output': ['0.65733386720916775', '0.6573338672', '0.657333867209', '0.657333867', '0.6573338672091678']}, {'input': '455 299\\r\\n', 'output': ['0.7159327199974443', '0.7159327200', '0.715932720', '0.7159327199974445', '0.71593271999744446', '0.715932719997']}, {'input': '962 35\\r\\n', 'output': ['0.966054554', '0.96605455396450646', '0.9660545539645065', '0.966054553965', '0.9660545540']}, {'input': '840 837\\r\\n', 'output': ['0.6670201719', '0.6670201719431644', '0.667020172', '0.66702017194316443', '0.667020171943', '0.6670201719431645']}, {'input': '1000 483\\r\\n', 'output': ['0.75425988826697099', '0.7542598882669711', '0.754259888267', '0.754259888266971', '0.7542598883', '0.754259888']}, {'input': '958 285\\r\\n', 'output': ['0.81340504954416115', '0.813405050', '0.8134050495', '0.813405049544', '0.8134050495441612']}, {'input': '399 649\\r\\n', 'output': ['0.617507391', '0.617507391371', '0.61750739137083666', '0.6175073914', '0.6175073913708367']}, {'input': '277 451\\r\\n', 'output': ['0.61739616069488457', '0.617396161', '0.6173961607', '0.617396160695', '0.6173961606948846']}, {'input': '155 534\\r\\n', 'output': ['0.563323504', '0.5633235039', '0.56332350392237707', '0.5633235039223771', '0.563323503922', '0.563323503922377']}, {'input': '315 898\\r\\n', 'output': ['0.57457911437025666', '0.574579114', '0.5745791144', '0.57457911437', '0.5745791143702565']}, {'input': '193 700\\r\\n', 'output': ['0.5605440989561413', '0.5605440989561412', '0.560544099', '0.56054409895614132', '0.560544098956', '0.5605440990']}, {'input': '713 65\\r\\n', 'output': ['0.9228168302093307', '0.922816830209', '0.9228168302', '0.922816830', '0.92281683020933070']}, {'input': '377 720\\r\\n', 'output': ['0.60369716809047824', '0.603697168', '0.6036971681', '0.6036971680904782', '0.60369716809', '0.6036971680904784']}, {'input': '817 522\\r\\n', 'output': ['0.7194394264554227', '0.719439426', '0.7194394265', '0.71943942645542269', '0.719439426455']}, {'input': '695 168\\r\\n', 'output': ['0.8369446556', '0.836944655612', '0.836944656', '0.8369446556124126', '0.83694465561241260']}, {'input': '574 969\\r\\n', 'output': ['0.61421649332134520', '0.6142164933213452', '0.6142164933', '0.614216493321', '0.614216493']}, {'input': '95 334\\r\\n', 'output': ['0.5621827921', '0.562182792', '0.56218279214960909', '0.562182792149609', '0.56218279215']}, {'input': '691 417\\r\\n', 'output': ['0.726476058', '0.726476058107', '0.72647605810741833', '0.7264760581', '0.7264760581074183']}, {'input': '132 781\\r\\n', 'output': ['0.53893982877953017', '0.53893982878', '0.538939829', '0.5389398287795302', '0.5389398288']}, {'input': '10 583\\r\\n', 'output': ['0.5042409294514335', '0.504240929', '0.504240929451434', '0.504240929451', '0.5042409295', '0.50424092945143373']}, {'input': '888 385\\r\\n', 'output': ['0.767717438', '0.7677174382', '0.767717438191', '0.76771743819087279', '0.7677174381908728']}, {'input': '329 31\\r\\n', 'output': ['0.9205443823', '0.92054438231593871', '0.920544382', '0.9205443823159387', '0.920544382316']}, {'input': '73 405\\r\\n', 'output': ['0.541293398', '0.5412933980482019', '0.541293398048', '0.5412933980', '0.54129339804820187', '0.541293398048202']}, {'input': '513 488\\r\\n', 'output': ['0.6721873792029164', '0.672187379203', '0.67218737920291638', '0.672187379', '0.6721873792', '0.6721873792029165']}, {'input': '391 852\\r\\n', 'output': ['0.593281183103', '0.593281183', '0.59328118310294298', '0.593281183102943', '0.5932811831', '0.5932811831029428']}, {'input': '551 654\\r\\n', 'output': ['0.6481418383312834', '0.6481418383', '0.648141838', '0.64814183833128336', '0.648141838331']}, {'input': '429 19\\r\\n', 'output': ['0.95923426755053587', '0.959234268', '0.959234267551', '0.9592342675505359', '0.9592342676']}, {'input': '387 102\\r\\n', 'output': ['0.8272193027', '0.827219302673', '0.82721930267281030', '0.8272193026728103', '0.827219303']}, {'input': '827 466\\r\\n', 'output': ['0.73500588145506107', '0.735005881', '0.735005881455', '0.7350058814550611', '0.7350058815']}, {'input': '705 268\\r\\n', 'output': ['0.78394613169627603', '0.783946131696276', '0.7839461317', '0.783946132', '0.783946131696']}, {'input': '864 70\\r\\n', 'output': ['0.930218970', '0.9302189702459666', '0.9302189702', '0.93021897024596656', '0.930218970246']}, {'input': '743 715\\r\\n', 'output': ['0.670910005048', '0.670910005', '0.6709100050', '0.67091000504834808', '0.6709100050483481']}, {'input': '50 372\\r\\n', 'output': ['0.5314489794456663', '0.53144897944566638', '0.5314489794456665', '0.5314489794', '0.531448979446', '0.531448979']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\ndouble dp[2005][2005];\nint w, b;\ndouble dfs(int nw, int nb) {\n  if (!nw && nb) {\n    return 1;\n  }\n  if (!nw &&!nb) {\n    return 0;\n  }\n  if (dp[nw][nb]!= -1) return dp[nw][nb];\n  double ret = 0;\n  for (int i = nb; i > 0; i--)\n    ret = ret + i / (double)nb * (1 - dfs(nw + 1, i - 1));\n  return dp[nw][nb] = ret;\n}\nint main() {\n  cin >> w >> b;\n  memset(dp, -1, sizeof(dp));\n  cout << setprecision(12) << dfs(w, b);\n  return 0;\n}\n"}
{"src_uid": "7adb8bf6879925955bf187c3d05fde8c", "id": 40, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1800, "testcases": "[{'input': '1 3\\r\\n', 'output': ['0.50000000000000000', '0.500000000', '0.5', '0.5000000000']}, {'input': '5 5\\r\\n', 'output': ['0.65873015873015872', '0.65873015873', '0.6587301587301587', '0.658730159', '0.6587301587']}, {'input': '100 100\\r\\n', 'output': ['0.666295063', '0.66629506318483356', '0.666295063185', '0.6662950632', '0.6662950631848336']}, {'input': '100 1\\r\\n', 'output': ['0.990099010', '0.99009900990099009', '0.990099009901', '0.9900990099', '0.9900990099009901']}, {'input': '1 100\\r\\n', 'output': ['0.3366336634', '0.336633663', '0.336633663366', '0.33663366336633649', '0.3366336633663366', '0.3366336633663367']}, {'input': '67 420\\r\\n', 'output': ['0.5368972272908603', '0.5368972272908604', '0.5368972273', '0.536897227291', '0.53689722729086042', '0.536897227']}, {'input': '0 1000\\r\\n', 'output': ['0.0000000000', '0', '0.00000000000000000', '0.0', '0.000000000']}, {'input': '1000 0\\r\\n', 'output': ['1.00000000000000000', '1', '1.000000000', '1.0', '1.0000000000']}, {'input': '0 0\\r\\n', 'output': ['0.0000000000', '0', '0.00000000000000000', '0.0', '0.000000000']}, {'input': '1000 1000\\r\\n', 'output': ['0.666629617285', '0.66662961728533077', '0.6666296173', '0.666629617', '0.6666296172853308']}, {'input': '32 1000\\r\\n', 'output': ['0.5078702016771944', '0.507870202', '0.507870201677', '0.5078702017', '0.5078702016771942', '0.50787020167719410']}, {'input': '581 406\\r\\n', 'output': ['0.7084553684', '0.7084553684006947', '0.708455368401', '0.7084553684006948', '0.708455368', '0.70845536840069478']}, {'input': '459 52\\r\\n', 'output': ['0.907503321894', '0.907503322', '0.90750332189447191', '0.9075033218944719', '0.9075033219']}, {'input': '900 853\\r\\n', 'output': ['0.6726350392594106', '0.672635039259', '0.672635039', '0.6726350393', '0.67263503925941059']}, {'input': '778 218\\r\\n', 'output': ['0.8203333918681067', '0.8203333919', '0.820333391868', '0.82033339186810672', '0.820333392']}, {'input': '219 20\\r\\n', 'output': ['0.9225253192', '0.922525319170874', '0.922525319', '0.922525319171', '0.92252531917087399']}, {'input': '815 665\\r\\n', 'output': ['0.689921744986', '0.6899217450', '0.689921745', '0.6899217449860069', '0.68992174498600689']}, {'input': '773 467\\r\\n', 'output': ['0.726347986720404', '0.72634798672', '0.726347987', '0.7263479867', '0.72634798672040402']}, {'input': '215 269\\r\\n', 'output': ['0.6426266719', '0.642626671934', '0.642626672', '0.6426266719343681', '0.64262667193436807']}, {'input': '93 633\\r\\n', 'output': ['0.534192877', '0.5341928774', '0.534192877408', '0.53419287740827071', '0.5341928774082707']}, {'input': '267 270\\r\\n', 'output': ['0.665290172151', '0.665290172', '0.66529017215098862', '0.6652901721509885', '0.6652901722']}, {'input': '226 72\\r\\n', 'output': ['0.8050825614', '0.805082561415', '0.805082561', '0.80508256141467871', '0.8050825614146787']}, {'input': '666 436\\r\\n', 'output': ['0.71643507071908719', '0.716435071', '0.716435070719', '0.7164350707', '0.7164350707190872']}, {'input': '544 519\\r\\n', 'output': ['0.67186290453', '0.6718629045300779', '0.67186290453007791', '0.6718629045300778', '0.6718629045', '0.671862905']}, {'input': '141 883\\r\\n', 'output': ['0.536951106658', '0.53695110665839563', '0.5369511066583957', '0.536951107', '0.5369511067', '0.5369511066583955']}, {'input': '581 685\\r\\n', 'output': ['0.6488443851199316', '0.648844385', '0.64884438511993159', '0.6488443851', '0.6488443851199317', '0.64884438512']}, {'input': '459 487\\r\\n', 'output': ['0.660077509985', '0.660077509985014', '0.660077510', '0.66007750998501402', '0.6600775100']}, {'input': '980 133\\r\\n', 'output': ['0.89319092020478941', '0.8931909202', '0.8931909202047894', '0.893190920', '0.893190920205']}, {'input': '858 934\\r\\n', 'output': ['0.65733386720916775', '0.6573338672', '0.657333867209', '0.657333867', '0.6573338672091678']}, {'input': '455 299\\r\\n', 'output': ['0.7159327199974443', '0.7159327200', '0.715932720', '0.7159327199974445', '0.71593271999744446', '0.715932719997']}, {'input': '962 35\\r\\n', 'output': ['0.966054554', '0.96605455396450646', '0.9660545539645065', '0.966054553965', '0.9660545540']}, {'input': '840 837\\r\\n', 'output': ['0.6670201719', '0.6670201719431644', '0.667020172', '0.66702017194316443', '0.667020171943', '0.6670201719431645']}, {'input': '1000 483\\r\\n', 'output': ['0.75425988826697099', '0.7542598882669711', '0.754259888267', '0.754259888266971', '0.7542598883', '0.754259888']}, {'input': '958 285\\r\\n', 'output': ['0.81340504954416115', '0.813405050', '0.8134050495', '0.813405049544', '0.8134050495441612']}, {'input': '399 649\\r\\n', 'output': ['0.617507391', '0.617507391371', '0.61750739137083666', '0.6175073914', '0.6175073913708367']}, {'input': '277 451\\r\\n', 'output': ['0.61739616069488457', '0.617396161', '0.6173961607', '0.617396160695', '0.6173961606948846']}, {'input': '155 534\\r\\n', 'output': ['0.563323504', '0.5633235039', '0.56332350392237707', '0.5633235039223771', '0.563323503922', '0.563323503922377']}, {'input': '315 898\\r\\n', 'output': ['0.57457911437025666', '0.574579114', '0.5745791144', '0.57457911437', '0.5745791143702565']}, {'input': '193 700\\r\\n', 'output': ['0.5605440989561413', '0.5605440989561412', '0.560544099', '0.56054409895614132', '0.560544098956', '0.5605440990']}, {'input': '713 65\\r\\n', 'output': ['0.9228168302093307', '0.922816830209', '0.9228168302', '0.922816830', '0.92281683020933070']}, {'input': '377 720\\r\\n', 'output': ['0.60369716809047824', '0.603697168', '0.6036971681', '0.6036971680904782', '0.60369716809', '0.6036971680904784']}, {'input': '817 522\\r\\n', 'output': ['0.7194394264554227', '0.719439426', '0.7194394265', '0.71943942645542269', '0.719439426455']}, {'input': '695 168\\r\\n', 'output': ['0.8369446556', '0.836944655612', '0.836944656', '0.8369446556124126', '0.83694465561241260']}, {'input': '574 969\\r\\n', 'output': ['0.61421649332134520', '0.6142164933213452', '0.6142164933', '0.614216493321', '0.614216493']}, {'input': '95 334\\r\\n', 'output': ['0.5621827921', '0.562182792', '0.56218279214960909', '0.562182792149609', '0.56218279215']}, {'input': '691 417\\r\\n', 'output': ['0.726476058', '0.726476058107', '0.72647605810741833', '0.7264760581', '0.7264760581074183']}, {'input': '132 781\\r\\n', 'output': ['0.53893982877953017', '0.53893982878', '0.538939829', '0.5389398287795302', '0.5389398288']}, {'input': '10 583\\r\\n', 'output': ['0.5042409294514335', '0.504240929', '0.504240929451434', '0.504240929451', '0.5042409295', '0.50424092945143373']}, {'input': '888 385\\r\\n', 'output': ['0.767717438', '0.7677174382', '0.767717438191', '0.76771743819087279', '0.7677174381908728']}, {'input': '329 31\\r\\n', 'output': ['0.9205443823', '0.92054438231593871', '0.920544382', '0.9205443823159387', '0.920544382316']}, {'input': '73 405\\r\\n', 'output': ['0.541293398', '0.5412933980482019', '0.541293398048', '0.5412933980', '0.54129339804820187', '0.541293398048202']}, {'input': '513 488\\r\\n', 'output': ['0.6721873792029164', '0.672187379203', '0.67218737920291638', '0.672187379', '0.6721873792', '0.6721873792029165']}, {'input': '391 852\\r\\n', 'output': ['0.593281183103', '0.593281183', '0.59328118310294298', '0.593281183102943', '0.5932811831', '0.5932811831029428']}, {'input': '551 654\\r\\n', 'output': ['0.6481418383312834', '0.6481418383', '0.648141838', '0.64814183833128336', '0.648141838331']}, {'input': '429 19\\r\\n', 'output': ['0.95923426755053587', '0.959234268', '0.959234267551', '0.9592342675505359', '0.9592342676']}, {'input': '387 102\\r\\n', 'output': ['0.8272193027', '0.827219302673', '0.82721930267281030', '0.8272193026728103', '0.827219303']}, {'input': '827 466\\r\\n', 'output': ['0.73500588145506107', '0.735005881', '0.735005881455', '0.7350058814550611', '0.7350058815']}, {'input': '705 268\\r\\n', 'output': ['0.78394613169627603', '0.783946131696276', '0.7839461317', '0.783946132', '0.783946131696']}, {'input': '864 70\\r\\n', 'output': ['0.930218970', '0.9302189702459666', '0.9302189702', '0.93021897024596656', '0.930218970246']}, {'input': '743 715\\r\\n', 'output': ['0.670910005048', '0.670910005', '0.6709100050', '0.67091000504834808', '0.6709100050483481']}, {'input': '50 372\\r\\n', 'output': ['0.5314489794456663', '0.53144897944566638', '0.5314489794456665', '0.5314489794', '0.531448979446', '0.531448979']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long w, b;\n  cin >> w >> b;\n  double ans = w, now;\n  for (long long i = 1; i <= b; i++) {\n    now = ans / (i + w);\n    ans += (ans) * now;\n  }\n  printf(\"%.9lf\\n\", ans);\n}\n"}
{"src_uid": "7adb8bf6879925955bf187c3d05fde8c", "id": 40, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1800, "testcases": "[{'input': '1 3\\r\\n', 'output': ['0.50000000000000000', '0.500000000', '0.5', '0.5000000000']}, {'input': '5 5\\r\\n', 'output': ['0.65873015873015872', '0.65873015873', '0.6587301587301587', '0.658730159', '0.6587301587']}, {'input': '100 100\\r\\n', 'output': ['0.666295063', '0.66629506318483356', '0.666295063185', '0.6662950632', '0.6662950631848336']}, {'input': '100 1\\r\\n', 'output': ['0.990099010', '0.99009900990099009', '0.990099009901', '0.9900990099', '0.9900990099009901']}, {'input': '1 100\\r\\n', 'output': ['0.3366336634', '0.336633663', '0.336633663366', '0.33663366336633649', '0.3366336633663366', '0.3366336633663367']}, {'input': '67 420\\r\\n', 'output': ['0.5368972272908603', '0.5368972272908604', '0.5368972273', '0.536897227291', '0.53689722729086042', '0.536897227']}, {'input': '0 1000\\r\\n', 'output': ['0.0000000000', '0', '0.00000000000000000', '0.0', '0.000000000']}, {'input': '1000 0\\r\\n', 'output': ['1.00000000000000000', '1', '1.000000000', '1.0', '1.0000000000']}, {'input': '0 0\\r\\n', 'output': ['0.0000000000', '0', '0.00000000000000000', '0.0', '0.000000000']}, {'input': '1000 1000\\r\\n', 'output': ['0.666629617285', '0.66662961728533077', '0.6666296173', '0.666629617', '0.6666296172853308']}, {'input': '32 1000\\r\\n', 'output': ['0.5078702016771944', '0.507870202', '0.507870201677', '0.5078702017', '0.5078702016771942', '0.50787020167719410']}, {'input': '581 406\\r\\n', 'output': ['0.7084553684', '0.7084553684006947', '0.708455368401', '0.7084553684006948', '0.708455368', '0.70845536840069478']}, {'input': '459 52\\r\\n', 'output': ['0.907503321894', '0.907503322', '0.90750332189447191', '0.9075033218944719', '0.9075033219']}, {'input': '900 853\\r\\n', 'output': ['0.6726350392594106', '0.672635039259', '0.672635039', '0.6726350393', '0.67263503925941059']}, {'input': '778 218\\r\\n', 'output': ['0.8203333918681067', '0.8203333919', '0.820333391868', '0.82033339186810672', '0.820333392']}, {'input': '219 20\\r\\n', 'output': ['0.9225253192', '0.922525319170874', '0.922525319', '0.922525319171', '0.92252531917087399']}, {'input': '815 665\\r\\n', 'output': ['0.689921744986', '0.6899217450', '0.689921745', '0.6899217449860069', '0.68992174498600689']}, {'input': '773 467\\r\\n', 'output': ['0.726347986720404', '0.72634798672', '0.726347987', '0.7263479867', '0.72634798672040402']}, {'input': '215 269\\r\\n', 'output': ['0.6426266719', '0.642626671934', '0.642626672', '0.6426266719343681', '0.64262667193436807']}, {'input': '93 633\\r\\n', 'output': ['0.534192877', '0.5341928774', '0.534192877408', '0.53419287740827071', '0.5341928774082707']}, {'input': '267 270\\r\\n', 'output': ['0.665290172151', '0.665290172', '0.66529017215098862', '0.6652901721509885', '0.6652901722']}, {'input': '226 72\\r\\n', 'output': ['0.8050825614', '0.805082561415', '0.805082561', '0.80508256141467871', '0.8050825614146787']}, {'input': '666 436\\r\\n', 'output': ['0.71643507071908719', '0.716435071', '0.716435070719', '0.7164350707', '0.7164350707190872']}, {'input': '544 519\\r\\n', 'output': ['0.67186290453', '0.6718629045300779', '0.67186290453007791', '0.6718629045300778', '0.6718629045', '0.671862905']}, {'input': '141 883\\r\\n', 'output': ['0.536951106658', '0.53695110665839563', '0.5369511066583957', '0.536951107', '0.5369511067', '0.5369511066583955']}, {'input': '581 685\\r\\n', 'output': ['0.6488443851199316', '0.648844385', '0.64884438511993159', '0.6488443851', '0.6488443851199317', '0.64884438512']}, {'input': '459 487\\r\\n', 'output': ['0.660077509985', '0.660077509985014', '0.660077510', '0.66007750998501402', '0.6600775100']}, {'input': '980 133\\r\\n', 'output': ['0.89319092020478941', '0.8931909202', '0.8931909202047894', '0.893190920', '0.893190920205']}, {'input': '858 934\\r\\n', 'output': ['0.65733386720916775', '0.6573338672', '0.657333867209', '0.657333867', '0.6573338672091678']}, {'input': '455 299\\r\\n', 'output': ['0.7159327199974443', '0.7159327200', '0.715932720', '0.7159327199974445', '0.71593271999744446', '0.715932719997']}, {'input': '962 35\\r\\n', 'output': ['0.966054554', '0.96605455396450646', '0.9660545539645065', '0.966054553965', '0.9660545540']}, {'input': '840 837\\r\\n', 'output': ['0.6670201719', '0.6670201719431644', '0.667020172', '0.66702017194316443', '0.667020171943', '0.6670201719431645']}, {'input': '1000 483\\r\\n', 'output': ['0.75425988826697099', '0.7542598882669711', '0.754259888267', '0.754259888266971', '0.7542598883', '0.754259888']}, {'input': '958 285\\r\\n', 'output': ['0.81340504954416115', '0.813405050', '0.8134050495', '0.813405049544', '0.8134050495441612']}, {'input': '399 649\\r\\n', 'output': ['0.617507391', '0.617507391371', '0.61750739137083666', '0.6175073914', '0.6175073913708367']}, {'input': '277 451\\r\\n', 'output': ['0.61739616069488457', '0.617396161', '0.6173961607', '0.617396160695', '0.6173961606948846']}, {'input': '155 534\\r\\n', 'output': ['0.563323504', '0.5633235039', '0.56332350392237707', '0.5633235039223771', '0.563323503922', '0.563323503922377']}, {'input': '315 898\\r\\n', 'output': ['0.57457911437025666', '0.574579114', '0.5745791144', '0.57457911437', '0.5745791143702565']}, {'input': '193 700\\r\\n', 'output': ['0.5605440989561413', '0.5605440989561412', '0.560544099', '0.56054409895614132', '0.560544098956', '0.5605440990']}, {'input': '713 65\\r\\n', 'output': ['0.9228168302093307', '0.922816830209', '0.9228168302', '0.922816830', '0.92281683020933070']}, {'input': '377 720\\r\\n', 'output': ['0.60369716809047824', '0.603697168', '0.6036971681', '0.6036971680904782', '0.60369716809', '0.6036971680904784']}, {'input': '817 522\\r\\n', 'output': ['0.7194394264554227', '0.719439426', '0.7194394265', '0.71943942645542269', '0.719439426455']}, {'input': '695 168\\r\\n', 'output': ['0.8369446556', '0.836944655612', '0.836944656', '0.8369446556124126', '0.83694465561241260']}, {'input': '574 969\\r\\n', 'output': ['0.61421649332134520', '0.6142164933213452', '0.6142164933', '0.614216493321', '0.614216493']}, {'input': '95 334\\r\\n', 'output': ['0.5621827921', '0.562182792', '0.56218279214960909', '0.562182792149609', '0.56218279215']}, {'input': '691 417\\r\\n', 'output': ['0.726476058', '0.726476058107', '0.72647605810741833', '0.7264760581', '0.7264760581074183']}, {'input': '132 781\\r\\n', 'output': ['0.53893982877953017', '0.53893982878', '0.538939829', '0.5389398287795302', '0.5389398288']}, {'input': '10 583\\r\\n', 'output': ['0.5042409294514335', '0.504240929', '0.504240929451434', '0.504240929451', '0.5042409295', '0.50424092945143373']}, {'input': '888 385\\r\\n', 'output': ['0.767717438', '0.7677174382', '0.767717438191', '0.76771743819087279', '0.7677174381908728']}, {'input': '329 31\\r\\n', 'output': ['0.9205443823', '0.92054438231593871', '0.920544382', '0.9205443823159387', '0.920544382316']}, {'input': '73 405\\r\\n', 'output': ['0.541293398', '0.5412933980482019', '0.541293398048', '0.5412933980', '0.54129339804820187', '0.541293398048202']}, {'input': '513 488\\r\\n', 'output': ['0.6721873792029164', '0.672187379203', '0.67218737920291638', '0.672187379', '0.6721873792', '0.6721873792029165']}, {'input': '391 852\\r\\n', 'output': ['0.593281183103', '0.593281183', '0.59328118310294298', '0.593281183102943', '0.5932811831', '0.5932811831029428']}, {'input': '551 654\\r\\n', 'output': ['0.6481418383312834', '0.6481418383', '0.648141838', '0.64814183833128336', '0.648141838331']}, {'input': '429 19\\r\\n', 'output': ['0.95923426755053587', '0.959234268', '0.959234267551', '0.9592342675505359', '0.9592342676']}, {'input': '387 102\\r\\n', 'output': ['0.8272193027', '0.827219302673', '0.82721930267281030', '0.8272193026728103', '0.827219303']}, {'input': '827 466\\r\\n', 'output': ['0.73500588145506107', '0.735005881', '0.735005881455', '0.7350058814550611', '0.7350058815']}, {'input': '705 268\\r\\n', 'output': ['0.78394613169627603', '0.783946131696276', '0.7839461317', '0.783946132', '0.783946131696']}, {'input': '864 70\\r\\n', 'output': ['0.930218970', '0.9302189702459666', '0.9302189702', '0.93021897024596656', '0.930218970246']}, {'input': '743 715\\r\\n', 'output': ['0.670910005048', '0.670910005', '0.6709100050', '0.67091000504834808', '0.6709100050483481']}, {'input': '50 372\\r\\n', 'output': ['0.5314489794456663', '0.53144897944566638', '0.5314489794456665', '0.5314489794', '0.531448979446', '0.531448979']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint read() {\n  char c = getchar();\n  int x = 0;\n  bool neg = false;\n  while (!isdigit(c)) {\n    if (c == '-') neg = true;\n    c = getchar();\n  }\n  while (isdigit(c)) {\n    x = x * 10 + c - '0';\n    c = getchar();\n  }\n  return neg? -x : x;\n}\nint n, m;\ndouble ans;\ndouble solve(int k, int W) {\n  if (W == 0) return 1.0;\n  if (k == 0) return 0;\n  if (W == 1) return 1.0 / k;\n  double s1 = 0;\n  for (int i = 0; i < W; i++) {\n    double a1 = 1.0 * (W - i - 1) / k;\n    double a2 = solve(k - 1, W - i - 1) * (1.0 * i / k);\n    s1 += a1 * a2;\n  }\n  return s1;\n}\nint main() {\n  n = read();\n  m = read();\n  ans = solve(n, m) + solve(m, n);\n  printf(\"%.9lf\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "7adb8bf6879925955bf187c3d05fde8c", "id": 40, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1800, "testcases": "[{'input': '1 3\\r\\n', 'output': ['0.50000000000000000', '0.500000000', '0.5', '0.5000000000']}, {'input': '5 5\\r\\n', 'output': ['0.65873015873015872', '0.65873015873', '0.6587301587301587', '0.658730159', '0.6587301587']}, {'input': '100 100\\r\\n', 'output': ['0.666295063', '0.66629506318483356', '0.666295063185', '0.6662950632', '0.6662950631848336']}, {'input': '100 1\\r\\n', 'output': ['0.990099010', '0.99009900990099009', '0.990099009901', '0.9900990099', '0.9900990099009901']}, {'input': '1 100\\r\\n', 'output': ['0.3366336634', '0.336633663', '0.336633663366', '0.33663366336633649', '0.3366336633663366', '0.3366336633663367']}, {'input': '67 420\\r\\n', 'output': ['0.5368972272908603', '0.5368972272908604', '0.5368972273', '0.536897227291', '0.53689722729086042', '0.536897227']}, {'input': '0 1000\\r\\n', 'output': ['0.0000000000', '0', '0.00000000000000000', '0.0', '0.000000000']}, {'input': '1000 0\\r\\n', 'output': ['1.00000000000000000', '1', '1.000000000', '1.0', '1.0000000000']}, {'input': '0 0\\r\\n', 'output': ['0.0000000000', '0', '0.00000000000000000', '0.0', '0.000000000']}, {'input': '1000 1000\\r\\n', 'output': ['0.666629617285', '0.66662961728533077', '0.6666296173', '0.666629617', '0.6666296172853308']}, {'input': '32 1000\\r\\n', 'output': ['0.5078702016771944', '0.507870202', '0.507870201677', '0.5078702017', '0.5078702016771942', '0.50787020167719410']}, {'input': '581 406\\r\\n', 'output': ['0.7084553684', '0.7084553684006947', '0.708455368401', '0.7084553684006948', '0.708455368', '0.70845536840069478']}, {'input': '459 52\\r\\n', 'output': ['0.907503321894', '0.907503322', '0.90750332189447191', '0.9075033218944719', '0.9075033219']}, {'input': '900 853\\r\\n', 'output': ['0.6726350392594106', '0.672635039259', '0.672635039', '0.6726350393', '0.67263503925941059']}, {'input': '778 218\\r\\n', 'output': ['0.8203333918681067', '0.8203333919', '0.820333391868', '0.82033339186810672', '0.820333392']}, {'input': '219 20\\r\\n', 'output': ['0.9225253192', '0.922525319170874', '0.922525319', '0.922525319171', '0.92252531917087399']}, {'input': '815 665\\r\\n', 'output': ['0.689921744986', '0.6899217450', '0.689921745', '0.6899217449860069', '0.68992174498600689']}, {'input': '773 467\\r\\n', 'output': ['0.726347986720404', '0.72634798672', '0.726347987', '0.7263479867', '0.72634798672040402']}, {'input': '215 269\\r\\n', 'output': ['0.6426266719', '0.642626671934', '0.642626672', '0.6426266719343681', '0.64262667193436807']}, {'input': '93 633\\r\\n', 'output': ['0.534192877', '0.5341928774', '0.534192877408', '0.53419287740827071', '0.5341928774082707']}, {'input': '267 270\\r\\n', 'output': ['0.665290172151', '0.665290172', '0.66529017215098862', '0.6652901721509885', '0.6652901722']}, {'input': '226 72\\r\\n', 'output': ['0.8050825614', '0.805082561415', '0.805082561', '0.80508256141467871', '0.8050825614146787']}, {'input': '666 436\\r\\n', 'output': ['0.71643507071908719', '0.716435071', '0.716435070719', '0.7164350707', '0.7164350707190872']}, {'input': '544 519\\r\\n', 'output': ['0.67186290453', '0.6718629045300779', '0.67186290453007791', '0.6718629045300778', '0.6718629045', '0.671862905']}, {'input': '141 883\\r\\n', 'output': ['0.536951106658', '0.53695110665839563', '0.5369511066583957', '0.536951107', '0.5369511067', '0.5369511066583955']}, {'input': '581 685\\r\\n', 'output': ['0.6488443851199316', '0.648844385', '0.64884438511993159', '0.6488443851', '0.6488443851199317', '0.64884438512']}, {'input': '459 487\\r\\n', 'output': ['0.660077509985', '0.660077509985014', '0.660077510', '0.66007750998501402', '0.6600775100']}, {'input': '980 133\\r\\n', 'output': ['0.89319092020478941', '0.8931909202', '0.8931909202047894', '0.893190920', '0.893190920205']}, {'input': '858 934\\r\\n', 'output': ['0.65733386720916775', '0.6573338672', '0.657333867209', '0.657333867', '0.6573338672091678']}, {'input': '455 299\\r\\n', 'output': ['0.7159327199974443', '0.7159327200', '0.715932720', '0.7159327199974445', '0.71593271999744446', '0.715932719997']}, {'input': '962 35\\r\\n', 'output': ['0.966054554', '0.96605455396450646', '0.9660545539645065', '0.966054553965', '0.9660545540']}, {'input': '840 837\\r\\n', 'output': ['0.6670201719', '0.6670201719431644', '0.667020172', '0.66702017194316443', '0.667020171943', '0.6670201719431645']}, {'input': '1000 483\\r\\n', 'output': ['0.75425988826697099', '0.7542598882669711', '0.754259888267', '0.754259888266971', '0.7542598883', '0.754259888']}, {'input': '958 285\\r\\n', 'output': ['0.81340504954416115', '0.813405050', '0.8134050495', '0.813405049544', '0.8134050495441612']}, {'input': '399 649\\r\\n', 'output': ['0.617507391', '0.617507391371', '0.61750739137083666', '0.6175073914', '0.6175073913708367']}, {'input': '277 451\\r\\n', 'output': ['0.61739616069488457', '0.617396161', '0.6173961607', '0.617396160695', '0.6173961606948846']}, {'input': '155 534\\r\\n', 'output': ['0.563323504', '0.5633235039', '0.56332350392237707', '0.5633235039223771', '0.563323503922', '0.563323503922377']}, {'input': '315 898\\r\\n', 'output': ['0.57457911437025666', '0.574579114', '0.5745791144', '0.57457911437', '0.5745791143702565']}, {'input': '193 700\\r\\n', 'output': ['0.5605440989561413', '0.5605440989561412', '0.560544099', '0.56054409895614132', '0.560544098956', '0.5605440990']}, {'input': '713 65\\r\\n', 'output': ['0.9228168302093307', '0.922816830209', '0.9228168302', '0.922816830', '0.92281683020933070']}, {'input': '377 720\\r\\n', 'output': ['0.60369716809047824', '0.603697168', '0.6036971681', '0.6036971680904782', '0.60369716809', '0.6036971680904784']}, {'input': '817 522\\r\\n', 'output': ['0.7194394264554227', '0.719439426', '0.7194394265', '0.71943942645542269', '0.719439426455']}, {'input': '695 168\\r\\n', 'output': ['0.8369446556', '0.836944655612', '0.836944656', '0.8369446556124126', '0.83694465561241260']}, {'input': '574 969\\r\\n', 'output': ['0.61421649332134520', '0.6142164933213452', '0.6142164933', '0.614216493321', '0.614216493']}, {'input': '95 334\\r\\n', 'output': ['0.5621827921', '0.562182792', '0.56218279214960909', '0.562182792149609', '0.56218279215']}, {'input': '691 417\\r\\n', 'output': ['0.726476058', '0.726476058107', '0.72647605810741833', '0.7264760581', '0.7264760581074183']}, {'input': '132 781\\r\\n', 'output': ['0.53893982877953017', '0.53893982878', '0.538939829', '0.5389398287795302', '0.5389398288']}, {'input': '10 583\\r\\n', 'output': ['0.5042409294514335', '0.504240929', '0.504240929451434', '0.504240929451', '0.5042409295', '0.50424092945143373']}, {'input': '888 385\\r\\n', 'output': ['0.767717438', '0.7677174382', '0.767717438191', '0.76771743819087279', '0.7677174381908728']}, {'input': '329 31\\r\\n', 'output': ['0.9205443823', '0.92054438231593871', '0.920544382', '0.9205443823159387', '0.920544382316']}, {'input': '73 405\\r\\n', 'output': ['0.541293398', '0.5412933980482019', '0.541293398048', '0.5412933980', '0.54129339804820187', '0.541293398048202']}, {'input': '513 488\\r\\n', 'output': ['0.6721873792029164', '0.672187379203', '0.67218737920291638', '0.672187379', '0.6721873792', '0.6721873792029165']}, {'input': '391 852\\r\\n', 'output': ['0.593281183103', '0.593281183', '0.59328118310294298', '0.593281183102943', '0.5932811831', '0.5932811831029428']}, {'input': '551 654\\r\\n', 'output': ['0.6481418383312834', '0.6481418383', '0.648141838', '0.64814183833128336', '0.648141838331']}, {'input': '429 19\\r\\n', 'output': ['0.95923426755053587', '0.959234268', '0.959234267551', '0.9592342675505359', '0.9592342676']}, {'input': '387 102\\r\\n', 'output': ['0.8272193027', '0.827219302673', '0.82721930267281030', '0.8272193026728103', '0.827219303']}, {'input': '827 466\\r\\n', 'output': ['0.73500588145506107', '0.735005881', '0.735005881455', '0.7350058814550611', '0.7350058815']}, {'input': '705 268\\r\\n', 'output': ['0.78394613169627603', '0.783946131696276', '0.7839461317', '0.783946132', '0.783946131696']}, {'input': '864 70\\r\\n', 'output': ['0.930218970', '0.9302189702459666', '0.9302189702', '0.93021897024596656', '0.930218970246']}, {'input': '743 715\\r\\n', 'output': ['0.670910005048', '0.670910005', '0.6709100050', '0.67091000504834808', '0.6709100050483481']}, {'input': '50 372\\r\\n', 'output': ['0.5314489794456663', '0.53144897944566638', '0.5314489794456665', '0.5314489794', '0.531448979446', '0.531448979']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint w, b;\ndouble dp[1001][1001];\nint main() {\n  cin >> w >> b;\n  dp[1001][1001] = 1.00;\n  dp[w][1001] = 1.00;\n  for (int i = w; i >= 0; i--)\n    for (int j = b; j >= 0; j--) {\n      double sum = 0.00;\n      if (i * j > 0) {\n        if (j > 0 && i + j - 1 > 0) sum += dp[i + j - 1][j - 1] * (j / (i + j));\n        if (i > 0 && j + i - 1 > 0) sum += dp[i][j + i - 1] * (i / (i + j));\n      }\n      dp[i][j] = sum;\n    }\n  printf(\"%lf\\n\", dp[w][b]);\n}\n"}
{"src_uid": "7adb8bf6879925955bf187c3d05fde8c", "id": 40, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1800, "testcases": "[{'input': '1 3\\r\\n', 'output': ['0.50000000000000000', '0.500000000', '0.5', '0.5000000000']}, {'input': '5 5\\r\\n', 'output': ['0.65873015873015872', '0.65873015873', '0.6587301587301587', '0.658730159', '0.6587301587']}, {'input': '100 100\\r\\n', 'output': ['0.666295063', '0.66629506318483356', '0.666295063185', '0.6662950632', '0.6662950631848336']}, {'input': '100 1\\r\\n', 'output': ['0.990099010', '0.99009900990099009', '0.990099009901', '0.9900990099', '0.9900990099009901']}, {'input': '1 100\\r\\n', 'output': ['0.3366336634', '0.336633663', '0.336633663366', '0.33663366336633649', '0.3366336633663366', '0.3366336633663367']}, {'input': '67 420\\r\\n', 'output': ['0.5368972272908603', '0.5368972272908604', '0.5368972273', '0.536897227291', '0.53689722729086042', '0.536897227']}, {'input': '0 1000\\r\\n', 'output': ['0.0000000000', '0', '0.00000000000000000', '0.0', '0.000000000']}, {'input': '1000 0\\r\\n', 'output': ['1.00000000000000000', '1', '1.000000000', '1.0', '1.0000000000']}, {'input': '0 0\\r\\n', 'output': ['0.0000000000', '0', '0.00000000000000000', '0.0', '0.000000000']}, {'input': '1000 1000\\r\\n', 'output': ['0.666629617285', '0.66662961728533077', '0.6666296173', '0.666629617', '0.6666296172853308']}, {'input': '32 1000\\r\\n', 'output': ['0.5078702016771944', '0.507870202', '0.507870201677', '0.5078702017', '0.5078702016771942', '0.50787020167719410']}, {'input': '581 406\\r\\n', 'output': ['0.7084553684', '0.7084553684006947', '0.708455368401', '0.7084553684006948', '0.708455368', '0.70845536840069478']}, {'input': '459 52\\r\\n', 'output': ['0.907503321894', '0.907503322', '0.90750332189447191', '0.9075033218944719', '0.9075033219']}, {'input': '900 853\\r\\n', 'output': ['0.6726350392594106', '0.672635039259', '0.672635039', '0.6726350393', '0.67263503925941059']}, {'input': '778 218\\r\\n', 'output': ['0.8203333918681067', '0.8203333919', '0.820333391868', '0.82033339186810672', '0.820333392']}, {'input': '219 20\\r\\n', 'output': ['0.9225253192', '0.922525319170874', '0.922525319', '0.922525319171', '0.92252531917087399']}, {'input': '815 665\\r\\n', 'output': ['0.689921744986', '0.6899217450', '0.689921745', '0.6899217449860069', '0.68992174498600689']}, {'input': '773 467\\r\\n', 'output': ['0.726347986720404', '0.72634798672', '0.726347987', '0.7263479867', '0.72634798672040402']}, {'input': '215 269\\r\\n', 'output': ['0.6426266719', '0.642626671934', '0.642626672', '0.6426266719343681', '0.64262667193436807']}, {'input': '93 633\\r\\n', 'output': ['0.534192877', '0.5341928774', '0.534192877408', '0.53419287740827071', '0.5341928774082707']}, {'input': '267 270\\r\\n', 'output': ['0.665290172151', '0.665290172', '0.66529017215098862', '0.6652901721509885', '0.6652901722']}, {'input': '226 72\\r\\n', 'output': ['0.8050825614', '0.805082561415', '0.805082561', '0.80508256141467871', '0.8050825614146787']}, {'input': '666 436\\r\\n', 'output': ['0.71643507071908719', '0.716435071', '0.716435070719', '0.7164350707', '0.7164350707190872']}, {'input': '544 519\\r\\n', 'output': ['0.67186290453', '0.6718629045300779', '0.67186290453007791', '0.6718629045300778', '0.6718629045', '0.671862905']}, {'input': '141 883\\r\\n', 'output': ['0.536951106658', '0.53695110665839563', '0.5369511066583957', '0.536951107', '0.5369511067', '0.5369511066583955']}, {'input': '581 685\\r\\n', 'output': ['0.6488443851199316', '0.648844385', '0.64884438511993159', '0.6488443851', '0.6488443851199317', '0.64884438512']}, {'input': '459 487\\r\\n', 'output': ['0.660077509985', '0.660077509985014', '0.660077510', '0.66007750998501402', '0.6600775100']}, {'input': '980 133\\r\\n', 'output': ['0.89319092020478941', '0.8931909202', '0.8931909202047894', '0.893190920', '0.893190920205']}, {'input': '858 934\\r\\n', 'output': ['0.65733386720916775', '0.6573338672', '0.657333867209', '0.657333867', '0.6573338672091678']}, {'input': '455 299\\r\\n', 'output': ['0.7159327199974443', '0.7159327200', '0.715932720', '0.7159327199974445', '0.71593271999744446', '0.715932719997']}, {'input': '962 35\\r\\n', 'output': ['0.966054554', '0.96605455396450646', '0.9660545539645065', '0.966054553965', '0.9660545540']}, {'input': '840 837\\r\\n', 'output': ['0.6670201719', '0.6670201719431644', '0.667020172', '0.66702017194316443', '0.667020171943', '0.6670201719431645']}, {'input': '1000 483\\r\\n', 'output': ['0.75425988826697099', '0.7542598882669711', '0.754259888267', '0.754259888266971', '0.7542598883', '0.754259888']}, {'input': '958 285\\r\\n', 'output': ['0.81340504954416115', '0.813405050', '0.8134050495', '0.813405049544', '0.8134050495441612']}, {'input': '399 649\\r\\n', 'output': ['0.617507391', '0.617507391371', '0.61750739137083666', '0.6175073914', '0.6175073913708367']}, {'input': '277 451\\r\\n', 'output': ['0.61739616069488457', '0.617396161', '0.6173961607', '0.617396160695', '0.6173961606948846']}, {'input': '155 534\\r\\n', 'output': ['0.563323504', '0.5633235039', '0.56332350392237707', '0.5633235039223771', '0.563323503922', '0.563323503922377']}, {'input': '315 898\\r\\n', 'output': ['0.57457911437025666', '0.574579114', '0.5745791144', '0.57457911437', '0.5745791143702565']}, {'input': '193 700\\r\\n', 'output': ['0.5605440989561413', '0.5605440989561412', '0.560544099', '0.56054409895614132', '0.560544098956', '0.5605440990']}, {'input': '713 65\\r\\n', 'output': ['0.9228168302093307', '0.922816830209', '0.9228168302', '0.922816830', '0.92281683020933070']}, {'input': '377 720\\r\\n', 'output': ['0.60369716809047824', '0.603697168', '0.6036971681', '0.6036971680904782', '0.60369716809', '0.6036971680904784']}, {'input': '817 522\\r\\n', 'output': ['0.7194394264554227', '0.719439426', '0.7194394265', '0.71943942645542269', '0.719439426455']}, {'input': '695 168\\r\\n', 'output': ['0.8369446556', '0.836944655612', '0.836944656', '0.8369446556124126', '0.83694465561241260']}, {'input': '574 969\\r\\n', 'output': ['0.61421649332134520', '0.6142164933213452', '0.6142164933', '0.614216493321', '0.614216493']}, {'input': '95 334\\r\\n', 'output': ['0.5621827921', '0.562182792', '0.56218279214960909', '0.562182792149609', '0.56218279215']}, {'input': '691 417\\r\\n', 'output': ['0.726476058', '0.726476058107', '0.72647605810741833', '0.7264760581', '0.7264760581074183']}, {'input': '132 781\\r\\n', 'output': ['0.53893982877953017', '0.53893982878', '0.538939829', '0.5389398287795302', '0.5389398288']}, {'input': '10 583\\r\\n', 'output': ['0.5042409294514335', '0.504240929', '0.504240929451434', '0.504240929451', '0.5042409295', '0.50424092945143373']}, {'input': '888 385\\r\\n', 'output': ['0.767717438', '0.7677174382', '0.767717438191', '0.76771743819087279', '0.7677174381908728']}, {'input': '329 31\\r\\n', 'output': ['0.9205443823', '0.92054438231593871', '0.920544382', '0.9205443823159387', '0.920544382316']}, {'input': '73 405\\r\\n', 'output': ['0.541293398', '0.5412933980482019', '0.541293398048', '0.5412933980', '0.54129339804820187', '0.541293398048202']}, {'input': '513 488\\r\\n', 'output': ['0.6721873792029164', '0.672187379203', '0.67218737920291638', '0.672187379', '0.6721873792', '0.6721873792029165']}, {'input': '391 852\\r\\n', 'output': ['0.593281183103', '0.593281183', '0.59328118310294298', '0.593281183102943', '0.5932811831', '0.5932811831029428']}, {'input': '551 654\\r\\n', 'output': ['0.6481418383312834', '0.6481418383', '0.648141838', '0.64814183833128336', '0.648141838331']}, {'input': '429 19\\r\\n', 'output': ['0.95923426755053587', '0.959234268', '0.959234267551', '0.9592342675505359', '0.9592342676']}, {'input': '387 102\\r\\n', 'output': ['0.8272193027', '0.827219302673', '0.82721930267281030', '0.8272193026728103', '0.827219303']}, {'input': '827 466\\r\\n', 'output': ['0.73500588145506107', '0.735005881', '0.735005881455', '0.7350058814550611', '0.7350058815']}, {'input': '705 268\\r\\n', 'output': ['0.78394613169627603', '0.783946131696276', '0.7839461317', '0.783946132', '0.783946131696']}, {'input': '864 70\\r\\n', 'output': ['0.930218970', '0.9302189702459666', '0.9302189702', '0.93021897024596656', '0.930218970246']}, {'input': '743 715\\r\\n', 'output': ['0.670910005048', '0.670910005', '0.6709100050', '0.67091000504834808', '0.6709100050483481']}, {'input': '50 372\\r\\n', 'output': ['0.5314489794456663', '0.53144897944566638', '0.5314489794456665', '0.5314489794', '0.531448979446', '0.531448979']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\ndouble dp[1005][1005];\nint n, m;\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  for (int i = 0; i < 1005; ++i) dp[i][0] = 1;\n  for (int i = 1; i <= n; ++i)\n    for (int j = 1; j <= min(i, m); ++j)\n      dp[i][j] = (j * (dp[i - 1][j] + dp[i - 1][j - 1])) / i;\n  printf(\"%lf\\n\", dp[n][m]);\n  return 0;\n}\n"}
{"src_uid": "c761bb69cf1b5a3dbe38d9f5c46e9007", "id": 41, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 1\\r\\n+1\\r\\n', 'output': ['Truth\\r\\n']}, {'input': '3 2\\r\\n-1\\r\\n-2\\r\\n-3\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '4 1\\r\\n+2\\r\\n-3\\r\\n+4\\r\\n-1\\r\\n', 'output': ['Lie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\n']}, {'input': '1 0\\r\\n-1\\r\\n', 'output': ['Lie\\r\\n']}, {'input': '2 2\\r\\n+1\\r\\n+1\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\n']}, {'input': '2 1\\r\\n+2\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\n']}, {'input': '2 0\\r\\n-2\\r\\n-2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\n']}, {'input': '3 1\\r\\n+2\\r\\n+3\\r\\n+3\\r\\n', 'output': ['Truth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '6 3\\r\\n+5\\r\\n+5\\r\\n+5\\r\\n+1\\r\\n+1\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '4 3\\r\\n-4\\r\\n-3\\r\\n-1\\r\\n-3\\r\\n', 'output': ['Not defined\\r\\nTruth\\r\\nNot defined\\r\\nTruth\\r\\n']}, {'input': '10 4\\r\\n-8\\r\\n+1\\r\\n-6\\r\\n-10\\r\\n+5\\r\\n-6\\r\\n-8\\r\\n-8\\r\\n-4\\r\\n-8\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-4\\r\\n+4\\r\\n+4\\r\\n-9\\r\\n-9\\r\\n-4\\r\\n-4\\r\\n+2\\r\\n-9\\r\\n-4\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '7 2\\r\\n+5\\r\\n+5\\r\\n+5\\r\\n-2\\r\\n+1\\r\\n-5\\r\\n-6\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\n']}, {'input': '7 4\\r\\n+7\\r\\n-3\\r\\n-3\\r\\n-4\\r\\n+3\\r\\n+3\\r\\n+3\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '6 3\\r\\n-6\\r\\n-1\\r\\n+5\\r\\n+1\\r\\n+6\\r\\n+1\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\n']}, {'input': '5 3\\r\\n-2\\r\\n+2\\r\\n+2\\r\\n-3\\r\\n+5\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\n']}, {'input': '3 0\\r\\n-2\\r\\n-2\\r\\n-2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '5 3\\r\\n-1\\r\\n-1\\r\\n-4\\r\\n+1\\r\\n-4\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '9 6\\r\\n+2\\r\\n+7\\r\\n+7\\r\\n-1\\r\\n-4\\r\\n+7\\r\\n-7\\r\\n+7\\r\\n+5\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '43 18\\r\\n-14\\r\\n-28\\r\\n+16\\r\\n+10\\r\\n+25\\r\\n-30\\r\\n+25\\r\\n+30\\r\\n+25\\r\\n+25\\r\\n+25\\r\\n+25\\r\\n-25\\r\\n+22\\r\\n+3\\r\\n-17\\r\\n+16\\r\\n-25\\r\\n+10\\r\\n+14\\r\\n+41\\r\\n+25\\r\\n-25\\r\\n+33\\r\\n+24\\r\\n-23\\r\\n-25\\r\\n+25\\r\\n-22\\r\\n+29\\r\\n+28\\r\\n-25\\r\\n-25\\r\\n-29\\r\\n+11\\r\\n+26\\r\\n-25\\r\\n+25\\r\\n+10\\r\\n+1\\r\\n-20\\r\\n-17\\r\\n+23\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '28 12\\r\\n+10\\r\\n-7\\r\\n+17\\r\\n-20\\r\\n+7\\r\\n-7\\r\\n+13\\r\\n-21\\r\\n-7\\r\\n-7\\r\\n-18\\r\\n+7\\r\\n+7\\r\\n+3\\r\\n+6\\r\\n+14\\r\\n+7\\r\\n-24\\r\\n-21\\r\\n-7\\r\\n-7\\r\\n+4\\r\\n+7\\r\\n-7\\r\\n+21\\r\\n-7\\r\\n-26\\r\\n+7\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '17 9\\r\\n-6\\r\\n+16\\r\\n+5\\r\\n+16\\r\\n-17\\r\\n+17\\r\\n-11\\r\\n+5\\r\\n+14\\r\\n+5\\r\\n-8\\r\\n-5\\r\\n+6\\r\\n-2\\r\\n-11\\r\\n+4\\r\\n+17\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '14 3\\r\\n+14\\r\\n+12\\r\\n-9\\r\\n+9\\r\\n-9\\r\\n-9\\r\\n+8\\r\\n+9\\r\\n+2\\r\\n+1\\r\\n-13\\r\\n-9\\r\\n+13\\r\\n+3\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n-9\\r\\n-8\\r\\n-5\\r\\n-9\\r\\n-7\\r\\n-9\\r\\n-9\\r\\n-9\\r\\n-4\\r\\n-9\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-5\\r\\n-1\\r\\n+10\\r\\n-3\\r\\n-10\\r\\n-9\\r\\n-10\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-2\\r\\n-2\\r\\n-6\\r\\n-7\\r\\n-3\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 6\\r\\n-9\\r\\n-7\\r\\n-5\\r\\n-5\\r\\n-4\\r\\n-2\\r\\n-8\\r\\n-5\\r\\n-5\\r\\n-9\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 4\\r\\n-8\\r\\n-2\\r\\n-8\\r\\n+1\\r\\n-4\\r\\n-8\\r\\n-2\\r\\n-8\\r\\n-8\\r\\n-1\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 2\\r\\n-8\\r\\n+10\\r\\n+1\\r\\n+8\\r\\n+4\\r\\n+8\\r\\n+6\\r\\n-8\\r\\n+10\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 3\\r\\n+9\\r\\n+3\\r\\n+8\\r\\n+3\\r\\n+6\\r\\n-3\\r\\n+6\\r\\n+8\\r\\n+3\\r\\n+7\\r\\n', 'output': ['Lie\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\n']}, {'input': '10 8\\r\\n-2\\r\\n+9\\r\\n+9\\r\\n-4\\r\\n+9\\r\\n+9\\r\\n+4\\r\\n-9\\r\\n-3\\r\\n+9\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 7\\r\\n-4\\r\\n+6\\r\\n+4\\r\\n+9\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n+3\\r\\n+5\\r\\n+6\\r\\n+10\\r\\n+5\\r\\n+5\\r\\n+6\\r\\n+8\\r\\n+5\\r\\n+6\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 7\\r\\n-6\\r\\n-10\\r\\n-3\\r\\n-1\\r\\n-3\\r\\n-7\\r\\n-2\\r\\n-7\\r\\n-7\\r\\n-3\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '10 5\\r\\n-4\\r\\n-4\\r\\n-1\\r\\n-5\\r\\n-7\\r\\n-4\\r\\n-4\\r\\n-4\\r\\n-1\\r\\n-7\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 5\\r\\n-9\\r\\n-7\\r\\n-6\\r\\n-3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-8\\r\\n-4\\r\\n-10\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-8\\r\\n-8\\r\\n-4\\r\\n-9\\r\\n-10\\r\\n-2\\r\\n-9\\r\\n-8\\r\\n-8\\r\\n-8\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n+7\\r\\n+8\\r\\n+9\\r\\n+1\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+6\\r\\n+6\\r\\n+7\\r\\n', 'output': ['Truth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 5\\r\\n+2\\r\\n+2\\r\\n+2\\r\\n+2\\r\\n+9\\r\\n+10\\r\\n+8\\r\\n+7\\r\\n+4\\r\\n+2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 9\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+5\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 3\\r\\n+10\\r\\n+2\\r\\n+10\\r\\n+9\\r\\n+1\\r\\n+9\\r\\n+4\\r\\n+9\\r\\n+3\\r\\n+2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 6\\r\\n+10\\r\\n+10\\r\\n+10\\r\\n+3\\r\\n+10\\r\\n+10\\r\\n+6\\r\\n+6\\r\\n+10\\r\\n+8\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '3 2\\r\\n-1\\r\\n+2\\r\\n+3\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint arr[100005];\nvector<int> truth, lie;\nint main() {\n  int n, m;\n  cin >> n >> m;\n  if (n == 1) {\n    cout << \"Truth\\n\";\n    return 0;\n  }\n  for (int i = 1; i <= n; i++) {\n    char c;\n    int a;\n    cin >> c >> a;\n    if (c == '+') {\n      if (a == i) {\n        cout << \"Truth\\n\";\n        truth.push_back(i);\n      } else {\n        cout << \"Lie\\n\";\n        lie.push_back(i);\n        arr[a] = 1;\n      }\n    } else {\n      cout << \"Not defined\\n\";\n      if (a == i) arr[i] = 0;\n      continue;\n    }\n    if (lie.size() + truth.size() + arr[i] == m) {\n      if (truth.size() == 0)\n        cout << lie[0] << \" Lie\\n\";\n      else\n        cout << truth[0] << \" Truth\\n\";\n      return 0;\n    }\n  }\n}\n"}
{"src_uid": "c761bb69cf1b5a3dbe38d9f5c46e9007", "id": 41, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 1\\r\\n+1\\r\\n', 'output': ['Truth\\r\\n']}, {'input': '3 2\\r\\n-1\\r\\n-2\\r\\n-3\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '4 1\\r\\n+2\\r\\n-3\\r\\n+4\\r\\n-1\\r\\n', 'output': ['Lie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\n']}, {'input': '1 0\\r\\n-1\\r\\n', 'output': ['Lie\\r\\n']}, {'input': '2 2\\r\\n+1\\r\\n+1\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\n']}, {'input': '2 1\\r\\n+2\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\n']}, {'input': '2 0\\r\\n-2\\r\\n-2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\n']}, {'input': '3 1\\r\\n+2\\r\\n+3\\r\\n+3\\r\\n', 'output': ['Truth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '6 3\\r\\n+5\\r\\n+5\\r\\n+5\\r\\n+1\\r\\n+1\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '4 3\\r\\n-4\\r\\n-3\\r\\n-1\\r\\n-3\\r\\n', 'output': ['Not defined\\r\\nTruth\\r\\nNot defined\\r\\nTruth\\r\\n']}, {'input': '10 4\\r\\n-8\\r\\n+1\\r\\n-6\\r\\n-10\\r\\n+5\\r\\n-6\\r\\n-8\\r\\n-8\\r\\n-4\\r\\n-8\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-4\\r\\n+4\\r\\n+4\\r\\n-9\\r\\n-9\\r\\n-4\\r\\n-4\\r\\n+2\\r\\n-9\\r\\n-4\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '7 2\\r\\n+5\\r\\n+5\\r\\n+5\\r\\n-2\\r\\n+1\\r\\n-5\\r\\n-6\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\n']}, {'input': '7 4\\r\\n+7\\r\\n-3\\r\\n-3\\r\\n-4\\r\\n+3\\r\\n+3\\r\\n+3\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '6 3\\r\\n-6\\r\\n-1\\r\\n+5\\r\\n+1\\r\\n+6\\r\\n+1\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\n']}, {'input': '5 3\\r\\n-2\\r\\n+2\\r\\n+2\\r\\n-3\\r\\n+5\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\n']}, {'input': '3 0\\r\\n-2\\r\\n-2\\r\\n-2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '5 3\\r\\n-1\\r\\n-1\\r\\n-4\\r\\n+1\\r\\n-4\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '9 6\\r\\n+2\\r\\n+7\\r\\n+7\\r\\n-1\\r\\n-4\\r\\n+7\\r\\n-7\\r\\n+7\\r\\n+5\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '43 18\\r\\n-14\\r\\n-28\\r\\n+16\\r\\n+10\\r\\n+25\\r\\n-30\\r\\n+25\\r\\n+30\\r\\n+25\\r\\n+25\\r\\n+25\\r\\n+25\\r\\n-25\\r\\n+22\\r\\n+3\\r\\n-17\\r\\n+16\\r\\n-25\\r\\n+10\\r\\n+14\\r\\n+41\\r\\n+25\\r\\n-25\\r\\n+33\\r\\n+24\\r\\n-23\\r\\n-25\\r\\n+25\\r\\n-22\\r\\n+29\\r\\n+28\\r\\n-25\\r\\n-25\\r\\n-29\\r\\n+11\\r\\n+26\\r\\n-25\\r\\n+25\\r\\n+10\\r\\n+1\\r\\n-20\\r\\n-17\\r\\n+23\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '28 12\\r\\n+10\\r\\n-7\\r\\n+17\\r\\n-20\\r\\n+7\\r\\n-7\\r\\n+13\\r\\n-21\\r\\n-7\\r\\n-7\\r\\n-18\\r\\n+7\\r\\n+7\\r\\n+3\\r\\n+6\\r\\n+14\\r\\n+7\\r\\n-24\\r\\n-21\\r\\n-7\\r\\n-7\\r\\n+4\\r\\n+7\\r\\n-7\\r\\n+21\\r\\n-7\\r\\n-26\\r\\n+7\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '17 9\\r\\n-6\\r\\n+16\\r\\n+5\\r\\n+16\\r\\n-17\\r\\n+17\\r\\n-11\\r\\n+5\\r\\n+14\\r\\n+5\\r\\n-8\\r\\n-5\\r\\n+6\\r\\n-2\\r\\n-11\\r\\n+4\\r\\n+17\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '14 3\\r\\n+14\\r\\n+12\\r\\n-9\\r\\n+9\\r\\n-9\\r\\n-9\\r\\n+8\\r\\n+9\\r\\n+2\\r\\n+1\\r\\n-13\\r\\n-9\\r\\n+13\\r\\n+3\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n-9\\r\\n-8\\r\\n-5\\r\\n-9\\r\\n-7\\r\\n-9\\r\\n-9\\r\\n-9\\r\\n-4\\r\\n-9\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-5\\r\\n-1\\r\\n+10\\r\\n-3\\r\\n-10\\r\\n-9\\r\\n-10\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-2\\r\\n-2\\r\\n-6\\r\\n-7\\r\\n-3\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 6\\r\\n-9\\r\\n-7\\r\\n-5\\r\\n-5\\r\\n-4\\r\\n-2\\r\\n-8\\r\\n-5\\r\\n-5\\r\\n-9\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 4\\r\\n-8\\r\\n-2\\r\\n-8\\r\\n+1\\r\\n-4\\r\\n-8\\r\\n-2\\r\\n-8\\r\\n-8\\r\\n-1\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 2\\r\\n-8\\r\\n+10\\r\\n+1\\r\\n+8\\r\\n+4\\r\\n+8\\r\\n+6\\r\\n-8\\r\\n+10\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 3\\r\\n+9\\r\\n+3\\r\\n+8\\r\\n+3\\r\\n+6\\r\\n-3\\r\\n+6\\r\\n+8\\r\\n+3\\r\\n+7\\r\\n', 'output': ['Lie\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\n']}, {'input': '10 8\\r\\n-2\\r\\n+9\\r\\n+9\\r\\n-4\\r\\n+9\\r\\n+9\\r\\n+4\\r\\n-9\\r\\n-3\\r\\n+9\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 7\\r\\n-4\\r\\n+6\\r\\n+4\\r\\n+9\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n+3\\r\\n+5\\r\\n+6\\r\\n+10\\r\\n+5\\r\\n+5\\r\\n+6\\r\\n+8\\r\\n+5\\r\\n+6\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 7\\r\\n-6\\r\\n-10\\r\\n-3\\r\\n-1\\r\\n-3\\r\\n-7\\r\\n-2\\r\\n-7\\r\\n-7\\r\\n-3\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '10 5\\r\\n-4\\r\\n-4\\r\\n-1\\r\\n-5\\r\\n-7\\r\\n-4\\r\\n-4\\r\\n-4\\r\\n-1\\r\\n-7\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 5\\r\\n-9\\r\\n-7\\r\\n-6\\r\\n-3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-8\\r\\n-4\\r\\n-10\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-8\\r\\n-8\\r\\n-4\\r\\n-9\\r\\n-10\\r\\n-2\\r\\n-9\\r\\n-8\\r\\n-8\\r\\n-8\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n+7\\r\\n+8\\r\\n+9\\r\\n+1\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+6\\r\\n+6\\r\\n+7\\r\\n', 'output': ['Truth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 5\\r\\n+2\\r\\n+2\\r\\n+2\\r\\n+2\\r\\n+9\\r\\n+10\\r\\n+8\\r\\n+7\\r\\n+4\\r\\n+2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 9\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+5\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 3\\r\\n+10\\r\\n+2\\r\\n+10\\r\\n+9\\r\\n+1\\r\\n+9\\r\\n+4\\r\\n+9\\r\\n+3\\r\\n+2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 6\\r\\n+10\\r\\n+10\\r\\n+10\\r\\n+3\\r\\n+10\\r\\n+10\\r\\n+6\\r\\n+6\\r\\n+10\\r\\n+8\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '3 2\\r\\n-1\\r\\n+2\\r\\n+3\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint vis[100001];\nint main() {\n  int n, m, a, b;\n  cin >> n >> m;\n  for (int i = 0; i < n; i++) {\n    cin >> a;\n    if (a == 45) {\n      a = i;\n    }\n    if (a > 0) a--;\n    if (a < 0) continue;\n    if (a == i) {\n      vis[i] = 2;\n    } else\n      vis[a] = 1;\n  }\n  for (int i = 0; i < n; i++) {\n    cout << \"Not defined\\n\";\n  }\n  for (int i = 0; i < n; i++) {\n    if (vis[i] == 1) {\n      cout << \"Lie\\n\";\n    } else if (vis[i] == 2) {\n      cout << \"Truth\\n\";\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "c761bb69cf1b5a3dbe38d9f5c46e9007", "id": 41, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 1\\r\\n+1\\r\\n', 'output': ['Truth\\r\\n']}, {'input': '3 2\\r\\n-1\\r\\n-2\\r\\n-3\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '4 1\\r\\n+2\\r\\n-3\\r\\n+4\\r\\n-1\\r\\n', 'output': ['Lie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\n']}, {'input': '1 0\\r\\n-1\\r\\n', 'output': ['Lie\\r\\n']}, {'input': '2 2\\r\\n+1\\r\\n+1\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\n']}, {'input': '2 1\\r\\n+2\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\n']}, {'input': '2 0\\r\\n-2\\r\\n-2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\n']}, {'input': '3 1\\r\\n+2\\r\\n+3\\r\\n+3\\r\\n', 'output': ['Truth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '6 3\\r\\n+5\\r\\n+5\\r\\n+5\\r\\n+1\\r\\n+1\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '4 3\\r\\n-4\\r\\n-3\\r\\n-1\\r\\n-3\\r\\n', 'output': ['Not defined\\r\\nTruth\\r\\nNot defined\\r\\nTruth\\r\\n']}, {'input': '10 4\\r\\n-8\\r\\n+1\\r\\n-6\\r\\n-10\\r\\n+5\\r\\n-6\\r\\n-8\\r\\n-8\\r\\n-4\\r\\n-8\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-4\\r\\n+4\\r\\n+4\\r\\n-9\\r\\n-9\\r\\n-4\\r\\n-4\\r\\n+2\\r\\n-9\\r\\n-4\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '7 2\\r\\n+5\\r\\n+5\\r\\n+5\\r\\n-2\\r\\n+1\\r\\n-5\\r\\n-6\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\n']}, {'input': '7 4\\r\\n+7\\r\\n-3\\r\\n-3\\r\\n-4\\r\\n+3\\r\\n+3\\r\\n+3\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '6 3\\r\\n-6\\r\\n-1\\r\\n+5\\r\\n+1\\r\\n+6\\r\\n+1\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\n']}, {'input': '5 3\\r\\n-2\\r\\n+2\\r\\n+2\\r\\n-3\\r\\n+5\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\n']}, {'input': '3 0\\r\\n-2\\r\\n-2\\r\\n-2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '5 3\\r\\n-1\\r\\n-1\\r\\n-4\\r\\n+1\\r\\n-4\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '9 6\\r\\n+2\\r\\n+7\\r\\n+7\\r\\n-1\\r\\n-4\\r\\n+7\\r\\n-7\\r\\n+7\\r\\n+5\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '43 18\\r\\n-14\\r\\n-28\\r\\n+16\\r\\n+10\\r\\n+25\\r\\n-30\\r\\n+25\\r\\n+30\\r\\n+25\\r\\n+25\\r\\n+25\\r\\n+25\\r\\n-25\\r\\n+22\\r\\n+3\\r\\n-17\\r\\n+16\\r\\n-25\\r\\n+10\\r\\n+14\\r\\n+41\\r\\n+25\\r\\n-25\\r\\n+33\\r\\n+24\\r\\n-23\\r\\n-25\\r\\n+25\\r\\n-22\\r\\n+29\\r\\n+28\\r\\n-25\\r\\n-25\\r\\n-29\\r\\n+11\\r\\n+26\\r\\n-25\\r\\n+25\\r\\n+10\\r\\n+1\\r\\n-20\\r\\n-17\\r\\n+23\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '28 12\\r\\n+10\\r\\n-7\\r\\n+17\\r\\n-20\\r\\n+7\\r\\n-7\\r\\n+13\\r\\n-21\\r\\n-7\\r\\n-7\\r\\n-18\\r\\n+7\\r\\n+7\\r\\n+3\\r\\n+6\\r\\n+14\\r\\n+7\\r\\n-24\\r\\n-21\\r\\n-7\\r\\n-7\\r\\n+4\\r\\n+7\\r\\n-7\\r\\n+21\\r\\n-7\\r\\n-26\\r\\n+7\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '17 9\\r\\n-6\\r\\n+16\\r\\n+5\\r\\n+16\\r\\n-17\\r\\n+17\\r\\n-11\\r\\n+5\\r\\n+14\\r\\n+5\\r\\n-8\\r\\n-5\\r\\n+6\\r\\n-2\\r\\n-11\\r\\n+4\\r\\n+17\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '14 3\\r\\n+14\\r\\n+12\\r\\n-9\\r\\n+9\\r\\n-9\\r\\n-9\\r\\n+8\\r\\n+9\\r\\n+2\\r\\n+1\\r\\n-13\\r\\n-9\\r\\n+13\\r\\n+3\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n-9\\r\\n-8\\r\\n-5\\r\\n-9\\r\\n-7\\r\\n-9\\r\\n-9\\r\\n-9\\r\\n-4\\r\\n-9\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-5\\r\\n-1\\r\\n+10\\r\\n-3\\r\\n-10\\r\\n-9\\r\\n-10\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-2\\r\\n-2\\r\\n-6\\r\\n-7\\r\\n-3\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 6\\r\\n-9\\r\\n-7\\r\\n-5\\r\\n-5\\r\\n-4\\r\\n-2\\r\\n-8\\r\\n-5\\r\\n-5\\r\\n-9\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 4\\r\\n-8\\r\\n-2\\r\\n-8\\r\\n+1\\r\\n-4\\r\\n-8\\r\\n-2\\r\\n-8\\r\\n-8\\r\\n-1\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 2\\r\\n-8\\r\\n+10\\r\\n+1\\r\\n+8\\r\\n+4\\r\\n+8\\r\\n+6\\r\\n-8\\r\\n+10\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 3\\r\\n+9\\r\\n+3\\r\\n+8\\r\\n+3\\r\\n+6\\r\\n-3\\r\\n+6\\r\\n+8\\r\\n+3\\r\\n+7\\r\\n', 'output': ['Lie\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\n']}, {'input': '10 8\\r\\n-2\\r\\n+9\\r\\n+9\\r\\n-4\\r\\n+9\\r\\n+9\\r\\n+4\\r\\n-9\\r\\n-3\\r\\n+9\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 7\\r\\n-4\\r\\n+6\\r\\n+4\\r\\n+9\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n+3\\r\\n+5\\r\\n+6\\r\\n+10\\r\\n+5\\r\\n+5\\r\\n+6\\r\\n+8\\r\\n+5\\r\\n+6\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 7\\r\\n-6\\r\\n-10\\r\\n-3\\r\\n-1\\r\\n-3\\r\\n-7\\r\\n-2\\r\\n-7\\r\\n-7\\r\\n-3\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '10 5\\r\\n-4\\r\\n-4\\r\\n-1\\r\\n-5\\r\\n-7\\r\\n-4\\r\\n-4\\r\\n-4\\r\\n-1\\r\\n-7\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 5\\r\\n-9\\r\\n-7\\r\\n-6\\r\\n-3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-8\\r\\n-4\\r\\n-10\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-8\\r\\n-8\\r\\n-4\\r\\n-9\\r\\n-10\\r\\n-2\\r\\n-9\\r\\n-8\\r\\n-8\\r\\n-8\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n+7\\r\\n+8\\r\\n+9\\r\\n+1\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+6\\r\\n+6\\r\\n+7\\r\\n', 'output': ['Truth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 5\\r\\n+2\\r\\n+2\\r\\n+2\\r\\n+2\\r\\n+9\\r\\n+10\\r\\n+8\\r\\n+7\\r\\n+4\\r\\n+2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 9\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+5\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 3\\r\\n+10\\r\\n+2\\r\\n+10\\r\\n+9\\r\\n+1\\r\\n+9\\r\\n+4\\r\\n+9\\r\\n+3\\r\\n+2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 6\\r\\n+10\\r\\n+10\\r\\n+10\\r\\n+3\\r\\n+10\\r\\n+10\\r\\n+6\\r\\n+6\\r\\n+10\\r\\n+8\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '3 2\\r\\n-1\\r\\n+2\\r\\n+3\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100005;\nint n, m, x, a[N], ans[N];\nvector<int> adj[N];\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  for (int i = 0, c = 0, k = 0; i < n; ++i, ++c, k += (m == n))\n    if (c < n)\n      scanf(i? \" %c%d\" : \"%c%d\", 33 - 2 * (i & 1), a + i), k += (a[i] == i);\n    else {\n      if (a[i]!= i) k -= (a[i] == -1);\n      if (k) ans[i] = 1;\n      if (c) k -= (a[i] == i + 1);\n      if (k) ans[i] = 2;\n    }\n  for (int i = 0; i < n; ++i)\n    if (ans[i] == 0) ans[i] = adj[i].empty()? 1 : 2;\n  for (int i = 0; i < n; ++i)\n    printf(ans[i] == 1? \"Truth\\n\" : ans[i] == 2? \"Lie\\n\" : \"Not defined\\n\");\n}\n"}
{"src_uid": "c761bb69cf1b5a3dbe38d9f5c46e9007", "id": 41, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 1\\r\\n+1\\r\\n', 'output': ['Truth\\r\\n']}, {'input': '3 2\\r\\n-1\\r\\n-2\\r\\n-3\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '4 1\\r\\n+2\\r\\n-3\\r\\n+4\\r\\n-1\\r\\n', 'output': ['Lie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\n']}, {'input': '1 0\\r\\n-1\\r\\n', 'output': ['Lie\\r\\n']}, {'input': '2 2\\r\\n+1\\r\\n+1\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\n']}, {'input': '2 1\\r\\n+2\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\n']}, {'input': '2 0\\r\\n-2\\r\\n-2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\n']}, {'input': '3 1\\r\\n+2\\r\\n+3\\r\\n+3\\r\\n', 'output': ['Truth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '6 3\\r\\n+5\\r\\n+5\\r\\n+5\\r\\n+1\\r\\n+1\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '4 3\\r\\n-4\\r\\n-3\\r\\n-1\\r\\n-3\\r\\n', 'output': ['Not defined\\r\\nTruth\\r\\nNot defined\\r\\nTruth\\r\\n']}, {'input': '10 4\\r\\n-8\\r\\n+1\\r\\n-6\\r\\n-10\\r\\n+5\\r\\n-6\\r\\n-8\\r\\n-8\\r\\n-4\\r\\n-8\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-4\\r\\n+4\\r\\n+4\\r\\n-9\\r\\n-9\\r\\n-4\\r\\n-4\\r\\n+2\\r\\n-9\\r\\n-4\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '7 2\\r\\n+5\\r\\n+5\\r\\n+5\\r\\n-2\\r\\n+1\\r\\n-5\\r\\n-6\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\n']}, {'input': '7 4\\r\\n+7\\r\\n-3\\r\\n-3\\r\\n-4\\r\\n+3\\r\\n+3\\r\\n+3\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '6 3\\r\\n-6\\r\\n-1\\r\\n+5\\r\\n+1\\r\\n+6\\r\\n+1\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\n']}, {'input': '5 3\\r\\n-2\\r\\n+2\\r\\n+2\\r\\n-3\\r\\n+5\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\n']}, {'input': '3 0\\r\\n-2\\r\\n-2\\r\\n-2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '5 3\\r\\n-1\\r\\n-1\\r\\n-4\\r\\n+1\\r\\n-4\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '9 6\\r\\n+2\\r\\n+7\\r\\n+7\\r\\n-1\\r\\n-4\\r\\n+7\\r\\n-7\\r\\n+7\\r\\n+5\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '43 18\\r\\n-14\\r\\n-28\\r\\n+16\\r\\n+10\\r\\n+25\\r\\n-30\\r\\n+25\\r\\n+30\\r\\n+25\\r\\n+25\\r\\n+25\\r\\n+25\\r\\n-25\\r\\n+22\\r\\n+3\\r\\n-17\\r\\n+16\\r\\n-25\\r\\n+10\\r\\n+14\\r\\n+41\\r\\n+25\\r\\n-25\\r\\n+33\\r\\n+24\\r\\n-23\\r\\n-25\\r\\n+25\\r\\n-22\\r\\n+29\\r\\n+28\\r\\n-25\\r\\n-25\\r\\n-29\\r\\n+11\\r\\n+26\\r\\n-25\\r\\n+25\\r\\n+10\\r\\n+1\\r\\n-20\\r\\n-17\\r\\n+23\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '28 12\\r\\n+10\\r\\n-7\\r\\n+17\\r\\n-20\\r\\n+7\\r\\n-7\\r\\n+13\\r\\n-21\\r\\n-7\\r\\n-7\\r\\n-18\\r\\n+7\\r\\n+7\\r\\n+3\\r\\n+6\\r\\n+14\\r\\n+7\\r\\n-24\\r\\n-21\\r\\n-7\\r\\n-7\\r\\n+4\\r\\n+7\\r\\n-7\\r\\n+21\\r\\n-7\\r\\n-26\\r\\n+7\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '17 9\\r\\n-6\\r\\n+16\\r\\n+5\\r\\n+16\\r\\n-17\\r\\n+17\\r\\n-11\\r\\n+5\\r\\n+14\\r\\n+5\\r\\n-8\\r\\n-5\\r\\n+6\\r\\n-2\\r\\n-11\\r\\n+4\\r\\n+17\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '14 3\\r\\n+14\\r\\n+12\\r\\n-9\\r\\n+9\\r\\n-9\\r\\n-9\\r\\n+8\\r\\n+9\\r\\n+2\\r\\n+1\\r\\n-13\\r\\n-9\\r\\n+13\\r\\n+3\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n-9\\r\\n-8\\r\\n-5\\r\\n-9\\r\\n-7\\r\\n-9\\r\\n-9\\r\\n-9\\r\\n-4\\r\\n-9\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-5\\r\\n-1\\r\\n+10\\r\\n-3\\r\\n-10\\r\\n-9\\r\\n-10\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-2\\r\\n-2\\r\\n-6\\r\\n-7\\r\\n-3\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 6\\r\\n-9\\r\\n-7\\r\\n-5\\r\\n-5\\r\\n-4\\r\\n-2\\r\\n-8\\r\\n-5\\r\\n-5\\r\\n-9\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 4\\r\\n-8\\r\\n-2\\r\\n-8\\r\\n+1\\r\\n-4\\r\\n-8\\r\\n-2\\r\\n-8\\r\\n-8\\r\\n-1\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 2\\r\\n-8\\r\\n+10\\r\\n+1\\r\\n+8\\r\\n+4\\r\\n+8\\r\\n+6\\r\\n-8\\r\\n+10\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 3\\r\\n+9\\r\\n+3\\r\\n+8\\r\\n+3\\r\\n+6\\r\\n-3\\r\\n+6\\r\\n+8\\r\\n+3\\r\\n+7\\r\\n', 'output': ['Lie\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\n']}, {'input': '10 8\\r\\n-2\\r\\n+9\\r\\n+9\\r\\n-4\\r\\n+9\\r\\n+9\\r\\n+4\\r\\n-9\\r\\n-3\\r\\n+9\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 7\\r\\n-4\\r\\n+6\\r\\n+4\\r\\n+9\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n+3\\r\\n+5\\r\\n+6\\r\\n+10\\r\\n+5\\r\\n+5\\r\\n+6\\r\\n+8\\r\\n+5\\r\\n+6\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 7\\r\\n-6\\r\\n-10\\r\\n-3\\r\\n-1\\r\\n-3\\r\\n-7\\r\\n-2\\r\\n-7\\r\\n-7\\r\\n-3\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '10 5\\r\\n-4\\r\\n-4\\r\\n-1\\r\\n-5\\r\\n-7\\r\\n-4\\r\\n-4\\r\\n-4\\r\\n-1\\r\\n-7\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 5\\r\\n-9\\r\\n-7\\r\\n-6\\r\\n-3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-8\\r\\n-4\\r\\n-10\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-8\\r\\n-8\\r\\n-4\\r\\n-9\\r\\n-10\\r\\n-2\\r\\n-9\\r\\n-8\\r\\n-8\\r\\n-8\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n+7\\r\\n+8\\r\\n+9\\r\\n+1\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+6\\r\\n+6\\r\\n+7\\r\\n', 'output': ['Truth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 5\\r\\n+2\\r\\n+2\\r\\n+2\\r\\n+2\\r\\n+9\\r\\n+10\\r\\n+8\\r\\n+7\\r\\n+4\\r\\n+2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 9\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+5\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 3\\r\\n+10\\r\\n+2\\r\\n+10\\r\\n+9\\r\\n+1\\r\\n+9\\r\\n+4\\r\\n+9\\r\\n+3\\r\\n+2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 6\\r\\n+10\\r\\n+10\\r\\n+10\\r\\n+3\\r\\n+10\\r\\n+10\\r\\n+6\\r\\n+6\\r\\n+10\\r\\n+8\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '3 2\\r\\n-1\\r\\n+2\\r\\n+3\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 100000 + 10;\nint a[maxn], vis[maxn];\nint n, m, cnt;\nvector<int> G[maxn];\nbool bfs() {\n  memset(vis, 0, sizeof(vis));\n  vis[cnt] = 1;\n  queue<int> q;\n  q.push(cnt);\n  while (!q.empty()) {\n    int t = q.front();\n    q.pop();\n    for (int i = 0; i < G[t].size(); i++) {\n      if (!vis[G[t][i]]) {\n        vis[G[t][i]] = 1;\n        q.push(G[t][i]);\n      }\n    }\n  }\n  return vis[1];\n}\nint main() {\n  memset(a, 0, sizeof(a));\n  scanf(\"%d%d\", &n, &m);\n  cnt = 0;\n  while (m--) {\n    int x;\n    char sign;\n    scanf(\" %c%d\", &sign, &x);\n    if (sign == '+')\n      a[x] = 1;\n    else\n      G[x].push_back(++cnt);\n  }\n  if (!bfs()) a[1] = 1;\n  for (int i = 1; i <= n; i++) {\n    if (a[i] &&!vis[i])\n      cout << \"Lie\" << endl;\n    else if (a[i] && vis[i])\n      cout << \"Truth\" << endl;\n    else\n      cout << \"Not defined\" << endl;\n  }\n}\n"}
{"src_uid": "c761bb69cf1b5a3dbe38d9f5c46e9007", "id": 41, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 1\\r\\n+1\\r\\n', 'output': ['Truth\\r\\n']}, {'input': '3 2\\r\\n-1\\r\\n-2\\r\\n-3\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '4 1\\r\\n+2\\r\\n-3\\r\\n+4\\r\\n-1\\r\\n', 'output': ['Lie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\n']}, {'input': '1 0\\r\\n-1\\r\\n', 'output': ['Lie\\r\\n']}, {'input': '2 2\\r\\n+1\\r\\n+1\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\n']}, {'input': '2 1\\r\\n+2\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\n']}, {'input': '2 0\\r\\n-2\\r\\n-2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\n']}, {'input': '3 1\\r\\n+2\\r\\n+3\\r\\n+3\\r\\n', 'output': ['Truth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '6 3\\r\\n+5\\r\\n+5\\r\\n+5\\r\\n+1\\r\\n+1\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '4 3\\r\\n-4\\r\\n-3\\r\\n-1\\r\\n-3\\r\\n', 'output': ['Not defined\\r\\nTruth\\r\\nNot defined\\r\\nTruth\\r\\n']}, {'input': '10 4\\r\\n-8\\r\\n+1\\r\\n-6\\r\\n-10\\r\\n+5\\r\\n-6\\r\\n-8\\r\\n-8\\r\\n-4\\r\\n-8\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-4\\r\\n+4\\r\\n+4\\r\\n-9\\r\\n-9\\r\\n-4\\r\\n-4\\r\\n+2\\r\\n-9\\r\\n-4\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '7 2\\r\\n+5\\r\\n+5\\r\\n+5\\r\\n-2\\r\\n+1\\r\\n-5\\r\\n-6\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\n']}, {'input': '7 4\\r\\n+7\\r\\n-3\\r\\n-3\\r\\n-4\\r\\n+3\\r\\n+3\\r\\n+3\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '6 3\\r\\n-6\\r\\n-1\\r\\n+5\\r\\n+1\\r\\n+6\\r\\n+1\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\n']}, {'input': '5 3\\r\\n-2\\r\\n+2\\r\\n+2\\r\\n-3\\r\\n+5\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\n']}, {'input': '3 0\\r\\n-2\\r\\n-2\\r\\n-2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '5 3\\r\\n-1\\r\\n-1\\r\\n-4\\r\\n+1\\r\\n-4\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '9 6\\r\\n+2\\r\\n+7\\r\\n+7\\r\\n-1\\r\\n-4\\r\\n+7\\r\\n-7\\r\\n+7\\r\\n+5\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '43 18\\r\\n-14\\r\\n-28\\r\\n+16\\r\\n+10\\r\\n+25\\r\\n-30\\r\\n+25\\r\\n+30\\r\\n+25\\r\\n+25\\r\\n+25\\r\\n+25\\r\\n-25\\r\\n+22\\r\\n+3\\r\\n-17\\r\\n+16\\r\\n-25\\r\\n+10\\r\\n+14\\r\\n+41\\r\\n+25\\r\\n-25\\r\\n+33\\r\\n+24\\r\\n-23\\r\\n-25\\r\\n+25\\r\\n-22\\r\\n+29\\r\\n+28\\r\\n-25\\r\\n-25\\r\\n-29\\r\\n+11\\r\\n+26\\r\\n-25\\r\\n+25\\r\\n+10\\r\\n+1\\r\\n-20\\r\\n-17\\r\\n+23\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '28 12\\r\\n+10\\r\\n-7\\r\\n+17\\r\\n-20\\r\\n+7\\r\\n-7\\r\\n+13\\r\\n-21\\r\\n-7\\r\\n-7\\r\\n-18\\r\\n+7\\r\\n+7\\r\\n+3\\r\\n+6\\r\\n+14\\r\\n+7\\r\\n-24\\r\\n-21\\r\\n-7\\r\\n-7\\r\\n+4\\r\\n+7\\r\\n-7\\r\\n+21\\r\\n-7\\r\\n-26\\r\\n+7\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '17 9\\r\\n-6\\r\\n+16\\r\\n+5\\r\\n+16\\r\\n-17\\r\\n+17\\r\\n-11\\r\\n+5\\r\\n+14\\r\\n+5\\r\\n-8\\r\\n-5\\r\\n+6\\r\\n-2\\r\\n-11\\r\\n+4\\r\\n+17\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '14 3\\r\\n+14\\r\\n+12\\r\\n-9\\r\\n+9\\r\\n-9\\r\\n-9\\r\\n+8\\r\\n+9\\r\\n+2\\r\\n+1\\r\\n-13\\r\\n-9\\r\\n+13\\r\\n+3\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n-9\\r\\n-8\\r\\n-5\\r\\n-9\\r\\n-7\\r\\n-9\\r\\n-9\\r\\n-9\\r\\n-4\\r\\n-9\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-5\\r\\n-1\\r\\n+10\\r\\n-3\\r\\n-10\\r\\n-9\\r\\n-10\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-2\\r\\n-2\\r\\n-6\\r\\n-7\\r\\n-3\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 6\\r\\n-9\\r\\n-7\\r\\n-5\\r\\n-5\\r\\n-4\\r\\n-2\\r\\n-8\\r\\n-5\\r\\n-5\\r\\n-9\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 4\\r\\n-8\\r\\n-2\\r\\n-8\\r\\n+1\\r\\n-4\\r\\n-8\\r\\n-2\\r\\n-8\\r\\n-8\\r\\n-1\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 2\\r\\n-8\\r\\n+10\\r\\n+1\\r\\n+8\\r\\n+4\\r\\n+8\\r\\n+6\\r\\n-8\\r\\n+10\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 3\\r\\n+9\\r\\n+3\\r\\n+8\\r\\n+3\\r\\n+6\\r\\n-3\\r\\n+6\\r\\n+8\\r\\n+3\\r\\n+7\\r\\n', 'output': ['Lie\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\n']}, {'input': '10 8\\r\\n-2\\r\\n+9\\r\\n+9\\r\\n-4\\r\\n+9\\r\\n+9\\r\\n+4\\r\\n-9\\r\\n-3\\r\\n+9\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 7\\r\\n-4\\r\\n+6\\r\\n+4\\r\\n+9\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n+3\\r\\n+5\\r\\n+6\\r\\n+10\\r\\n+5\\r\\n+5\\r\\n+6\\r\\n+8\\r\\n+5\\r\\n+6\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 7\\r\\n-6\\r\\n-10\\r\\n-3\\r\\n-1\\r\\n-3\\r\\n-7\\r\\n-2\\r\\n-7\\r\\n-7\\r\\n-3\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '10 5\\r\\n-4\\r\\n-4\\r\\n-1\\r\\n-5\\r\\n-7\\r\\n-4\\r\\n-4\\r\\n-4\\r\\n-1\\r\\n-7\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 5\\r\\n-9\\r\\n-7\\r\\n-6\\r\\n-3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-8\\r\\n-4\\r\\n-10\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-8\\r\\n-8\\r\\n-4\\r\\n-9\\r\\n-10\\r\\n-2\\r\\n-9\\r\\n-8\\r\\n-8\\r\\n-8\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n+7\\r\\n+8\\r\\n+9\\r\\n+1\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+6\\r\\n+6\\r\\n+7\\r\\n', 'output': ['Truth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 5\\r\\n+2\\r\\n+2\\r\\n+2\\r\\n+2\\r\\n+9\\r\\n+10\\r\\n+8\\r\\n+7\\r\\n+4\\r\\n+2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 9\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+5\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 3\\r\\n+10\\r\\n+2\\r\\n+10\\r\\n+9\\r\\n+1\\r\\n+9\\r\\n+4\\r\\n+9\\r\\n+3\\r\\n+2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 6\\r\\n+10\\r\\n+10\\r\\n+10\\r\\n+3\\r\\n+10\\r\\n+10\\r\\n+6\\r\\n+6\\r\\n+10\\r\\n+8\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '3 2\\r\\n-1\\r\\n+2\\r\\n+3\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e5 + 111;\nvector<int> vec[MAXN];\nint v[MAXN];\nbool vis[MAXN];\nvoid dfs(int x) {\n  vis[x] = 1;\n  for (int i = 0; i < vec[x].size(); i++) {\n    if (!vis[vec[x][i]]) {\n      dfs(vec[x][i]);\n    }\n  }\n}\nint main() {\n  int n, m;\n  scanf(\"%d%d\", &n, &m);\n  for (int i = 1; i <= n; i++) {\n    char c;\n    scanf(\"%c%d\", &c, &v[i]);\n    if (c == '+') {\n      vec[v[i]].push_back(i);\n    }\n  }\n  dfs(m);\n  for (int i = 1; i <= n; i++) {\n    if (v[i] == i)\n      printf(\"Truth\\n\");\n    else if (vis[i])\n      printf(\"Lie\\n\");\n    else\n      printf(\"Not defined\\n\");\n  }\n}\n"}
{"src_uid": "f71d1ffcea72f5b72ead3c0bcfa323f2", "id": 42, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': '41\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '2\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + eax]\\r\\n']}, {'input': '4\\r\\n', 'output': ['1\\r\\nlea ebx, [4*eax]\\r\\n']}, {'input': '6\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\n']}, {'input': '5\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 4*eax]\\r\\n']}, {'input': '14\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '15\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\n']}, {'input': '17\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\n']}, {'input': '7\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\n']}, {'input': '3\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 2*eax]\\r\\n']}, {'input': '16\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '58\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '1\\r\\n', 'output': ['0\\r\\n']}, {'input': '8\\r\\n', 'output': ['1\\r\\nlea ebx, [8*eax]\\r\\n']}, {'input': '9\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 8*eax]\\r\\n']}, {'input': '10\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\n']}, {'input': '11\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\n']}, {'input': '12\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '13\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\n']}, {'input': '254\\r\\n', 'output': ['5\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\nlea efx, [eex + 2*eax]\\r\\n']}, {'input': '197\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '210\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '109\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '233\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '220\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '167\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '63\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\n']}, {'input': '171\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '126\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '223\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '46\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '207\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '202\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '216\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '138\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '106\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '74\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '129\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '191\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '67\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '42\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '104\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '235\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '240\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '116\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '57\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '200\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '28\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '54\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\n']}, {'input': '51\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '44\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '147\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '82\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '113\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '176\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '66\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '118\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '158\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [eax + 4*ebx]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '184\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '172\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '94\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '221\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 4*edx]\\r\\n']}, {'input': '100\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '139\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '187\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '192\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '130\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '244\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '115\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '59\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '183\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '120\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '251\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '189\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '47\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '204\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '194\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '135\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '70\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '69\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '144\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '141\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '159\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '149\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '173\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '90\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\n']}, {'input': '253\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '125\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '174\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 8*ebx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '26\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '157\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '179\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '84\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '188\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '24\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '205\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '49\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '136\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '225\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '215\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '153\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*ebx]\\r\\n']}, {'input': '143\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '248\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '219\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '226\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '80\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '255\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '25\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\n']}, {'input': '228\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '148\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '134\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '98\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '114\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '91\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '218\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '55\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '214\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '237\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 2*ebx]\\r\\n']}, {'input': '152\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '155\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '166\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '201\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '193\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '36\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '185\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '86\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '230\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '208\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '145\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '209\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 8*edx]\\r\\n']}, {'input': '83\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '40\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '76\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '31\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '87\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '50\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '79\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '92\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '236\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '30\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '96\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '56\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '45\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\n']}, {'input': '60\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '127\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '48\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '65\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '112\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '61\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '75\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '101\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '232\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '224\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '213\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '131\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '119\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '107\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '62\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '128\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '196\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '234\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 8*ebx]\\r\\n']}, {'input': '18\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\n']}, {'input': '217\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '32\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '175\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '198\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 4*ebx]\\r\\n']}, {'input': '77\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '35\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '29\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '19\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\n']}, {'input': '39\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '85\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '111\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '247\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '161\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '68\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '117\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\n']}, {'input': '239\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '156\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '199\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '78\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '227\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '160\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '180\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '142\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '181\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '103\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '95\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '99\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\n']}, {'input': '34\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '250\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '89\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '137\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '252\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '168\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '110\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '52\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '246\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '178\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '211\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '27\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\n']}, {'input': '105\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '43\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '73\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '124\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '121\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '133\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '162\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '20\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '102\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + ecx]\\r\\n']}, {'input': '154\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*ebx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '165\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '72\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '33\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '238\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '182\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '140\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '242\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '212\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '245\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '164\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '195\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '241\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '108\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '81\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\n']}, {'input': '21\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '186\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '243\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '22\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '53\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '151\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '122\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '71\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '222\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '231\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '23\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '37\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '206\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '163\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '229\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '203\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '150\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '190\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '64\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '93\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '123\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '97\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '169\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '249\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '38\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '88\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '146\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '170\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '177\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [eax + 8*edx]\\r\\n']}, {'input': '132\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n;\n  cin >> n;\n  long long cntr = 0;\n  long long x;\n  while (n > 1) {\n    x = (long long)log2(n);\n    cntr++;\n    n = n << x;\n  }\n  if (cntr == 0) {\n    cout << 1 << \"\\n\";\n    cout << \"lea ebx, [eax + eax]\\n\";\n    return 0;\n  }\n  for (int i = cntr - 1; i >= 1; i--) {\n    if (n & (1 << i)) {\n      cout << 1 << \"\\n\";\n      cout << \"lea ebx, [eax + \" << (1 << (i - 1)) << \"*eax]\\n\";\n      n -= (1 << (i - 1));\n    }\n  }\n  cout << 1 << \"\\n\";\n  cout << \"lea ebx, [\";\n  if (n == 1)\n    cout << \"eax + eax\";\n  else\n    cout << n << \"*eax\";\n  cout << \"]\\n\";\n}\n"}
{"src_uid": "f71d1ffcea72f5b72ead3c0bcfa323f2", "id": 42, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': '41\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '2\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + eax]\\r\\n']}, {'input': '4\\r\\n', 'output': ['1\\r\\nlea ebx, [4*eax]\\r\\n']}, {'input': '6\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\n']}, {'input': '5\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 4*eax]\\r\\n']}, {'input': '14\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '15\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\n']}, {'input': '17\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\n']}, {'input': '7\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\n']}, {'input': '3\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 2*eax]\\r\\n']}, {'input': '16\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '58\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '1\\r\\n', 'output': ['0\\r\\n']}, {'input': '8\\r\\n', 'output': ['1\\r\\nlea ebx, [8*eax]\\r\\n']}, {'input': '9\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 8*eax]\\r\\n']}, {'input': '10\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\n']}, {'input': '11\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\n']}, {'input': '12\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '13\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\n']}, {'input': '254\\r\\n', 'output': ['5\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\nlea efx, [eex + 2*eax]\\r\\n']}, {'input': '197\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '210\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '109\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '233\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '220\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '167\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '63\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\n']}, {'input': '171\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '126\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '223\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '46\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '207\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '202\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '216\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '138\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '106\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '74\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '129\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '191\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '67\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '42\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '104\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '235\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '240\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '116\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '57\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '200\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '28\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '54\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\n']}, {'input': '51\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '44\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '147\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '82\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '113\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '176\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '66\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '118\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '158\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [eax + 4*ebx]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '184\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '172\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '94\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '221\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 4*edx]\\r\\n']}, {'input': '100\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '139\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '187\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '192\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '130\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '244\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '115\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '59\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '183\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '120\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '251\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '189\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '47\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '204\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '194\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '135\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '70\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '69\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '144\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '141\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '159\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '149\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '173\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '90\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\n']}, {'input': '253\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '125\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '174\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 8*ebx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '26\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '157\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '179\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '84\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '188\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '24\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '205\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '49\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '136\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '225\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '215\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '153\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*ebx]\\r\\n']}, {'input': '143\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '248\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '219\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '226\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '80\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '255\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '25\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\n']}, {'input': '228\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '148\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '134\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '98\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '114\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '91\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '218\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '55\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '214\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '237\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 2*ebx]\\r\\n']}, {'input': '152\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '155\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '166\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '201\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '193\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '36\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '185\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '86\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '230\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '208\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '145\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '209\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 8*edx]\\r\\n']}, {'input': '83\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '40\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '76\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '31\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '87\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '50\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '79\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '92\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '236\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '30\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '96\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '56\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '45\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\n']}, {'input': '60\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '127\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '48\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '65\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '112\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '61\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '75\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '101\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '232\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '224\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '213\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '131\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '119\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '107\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '62\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '128\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '196\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '234\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 8*ebx]\\r\\n']}, {'input': '18\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\n']}, {'input': '217\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '32\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '175\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '198\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 4*ebx]\\r\\n']}, {'input': '77\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '35\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '29\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '19\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\n']}, {'input': '39\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '85\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '111\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '247\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '161\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '68\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '117\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\n']}, {'input': '239\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '156\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '199\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '78\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '227\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '160\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '180\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '142\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '181\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '103\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '95\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '99\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\n']}, {'input': '34\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '250\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '89\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '137\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '252\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '168\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '110\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '52\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '246\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '178\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '211\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '27\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\n']}, {'input': '105\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '43\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '73\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '124\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '121\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '133\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '162\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '20\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '102\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + ecx]\\r\\n']}, {'input': '154\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*ebx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '165\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '72\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '33\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '238\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '182\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '140\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '242\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '212\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '245\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '164\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '195\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '241\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '108\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '81\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\n']}, {'input': '21\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '186\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '243\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '22\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '53\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '151\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '122\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '71\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '222\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '231\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '23\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '37\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '206\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '163\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '229\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '203\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '150\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '190\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '64\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '93\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '123\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '97\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '169\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '249\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '38\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '88\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '146\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '170\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '177\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [eax + 8*edx]\\r\\n']}, {'input': '132\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint main() {\n  scanf(\"%d\", &n);\n  int x = 1;\n  int num = 0;\n  for (int i = 0; i < 8; i++) {\n    if ((1 << i) & n) {\n      x *= 1 << i;\n      num = i;\n    }\n  }\n  printf(\"%d\\n\", num + 1);\n  for (int i = num; i >= 0; i--) {\n    if (i == 0) {\n      printf(\"lea eax, [%d*eax]\\n\", (1 << i));\n      continue;\n    }\n    printf(\"lea ebx, [eax + %d*eax]\\n\", (1 << i));\n    for (int j = i - 1; j >= 0; j--) {\n      if (j) {\n        printf(\"lea ebx, [ebx + %d*eax]\\n\", (1 << j));\n      } else {\n        printf(\"lea eax, [ebx]\\n\");\n      }\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "f71d1ffcea72f5b72ead3c0bcfa323f2", "id": 42, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': '41\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '2\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + eax]\\r\\n']}, {'input': '4\\r\\n', 'output': ['1\\r\\nlea ebx, [4*eax]\\r\\n']}, {'input': '6\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\n']}, {'input': '5\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 4*eax]\\r\\n']}, {'input': '14\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '15\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\n']}, {'input': '17\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\n']}, {'input': '7\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\n']}, {'input': '3\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 2*eax]\\r\\n']}, {'input': '16\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '58\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '1\\r\\n', 'output': ['0\\r\\n']}, {'input': '8\\r\\n', 'output': ['1\\r\\nlea ebx, [8*eax]\\r\\n']}, {'input': '9\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 8*eax]\\r\\n']}, {'input': '10\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\n']}, {'input': '11\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\n']}, {'input': '12\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '13\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\n']}, {'input': '254\\r\\n', 'output': ['5\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\nlea efx, [eex + 2*eax]\\r\\n']}, {'input': '197\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '210\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '109\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '233\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '220\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '167\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '63\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\n']}, {'input': '171\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '126\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '223\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '46\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '207\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '202\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '216\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '138\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '106\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '74\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '129\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '191\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '67\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '42\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '104\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '235\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '240\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '116\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '57\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '200\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '28\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '54\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\n']}, {'input': '51\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '44\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '147\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '82\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '113\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '176\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '66\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '118\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '158\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [eax + 4*ebx]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '184\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '172\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '94\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '221\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 4*edx]\\r\\n']}, {'input': '100\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '139\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '187\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '192\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '130\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '244\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '115\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '59\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '183\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '120\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '251\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '189\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '47\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '204\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '194\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '135\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '70\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '69\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '144\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '141\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '159\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '149\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '173\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '90\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\n']}, {'input': '253\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '125\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '174\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 8*ebx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '26\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '157\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '179\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '84\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '188\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '24\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '205\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '49\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '136\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '225\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '215\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '153\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*ebx]\\r\\n']}, {'input': '143\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '248\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '219\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '226\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '80\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '255\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '25\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\n']}, {'input': '228\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '148\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '134\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '98\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '114\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '91\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '218\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '55\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '214\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '237\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 2*ebx]\\r\\n']}, {'input': '152\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '155\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '166\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '201\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '193\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '36\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '185\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '86\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '230\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '208\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '145\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '209\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 8*edx]\\r\\n']}, {'input': '83\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '40\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '76\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '31\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '87\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '50\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '79\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '92\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '236\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '30\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '96\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '56\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '45\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\n']}, {'input': '60\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '127\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '48\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '65\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '112\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '61\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '75\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '101\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '232\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '224\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '213\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '131\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '119\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '107\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '62\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '128\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '196\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '234\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 8*ebx]\\r\\n']}, {'input': '18\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\n']}, {'input': '217\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '32\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '175\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '198\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 4*ebx]\\r\\n']}, {'input': '77\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '35\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '29\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '19\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\n']}, {'input': '39\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '85\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '111\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '247\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '161\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '68\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '117\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\n']}, {'input': '239\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '156\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '199\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '78\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '227\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '160\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '180\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '142\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '181\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '103\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '95\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '99\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\n']}, {'input': '34\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '250\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '89\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '137\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '252\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '168\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '110\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '52\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '246\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '178\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '211\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '27\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\n']}, {'input': '105\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '43\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '73\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '124\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '121\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '133\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '162\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '20\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '102\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + ecx]\\r\\n']}, {'input': '154\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*ebx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '165\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '72\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '33\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '238\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '182\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '140\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '242\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '212\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '245\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '164\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '195\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '241\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '108\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '81\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\n']}, {'input': '21\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '186\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '243\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '22\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '53\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '151\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '122\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '71\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '222\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '231\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '23\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '37\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '206\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '163\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '229\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '203\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '150\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '190\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '64\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '93\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '123\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '97\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '169\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '249\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '38\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '88\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '146\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '170\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '177\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [eax + 8*edx]\\r\\n']}, {'input': '132\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint main() {\n  scanf(\"%d\", &n);\n  int m;\n  for (m = 1; 1 << m <= n; m++)\n    ;\n  printf(\"%d\\n\", m);\n  for (int i = 1; i < m; i++) printf(\"lea ebx, [%d*eax]\\n\", 1 << i);\n  printf(\"lea eax, [eax + %d*ebx]\\n\", n - (1 << m));\n  return 0;\n}\n"}
{"src_uid": "f71d1ffcea72f5b72ead3c0bcfa323f2", "id": 42, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': '41\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '2\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + eax]\\r\\n']}, {'input': '4\\r\\n', 'output': ['1\\r\\nlea ebx, [4*eax]\\r\\n']}, {'input': '6\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\n']}, {'input': '5\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 4*eax]\\r\\n']}, {'input': '14\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '15\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\n']}, {'input': '17\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\n']}, {'input': '7\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\n']}, {'input': '3\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 2*eax]\\r\\n']}, {'input': '16\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '58\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '1\\r\\n', 'output': ['0\\r\\n']}, {'input': '8\\r\\n', 'output': ['1\\r\\nlea ebx, [8*eax]\\r\\n']}, {'input': '9\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 8*eax]\\r\\n']}, {'input': '10\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\n']}, {'input': '11\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\n']}, {'input': '12\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '13\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\n']}, {'input': '254\\r\\n', 'output': ['5\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\nlea efx, [eex + 2*eax]\\r\\n']}, {'input': '197\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '210\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '109\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '233\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '220\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '167\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '63\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\n']}, {'input': '171\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '126\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '223\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '46\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '207\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '202\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '216\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '138\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '106\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '74\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '129\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '191\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '67\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '42\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '104\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '235\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '240\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '116\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '57\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '200\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '28\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '54\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\n']}, {'input': '51\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '44\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '147\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '82\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '113\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '176\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '66\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '118\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '158\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [eax + 4*ebx]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '184\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '172\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '94\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '221\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 4*edx]\\r\\n']}, {'input': '100\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '139\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '187\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '192\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '130\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '244\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '115\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '59\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '183\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '120\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '251\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '189\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '47\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '204\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '194\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '135\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '70\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '69\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '144\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '141\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '159\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '149\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '173\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '90\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\n']}, {'input': '253\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '125\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '174\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 8*ebx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '26\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '157\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '179\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '84\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '188\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '24\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '205\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '49\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '136\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '225\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '215\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '153\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*ebx]\\r\\n']}, {'input': '143\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '248\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '219\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '226\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '80\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '255\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '25\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\n']}, {'input': '228\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '148\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '134\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '98\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '114\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '91\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '218\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '55\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '214\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '237\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 2*ebx]\\r\\n']}, {'input': '152\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '155\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '166\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '201\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '193\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '36\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '185\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '86\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '230\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '208\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '145\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '209\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 8*edx]\\r\\n']}, {'input': '83\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '40\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '76\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '31\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '87\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '50\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '79\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '92\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '236\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '30\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '96\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '56\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '45\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\n']}, {'input': '60\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '127\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '48\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '65\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '112\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '61\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '75\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '101\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '232\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '224\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '213\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '131\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '119\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '107\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '62\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '128\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '196\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '234\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 8*ebx]\\r\\n']}, {'input': '18\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\n']}, {'input': '217\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '32\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '175\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '198\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 4*ebx]\\r\\n']}, {'input': '77\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '35\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '29\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '19\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\n']}, {'input': '39\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '85\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '111\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '247\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '161\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '68\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '117\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\n']}, {'input': '239\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '156\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '199\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '78\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '227\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '160\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '180\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '142\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '181\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '103\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '95\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '99\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\n']}, {'input': '34\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '250\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '89\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '137\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '252\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '168\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '110\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '52\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '246\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '178\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '211\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '27\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\n']}, {'input': '105\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '43\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '73\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '124\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '121\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '133\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '162\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '20\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '102\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + ecx]\\r\\n']}, {'input': '154\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*ebx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '165\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '72\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '33\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '238\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '182\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '140\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '242\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '212\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '245\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '164\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '195\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '241\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '108\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '81\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\n']}, {'input': '21\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '186\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '243\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '22\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '53\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '151\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '122\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '71\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '222\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '231\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '23\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '37\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '206\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '163\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '229\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '203\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '150\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '190\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '64\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '93\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '123\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '97\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '169\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '249\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '38\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '88\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '146\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '170\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '177\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [eax + 8*edx]\\r\\n']}, {'input': '132\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int i, cnt;\n  long long int N;\n  cin >> N;\n  cnt = 0;\n  for (i = 1; i < 32; i <<= 1) {\n    if (N & i) cnt++, N ^= i;\n  }\n  if (N == 1)\n    cout << cnt << endl;\n  else\n    cout << cnt + 1 << endl;\n  if (cnt == 0)\n    cout << \"lea ebx, [\" << N << \"*eax]\" << endl;\n  else {\n    cout << \"lea ebx, [eax + eax]\" << endl;\n    N = (N == 1? 2 : N);\n    for (i = 2; i < cnt + 1; i++) cout << \"lea ebx, [ebx + \" << N << \"*eax]\"\n                                          << endl;\n  }\n  return 0;\n}\n"}
{"src_uid": "f71d1ffcea72f5b72ead3c0bcfa323f2", "id": 42, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': '41\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '2\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + eax]\\r\\n']}, {'input': '4\\r\\n', 'output': ['1\\r\\nlea ebx, [4*eax]\\r\\n']}, {'input': '6\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\n']}, {'input': '5\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 4*eax]\\r\\n']}, {'input': '14\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '15\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\n']}, {'input': '17\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\n']}, {'input': '7\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\n']}, {'input': '3\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 2*eax]\\r\\n']}, {'input': '16\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '58\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '1\\r\\n', 'output': ['0\\r\\n']}, {'input': '8\\r\\n', 'output': ['1\\r\\nlea ebx, [8*eax]\\r\\n']}, {'input': '9\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 8*eax]\\r\\n']}, {'input': '10\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\n']}, {'input': '11\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\n']}, {'input': '12\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '13\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\n']}, {'input': '254\\r\\n', 'output': ['5\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\nlea efx, [eex + 2*eax]\\r\\n']}, {'input': '197\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '210\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '109\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '233\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '220\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '167\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '63\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\n']}, {'input': '171\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '126\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '223\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '46\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '207\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '202\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '216\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '138\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '106\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '74\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '129\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '191\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '67\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '42\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '104\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '235\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '240\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '116\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '57\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '200\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '28\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '54\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\n']}, {'input': '51\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '44\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '147\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '82\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '113\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '176\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '66\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '118\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '158\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [eax + 4*ebx]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '184\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '172\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '94\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '221\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 4*edx]\\r\\n']}, {'input': '100\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '139\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '187\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '192\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '130\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '244\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '115\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '59\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '183\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '120\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '251\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '189\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '47\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '204\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '194\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '135\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '70\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '69\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '144\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '141\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '159\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '149\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '173\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '90\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\n']}, {'input': '253\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '125\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '174\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 8*ebx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '26\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '157\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '179\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '84\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '188\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '24\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '205\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '49\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '136\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '225\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '215\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '153\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*ebx]\\r\\n']}, {'input': '143\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '248\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '219\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '226\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '80\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '255\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '25\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\n']}, {'input': '228\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '148\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '134\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '98\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '114\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '91\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '218\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '55\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '214\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '237\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 2*ebx]\\r\\n']}, {'input': '152\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '155\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '166\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '201\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '193\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '36\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '185\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '86\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '230\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '208\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '145\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '209\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 8*edx]\\r\\n']}, {'input': '83\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '40\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '76\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '31\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '87\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '50\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '79\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '92\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '236\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '30\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '96\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '56\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '45\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\n']}, {'input': '60\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '127\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '48\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '65\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '112\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '61\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '75\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '101\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '232\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '224\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '213\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '131\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '119\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '107\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '62\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '128\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '196\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '234\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 8*ebx]\\r\\n']}, {'input': '18\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\n']}, {'input': '217\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '32\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '175\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '198\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 4*ebx]\\r\\n']}, {'input': '77\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '35\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '29\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '19\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\n']}, {'input': '39\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '85\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '111\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '247\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '161\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '68\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '117\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\n']}, {'input': '239\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '156\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '199\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '78\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '227\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '160\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '180\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '142\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '181\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '103\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '95\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '99\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\n']}, {'input': '34\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '250\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '89\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '137\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '252\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '168\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '110\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '52\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '246\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '178\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '211\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '27\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\n']}, {'input': '105\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '43\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '73\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '124\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '121\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '133\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '162\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '20\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '102\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + ecx]\\r\\n']}, {'input': '154\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*ebx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '165\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '72\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '33\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '238\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '182\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '140\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '242\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '212\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '245\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '164\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '195\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '241\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '108\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '81\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\n']}, {'input': '21\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '186\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '243\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '22\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '53\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '151\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '122\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '71\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '222\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '231\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '23\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '37\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '206\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '163\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '229\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '203\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '150\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '190\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '64\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '93\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '123\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '97\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '169\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '249\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '38\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '88\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '146\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '170\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '177\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [eax + 8*edx]\\r\\n']}, {'input': '132\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nlong long n;\nint main() {\n  scanf(\"%lld\", &n);\n  long long x = 1, y = 0;\n  for (int i = 0; i < 8; ++i) {\n    if (n == x) goto exit;\n    if (n > x)\n      y = y * 2 + 1, x *= 2;\n    else\n      y = y * 2, x *= 2, --i;\n  }\n  printf(\"1\\nlea ebx, [%d*eax]\\n\", x);\nexit:\n  printf(\"%d\\nlea eax, [ebx + %d*eax]\\n\", y, x);\n}\n"}
{"src_uid": "cec0f6c267fa76191a3784b08e39acd6", "id": 43, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '20 3\\r\\n2 3 5\\r\\n', 'output': ['6\\r\\n']}, {'input': '50 2\\r\\n15 8\\r\\n', 'output': ['41\\r\\n']}, {'input': '100 5\\r\\n10 9 7 11 19\\r\\n', 'output': ['56\\r\\n']}, {'input': '1 10\\r\\n2 3 5 7 11 13 17 19 23 29\\r\\n', 'output': ['1\\r\\n']}, {'input': '1000 10\\r\\n2 3 5 7 11 13 17 19 23 29\\r\\n', 'output': ['160\\r\\n']}, {'input': '666 5\\r\\n877 881 997 883 887\\r\\n', 'output': ['666\\r\\n']}, {'input': '4 2\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '2 1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '211 4\\r\\n7 3 2 5\\r\\n', 'output': ['49\\r\\n']}, {'input': '2008 3\\r\\n7 9 11\\r\\n', 'output': ['1392\\r\\n']}, {'input': '1000 11\\r\\n29 23 19 17 13 1 11 7 5 3 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '1 6\\r\\n4 27 125 11 13 29\\r\\n', 'output': ['1\\r\\n']}, {'input': '50 5\\r\\n2 7 5 51 19\\r\\n', 'output': ['16\\r\\n']}, {'input': '997 11\\r\\n13 17 19 23 29 997 121 49 25 9 4\\r\\n', 'output': ['474\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '308 4\\r\\n5 2 7 3\\r\\n', 'output': ['70\\r\\n']}, {'input': '980 8\\r\\n17 2 3 11 5 13 19 7\\r\\n', 'output': ['166\\r\\n']}, {'input': '770 4\\r\\n3 5 2 7\\r\\n', 'output': ['176\\r\\n']}, {'input': '877 5\\r\\n7 2 11 3 5\\r\\n', 'output': ['182\\r\\n']}, {'input': '289 8\\r\\n19 13 5 7 11 3 23 17\\r\\n', 'output': ['99\\r\\n']}, {'input': '4943 38\\r\\n419 127 5 281 509 839 593 409 577 463 421 617 587 739 397 743 401 179 343 31 599 349 647 89 293 521 797 431 487 881 761 43 877 643 149 353 467 909\\r\\n', 'output': ['3375\\r\\n']}, {'input': '9619 35\\r\\n131 13 677 43 243 389 577 59 857 71 199 227 841 257 719 601 349 181 73 8 463 311 439 761 449 167 569 191 683 283 379 263 499 571 277\\r\\n', 'output': ['6578\\r\\n']}, {'input': '2852 62\\r\\n401 919 643 367 283 127 593 251 443 389 683 157 227 361 547 997 439 113 239 727 197 947 37 761 929 167 67 431 577 673 625 49 83 11 409 27 769 967 449 199 241 491 571 487 733 653 281 73 107 887 101 827 103 751 787 89 256 607 229 971 463 211\\r\\n', 'output': ['1826\\r\\n']}, {'input': '1138 12\\r\\n31 169 389 337 937 763 251 443 199 661 577 487\\r\\n', 'output': ['1074\\r\\n']}, {'input': '8849 56\\r\\n619 401 733 251 107 37 829 719 479 751 419 523 617 947 809 53 47 313 577 709 71 277 256 547 683 769 269 701 127 863 409 331 19 443 149 841 877 67 521 929 919 773 883 421 17 601 937 61 263 109 103 41 859 197 293 983\\r\\n', 'output': ['5875\\r\\n']}, {'input': '718 3\\r\\n770 337 743\\r\\n', 'output': ['716\\r\\n']}, {'input': '1785 69\\r\\n547 281 347 11 139 883 863 169 643 83 709 719 397 809 157 349 887 523 757 41 181 499 479 619 197 691 971 773 125 569 647 61 101 839 19 359 29 167 331 353 947 379 53 631 109 853 193 23 421 107 911 269 289 71 977 241 761 677 739 263 659 823 229 764 373 509 661 857 961\\r\\n', 'output': ['1020\\r\\n']}, {'input': '7990 37\\r\\n547 541 449 47 463 929 983 647 113 877 683 41 79 961 625 283 349 641 841 729 811 701 619 293 281 859 199 229 607 941 467 809 109 773 443 919 911\\r\\n', 'output': ['6922\\r\\n']}, {'input': '9566 91\\r\\n353 401 349 479 233 367 563 311 643 769 521 173 457 59 523 257 317 659 857 743 619 277 83 181 109 131 359 211 139 841 761 929 61 271 827 719 499 289 677 449 877 389 71 53 223 263 571 199 727 163 31 2 373 463 431 613 809 947 467 797 547 883 409 911 41 79 821 881 503 739 433 251 823 701 991 193 997 19 241 607 487 509 729 569 179 151 229 673 691 443 859\\r\\n', 'output': ['2982\\r\\n']}, {'input': '6254 91\\r\\n421 379 47 683 953 97 311 439 233 271 797 71 991 131 109 829 419 499 857 827 313 841 73 571 4 389 631 103 83 587 911 43 643 89 743 593 541 243 503 251 863 61 157 349 223 647 853 467 443 173 617 577 947 25 739 599 751 653 281 811 163 397 409 919 463 79 971 727 113 53 7 787 641 701 883 307 137 293 241 229 269 487 239 107 67 479 191 823 121 367 449\\r\\n', 'output': ['2399\\r\\n']}, {'input': '815442 99\\r\\n131 227 503 269 61 107 103 47 263 3 239 167 401 67 13 359 431 137 523 37 53 379 79 461 421 127 313 173 109 31 433 317 193 149 373 19 521 241 251 43 151 397 7 307 11 409 139 443 439 449 281 479 113 293 557 97 41 2 353 487 383 23 29 509 547 191 163 467 349 491 5 463 541 17 73 499 101 347 257 277 197 367 283 59 199 457 157 229 83 311 233 223 181 89 337 179 211 419 331\\r\\n', 'output': ['70035\\r\\n']}, {'input': '642382 96\\r\\n487 89 71 251 163 337 3 83 157 313 389 149 409 277 5 73 97 167 103 211 193 223 101 503 41 467 317 79 139 311 347 431 107 179 23 191 233 443 433 7 2 131 173 521 61 499 11 457 331 307 383 397 523 53 449 137 67 239 367 479 263 461 269 31 281 181 359 199 227 373 439 43 421 229 151 37 353 419 509 271 283 463 401 47 349 13 59 293 491 241 109 257 197 17 29 127\\r\\n', 'output': ['58572\\r\\n']}, {'input': '600972 66\\r\\n79 163 73 211 223 7 37 239 65 43 173 31 263 67 179 283 277 193 131 229 97 151 167 293 17 337 191 137 103 109 307 311 149 349 23 181 61 281 241 257 251 53 47 19 269 317 71 127 353 197 89 157 11 113 347 313 227 29 2 83 271 3 107 199 59 233\\r\\n', 'output': ['78012\\r\\n']}, {'input': '363161 80\\r\\n337 127 71 53 73 293 283 401 439 97 61 101 367 131 373 19 233 163 13 229 379 59 263 389 227 41 271 347 419 5 167 107 89 179 223 151 433 431 359 193 269 139 257 31 191 157 43 47 137 383 173 277 281 239 449 109 37 181 331 199 421 23 443 7 103 317 79 113 3 83 313 29 311 307 2 251 197 149 353 11\\r\\n', 'output': ['35160\\r\\n']}, {'input': '693133 76\\r\\n397 181 313 61 389 107 191 97 149 193 179 23 197 139 71 349 251 199 127 13 109 83 211 47 311 113 19 31 7 3 53 229 59 409 331 137 337 277 2 41 233 173 227 131 307 281 79 73 163 101 103 347 379 239 89 37 269 11 167 241 43 283 367 257 29 271 293 373 401 151 67 157 223 353 383 17\\r\\n', 'output': ['78449\\r\\n']}, {'input': '842450 58\\r\\n37 283 89 241 131 83 271 3 179 109 167 79 2 19 173 53 269 31 113 59 263 97 181 233 41 5 71 67 199 107 257 43 151 197 11 101 211 17 229 149 73 13 193 157 61 47 277 227 223 139 29 23 281 137 103 127 163 191\\r\\n', 'output': ['94467\\r\\n']}, {'input': '120713 99\\r\\n59 283 419 509 431 19 443 241 101 491 157 257 17 31 71 127 173 191 37 73 2 367 251 463 227 271 311 557 293 47 547 521 11 397 67 163 541 347 43 523 181 389 103 503 487 113 233 97 139 211 107 29 131 421 317 223 193 3 331 439 5 457 197 461 109 89 409 277 353 401 349 151 379 467 449 61 13 433 479 359 167 137 229 79 53 23 313 263 41 83 269 281 179 373 337 7 307 499 199\\r\\n', 'output': ['11305\\r\\n']}, {'input': '944214 61\\r\\n157 89 23 101 13 17 59 193 199 79 47 151 61 97 163 257 7 83 5 67 41 29 293 229 211 307 271 298 179 227 263 131 113 109 107 313 43 233 181 53 19 103 173 127 283 71 3 137 197 241 281 139 311 31 37 277 11 223 167 239 269\\r\\n', 'output': ['182663\\r\\n']}, {'input': '688274 81\\r\\n401 71 257 163 293 2 89 239 241 11 433 307 67 227 313 353 283 439 41 113 7 229 59 3 47 179 19 251 331 347 173 167 431 421 157 373 311 277 317 389 349 263 397 181 269 191 367 197 79 107 149 359 211 271 29 53 101 419 97 137 409 13 73 5 127 383 131 61 151 199 223 31 43 17 233 337 37 83 139 109 23\\r\\n', 'output': ['61497\\r\\n']}, {'input': '623511 55\\r\\n229 257 17 193 101 103 59 191 53 107 71 113 299 269 211 41 173 2 263 5 197 199 163 149 223 181 167 31 239 97 139 79 233 157 37 3 11 7 131 89 29 83 227 109 19 47 61 271 127 241 73 137 67 151 251\\r\\n', 'output': ['70330\\r\\n']}, {'input': '34202350 95\\r\\n991 181 541 361 659 271 563 577 163 751 961 81 719 43 383 491 101 535 67 389 191 619 709 587 353 529 179 73 121 13 127 607 431 853 569 797 347 79 251 17 409 401 41 193 839 199 211 811 487 601 881 733 241 883 599 239 197 229 49 521 461 787 677 311 503 421 757 613 841 349 821 59 857 727 379 47 151 877 419 643 83 337 103 4 467 443 167 977 439 773 109 479 373 683 97\\r\\n', 'output': ['14676536\\r\\n']}, {'input': '56124673 91\\r\\n181 67 307 409 71 29 89 31 97 659 709 19 241 503 727 823 859 691 971 37 599 227 313 587 967 883 149 937 773 49 379 557 787 11 827 331 367 839 929 757 863 619 257 509 223 947 593 173 487 761 401 25 563 199 661 547 953 983 821 479 461 293 569 311 103 577 433 601 353 271 169 59 733 463 919 419 151 289 449 643 877 43 829 9 467 349 769 631 431 337 457\\r\\n', 'output': ['27823308\\r\\n']}, {'input': '66663476 87\\r\\n81 37 347 227 41 359 25 859 163 809 727 541 829 841 463 919 23 593 599 361 211 839 797 151 343 373 773 907 677 821 13 199 853 571 739 577 367 877 491 379 277 289 257 157 941 883 121 173 769 761 499 233 421 419 961 107 229 709 523 337 461 293 569 857 197 443 433 241 397 479 137 997 179 887 281 127 619 953 823 643 977 317 743 191 467 64 67\\r\\n', 'output': ['41298098\\r\\n']}, {'input': '85912508 97\\r\\n193 971 647 373 757 433 263 283 223 361 101 229 829 379 181 419 239 941 431 523 211 947 107 967 457 47 827 103 131 577 811 911 617 641 709 691 61 53 683 797 751 467 761 163 787 289 2 401 661 257 463 233 739 191 607 853 863 769 281 307 563 487 109 491 631 79 149 241 919 961 977 13 179 983 479 37 331 719 613 353 625 337 701 541 349 121 311 673 277 173 347 83 89 991 73 7 383\\r\\n', 'output': ['23087838\\r\\n']}, {'input': '17439127 97\\r\\n653 563 383 971 529 607 431 113 401 625 101 587 683 29 281 421 223 857 37 263 367 53 107 61 457 283 571 103 331 557 521 911 449 17 593 863 443 307 71 929 31 227 761 947 257 701 277 163 887 751 79 733 757 409 229 797 361 773 659 419 541 487 149 359 577 769 353 233 239 631 3 131 739 613 7 193 139 137 179 953 256 997 271 199 197 983 293 673 463 499 617 241 907 647 461 479 977\\r\\n', 'output': ['6201590\\r\\n']}, {'input': '11541416 76\\r\\n653 563 419 337 243 73 809 787 509 487 271 587 521 647 289 461 197 257 863 263 31 103 107 397 677 659 997 431 839 953 701 379 919 239 661 127 443 191 743 389 821 227 281 71 571 293 89 881 523 857 331 109 977 971 911 167 343 241 199 83 883 547 499 853 641 43 137 617 601 829 125 823 151 613 947 121\\r\\n', 'output': ['8441427\\r\\n']}, {'input': '90742323 78\\r\\n491 443 419 121 283 347 577 601 307 149 733 73 683 137 739 23 691 179 53 863 467 239 827 947 139 569 173 829 383 353 919 887 701 853 47 127 659 697 653 251 571 953 269 13 839 719 359 233 101 463 331 457 71 971 421 773 67 431 593 479 809 317 243 4 257 563 107 907 37 125 751 157 151 911 619 841 499 677\\r\\n', 'output': ['43807233\\r\\n']}, {'input': '72884678 90\\r\\n491 157 419 593 673 307 211 601 313 613 953 617 853 709 811 311 41 757 347 859 283 607 229 941 503 269 463 983 107 379 449 83 523 67 739 59 719 653 797 81 433 883 101 431 113 461 587 971 293 557 251 907 769 71 89 139 263 277 197 547 227 317 959 127 809 43 439 947 37 353 359 73 599 961 701 167 373 911 509 223 17 397 64 929 683 521 421 29 13 19\\r\\n', 'output': ['39115199\\r\\n']}, {'input': '97550157 77\\r\\n577 157 761 367 79 331 547 101 757 243 503 139 839 863 811 457 47 647 977 419 61 739 229 773 971 947 449 467 619 491 16 641 991 401 409 677 431 179 797 887 37 433 113 701 599 523 853 487 397 443 83 997 137 673 907 227 41 683 197 199 73 71 89 169 17 617 809 421 239 751 271 53 719 827 769 787 509\\r\\n', 'output': ['61195229\\r\\n']}, {'input': '10169176 79\\r\\n613 121 967 251 743 653 43 499 419 167 49 139 383 827 277 541 529 961 59 739 61 89 397 227 179 169 601 467 127 883 919 401 947 263 193 16 593 661 757 523 269 211 313 557 647 163 389 577 83 443 337 607 719 911 271 311 881 157 181 19 131 81 491 773 433 811 67 137 281 751 353 431 821 439 359 487 853 457 727\\r\\n', 'output': ['6512164\\r\\n']}, {'input': '9976698153840 97\\r\\n491 257 227 467 101 17 163 521 337 313 181 211 61 349 503 367 107 3 233 103 239 433 401 73 113 47 139 43 331 389 499 197 479 463 431 359 487 353 223 251 283 83 421 109 281 317 11 79 157 443 269 461 277 293 23 97 397 199 419 229 457 41 547 173 509 59 149 5 31 7 89 179 449 151 37 19 137 71 167 131 439 379 2 311 29 263 523 53 409 13 271 241 347 193 373 191 307\\r\\n', 'output': ['908388043912\\r\\n']}, {'input': '9678048567267 95\\r\\n367 419 397 229 443 59 461 43 457 467 373 431 509 409 239 223 163 41 563 107 263 47 281 73 221 311 241 547 191 463 197 181 19 211 149 103 89 5 331 557 353 109 233 101 131 337 113 199 151 439 541 307 347 349 293 157 33 449 271 421 139 83 37 193 383 71 29 23 137 469 569 179 523 167 479 359 521 227 61 257 79 106 433 503 491 97 127 401 379 389 251 277 269 173 317\\r\\n', 'output': ['3897162195455\\r\\n']}, {'input': '9968915049080 100\\r\\n257 353 521 449 127 157 433 457 499 409 269 89 563 181 439 149 523 349 17 173 281 109 137 43 421 443 367 463 467 2 131 461 37 101 331 23 199 97 337 491 401 557 431 61 53 3 29 67 373 547 107 479 139 397 229 103 71 113 79 271 241 239 283 83 263 313 197 227 359 31 179 419 277 211 293 503 251 383 347 223 487 233 5 541 13 59 167 7 41 311 509 191 389 73 151 163 317 47 569 19\\r\\n', 'output': ['977074843979\\r\\n']}, {'input': '9768565482772 100\\r\\n317 229 421 251 203 101 509 383 311 107 199 293 541 409 487 397 257 5 149 193 223 163 439 67 347 83 569 103 109 137 479 179 593 503 271 191 227 41 349 331 547 419 353 337 313 13 281 577 557 139 461 571 367 173 431 181 233 269 43 389 521 113 263 449 523 97 61 3 151 211 443 31 241 373 457 467 37 19 59 2 563 73 587 131 379 79 307 239 283 127 47 71 23 433 187 277 197 53 499 157\\r\\n', 'output': ['1227370026994\\r\\n']}, {'input': '9671796206988 100\\r\\n137 107 419 421 197 113 389 97 557 487 271 229 19 563 131 523 181 53 239 401 227 467 7 409 71 59 433 491 157 479 2 3 173 29 383 47 313 283 347 73 373 163 277 179 331 499 109 263 251 443 367 317 269 61 461 151 83 13 211 31 127 463 449 67 167 199 503 457 257 439 353 139 311 307 5 349 11 379 23 281 101 293 17 191 521 571 241 569 193 79 41 43 233 397 223 509 103 541 359 337\\r\\n', 'output': ['894018567035\\r\\n']}, {'input': '9806951141493 99\\r\\n433 467 293 313 67 311 163 223 471 457 41 277 271 509 101 199 491 397 83 359 353 73 449 5 131 563 443 197 461 379 383 421 89 151 53 211 17 251 503 79 479 7 463 47 59 239 331 233 97 173 281 409 367 419 523 107 547 23 401 241 43 439 181 347 109 389 113 179 2 257 373 283 431 191 541 227 269 137 149 31 307 263 193 499 229 37 521 103 19 337 11 71 167 139 13 487 61 127 29\\r\\n', 'output': ['1314339720575\\r\\n']}, {'input': '9996326598719 98\\r\\n89 373 347 163 271 71 467 139 13 311 337 397 107 103 101 439 313 191 263 491 193 41 59 293 257 179 151 199 5 113 73 307 461 173 157 277 211 281 401 23 353 229 523 137 67 431 109 7 269 31 283 241 421 503 17 239 61 443 43 37 131 181 227 3 223 19 379 449 349 499 367 11 433 97 167 359 29 331 521 251 127 409 197 557 317 53 541 47 509 547 419 383 2 149 479 83 457 79\\r\\n', 'output': ['893840700159\\r\\n']}, {'input': '9930225951240 95\\r\\n211 347 251 131 181 239 191 457 127 463 353 397 61 503 197 163 569 331 37 101 547 401 277 67 23 349 203 467 11 379 317 227 337 73 107 113 83 439 53 157 17 223 2 383 47 269 409 487 359 431 271 479 179 193 13 167 19 41 311 109 491 563 31 433 449 139 283 509 281 419 199 233 367 79 43 173 313 241 421 71 103 521 499 97 523 293 137 257 5 89 443 263 373 149 389\\r\\n', 'output': ['1637980385783\\r\\n']}, {'input': '9597019411250 96\\r\\n397 487 541 383 229 443 59 13 109 179 79 263 41 283 7 23 17 463 281 2 433 199 223 137 347 127 467 83 227 89 3 29 233 181 101 251 307 197 37 337 457 31 317 61 157 313 389 103 107 43 167 47 353 421 509 149 419 269 349 151 131 67 277 491 503 331 71 113 257 311 499 19 271 239 359 11 479 449 367 379 439 293 523 241 97 191 139 401 53 73 461 373 409 521 965 431\\r\\n', 'output': ['1087130960247\\r\\n']}, {'input': '9886773646149 98\\r\\n181 499 223 419 19 557 71 509 283 11 163 17 439 397 127 67 521 349 281 479 331 197 389 563 179 461 173 3 2 167 101 317 373 37 31 367 199 61 433 43 193 151 229 23 541 523 109 311 383 463 421 59 271 73 239 379 409 251 107 457 113 79 241 401 29 89 35 103 157 137 353 233 139 307 211 83 97 293 431 569 359 149 491 487 337 191 41 263 277 467 47 313 443 449 547 269 53 257\\r\\n', 'output': ['1359913898511\\r\\n']}, {'input': '9795821923031 98\\r\\n2 7 11 13 15 17 19 23 29 31 37 41 43 47 53 59 67 71 73 79 83 89 97 101 103 107 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 373 379 383 389 397 401 409 419 421 431 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569\\r\\n', 'output': ['1564643642724\\r\\n']}, {'input': '9507905892355 99\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 409 419 421 431 433 439 443 449 457 461 463 467 487 491 499 503 509 521 523 541 547 557\\r\\n', 'output': ['849348619910\\r\\n']}, {'input': '9693931407793 98\\r\\n2 3 5 13 17 23 29 31 37 41 43 47 53 59 67 71 73 79 83 97 101 103 107 109 113 127 131 133 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 271 277 281 283 293 307 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 563 569 671\\r\\n', 'output': ['1189433268692\\r\\n']}, {'input': '9590161274760 99\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 503 509 521 541 547 557\\r\\n', 'output': ['854721606968\\r\\n']}, {'input': '9950847944431 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 127 131 137 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557\\r\\n', 'output': ['894249894895\\r\\n']}, {'input': '9500100903584 95\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 293 307 313 317 331 337 347 353 359 367 373 379 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['858277370189\\r\\n']}, {'input': '9842961910207 95\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 461 463 467 479 487 491 499 503\\r\\n', 'output': ['882219504923\\r\\n']}, {'input': '9838785728264 96\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 89 97 103 107 109 113 127 131 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['903236710045\\r\\n']}, {'input': '9867732421778 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 179 181 191 193 197 199 211 223 227 229 233 239 241 251 263 269 271 277 281 283 293 307 311 317 331 337 347 349 353 359 367 373 379 383 389 397 401 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569 571\\r\\n', 'output': ['896116476463\\r\\n']}, {'input': '9779523837247 96\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 499 503 509 521 523\\r\\n', 'output': ['883837021065\\r\\n']}, {'input': '9867630384078 96\\r\\n571 569 563 557 547 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 307 293 283 281 277 271 269 263 257 251 239 233 229 227 223 211 197 193 191 181 179 173 163 157 151 149 139 137 131 127 113 107 103 101 97 89 79 73 67 61 59 53 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['937747863784\\r\\n']}, {'input': '9875196562006 99\\r\\n587 577 571 569 563 557 547 541 523 521 509 503 491 487 467 463 461 457 443 439 433 431 421 419 409 401 397 391 389 383 379 373 367 359 353 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 157 151 149 139 137 131 127 113 107 103 101 97 89 83 73 71 67 61 59 53 47 43 41 37 31 29 19 13 11 7 5 3 2\\r\\n', 'output': ['995583778464\\r\\n']}, {'input': '9549571840708 96\\r\\n547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 79 73 71 67 59 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['889647002352\\r\\n']}, {'input': '9911982578329 99\\r\\n571 569 563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 379 373 367 353 349 347 337 331 317 313 311 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 113 109 107 103 101 97 89 83 73 71 67 61 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['913309108147\\r\\n']}, {'input': '9760780439447 95\\r\\n547 541 523 521 503 499 491 487 479 467 463 461 457 449 443 439 433 421 419 409 401 397 389 383 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 79 73 67 61 59 53 47 43 41 37 31 29 23 19 17 13 7 5 3 2\\r\\n', 'output': ['980142379577\\r\\n']}, {'input': '9776745118716 99\\r\\n571 569 563 557 547 541 523 521 509 503 491 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 377 373 367 359 353 349 347 337 331 317 313 311 307 293 283 277 271 269 263 257 251 241 239 233 229 227 223 211 199 193 191 181 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 23 19 17 11 7 5 3 2\\r\\n', 'output': ['980171747646\\r\\n']}, {'input': '9872727922459 100\\r\\n563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 433 431 421 419 409 401 397 389 383 379 373 367 359 353 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 59 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['890601028930\\r\\n']}, {'input': '9819416028761 95\\r\\n521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 13 11 5 3 2\\r\\n', 'output': ['1031126647049\\r\\n']}, {'input': '9763307060499 98\\r\\n569 563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 439 433 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 11 7 5 3 2\\r\\n', 'output': ['959856047856\\r\\n']}, {'input': '9809248239466 100\\r\\n737 593 587 577 569 563 557 547 541 523 521 509 503 499 491 487 467 463 461 457 449 443 439 431 421 419 409 401 397 389 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 61 59 53 47 43 37 31 29 23 19 17 13 7 5 3 2\\r\\n', 'output': ['999773802890\\r\\n']}, {'input': '9903670365284 96\\r\\n109 229 373 677 499 31 727 841 199 811 907 625 2 563 251 131 67 313 619 137 293 359 17 461 97 331 173 107 491 307 419 709 857 379 181 769 839 139 223 733 193 71 157 479 43 541 211 233 127 269 421 243 569 353 257 167 37 103 529 337 283 983 701 19 343 383 593 121 991 977 113 503 317 823 349 457 587 431 463 683 601 367 523 947 617 311 919 647 59 829 467 859 953 509 599 641\\r\\n', 'output': ['2939448304654\\r\\n']}, {'input': '9502178257748 98\\r\\n821 883 373 113 499 659 907 331 617 163 809 709 857 383 223 937 379 512 811 103 863 79 83 643 257 599 173 107 467 769 81 277 613 271 991 947 523 293 121 47 23 757 419 727 89 853 61 761 317 241 463 961 181 997 509 607 37 359 49 269 977 503 283 19 983 541 67 281 97 839 397 43 823 461 797 701 719 353 25 409 601 421 677 73 347 193 859 647 587 881 971 829 13 547 179 641 877 229\\r\\n', 'output': ['5084295876526\\r\\n']}, {'input': '9642376788915 95\\r\\n397 883 373 991 499 727 827 523 401 887 173 461 857 193 239 757 929 313 631 683 71 251 103 677 347 449 611 641 439 557 27 109 233 977 797 479 139 569 829 349 23 821 613 431 89 853 343 761 607 311 67 907 107 773 317 37 691 359 289 881 113 503 41 64 269 463 197 281 769 839 181 137 941 739 83 229 643 293 5 409 353 787 191 73 593 241 619 859 257 809 971 937 997 163 179\\r\\n', 'output': ['4909262218143\\r\\n']}, {'input': '9700065114573 99\\r\\n311 691 191 991 599 727 479 547 229 41 23 439 919 71 11 53 17 271 631 617 521 839 359 281 131 353 613 401 197 157 743 109 223 101 937 929 139 293 347 79 173 3 337 241 461 683 277 761 467 827 811 907 7 107 449 37 947 211 607 457 677 8 239 809 269 997 541 29 409 419 163 647 941 769 787 491 883 757 775 509 641 661 373 89 643 179 569 619 443 127 397 821 971 151 361 859 739 523 701\\r\\n', 'output': ['2699236106797\\r\\n']}, {'input': '9846406935247 98\\r\\n571 367 53 43 769 29 307 991 557 113 449 59 397 271 751 967 761 151 857 401 277 773 997 281 887 523 349 3 197 673 853 823 577 101 521 389 619 883 659 881 947 37 337 149 211 691 569 641 797 97 163 223 61 47 457 347 683 157 13 977 121 229 41 79 269 631 499 293 727 353 643 839 421 599 241 757 181 4 125 877 257 467 653 73 313 811 953 677 89 941 199 419 233 563 251 859 739 929\\r\\n', 'output': ['2869839675507\\r\\n']}, {'input': '9578425604483 100\\r\\n727 257 827 701 859 169 353 887 19 997 449 97 137 761 631 139 467 811 709 401 967 7 233 109 719 113 11 9 683 37 853 373 733 941 971 131 461 883 71 577 863 617 349 509 661 937 67 263 271 541 43 773 647 47 419 523 857 499 367 347 503 313 311 797 269 907 103 223 307 983 691 337 167 607 89 5 127 409 163 101 977 241 389 512 463 643 743 431 277 929 641 739 839 79 251 359 557 443 227 193\\r\\n', 'output': ['3429244221786\\r\\n']}, {'input': '9850057469698 95\\r\\n191 193 37 113 443 139 227 109 911 797 449 173 409 613 59 463 809 811 857 401 491 163 41 769 821 211 487 647 971 503 643 709 461 419 991 353 311 157 11 383 739 313 577 541 961 661 751 599 761 947 421 631 653 7 379 433 397 239 64 499 3 169 367 509 571 977 941 479 53 983 359 593 953 883 179 127 97 251 73 863 859 67 101 457 659 5 107 467 691 701 43 61 607 587 877\\r\\n', 'output': ['2727577480774\\r\\n']}, {'input': '9986810815972 95\\r\\n191 641 137 127 163 733 929 887 257 157 757 43 739 337 421 229 49 521 941 401 967 277 107 881 821 173 16 789 379 743 269 121 461 857 83 953 223 683 233 101 409 839 701 617 751 53 811 103 761 529 883 631 361 17 367 937 523 67 313 449 179 169 463 593 73 661 499 479 311 673 131 659 599 541 787 331 97 349 281 397 961 29 439 625 647 271 997 709 691 773 457 71 89 139 919\\r\\n', 'output': ['5816290608872\\r\\n']}, {'input': '9607195420951 97\\r\\n571 223 997 131 163 631 283 953 47 79 19 977 7 809 59 41 617 127 941 863 383 529 43 431 73 277 64 263 463 547 433 169 443 857 757 379 71 683 349 89 761 743 31 541 227 53 557 67 167 233 449 487 601 797 991 647 661 677 311 613 83 317 191 709 883 27 251 281 887 947 521 839 139 587 173 331 503 179 359 491 673 197 823 157 523 373 307 919 389 641 691 569 653 829 911 853 271\\r\\n', 'output': ['4814783576041\\r\\n']}, {'input': '9671345835461 95\\r\\n647 289 487 887 911 503 283 311 449 821 281 19 7 239 661 71 439 839 941 691 683 733 577 431 421 277 4 827 233 863 619 631 401 293 149 307 701 109 739 241 761 773 769 211 227 79 547 563 47 809 27 107 601 797 83 953 37 929 101 967 521 199 463 271 883 163 169 907 461 811 41 823 677 139 331 263 557 613 467 383 673 569 157 317 523 743 89 373 125 397 529 61 593 113 349\\r\\n', 'output': ['3896254168046\\r\\n']}, {'input': '9980338415156 98\\r\\n197 541 383 151 71 463 283 79 823 683 811 593 523 887 353 761 439 701 479 691 103 13 829 431 337 277 397 181 461 47 619 991 433 191 907 101 317 983 367 61 59 883 499 211 827 107 769 653 547 857 81 311 643 571 223 401 229 67 19 967 257 41 239 587 449 2 797 977 227 971 487 557 43 139 241 263 617 149 37 859 131 809 839 709 467 379 613 293 863 727 157 937 577 757 199 389 11 841\\r\\n', 'output': ['2606358658461\\r\\n']}, {'input': '9925557094702 100\\r\\n53 587 311 83 631 571 821 823 593 709 811 157 347 257 11 37 439 169 509 163 877 613 289 461 883 997 97 743 383 47 619 79 271 947 467 659 317 653 729 661 929 463 167 211 647 107 983 263 887 8 443 113 599 547 223 173 361 569 229 953 577 751 349 421 853 967 373 139 227 313 487 269 563 827 233 193 617 809 199 431 131 277 529 71 911 881 241 503 863 641 857 937 281 353 727 719 389 337 101 89\\r\\n', 'output': ['5405714723943\\r\\n']}, {'input': '9568361248572 95\\r\\n443 239 683 53 631 121 853 863 541 839 953 347 499 89 109 409 83 907 17 211 439 97 103 937 71 601 811 127 79 313 467 197 569 503 787 107 317 43 887 181 163 101 389 479 857 359 983 521 751 3 419 463 551 643 769 941 677 73 229 199 397 23 449 823 421 967 617 625 179 379 487 919 37 31 173 947 739 2 271 61 131 727 647 263 461 809 281 149 929 641 431 593 523 241 571\\r\\n', 'output': ['1872180163221\\r\\n']}, {'input': '9893563607709 100\\r\\n349 557 229 211 61 619 941 569 673 19 467 653 983 359 109 127 121 907 139 293 23 613 257 607 251 97 709 151 509 883 43 197 41 8 313 367 331 199 131 827 79 991 503 181 727 449 73 841 787 541 419 887 49 677 67 523 191 743 157 3 397 137 173 823 421 773 643 431 179 89 881 857 797 853 563 401 929 479 647 383 683 757 271 641 977 113 971 691 547 311 601 163 373 953 769 659 877 239 101 499\\r\\n', 'output': ['3494740396912\\r\\n']}, {'input': '9879466421351 96\\r\\n223 281 547 149 409 243 431 257 263 499 293 647 887 523 563 127 113 361 109 769 929 311 773 677 443 593 739 251 103 691 367 83 569 797 313 557 47 331 25 211 463 173 641 37 229 751 757 487 859 227 439 359 937 433 67 137 661 743 317 4 613 199 977 269 467 271 853 727 179 397 881 983 169 911 503 839 683 419 947 883 151 653 733 719 509 461 577 919 961 607 107 41 599 541 421 89\\r\\n', 'output': ['4955531712402\\r\\n']}, {'input': '10000000000000 100\\r\\n31 61 257 199 29 17 227 269 281 151 73 113 229 167 13 211 397 67 107 131 139 127 173 59 491 241 89 2 461 109 3 293 313 317 283 149 431 239 521 401 503 179 97 41 37 449 11 439 193 271 307 337 251 433 103 467 379 389 43 83 373 101 419 523 541 487 479 79 367 509 499 347 137 349 5 277 409 359 463 233 353 383 47 23 197 71 19 157 263 223 181 7 421 457 311 191 53 163 443 331\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n281 139 131 223 503 349 61 337 521 509 313 41 373 233 433 461 487 211 457 359 419 157 83 383 53 179 463 197 379 571 587 277 347 173 431 577 89 443 311 193 397 71 353 401 227 113 563 271 31 109 317 479 29 137 293 191 59 409 229 499 47 151 2 269 67 167 23 421 389 11 547 251 283 569 491 163 149 19 239 103 439 85 3 541 199 467 79 257 331 73 241 181 7 557 13 263 449 127 101 37\\r\\n', 'output': ['1210985628131\\r\\n']}, {'input': '10000000000000 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547\\r\\n', 'output': ['896701239049\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint x[100], y, n, k;\nlong long p[100], dp[100];\nlong long dfs(int pos, int f) {\n  long long &ans = dp[pos];\n  if (ans + 1) return ans;\n  ans = y;\n  for (int i = 0; i < pos; i++) ans -= ((n / p[i + 1] / p[pos]) % p[i + 1] == 0) * dp[i];\n  return ans;\n}\nint main() {\n  scanf(\"%I64d%d\", &n, &k);\n  for (int i = 0; i < k; i++) scanf(\"%d\", x + i);\n  sort(x, x + k);\n  for (int i = k - 1; i >= 0; i--) {\n    for (int j = i + 1; j < k; j++) {\n      int t = x[i] * x[j];\n      if (t > n) break;\n      for (int v = 0; t <= n; v++) {\n        p[v + 1] += n / t;\n        n %= t;\n      }\n    }\n  }\n  for (int i = 0; i < k; i++) y -= (n / x[i] % x[i] == 0);\n  memset(dp, 64, sizeof(dp));\n  printf(\"%d\\n\", y - dfs(0, 1));\n  return 0;\n}\n"}
{"src_uid": "cec0f6c267fa76191a3784b08e39acd6", "id": 43, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '20 3\\r\\n2 3 5\\r\\n', 'output': ['6\\r\\n']}, {'input': '50 2\\r\\n15 8\\r\\n', 'output': ['41\\r\\n']}, {'input': '100 5\\r\\n10 9 7 11 19\\r\\n', 'output': ['56\\r\\n']}, {'input': '1 10\\r\\n2 3 5 7 11 13 17 19 23 29\\r\\n', 'output': ['1\\r\\n']}, {'input': '1000 10\\r\\n2 3 5 7 11 13 17 19 23 29\\r\\n', 'output': ['160\\r\\n']}, {'input': '666 5\\r\\n877 881 997 883 887\\r\\n', 'output': ['666\\r\\n']}, {'input': '4 2\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '2 1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '211 4\\r\\n7 3 2 5\\r\\n', 'output': ['49\\r\\n']}, {'input': '2008 3\\r\\n7 9 11\\r\\n', 'output': ['1392\\r\\n']}, {'input': '1000 11\\r\\n29 23 19 17 13 1 11 7 5 3 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '1 6\\r\\n4 27 125 11 13 29\\r\\n', 'output': ['1\\r\\n']}, {'input': '50 5\\r\\n2 7 5 51 19\\r\\n', 'output': ['16\\r\\n']}, {'input': '997 11\\r\\n13 17 19 23 29 997 121 49 25 9 4\\r\\n', 'output': ['474\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '308 4\\r\\n5 2 7 3\\r\\n', 'output': ['70\\r\\n']}, {'input': '980 8\\r\\n17 2 3 11 5 13 19 7\\r\\n', 'output': ['166\\r\\n']}, {'input': '770 4\\r\\n3 5 2 7\\r\\n', 'output': ['176\\r\\n']}, {'input': '877 5\\r\\n7 2 11 3 5\\r\\n', 'output': ['182\\r\\n']}, {'input': '289 8\\r\\n19 13 5 7 11 3 23 17\\r\\n', 'output': ['99\\r\\n']}, {'input': '4943 38\\r\\n419 127 5 281 509 839 593 409 577 463 421 617 587 739 397 743 401 179 343 31 599 349 647 89 293 521 797 431 487 881 761 43 877 643 149 353 467 909\\r\\n', 'output': ['3375\\r\\n']}, {'input': '9619 35\\r\\n131 13 677 43 243 389 577 59 857 71 199 227 841 257 719 601 349 181 73 8 463 311 439 761 449 167 569 191 683 283 379 263 499 571 277\\r\\n', 'output': ['6578\\r\\n']}, {'input': '2852 62\\r\\n401 919 643 367 283 127 593 251 443 389 683 157 227 361 547 997 439 113 239 727 197 947 37 761 929 167 67 431 577 673 625 49 83 11 409 27 769 967 449 199 241 491 571 487 733 653 281 73 107 887 101 827 103 751 787 89 256 607 229 971 463 211\\r\\n', 'output': ['1826\\r\\n']}, {'input': '1138 12\\r\\n31 169 389 337 937 763 251 443 199 661 577 487\\r\\n', 'output': ['1074\\r\\n']}, {'input': '8849 56\\r\\n619 401 733 251 107 37 829 719 479 751 419 523 617 947 809 53 47 313 577 709 71 277 256 547 683 769 269 701 127 863 409 331 19 443 149 841 877 67 521 929 919 773 883 421 17 601 937 61 263 109 103 41 859 197 293 983\\r\\n', 'output': ['5875\\r\\n']}, {'input': '718 3\\r\\n770 337 743\\r\\n', 'output': ['716\\r\\n']}, {'input': '1785 69\\r\\n547 281 347 11 139 883 863 169 643 83 709 719 397 809 157 349 887 523 757 41 181 499 479 619 197 691 971 773 125 569 647 61 101 839 19 359 29 167 331 353 947 379 53 631 109 853 193 23 421 107 911 269 289 71 977 241 761 677 739 263 659 823 229 764 373 509 661 857 961\\r\\n', 'output': ['1020\\r\\n']}, {'input': '7990 37\\r\\n547 541 449 47 463 929 983 647 113 877 683 41 79 961 625 283 349 641 841 729 811 701 619 293 281 859 199 229 607 941 467 809 109 773 443 919 911\\r\\n', 'output': ['6922\\r\\n']}, {'input': '9566 91\\r\\n353 401 349 479 233 367 563 311 643 769 521 173 457 59 523 257 317 659 857 743 619 277 83 181 109 131 359 211 139 841 761 929 61 271 827 719 499 289 677 449 877 389 71 53 223 263 571 199 727 163 31 2 373 463 431 613 809 947 467 797 547 883 409 911 41 79 821 881 503 739 433 251 823 701 991 193 997 19 241 607 487 509 729 569 179 151 229 673 691 443 859\\r\\n', 'output': ['2982\\r\\n']}, {'input': '6254 91\\r\\n421 379 47 683 953 97 311 439 233 271 797 71 991 131 109 829 419 499 857 827 313 841 73 571 4 389 631 103 83 587 911 43 643 89 743 593 541 243 503 251 863 61 157 349 223 647 853 467 443 173 617 577 947 25 739 599 751 653 281 811 163 397 409 919 463 79 971 727 113 53 7 787 641 701 883 307 137 293 241 229 269 487 239 107 67 479 191 823 121 367 449\\r\\n', 'output': ['2399\\r\\n']}, {'input': '815442 99\\r\\n131 227 503 269 61 107 103 47 263 3 239 167 401 67 13 359 431 137 523 37 53 379 79 461 421 127 313 173 109 31 433 317 193 149 373 19 521 241 251 43 151 397 7 307 11 409 139 443 439 449 281 479 113 293 557 97 41 2 353 487 383 23 29 509 547 191 163 467 349 491 5 463 541 17 73 499 101 347 257 277 197 367 283 59 199 457 157 229 83 311 233 223 181 89 337 179 211 419 331\\r\\n', 'output': ['70035\\r\\n']}, {'input': '642382 96\\r\\n487 89 71 251 163 337 3 83 157 313 389 149 409 277 5 73 97 167 103 211 193 223 101 503 41 467 317 79 139 311 347 431 107 179 23 191 233 443 433 7 2 131 173 521 61 499 11 457 331 307 383 397 523 53 449 137 67 239 367 479 263 461 269 31 281 181 359 199 227 373 439 43 421 229 151 37 353 419 509 271 283 463 401 47 349 13 59 293 491 241 109 257 197 17 29 127\\r\\n', 'output': ['58572\\r\\n']}, {'input': '600972 66\\r\\n79 163 73 211 223 7 37 239 65 43 173 31 263 67 179 283 277 193 131 229 97 151 167 293 17 337 191 137 103 109 307 311 149 349 23 181 61 281 241 257 251 53 47 19 269 317 71 127 353 197 89 157 11 113 347 313 227 29 2 83 271 3 107 199 59 233\\r\\n', 'output': ['78012\\r\\n']}, {'input': '363161 80\\r\\n337 127 71 53 73 293 283 401 439 97 61 101 367 131 373 19 233 163 13 229 379 59 263 389 227 41 271 347 419 5 167 107 89 179 223 151 433 431 359 193 269 139 257 31 191 157 43 47 137 383 173 277 281 239 449 109 37 181 331 199 421 23 443 7 103 317 79 113 3 83 313 29 311 307 2 251 197 149 353 11\\r\\n', 'output': ['35160\\r\\n']}, {'input': '693133 76\\r\\n397 181 313 61 389 107 191 97 149 193 179 23 197 139 71 349 251 199 127 13 109 83 211 47 311 113 19 31 7 3 53 229 59 409 331 137 337 277 2 41 233 173 227 131 307 281 79 73 163 101 103 347 379 239 89 37 269 11 167 241 43 283 367 257 29 271 293 373 401 151 67 157 223 353 383 17\\r\\n', 'output': ['78449\\r\\n']}, {'input': '842450 58\\r\\n37 283 89 241 131 83 271 3 179 109 167 79 2 19 173 53 269 31 113 59 263 97 181 233 41 5 71 67 199 107 257 43 151 197 11 101 211 17 229 149 73 13 193 157 61 47 277 227 223 139 29 23 281 137 103 127 163 191\\r\\n', 'output': ['94467\\r\\n']}, {'input': '120713 99\\r\\n59 283 419 509 431 19 443 241 101 491 157 257 17 31 71 127 173 191 37 73 2 367 251 463 227 271 311 557 293 47 547 521 11 397 67 163 541 347 43 523 181 389 103 503 487 113 233 97 139 211 107 29 131 421 317 223 193 3 331 439 5 457 197 461 109 89 409 277 353 401 349 151 379 467 449 61 13 433 479 359 167 137 229 79 53 23 313 263 41 83 269 281 179 373 337 7 307 499 199\\r\\n', 'output': ['11305\\r\\n']}, {'input': '944214 61\\r\\n157 89 23 101 13 17 59 193 199 79 47 151 61 97 163 257 7 83 5 67 41 29 293 229 211 307 271 298 179 227 263 131 113 109 107 313 43 233 181 53 19 103 173 127 283 71 3 137 197 241 281 139 311 31 37 277 11 223 167 239 269\\r\\n', 'output': ['182663\\r\\n']}, {'input': '688274 81\\r\\n401 71 257 163 293 2 89 239 241 11 433 307 67 227 313 353 283 439 41 113 7 229 59 3 47 179 19 251 331 347 173 167 431 421 157 373 311 277 317 389 349 263 397 181 269 191 367 197 79 107 149 359 211 271 29 53 101 419 97 137 409 13 73 5 127 383 131 61 151 199 223 31 43 17 233 337 37 83 139 109 23\\r\\n', 'output': ['61497\\r\\n']}, {'input': '623511 55\\r\\n229 257 17 193 101 103 59 191 53 107 71 113 299 269 211 41 173 2 263 5 197 199 163 149 223 181 167 31 239 97 139 79 233 157 37 3 11 7 131 89 29 83 227 109 19 47 61 271 127 241 73 137 67 151 251\\r\\n', 'output': ['70330\\r\\n']}, {'input': '34202350 95\\r\\n991 181 541 361 659 271 563 577 163 751 961 81 719 43 383 491 101 535 67 389 191 619 709 587 353 529 179 73 121 13 127 607 431 853 569 797 347 79 251 17 409 401 41 193 839 199 211 811 487 601 881 733 241 883 599 239 197 229 49 521 461 787 677 311 503 421 757 613 841 349 821 59 857 727 379 47 151 877 419 643 83 337 103 4 467 443 167 977 439 773 109 479 373 683 97\\r\\n', 'output': ['14676536\\r\\n']}, {'input': '56124673 91\\r\\n181 67 307 409 71 29 89 31 97 659 709 19 241 503 727 823 859 691 971 37 599 227 313 587 967 883 149 937 773 49 379 557 787 11 827 331 367 839 929 757 863 619 257 509 223 947 593 173 487 761 401 25 563 199 661 547 953 983 821 479 461 293 569 311 103 577 433 601 353 271 169 59 733 463 919 419 151 289 449 643 877 43 829 9 467 349 769 631 431 337 457\\r\\n', 'output': ['27823308\\r\\n']}, {'input': '66663476 87\\r\\n81 37 347 227 41 359 25 859 163 809 727 541 829 841 463 919 23 593 599 361 211 839 797 151 343 373 773 907 677 821 13 199 853 571 739 577 367 877 491 379 277 289 257 157 941 883 121 173 769 761 499 233 421 419 961 107 229 709 523 337 461 293 569 857 197 443 433 241 397 479 137 997 179 887 281 127 619 953 823 643 977 317 743 191 467 64 67\\r\\n', 'output': ['41298098\\r\\n']}, {'input': '85912508 97\\r\\n193 971 647 373 757 433 263 283 223 361 101 229 829 379 181 419 239 941 431 523 211 947 107 967 457 47 827 103 131 577 811 911 617 641 709 691 61 53 683 797 751 467 761 163 787 289 2 401 661 257 463 233 739 191 607 853 863 769 281 307 563 487 109 491 631 79 149 241 919 961 977 13 179 983 479 37 331 719 613 353 625 337 701 541 349 121 311 673 277 173 347 83 89 991 73 7 383\\r\\n', 'output': ['23087838\\r\\n']}, {'input': '17439127 97\\r\\n653 563 383 971 529 607 431 113 401 625 101 587 683 29 281 421 223 857 37 263 367 53 107 61 457 283 571 103 331 557 521 911 449 17 593 863 443 307 71 929 31 227 761 947 257 701 277 163 887 751 79 733 757 409 229 797 361 773 659 419 541 487 149 359 577 769 353 233 239 631 3 131 739 613 7 193 139 137 179 953 256 997 271 199 197 983 293 673 463 499 617 241 907 647 461 479 977\\r\\n', 'output': ['6201590\\r\\n']}, {'input': '11541416 76\\r\\n653 563 419 337 243 73 809 787 509 487 271 587 521 647 289 461 197 257 863 263 31 103 107 397 677 659 997 431 839 953 701 379 919 239 661 127 443 191 743 389 821 227 281 71 571 293 89 881 523 857 331 109 977 971 911 167 343 241 199 83 883 547 499 853 641 43 137 617 601 829 125 823 151 613 947 121\\r\\n', 'output': ['8441427\\r\\n']}, {'input': '90742323 78\\r\\n491 443 419 121 283 347 577 601 307 149 733 73 683 137 739 23 691 179 53 863 467 239 827 947 139 569 173 829 383 353 919 887 701 853 47 127 659 697 653 251 571 953 269 13 839 719 359 233 101 463 331 457 71 971 421 773 67 431 593 479 809 317 243 4 257 563 107 907 37 125 751 157 151 911 619 841 499 677\\r\\n', 'output': ['43807233\\r\\n']}, {'input': '72884678 90\\r\\n491 157 419 593 673 307 211 601 313 613 953 617 853 709 811 311 41 757 347 859 283 607 229 941 503 269 463 983 107 379 449 83 523 67 739 59 719 653 797 81 433 883 101 431 113 461 587 971 293 557 251 907 769 71 89 139 263 277 197 547 227 317 959 127 809 43 439 947 37 353 359 73 599 961 701 167 373 911 509 223 17 397 64 929 683 521 421 29 13 19\\r\\n', 'output': ['39115199\\r\\n']}, {'input': '97550157 77\\r\\n577 157 761 367 79 331 547 101 757 243 503 139 839 863 811 457 47 647 977 419 61 739 229 773 971 947 449 467 619 491 16 641 991 401 409 677 431 179 797 887 37 433 113 701 599 523 853 487 397 443 83 997 137 673 907 227 41 683 197 199 73 71 89 169 17 617 809 421 239 751 271 53 719 827 769 787 509\\r\\n', 'output': ['61195229\\r\\n']}, {'input': '10169176 79\\r\\n613 121 967 251 743 653 43 499 419 167 49 139 383 827 277 541 529 961 59 739 61 89 397 227 179 169 601 467 127 883 919 401 947 263 193 16 593 661 757 523 269 211 313 557 647 163 389 577 83 443 337 607 719 911 271 311 881 157 181 19 131 81 491 773 433 811 67 137 281 751 353 431 821 439 359 487 853 457 727\\r\\n', 'output': ['6512164\\r\\n']}, {'input': '9976698153840 97\\r\\n491 257 227 467 101 17 163 521 337 313 181 211 61 349 503 367 107 3 233 103 239 433 401 73 113 47 139 43 331 389 499 197 479 463 431 359 487 353 223 251 283 83 421 109 281 317 11 79 157 443 269 461 277 293 23 97 397 199 419 229 457 41 547 173 509 59 149 5 31 7 89 179 449 151 37 19 137 71 167 131 439 379 2 311 29 263 523 53 409 13 271 241 347 193 373 191 307\\r\\n', 'output': ['908388043912\\r\\n']}, {'input': '9678048567267 95\\r\\n367 419 397 229 443 59 461 43 457 467 373 431 509 409 239 223 163 41 563 107 263 47 281 73 221 311 241 547 191 463 197 181 19 211 149 103 89 5 331 557 353 109 233 101 131 337 113 199 151 439 541 307 347 349 293 157 33 449 271 421 139 83 37 193 383 71 29 23 137 469 569 179 523 167 479 359 521 227 61 257 79 106 433 503 491 97 127 401 379 389 251 277 269 173 317\\r\\n', 'output': ['3897162195455\\r\\n']}, {'input': '9968915049080 100\\r\\n257 353 521 449 127 157 433 457 499 409 269 89 563 181 439 149 523 349 17 173 281 109 137 43 421 443 367 463 467 2 131 461 37 101 331 23 199 97 337 491 401 557 431 61 53 3 29 67 373 547 107 479 139 397 229 103 71 113 79 271 241 239 283 83 263 313 197 227 359 31 179 419 277 211 293 503 251 383 347 223 487 233 5 541 13 59 167 7 41 311 509 191 389 73 151 163 317 47 569 19\\r\\n', 'output': ['977074843979\\r\\n']}, {'input': '9768565482772 100\\r\\n317 229 421 251 203 101 509 383 311 107 199 293 541 409 487 397 257 5 149 193 223 163 439 67 347 83 569 103 109 137 479 179 593 503 271 191 227 41 349 331 547 419 353 337 313 13 281 577 557 139 461 571 367 173 431 181 233 269 43 389 521 113 263 449 523 97 61 3 151 211 443 31 241 373 457 467 37 19 59 2 563 73 587 131 379 79 307 239 283 127 47 71 23 433 187 277 197 53 499 157\\r\\n', 'output': ['1227370026994\\r\\n']}, {'input': '9671796206988 100\\r\\n137 107 419 421 197 113 389 97 557 487 271 229 19 563 131 523 181 53 239 401 227 467 7 409 71 59 433 491 157 479 2 3 173 29 383 47 313 283 347 73 373 163 277 179 331 499 109 263 251 443 367 317 269 61 461 151 83 13 211 31 127 463 449 67 167 199 503 457 257 439 353 139 311 307 5 349 11 379 23 281 101 293 17 191 521 571 241 569 193 79 41 43 233 397 223 509 103 541 359 337\\r\\n', 'output': ['894018567035\\r\\n']}, {'input': '9806951141493 99\\r\\n433 467 293 313 67 311 163 223 471 457 41 277 271 509 101 199 491 397 83 359 353 73 449 5 131 563 443 197 461 379 383 421 89 151 53 211 17 251 503 79 479 7 463 47 59 239 331 233 97 173 281 409 367 419 523 107 547 23 401 241 43 439 181 347 109 389 113 179 2 257 373 283 431 191 541 227 269 137 149 31 307 263 193 499 229 37 521 103 19 337 11 71 167 139 13 487 61 127 29\\r\\n', 'output': ['1314339720575\\r\\n']}, {'input': '9996326598719 98\\r\\n89 373 347 163 271 71 467 139 13 311 337 397 107 103 101 439 313 191 263 491 193 41 59 293 257 179 151 199 5 113 73 307 461 173 157 277 211 281 401 23 353 229 523 137 67 431 109 7 269 31 283 241 421 503 17 239 61 443 43 37 131 181 227 3 223 19 379 449 349 499 367 11 433 97 167 359 29 331 521 251 127 409 197 557 317 53 541 47 509 547 419 383 2 149 479 83 457 79\\r\\n', 'output': ['893840700159\\r\\n']}, {'input': '9930225951240 95\\r\\n211 347 251 131 181 239 191 457 127 463 353 397 61 503 197 163 569 331 37 101 547 401 277 67 23 349 203 467 11 379 317 227 337 73 107 113 83 439 53 157 17 223 2 383 47 269 409 487 359 431 271 479 179 193 13 167 19 41 311 109 491 563 31 433 449 139 283 509 281 419 199 233 367 79 43 173 313 241 421 71 103 521 499 97 523 293 137 257 5 89 443 263 373 149 389\\r\\n', 'output': ['1637980385783\\r\\n']}, {'input': '9597019411250 96\\r\\n397 487 541 383 229 443 59 13 109 179 79 263 41 283 7 23 17 463 281 2 433 199 223 137 347 127 467 83 227 89 3 29 233 181 101 251 307 197 37 337 457 31 317 61 157 313 389 103 107 43 167 47 353 421 509 149 419 269 349 151 131 67 277 491 503 331 71 113 257 311 499 19 271 239 359 11 479 449 367 379 439 293 523 241 97 191 139 401 53 73 461 373 409 521 965 431\\r\\n', 'output': ['1087130960247\\r\\n']}, {'input': '9886773646149 98\\r\\n181 499 223 419 19 557 71 509 283 11 163 17 439 397 127 67 521 349 281 479 331 197 389 563 179 461 173 3 2 167 101 317 373 37 31 367 199 61 433 43 193 151 229 23 541 523 109 311 383 463 421 59 271 73 239 379 409 251 107 457 113 79 241 401 29 89 35 103 157 137 353 233 139 307 211 83 97 293 431 569 359 149 491 487 337 191 41 263 277 467 47 313 443 449 547 269 53 257\\r\\n', 'output': ['1359913898511\\r\\n']}, {'input': '9795821923031 98\\r\\n2 7 11 13 15 17 19 23 29 31 37 41 43 47 53 59 67 71 73 79 83 89 97 101 103 107 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 373 379 383 389 397 401 409 419 421 431 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569\\r\\n', 'output': ['1564643642724\\r\\n']}, {'input': '9507905892355 99\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 409 419 421 431 433 439 443 449 457 461 463 467 487 491 499 503 509 521 523 541 547 557\\r\\n', 'output': ['849348619910\\r\\n']}, {'input': '9693931407793 98\\r\\n2 3 5 13 17 23 29 31 37 41 43 47 53 59 67 71 73 79 83 97 101 103 107 109 113 127 131 133 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 271 277 281 283 293 307 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 563 569 671\\r\\n', 'output': ['1189433268692\\r\\n']}, {'input': '9590161274760 99\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 503 509 521 541 547 557\\r\\n', 'output': ['854721606968\\r\\n']}, {'input': '9950847944431 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 127 131 137 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557\\r\\n', 'output': ['894249894895\\r\\n']}, {'input': '9500100903584 95\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 293 307 313 317 331 337 347 353 359 367 373 379 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['858277370189\\r\\n']}, {'input': '9842961910207 95\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 461 463 467 479 487 491 499 503\\r\\n', 'output': ['882219504923\\r\\n']}, {'input': '9838785728264 96\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 89 97 103 107 109 113 127 131 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['903236710045\\r\\n']}, {'input': '9867732421778 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 179 181 191 193 197 199 211 223 227 229 233 239 241 251 263 269 271 277 281 283 293 307 311 317 331 337 347 349 353 359 367 373 379 383 389 397 401 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569 571\\r\\n', 'output': ['896116476463\\r\\n']}, {'input': '9779523837247 96\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 499 503 509 521 523\\r\\n', 'output': ['883837021065\\r\\n']}, {'input': '9867630384078 96\\r\\n571 569 563 557 547 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 307 293 283 281 277 271 269 263 257 251 239 233 229 227 223 211 197 193 191 181 179 173 163 157 151 149 139 137 131 127 113 107 103 101 97 89 79 73 67 61 59 53 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['937747863784\\r\\n']}, {'input': '9875196562006 99\\r\\n587 577 571 569 563 557 547 541 523 521 509 503 491 487 467 463 461 457 443 439 433 431 421 419 409 401 397 391 389 383 379 373 367 359 353 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 157 151 149 139 137 131 127 113 107 103 101 97 89 83 73 71 67 61 59 53 47 43 41 37 31 29 19 13 11 7 5 3 2\\r\\n', 'output': ['995583778464\\r\\n']}, {'input': '9549571840708 96\\r\\n547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 79 73 71 67 59 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['889647002352\\r\\n']}, {'input': '9911982578329 99\\r\\n571 569 563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 379 373 367 353 349 347 337 331 317 313 311 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 113 109 107 103 101 97 89 83 73 71 67 61 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['913309108147\\r\\n']}, {'input': '9760780439447 95\\r\\n547 541 523 521 503 499 491 487 479 467 463 461 457 449 443 439 433 421 419 409 401 397 389 383 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 79 73 67 61 59 53 47 43 41 37 31 29 23 19 17 13 7 5 3 2\\r\\n', 'output': ['980142379577\\r\\n']}, {'input': '9776745118716 99\\r\\n571 569 563 557 547 541 523 521 509 503 491 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 377 373 367 359 353 349 347 337 331 317 313 311 307 293 283 277 271 269 263 257 251 241 239 233 229 227 223 211 199 193 191 181 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 23 19 17 11 7 5 3 2\\r\\n', 'output': ['980171747646\\r\\n']}, {'input': '9872727922459 100\\r\\n563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 433 431 421 419 409 401 397 389 383 379 373 367 359 353 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 59 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['890601028930\\r\\n']}, {'input': '9819416028761 95\\r\\n521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 13 11 5 3 2\\r\\n', 'output': ['1031126647049\\r\\n']}, {'input': '9763307060499 98\\r\\n569 563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 439 433 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 11 7 5 3 2\\r\\n', 'output': ['959856047856\\r\\n']}, {'input': '9809248239466 100\\r\\n737 593 587 577 569 563 557 547 541 523 521 509 503 499 491 487 467 463 461 457 449 443 439 431 421 419 409 401 397 389 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 61 59 53 47 43 37 31 29 23 19 17 13 7 5 3 2\\r\\n', 'output': ['999773802890\\r\\n']}, {'input': '9903670365284 96\\r\\n109 229 373 677 499 31 727 841 199 811 907 625 2 563 251 131 67 313 619 137 293 359 17 461 97 331 173 107 491 307 419 709 857 379 181 769 839 139 223 733 193 71 157 479 43 541 211 233 127 269 421 243 569 353 257 167 37 103 529 337 283 983 701 19 343 383 593 121 991 977 113 503 317 823 349 457 587 431 463 683 601 367 523 947 617 311 919 647 59 829 467 859 953 509 599 641\\r\\n', 'output': ['2939448304654\\r\\n']}, {'input': '9502178257748 98\\r\\n821 883 373 113 499 659 907 331 617 163 809 709 857 383 223 937 379 512 811 103 863 79 83 643 257 599 173 107 467 769 81 277 613 271 991 947 523 293 121 47 23 757 419 727 89 853 61 761 317 241 463 961 181 997 509 607 37 359 49 269 977 503 283 19 983 541 67 281 97 839 397 43 823 461 797 701 719 353 25 409 601 421 677 73 347 193 859 647 587 881 971 829 13 547 179 641 877 229\\r\\n', 'output': ['5084295876526\\r\\n']}, {'input': '9642376788915 95\\r\\n397 883 373 991 499 727 827 523 401 887 173 461 857 193 239 757 929 313 631 683 71 251 103 677 347 449 611 641 439 557 27 109 233 977 797 479 139 569 829 349 23 821 613 431 89 853 343 761 607 311 67 907 107 773 317 37 691 359 289 881 113 503 41 64 269 463 197 281 769 839 181 137 941 739 83 229 643 293 5 409 353 787 191 73 593 241 619 859 257 809 971 937 997 163 179\\r\\n', 'output': ['4909262218143\\r\\n']}, {'input': '9700065114573 99\\r\\n311 691 191 991 599 727 479 547 229 41 23 439 919 71 11 53 17 271 631 617 521 839 359 281 131 353 613 401 197 157 743 109 223 101 937 929 139 293 347 79 173 3 337 241 461 683 277 761 467 827 811 907 7 107 449 37 947 211 607 457 677 8 239 809 269 997 541 29 409 419 163 647 941 769 787 491 883 757 775 509 641 661 373 89 643 179 569 619 443 127 397 821 971 151 361 859 739 523 701\\r\\n', 'output': ['2699236106797\\r\\n']}, {'input': '9846406935247 98\\r\\n571 367 53 43 769 29 307 991 557 113 449 59 397 271 751 967 761 151 857 401 277 773 997 281 887 523 349 3 197 673 853 823 577 101 521 389 619 883 659 881 947 37 337 149 211 691 569 641 797 97 163 223 61 47 457 347 683 157 13 977 121 229 41 79 269 631 499 293 727 353 643 839 421 599 241 757 181 4 125 877 257 467 653 73 313 811 953 677 89 941 199 419 233 563 251 859 739 929\\r\\n', 'output': ['2869839675507\\r\\n']}, {'input': '9578425604483 100\\r\\n727 257 827 701 859 169 353 887 19 997 449 97 137 761 631 139 467 811 709 401 967 7 233 109 719 113 11 9 683 37 853 373 733 941 971 131 461 883 71 577 863 617 349 509 661 937 67 263 271 541 43 773 647 47 419 523 857 499 367 347 503 313 311 797 269 907 103 223 307 983 691 337 167 607 89 5 127 409 163 101 977 241 389 512 463 643 743 431 277 929 641 739 839 79 251 359 557 443 227 193\\r\\n', 'output': ['3429244221786\\r\\n']}, {'input': '9850057469698 95\\r\\n191 193 37 113 443 139 227 109 911 797 449 173 409 613 59 463 809 811 857 401 491 163 41 769 821 211 487 647 971 503 643 709 461 419 991 353 311 157 11 383 739 313 577 541 961 661 751 599 761 947 421 631 653 7 379 433 397 239 64 499 3 169 367 509 571 977 941 479 53 983 359 593 953 883 179 127 97 251 73 863 859 67 101 457 659 5 107 467 691 701 43 61 607 587 877\\r\\n', 'output': ['2727577480774\\r\\n']}, {'input': '9986810815972 95\\r\\n191 641 137 127 163 733 929 887 257 157 757 43 739 337 421 229 49 521 941 401 967 277 107 881 821 173 16 789 379 743 269 121 461 857 83 953 223 683 233 101 409 839 701 617 751 53 811 103 761 529 883 631 361 17 367 937 523 67 313 449 179 169 463 593 73 661 499 479 311 673 131 659 599 541 787 331 97 349 281 397 961 29 439 625 647 271 997 709 691 773 457 71 89 139 919\\r\\n', 'output': ['5816290608872\\r\\n']}, {'input': '9607195420951 97\\r\\n571 223 997 131 163 631 283 953 47 79 19 977 7 809 59 41 617 127 941 863 383 529 43 431 73 277 64 263 463 547 433 169 443 857 757 379 71 683 349 89 761 743 31 541 227 53 557 67 167 233 449 487 601 797 991 647 661 677 311 613 83 317 191 709 883 27 251 281 887 947 521 839 139 587 173 331 503 179 359 491 673 197 823 157 523 373 307 919 389 641 691 569 653 829 911 853 271\\r\\n', 'output': ['4814783576041\\r\\n']}, {'input': '9671345835461 95\\r\\n647 289 487 887 911 503 283 311 449 821 281 19 7 239 661 71 439 839 941 691 683 733 577 431 421 277 4 827 233 863 619 631 401 293 149 307 701 109 739 241 761 773 769 211 227 79 547 563 47 809 27 107 601 797 83 953 37 929 101 967 521 199 463 271 883 163 169 907 461 811 41 823 677 139 331 263 557 613 467 383 673 569 157 317 523 743 89 373 125 397 529 61 593 113 349\\r\\n', 'output': ['3896254168046\\r\\n']}, {'input': '9980338415156 98\\r\\n197 541 383 151 71 463 283 79 823 683 811 593 523 887 353 761 439 701 479 691 103 13 829 431 337 277 397 181 461 47 619 991 433 191 907 101 317 983 367 61 59 883 499 211 827 107 769 653 547 857 81 311 643 571 223 401 229 67 19 967 257 41 239 587 449 2 797 977 227 971 487 557 43 139 241 263 617 149 37 859 131 809 839 709 467 379 613 293 863 727 157 937 577 757 199 389 11 841\\r\\n', 'output': ['2606358658461\\r\\n']}, {'input': '9925557094702 100\\r\\n53 587 311 83 631 571 821 823 593 709 811 157 347 257 11 37 439 169 509 163 877 613 289 461 883 997 97 743 383 47 619 79 271 947 467 659 317 653 729 661 929 463 167 211 647 107 983 263 887 8 443 113 599 547 223 173 361 569 229 953 577 751 349 421 853 967 373 139 227 313 487 269 563 827 233 193 617 809 199 431 131 277 529 71 911 881 241 503 863 641 857 937 281 353 727 719 389 337 101 89\\r\\n', 'output': ['5405714723943\\r\\n']}, {'input': '9568361248572 95\\r\\n443 239 683 53 631 121 853 863 541 839 953 347 499 89 109 409 83 907 17 211 439 97 103 937 71 601 811 127 79 313 467 197 569 503 787 107 317 43 887 181 163 101 389 479 857 359 983 521 751 3 419 463 551 643 769 941 677 73 229 199 397 23 449 823 421 967 617 625 179 379 487 919 37 31 173 947 739 2 271 61 131 727 647 263 461 809 281 149 929 641 431 593 523 241 571\\r\\n', 'output': ['1872180163221\\r\\n']}, {'input': '9893563607709 100\\r\\n349 557 229 211 61 619 941 569 673 19 467 653 983 359 109 127 121 907 139 293 23 613 257 607 251 97 709 151 509 883 43 197 41 8 313 367 331 199 131 827 79 991 503 181 727 449 73 841 787 541 419 887 49 677 67 523 191 743 157 3 397 137 173 823 421 773 643 431 179 89 881 857 797 853 563 401 929 479 647 383 683 757 271 641 977 113 971 691 547 311 601 163 373 953 769 659 877 239 101 499\\r\\n', 'output': ['3494740396912\\r\\n']}, {'input': '9879466421351 96\\r\\n223 281 547 149 409 243 431 257 263 499 293 647 887 523 563 127 113 361 109 769 929 311 773 677 443 593 739 251 103 691 367 83 569 797 313 557 47 331 25 211 463 173 641 37 229 751 757 487 859 227 439 359 937 433 67 137 661 743 317 4 613 199 977 269 467 271 853 727 179 397 881 983 169 911 503 839 683 419 947 883 151 653 733 719 509 461 577 919 961 607 107 41 599 541 421 89\\r\\n', 'output': ['4955531712402\\r\\n']}, {'input': '10000000000000 100\\r\\n31 61 257 199 29 17 227 269 281 151 73 113 229 167 13 211 397 67 107 131 139 127 173 59 491 241 89 2 461 109 3 293 313 317 283 149 431 239 521 401 503 179 97 41 37 449 11 439 193 271 307 337 251 433 103 467 379 389 43 83 373 101 419 523 541 487 479 79 367 509 499 347 137 349 5 277 409 359 463 233 353 383 47 23 197 71 19 157 263 223 181 7 421 457 311 191 53 163 443 331\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n281 139 131 223 503 349 61 337 521 509 313 41 373 233 433 461 487 211 457 359 419 157 83 383 53 179 463 197 379 571 587 277 347 173 431 577 89 443 311 193 397 71 353 401 227 113 563 271 31 109 317 479 29 137 293 191 59 409 229 499 47 151 2 269 67 167 23 421 389 11 547 251 283 569 491 163 149 19 239 103 439 85 3 541 199 467 79 257 331 73 241 181 7 557 13 263 449 127 101 37\\r\\n', 'output': ['1210985628131\\r\\n']}, {'input': '10000000000000 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547\\r\\n', 'output': ['896701239049\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long expo(long long a, long long n, long long mod) {\n  long long ans = 1;\n  while (n > 0) {\n    if (n & 1) ans = (ans * a) % mod;\n    a = (a * a) % mod;\n    n >>= 1;\n  }\n  return ans % mod;\n}\nlong long mod_inv(long long a) { return expo(a, MOD - 2, MOD); }\nlong long n, k, v[100], MOD;\nbool is_prime(long long n) {\n  if (n == 1 || n == 0) return false;\n  long long temp = 2;\n  while (temp * temp <= n) {\n    if (n % temp == 0) return false;\n    temp++;\n  }\n  return true;\n}\nint main() {\n  cin >> n >> k;\n  MOD = 1000000007;\n  for (int i = 0; i < k; i++) {\n    cin >> v[i];\n  }\n  long long ans = 1, cur = 0, pw = 1;\n  bool is_prime_n = false;\n  for (int i = 0; i < k; i++) {\n    long long t = n / v[i];\n    if (t >= MOD) {\n      if (!is_prime_n) {\n        cur += mod_inv(expo(v[i], MOD - 2, MOD) - 1);\n        if (is_prime(v[i])) {\n          cur = cur * (v[i] - 1) % MOD;\n        }\n      } else {\n        cur +=\n            ((((n / v[i]) % MOD) * mod_inv(v[i] - 1)) % MOD + MOD) % MOD;\n      }\n    } else if (t > 0) {\n      cur += mod_inv(expo(v[i], t, MOD) - 1);\n      is_prime_n = true;\n    }\n    if (!is_prime(v[i])) {\n      ans = ans * ((mod_inv(v[i]) - 1 + MOD) % MOD) % MOD;\n    }\n  }\n  if (!is_prime_n) {\n    ans = ans * cur % MOD;\n  }\n  cout << ans << endl;\n}\n"}
{"src_uid": "cec0f6c267fa76191a3784b08e39acd6", "id": 43, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '20 3\\r\\n2 3 5\\r\\n', 'output': ['6\\r\\n']}, {'input': '50 2\\r\\n15 8\\r\\n', 'output': ['41\\r\\n']}, {'input': '100 5\\r\\n10 9 7 11 19\\r\\n', 'output': ['56\\r\\n']}, {'input': '1 10\\r\\n2 3 5 7 11 13 17 19 23 29\\r\\n', 'output': ['1\\r\\n']}, {'input': '1000 10\\r\\n2 3 5 7 11 13 17 19 23 29\\r\\n', 'output': ['160\\r\\n']}, {'input': '666 5\\r\\n877 881 997 883 887\\r\\n', 'output': ['666\\r\\n']}, {'input': '4 2\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '2 1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '211 4\\r\\n7 3 2 5\\r\\n', 'output': ['49\\r\\n']}, {'input': '2008 3\\r\\n7 9 11\\r\\n', 'output': ['1392\\r\\n']}, {'input': '1000 11\\r\\n29 23 19 17 13 1 11 7 5 3 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '1 6\\r\\n4 27 125 11 13 29\\r\\n', 'output': ['1\\r\\n']}, {'input': '50 5\\r\\n2 7 5 51 19\\r\\n', 'output': ['16\\r\\n']}, {'input': '997 11\\r\\n13 17 19 23 29 997 121 49 25 9 4\\r\\n', 'output': ['474\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '308 4\\r\\n5 2 7 3\\r\\n', 'output': ['70\\r\\n']}, {'input': '980 8\\r\\n17 2 3 11 5 13 19 7\\r\\n', 'output': ['166\\r\\n']}, {'input': '770 4\\r\\n3 5 2 7\\r\\n', 'output': ['176\\r\\n']}, {'input': '877 5\\r\\n7 2 11 3 5\\r\\n', 'output': ['182\\r\\n']}, {'input': '289 8\\r\\n19 13 5 7 11 3 23 17\\r\\n', 'output': ['99\\r\\n']}, {'input': '4943 38\\r\\n419 127 5 281 509 839 593 409 577 463 421 617 587 739 397 743 401 179 343 31 599 349 647 89 293 521 797 431 487 881 761 43 877 643 149 353 467 909\\r\\n', 'output': ['3375\\r\\n']}, {'input': '9619 35\\r\\n131 13 677 43 243 389 577 59 857 71 199 227 841 257 719 601 349 181 73 8 463 311 439 761 449 167 569 191 683 283 379 263 499 571 277\\r\\n', 'output': ['6578\\r\\n']}, {'input': '2852 62\\r\\n401 919 643 367 283 127 593 251 443 389 683 157 227 361 547 997 439 113 239 727 197 947 37 761 929 167 67 431 577 673 625 49 83 11 409 27 769 967 449 199 241 491 571 487 733 653 281 73 107 887 101 827 103 751 787 89 256 607 229 971 463 211\\r\\n', 'output': ['1826\\r\\n']}, {'input': '1138 12\\r\\n31 169 389 337 937 763 251 443 199 661 577 487\\r\\n', 'output': ['1074\\r\\n']}, {'input': '8849 56\\r\\n619 401 733 251 107 37 829 719 479 751 419 523 617 947 809 53 47 313 577 709 71 277 256 547 683 769 269 701 127 863 409 331 19 443 149 841 877 67 521 929 919 773 883 421 17 601 937 61 263 109 103 41 859 197 293 983\\r\\n', 'output': ['5875\\r\\n']}, {'input': '718 3\\r\\n770 337 743\\r\\n', 'output': ['716\\r\\n']}, {'input': '1785 69\\r\\n547 281 347 11 139 883 863 169 643 83 709 719 397 809 157 349 887 523 757 41 181 499 479 619 197 691 971 773 125 569 647 61 101 839 19 359 29 167 331 353 947 379 53 631 109 853 193 23 421 107 911 269 289 71 977 241 761 677 739 263 659 823 229 764 373 509 661 857 961\\r\\n', 'output': ['1020\\r\\n']}, {'input': '7990 37\\r\\n547 541 449 47 463 929 983 647 113 877 683 41 79 961 625 283 349 641 841 729 811 701 619 293 281 859 199 229 607 941 467 809 109 773 443 919 911\\r\\n', 'output': ['6922\\r\\n']}, {'input': '9566 91\\r\\n353 401 349 479 233 367 563 311 643 769 521 173 457 59 523 257 317 659 857 743 619 277 83 181 109 131 359 211 139 841 761 929 61 271 827 719 499 289 677 449 877 389 71 53 223 263 571 199 727 163 31 2 373 463 431 613 809 947 467 797 547 883 409 911 41 79 821 881 503 739 433 251 823 701 991 193 997 19 241 607 487 509 729 569 179 151 229 673 691 443 859\\r\\n', 'output': ['2982\\r\\n']}, {'input': '6254 91\\r\\n421 379 47 683 953 97 311 439 233 271 797 71 991 131 109 829 419 499 857 827 313 841 73 571 4 389 631 103 83 587 911 43 643 89 743 593 541 243 503 251 863 61 157 349 223 647 853 467 443 173 617 577 947 25 739 599 751 653 281 811 163 397 409 919 463 79 971 727 113 53 7 787 641 701 883 307 137 293 241 229 269 487 239 107 67 479 191 823 121 367 449\\r\\n', 'output': ['2399\\r\\n']}, {'input': '815442 99\\r\\n131 227 503 269 61 107 103 47 263 3 239 167 401 67 13 359 431 137 523 37 53 379 79 461 421 127 313 173 109 31 433 317 193 149 373 19 521 241 251 43 151 397 7 307 11 409 139 443 439 449 281 479 113 293 557 97 41 2 353 487 383 23 29 509 547 191 163 467 349 491 5 463 541 17 73 499 101 347 257 277 197 367 283 59 199 457 157 229 83 311 233 223 181 89 337 179 211 419 331\\r\\n', 'output': ['70035\\r\\n']}, {'input': '642382 96\\r\\n487 89 71 251 163 337 3 83 157 313 389 149 409 277 5 73 97 167 103 211 193 223 101 503 41 467 317 79 139 311 347 431 107 179 23 191 233 443 433 7 2 131 173 521 61 499 11 457 331 307 383 397 523 53 449 137 67 239 367 479 263 461 269 31 281 181 359 199 227 373 439 43 421 229 151 37 353 419 509 271 283 463 401 47 349 13 59 293 491 241 109 257 197 17 29 127\\r\\n', 'output': ['58572\\r\\n']}, {'input': '600972 66\\r\\n79 163 73 211 223 7 37 239 65 43 173 31 263 67 179 283 277 193 131 229 97 151 167 293 17 337 191 137 103 109 307 311 149 349 23 181 61 281 241 257 251 53 47 19 269 317 71 127 353 197 89 157 11 113 347 313 227 29 2 83 271 3 107 199 59 233\\r\\n', 'output': ['78012\\r\\n']}, {'input': '363161 80\\r\\n337 127 71 53 73 293 283 401 439 97 61 101 367 131 373 19 233 163 13 229 379 59 263 389 227 41 271 347 419 5 167 107 89 179 223 151 433 431 359 193 269 139 257 31 191 157 43 47 137 383 173 277 281 239 449 109 37 181 331 199 421 23 443 7 103 317 79 113 3 83 313 29 311 307 2 251 197 149 353 11\\r\\n', 'output': ['35160\\r\\n']}, {'input': '693133 76\\r\\n397 181 313 61 389 107 191 97 149 193 179 23 197 139 71 349 251 199 127 13 109 83 211 47 311 113 19 31 7 3 53 229 59 409 331 137 337 277 2 41 233 173 227 131 307 281 79 73 163 101 103 347 379 239 89 37 269 11 167 241 43 283 367 257 29 271 293 373 401 151 67 157 223 353 383 17\\r\\n', 'output': ['78449\\r\\n']}, {'input': '842450 58\\r\\n37 283 89 241 131 83 271 3 179 109 167 79 2 19 173 53 269 31 113 59 263 97 181 233 41 5 71 67 199 107 257 43 151 197 11 101 211 17 229 149 73 13 193 157 61 47 277 227 223 139 29 23 281 137 103 127 163 191\\r\\n', 'output': ['94467\\r\\n']}, {'input': '120713 99\\r\\n59 283 419 509 431 19 443 241 101 491 157 257 17 31 71 127 173 191 37 73 2 367 251 463 227 271 311 557 293 47 547 521 11 397 67 163 541 347 43 523 181 389 103 503 487 113 233 97 139 211 107 29 131 421 317 223 193 3 331 439 5 457 197 461 109 89 409 277 353 401 349 151 379 467 449 61 13 433 479 359 167 137 229 79 53 23 313 263 41 83 269 281 179 373 337 7 307 499 199\\r\\n', 'output': ['11305\\r\\n']}, {'input': '944214 61\\r\\n157 89 23 101 13 17 59 193 199 79 47 151 61 97 163 257 7 83 5 67 41 29 293 229 211 307 271 298 179 227 263 131 113 109 107 313 43 233 181 53 19 103 173 127 283 71 3 137 197 241 281 139 311 31 37 277 11 223 167 239 269\\r\\n', 'output': ['182663\\r\\n']}, {'input': '688274 81\\r\\n401 71 257 163 293 2 89 239 241 11 433 307 67 227 313 353 283 439 41 113 7 229 59 3 47 179 19 251 331 347 173 167 431 421 157 373 311 277 317 389 349 263 397 181 269 191 367 197 79 107 149 359 211 271 29 53 101 419 97 137 409 13 73 5 127 383 131 61 151 199 223 31 43 17 233 337 37 83 139 109 23\\r\\n', 'output': ['61497\\r\\n']}, {'input': '623511 55\\r\\n229 257 17 193 101 103 59 191 53 107 71 113 299 269 211 41 173 2 263 5 197 199 163 149 223 181 167 31 239 97 139 79 233 157 37 3 11 7 131 89 29 83 227 109 19 47 61 271 127 241 73 137 67 151 251\\r\\n', 'output': ['70330\\r\\n']}, {'input': '34202350 95\\r\\n991 181 541 361 659 271 563 577 163 751 961 81 719 43 383 491 101 535 67 389 191 619 709 587 353 529 179 73 121 13 127 607 431 853 569 797 347 79 251 17 409 401 41 193 839 199 211 811 487 601 881 733 241 883 599 239 197 229 49 521 461 787 677 311 503 421 757 613 841 349 821 59 857 727 379 47 151 877 419 643 83 337 103 4 467 443 167 977 439 773 109 479 373 683 97\\r\\n', 'output': ['14676536\\r\\n']}, {'input': '56124673 91\\r\\n181 67 307 409 71 29 89 31 97 659 709 19 241 503 727 823 859 691 971 37 599 227 313 587 967 883 149 937 773 49 379 557 787 11 827 331 367 839 929 757 863 619 257 509 223 947 593 173 487 761 401 25 563 199 661 547 953 983 821 479 461 293 569 311 103 577 433 601 353 271 169 59 733 463 919 419 151 289 449 643 877 43 829 9 467 349 769 631 431 337 457\\r\\n', 'output': ['27823308\\r\\n']}, {'input': '66663476 87\\r\\n81 37 347 227 41 359 25 859 163 809 727 541 829 841 463 919 23 593 599 361 211 839 797 151 343 373 773 907 677 821 13 199 853 571 739 577 367 877 491 379 277 289 257 157 941 883 121 173 769 761 499 233 421 419 961 107 229 709 523 337 461 293 569 857 197 443 433 241 397 479 137 997 179 887 281 127 619 953 823 643 977 317 743 191 467 64 67\\r\\n', 'output': ['41298098\\r\\n']}, {'input': '85912508 97\\r\\n193 971 647 373 757 433 263 283 223 361 101 229 829 379 181 419 239 941 431 523 211 947 107 967 457 47 827 103 131 577 811 911 617 641 709 691 61 53 683 797 751 467 761 163 787 289 2 401 661 257 463 233 739 191 607 853 863 769 281 307 563 487 109 491 631 79 149 241 919 961 977 13 179 983 479 37 331 719 613 353 625 337 701 541 349 121 311 673 277 173 347 83 89 991 73 7 383\\r\\n', 'output': ['23087838\\r\\n']}, {'input': '17439127 97\\r\\n653 563 383 971 529 607 431 113 401 625 101 587 683 29 281 421 223 857 37 263 367 53 107 61 457 283 571 103 331 557 521 911 449 17 593 863 443 307 71 929 31 227 761 947 257 701 277 163 887 751 79 733 757 409 229 797 361 773 659 419 541 487 149 359 577 769 353 233 239 631 3 131 739 613 7 193 139 137 179 953 256 997 271 199 197 983 293 673 463 499 617 241 907 647 461 479 977\\r\\n', 'output': ['6201590\\r\\n']}, {'input': '11541416 76\\r\\n653 563 419 337 243 73 809 787 509 487 271 587 521 647 289 461 197 257 863 263 31 103 107 397 677 659 997 431 839 953 701 379 919 239 661 127 443 191 743 389 821 227 281 71 571 293 89 881 523 857 331 109 977 971 911 167 343 241 199 83 883 547 499 853 641 43 137 617 601 829 125 823 151 613 947 121\\r\\n', 'output': ['8441427\\r\\n']}, {'input': '90742323 78\\r\\n491 443 419 121 283 347 577 601 307 149 733 73 683 137 739 23 691 179 53 863 467 239 827 947 139 569 173 829 383 353 919 887 701 853 47 127 659 697 653 251 571 953 269 13 839 719 359 233 101 463 331 457 71 971 421 773 67 431 593 479 809 317 243 4 257 563 107 907 37 125 751 157 151 911 619 841 499 677\\r\\n', 'output': ['43807233\\r\\n']}, {'input': '72884678 90\\r\\n491 157 419 593 673 307 211 601 313 613 953 617 853 709 811 311 41 757 347 859 283 607 229 941 503 269 463 983 107 379 449 83 523 67 739 59 719 653 797 81 433 883 101 431 113 461 587 971 293 557 251 907 769 71 89 139 263 277 197 547 227 317 959 127 809 43 439 947 37 353 359 73 599 961 701 167 373 911 509 223 17 397 64 929 683 521 421 29 13 19\\r\\n', 'output': ['39115199\\r\\n']}, {'input': '97550157 77\\r\\n577 157 761 367 79 331 547 101 757 243 503 139 839 863 811 457 47 647 977 419 61 739 229 773 971 947 449 467 619 491 16 641 991 401 409 677 431 179 797 887 37 433 113 701 599 523 853 487 397 443 83 997 137 673 907 227 41 683 197 199 73 71 89 169 17 617 809 421 239 751 271 53 719 827 769 787 509\\r\\n', 'output': ['61195229\\r\\n']}, {'input': '10169176 79\\r\\n613 121 967 251 743 653 43 499 419 167 49 139 383 827 277 541 529 961 59 739 61 89 397 227 179 169 601 467 127 883 919 401 947 263 193 16 593 661 757 523 269 211 313 557 647 163 389 577 83 443 337 607 719 911 271 311 881 157 181 19 131 81 491 773 433 811 67 137 281 751 353 431 821 439 359 487 853 457 727\\r\\n', 'output': ['6512164\\r\\n']}, {'input': '9976698153840 97\\r\\n491 257 227 467 101 17 163 521 337 313 181 211 61 349 503 367 107 3 233 103 239 433 401 73 113 47 139 43 331 389 499 197 479 463 431 359 487 353 223 251 283 83 421 109 281 317 11 79 157 443 269 461 277 293 23 97 397 199 419 229 457 41 547 173 509 59 149 5 31 7 89 179 449 151 37 19 137 71 167 131 439 379 2 311 29 263 523 53 409 13 271 241 347 193 373 191 307\\r\\n', 'output': ['908388043912\\r\\n']}, {'input': '9678048567267 95\\r\\n367 419 397 229 443 59 461 43 457 467 373 431 509 409 239 223 163 41 563 107 263 47 281 73 221 311 241 547 191 463 197 181 19 211 149 103 89 5 331 557 353 109 233 101 131 337 113 199 151 439 541 307 347 349 293 157 33 449 271 421 139 83 37 193 383 71 29 23 137 469 569 179 523 167 479 359 521 227 61 257 79 106 433 503 491 97 127 401 379 389 251 277 269 173 317\\r\\n', 'output': ['3897162195455\\r\\n']}, {'input': '9968915049080 100\\r\\n257 353 521 449 127 157 433 457 499 409 269 89 563 181 439 149 523 349 17 173 281 109 137 43 421 443 367 463 467 2 131 461 37 101 331 23 199 97 337 491 401 557 431 61 53 3 29 67 373 547 107 479 139 397 229 103 71 113 79 271 241 239 283 83 263 313 197 227 359 31 179 419 277 211 293 503 251 383 347 223 487 233 5 541 13 59 167 7 41 311 509 191 389 73 151 163 317 47 569 19\\r\\n', 'output': ['977074843979\\r\\n']}, {'input': '9768565482772 100\\r\\n317 229 421 251 203 101 509 383 311 107 199 293 541 409 487 397 257 5 149 193 223 163 439 67 347 83 569 103 109 137 479 179 593 503 271 191 227 41 349 331 547 419 353 337 313 13 281 577 557 139 461 571 367 173 431 181 233 269 43 389 521 113 263 449 523 97 61 3 151 211 443 31 241 373 457 467 37 19 59 2 563 73 587 131 379 79 307 239 283 127 47 71 23 433 187 277 197 53 499 157\\r\\n', 'output': ['1227370026994\\r\\n']}, {'input': '9671796206988 100\\r\\n137 107 419 421 197 113 389 97 557 487 271 229 19 563 131 523 181 53 239 401 227 467 7 409 71 59 433 491 157 479 2 3 173 29 383 47 313 283 347 73 373 163 277 179 331 499 109 263 251 443 367 317 269 61 461 151 83 13 211 31 127 463 449 67 167 199 503 457 257 439 353 139 311 307 5 349 11 379 23 281 101 293 17 191 521 571 241 569 193 79 41 43 233 397 223 509 103 541 359 337\\r\\n', 'output': ['894018567035\\r\\n']}, {'input': '9806951141493 99\\r\\n433 467 293 313 67 311 163 223 471 457 41 277 271 509 101 199 491 397 83 359 353 73 449 5 131 563 443 197 461 379 383 421 89 151 53 211 17 251 503 79 479 7 463 47 59 239 331 233 97 173 281 409 367 419 523 107 547 23 401 241 43 439 181 347 109 389 113 179 2 257 373 283 431 191 541 227 269 137 149 31 307 263 193 499 229 37 521 103 19 337 11 71 167 139 13 487 61 127 29\\r\\n', 'output': ['1314339720575\\r\\n']}, {'input': '9996326598719 98\\r\\n89 373 347 163 271 71 467 139 13 311 337 397 107 103 101 439 313 191 263 491 193 41 59 293 257 179 151 199 5 113 73 307 461 173 157 277 211 281 401 23 353 229 523 137 67 431 109 7 269 31 283 241 421 503 17 239 61 443 43 37 131 181 227 3 223 19 379 449 349 499 367 11 433 97 167 359 29 331 521 251 127 409 197 557 317 53 541 47 509 547 419 383 2 149 479 83 457 79\\r\\n', 'output': ['893840700159\\r\\n']}, {'input': '9930225951240 95\\r\\n211 347 251 131 181 239 191 457 127 463 353 397 61 503 197 163 569 331 37 101 547 401 277 67 23 349 203 467 11 379 317 227 337 73 107 113 83 439 53 157 17 223 2 383 47 269 409 487 359 431 271 479 179 193 13 167 19 41 311 109 491 563 31 433 449 139 283 509 281 419 199 233 367 79 43 173 313 241 421 71 103 521 499 97 523 293 137 257 5 89 443 263 373 149 389\\r\\n', 'output': ['1637980385783\\r\\n']}, {'input': '9597019411250 96\\r\\n397 487 541 383 229 443 59 13 109 179 79 263 41 283 7 23 17 463 281 2 433 199 223 137 347 127 467 83 227 89 3 29 233 181 101 251 307 197 37 337 457 31 317 61 157 313 389 103 107 43 167 47 353 421 509 149 419 269 349 151 131 67 277 491 503 331 71 113 257 311 499 19 271 239 359 11 479 449 367 379 439 293 523 241 97 191 139 401 53 73 461 373 409 521 965 431\\r\\n', 'output': ['1087130960247\\r\\n']}, {'input': '9886773646149 98\\r\\n181 499 223 419 19 557 71 509 283 11 163 17 439 397 127 67 521 349 281 479 331 197 389 563 179 461 173 3 2 167 101 317 373 37 31 367 199 61 433 43 193 151 229 23 541 523 109 311 383 463 421 59 271 73 239 379 409 251 107 457 113 79 241 401 29 89 35 103 157 137 353 233 139 307 211 83 97 293 431 569 359 149 491 487 337 191 41 263 277 467 47 313 443 449 547 269 53 257\\r\\n', 'output': ['1359913898511\\r\\n']}, {'input': '9795821923031 98\\r\\n2 7 11 13 15 17 19 23 29 31 37 41 43 47 53 59 67 71 73 79 83 89 97 101 103 107 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 373 379 383 389 397 401 409 419 421 431 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569\\r\\n', 'output': ['1564643642724\\r\\n']}, {'input': '9507905892355 99\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 409 419 421 431 433 439 443 449 457 461 463 467 487 491 499 503 509 521 523 541 547 557\\r\\n', 'output': ['849348619910\\r\\n']}, {'input': '9693931407793 98\\r\\n2 3 5 13 17 23 29 31 37 41 43 47 53 59 67 71 73 79 83 97 101 103 107 109 113 127 131 133 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 271 277 281 283 293 307 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 563 569 671\\r\\n', 'output': ['1189433268692\\r\\n']}, {'input': '9590161274760 99\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 503 509 521 541 547 557\\r\\n', 'output': ['854721606968\\r\\n']}, {'input': '9950847944431 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 127 131 137 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557\\r\\n', 'output': ['894249894895\\r\\n']}, {'input': '9500100903584 95\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 293 307 313 317 331 337 347 353 359 367 373 379 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['858277370189\\r\\n']}, {'input': '9842961910207 95\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 461 463 467 479 487 491 499 503\\r\\n', 'output': ['882219504923\\r\\n']}, {'input': '9838785728264 96\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 89 97 103 107 109 113 127 131 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['903236710045\\r\\n']}, {'input': '9867732421778 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 179 181 191 193 197 199 211 223 227 229 233 239 241 251 263 269 271 277 281 283 293 307 311 317 331 337 347 349 353 359 367 373 379 383 389 397 401 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569 571\\r\\n', 'output': ['896116476463\\r\\n']}, {'input': '9779523837247 96\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 499 503 509 521 523\\r\\n', 'output': ['883837021065\\r\\n']}, {'input': '9867630384078 96\\r\\n571 569 563 557 547 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 307 293 283 281 277 271 269 263 257 251 239 233 229 227 223 211 197 193 191 181 179 173 163 157 151 149 139 137 131 127 113 107 103 101 97 89 79 73 67 61 59 53 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['937747863784\\r\\n']}, {'input': '9875196562006 99\\r\\n587 577 571 569 563 557 547 541 523 521 509 503 491 487 467 463 461 457 443 439 433 431 421 419 409 401 397 391 389 383 379 373 367 359 353 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 157 151 149 139 137 131 127 113 107 103 101 97 89 83 73 71 67 61 59 53 47 43 41 37 31 29 19 13 11 7 5 3 2\\r\\n', 'output': ['995583778464\\r\\n']}, {'input': '9549571840708 96\\r\\n547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 79 73 71 67 59 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['889647002352\\r\\n']}, {'input': '9911982578329 99\\r\\n571 569 563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 379 373 367 353 349 347 337 331 317 313 311 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 113 109 107 103 101 97 89 83 73 71 67 61 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['913309108147\\r\\n']}, {'input': '9760780439447 95\\r\\n547 541 523 521 503 499 491 487 479 467 463 461 457 449 443 439 433 421 419 409 401 397 389 383 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 79 73 67 61 59 53 47 43 41 37 31 29 23 19 17 13 7 5 3 2\\r\\n', 'output': ['980142379577\\r\\n']}, {'input': '9776745118716 99\\r\\n571 569 563 557 547 541 523 521 509 503 491 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 377 373 367 359 353 349 347 337 331 317 313 311 307 293 283 277 271 269 263 257 251 241 239 233 229 227 223 211 199 193 191 181 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 23 19 17 11 7 5 3 2\\r\\n', 'output': ['980171747646\\r\\n']}, {'input': '9872727922459 100\\r\\n563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 433 431 421 419 409 401 397 389 383 379 373 367 359 353 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 59 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['890601028930\\r\\n']}, {'input': '9819416028761 95\\r\\n521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 13 11 5 3 2\\r\\n', 'output': ['1031126647049\\r\\n']}, {'input': '9763307060499 98\\r\\n569 563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 439 433 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 11 7 5 3 2\\r\\n', 'output': ['959856047856\\r\\n']}, {'input': '9809248239466 100\\r\\n737 593 587 577 569 563 557 547 541 523 521 509 503 499 491 487 467 463 461 457 449 443 439 431 421 419 409 401 397 389 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 61 59 53 47 43 37 31 29 23 19 17 13 7 5 3 2\\r\\n', 'output': ['999773802890\\r\\n']}, {'input': '9903670365284 96\\r\\n109 229 373 677 499 31 727 841 199 811 907 625 2 563 251 131 67 313 619 137 293 359 17 461 97 331 173 107 491 307 419 709 857 379 181 769 839 139 223 733 193 71 157 479 43 541 211 233 127 269 421 243 569 353 257 167 37 103 529 337 283 983 701 19 343 383 593 121 991 977 113 503 317 823 349 457 587 431 463 683 601 367 523 947 617 311 919 647 59 829 467 859 953 509 599 641\\r\\n', 'output': ['2939448304654\\r\\n']}, {'input': '9502178257748 98\\r\\n821 883 373 113 499 659 907 331 617 163 809 709 857 383 223 937 379 512 811 103 863 79 83 643 257 599 173 107 467 769 81 277 613 271 991 947 523 293 121 47 23 757 419 727 89 853 61 761 317 241 463 961 181 997 509 607 37 359 49 269 977 503 283 19 983 541 67 281 97 839 397 43 823 461 797 701 719 353 25 409 601 421 677 73 347 193 859 647 587 881 971 829 13 547 179 641 877 229\\r\\n', 'output': ['5084295876526\\r\\n']}, {'input': '9642376788915 95\\r\\n397 883 373 991 499 727 827 523 401 887 173 461 857 193 239 757 929 313 631 683 71 251 103 677 347 449 611 641 439 557 27 109 233 977 797 479 139 569 829 349 23 821 613 431 89 853 343 761 607 311 67 907 107 773 317 37 691 359 289 881 113 503 41 64 269 463 197 281 769 839 181 137 941 739 83 229 643 293 5 409 353 787 191 73 593 241 619 859 257 809 971 937 997 163 179\\r\\n', 'output': ['4909262218143\\r\\n']}, {'input': '9700065114573 99\\r\\n311 691 191 991 599 727 479 547 229 41 23 439 919 71 11 53 17 271 631 617 521 839 359 281 131 353 613 401 197 157 743 109 223 101 937 929 139 293 347 79 173 3 337 241 461 683 277 761 467 827 811 907 7 107 449 37 947 211 607 457 677 8 239 809 269 997 541 29 409 419 163 647 941 769 787 491 883 757 775 509 641 661 373 89 643 179 569 619 443 127 397 821 971 151 361 859 739 523 701\\r\\n', 'output': ['2699236106797\\r\\n']}, {'input': '9846406935247 98\\r\\n571 367 53 43 769 29 307 991 557 113 449 59 397 271 751 967 761 151 857 401 277 773 997 281 887 523 349 3 197 673 853 823 577 101 521 389 619 883 659 881 947 37 337 149 211 691 569 641 797 97 163 223 61 47 457 347 683 157 13 977 121 229 41 79 269 631 499 293 727 353 643 839 421 599 241 757 181 4 125 877 257 467 653 73 313 811 953 677 89 941 199 419 233 563 251 859 739 929\\r\\n', 'output': ['2869839675507\\r\\n']}, {'input': '9578425604483 100\\r\\n727 257 827 701 859 169 353 887 19 997 449 97 137 761 631 139 467 811 709 401 967 7 233 109 719 113 11 9 683 37 853 373 733 941 971 131 461 883 71 577 863 617 349 509 661 937 67 263 271 541 43 773 647 47 419 523 857 499 367 347 503 313 311 797 269 907 103 223 307 983 691 337 167 607 89 5 127 409 163 101 977 241 389 512 463 643 743 431 277 929 641 739 839 79 251 359 557 443 227 193\\r\\n', 'output': ['3429244221786\\r\\n']}, {'input': '9850057469698 95\\r\\n191 193 37 113 443 139 227 109 911 797 449 173 409 613 59 463 809 811 857 401 491 163 41 769 821 211 487 647 971 503 643 709 461 419 991 353 311 157 11 383 739 313 577 541 961 661 751 599 761 947 421 631 653 7 379 433 397 239 64 499 3 169 367 509 571 977 941 479 53 983 359 593 953 883 179 127 97 251 73 863 859 67 101 457 659 5 107 467 691 701 43 61 607 587 877\\r\\n', 'output': ['2727577480774\\r\\n']}, {'input': '9986810815972 95\\r\\n191 641 137 127 163 733 929 887 257 157 757 43 739 337 421 229 49 521 941 401 967 277 107 881 821 173 16 789 379 743 269 121 461 857 83 953 223 683 233 101 409 839 701 617 751 53 811 103 761 529 883 631 361 17 367 937 523 67 313 449 179 169 463 593 73 661 499 479 311 673 131 659 599 541 787 331 97 349 281 397 961 29 439 625 647 271 997 709 691 773 457 71 89 139 919\\r\\n', 'output': ['5816290608872\\r\\n']}, {'input': '9607195420951 97\\r\\n571 223 997 131 163 631 283 953 47 79 19 977 7 809 59 41 617 127 941 863 383 529 43 431 73 277 64 263 463 547 433 169 443 857 757 379 71 683 349 89 761 743 31 541 227 53 557 67 167 233 449 487 601 797 991 647 661 677 311 613 83 317 191 709 883 27 251 281 887 947 521 839 139 587 173 331 503 179 359 491 673 197 823 157 523 373 307 919 389 641 691 569 653 829 911 853 271\\r\\n', 'output': ['4814783576041\\r\\n']}, {'input': '9671345835461 95\\r\\n647 289 487 887 911 503 283 311 449 821 281 19 7 239 661 71 439 839 941 691 683 733 577 431 421 277 4 827 233 863 619 631 401 293 149 307 701 109 739 241 761 773 769 211 227 79 547 563 47 809 27 107 601 797 83 953 37 929 101 967 521 199 463 271 883 163 169 907 461 811 41 823 677 139 331 263 557 613 467 383 673 569 157 317 523 743 89 373 125 397 529 61 593 113 349\\r\\n', 'output': ['3896254168046\\r\\n']}, {'input': '9980338415156 98\\r\\n197 541 383 151 71 463 283 79 823 683 811 593 523 887 353 761 439 701 479 691 103 13 829 431 337 277 397 181 461 47 619 991 433 191 907 101 317 983 367 61 59 883 499 211 827 107 769 653 547 857 81 311 643 571 223 401 229 67 19 967 257 41 239 587 449 2 797 977 227 971 487 557 43 139 241 263 617 149 37 859 131 809 839 709 467 379 613 293 863 727 157 937 577 757 199 389 11 841\\r\\n', 'output': ['2606358658461\\r\\n']}, {'input': '9925557094702 100\\r\\n53 587 311 83 631 571 821 823 593 709 811 157 347 257 11 37 439 169 509 163 877 613 289 461 883 997 97 743 383 47 619 79 271 947 467 659 317 653 729 661 929 463 167 211 647 107 983 263 887 8 443 113 599 547 223 173 361 569 229 953 577 751 349 421 853 967 373 139 227 313 487 269 563 827 233 193 617 809 199 431 131 277 529 71 911 881 241 503 863 641 857 937 281 353 727 719 389 337 101 89\\r\\n', 'output': ['5405714723943\\r\\n']}, {'input': '9568361248572 95\\r\\n443 239 683 53 631 121 853 863 541 839 953 347 499 89 109 409 83 907 17 211 439 97 103 937 71 601 811 127 79 313 467 197 569 503 787 107 317 43 887 181 163 101 389 479 857 359 983 521 751 3 419 463 551 643 769 941 677 73 229 199 397 23 449 823 421 967 617 625 179 379 487 919 37 31 173 947 739 2 271 61 131 727 647 263 461 809 281 149 929 641 431 593 523 241 571\\r\\n', 'output': ['1872180163221\\r\\n']}, {'input': '9893563607709 100\\r\\n349 557 229 211 61 619 941 569 673 19 467 653 983 359 109 127 121 907 139 293 23 613 257 607 251 97 709 151 509 883 43 197 41 8 313 367 331 199 131 827 79 991 503 181 727 449 73 841 787 541 419 887 49 677 67 523 191 743 157 3 397 137 173 823 421 773 643 431 179 89 881 857 797 853 563 401 929 479 647 383 683 757 271 641 977 113 971 691 547 311 601 163 373 953 769 659 877 239 101 499\\r\\n', 'output': ['3494740396912\\r\\n']}, {'input': '9879466421351 96\\r\\n223 281 547 149 409 243 431 257 263 499 293 647 887 523 563 127 113 361 109 769 929 311 773 677 443 593 739 251 103 691 367 83 569 797 313 557 47 331 25 211 463 173 641 37 229 751 757 487 859 227 439 359 937 433 67 137 661 743 317 4 613 199 977 269 467 271 853 727 179 397 881 983 169 911 503 839 683 419 947 883 151 653 733 719 509 461 577 919 961 607 107 41 599 541 421 89\\r\\n', 'output': ['4955531712402\\r\\n']}, {'input': '10000000000000 100\\r\\n31 61 257 199 29 17 227 269 281 151 73 113 229 167 13 211 397 67 107 131 139 127 173 59 491 241 89 2 461 109 3 293 313 317 283 149 431 239 521 401 503 179 97 41 37 449 11 439 193 271 307 337 251 433 103 467 379 389 43 83 373 101 419 523 541 487 479 79 367 509 499 347 137 349 5 277 409 359 463 233 353 383 47 23 197 71 19 157 263 223 181 7 421 457 311 191 53 163 443 331\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n281 139 131 223 503 349 61 337 521 509 313 41 373 233 433 461 487 211 457 359 419 157 83 383 53 179 463 197 379 571 587 277 347 173 431 577 89 443 311 193 397 71 353 401 227 113 563 271 31 109 317 479 29 137 293 191 59 409 229 499 47 151 2 269 67 167 23 421 389 11 547 251 283 569 491 163 149 19 239 103 439 85 3 541 199 467 79 257 331 73 241 181 7 557 13 263 449 127 101 37\\r\\n', 'output': ['1210985628131\\r\\n']}, {'input': '10000000000000 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547\\r\\n', 'output': ['896701239049\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, dp[105], p[105];\nint main() {\n  long long m, k, ans, cnt;\n  scanf(\"%I64d%I64d\", &n, &k);\n  for (int i = 0; i < k; i++) scanf(\"%I64d\", p + i), p[i] *= 2;\n  sort(p, p + k);\n  p[k] = 1ll << 62;\n  for (int i = 0; i < k; i++)\n    for (int j = 2 * p[i]; j <= n; j += p[i]) dp[i] += n / j - 1;\n  ans = n;\n  for (int i = 0; i < k; i++) {\n    cnt = 0;\n    for (int j = i + 1; j < k; j++)\n      if (p[j] % p[i] == 0) {\n        dp[j] -= dp[i];\n        cnt++;\n      }\n    ans -= dp[i] * cnt;\n  }\n  printf(\"%I64d\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "cec0f6c267fa76191a3784b08e39acd6", "id": 43, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '20 3\\r\\n2 3 5\\r\\n', 'output': ['6\\r\\n']}, {'input': '50 2\\r\\n15 8\\r\\n', 'output': ['41\\r\\n']}, {'input': '100 5\\r\\n10 9 7 11 19\\r\\n', 'output': ['56\\r\\n']}, {'input': '1 10\\r\\n2 3 5 7 11 13 17 19 23 29\\r\\n', 'output': ['1\\r\\n']}, {'input': '1000 10\\r\\n2 3 5 7 11 13 17 19 23 29\\r\\n', 'output': ['160\\r\\n']}, {'input': '666 5\\r\\n877 881 997 883 887\\r\\n', 'output': ['666\\r\\n']}, {'input': '4 2\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '2 1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '211 4\\r\\n7 3 2 5\\r\\n', 'output': ['49\\r\\n']}, {'input': '2008 3\\r\\n7 9 11\\r\\n', 'output': ['1392\\r\\n']}, {'input': '1000 11\\r\\n29 23 19 17 13 1 11 7 5 3 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '1 6\\r\\n4 27 125 11 13 29\\r\\n', 'output': ['1\\r\\n']}, {'input': '50 5\\r\\n2 7 5 51 19\\r\\n', 'output': ['16\\r\\n']}, {'input': '997 11\\r\\n13 17 19 23 29 997 121 49 25 9 4\\r\\n', 'output': ['474\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '308 4\\r\\n5 2 7 3\\r\\n', 'output': ['70\\r\\n']}, {'input': '980 8\\r\\n17 2 3 11 5 13 19 7\\r\\n', 'output': ['166\\r\\n']}, {'input': '770 4\\r\\n3 5 2 7\\r\\n', 'output': ['176\\r\\n']}, {'input': '877 5\\r\\n7 2 11 3 5\\r\\n', 'output': ['182\\r\\n']}, {'input': '289 8\\r\\n19 13 5 7 11 3 23 17\\r\\n', 'output': ['99\\r\\n']}, {'input': '4943 38\\r\\n419 127 5 281 509 839 593 409 577 463 421 617 587 739 397 743 401 179 343 31 599 349 647 89 293 521 797 431 487 881 761 43 877 643 149 353 467 909\\r\\n', 'output': ['3375\\r\\n']}, {'input': '9619 35\\r\\n131 13 677 43 243 389 577 59 857 71 199 227 841 257 719 601 349 181 73 8 463 311 439 761 449 167 569 191 683 283 379 263 499 571 277\\r\\n', 'output': ['6578\\r\\n']}, {'input': '2852 62\\r\\n401 919 643 367 283 127 593 251 443 389 683 157 227 361 547 997 439 113 239 727 197 947 37 761 929 167 67 431 577 673 625 49 83 11 409 27 769 967 449 199 241 491 571 487 733 653 281 73 107 887 101 827 103 751 787 89 256 607 229 971 463 211\\r\\n', 'output': ['1826\\r\\n']}, {'input': '1138 12\\r\\n31 169 389 337 937 763 251 443 199 661 577 487\\r\\n', 'output': ['1074\\r\\n']}, {'input': '8849 56\\r\\n619 401 733 251 107 37 829 719 479 751 419 523 617 947 809 53 47 313 577 709 71 277 256 547 683 769 269 701 127 863 409 331 19 443 149 841 877 67 521 929 919 773 883 421 17 601 937 61 263 109 103 41 859 197 293 983\\r\\n', 'output': ['5875\\r\\n']}, {'input': '718 3\\r\\n770 337 743\\r\\n', 'output': ['716\\r\\n']}, {'input': '1785 69\\r\\n547 281 347 11 139 883 863 169 643 83 709 719 397 809 157 349 887 523 757 41 181 499 479 619 197 691 971 773 125 569 647 61 101 839 19 359 29 167 331 353 947 379 53 631 109 853 193 23 421 107 911 269 289 71 977 241 761 677 739 263 659 823 229 764 373 509 661 857 961\\r\\n', 'output': ['1020\\r\\n']}, {'input': '7990 37\\r\\n547 541 449 47 463 929 983 647 113 877 683 41 79 961 625 283 349 641 841 729 811 701 619 293 281 859 199 229 607 941 467 809 109 773 443 919 911\\r\\n', 'output': ['6922\\r\\n']}, {'input': '9566 91\\r\\n353 401 349 479 233 367 563 311 643 769 521 173 457 59 523 257 317 659 857 743 619 277 83 181 109 131 359 211 139 841 761 929 61 271 827 719 499 289 677 449 877 389 71 53 223 263 571 199 727 163 31 2 373 463 431 613 809 947 467 797 547 883 409 911 41 79 821 881 503 739 433 251 823 701 991 193 997 19 241 607 487 509 729 569 179 151 229 673 691 443 859\\r\\n', 'output': ['2982\\r\\n']}, {'input': '6254 91\\r\\n421 379 47 683 953 97 311 439 233 271 797 71 991 131 109 829 419 499 857 827 313 841 73 571 4 389 631 103 83 587 911 43 643 89 743 593 541 243 503 251 863 61 157 349 223 647 853 467 443 173 617 577 947 25 739 599 751 653 281 811 163 397 409 919 463 79 971 727 113 53 7 787 641 701 883 307 137 293 241 229 269 487 239 107 67 479 191 823 121 367 449\\r\\n', 'output': ['2399\\r\\n']}, {'input': '815442 99\\r\\n131 227 503 269 61 107 103 47 263 3 239 167 401 67 13 359 431 137 523 37 53 379 79 461 421 127 313 173 109 31 433 317 193 149 373 19 521 241 251 43 151 397 7 307 11 409 139 443 439 449 281 479 113 293 557 97 41 2 353 487 383 23 29 509 547 191 163 467 349 491 5 463 541 17 73 499 101 347 257 277 197 367 283 59 199 457 157 229 83 311 233 223 181 89 337 179 211 419 331\\r\\n', 'output': ['70035\\r\\n']}, {'input': '642382 96\\r\\n487 89 71 251 163 337 3 83 157 313 389 149 409 277 5 73 97 167 103 211 193 223 101 503 41 467 317 79 139 311 347 431 107 179 23 191 233 443 433 7 2 131 173 521 61 499 11 457 331 307 383 397 523 53 449 137 67 239 367 479 263 461 269 31 281 181 359 199 227 373 439 43 421 229 151 37 353 419 509 271 283 463 401 47 349 13 59 293 491 241 109 257 197 17 29 127\\r\\n', 'output': ['58572\\r\\n']}, {'input': '600972 66\\r\\n79 163 73 211 223 7 37 239 65 43 173 31 263 67 179 283 277 193 131 229 97 151 167 293 17 337 191 137 103 109 307 311 149 349 23 181 61 281 241 257 251 53 47 19 269 317 71 127 353 197 89 157 11 113 347 313 227 29 2 83 271 3 107 199 59 233\\r\\n', 'output': ['78012\\r\\n']}, {'input': '363161 80\\r\\n337 127 71 53 73 293 283 401 439 97 61 101 367 131 373 19 233 163 13 229 379 59 263 389 227 41 271 347 419 5 167 107 89 179 223 151 433 431 359 193 269 139 257 31 191 157 43 47 137 383 173 277 281 239 449 109 37 181 331 199 421 23 443 7 103 317 79 113 3 83 313 29 311 307 2 251 197 149 353 11\\r\\n', 'output': ['35160\\r\\n']}, {'input': '693133 76\\r\\n397 181 313 61 389 107 191 97 149 193 179 23 197 139 71 349 251 199 127 13 109 83 211 47 311 113 19 31 7 3 53 229 59 409 331 137 337 277 2 41 233 173 227 131 307 281 79 73 163 101 103 347 379 239 89 37 269 11 167 241 43 283 367 257 29 271 293 373 401 151 67 157 223 353 383 17\\r\\n', 'output': ['78449\\r\\n']}, {'input': '842450 58\\r\\n37 283 89 241 131 83 271 3 179 109 167 79 2 19 173 53 269 31 113 59 263 97 181 233 41 5 71 67 199 107 257 43 151 197 11 101 211 17 229 149 73 13 193 157 61 47 277 227 223 139 29 23 281 137 103 127 163 191\\r\\n', 'output': ['94467\\r\\n']}, {'input': '120713 99\\r\\n59 283 419 509 431 19 443 241 101 491 157 257 17 31 71 127 173 191 37 73 2 367 251 463 227 271 311 557 293 47 547 521 11 397 67 163 541 347 43 523 181 389 103 503 487 113 233 97 139 211 107 29 131 421 317 223 193 3 331 439 5 457 197 461 109 89 409 277 353 401 349 151 379 467 449 61 13 433 479 359 167 137 229 79 53 23 313 263 41 83 269 281 179 373 337 7 307 499 199\\r\\n', 'output': ['11305\\r\\n']}, {'input': '944214 61\\r\\n157 89 23 101 13 17 59 193 199 79 47 151 61 97 163 257 7 83 5 67 41 29 293 229 211 307 271 298 179 227 263 131 113 109 107 313 43 233 181 53 19 103 173 127 283 71 3 137 197 241 281 139 311 31 37 277 11 223 167 239 269\\r\\n', 'output': ['182663\\r\\n']}, {'input': '688274 81\\r\\n401 71 257 163 293 2 89 239 241 11 433 307 67 227 313 353 283 439 41 113 7 229 59 3 47 179 19 251 331 347 173 167 431 421 157 373 311 277 317 389 349 263 397 181 269 191 367 197 79 107 149 359 211 271 29 53 101 419 97 137 409 13 73 5 127 383 131 61 151 199 223 31 43 17 233 337 37 83 139 109 23\\r\\n', 'output': ['61497\\r\\n']}, {'input': '623511 55\\r\\n229 257 17 193 101 103 59 191 53 107 71 113 299 269 211 41 173 2 263 5 197 199 163 149 223 181 167 31 239 97 139 79 233 157 37 3 11 7 131 89 29 83 227 109 19 47 61 271 127 241 73 137 67 151 251\\r\\n', 'output': ['70330\\r\\n']}, {'input': '34202350 95\\r\\n991 181 541 361 659 271 563 577 163 751 961 81 719 43 383 491 101 535 67 389 191 619 709 587 353 529 179 73 121 13 127 607 431 853 569 797 347 79 251 17 409 401 41 193 839 199 211 811 487 601 881 733 241 883 599 239 197 229 49 521 461 787 677 311 503 421 757 613 841 349 821 59 857 727 379 47 151 877 419 643 83 337 103 4 467 443 167 977 439 773 109 479 373 683 97\\r\\n', 'output': ['14676536\\r\\n']}, {'input': '56124673 91\\r\\n181 67 307 409 71 29 89 31 97 659 709 19 241 503 727 823 859 691 971 37 599 227 313 587 967 883 149 937 773 49 379 557 787 11 827 331 367 839 929 757 863 619 257 509 223 947 593 173 487 761 401 25 563 199 661 547 953 983 821 479 461 293 569 311 103 577 433 601 353 271 169 59 733 463 919 419 151 289 449 643 877 43 829 9 467 349 769 631 431 337 457\\r\\n', 'output': ['27823308\\r\\n']}, {'input': '66663476 87\\r\\n81 37 347 227 41 359 25 859 163 809 727 541 829 841 463 919 23 593 599 361 211 839 797 151 343 373 773 907 677 821 13 199 853 571 739 577 367 877 491 379 277 289 257 157 941 883 121 173 769 761 499 233 421 419 961 107 229 709 523 337 461 293 569 857 197 443 433 241 397 479 137 997 179 887 281 127 619 953 823 643 977 317 743 191 467 64 67\\r\\n', 'output': ['41298098\\r\\n']}, {'input': '85912508 97\\r\\n193 971 647 373 757 433 263 283 223 361 101 229 829 379 181 419 239 941 431 523 211 947 107 967 457 47 827 103 131 577 811 911 617 641 709 691 61 53 683 797 751 467 761 163 787 289 2 401 661 257 463 233 739 191 607 853 863 769 281 307 563 487 109 491 631 79 149 241 919 961 977 13 179 983 479 37 331 719 613 353 625 337 701 541 349 121 311 673 277 173 347 83 89 991 73 7 383\\r\\n', 'output': ['23087838\\r\\n']}, {'input': '17439127 97\\r\\n653 563 383 971 529 607 431 113 401 625 101 587 683 29 281 421 223 857 37 263 367 53 107 61 457 283 571 103 331 557 521 911 449 17 593 863 443 307 71 929 31 227 761 947 257 701 277 163 887 751 79 733 757 409 229 797 361 773 659 419 541 487 149 359 577 769 353 233 239 631 3 131 739 613 7 193 139 137 179 953 256 997 271 199 197 983 293 673 463 499 617 241 907 647 461 479 977\\r\\n', 'output': ['6201590\\r\\n']}, {'input': '11541416 76\\r\\n653 563 419 337 243 73 809 787 509 487 271 587 521 647 289 461 197 257 863 263 31 103 107 397 677 659 997 431 839 953 701 379 919 239 661 127 443 191 743 389 821 227 281 71 571 293 89 881 523 857 331 109 977 971 911 167 343 241 199 83 883 547 499 853 641 43 137 617 601 829 125 823 151 613 947 121\\r\\n', 'output': ['8441427\\r\\n']}, {'input': '90742323 78\\r\\n491 443 419 121 283 347 577 601 307 149 733 73 683 137 739 23 691 179 53 863 467 239 827 947 139 569 173 829 383 353 919 887 701 853 47 127 659 697 653 251 571 953 269 13 839 719 359 233 101 463 331 457 71 971 421 773 67 431 593 479 809 317 243 4 257 563 107 907 37 125 751 157 151 911 619 841 499 677\\r\\n', 'output': ['43807233\\r\\n']}, {'input': '72884678 90\\r\\n491 157 419 593 673 307 211 601 313 613 953 617 853 709 811 311 41 757 347 859 283 607 229 941 503 269 463 983 107 379 449 83 523 67 739 59 719 653 797 81 433 883 101 431 113 461 587 971 293 557 251 907 769 71 89 139 263 277 197 547 227 317 959 127 809 43 439 947 37 353 359 73 599 961 701 167 373 911 509 223 17 397 64 929 683 521 421 29 13 19\\r\\n', 'output': ['39115199\\r\\n']}, {'input': '97550157 77\\r\\n577 157 761 367 79 331 547 101 757 243 503 139 839 863 811 457 47 647 977 419 61 739 229 773 971 947 449 467 619 491 16 641 991 401 409 677 431 179 797 887 37 433 113 701 599 523 853 487 397 443 83 997 137 673 907 227 41 683 197 199 73 71 89 169 17 617 809 421 239 751 271 53 719 827 769 787 509\\r\\n', 'output': ['61195229\\r\\n']}, {'input': '10169176 79\\r\\n613 121 967 251 743 653 43 499 419 167 49 139 383 827 277 541 529 961 59 739 61 89 397 227 179 169 601 467 127 883 919 401 947 263 193 16 593 661 757 523 269 211 313 557 647 163 389 577 83 443 337 607 719 911 271 311 881 157 181 19 131 81 491 773 433 811 67 137 281 751 353 431 821 439 359 487 853 457 727\\r\\n', 'output': ['6512164\\r\\n']}, {'input': '9976698153840 97\\r\\n491 257 227 467 101 17 163 521 337 313 181 211 61 349 503 367 107 3 233 103 239 433 401 73 113 47 139 43 331 389 499 197 479 463 431 359 487 353 223 251 283 83 421 109 281 317 11 79 157 443 269 461 277 293 23 97 397 199 419 229 457 41 547 173 509 59 149 5 31 7 89 179 449 151 37 19 137 71 167 131 439 379 2 311 29 263 523 53 409 13 271 241 347 193 373 191 307\\r\\n', 'output': ['908388043912\\r\\n']}, {'input': '9678048567267 95\\r\\n367 419 397 229 443 59 461 43 457 467 373 431 509 409 239 223 163 41 563 107 263 47 281 73 221 311 241 547 191 463 197 181 19 211 149 103 89 5 331 557 353 109 233 101 131 337 113 199 151 439 541 307 347 349 293 157 33 449 271 421 139 83 37 193 383 71 29 23 137 469 569 179 523 167 479 359 521 227 61 257 79 106 433 503 491 97 127 401 379 389 251 277 269 173 317\\r\\n', 'output': ['3897162195455\\r\\n']}, {'input': '9968915049080 100\\r\\n257 353 521 449 127 157 433 457 499 409 269 89 563 181 439 149 523 349 17 173 281 109 137 43 421 443 367 463 467 2 131 461 37 101 331 23 199 97 337 491 401 557 431 61 53 3 29 67 373 547 107 479 139 397 229 103 71 113 79 271 241 239 283 83 263 313 197 227 359 31 179 419 277 211 293 503 251 383 347 223 487 233 5 541 13 59 167 7 41 311 509 191 389 73 151 163 317 47 569 19\\r\\n', 'output': ['977074843979\\r\\n']}, {'input': '9768565482772 100\\r\\n317 229 421 251 203 101 509 383 311 107 199 293 541 409 487 397 257 5 149 193 223 163 439 67 347 83 569 103 109 137 479 179 593 503 271 191 227 41 349 331 547 419 353 337 313 13 281 577 557 139 461 571 367 173 431 181 233 269 43 389 521 113 263 449 523 97 61 3 151 211 443 31 241 373 457 467 37 19 59 2 563 73 587 131 379 79 307 239 283 127 47 71 23 433 187 277 197 53 499 157\\r\\n', 'output': ['1227370026994\\r\\n']}, {'input': '9671796206988 100\\r\\n137 107 419 421 197 113 389 97 557 487 271 229 19 563 131 523 181 53 239 401 227 467 7 409 71 59 433 491 157 479 2 3 173 29 383 47 313 283 347 73 373 163 277 179 331 499 109 263 251 443 367 317 269 61 461 151 83 13 211 31 127 463 449 67 167 199 503 457 257 439 353 139 311 307 5 349 11 379 23 281 101 293 17 191 521 571 241 569 193 79 41 43 233 397 223 509 103 541 359 337\\r\\n', 'output': ['894018567035\\r\\n']}, {'input': '9806951141493 99\\r\\n433 467 293 313 67 311 163 223 471 457 41 277 271 509 101 199 491 397 83 359 353 73 449 5 131 563 443 197 461 379 383 421 89 151 53 211 17 251 503 79 479 7 463 47 59 239 331 233 97 173 281 409 367 419 523 107 547 23 401 241 43 439 181 347 109 389 113 179 2 257 373 283 431 191 541 227 269 137 149 31 307 263 193 499 229 37 521 103 19 337 11 71 167 139 13 487 61 127 29\\r\\n', 'output': ['1314339720575\\r\\n']}, {'input': '9996326598719 98\\r\\n89 373 347 163 271 71 467 139 13 311 337 397 107 103 101 439 313 191 263 491 193 41 59 293 257 179 151 199 5 113 73 307 461 173 157 277 211 281 401 23 353 229 523 137 67 431 109 7 269 31 283 241 421 503 17 239 61 443 43 37 131 181 227 3 223 19 379 449 349 499 367 11 433 97 167 359 29 331 521 251 127 409 197 557 317 53 541 47 509 547 419 383 2 149 479 83 457 79\\r\\n', 'output': ['893840700159\\r\\n']}, {'input': '9930225951240 95\\r\\n211 347 251 131 181 239 191 457 127 463 353 397 61 503 197 163 569 331 37 101 547 401 277 67 23 349 203 467 11 379 317 227 337 73 107 113 83 439 53 157 17 223 2 383 47 269 409 487 359 431 271 479 179 193 13 167 19 41 311 109 491 563 31 433 449 139 283 509 281 419 199 233 367 79 43 173 313 241 421 71 103 521 499 97 523 293 137 257 5 89 443 263 373 149 389\\r\\n', 'output': ['1637980385783\\r\\n']}, {'input': '9597019411250 96\\r\\n397 487 541 383 229 443 59 13 109 179 79 263 41 283 7 23 17 463 281 2 433 199 223 137 347 127 467 83 227 89 3 29 233 181 101 251 307 197 37 337 457 31 317 61 157 313 389 103 107 43 167 47 353 421 509 149 419 269 349 151 131 67 277 491 503 331 71 113 257 311 499 19 271 239 359 11 479 449 367 379 439 293 523 241 97 191 139 401 53 73 461 373 409 521 965 431\\r\\n', 'output': ['1087130960247\\r\\n']}, {'input': '9886773646149 98\\r\\n181 499 223 419 19 557 71 509 283 11 163 17 439 397 127 67 521 349 281 479 331 197 389 563 179 461 173 3 2 167 101 317 373 37 31 367 199 61 433 43 193 151 229 23 541 523 109 311 383 463 421 59 271 73 239 379 409 251 107 457 113 79 241 401 29 89 35 103 157 137 353 233 139 307 211 83 97 293 431 569 359 149 491 487 337 191 41 263 277 467 47 313 443 449 547 269 53 257\\r\\n', 'output': ['1359913898511\\r\\n']}, {'input': '9795821923031 98\\r\\n2 7 11 13 15 17 19 23 29 31 37 41 43 47 53 59 67 71 73 79 83 89 97 101 103 107 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 373 379 383 389 397 401 409 419 421 431 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569\\r\\n', 'output': ['1564643642724\\r\\n']}, {'input': '9507905892355 99\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 409 419 421 431 433 439 443 449 457 461 463 467 487 491 499 503 509 521 523 541 547 557\\r\\n', 'output': ['849348619910\\r\\n']}, {'input': '9693931407793 98\\r\\n2 3 5 13 17 23 29 31 37 41 43 47 53 59 67 71 73 79 83 97 101 103 107 109 113 127 131 133 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 271 277 281 283 293 307 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 563 569 671\\r\\n', 'output': ['1189433268692\\r\\n']}, {'input': '9590161274760 99\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 503 509 521 541 547 557\\r\\n', 'output': ['854721606968\\r\\n']}, {'input': '9950847944431 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 127 131 137 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557\\r\\n', 'output': ['894249894895\\r\\n']}, {'input': '9500100903584 95\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 293 307 313 317 331 337 347 353 359 367 373 379 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['858277370189\\r\\n']}, {'input': '9842961910207 95\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 461 463 467 479 487 491 499 503\\r\\n', 'output': ['882219504923\\r\\n']}, {'input': '9838785728264 96\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 89 97 103 107 109 113 127 131 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['903236710045\\r\\n']}, {'input': '9867732421778 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 179 181 191 193 197 199 211 223 227 229 233 239 241 251 263 269 271 277 281 283 293 307 311 317 331 337 347 349 353 359 367 373 379 383 389 397 401 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569 571\\r\\n', 'output': ['896116476463\\r\\n']}, {'input': '9779523837247 96\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 499 503 509 521 523\\r\\n', 'output': ['883837021065\\r\\n']}, {'input': '9867630384078 96\\r\\n571 569 563 557 547 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 307 293 283 281 277 271 269 263 257 251 239 233 229 227 223 211 197 193 191 181 179 173 163 157 151 149 139 137 131 127 113 107 103 101 97 89 79 73 67 61 59 53 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['937747863784\\r\\n']}, {'input': '9875196562006 99\\r\\n587 577 571 569 563 557 547 541 523 521 509 503 491 487 467 463 461 457 443 439 433 431 421 419 409 401 397 391 389 383 379 373 367 359 353 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 157 151 149 139 137 131 127 113 107 103 101 97 89 83 73 71 67 61 59 53 47 43 41 37 31 29 19 13 11 7 5 3 2\\r\\n', 'output': ['995583778464\\r\\n']}, {'input': '9549571840708 96\\r\\n547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 79 73 71 67 59 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['889647002352\\r\\n']}, {'input': '9911982578329 99\\r\\n571 569 563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 379 373 367 353 349 347 337 331 317 313 311 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 113 109 107 103 101 97 89 83 73 71 67 61 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['913309108147\\r\\n']}, {'input': '9760780439447 95\\r\\n547 541 523 521 503 499 491 487 479 467 463 461 457 449 443 439 433 421 419 409 401 397 389 383 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 79 73 67 61 59 53 47 43 41 37 31 29 23 19 17 13 7 5 3 2\\r\\n', 'output': ['980142379577\\r\\n']}, {'input': '9776745118716 99\\r\\n571 569 563 557 547 541 523 521 509 503 491 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 377 373 367 359 353 349 347 337 331 317 313 311 307 293 283 277 271 269 263 257 251 241 239 233 229 227 223 211 199 193 191 181 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 23 19 17 11 7 5 3 2\\r\\n', 'output': ['980171747646\\r\\n']}, {'input': '9872727922459 100\\r\\n563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 433 431 421 419 409 401 397 389 383 379 373 367 359 353 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 59 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['890601028930\\r\\n']}, {'input': '9819416028761 95\\r\\n521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 13 11 5 3 2\\r\\n', 'output': ['1031126647049\\r\\n']}, {'input': '9763307060499 98\\r\\n569 563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 439 433 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 11 7 5 3 2\\r\\n', 'output': ['959856047856\\r\\n']}, {'input': '9809248239466 100\\r\\n737 593 587 577 569 563 557 547 541 523 521 509 503 499 491 487 467 463 461 457 449 443 439 431 421 419 409 401 397 389 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 61 59 53 47 43 37 31 29 23 19 17 13 7 5 3 2\\r\\n', 'output': ['999773802890\\r\\n']}, {'input': '9903670365284 96\\r\\n109 229 373 677 499 31 727 841 199 811 907 625 2 563 251 131 67 313 619 137 293 359 17 461 97 331 173 107 491 307 419 709 857 379 181 769 839 139 223 733 193 71 157 479 43 541 211 233 127 269 421 243 569 353 257 167 37 103 529 337 283 983 701 19 343 383 593 121 991 977 113 503 317 823 349 457 587 431 463 683 601 367 523 947 617 311 919 647 59 829 467 859 953 509 599 641\\r\\n', 'output': ['2939448304654\\r\\n']}, {'input': '9502178257748 98\\r\\n821 883 373 113 499 659 907 331 617 163 809 709 857 383 223 937 379 512 811 103 863 79 83 643 257 599 173 107 467 769 81 277 613 271 991 947 523 293 121 47 23 757 419 727 89 853 61 761 317 241 463 961 181 997 509 607 37 359 49 269 977 503 283 19 983 541 67 281 97 839 397 43 823 461 797 701 719 353 25 409 601 421 677 73 347 193 859 647 587 881 971 829 13 547 179 641 877 229\\r\\n', 'output': ['5084295876526\\r\\n']}, {'input': '9642376788915 95\\r\\n397 883 373 991 499 727 827 523 401 887 173 461 857 193 239 757 929 313 631 683 71 251 103 677 347 449 611 641 439 557 27 109 233 977 797 479 139 569 829 349 23 821 613 431 89 853 343 761 607 311 67 907 107 773 317 37 691 359 289 881 113 503 41 64 269 463 197 281 769 839 181 137 941 739 83 229 643 293 5 409 353 787 191 73 593 241 619 859 257 809 971 937 997 163 179\\r\\n', 'output': ['4909262218143\\r\\n']}, {'input': '9700065114573 99\\r\\n311 691 191 991 599 727 479 547 229 41 23 439 919 71 11 53 17 271 631 617 521 839 359 281 131 353 613 401 197 157 743 109 223 101 937 929 139 293 347 79 173 3 337 241 461 683 277 761 467 827 811 907 7 107 449 37 947 211 607 457 677 8 239 809 269 997 541 29 409 419 163 647 941 769 787 491 883 757 775 509 641 661 373 89 643 179 569 619 443 127 397 821 971 151 361 859 739 523 701\\r\\n', 'output': ['2699236106797\\r\\n']}, {'input': '9846406935247 98\\r\\n571 367 53 43 769 29 307 991 557 113 449 59 397 271 751 967 761 151 857 401 277 773 997 281 887 523 349 3 197 673 853 823 577 101 521 389 619 883 659 881 947 37 337 149 211 691 569 641 797 97 163 223 61 47 457 347 683 157 13 977 121 229 41 79 269 631 499 293 727 353 643 839 421 599 241 757 181 4 125 877 257 467 653 73 313 811 953 677 89 941 199 419 233 563 251 859 739 929\\r\\n', 'output': ['2869839675507\\r\\n']}, {'input': '9578425604483 100\\r\\n727 257 827 701 859 169 353 887 19 997 449 97 137 761 631 139 467 811 709 401 967 7 233 109 719 113 11 9 683 37 853 373 733 941 971 131 461 883 71 577 863 617 349 509 661 937 67 263 271 541 43 773 647 47 419 523 857 499 367 347 503 313 311 797 269 907 103 223 307 983 691 337 167 607 89 5 127 409 163 101 977 241 389 512 463 643 743 431 277 929 641 739 839 79 251 359 557 443 227 193\\r\\n', 'output': ['3429244221786\\r\\n']}, {'input': '9850057469698 95\\r\\n191 193 37 113 443 139 227 109 911 797 449 173 409 613 59 463 809 811 857 401 491 163 41 769 821 211 487 647 971 503 643 709 461 419 991 353 311 157 11 383 739 313 577 541 961 661 751 599 761 947 421 631 653 7 379 433 397 239 64 499 3 169 367 509 571 977 941 479 53 983 359 593 953 883 179 127 97 251 73 863 859 67 101 457 659 5 107 467 691 701 43 61 607 587 877\\r\\n', 'output': ['2727577480774\\r\\n']}, {'input': '9986810815972 95\\r\\n191 641 137 127 163 733 929 887 257 157 757 43 739 337 421 229 49 521 941 401 967 277 107 881 821 173 16 789 379 743 269 121 461 857 83 953 223 683 233 101 409 839 701 617 751 53 811 103 761 529 883 631 361 17 367 937 523 67 313 449 179 169 463 593 73 661 499 479 311 673 131 659 599 541 787 331 97 349 281 397 961 29 439 625 647 271 997 709 691 773 457 71 89 139 919\\r\\n', 'output': ['5816290608872\\r\\n']}, {'input': '9607195420951 97\\r\\n571 223 997 131 163 631 283 953 47 79 19 977 7 809 59 41 617 127 941 863 383 529 43 431 73 277 64 263 463 547 433 169 443 857 757 379 71 683 349 89 761 743 31 541 227 53 557 67 167 233 449 487 601 797 991 647 661 677 311 613 83 317 191 709 883 27 251 281 887 947 521 839 139 587 173 331 503 179 359 491 673 197 823 157 523 373 307 919 389 641 691 569 653 829 911 853 271\\r\\n', 'output': ['4814783576041\\r\\n']}, {'input': '9671345835461 95\\r\\n647 289 487 887 911 503 283 311 449 821 281 19 7 239 661 71 439 839 941 691 683 733 577 431 421 277 4 827 233 863 619 631 401 293 149 307 701 109 739 241 761 773 769 211 227 79 547 563 47 809 27 107 601 797 83 953 37 929 101 967 521 199 463 271 883 163 169 907 461 811 41 823 677 139 331 263 557 613 467 383 673 569 157 317 523 743 89 373 125 397 529 61 593 113 349\\r\\n', 'output': ['3896254168046\\r\\n']}, {'input': '9980338415156 98\\r\\n197 541 383 151 71 463 283 79 823 683 811 593 523 887 353 761 439 701 479 691 103 13 829 431 337 277 397 181 461 47 619 991 433 191 907 101 317 983 367 61 59 883 499 211 827 107 769 653 547 857 81 311 643 571 223 401 229 67 19 967 257 41 239 587 449 2 797 977 227 971 487 557 43 139 241 263 617 149 37 859 131 809 839 709 467 379 613 293 863 727 157 937 577 757 199 389 11 841\\r\\n', 'output': ['2606358658461\\r\\n']}, {'input': '9925557094702 100\\r\\n53 587 311 83 631 571 821 823 593 709 811 157 347 257 11 37 439 169 509 163 877 613 289 461 883 997 97 743 383 47 619 79 271 947 467 659 317 653 729 661 929 463 167 211 647 107 983 263 887 8 443 113 599 547 223 173 361 569 229 953 577 751 349 421 853 967 373 139 227 313 487 269 563 827 233 193 617 809 199 431 131 277 529 71 911 881 241 503 863 641 857 937 281 353 727 719 389 337 101 89\\r\\n', 'output': ['5405714723943\\r\\n']}, {'input': '9568361248572 95\\r\\n443 239 683 53 631 121 853 863 541 839 953 347 499 89 109 409 83 907 17 211 439 97 103 937 71 601 811 127 79 313 467 197 569 503 787 107 317 43 887 181 163 101 389 479 857 359 983 521 751 3 419 463 551 643 769 941 677 73 229 199 397 23 449 823 421 967 617 625 179 379 487 919 37 31 173 947 739 2 271 61 131 727 647 263 461 809 281 149 929 641 431 593 523 241 571\\r\\n', 'output': ['1872180163221\\r\\n']}, {'input': '9893563607709 100\\r\\n349 557 229 211 61 619 941 569 673 19 467 653 983 359 109 127 121 907 139 293 23 613 257 607 251 97 709 151 509 883 43 197 41 8 313 367 331 199 131 827 79 991 503 181 727 449 73 841 787 541 419 887 49 677 67 523 191 743 157 3 397 137 173 823 421 773 643 431 179 89 881 857 797 853 563 401 929 479 647 383 683 757 271 641 977 113 971 691 547 311 601 163 373 953 769 659 877 239 101 499\\r\\n', 'output': ['3494740396912\\r\\n']}, {'input': '9879466421351 96\\r\\n223 281 547 149 409 243 431 257 263 499 293 647 887 523 563 127 113 361 109 769 929 311 773 677 443 593 739 251 103 691 367 83 569 797 313 557 47 331 25 211 463 173 641 37 229 751 757 487 859 227 439 359 937 433 67 137 661 743 317 4 613 199 977 269 467 271 853 727 179 397 881 983 169 911 503 839 683 419 947 883 151 653 733 719 509 461 577 919 961 607 107 41 599 541 421 89\\r\\n', 'output': ['4955531712402\\r\\n']}, {'input': '10000000000000 100\\r\\n31 61 257 199 29 17 227 269 281 151 73 113 229 167 13 211 397 67 107 131 139 127 173 59 491 241 89 2 461 109 3 293 313 317 283 149 431 239 521 401 503 179 97 41 37 449 11 439 193 271 307 337 251 433 103 467 379 389 43 83 373 101 419 523 541 487 479 79 367 509 499 347 137 349 5 277 409 359 463 233 353 383 47 23 197 71 19 157 263 223 181 7 421 457 311 191 53 163 443 331\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n281 139 131 223 503 349 61 337 521 509 313 41 373 233 433 461 487 211 457 359 419 157 83 383 53 179 463 197 379 571 587 277 347 173 431 577 89 443 311 193 397 71 353 401 227 113 563 271 31 109 317 479 29 137 293 191 59 409 229 499 47 151 2 269 67 167 23 421 389 11 547 251 283 569 491 163 149 19 239 103 439 85 3 541 199 467 79 257 331 73 241 181 7 557 13 263 449 127 101 37\\r\\n', 'output': ['1210985628131\\r\\n']}, {'input': '10000000000000 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547\\r\\n', 'output': ['896701239049\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nmap<int, int> A;\nint cnt;\nvoid check(int x) {\n  int flag = 0;\n  while (x) {\n    if (A[x]) {\n      x -= A[x];\n      flag = 1;\n    } else {\n      if (!cnt) return;\n      --cnt;\n      A[x] = 1;\n      x >>= 1;\n    }\n  }\n  if (flag) check(x + 1);\n}\nint main() {\n  long long n;\n  int k, t;\n  cin >> n >> k;\n  for (int i = 0; i < k; ++i) {\n    cin >> t;\n    ++A[t];\n  }\n  cnt = k;\n  while (n > 1 &&!A[n]) --cnt, n >>= 1;\n  check(n + 1);\n  n = n - 1;\n  for (int i = 2; i < 1000; ++i) n -= A[i];\n  cout << n;\n  return 0;\n}\n"}
{"src_uid": "cec0f6c267fa76191a3784b08e39acd6", "id": 43, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '20 3\\r\\n2 3 5\\r\\n', 'output': ['6\\r\\n']}, {'input': '50 2\\r\\n15 8\\r\\n', 'output': ['41\\r\\n']}, {'input': '100 5\\r\\n10 9 7 11 19\\r\\n', 'output': ['56\\r\\n']}, {'input': '1 10\\r\\n2 3 5 7 11 13 17 19 23 29\\r\\n', 'output': ['1\\r\\n']}, {'input': '1000 10\\r\\n2 3 5 7 11 13 17 19 23 29\\r\\n', 'output': ['160\\r\\n']}, {'input': '666 5\\r\\n877 881 997 883 887\\r\\n', 'output': ['666\\r\\n']}, {'input': '4 2\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '2 1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '211 4\\r\\n7 3 2 5\\r\\n', 'output': ['49\\r\\n']}, {'input': '2008 3\\r\\n7 9 11\\r\\n', 'output': ['1392\\r\\n']}, {'input': '1000 11\\r\\n29 23 19 17 13 1 11 7 5 3 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '1 6\\r\\n4 27 125 11 13 29\\r\\n', 'output': ['1\\r\\n']}, {'input': '50 5\\r\\n2 7 5 51 19\\r\\n', 'output': ['16\\r\\n']}, {'input': '997 11\\r\\n13 17 19 23 29 997 121 49 25 9 4\\r\\n', 'output': ['474\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '308 4\\r\\n5 2 7 3\\r\\n', 'output': ['70\\r\\n']}, {'input': '980 8\\r\\n17 2 3 11 5 13 19 7\\r\\n', 'output': ['166\\r\\n']}, {'input': '770 4\\r\\n3 5 2 7\\r\\n', 'output': ['176\\r\\n']}, {'input': '877 5\\r\\n7 2 11 3 5\\r\\n', 'output': ['182\\r\\n']}, {'input': '289 8\\r\\n19 13 5 7 11 3 23 17\\r\\n', 'output': ['99\\r\\n']}, {'input': '4943 38\\r\\n419 127 5 281 509 839 593 409 577 463 421 617 587 739 397 743 401 179 343 31 599 349 647 89 293 521 797 431 487 881 761 43 877 643 149 353 467 909\\r\\n', 'output': ['3375\\r\\n']}, {'input': '9619 35\\r\\n131 13 677 43 243 389 577 59 857 71 199 227 841 257 719 601 349 181 73 8 463 311 439 761 449 167 569 191 683 283 379 263 499 571 277\\r\\n', 'output': ['6578\\r\\n']}, {'input': '2852 62\\r\\n401 919 643 367 283 127 593 251 443 389 683 157 227 361 547 997 439 113 239 727 197 947 37 761 929 167 67 431 577 673 625 49 83 11 409 27 769 967 449 199 241 491 571 487 733 653 281 73 107 887 101 827 103 751 787 89 256 607 229 971 463 211\\r\\n', 'output': ['1826\\r\\n']}, {'input': '1138 12\\r\\n31 169 389 337 937 763 251 443 199 661 577 487\\r\\n', 'output': ['1074\\r\\n']}, {'input': '8849 56\\r\\n619 401 733 251 107 37 829 719 479 751 419 523 617 947 809 53 47 313 577 709 71 277 256 547 683 769 269 701 127 863 409 331 19 443 149 841 877 67 521 929 919 773 883 421 17 601 937 61 263 109 103 41 859 197 293 983\\r\\n', 'output': ['5875\\r\\n']}, {'input': '718 3\\r\\n770 337 743\\r\\n', 'output': ['716\\r\\n']}, {'input': '1785 69\\r\\n547 281 347 11 139 883 863 169 643 83 709 719 397 809 157 349 887 523 757 41 181 499 479 619 197 691 971 773 125 569 647 61 101 839 19 359 29 167 331 353 947 379 53 631 109 853 193 23 421 107 911 269 289 71 977 241 761 677 739 263 659 823 229 764 373 509 661 857 961\\r\\n', 'output': ['1020\\r\\n']}, {'input': '7990 37\\r\\n547 541 449 47 463 929 983 647 113 877 683 41 79 961 625 283 349 641 841 729 811 701 619 293 281 859 199 229 607 941 467 809 109 773 443 919 911\\r\\n', 'output': ['6922\\r\\n']}, {'input': '9566 91\\r\\n353 401 349 479 233 367 563 311 643 769 521 173 457 59 523 257 317 659 857 743 619 277 83 181 109 131 359 211 139 841 761 929 61 271 827 719 499 289 677 449 877 389 71 53 223 263 571 199 727 163 31 2 373 463 431 613 809 947 467 797 547 883 409 911 41 79 821 881 503 739 433 251 823 701 991 193 997 19 241 607 487 509 729 569 179 151 229 673 691 443 859\\r\\n', 'output': ['2982\\r\\n']}, {'input': '6254 91\\r\\n421 379 47 683 953 97 311 439 233 271 797 71 991 131 109 829 419 499 857 827 313 841 73 571 4 389 631 103 83 587 911 43 643 89 743 593 541 243 503 251 863 61 157 349 223 647 853 467 443 173 617 577 947 25 739 599 751 653 281 811 163 397 409 919 463 79 971 727 113 53 7 787 641 701 883 307 137 293 241 229 269 487 239 107 67 479 191 823 121 367 449\\r\\n', 'output': ['2399\\r\\n']}, {'input': '815442 99\\r\\n131 227 503 269 61 107 103 47 263 3 239 167 401 67 13 359 431 137 523 37 53 379 79 461 421 127 313 173 109 31 433 317 193 149 373 19 521 241 251 43 151 397 7 307 11 409 139 443 439 449 281 479 113 293 557 97 41 2 353 487 383 23 29 509 547 191 163 467 349 491 5 463 541 17 73 499 101 347 257 277 197 367 283 59 199 457 157 229 83 311 233 223 181 89 337 179 211 419 331\\r\\n', 'output': ['70035\\r\\n']}, {'input': '642382 96\\r\\n487 89 71 251 163 337 3 83 157 313 389 149 409 277 5 73 97 167 103 211 193 223 101 503 41 467 317 79 139 311 347 431 107 179 23 191 233 443 433 7 2 131 173 521 61 499 11 457 331 307 383 397 523 53 449 137 67 239 367 479 263 461 269 31 281 181 359 199 227 373 439 43 421 229 151 37 353 419 509 271 283 463 401 47 349 13 59 293 491 241 109 257 197 17 29 127\\r\\n', 'output': ['58572\\r\\n']}, {'input': '600972 66\\r\\n79 163 73 211 223 7 37 239 65 43 173 31 263 67 179 283 277 193 131 229 97 151 167 293 17 337 191 137 103 109 307 311 149 349 23 181 61 281 241 257 251 53 47 19 269 317 71 127 353 197 89 157 11 113 347 313 227 29 2 83 271 3 107 199 59 233\\r\\n', 'output': ['78012\\r\\n']}, {'input': '363161 80\\r\\n337 127 71 53 73 293 283 401 439 97 61 101 367 131 373 19 233 163 13 229 379 59 263 389 227 41 271 347 419 5 167 107 89 179 223 151 433 431 359 193 269 139 257 31 191 157 43 47 137 383 173 277 281 239 449 109 37 181 331 199 421 23 443 7 103 317 79 113 3 83 313 29 311 307 2 251 197 149 353 11\\r\\n', 'output': ['35160\\r\\n']}, {'input': '693133 76\\r\\n397 181 313 61 389 107 191 97 149 193 179 23 197 139 71 349 251 199 127 13 109 83 211 47 311 113 19 31 7 3 53 229 59 409 331 137 337 277 2 41 233 173 227 131 307 281 79 73 163 101 103 347 379 239 89 37 269 11 167 241 43 283 367 257 29 271 293 373 401 151 67 157 223 353 383 17\\r\\n', 'output': ['78449\\r\\n']}, {'input': '842450 58\\r\\n37 283 89 241 131 83 271 3 179 109 167 79 2 19 173 53 269 31 113 59 263 97 181 233 41 5 71 67 199 107 257 43 151 197 11 101 211 17 229 149 73 13 193 157 61 47 277 227 223 139 29 23 281 137 103 127 163 191\\r\\n', 'output': ['94467\\r\\n']}, {'input': '120713 99\\r\\n59 283 419 509 431 19 443 241 101 491 157 257 17 31 71 127 173 191 37 73 2 367 251 463 227 271 311 557 293 47 547 521 11 397 67 163 541 347 43 523 181 389 103 503 487 113 233 97 139 211 107 29 131 421 317 223 193 3 331 439 5 457 197 461 109 89 409 277 353 401 349 151 379 467 449 61 13 433 479 359 167 137 229 79 53 23 313 263 41 83 269 281 179 373 337 7 307 499 199\\r\\n', 'output': ['11305\\r\\n']}, {'input': '944214 61\\r\\n157 89 23 101 13 17 59 193 199 79 47 151 61 97 163 257 7 83 5 67 41 29 293 229 211 307 271 298 179 227 263 131 113 109 107 313 43 233 181 53 19 103 173 127 283 71 3 137 197 241 281 139 311 31 37 277 11 223 167 239 269\\r\\n', 'output': ['182663\\r\\n']}, {'input': '688274 81\\r\\n401 71 257 163 293 2 89 239 241 11 433 307 67 227 313 353 283 439 41 113 7 229 59 3 47 179 19 251 331 347 173 167 431 421 157 373 311 277 317 389 349 263 397 181 269 191 367 197 79 107 149 359 211 271 29 53 101 419 97 137 409 13 73 5 127 383 131 61 151 199 223 31 43 17 233 337 37 83 139 109 23\\r\\n', 'output': ['61497\\r\\n']}, {'input': '623511 55\\r\\n229 257 17 193 101 103 59 191 53 107 71 113 299 269 211 41 173 2 263 5 197 199 163 149 223 181 167 31 239 97 139 79 233 157 37 3 11 7 131 89 29 83 227 109 19 47 61 271 127 241 73 137 67 151 251\\r\\n', 'output': ['70330\\r\\n']}, {'input': '34202350 95\\r\\n991 181 541 361 659 271 563 577 163 751 961 81 719 43 383 491 101 535 67 389 191 619 709 587 353 529 179 73 121 13 127 607 431 853 569 797 347 79 251 17 409 401 41 193 839 199 211 811 487 601 881 733 241 883 599 239 197 229 49 521 461 787 677 311 503 421 757 613 841 349 821 59 857 727 379 47 151 877 419 643 83 337 103 4 467 443 167 977 439 773 109 479 373 683 97\\r\\n', 'output': ['14676536\\r\\n']}, {'input': '56124673 91\\r\\n181 67 307 409 71 29 89 31 97 659 709 19 241 503 727 823 859 691 971 37 599 227 313 587 967 883 149 937 773 49 379 557 787 11 827 331 367 839 929 757 863 619 257 509 223 947 593 173 487 761 401 25 563 199 661 547 953 983 821 479 461 293 569 311 103 577 433 601 353 271 169 59 733 463 919 419 151 289 449 643 877 43 829 9 467 349 769 631 431 337 457\\r\\n', 'output': ['27823308\\r\\n']}, {'input': '66663476 87\\r\\n81 37 347 227 41 359 25 859 163 809 727 541 829 841 463 919 23 593 599 361 211 839 797 151 343 373 773 907 677 821 13 199 853 571 739 577 367 877 491 379 277 289 257 157 941 883 121 173 769 761 499 233 421 419 961 107 229 709 523 337 461 293 569 857 197 443 433 241 397 479 137 997 179 887 281 127 619 953 823 643 977 317 743 191 467 64 67\\r\\n', 'output': ['41298098\\r\\n']}, {'input': '85912508 97\\r\\n193 971 647 373 757 433 263 283 223 361 101 229 829 379 181 419 239 941 431 523 211 947 107 967 457 47 827 103 131 577 811 911 617 641 709 691 61 53 683 797 751 467 761 163 787 289 2 401 661 257 463 233 739 191 607 853 863 769 281 307 563 487 109 491 631 79 149 241 919 961 977 13 179 983 479 37 331 719 613 353 625 337 701 541 349 121 311 673 277 173 347 83 89 991 73 7 383\\r\\n', 'output': ['23087838\\r\\n']}, {'input': '17439127 97\\r\\n653 563 383 971 529 607 431 113 401 625 101 587 683 29 281 421 223 857 37 263 367 53 107 61 457 283 571 103 331 557 521 911 449 17 593 863 443 307 71 929 31 227 761 947 257 701 277 163 887 751 79 733 757 409 229 797 361 773 659 419 541 487 149 359 577 769 353 233 239 631 3 131 739 613 7 193 139 137 179 953 256 997 271 199 197 983 293 673 463 499 617 241 907 647 461 479 977\\r\\n', 'output': ['6201590\\r\\n']}, {'input': '11541416 76\\r\\n653 563 419 337 243 73 809 787 509 487 271 587 521 647 289 461 197 257 863 263 31 103 107 397 677 659 997 431 839 953 701 379 919 239 661 127 443 191 743 389 821 227 281 71 571 293 89 881 523 857 331 109 977 971 911 167 343 241 199 83 883 547 499 853 641 43 137 617 601 829 125 823 151 613 947 121\\r\\n', 'output': ['8441427\\r\\n']}, {'input': '90742323 78\\r\\n491 443 419 121 283 347 577 601 307 149 733 73 683 137 739 23 691 179 53 863 467 239 827 947 139 569 173 829 383 353 919 887 701 853 47 127 659 697 653 251 571 953 269 13 839 719 359 233 101 463 331 457 71 971 421 773 67 431 593 479 809 317 243 4 257 563 107 907 37 125 751 157 151 911 619 841 499 677\\r\\n', 'output': ['43807233\\r\\n']}, {'input': '72884678 90\\r\\n491 157 419 593 673 307 211 601 313 613 953 617 853 709 811 311 41 757 347 859 283 607 229 941 503 269 463 983 107 379 449 83 523 67 739 59 719 653 797 81 433 883 101 431 113 461 587 971 293 557 251 907 769 71 89 139 263 277 197 547 227 317 959 127 809 43 439 947 37 353 359 73 599 961 701 167 373 911 509 223 17 397 64 929 683 521 421 29 13 19\\r\\n', 'output': ['39115199\\r\\n']}, {'input': '97550157 77\\r\\n577 157 761 367 79 331 547 101 757 243 503 139 839 863 811 457 47 647 977 419 61 739 229 773 971 947 449 467 619 491 16 641 991 401 409 677 431 179 797 887 37 433 113 701 599 523 853 487 397 443 83 997 137 673 907 227 41 683 197 199 73 71 89 169 17 617 809 421 239 751 271 53 719 827 769 787 509\\r\\n', 'output': ['61195229\\r\\n']}, {'input': '10169176 79\\r\\n613 121 967 251 743 653 43 499 419 167 49 139 383 827 277 541 529 961 59 739 61 89 397 227 179 169 601 467 127 883 919 401 947 263 193 16 593 661 757 523 269 211 313 557 647 163 389 577 83 443 337 607 719 911 271 311 881 157 181 19 131 81 491 773 433 811 67 137 281 751 353 431 821 439 359 487 853 457 727\\r\\n', 'output': ['6512164\\r\\n']}, {'input': '9976698153840 97\\r\\n491 257 227 467 101 17 163 521 337 313 181 211 61 349 503 367 107 3 233 103 239 433 401 73 113 47 139 43 331 389 499 197 479 463 431 359 487 353 223 251 283 83 421 109 281 317 11 79 157 443 269 461 277 293 23 97 397 199 419 229 457 41 547 173 509 59 149 5 31 7 89 179 449 151 37 19 137 71 167 131 439 379 2 311 29 263 523 53 409 13 271 241 347 193 373 191 307\\r\\n', 'output': ['908388043912\\r\\n']}, {'input': '9678048567267 95\\r\\n367 419 397 229 443 59 461 43 457 467 373 431 509 409 239 223 163 41 563 107 263 47 281 73 221 311 241 547 191 463 197 181 19 211 149 103 89 5 331 557 353 109 233 101 131 337 113 199 151 439 541 307 347 349 293 157 33 449 271 421 139 83 37 193 383 71 29 23 137 469 569 179 523 167 479 359 521 227 61 257 79 106 433 503 491 97 127 401 379 389 251 277 269 173 317\\r\\n', 'output': ['3897162195455\\r\\n']}, {'input': '9968915049080 100\\r\\n257 353 521 449 127 157 433 457 499 409 269 89 563 181 439 149 523 349 17 173 281 109 137 43 421 443 367 463 467 2 131 461 37 101 331 23 199 97 337 491 401 557 431 61 53 3 29 67 373 547 107 479 139 397 229 103 71 113 79 271 241 239 283 83 263 313 197 227 359 31 179 419 277 211 293 503 251 383 347 223 487 233 5 541 13 59 167 7 41 311 509 191 389 73 151 163 317 47 569 19\\r\\n', 'output': ['977074843979\\r\\n']}, {'input': '9768565482772 100\\r\\n317 229 421 251 203 101 509 383 311 107 199 293 541 409 487 397 257 5 149 193 223 163 439 67 347 83 569 103 109 137 479 179 593 503 271 191 227 41 349 331 547 419 353 337 313 13 281 577 557 139 461 571 367 173 431 181 233 269 43 389 521 113 263 449 523 97 61 3 151 211 443 31 241 373 457 467 37 19 59 2 563 73 587 131 379 79 307 239 283 127 47 71 23 433 187 277 197 53 499 157\\r\\n', 'output': ['1227370026994\\r\\n']}, {'input': '9671796206988 100\\r\\n137 107 419 421 197 113 389 97 557 487 271 229 19 563 131 523 181 53 239 401 227 467 7 409 71 59 433 491 157 479 2 3 173 29 383 47 313 283 347 73 373 163 277 179 331 499 109 263 251 443 367 317 269 61 461 151 83 13 211 31 127 463 449 67 167 199 503 457 257 439 353 139 311 307 5 349 11 379 23 281 101 293 17 191 521 571 241 569 193 79 41 43 233 397 223 509 103 541 359 337\\r\\n', 'output': ['894018567035\\r\\n']}, {'input': '9806951141493 99\\r\\n433 467 293 313 67 311 163 223 471 457 41 277 271 509 101 199 491 397 83 359 353 73 449 5 131 563 443 197 461 379 383 421 89 151 53 211 17 251 503 79 479 7 463 47 59 239 331 233 97 173 281 409 367 419 523 107 547 23 401 241 43 439 181 347 109 389 113 179 2 257 373 283 431 191 541 227 269 137 149 31 307 263 193 499 229 37 521 103 19 337 11 71 167 139 13 487 61 127 29\\r\\n', 'output': ['1314339720575\\r\\n']}, {'input': '9996326598719 98\\r\\n89 373 347 163 271 71 467 139 13 311 337 397 107 103 101 439 313 191 263 491 193 41 59 293 257 179 151 199 5 113 73 307 461 173 157 277 211 281 401 23 353 229 523 137 67 431 109 7 269 31 283 241 421 503 17 239 61 443 43 37 131 181 227 3 223 19 379 449 349 499 367 11 433 97 167 359 29 331 521 251 127 409 197 557 317 53 541 47 509 547 419 383 2 149 479 83 457 79\\r\\n', 'output': ['893840700159\\r\\n']}, {'input': '9930225951240 95\\r\\n211 347 251 131 181 239 191 457 127 463 353 397 61 503 197 163 569 331 37 101 547 401 277 67 23 349 203 467 11 379 317 227 337 73 107 113 83 439 53 157 17 223 2 383 47 269 409 487 359 431 271 479 179 193 13 167 19 41 311 109 491 563 31 433 449 139 283 509 281 419 199 233 367 79 43 173 313 241 421 71 103 521 499 97 523 293 137 257 5 89 443 263 373 149 389\\r\\n', 'output': ['1637980385783\\r\\n']}, {'input': '9597019411250 96\\r\\n397 487 541 383 229 443 59 13 109 179 79 263 41 283 7 23 17 463 281 2 433 199 223 137 347 127 467 83 227 89 3 29 233 181 101 251 307 197 37 337 457 31 317 61 157 313 389 103 107 43 167 47 353 421 509 149 419 269 349 151 131 67 277 491 503 331 71 113 257 311 499 19 271 239 359 11 479 449 367 379 439 293 523 241 97 191 139 401 53 73 461 373 409 521 965 431\\r\\n', 'output': ['1087130960247\\r\\n']}, {'input': '9886773646149 98\\r\\n181 499 223 419 19 557 71 509 283 11 163 17 439 397 127 67 521 349 281 479 331 197 389 563 179 461 173 3 2 167 101 317 373 37 31 367 199 61 433 43 193 151 229 23 541 523 109 311 383 463 421 59 271 73 239 379 409 251 107 457 113 79 241 401 29 89 35 103 157 137 353 233 139 307 211 83 97 293 431 569 359 149 491 487 337 191 41 263 277 467 47 313 443 449 547 269 53 257\\r\\n', 'output': ['1359913898511\\r\\n']}, {'input': '9795821923031 98\\r\\n2 7 11 13 15 17 19 23 29 31 37 41 43 47 53 59 67 71 73 79 83 89 97 101 103 107 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 373 379 383 389 397 401 409 419 421 431 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569\\r\\n', 'output': ['1564643642724\\r\\n']}, {'input': '9507905892355 99\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 409 419 421 431 433 439 443 449 457 461 463 467 487 491 499 503 509 521 523 541 547 557\\r\\n', 'output': ['849348619910\\r\\n']}, {'input': '9693931407793 98\\r\\n2 3 5 13 17 23 29 31 37 41 43 47 53 59 67 71 73 79 83 97 101 103 107 109 113 127 131 133 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 271 277 281 283 293 307 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 563 569 671\\r\\n', 'output': ['1189433268692\\r\\n']}, {'input': '9590161274760 99\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 503 509 521 541 547 557\\r\\n', 'output': ['854721606968\\r\\n']}, {'input': '9950847944431 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 127 131 137 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557\\r\\n', 'output': ['894249894895\\r\\n']}, {'input': '9500100903584 95\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 293 307 313 317 331 337 347 353 359 367 373 379 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['858277370189\\r\\n']}, {'input': '9842961910207 95\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 461 463 467 479 487 491 499 503\\r\\n', 'output': ['882219504923\\r\\n']}, {'input': '9838785728264 96\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 89 97 103 107 109 113 127 131 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['903236710045\\r\\n']}, {'input': '9867732421778 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 179 181 191 193 197 199 211 223 227 229 233 239 241 251 263 269 271 277 281 283 293 307 311 317 331 337 347 349 353 359 367 373 379 383 389 397 401 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569 571\\r\\n', 'output': ['896116476463\\r\\n']}, {'input': '9779523837247 96\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 499 503 509 521 523\\r\\n', 'output': ['883837021065\\r\\n']}, {'input': '9867630384078 96\\r\\n571 569 563 557 547 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 307 293 283 281 277 271 269 263 257 251 239 233 229 227 223 211 197 193 191 181 179 173 163 157 151 149 139 137 131 127 113 107 103 101 97 89 79 73 67 61 59 53 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['937747863784\\r\\n']}, {'input': '9875196562006 99\\r\\n587 577 571 569 563 557 547 541 523 521 509 503 491 487 467 463 461 457 443 439 433 431 421 419 409 401 397 391 389 383 379 373 367 359 353 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 157 151 149 139 137 131 127 113 107 103 101 97 89 83 73 71 67 61 59 53 47 43 41 37 31 29 19 13 11 7 5 3 2\\r\\n', 'output': ['995583778464\\r\\n']}, {'input': '9549571840708 96\\r\\n547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 79 73 71 67 59 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['889647002352\\r\\n']}, {'input': '9911982578329 99\\r\\n571 569 563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 379 373 367 353 349 347 337 331 317 313 311 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 113 109 107 103 101 97 89 83 73 71 67 61 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['913309108147\\r\\n']}, {'input': '9760780439447 95\\r\\n547 541 523 521 503 499 491 487 479 467 463 461 457 449 443 439 433 421 419 409 401 397 389 383 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 79 73 67 61 59 53 47 43 41 37 31 29 23 19 17 13 7 5 3 2\\r\\n', 'output': ['980142379577\\r\\n']}, {'input': '9776745118716 99\\r\\n571 569 563 557 547 541 523 521 509 503 491 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 377 373 367 359 353 349 347 337 331 317 313 311 307 293 283 277 271 269 263 257 251 241 239 233 229 227 223 211 199 193 191 181 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 23 19 17 11 7 5 3 2\\r\\n', 'output': ['980171747646\\r\\n']}, {'input': '9872727922459 100\\r\\n563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 433 431 421 419 409 401 397 389 383 379 373 367 359 353 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 59 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['890601028930\\r\\n']}, {'input': '9819416028761 95\\r\\n521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 13 11 5 3 2\\r\\n', 'output': ['1031126647049\\r\\n']}, {'input': '9763307060499 98\\r\\n569 563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 439 433 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 11 7 5 3 2\\r\\n', 'output': ['959856047856\\r\\n']}, {'input': '9809248239466 100\\r\\n737 593 587 577 569 563 557 547 541 523 521 509 503 499 491 487 467 463 461 457 449 443 439 431 421 419 409 401 397 389 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 61 59 53 47 43 37 31 29 23 19 17 13 7 5 3 2\\r\\n', 'output': ['999773802890\\r\\n']}, {'input': '9903670365284 96\\r\\n109 229 373 677 499 31 727 841 199 811 907 625 2 563 251 131 67 313 619 137 293 359 17 461 97 331 173 107 491 307 419 709 857 379 181 769 839 139 223 733 193 71 157 479 43 541 211 233 127 269 421 243 569 353 257 167 37 103 529 337 283 983 701 19 343 383 593 121 991 977 113 503 317 823 349 457 587 431 463 683 601 367 523 947 617 311 919 647 59 829 467 859 953 509 599 641\\r\\n', 'output': ['2939448304654\\r\\n']}, {'input': '9502178257748 98\\r\\n821 883 373 113 499 659 907 331 617 163 809 709 857 383 223 937 379 512 811 103 863 79 83 643 257 599 173 107 467 769 81 277 613 271 991 947 523 293 121 47 23 757 419 727 89 853 61 761 317 241 463 961 181 997 509 607 37 359 49 269 977 503 283 19 983 541 67 281 97 839 397 43 823 461 797 701 719 353 25 409 601 421 677 73 347 193 859 647 587 881 971 829 13 547 179 641 877 229\\r\\n', 'output': ['5084295876526\\r\\n']}, {'input': '9642376788915 95\\r\\n397 883 373 991 499 727 827 523 401 887 173 461 857 193 239 757 929 313 631 683 71 251 103 677 347 449 611 641 439 557 27 109 233 977 797 479 139 569 829 349 23 821 613 431 89 853 343 761 607 311 67 907 107 773 317 37 691 359 289 881 113 503 41 64 269 463 197 281 769 839 181 137 941 739 83 229 643 293 5 409 353 787 191 73 593 241 619 859 257 809 971 937 997 163 179\\r\\n', 'output': ['4909262218143\\r\\n']}, {'input': '9700065114573 99\\r\\n311 691 191 991 599 727 479 547 229 41 23 439 919 71 11 53 17 271 631 617 521 839 359 281 131 353 613 401 197 157 743 109 223 101 937 929 139 293 347 79 173 3 337 241 461 683 277 761 467 827 811 907 7 107 449 37 947 211 607 457 677 8 239 809 269 997 541 29 409 419 163 647 941 769 787 491 883 757 775 509 641 661 373 89 643 179 569 619 443 127 397 821 971 151 361 859 739 523 701\\r\\n', 'output': ['2699236106797\\r\\n']}, {'input': '9846406935247 98\\r\\n571 367 53 43 769 29 307 991 557 113 449 59 397 271 751 967 761 151 857 401 277 773 997 281 887 523 349 3 197 673 853 823 577 101 521 389 619 883 659 881 947 37 337 149 211 691 569 641 797 97 163 223 61 47 457 347 683 157 13 977 121 229 41 79 269 631 499 293 727 353 643 839 421 599 241 757 181 4 125 877 257 467 653 73 313 811 953 677 89 941 199 419 233 563 251 859 739 929\\r\\n', 'output': ['2869839675507\\r\\n']}, {'input': '9578425604483 100\\r\\n727 257 827 701 859 169 353 887 19 997 449 97 137 761 631 139 467 811 709 401 967 7 233 109 719 113 11 9 683 37 853 373 733 941 971 131 461 883 71 577 863 617 349 509 661 937 67 263 271 541 43 773 647 47 419 523 857 499 367 347 503 313 311 797 269 907 103 223 307 983 691 337 167 607 89 5 127 409 163 101 977 241 389 512 463 643 743 431 277 929 641 739 839 79 251 359 557 443 227 193\\r\\n', 'output': ['3429244221786\\r\\n']}, {'input': '9850057469698 95\\r\\n191 193 37 113 443 139 227 109 911 797 449 173 409 613 59 463 809 811 857 401 491 163 41 769 821 211 487 647 971 503 643 709 461 419 991 353 311 157 11 383 739 313 577 541 961 661 751 599 761 947 421 631 653 7 379 433 397 239 64 499 3 169 367 509 571 977 941 479 53 983 359 593 953 883 179 127 97 251 73 863 859 67 101 457 659 5 107 467 691 701 43 61 607 587 877\\r\\n', 'output': ['2727577480774\\r\\n']}, {'input': '9986810815972 95\\r\\n191 641 137 127 163 733 929 887 257 157 757 43 739 337 421 229 49 521 941 401 967 277 107 881 821 173 16 789 379 743 269 121 461 857 83 953 223 683 233 101 409 839 701 617 751 53 811 103 761 529 883 631 361 17 367 937 523 67 313 449 179 169 463 593 73 661 499 479 311 673 131 659 599 541 787 331 97 349 281 397 961 29 439 625 647 271 997 709 691 773 457 71 89 139 919\\r\\n', 'output': ['5816290608872\\r\\n']}, {'input': '9607195420951 97\\r\\n571 223 997 131 163 631 283 953 47 79 19 977 7 809 59 41 617 127 941 863 383 529 43 431 73 277 64 263 463 547 433 169 443 857 757 379 71 683 349 89 761 743 31 541 227 53 557 67 167 233 449 487 601 797 991 647 661 677 311 613 83 317 191 709 883 27 251 281 887 947 521 839 139 587 173 331 503 179 359 491 673 197 823 157 523 373 307 919 389 641 691 569 653 829 911 853 271\\r\\n', 'output': ['4814783576041\\r\\n']}, {'input': '9671345835461 95\\r\\n647 289 487 887 911 503 283 311 449 821 281 19 7 239 661 71 439 839 941 691 683 733 577 431 421 277 4 827 233 863 619 631 401 293 149 307 701 109 739 241 761 773 769 211 227 79 547 563 47 809 27 107 601 797 83 953 37 929 101 967 521 199 463 271 883 163 169 907 461 811 41 823 677 139 331 263 557 613 467 383 673 569 157 317 523 743 89 373 125 397 529 61 593 113 349\\r\\n', 'output': ['3896254168046\\r\\n']}, {'input': '9980338415156 98\\r\\n197 541 383 151 71 463 283 79 823 683 811 593 523 887 353 761 439 701 479 691 103 13 829 431 337 277 397 181 461 47 619 991 433 191 907 101 317 983 367 61 59 883 499 211 827 107 769 653 547 857 81 311 643 571 223 401 229 67 19 967 257 41 239 587 449 2 797 977 227 971 487 557 43 139 241 263 617 149 37 859 131 809 839 709 467 379 613 293 863 727 157 937 577 757 199 389 11 841\\r\\n', 'output': ['2606358658461\\r\\n']}, {'input': '9925557094702 100\\r\\n53 587 311 83 631 571 821 823 593 709 811 157 347 257 11 37 439 169 509 163 877 613 289 461 883 997 97 743 383 47 619 79 271 947 467 659 317 653 729 661 929 463 167 211 647 107 983 263 887 8 443 113 599 547 223 173 361 569 229 953 577 751 349 421 853 967 373 139 227 313 487 269 563 827 233 193 617 809 199 431 131 277 529 71 911 881 241 503 863 641 857 937 281 353 727 719 389 337 101 89\\r\\n', 'output': ['5405714723943\\r\\n']}, {'input': '9568361248572 95\\r\\n443 239 683 53 631 121 853 863 541 839 953 347 499 89 109 409 83 907 17 211 439 97 103 937 71 601 811 127 79 313 467 197 569 503 787 107 317 43 887 181 163 101 389 479 857 359 983 521 751 3 419 463 551 643 769 941 677 73 229 199 397 23 449 823 421 967 617 625 179 379 487 919 37 31 173 947 739 2 271 61 131 727 647 263 461 809 281 149 929 641 431 593 523 241 571\\r\\n', 'output': ['1872180163221\\r\\n']}, {'input': '9893563607709 100\\r\\n349 557 229 211 61 619 941 569 673 19 467 653 983 359 109 127 121 907 139 293 23 613 257 607 251 97 709 151 509 883 43 197 41 8 313 367 331 199 131 827 79 991 503 181 727 449 73 841 787 541 419 887 49 677 67 523 191 743 157 3 397 137 173 823 421 773 643 431 179 89 881 857 797 853 563 401 929 479 647 383 683 757 271 641 977 113 971 691 547 311 601 163 373 953 769 659 877 239 101 499\\r\\n', 'output': ['3494740396912\\r\\n']}, {'input': '9879466421351 96\\r\\n223 281 547 149 409 243 431 257 263 499 293 647 887 523 563 127 113 361 109 769 929 311 773 677 443 593 739 251 103 691 367 83 569 797 313 557 47 331 25 211 463 173 641 37 229 751 757 487 859 227 439 359 937 433 67 137 661 743 317 4 613 199 977 269 467 271 853 727 179 397 881 983 169 911 503 839 683 419 947 883 151 653 733 719 509 461 577 919 961 607 107 41 599 541 421 89\\r\\n', 'output': ['4955531712402\\r\\n']}, {'input': '10000000000000 100\\r\\n31 61 257 199 29 17 227 269 281 151 73 113 229 167 13 211 397 67 107 131 139 127 173 59 491 241 89 2 461 109 3 293 313 317 283 149 431 239 521 401 503 179 97 41 37 449 11 439 193 271 307 337 251 433 103 467 379 389 43 83 373 101 419 523 541 487 479 79 367 509 499 347 137 349 5 277 409 359 463 233 353 383 47 23 197 71 19 157 263 223 181 7 421 457 311 191 53 163 443 331\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n281 139 131 223 503 349 61 337 521 509 313 41 373 233 433 461 487 211 457 359 419 157 83 383 53 179 463 197 379 571 587 277 347 173 431 577 89 443 311 193 397 71 353 401 227 113 563 271 31 109 317 479 29 137 293 191 59 409 229 499 47 151 2 269 67 167 23 421 389 11 547 251 283 569 491 163 149 19 239 103 439 85 3 541 199 467 79 257 331 73 241 181 7 557 13 263 449 127 101 37\\r\\n', 'output': ['1210985628131\\r\\n']}, {'input': '10000000000000 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547\\r\\n', 'output': ['896701239049\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint const MAXN = 100;\nint A[MAXN + 5];\nvoid precomp() {\n  long long p = 1;\n  for (int i = 1; i <= MAXN; i++) {\n    A[i] = p - 1;\n    p *= i;\n  }\n}\nlong long n, k;\nlong long solve() {\n  for (int i = 1; i <= MAXN; i++) {\n    A[i] *= n;\n    for (int j = 1; j < i; j++) {\n      if (n % A[j] == 0) A[i] -= (n / A[j] - 1) * A[j];\n    }\n  }\n  long long result = n - 1;\n  for (int i = 0; i < k; i++) {\n    result /= A[i + 1];\n  }\n  return result;\n}\nint main() {\n  cin >> n >> k;\n  for (int i = 0; i < k; i++) {\n    cin >> A[i];\n  }\n  if (k >= MAXN) {\n    cout << n - 1 << endl;\n  } else {\n    cout << solve() << endl;\n  }\n}\n"}
{"src_uid": "cc8a8af1ba2b19bf081e379139542883", "id": 44, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2000, "testcases": "[{'input': '0 0\\r\\n1 1\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n2 2\\r\\n', 'output': ['NO']}, {'input': '2 3\\r\\n2 3\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '-4 -2\\r\\n0 0\\r\\n-2 -1\\r\\n', 'output': ['YES']}, {'input': '-100000000 -100000000\\r\\n100000000 100000000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '3 4\\r\\n-4 3\\r\\n1 7\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n2 2\\r\\n-3 -3\\r\\n', 'output': ['YES']}, {'input': '0 1\\r\\n2 3\\r\\n7 -11\\r\\n', 'output': ['NO']}, {'input': '-2 2\\r\\n3 3\\r\\n5 0\\r\\n', 'output': ['YES']}, {'input': '1 3\\r\\n3 1\\r\\n3 3\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n0 0\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n12 12\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 100000000\\r\\n0 -100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 4444\\r\\n-4444 -100000000\\r\\n50000000 50000000\\r\\n', 'output': ['YES']}, {'input': '45 6\\r\\n65 5\\r\\n0 5\\r\\n', 'output': ['NO']}, {'input': '1 0\\r\\n0 1\\r\\n2 1\\r\\n', 'output': ['YES']}, {'input': '7 11\\r\\n13 13\\r\\n0 4\\r\\n', 'output': ['YES']}, {'input': '4 2\\r\\n0 -1\\r\\n2 -2\\r\\n', 'output': ['NO']}, {'input': '4 -3\\r\\n-3 1\\r\\n0 -2\\r\\n', 'output': ['NO']}, {'input': '-2 -1\\r\\n0 1\\r\\n-2 -3\\r\\n', 'output': ['NO']}, {'input': '-1 1\\r\\n2 1\\r\\n-2 -1\\r\\n', 'output': ['NO']}, {'input': '4 0\\r\\n4 -3\\r\\n2 4\\r\\n', 'output': ['NO']}, {'input': '-3 -2\\r\\n-3 3\\r\\n4 4\\r\\n', 'output': ['NO']}, {'input': '2 1\\r\\n1 -4\\r\\n-4 -2\\r\\n', 'output': ['NO']}, {'input': '3 1\\r\\n1 -1\\r\\n-1 -4\\r\\n', 'output': ['NO']}, {'input': '2 -1\\r\\n-2 -4\\r\\n1 -1\\r\\n', 'output': ['NO']}, {'input': '0 4\\r\\n-1 -3\\r\\n4 1\\r\\n', 'output': ['NO']}, {'input': '-4 1\\r\\n-4 2\\r\\n0 -2\\r\\n', 'output': ['NO']}, {'input': '-2 -2\\r\\n-2 3\\r\\n3 -1\\r\\n', 'output': ['NO']}, {'input': '-3 0\\r\\n2 1\\r\\n-2 0\\r\\n', 'output': ['YES']}, {'input': '-1 -2\\r\\n3 -2\\r\\n-3 -1\\r\\n', 'output': ['NO']}, {'input': '3 1\\r\\n-2 3\\r\\n-2 -2\\r\\n', 'output': ['NO']}, {'input': '0 -4\\r\\n-1 -2\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '-4 -4\\r\\n1 0\\r\\n-1 -3\\r\\n', 'output': ['NO']}, {'input': '2 0\\r\\n-2 1\\r\\n2 3\\r\\n', 'output': ['NO']}, {'input': '-2 4\\r\\n0 1\\r\\n-2 1\\r\\n', 'output': ['YES']}, {'input': '4 1\\r\\n2 -1\\r\\n3 0\\r\\n', 'output': ['YES']}, {'input': '2 3\\r\\n3 -3\\r\\n3 -2\\r\\n', 'output': ['NO']}, {'input': '2 4\\r\\n-4 1\\r\\n3 3\\r\\n', 'output': ['NO']}, {'input': '-4 -3\\r\\n-3 -4\\r\\n1 4\\r\\n', 'output': ['NO']}, {'input': '3 2\\r\\n1 0\\r\\n-4 -1\\r\\n', 'output': ['NO']}, {'input': '0 -4\\r\\n-3 -2\\r\\n3 -1\\r\\n', 'output': ['NO']}, {'input': '-2 2\\r\\n4 -2\\r\\n-2 -2\\r\\n', 'output': ['NO']}, {'input': '2 2\\r\\n-2 1\\r\\n0 -3\\r\\n', 'output': ['YES']}, {'input': '0 4\\r\\n1 1\\r\\n-4 2\\r\\n', 'output': ['NO']}, {'input': '-4 -4\\r\\n4 1\\r\\n-4 -2\\r\\n', 'output': ['NO']}, {'input': '-4 2\\r\\n4 -1\\r\\n-2 -1\\r\\n', 'output': ['YES']}, {'input': '-7 9\\r\\n-2 10\\r\\n-6 -4\\r\\n', 'output': ['NO']}, {'input': '4 7\\r\\n2 9\\r\\n-7 -6\\r\\n', 'output': ['NO']}, {'input': '-6 9\\r\\n6 6\\r\\n9 6\\r\\n', 'output': ['NO']}, {'input': '-9 4\\r\\n8 1\\r\\n-8 8\\r\\n', 'output': ['NO']}, {'input': '-4 3\\r\\n9 -2\\r\\n-3 -3\\r\\n', 'output': ['YES']}, {'input': '-1 -7\\r\\n3 -2\\r\\n-4 -3\\r\\n', 'output': ['NO']}, {'input': '-9 4\\r\\n-2 -8\\r\\n9 4\\r\\n', 'output': ['NO']}, {'input': '8 2\\r\\n-10 1\\r\\n10 -2\\r\\n', 'output': ['NO']}, {'input': '-7 9\\r\\n5 5\\r\\n-2 6\\r\\n', 'output': ['NO']}, {'input': '-8 1\\r\\n-10 -8\\r\\n1 -4\\r\\n', 'output': ['YES']}, {'input': '-65 -52\\r\\n31 -22\\r\\n0 -77\\r\\n', 'output': ['NO']}, {'input': '74 -55\\r\\n0 50\\r\\n-68 26\\r\\n', 'output': ['NO']}, {'input': '-84 28\\r\\n33 -15\\r\\n-19 93\\r\\n', 'output': ['NO']}, {'input': '69 -30\\r\\n-66 -100\\r\\n86 -38\\r\\n', 'output': ['NO']}, {'input': '-43 41\\r\\n-99 92\\r\\n-20 51\\r\\n', 'output': ['NO']}, {'input': '-17 -33\\r\\n56 -75\\r\\n-93 65\\r\\n', 'output': ['NO']}, {'input': '-95 -32\\r\\n-90 -43\\r\\n-40 16\\r\\n', 'output': ['NO']}, {'input': '-48 -92\\r\\n59 -39\\r\\n-45 14\\r\\n', 'output': ['NO']}, {'input': '95 -13\\r\\n22 -36\\r\\n-25 -60\\r\\n', 'output': ['NO']}, {'input': '81 -91\\r\\n88 91\\r\\n-90 -77\\r\\n', 'output': ['NO']}, {'input': '281 -914\\r\\n-217 113\\r\\n479 329\\r\\n', 'output': ['NO']}, {'input': '620 514\\r\\n-276 966\\r\\n578 106\\r\\n', 'output': ['NO']}, {'input': '-253 -283\\r\\n-400 834\\r\\n718 -701\\r\\n', 'output': ['NO']}, {'input': '478 884\\r\\n418 -713\\r\\n-704 -961\\r\\n', 'output': ['NO']}, {'input': '-380 -712\\r\\n-263 -104\\r\\n187 -329\\r\\n', 'output': ['NO']}, {'input': '-2919 -7389\\r\\n-4955 -1807\\r\\n2103 9400\\r\\n', 'output': ['NO']}, {'input': '6040 9662\\r\\n1903 7813\\r\\n5296 8638\\r\\n', 'output': ['NO']}, {'input': '-6008 -6748\\r\\n-7106 -5319\\r\\n-1940 8048\\r\\n', 'output': ['NO']}, {'input': '-2171 -9855\\r\\n4255 -3857\\r\\n6446 9559\\r\\n', 'output': ['NO']}, {'input': '-8916 9282\\r\\n2666 2344\\r\\n9109 -2730\\r\\n', 'output': ['NO']}, {'input': '-52856 -58459\\r\\n-41878 81991\\r\\n-22821 59850\\r\\n', 'output': ['NO']}, {'input': '10327 -86117\\r\\n-51156 -26888\\r\\n-41007 27453\\r\\n', 'output': ['NO']}, {'input': '-46921 46529\\r\\n87797 -73235\\r\\n18213 -86569\\r\\n', 'output': ['NO']}, {'input': '-66381 86177\\r\\n24332 -47590\\r\\n-57592 80499\\r\\n', 'output': ['NO']}, {'input': '-69415 74546\\r\\n37868 -89407\\r\\n19505 -59846\\r\\n', 'output': ['NO']}, {'input': '-817674 316187\\r\\n-934134 660884\\r\\n-297136 -482732\\r\\n', 'output': ['NO']}, {'input': '-127066 941778\\r\\n-654926 -838416\\r\\n809821 -229819\\r\\n', 'output': ['NO']}, {'input': '251893 526074\\r\\n593818 288991\\r\\n-120613 211128\\r\\n', 'output': ['NO']}, {'input': '910801 387995\\r\\n-846325 167413\\r\\n-425681 -149086\\r\\n', 'output': ['NO']}, {'input': '769260 131679\\r\\n-399548 -620680\\r\\n-439456 -164378\\r\\n', 'output': ['NO']}, {'input': '4931249 7448503\\r\\n8740191 1123509\\r\\n4410817 -3494433\\r\\n', 'output': ['NO']}, {'input': '6752575 4525855\\r\\n-2269760 5249721\\r\\n7718280 -5550799\\r\\n', 'output': ['NO']}, {'input': '9121753 -1624238\\r\\n1358642 -7305098\\r\\n9182854 -2204498\\r\\n', 'output': ['NO']}, {'input': '-8540887 -7511495\\r\\n-2659834 -6893955\\r\\n8115011 -3482324\\r\\n', 'output': ['NO']}, {'input': '-4664203 -2707147\\r\\n7039468 5543778\\r\\n5854600 -7808563\\r\\n', 'output': ['NO']}, {'input': '-33622572 -65473509\\r\\n-54144104 -59861983\\r\\n89814248 47623606\\r\\n', 'output': ['NO']}, {'input': '-75629161 -68114618\\r\\n23285096 90997125\\r\\n84795646 72358903\\r\\n', 'output': ['NO']}, {'input': '-79956125 -88524398\\r\\n10949698 32312326\\r\\n-76024701 -77225990\\r\\n', 'output': ['NO']}, {'input': '26164297 21666711\\r\\n-20848219 -49928045\\r\\n-36819763 26811563\\r\\n', 'output': ['NO']}, {'input': '98219518 -66590186\\r\\n14970849 -24409139\\r\\n82951915 43915349\\r\\n', 'output': ['NO']}, {'input': '67195377 58333196\\r\\n-60739152 -69557068\\r\\n-82003989 74825425\\r\\n', 'output': ['NO']}, {'input': '92141071 -48275413\\r\\n-47968469 -13277723\\r\\n-15839680 51548907\\r\\n', 'output': ['NO']}, {'input': '82237071 -62729681\\r\\n45778244 -73153917\\r\\n25235041 83636828\\r\\n', 'output': ['NO']}, {'input': '82539131 17433579\\r\\n-56091046 68716401\\r\\n-73706000 41779060\\r\\n', 'output': ['NO']}, {'input': '-21570525 17439241\\r\\n-47857043 39456884\\r\\n-36121539 69473879\\r\\n', 'output': ['NO']}, {'input': '-38 -99\\r\\n76 43\\r\\n53 -84\\r\\n', 'output': ['NO']}, {'input': '-52 0\\r\\n-60 -50\\r\\n-47 91\\r\\n', 'output': ['NO']}, {'input': '-53 30\\r\\n-14 -19\\r\\n-61 11\\r\\n', 'output': ['NO']}, {'input': '60 55\\r\\n-88 -38\\r\\n0 59\\r\\n', 'output': ['NO']}, {'input': '89 55\\r\\n-13 27\\r\\n-13 -81\\r\\n', 'output': ['NO']}, {'input': '76 73\\r\\n82 -92\\r\\n-95 95\\r\\n', 'output': ['NO']}, {'input': '-81 57\\r\\n-96 0\\r\\n-73 -58\\r\\n', 'output': ['NO']}, {'input': '0 45\\r\\n42 -47\\r\\n-51 -82\\r\\n', 'output': ['NO']}, {'input': '16 39\\r\\n95 18\\r\\n39 -64\\r\\n', 'output': ['NO']}, {'input': '-23 36\\r\\n-72 0\\r\\n44 -60\\r\\n', 'output': ['NO']}, {'input': '57 43\\r\\n58 -54\\r\\n-43 0\\r\\n', 'output': ['NO']}, {'input': '51 77\\r\\n-9 81\\r\\n0 79\\r\\n', 'output': ['NO']}, {'input': '0 14\\r\\n88 0\\r\\n88 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n48 0\\r\\n-62 68\\r\\n', 'output': ['NO']}, {'input': '-35 -90\\r\\n0 -42\\r\\n-8 -60\\r\\n', 'output': ['NO']}, {'input': '59 0\\r\\n84 -28\\r\\n0 58\\r\\n', 'output': ['NO']}, {'input': '10 -15\\r\\n23 0\\r\\n88 -36\\r\\n', 'output': ['NO']}, {'input': '-66 -34\\r\\n59 -38\\r\\n13 0\\r\\n', 'output': ['NO']}, {'input': '0 -14\\r\\n80 94\\r\\n-14 15\\r\\n', 'output': ['NO']}, {'input': '-28 0\\r\\n0 43\\r\\n0 -51\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n-30010581 33889813\\r\\n12862004 15575384\\r\\n', 'output': ['NO']}, {'input': '94993760 -37786635\\r\\n-75326491 -21534927\\r\\n77949983 95218547\\r\\n', 'output': ['NO']}, {'input': '72913933 0\\r\\n54300106 60510850\\r\\n32295823 -60694017\\r\\n', 'output': ['NO']}, {'input': '0 -77922994\\r\\n47873382 0\\r\\n-48532375 -33729248\\r\\n', 'output': ['NO']}, {'input': '-50600641 25410541\\r\\n0 80575245\\r\\n0 62979800\\r\\n', 'output': ['NO']}, {'input': '-34280877 -82070958\\r\\n66030914 -52671703\\r\\n0 -90987154\\r\\n', 'output': ['NO']}, {'input': '27523869 0\\r\\n52900492 0\\r\\n33031150 -65488267\\r\\n', 'output': ['NO']}, {'input': '69226391 60708120\\r\\n43106396 25795293\\r\\n80380957 88577789\\r\\n', 'output': ['NO']}, {'input': '0 40072438\\r\\n-61016486 88561432\\r\\n28431496 60485628\\r\\n', 'output': ['NO']}, {'input': '0 24078959\\r\\n75842668 -56466325\\r\\n-64025705 12045125\\r\\n', 'output': ['NO']}, {'input': '24334185 -27189752\\r\\n0 -47230185\\r\\n0 -37588021\\r\\n', 'output': ['NO']}, {'input': '45479363 56862079\\r\\n28029163 0\\r\\n-38736303 59867108\\r\\n', 'output': ['NO']}, {'input': '-66738889 -24309585\\r\\n-39387414 -42921545\\r\\n-10462276 0\\r\\n', 'output': ['NO']}, {'input': '-95534030 -14392539\\r\\n-89751090 79655267\\r\\n-77491839 40745315\\r\\n', 'output': ['NO']}, {'input': '-48666683 22046293\\r\\n77649947 84819904\\r\\n-32803712 -99366118\\r\\n', 'output': ['NO']}, {'input': '10150745 93724033\\r\\n-59625481 -18232739\\r\\n34384941 -28147896\\r\\n', 'output': ['NO']}, {'input': '-12344578 -26470996\\r\\n0 -25186906\\r\\n-11572514 -38120367\\r\\n', 'output': ['NO']}, {'input': '-59220368 0\\r\\n0 -75968891\\r\\n0 74081590\\r\\n', 'output': ['NO']}, {'input': '-78038627 -49761049\\r\\n0 22143739\\r\\n0 -60448485\\r\\n', 'output': ['NO']}, {'input': '80358706 0\\r\\n23898082 -87631921\\r\\n-48798084 88174414\\r\\n', 'output': ['NO']}, {'input': '10 13\\r\\n13 10\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n10 13\\r\\n10 13\\r\\n', 'output': ['YES']}, {'input': '10 13\\r\\n0 0\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '10 13\\r\\n-10 -13\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '10 13\\r\\n-13 10\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n1 0\\r\\n100000000 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n1 1\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['YES']}, {'input': '100000000 0\\r\\n1 0\\r\\n100000000 0\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n1 1\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n100000000 99999999\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['YES']}, {'input': '100000000 100000000\\r\\n100000000 100000000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '5491 -1888\\r\\n58611137 -17279700\\r\\n5629 -7705\\r\\n', 'output': ['YES']}, {'input': '6791 1587\\r\\n23543337 24784850\\r\\n3970 2327\\r\\n', 'output': ['YES']}, {'input': '1214 8046\\r\\n84729946 38445218\\r\\n3488 -5838\\r\\n', 'output': ['YES']}, {'input': '-8725 -6466\\r\\n77278594 -3622341\\r\\n9344 -1256\\r\\n', 'output': ['YES']}, {'input': '-5922 -2466\\r\\n-46708374 -71085154\\r\\n-9882 298\\r\\n', 'output': ['YES']}, {'input': '4560 -6056\\r\\n97943322 -20616116\\r\\n-1107 -5440\\r\\n', 'output': ['YES']}, {'input': '-5645 2118\\r\\n-23770935 62615171\\r\\n-2080 9473\\r\\n', 'output': ['YES']}, {'input': '2630 8069\\r\\n-75372166 10085837\\r\\n-781 5563\\r\\n', 'output': ['YES']}, {'input': '-2588 9699\\r\\n50743921 -45114432\\r\\n-5288 -7358\\r\\n', 'output': ['YES']}, {'input': '6889 9158\\r\\n-843345 89332306\\r\\n7495 518\\r\\n', 'output': ['YES']}, {'input': '-2037 -1006\\r\\n-13301683 -83185771\\r\\n-3487 -4590\\r\\n', 'output': ['YES']}, {'input': '-925 -1240\\r\\n25904140 -92743662\\r\\n-8028 -2933\\r\\n', 'output': ['YES']}, {'input': '-573 5611\\r\\n-88934372 16274202\\r\\n-689 9294\\r\\n', 'output': ['YES']}, {'input': '-2859 7599\\r\\n37114911 -75750711\\r\\n-9150 -7398\\r\\n', 'output': ['YES']}, {'input': '-9234 9520\\r\\n58867682 17319702\\r\\n2273 -5831\\r\\n', 'output': ['YES']}, {'input': '3411 2674\\r\\n-21536783 -33506984\\r\\n-8254 -3778\\r\\n', 'output': ['YES']}, {'input': '1778735 -1803902\\r\\n-92875004 -2966747\\r\\n-4125460 1149178\\r\\n', 'output': ['YES']}, {'input': '-2413874 4166580\\r\\n83681508 25911924\\r\\n8615149 -6396049\\r\\n', 'output': ['YES']}, {'input': '5987456 -1627274\\r\\n-45083510 25782192\\r\\n-758074 971006\\r\\n', 'output': ['YES']}, {'input': '-881780 8157586\\r\\n-83355045 -86221641\\r\\n-5080144 1016625\\r\\n', 'output': ['YES']}, {'input': '836292 -1555463\\r\\n44451624 -63102407\\r\\n-7051275 -9619647\\r\\n', 'output': ['YES']}, {'input': '-5493123 4007625\\r\\n-49191721 -31674255\\r\\n-9754636 6418706\\r\\n', 'output': ['YES']}, {'input': '-2797960 2819364\\r\\n59202462 71529306\\r\\n7799041 -4640234\\r\\n', 'output': ['YES']}, {'input': '-7355750 -5710643\\r\\n-48075697 25746997\\r\\n-3569463 3650928\\r\\n', 'output': ['YES']}, {'input': '2517677 8638224\\r\\n-75757217 -17117074\\r\\n-2847910 1342478\\r\\n', 'output': ['YES']}, {'input': '-1782346 -522853\\r\\n56023653 37655619\\r\\n7455445 -936314\\r\\n', 'output': ['YES']}, {'input': '3922510 4979687\\r\\n-83613487 73792320\\r\\n-2355010 7196240\\r\\n', 'output': ['YES']}, {'input': '-2911250 -3788914\\r\\n9975544 20015444\\r\\n7278331 4185016\\r\\n', 'output': ['YES']}, {'input': '9495309 -4445256\\r\\n66581093 -48831427\\r\\n5864682 -8016505\\r\\n', 'output': ['YES']}, {'input': '-6389242 -2092524\\r\\n-18806778 85154882\\r\\n8457769 5141401\\r\\n', 'output': ['YES']}, {'input': '-6223066 -5334825\\r\\n36109780 -5416931\\r\\n3246899 -4890875\\r\\n', 'output': ['YES']}, {'input': '-1334950 3309875\\r\\n-20438919 -45390492\\r\\n-722222 280804\\r\\n', 'output': ['YES']}, {'input': '122542 -4826228\\r\\n-20855162 89301242\\r\\n8917870 2568139\\r\\n', 'output': ['YES']}, {'input': '-4662151 6642823\\r\\n-620983 29911124\\r\\n6914655 -1204368\\r\\n', 'output': ['YES']}, {'input': '806224 -7075643\\r\\n94593948 -33094579\\r\\n-540130 -5612242\\r\\n', 'output': ['YES']}, {'input': '2370720 9260730\\r\\n-31929898 43611588\\r\\n2817748 6788032\\r\\n', 'output': ['YES']}, {'input': '5 -12\\r\\n-47316040 -62956553\\r\\n-7 0\\r\\n', 'output': ['YES']}, {'input': '-7 0\\r\\n-51538008 -92285620\\r\\n-3 0\\r\\n', 'output': ['YES']}, {'input': '-12 9\\r\\n21015609 49124671\\r\\n3 2\\r\\n', 'output': ['YES']}, {'input': '-11 -10\\r\\n-1042937 89231497\\r\\n0 9\\r\\n', 'output': ['YES']}, {'input': '-3 11\\r\\n6154942 80496611\\r\\n5 0\\r\\n', 'output': ['YES']}, {'input': '-13 12\\r\\n826557 -90209918\\r\\n0 -5\\r\\n', 'output': ['YES']}, {'input': '-3 -9\\r\\n-72817057 -54284335\\r\\n-3 -1\\r\\n', 'output': ['YES']}, {'input': '-8 -8\\r\\n66949614 -53875176\\r\\n-2 -4\\r\\n', 'output': ['YES']}, {'input': '6 2\\r\\n-97096230 19770854\\r\\n-5 4\\r\\n', 'output': ['YES']}, {'input': '10 7\\r\\n91660376 -58581376\\r\\n0 -7\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999997\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999997\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '-100000000 -100000000\\r\\n100000000 100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '32 34\\r\\n-50070000 21003000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n100000000 0\\r\\n1 2\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n1 2\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n4 2\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '100000000 100000000\\r\\n0 0\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n10000000 10000000\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '1 2\\r\\n-2 1\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n1 -1\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n-63411382 -42720436\\r\\n123456 543253\\r\\n', 'output': ['YES']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nstruct vec {\n  long long x, y;\n  vec(long long x = 0, long long y = 0) {\n    this->x = x;\n    this->y = y;\n  }\n  vec operator-(const vec &b) const { return vec(x - b.x, y - b.y); }\n  vec operator+(const vec &b) const { return vec(x + b.x, y + b.y); }\n  vec operator-() const { return vec(-x, -y); }\n  vec operator*(long long n) const { return vec(x * n, y * n); }\n  long long operator*(const vec &b) const { return x * b.y - y * b.x; }\n};\nint main() {\n  vec a, b, c;\n  cin >> a.x >> a.y;\n  cin >> b.x >> b.y;\n  cin >> c.x >> c.y;\n  for (int i = 0; i < 4; i++) {\n    vec d = (b - a);\n    vec e = (c * ((i & 1)? -1 : 1));\n    if (d * e == 0) {\n      cout << \"YES\" << endl;\n      return 0;\n    }\n    a = a + e;\n    if (i == 1) a = -a;\n    if (i == 2) swap(a.x, a.y);\n    if (i == 3) swap(a.x, a.y);\n  }\n  cout << \"NO\" << endl;\n  return 0;\n}\n"}
{"src_uid": "cc8a8af1ba2b19bf081e379139542883", "id": 44, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2000, "testcases": "[{'input': '0 0\\r\\n1 1\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n2 2\\r\\n', 'output': ['NO']}, {'input': '2 3\\r\\n2 3\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '-4 -2\\r\\n0 0\\r\\n-2 -1\\r\\n', 'output': ['YES']}, {'input': '-100000000 -100000000\\r\\n100000000 100000000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '3 4\\r\\n-4 3\\r\\n1 7\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n2 2\\r\\n-3 -3\\r\\n', 'output': ['YES']}, {'input': '0 1\\r\\n2 3\\r\\n7 -11\\r\\n', 'output': ['NO']}, {'input': '-2 2\\r\\n3 3\\r\\n5 0\\r\\n', 'output': ['YES']}, {'input': '1 3\\r\\n3 1\\r\\n3 3\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n0 0\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n12 12\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 100000000\\r\\n0 -100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 4444\\r\\n-4444 -100000000\\r\\n50000000 50000000\\r\\n', 'output': ['YES']}, {'input': '45 6\\r\\n65 5\\r\\n0 5\\r\\n', 'output': ['NO']}, {'input': '1 0\\r\\n0 1\\r\\n2 1\\r\\n', 'output': ['YES']}, {'input': '7 11\\r\\n13 13\\r\\n0 4\\r\\n', 'output': ['YES']}, {'input': '4 2\\r\\n0 -1\\r\\n2 -2\\r\\n', 'output': ['NO']}, {'input': '4 -3\\r\\n-3 1\\r\\n0 -2\\r\\n', 'output': ['NO']}, {'input': '-2 -1\\r\\n0 1\\r\\n-2 -3\\r\\n', 'output': ['NO']}, {'input': '-1 1\\r\\n2 1\\r\\n-2 -1\\r\\n', 'output': ['NO']}, {'input': '4 0\\r\\n4 -3\\r\\n2 4\\r\\n', 'output': ['NO']}, {'input': '-3 -2\\r\\n-3 3\\r\\n4 4\\r\\n', 'output': ['NO']}, {'input': '2 1\\r\\n1 -4\\r\\n-4 -2\\r\\n', 'output': ['NO']}, {'input': '3 1\\r\\n1 -1\\r\\n-1 -4\\r\\n', 'output': ['NO']}, {'input': '2 -1\\r\\n-2 -4\\r\\n1 -1\\r\\n', 'output': ['NO']}, {'input': '0 4\\r\\n-1 -3\\r\\n4 1\\r\\n', 'output': ['NO']}, {'input': '-4 1\\r\\n-4 2\\r\\n0 -2\\r\\n', 'output': ['NO']}, {'input': '-2 -2\\r\\n-2 3\\r\\n3 -1\\r\\n', 'output': ['NO']}, {'input': '-3 0\\r\\n2 1\\r\\n-2 0\\r\\n', 'output': ['YES']}, {'input': '-1 -2\\r\\n3 -2\\r\\n-3 -1\\r\\n', 'output': ['NO']}, {'input': '3 1\\r\\n-2 3\\r\\n-2 -2\\r\\n', 'output': ['NO']}, {'input': '0 -4\\r\\n-1 -2\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '-4 -4\\r\\n1 0\\r\\n-1 -3\\r\\n', 'output': ['NO']}, {'input': '2 0\\r\\n-2 1\\r\\n2 3\\r\\n', 'output': ['NO']}, {'input': '-2 4\\r\\n0 1\\r\\n-2 1\\r\\n', 'output': ['YES']}, {'input': '4 1\\r\\n2 -1\\r\\n3 0\\r\\n', 'output': ['YES']}, {'input': '2 3\\r\\n3 -3\\r\\n3 -2\\r\\n', 'output': ['NO']}, {'input': '2 4\\r\\n-4 1\\r\\n3 3\\r\\n', 'output': ['NO']}, {'input': '-4 -3\\r\\n-3 -4\\r\\n1 4\\r\\n', 'output': ['NO']}, {'input': '3 2\\r\\n1 0\\r\\n-4 -1\\r\\n', 'output': ['NO']}, {'input': '0 -4\\r\\n-3 -2\\r\\n3 -1\\r\\n', 'output': ['NO']}, {'input': '-2 2\\r\\n4 -2\\r\\n-2 -2\\r\\n', 'output': ['NO']}, {'input': '2 2\\r\\n-2 1\\r\\n0 -3\\r\\n', 'output': ['YES']}, {'input': '0 4\\r\\n1 1\\r\\n-4 2\\r\\n', 'output': ['NO']}, {'input': '-4 -4\\r\\n4 1\\r\\n-4 -2\\r\\n', 'output': ['NO']}, {'input': '-4 2\\r\\n4 -1\\r\\n-2 -1\\r\\n', 'output': ['YES']}, {'input': '-7 9\\r\\n-2 10\\r\\n-6 -4\\r\\n', 'output': ['NO']}, {'input': '4 7\\r\\n2 9\\r\\n-7 -6\\r\\n', 'output': ['NO']}, {'input': '-6 9\\r\\n6 6\\r\\n9 6\\r\\n', 'output': ['NO']}, {'input': '-9 4\\r\\n8 1\\r\\n-8 8\\r\\n', 'output': ['NO']}, {'input': '-4 3\\r\\n9 -2\\r\\n-3 -3\\r\\n', 'output': ['YES']}, {'input': '-1 -7\\r\\n3 -2\\r\\n-4 -3\\r\\n', 'output': ['NO']}, {'input': '-9 4\\r\\n-2 -8\\r\\n9 4\\r\\n', 'output': ['NO']}, {'input': '8 2\\r\\n-10 1\\r\\n10 -2\\r\\n', 'output': ['NO']}, {'input': '-7 9\\r\\n5 5\\r\\n-2 6\\r\\n', 'output': ['NO']}, {'input': '-8 1\\r\\n-10 -8\\r\\n1 -4\\r\\n', 'output': ['YES']}, {'input': '-65 -52\\r\\n31 -22\\r\\n0 -77\\r\\n', 'output': ['NO']}, {'input': '74 -55\\r\\n0 50\\r\\n-68 26\\r\\n', 'output': ['NO']}, {'input': '-84 28\\r\\n33 -15\\r\\n-19 93\\r\\n', 'output': ['NO']}, {'input': '69 -30\\r\\n-66 -100\\r\\n86 -38\\r\\n', 'output': ['NO']}, {'input': '-43 41\\r\\n-99 92\\r\\n-20 51\\r\\n', 'output': ['NO']}, {'input': '-17 -33\\r\\n56 -75\\r\\n-93 65\\r\\n', 'output': ['NO']}, {'input': '-95 -32\\r\\n-90 -43\\r\\n-40 16\\r\\n', 'output': ['NO']}, {'input': '-48 -92\\r\\n59 -39\\r\\n-45 14\\r\\n', 'output': ['NO']}, {'input': '95 -13\\r\\n22 -36\\r\\n-25 -60\\r\\n', 'output': ['NO']}, {'input': '81 -91\\r\\n88 91\\r\\n-90 -77\\r\\n', 'output': ['NO']}, {'input': '281 -914\\r\\n-217 113\\r\\n479 329\\r\\n', 'output': ['NO']}, {'input': '620 514\\r\\n-276 966\\r\\n578 106\\r\\n', 'output': ['NO']}, {'input': '-253 -283\\r\\n-400 834\\r\\n718 -701\\r\\n', 'output': ['NO']}, {'input': '478 884\\r\\n418 -713\\r\\n-704 -961\\r\\n', 'output': ['NO']}, {'input': '-380 -712\\r\\n-263 -104\\r\\n187 -329\\r\\n', 'output': ['NO']}, {'input': '-2919 -7389\\r\\n-4955 -1807\\r\\n2103 9400\\r\\n', 'output': ['NO']}, {'input': '6040 9662\\r\\n1903 7813\\r\\n5296 8638\\r\\n', 'output': ['NO']}, {'input': '-6008 -6748\\r\\n-7106 -5319\\r\\n-1940 8048\\r\\n', 'output': ['NO']}, {'input': '-2171 -9855\\r\\n4255 -3857\\r\\n6446 9559\\r\\n', 'output': ['NO']}, {'input': '-8916 9282\\r\\n2666 2344\\r\\n9109 -2730\\r\\n', 'output': ['NO']}, {'input': '-52856 -58459\\r\\n-41878 81991\\r\\n-22821 59850\\r\\n', 'output': ['NO']}, {'input': '10327 -86117\\r\\n-51156 -26888\\r\\n-41007 27453\\r\\n', 'output': ['NO']}, {'input': '-46921 46529\\r\\n87797 -73235\\r\\n18213 -86569\\r\\n', 'output': ['NO']}, {'input': '-66381 86177\\r\\n24332 -47590\\r\\n-57592 80499\\r\\n', 'output': ['NO']}, {'input': '-69415 74546\\r\\n37868 -89407\\r\\n19505 -59846\\r\\n', 'output': ['NO']}, {'input': '-817674 316187\\r\\n-934134 660884\\r\\n-297136 -482732\\r\\n', 'output': ['NO']}, {'input': '-127066 941778\\r\\n-654926 -838416\\r\\n809821 -229819\\r\\n', 'output': ['NO']}, {'input': '251893 526074\\r\\n593818 288991\\r\\n-120613 211128\\r\\n', 'output': ['NO']}, {'input': '910801 387995\\r\\n-846325 167413\\r\\n-425681 -149086\\r\\n', 'output': ['NO']}, {'input': '769260 131679\\r\\n-399548 -620680\\r\\n-439456 -164378\\r\\n', 'output': ['NO']}, {'input': '4931249 7448503\\r\\n8740191 1123509\\r\\n4410817 -3494433\\r\\n', 'output': ['NO']}, {'input': '6752575 4525855\\r\\n-2269760 5249721\\r\\n7718280 -5550799\\r\\n', 'output': ['NO']}, {'input': '9121753 -1624238\\r\\n1358642 -7305098\\r\\n9182854 -2204498\\r\\n', 'output': ['NO']}, {'input': '-8540887 -7511495\\r\\n-2659834 -6893955\\r\\n8115011 -3482324\\r\\n', 'output': ['NO']}, {'input': '-4664203 -2707147\\r\\n7039468 5543778\\r\\n5854600 -7808563\\r\\n', 'output': ['NO']}, {'input': '-33622572 -65473509\\r\\n-54144104 -59861983\\r\\n89814248 47623606\\r\\n', 'output': ['NO']}, {'input': '-75629161 -68114618\\r\\n23285096 90997125\\r\\n84795646 72358903\\r\\n', 'output': ['NO']}, {'input': '-79956125 -88524398\\r\\n10949698 32312326\\r\\n-76024701 -77225990\\r\\n', 'output': ['NO']}, {'input': '26164297 21666711\\r\\n-20848219 -49928045\\r\\n-36819763 26811563\\r\\n', 'output': ['NO']}, {'input': '98219518 -66590186\\r\\n14970849 -24409139\\r\\n82951915 43915349\\r\\n', 'output': ['NO']}, {'input': '67195377 58333196\\r\\n-60739152 -69557068\\r\\n-82003989 74825425\\r\\n', 'output': ['NO']}, {'input': '92141071 -48275413\\r\\n-47968469 -13277723\\r\\n-15839680 51548907\\r\\n', 'output': ['NO']}, {'input': '82237071 -62729681\\r\\n45778244 -73153917\\r\\n25235041 83636828\\r\\n', 'output': ['NO']}, {'input': '82539131 17433579\\r\\n-56091046 68716401\\r\\n-73706000 41779060\\r\\n', 'output': ['NO']}, {'input': '-21570525 17439241\\r\\n-47857043 39456884\\r\\n-36121539 69473879\\r\\n', 'output': ['NO']}, {'input': '-38 -99\\r\\n76 43\\r\\n53 -84\\r\\n', 'output': ['NO']}, {'input': '-52 0\\r\\n-60 -50\\r\\n-47 91\\r\\n', 'output': ['NO']}, {'input': '-53 30\\r\\n-14 -19\\r\\n-61 11\\r\\n', 'output': ['NO']}, {'input': '60 55\\r\\n-88 -38\\r\\n0 59\\r\\n', 'output': ['NO']}, {'input': '89 55\\r\\n-13 27\\r\\n-13 -81\\r\\n', 'output': ['NO']}, {'input': '76 73\\r\\n82 -92\\r\\n-95 95\\r\\n', 'output': ['NO']}, {'input': '-81 57\\r\\n-96 0\\r\\n-73 -58\\r\\n', 'output': ['NO']}, {'input': '0 45\\r\\n42 -47\\r\\n-51 -82\\r\\n', 'output': ['NO']}, {'input': '16 39\\r\\n95 18\\r\\n39 -64\\r\\n', 'output': ['NO']}, {'input': '-23 36\\r\\n-72 0\\r\\n44 -60\\r\\n', 'output': ['NO']}, {'input': '57 43\\r\\n58 -54\\r\\n-43 0\\r\\n', 'output': ['NO']}, {'input': '51 77\\r\\n-9 81\\r\\n0 79\\r\\n', 'output': ['NO']}, {'input': '0 14\\r\\n88 0\\r\\n88 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n48 0\\r\\n-62 68\\r\\n', 'output': ['NO']}, {'input': '-35 -90\\r\\n0 -42\\r\\n-8 -60\\r\\n', 'output': ['NO']}, {'input': '59 0\\r\\n84 -28\\r\\n0 58\\r\\n', 'output': ['NO']}, {'input': '10 -15\\r\\n23 0\\r\\n88 -36\\r\\n', 'output': ['NO']}, {'input': '-66 -34\\r\\n59 -38\\r\\n13 0\\r\\n', 'output': ['NO']}, {'input': '0 -14\\r\\n80 94\\r\\n-14 15\\r\\n', 'output': ['NO']}, {'input': '-28 0\\r\\n0 43\\r\\n0 -51\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n-30010581 33889813\\r\\n12862004 15575384\\r\\n', 'output': ['NO']}, {'input': '94993760 -37786635\\r\\n-75326491 -21534927\\r\\n77949983 95218547\\r\\n', 'output': ['NO']}, {'input': '72913933 0\\r\\n54300106 60510850\\r\\n32295823 -60694017\\r\\n', 'output': ['NO']}, {'input': '0 -77922994\\r\\n47873382 0\\r\\n-48532375 -33729248\\r\\n', 'output': ['NO']}, {'input': '-50600641 25410541\\r\\n0 80575245\\r\\n0 62979800\\r\\n', 'output': ['NO']}, {'input': '-34280877 -82070958\\r\\n66030914 -52671703\\r\\n0 -90987154\\r\\n', 'output': ['NO']}, {'input': '27523869 0\\r\\n52900492 0\\r\\n33031150 -65488267\\r\\n', 'output': ['NO']}, {'input': '69226391 60708120\\r\\n43106396 25795293\\r\\n80380957 88577789\\r\\n', 'output': ['NO']}, {'input': '0 40072438\\r\\n-61016486 88561432\\r\\n28431496 60485628\\r\\n', 'output': ['NO']}, {'input': '0 24078959\\r\\n75842668 -56466325\\r\\n-64025705 12045125\\r\\n', 'output': ['NO']}, {'input': '24334185 -27189752\\r\\n0 -47230185\\r\\n0 -37588021\\r\\n', 'output': ['NO']}, {'input': '45479363 56862079\\r\\n28029163 0\\r\\n-38736303 59867108\\r\\n', 'output': ['NO']}, {'input': '-66738889 -24309585\\r\\n-39387414 -42921545\\r\\n-10462276 0\\r\\n', 'output': ['NO']}, {'input': '-95534030 -14392539\\r\\n-89751090 79655267\\r\\n-77491839 40745315\\r\\n', 'output': ['NO']}, {'input': '-48666683 22046293\\r\\n77649947 84819904\\r\\n-32803712 -99366118\\r\\n', 'output': ['NO']}, {'input': '10150745 93724033\\r\\n-59625481 -18232739\\r\\n34384941 -28147896\\r\\n', 'output': ['NO']}, {'input': '-12344578 -26470996\\r\\n0 -25186906\\r\\n-11572514 -38120367\\r\\n', 'output': ['NO']}, {'input': '-59220368 0\\r\\n0 -75968891\\r\\n0 74081590\\r\\n', 'output': ['NO']}, {'input': '-78038627 -49761049\\r\\n0 22143739\\r\\n0 -60448485\\r\\n', 'output': ['NO']}, {'input': '80358706 0\\r\\n23898082 -87631921\\r\\n-48798084 88174414\\r\\n', 'output': ['NO']}, {'input': '10 13\\r\\n13 10\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n10 13\\r\\n10 13\\r\\n', 'output': ['YES']}, {'input': '10 13\\r\\n0 0\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '10 13\\r\\n-10 -13\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '10 13\\r\\n-13 10\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n1 0\\r\\n100000000 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n1 1\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['YES']}, {'input': '100000000 0\\r\\n1 0\\r\\n100000000 0\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n1 1\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n100000000 99999999\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['YES']}, {'input': '100000000 100000000\\r\\n100000000 100000000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '5491 -1888\\r\\n58611137 -17279700\\r\\n5629 -7705\\r\\n', 'output': ['YES']}, {'input': '6791 1587\\r\\n23543337 24784850\\r\\n3970 2327\\r\\n', 'output': ['YES']}, {'input': '1214 8046\\r\\n84729946 38445218\\r\\n3488 -5838\\r\\n', 'output': ['YES']}, {'input': '-8725 -6466\\r\\n77278594 -3622341\\r\\n9344 -1256\\r\\n', 'output': ['YES']}, {'input': '-5922 -2466\\r\\n-46708374 -71085154\\r\\n-9882 298\\r\\n', 'output': ['YES']}, {'input': '4560 -6056\\r\\n97943322 -20616116\\r\\n-1107 -5440\\r\\n', 'output': ['YES']}, {'input': '-5645 2118\\r\\n-23770935 62615171\\r\\n-2080 9473\\r\\n', 'output': ['YES']}, {'input': '2630 8069\\r\\n-75372166 10085837\\r\\n-781 5563\\r\\n', 'output': ['YES']}, {'input': '-2588 9699\\r\\n50743921 -45114432\\r\\n-5288 -7358\\r\\n', 'output': ['YES']}, {'input': '6889 9158\\r\\n-843345 89332306\\r\\n7495 518\\r\\n', 'output': ['YES']}, {'input': '-2037 -1006\\r\\n-13301683 -83185771\\r\\n-3487 -4590\\r\\n', 'output': ['YES']}, {'input': '-925 -1240\\r\\n25904140 -92743662\\r\\n-8028 -2933\\r\\n', 'output': ['YES']}, {'input': '-573 5611\\r\\n-88934372 16274202\\r\\n-689 9294\\r\\n', 'output': ['YES']}, {'input': '-2859 7599\\r\\n37114911 -75750711\\r\\n-9150 -7398\\r\\n', 'output': ['YES']}, {'input': '-9234 9520\\r\\n58867682 17319702\\r\\n2273 -5831\\r\\n', 'output': ['YES']}, {'input': '3411 2674\\r\\n-21536783 -33506984\\r\\n-8254 -3778\\r\\n', 'output': ['YES']}, {'input': '1778735 -1803902\\r\\n-92875004 -2966747\\r\\n-4125460 1149178\\r\\n', 'output': ['YES']}, {'input': '-2413874 4166580\\r\\n83681508 25911924\\r\\n8615149 -6396049\\r\\n', 'output': ['YES']}, {'input': '5987456 -1627274\\r\\n-45083510 25782192\\r\\n-758074 971006\\r\\n', 'output': ['YES']}, {'input': '-881780 8157586\\r\\n-83355045 -86221641\\r\\n-5080144 1016625\\r\\n', 'output': ['YES']}, {'input': '836292 -1555463\\r\\n44451624 -63102407\\r\\n-7051275 -9619647\\r\\n', 'output': ['YES']}, {'input': '-5493123 4007625\\r\\n-49191721 -31674255\\r\\n-9754636 6418706\\r\\n', 'output': ['YES']}, {'input': '-2797960 2819364\\r\\n59202462 71529306\\r\\n7799041 -4640234\\r\\n', 'output': ['YES']}, {'input': '-7355750 -5710643\\r\\n-48075697 25746997\\r\\n-3569463 3650928\\r\\n', 'output': ['YES']}, {'input': '2517677 8638224\\r\\n-75757217 -17117074\\r\\n-2847910 1342478\\r\\n', 'output': ['YES']}, {'input': '-1782346 -522853\\r\\n56023653 37655619\\r\\n7455445 -936314\\r\\n', 'output': ['YES']}, {'input': '3922510 4979687\\r\\n-83613487 73792320\\r\\n-2355010 7196240\\r\\n', 'output': ['YES']}, {'input': '-2911250 -3788914\\r\\n9975544 20015444\\r\\n7278331 4185016\\r\\n', 'output': ['YES']}, {'input': '9495309 -4445256\\r\\n66581093 -48831427\\r\\n5864682 -8016505\\r\\n', 'output': ['YES']}, {'input': '-6389242 -2092524\\r\\n-18806778 85154882\\r\\n8457769 5141401\\r\\n', 'output': ['YES']}, {'input': '-6223066 -5334825\\r\\n36109780 -5416931\\r\\n3246899 -4890875\\r\\n', 'output': ['YES']}, {'input': '-1334950 3309875\\r\\n-20438919 -45390492\\r\\n-722222 280804\\r\\n', 'output': ['YES']}, {'input': '122542 -4826228\\r\\n-20855162 89301242\\r\\n8917870 2568139\\r\\n', 'output': ['YES']}, {'input': '-4662151 6642823\\r\\n-620983 29911124\\r\\n6914655 -1204368\\r\\n', 'output': ['YES']}, {'input': '806224 -7075643\\r\\n94593948 -33094579\\r\\n-540130 -5612242\\r\\n', 'output': ['YES']}, {'input': '2370720 9260730\\r\\n-31929898 43611588\\r\\n2817748 6788032\\r\\n', 'output': ['YES']}, {'input': '5 -12\\r\\n-47316040 -62956553\\r\\n-7 0\\r\\n', 'output': ['YES']}, {'input': '-7 0\\r\\n-51538008 -92285620\\r\\n-3 0\\r\\n', 'output': ['YES']}, {'input': '-12 9\\r\\n21015609 49124671\\r\\n3 2\\r\\n', 'output': ['YES']}, {'input': '-11 -10\\r\\n-1042937 89231497\\r\\n0 9\\r\\n', 'output': ['YES']}, {'input': '-3 11\\r\\n6154942 80496611\\r\\n5 0\\r\\n', 'output': ['YES']}, {'input': '-13 12\\r\\n826557 -90209918\\r\\n0 -5\\r\\n', 'output': ['YES']}, {'input': '-3 -9\\r\\n-72817057 -54284335\\r\\n-3 -1\\r\\n', 'output': ['YES']}, {'input': '-8 -8\\r\\n66949614 -53875176\\r\\n-2 -4\\r\\n', 'output': ['YES']}, {'input': '6 2\\r\\n-97096230 19770854\\r\\n-5 4\\r\\n', 'output': ['YES']}, {'input': '10 7\\r\\n91660376 -58581376\\r\\n0 -7\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999997\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999997\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '-100000000 -100000000\\r\\n100000000 100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '32 34\\r\\n-50070000 21003000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n100000000 0\\r\\n1 2\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n1 2\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n4 2\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '100000000 100000000\\r\\n0 0\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n10000000 10000000\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '1 2\\r\\n-2 1\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n1 -1\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n-63411382 -42720436\\r\\n123456 543253\\r\\n', 'output': ['YES']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long x1, y1, x2, y2, x3, y3;\nbool ok() {\n  if ((x2 - x3) * (y1 - y3) == (x3 - x1) * (y2 - y1) &&\n      (x2 - x1) * (x3 - x1) + (y2 - y1) * (y3 - y1) == 0)\n    return true;\n  else\n    return false;\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n  if (ok())\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n}\n"}
{"src_uid": "cc8a8af1ba2b19bf081e379139542883", "id": 44, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2000, "testcases": "[{'input': '0 0\\r\\n1 1\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n2 2\\r\\n', 'output': ['NO']}, {'input': '2 3\\r\\n2 3\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '-4 -2\\r\\n0 0\\r\\n-2 -1\\r\\n', 'output': ['YES']}, {'input': '-100000000 -100000000\\r\\n100000000 100000000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '3 4\\r\\n-4 3\\r\\n1 7\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n2 2\\r\\n-3 -3\\r\\n', 'output': ['YES']}, {'input': '0 1\\r\\n2 3\\r\\n7 -11\\r\\n', 'output': ['NO']}, {'input': '-2 2\\r\\n3 3\\r\\n5 0\\r\\n', 'output': ['YES']}, {'input': '1 3\\r\\n3 1\\r\\n3 3\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n0 0\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n12 12\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 100000000\\r\\n0 -100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 4444\\r\\n-4444 -100000000\\r\\n50000000 50000000\\r\\n', 'output': ['YES']}, {'input': '45 6\\r\\n65 5\\r\\n0 5\\r\\n', 'output': ['NO']}, {'input': '1 0\\r\\n0 1\\r\\n2 1\\r\\n', 'output': ['YES']}, {'input': '7 11\\r\\n13 13\\r\\n0 4\\r\\n', 'output': ['YES']}, {'input': '4 2\\r\\n0 -1\\r\\n2 -2\\r\\n', 'output': ['NO']}, {'input': '4 -3\\r\\n-3 1\\r\\n0 -2\\r\\n', 'output': ['NO']}, {'input': '-2 -1\\r\\n0 1\\r\\n-2 -3\\r\\n', 'output': ['NO']}, {'input': '-1 1\\r\\n2 1\\r\\n-2 -1\\r\\n', 'output': ['NO']}, {'input': '4 0\\r\\n4 -3\\r\\n2 4\\r\\n', 'output': ['NO']}, {'input': '-3 -2\\r\\n-3 3\\r\\n4 4\\r\\n', 'output': ['NO']}, {'input': '2 1\\r\\n1 -4\\r\\n-4 -2\\r\\n', 'output': ['NO']}, {'input': '3 1\\r\\n1 -1\\r\\n-1 -4\\r\\n', 'output': ['NO']}, {'input': '2 -1\\r\\n-2 -4\\r\\n1 -1\\r\\n', 'output': ['NO']}, {'input': '0 4\\r\\n-1 -3\\r\\n4 1\\r\\n', 'output': ['NO']}, {'input': '-4 1\\r\\n-4 2\\r\\n0 -2\\r\\n', 'output': ['NO']}, {'input': '-2 -2\\r\\n-2 3\\r\\n3 -1\\r\\n', 'output': ['NO']}, {'input': '-3 0\\r\\n2 1\\r\\n-2 0\\r\\n', 'output': ['YES']}, {'input': '-1 -2\\r\\n3 -2\\r\\n-3 -1\\r\\n', 'output': ['NO']}, {'input': '3 1\\r\\n-2 3\\r\\n-2 -2\\r\\n', 'output': ['NO']}, {'input': '0 -4\\r\\n-1 -2\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '-4 -4\\r\\n1 0\\r\\n-1 -3\\r\\n', 'output': ['NO']}, {'input': '2 0\\r\\n-2 1\\r\\n2 3\\r\\n', 'output': ['NO']}, {'input': '-2 4\\r\\n0 1\\r\\n-2 1\\r\\n', 'output': ['YES']}, {'input': '4 1\\r\\n2 -1\\r\\n3 0\\r\\n', 'output': ['YES']}, {'input': '2 3\\r\\n3 -3\\r\\n3 -2\\r\\n', 'output': ['NO']}, {'input': '2 4\\r\\n-4 1\\r\\n3 3\\r\\n', 'output': ['NO']}, {'input': '-4 -3\\r\\n-3 -4\\r\\n1 4\\r\\n', 'output': ['NO']}, {'input': '3 2\\r\\n1 0\\r\\n-4 -1\\r\\n', 'output': ['NO']}, {'input': '0 -4\\r\\n-3 -2\\r\\n3 -1\\r\\n', 'output': ['NO']}, {'input': '-2 2\\r\\n4 -2\\r\\n-2 -2\\r\\n', 'output': ['NO']}, {'input': '2 2\\r\\n-2 1\\r\\n0 -3\\r\\n', 'output': ['YES']}, {'input': '0 4\\r\\n1 1\\r\\n-4 2\\r\\n', 'output': ['NO']}, {'input': '-4 -4\\r\\n4 1\\r\\n-4 -2\\r\\n', 'output': ['NO']}, {'input': '-4 2\\r\\n4 -1\\r\\n-2 -1\\r\\n', 'output': ['YES']}, {'input': '-7 9\\r\\n-2 10\\r\\n-6 -4\\r\\n', 'output': ['NO']}, {'input': '4 7\\r\\n2 9\\r\\n-7 -6\\r\\n', 'output': ['NO']}, {'input': '-6 9\\r\\n6 6\\r\\n9 6\\r\\n', 'output': ['NO']}, {'input': '-9 4\\r\\n8 1\\r\\n-8 8\\r\\n', 'output': ['NO']}, {'input': '-4 3\\r\\n9 -2\\r\\n-3 -3\\r\\n', 'output': ['YES']}, {'input': '-1 -7\\r\\n3 -2\\r\\n-4 -3\\r\\n', 'output': ['NO']}, {'input': '-9 4\\r\\n-2 -8\\r\\n9 4\\r\\n', 'output': ['NO']}, {'input': '8 2\\r\\n-10 1\\r\\n10 -2\\r\\n', 'output': ['NO']}, {'input': '-7 9\\r\\n5 5\\r\\n-2 6\\r\\n', 'output': ['NO']}, {'input': '-8 1\\r\\n-10 -8\\r\\n1 -4\\r\\n', 'output': ['YES']}, {'input': '-65 -52\\r\\n31 -22\\r\\n0 -77\\r\\n', 'output': ['NO']}, {'input': '74 -55\\r\\n0 50\\r\\n-68 26\\r\\n', 'output': ['NO']}, {'input': '-84 28\\r\\n33 -15\\r\\n-19 93\\r\\n', 'output': ['NO']}, {'input': '69 -30\\r\\n-66 -100\\r\\n86 -38\\r\\n', 'output': ['NO']}, {'input': '-43 41\\r\\n-99 92\\r\\n-20 51\\r\\n', 'output': ['NO']}, {'input': '-17 -33\\r\\n56 -75\\r\\n-93 65\\r\\n', 'output': ['NO']}, {'input': '-95 -32\\r\\n-90 -43\\r\\n-40 16\\r\\n', 'output': ['NO']}, {'input': '-48 -92\\r\\n59 -39\\r\\n-45 14\\r\\n', 'output': ['NO']}, {'input': '95 -13\\r\\n22 -36\\r\\n-25 -60\\r\\n', 'output': ['NO']}, {'input': '81 -91\\r\\n88 91\\r\\n-90 -77\\r\\n', 'output': ['NO']}, {'input': '281 -914\\r\\n-217 113\\r\\n479 329\\r\\n', 'output': ['NO']}, {'input': '620 514\\r\\n-276 966\\r\\n578 106\\r\\n', 'output': ['NO']}, {'input': '-253 -283\\r\\n-400 834\\r\\n718 -701\\r\\n', 'output': ['NO']}, {'input': '478 884\\r\\n418 -713\\r\\n-704 -961\\r\\n', 'output': ['NO']}, {'input': '-380 -712\\r\\n-263 -104\\r\\n187 -329\\r\\n', 'output': ['NO']}, {'input': '-2919 -7389\\r\\n-4955 -1807\\r\\n2103 9400\\r\\n', 'output': ['NO']}, {'input': '6040 9662\\r\\n1903 7813\\r\\n5296 8638\\r\\n', 'output': ['NO']}, {'input': '-6008 -6748\\r\\n-7106 -5319\\r\\n-1940 8048\\r\\n', 'output': ['NO']}, {'input': '-2171 -9855\\r\\n4255 -3857\\r\\n6446 9559\\r\\n', 'output': ['NO']}, {'input': '-8916 9282\\r\\n2666 2344\\r\\n9109 -2730\\r\\n', 'output': ['NO']}, {'input': '-52856 -58459\\r\\n-41878 81991\\r\\n-22821 59850\\r\\n', 'output': ['NO']}, {'input': '10327 -86117\\r\\n-51156 -26888\\r\\n-41007 27453\\r\\n', 'output': ['NO']}, {'input': '-46921 46529\\r\\n87797 -73235\\r\\n18213 -86569\\r\\n', 'output': ['NO']}, {'input': '-66381 86177\\r\\n24332 -47590\\r\\n-57592 80499\\r\\n', 'output': ['NO']}, {'input': '-69415 74546\\r\\n37868 -89407\\r\\n19505 -59846\\r\\n', 'output': ['NO']}, {'input': '-817674 316187\\r\\n-934134 660884\\r\\n-297136 -482732\\r\\n', 'output': ['NO']}, {'input': '-127066 941778\\r\\n-654926 -838416\\r\\n809821 -229819\\r\\n', 'output': ['NO']}, {'input': '251893 526074\\r\\n593818 288991\\r\\n-120613 211128\\r\\n', 'output': ['NO']}, {'input': '910801 387995\\r\\n-846325 167413\\r\\n-425681 -149086\\r\\n', 'output': ['NO']}, {'input': '769260 131679\\r\\n-399548 -620680\\r\\n-439456 -164378\\r\\n', 'output': ['NO']}, {'input': '4931249 7448503\\r\\n8740191 1123509\\r\\n4410817 -3494433\\r\\n', 'output': ['NO']}, {'input': '6752575 4525855\\r\\n-2269760 5249721\\r\\n7718280 -5550799\\r\\n', 'output': ['NO']}, {'input': '9121753 -1624238\\r\\n1358642 -7305098\\r\\n9182854 -2204498\\r\\n', 'output': ['NO']}, {'input': '-8540887 -7511495\\r\\n-2659834 -6893955\\r\\n8115011 -3482324\\r\\n', 'output': ['NO']}, {'input': '-4664203 -2707147\\r\\n7039468 5543778\\r\\n5854600 -7808563\\r\\n', 'output': ['NO']}, {'input': '-33622572 -65473509\\r\\n-54144104 -59861983\\r\\n89814248 47623606\\r\\n', 'output': ['NO']}, {'input': '-75629161 -68114618\\r\\n23285096 90997125\\r\\n84795646 72358903\\r\\n', 'output': ['NO']}, {'input': '-79956125 -88524398\\r\\n10949698 32312326\\r\\n-76024701 -77225990\\r\\n', 'output': ['NO']}, {'input': '26164297 21666711\\r\\n-20848219 -49928045\\r\\n-36819763 26811563\\r\\n', 'output': ['NO']}, {'input': '98219518 -66590186\\r\\n14970849 -24409139\\r\\n82951915 43915349\\r\\n', 'output': ['NO']}, {'input': '67195377 58333196\\r\\n-60739152 -69557068\\r\\n-82003989 74825425\\r\\n', 'output': ['NO']}, {'input': '92141071 -48275413\\r\\n-47968469 -13277723\\r\\n-15839680 51548907\\r\\n', 'output': ['NO']}, {'input': '82237071 -62729681\\r\\n45778244 -73153917\\r\\n25235041 83636828\\r\\n', 'output': ['NO']}, {'input': '82539131 17433579\\r\\n-56091046 68716401\\r\\n-73706000 41779060\\r\\n', 'output': ['NO']}, {'input': '-21570525 17439241\\r\\n-47857043 39456884\\r\\n-36121539 69473879\\r\\n', 'output': ['NO']}, {'input': '-38 -99\\r\\n76 43\\r\\n53 -84\\r\\n', 'output': ['NO']}, {'input': '-52 0\\r\\n-60 -50\\r\\n-47 91\\r\\n', 'output': ['NO']}, {'input': '-53 30\\r\\n-14 -19\\r\\n-61 11\\r\\n', 'output': ['NO']}, {'input': '60 55\\r\\n-88 -38\\r\\n0 59\\r\\n', 'output': ['NO']}, {'input': '89 55\\r\\n-13 27\\r\\n-13 -81\\r\\n', 'output': ['NO']}, {'input': '76 73\\r\\n82 -92\\r\\n-95 95\\r\\n', 'output': ['NO']}, {'input': '-81 57\\r\\n-96 0\\r\\n-73 -58\\r\\n', 'output': ['NO']}, {'input': '0 45\\r\\n42 -47\\r\\n-51 -82\\r\\n', 'output': ['NO']}, {'input': '16 39\\r\\n95 18\\r\\n39 -64\\r\\n', 'output': ['NO']}, {'input': '-23 36\\r\\n-72 0\\r\\n44 -60\\r\\n', 'output': ['NO']}, {'input': '57 43\\r\\n58 -54\\r\\n-43 0\\r\\n', 'output': ['NO']}, {'input': '51 77\\r\\n-9 81\\r\\n0 79\\r\\n', 'output': ['NO']}, {'input': '0 14\\r\\n88 0\\r\\n88 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n48 0\\r\\n-62 68\\r\\n', 'output': ['NO']}, {'input': '-35 -90\\r\\n0 -42\\r\\n-8 -60\\r\\n', 'output': ['NO']}, {'input': '59 0\\r\\n84 -28\\r\\n0 58\\r\\n', 'output': ['NO']}, {'input': '10 -15\\r\\n23 0\\r\\n88 -36\\r\\n', 'output': ['NO']}, {'input': '-66 -34\\r\\n59 -38\\r\\n13 0\\r\\n', 'output': ['NO']}, {'input': '0 -14\\r\\n80 94\\r\\n-14 15\\r\\n', 'output': ['NO']}, {'input': '-28 0\\r\\n0 43\\r\\n0 -51\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n-30010581 33889813\\r\\n12862004 15575384\\r\\n', 'output': ['NO']}, {'input': '94993760 -37786635\\r\\n-75326491 -21534927\\r\\n77949983 95218547\\r\\n', 'output': ['NO']}, {'input': '72913933 0\\r\\n54300106 60510850\\r\\n32295823 -60694017\\r\\n', 'output': ['NO']}, {'input': '0 -77922994\\r\\n47873382 0\\r\\n-48532375 -33729248\\r\\n', 'output': ['NO']}, {'input': '-50600641 25410541\\r\\n0 80575245\\r\\n0 62979800\\r\\n', 'output': ['NO']}, {'input': '-34280877 -82070958\\r\\n66030914 -52671703\\r\\n0 -90987154\\r\\n', 'output': ['NO']}, {'input': '27523869 0\\r\\n52900492 0\\r\\n33031150 -65488267\\r\\n', 'output': ['NO']}, {'input': '69226391 60708120\\r\\n43106396 25795293\\r\\n80380957 88577789\\r\\n', 'output': ['NO']}, {'input': '0 40072438\\r\\n-61016486 88561432\\r\\n28431496 60485628\\r\\n', 'output': ['NO']}, {'input': '0 24078959\\r\\n75842668 -56466325\\r\\n-64025705 12045125\\r\\n', 'output': ['NO']}, {'input': '24334185 -27189752\\r\\n0 -47230185\\r\\n0 -37588021\\r\\n', 'output': ['NO']}, {'input': '45479363 56862079\\r\\n28029163 0\\r\\n-38736303 59867108\\r\\n', 'output': ['NO']}, {'input': '-66738889 -24309585\\r\\n-39387414 -42921545\\r\\n-10462276 0\\r\\n', 'output': ['NO']}, {'input': '-95534030 -14392539\\r\\n-89751090 79655267\\r\\n-77491839 40745315\\r\\n', 'output': ['NO']}, {'input': '-48666683 22046293\\r\\n77649947 84819904\\r\\n-32803712 -99366118\\r\\n', 'output': ['NO']}, {'input': '10150745 93724033\\r\\n-59625481 -18232739\\r\\n34384941 -28147896\\r\\n', 'output': ['NO']}, {'input': '-12344578 -26470996\\r\\n0 -25186906\\r\\n-11572514 -38120367\\r\\n', 'output': ['NO']}, {'input': '-59220368 0\\r\\n0 -75968891\\r\\n0 74081590\\r\\n', 'output': ['NO']}, {'input': '-78038627 -49761049\\r\\n0 22143739\\r\\n0 -60448485\\r\\n', 'output': ['NO']}, {'input': '80358706 0\\r\\n23898082 -87631921\\r\\n-48798084 88174414\\r\\n', 'output': ['NO']}, {'input': '10 13\\r\\n13 10\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n10 13\\r\\n10 13\\r\\n', 'output': ['YES']}, {'input': '10 13\\r\\n0 0\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '10 13\\r\\n-10 -13\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '10 13\\r\\n-13 10\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n1 0\\r\\n100000000 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n1 1\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['YES']}, {'input': '100000000 0\\r\\n1 0\\r\\n100000000 0\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n1 1\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n100000000 99999999\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['YES']}, {'input': '100000000 100000000\\r\\n100000000 100000000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '5491 -1888\\r\\n58611137 -17279700\\r\\n5629 -7705\\r\\n', 'output': ['YES']}, {'input': '6791 1587\\r\\n23543337 24784850\\r\\n3970 2327\\r\\n', 'output': ['YES']}, {'input': '1214 8046\\r\\n84729946 38445218\\r\\n3488 -5838\\r\\n', 'output': ['YES']}, {'input': '-8725 -6466\\r\\n77278594 -3622341\\r\\n9344 -1256\\r\\n', 'output': ['YES']}, {'input': '-5922 -2466\\r\\n-46708374 -71085154\\r\\n-9882 298\\r\\n', 'output': ['YES']}, {'input': '4560 -6056\\r\\n97943322 -20616116\\r\\n-1107 -5440\\r\\n', 'output': ['YES']}, {'input': '-5645 2118\\r\\n-23770935 62615171\\r\\n-2080 9473\\r\\n', 'output': ['YES']}, {'input': '2630 8069\\r\\n-75372166 10085837\\r\\n-781 5563\\r\\n', 'output': ['YES']}, {'input': '-2588 9699\\r\\n50743921 -45114432\\r\\n-5288 -7358\\r\\n', 'output': ['YES']}, {'input': '6889 9158\\r\\n-843345 89332306\\r\\n7495 518\\r\\n', 'output': ['YES']}, {'input': '-2037 -1006\\r\\n-13301683 -83185771\\r\\n-3487 -4590\\r\\n', 'output': ['YES']}, {'input': '-925 -1240\\r\\n25904140 -92743662\\r\\n-8028 -2933\\r\\n', 'output': ['YES']}, {'input': '-573 5611\\r\\n-88934372 16274202\\r\\n-689 9294\\r\\n', 'output': ['YES']}, {'input': '-2859 7599\\r\\n37114911 -75750711\\r\\n-9150 -7398\\r\\n', 'output': ['YES']}, {'input': '-9234 9520\\r\\n58867682 17319702\\r\\n2273 -5831\\r\\n', 'output': ['YES']}, {'input': '3411 2674\\r\\n-21536783 -33506984\\r\\n-8254 -3778\\r\\n', 'output': ['YES']}, {'input': '1778735 -1803902\\r\\n-92875004 -2966747\\r\\n-4125460 1149178\\r\\n', 'output': ['YES']}, {'input': '-2413874 4166580\\r\\n83681508 25911924\\r\\n8615149 -6396049\\r\\n', 'output': ['YES']}, {'input': '5987456 -1627274\\r\\n-45083510 25782192\\r\\n-758074 971006\\r\\n', 'output': ['YES']}, {'input': '-881780 8157586\\r\\n-83355045 -86221641\\r\\n-5080144 1016625\\r\\n', 'output': ['YES']}, {'input': '836292 -1555463\\r\\n44451624 -63102407\\r\\n-7051275 -9619647\\r\\n', 'output': ['YES']}, {'input': '-5493123 4007625\\r\\n-49191721 -31674255\\r\\n-9754636 6418706\\r\\n', 'output': ['YES']}, {'input': '-2797960 2819364\\r\\n59202462 71529306\\r\\n7799041 -4640234\\r\\n', 'output': ['YES']}, {'input': '-7355750 -5710643\\r\\n-48075697 25746997\\r\\n-3569463 3650928\\r\\n', 'output': ['YES']}, {'input': '2517677 8638224\\r\\n-75757217 -17117074\\r\\n-2847910 1342478\\r\\n', 'output': ['YES']}, {'input': '-1782346 -522853\\r\\n56023653 37655619\\r\\n7455445 -936314\\r\\n', 'output': ['YES']}, {'input': '3922510 4979687\\r\\n-83613487 73792320\\r\\n-2355010 7196240\\r\\n', 'output': ['YES']}, {'input': '-2911250 -3788914\\r\\n9975544 20015444\\r\\n7278331 4185016\\r\\n', 'output': ['YES']}, {'input': '9495309 -4445256\\r\\n66581093 -48831427\\r\\n5864682 -8016505\\r\\n', 'output': ['YES']}, {'input': '-6389242 -2092524\\r\\n-18806778 85154882\\r\\n8457769 5141401\\r\\n', 'output': ['YES']}, {'input': '-6223066 -5334825\\r\\n36109780 -5416931\\r\\n3246899 -4890875\\r\\n', 'output': ['YES']}, {'input': '-1334950 3309875\\r\\n-20438919 -45390492\\r\\n-722222 280804\\r\\n', 'output': ['YES']}, {'input': '122542 -4826228\\r\\n-20855162 89301242\\r\\n8917870 2568139\\r\\n', 'output': ['YES']}, {'input': '-4662151 6642823\\r\\n-620983 29911124\\r\\n6914655 -1204368\\r\\n', 'output': ['YES']}, {'input': '806224 -7075643\\r\\n94593948 -33094579\\r\\n-540130 -5612242\\r\\n', 'output': ['YES']}, {'input': '2370720 9260730\\r\\n-31929898 43611588\\r\\n2817748 6788032\\r\\n', 'output': ['YES']}, {'input': '5 -12\\r\\n-47316040 -62956553\\r\\n-7 0\\r\\n', 'output': ['YES']}, {'input': '-7 0\\r\\n-51538008 -92285620\\r\\n-3 0\\r\\n', 'output': ['YES']}, {'input': '-12 9\\r\\n21015609 49124671\\r\\n3 2\\r\\n', 'output': ['YES']}, {'input': '-11 -10\\r\\n-1042937 89231497\\r\\n0 9\\r\\n', 'output': ['YES']}, {'input': '-3 11\\r\\n6154942 80496611\\r\\n5 0\\r\\n', 'output': ['YES']}, {'input': '-13 12\\r\\n826557 -90209918\\r\\n0 -5\\r\\n', 'output': ['YES']}, {'input': '-3 -9\\r\\n-72817057 -54284335\\r\\n-3 -1\\r\\n', 'output': ['YES']}, {'input': '-8 -8\\r\\n66949614 -53875176\\r\\n-2 -4\\r\\n', 'output': ['YES']}, {'input': '6 2\\r\\n-97096230 19770854\\r\\n-5 4\\r\\n', 'output': ['YES']}, {'input': '10 7\\r\\n91660376 -58581376\\r\\n0 -7\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999997\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999997\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '-100000000 -100000000\\r\\n100000000 100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '32 34\\r\\n-50070000 21003000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n100000000 0\\r\\n1 2\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n1 2\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n4 2\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '100000000 100000000\\r\\n0 0\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n10000000 10000000\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '1 2\\r\\n-2 1\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n1 -1\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n-63411382 -42720436\\r\\n123456 543253\\r\\n', 'output': ['YES']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nstruct point {\n  long long x, y;\n  point operator-(const point &a) const { return (point){x - a.x, y - a.y}; }\n  long long operator^(const point &a) const { return x * a.y - a.x * y; }\n};\nint d[4][2] = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};\npoint vec(long long x, long long y) { return (point){x, y}; }\npoint solve(point A, point B, point C) {\n  point B1 = B;\n  for (int o = 0; o < 4; o++) {\n    point C1 = C;\n    for (int i = 0; i < 4; i++) {\n      if ((C1 - vec(0, 0)) ^ (B - A) == 0) return vec(0, 0);\n      C1 = vec(C1.x - A.x, C1.y - A.y);\n      B1 = vec(B1.x - A.x, B1.y - A.y);\n      for (int j = 0; j < 3; j++) C1 = vec(C1.x, C1.y + C1.y);\n      B1 = vec(B1.x + B1.x, B1.y + B1.y);\n    }\n    if ((B1 - vec(0, 0)) ^ (B - A) == 0) return vec(0, 0);\n    B1 = vec(B1.x - A.x, B1.y - A.y);\n    B = vec(B.x - A.x, B.y - A.y);\n    for (int i = 0; i < 3; i++) B1 = vec(B1.x, B1.y + B1.y);\n    B = vec(B.x + B.x, B.y + B.y);\n  }\n  return vec(0, 0);\n}\nint main() {\n  point A, B, C;\n  cin >> A.x >> A.y >> B.x >> B.y >> C.x >> C.y;\n  point v = solve(A, B, C);\n  if ((v.x == 0) && (v.y == 0))\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n  return 0;\n}\n"}
{"src_uid": "cc8a8af1ba2b19bf081e379139542883", "id": 44, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2000, "testcases": "[{'input': '0 0\\r\\n1 1\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n2 2\\r\\n', 'output': ['NO']}, {'input': '2 3\\r\\n2 3\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '-4 -2\\r\\n0 0\\r\\n-2 -1\\r\\n', 'output': ['YES']}, {'input': '-100000000 -100000000\\r\\n100000000 100000000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '3 4\\r\\n-4 3\\r\\n1 7\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n2 2\\r\\n-3 -3\\r\\n', 'output': ['YES']}, {'input': '0 1\\r\\n2 3\\r\\n7 -11\\r\\n', 'output': ['NO']}, {'input': '-2 2\\r\\n3 3\\r\\n5 0\\r\\n', 'output': ['YES']}, {'input': '1 3\\r\\n3 1\\r\\n3 3\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n0 0\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n12 12\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 100000000\\r\\n0 -100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 4444\\r\\n-4444 -100000000\\r\\n50000000 50000000\\r\\n', 'output': ['YES']}, {'input': '45 6\\r\\n65 5\\r\\n0 5\\r\\n', 'output': ['NO']}, {'input': '1 0\\r\\n0 1\\r\\n2 1\\r\\n', 'output': ['YES']}, {'input': '7 11\\r\\n13 13\\r\\n0 4\\r\\n', 'output': ['YES']}, {'input': '4 2\\r\\n0 -1\\r\\n2 -2\\r\\n', 'output': ['NO']}, {'input': '4 -3\\r\\n-3 1\\r\\n0 -2\\r\\n', 'output': ['NO']}, {'input': '-2 -1\\r\\n0 1\\r\\n-2 -3\\r\\n', 'output': ['NO']}, {'input': '-1 1\\r\\n2 1\\r\\n-2 -1\\r\\n', 'output': ['NO']}, {'input': '4 0\\r\\n4 -3\\r\\n2 4\\r\\n', 'output': ['NO']}, {'input': '-3 -2\\r\\n-3 3\\r\\n4 4\\r\\n', 'output': ['NO']}, {'input': '2 1\\r\\n1 -4\\r\\n-4 -2\\r\\n', 'output': ['NO']}, {'input': '3 1\\r\\n1 -1\\r\\n-1 -4\\r\\n', 'output': ['NO']}, {'input': '2 -1\\r\\n-2 -4\\r\\n1 -1\\r\\n', 'output': ['NO']}, {'input': '0 4\\r\\n-1 -3\\r\\n4 1\\r\\n', 'output': ['NO']}, {'input': '-4 1\\r\\n-4 2\\r\\n0 -2\\r\\n', 'output': ['NO']}, {'input': '-2 -2\\r\\n-2 3\\r\\n3 -1\\r\\n', 'output': ['NO']}, {'input': '-3 0\\r\\n2 1\\r\\n-2 0\\r\\n', 'output': ['YES']}, {'input': '-1 -2\\r\\n3 -2\\r\\n-3 -1\\r\\n', 'output': ['NO']}, {'input': '3 1\\r\\n-2 3\\r\\n-2 -2\\r\\n', 'output': ['NO']}, {'input': '0 -4\\r\\n-1 -2\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '-4 -4\\r\\n1 0\\r\\n-1 -3\\r\\n', 'output': ['NO']}, {'input': '2 0\\r\\n-2 1\\r\\n2 3\\r\\n', 'output': ['NO']}, {'input': '-2 4\\r\\n0 1\\r\\n-2 1\\r\\n', 'output': ['YES']}, {'input': '4 1\\r\\n2 -1\\r\\n3 0\\r\\n', 'output': ['YES']}, {'input': '2 3\\r\\n3 -3\\r\\n3 -2\\r\\n', 'output': ['NO']}, {'input': '2 4\\r\\n-4 1\\r\\n3 3\\r\\n', 'output': ['NO']}, {'input': '-4 -3\\r\\n-3 -4\\r\\n1 4\\r\\n', 'output': ['NO']}, {'input': '3 2\\r\\n1 0\\r\\n-4 -1\\r\\n', 'output': ['NO']}, {'input': '0 -4\\r\\n-3 -2\\r\\n3 -1\\r\\n', 'output': ['NO']}, {'input': '-2 2\\r\\n4 -2\\r\\n-2 -2\\r\\n', 'output': ['NO']}, {'input': '2 2\\r\\n-2 1\\r\\n0 -3\\r\\n', 'output': ['YES']}, {'input': '0 4\\r\\n1 1\\r\\n-4 2\\r\\n', 'output': ['NO']}, {'input': '-4 -4\\r\\n4 1\\r\\n-4 -2\\r\\n', 'output': ['NO']}, {'input': '-4 2\\r\\n4 -1\\r\\n-2 -1\\r\\n', 'output': ['YES']}, {'input': '-7 9\\r\\n-2 10\\r\\n-6 -4\\r\\n', 'output': ['NO']}, {'input': '4 7\\r\\n2 9\\r\\n-7 -6\\r\\n', 'output': ['NO']}, {'input': '-6 9\\r\\n6 6\\r\\n9 6\\r\\n', 'output': ['NO']}, {'input': '-9 4\\r\\n8 1\\r\\n-8 8\\r\\n', 'output': ['NO']}, {'input': '-4 3\\r\\n9 -2\\r\\n-3 -3\\r\\n', 'output': ['YES']}, {'input': '-1 -7\\r\\n3 -2\\r\\n-4 -3\\r\\n', 'output': ['NO']}, {'input': '-9 4\\r\\n-2 -8\\r\\n9 4\\r\\n', 'output': ['NO']}, {'input': '8 2\\r\\n-10 1\\r\\n10 -2\\r\\n', 'output': ['NO']}, {'input': '-7 9\\r\\n5 5\\r\\n-2 6\\r\\n', 'output': ['NO']}, {'input': '-8 1\\r\\n-10 -8\\r\\n1 -4\\r\\n', 'output': ['YES']}, {'input': '-65 -52\\r\\n31 -22\\r\\n0 -77\\r\\n', 'output': ['NO']}, {'input': '74 -55\\r\\n0 50\\r\\n-68 26\\r\\n', 'output': ['NO']}, {'input': '-84 28\\r\\n33 -15\\r\\n-19 93\\r\\n', 'output': ['NO']}, {'input': '69 -30\\r\\n-66 -100\\r\\n86 -38\\r\\n', 'output': ['NO']}, {'input': '-43 41\\r\\n-99 92\\r\\n-20 51\\r\\n', 'output': ['NO']}, {'input': '-17 -33\\r\\n56 -75\\r\\n-93 65\\r\\n', 'output': ['NO']}, {'input': '-95 -32\\r\\n-90 -43\\r\\n-40 16\\r\\n', 'output': ['NO']}, {'input': '-48 -92\\r\\n59 -39\\r\\n-45 14\\r\\n', 'output': ['NO']}, {'input': '95 -13\\r\\n22 -36\\r\\n-25 -60\\r\\n', 'output': ['NO']}, {'input': '81 -91\\r\\n88 91\\r\\n-90 -77\\r\\n', 'output': ['NO']}, {'input': '281 -914\\r\\n-217 113\\r\\n479 329\\r\\n', 'output': ['NO']}, {'input': '620 514\\r\\n-276 966\\r\\n578 106\\r\\n', 'output': ['NO']}, {'input': '-253 -283\\r\\n-400 834\\r\\n718 -701\\r\\n', 'output': ['NO']}, {'input': '478 884\\r\\n418 -713\\r\\n-704 -961\\r\\n', 'output': ['NO']}, {'input': '-380 -712\\r\\n-263 -104\\r\\n187 -329\\r\\n', 'output': ['NO']}, {'input': '-2919 -7389\\r\\n-4955 -1807\\r\\n2103 9400\\r\\n', 'output': ['NO']}, {'input': '6040 9662\\r\\n1903 7813\\r\\n5296 8638\\r\\n', 'output': ['NO']}, {'input': '-6008 -6748\\r\\n-7106 -5319\\r\\n-1940 8048\\r\\n', 'output': ['NO']}, {'input': '-2171 -9855\\r\\n4255 -3857\\r\\n6446 9559\\r\\n', 'output': ['NO']}, {'input': '-8916 9282\\r\\n2666 2344\\r\\n9109 -2730\\r\\n', 'output': ['NO']}, {'input': '-52856 -58459\\r\\n-41878 81991\\r\\n-22821 59850\\r\\n', 'output': ['NO']}, {'input': '10327 -86117\\r\\n-51156 -26888\\r\\n-41007 27453\\r\\n', 'output': ['NO']}, {'input': '-46921 46529\\r\\n87797 -73235\\r\\n18213 -86569\\r\\n', 'output': ['NO']}, {'input': '-66381 86177\\r\\n24332 -47590\\r\\n-57592 80499\\r\\n', 'output': ['NO']}, {'input': '-69415 74546\\r\\n37868 -89407\\r\\n19505 -59846\\r\\n', 'output': ['NO']}, {'input': '-817674 316187\\r\\n-934134 660884\\r\\n-297136 -482732\\r\\n', 'output': ['NO']}, {'input': '-127066 941778\\r\\n-654926 -838416\\r\\n809821 -229819\\r\\n', 'output': ['NO']}, {'input': '251893 526074\\r\\n593818 288991\\r\\n-120613 211128\\r\\n', 'output': ['NO']}, {'input': '910801 387995\\r\\n-846325 167413\\r\\n-425681 -149086\\r\\n', 'output': ['NO']}, {'input': '769260 131679\\r\\n-399548 -620680\\r\\n-439456 -164378\\r\\n', 'output': ['NO']}, {'input': '4931249 7448503\\r\\n8740191 1123509\\r\\n4410817 -3494433\\r\\n', 'output': ['NO']}, {'input': '6752575 4525855\\r\\n-2269760 5249721\\r\\n7718280 -5550799\\r\\n', 'output': ['NO']}, {'input': '9121753 -1624238\\r\\n1358642 -7305098\\r\\n9182854 -2204498\\r\\n', 'output': ['NO']}, {'input': '-8540887 -7511495\\r\\n-2659834 -6893955\\r\\n8115011 -3482324\\r\\n', 'output': ['NO']}, {'input': '-4664203 -2707147\\r\\n7039468 5543778\\r\\n5854600 -7808563\\r\\n', 'output': ['NO']}, {'input': '-33622572 -65473509\\r\\n-54144104 -59861983\\r\\n89814248 47623606\\r\\n', 'output': ['NO']}, {'input': '-75629161 -68114618\\r\\n23285096 90997125\\r\\n84795646 72358903\\r\\n', 'output': ['NO']}, {'input': '-79956125 -88524398\\r\\n10949698 32312326\\r\\n-76024701 -77225990\\r\\n', 'output': ['NO']}, {'input': '26164297 21666711\\r\\n-20848219 -49928045\\r\\n-36819763 26811563\\r\\n', 'output': ['NO']}, {'input': '98219518 -66590186\\r\\n14970849 -24409139\\r\\n82951915 43915349\\r\\n', 'output': ['NO']}, {'input': '67195377 58333196\\r\\n-60739152 -69557068\\r\\n-82003989 74825425\\r\\n', 'output': ['NO']}, {'input': '92141071 -48275413\\r\\n-47968469 -13277723\\r\\n-15839680 51548907\\r\\n', 'output': ['NO']}, {'input': '82237071 -62729681\\r\\n45778244 -73153917\\r\\n25235041 83636828\\r\\n', 'output': ['NO']}, {'input': '82539131 17433579\\r\\n-56091046 68716401\\r\\n-73706000 41779060\\r\\n', 'output': ['NO']}, {'input': '-21570525 17439241\\r\\n-47857043 39456884\\r\\n-36121539 69473879\\r\\n', 'output': ['NO']}, {'input': '-38 -99\\r\\n76 43\\r\\n53 -84\\r\\n', 'output': ['NO']}, {'input': '-52 0\\r\\n-60 -50\\r\\n-47 91\\r\\n', 'output': ['NO']}, {'input': '-53 30\\r\\n-14 -19\\r\\n-61 11\\r\\n', 'output': ['NO']}, {'input': '60 55\\r\\n-88 -38\\r\\n0 59\\r\\n', 'output': ['NO']}, {'input': '89 55\\r\\n-13 27\\r\\n-13 -81\\r\\n', 'output': ['NO']}, {'input': '76 73\\r\\n82 -92\\r\\n-95 95\\r\\n', 'output': ['NO']}, {'input': '-81 57\\r\\n-96 0\\r\\n-73 -58\\r\\n', 'output': ['NO']}, {'input': '0 45\\r\\n42 -47\\r\\n-51 -82\\r\\n', 'output': ['NO']}, {'input': '16 39\\r\\n95 18\\r\\n39 -64\\r\\n', 'output': ['NO']}, {'input': '-23 36\\r\\n-72 0\\r\\n44 -60\\r\\n', 'output': ['NO']}, {'input': '57 43\\r\\n58 -54\\r\\n-43 0\\r\\n', 'output': ['NO']}, {'input': '51 77\\r\\n-9 81\\r\\n0 79\\r\\n', 'output': ['NO']}, {'input': '0 14\\r\\n88 0\\r\\n88 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n48 0\\r\\n-62 68\\r\\n', 'output': ['NO']}, {'input': '-35 -90\\r\\n0 -42\\r\\n-8 -60\\r\\n', 'output': ['NO']}, {'input': '59 0\\r\\n84 -28\\r\\n0 58\\r\\n', 'output': ['NO']}, {'input': '10 -15\\r\\n23 0\\r\\n88 -36\\r\\n', 'output': ['NO']}, {'input': '-66 -34\\r\\n59 -38\\r\\n13 0\\r\\n', 'output': ['NO']}, {'input': '0 -14\\r\\n80 94\\r\\n-14 15\\r\\n', 'output': ['NO']}, {'input': '-28 0\\r\\n0 43\\r\\n0 -51\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n-30010581 33889813\\r\\n12862004 15575384\\r\\n', 'output': ['NO']}, {'input': '94993760 -37786635\\r\\n-75326491 -21534927\\r\\n77949983 95218547\\r\\n', 'output': ['NO']}, {'input': '72913933 0\\r\\n54300106 60510850\\r\\n32295823 -60694017\\r\\n', 'output': ['NO']}, {'input': '0 -77922994\\r\\n47873382 0\\r\\n-48532375 -33729248\\r\\n', 'output': ['NO']}, {'input': '-50600641 25410541\\r\\n0 80575245\\r\\n0 62979800\\r\\n', 'output': ['NO']}, {'input': '-34280877 -82070958\\r\\n66030914 -52671703\\r\\n0 -90987154\\r\\n', 'output': ['NO']}, {'input': '27523869 0\\r\\n52900492 0\\r\\n33031150 -65488267\\r\\n', 'output': ['NO']}, {'input': '69226391 60708120\\r\\n43106396 25795293\\r\\n80380957 88577789\\r\\n', 'output': ['NO']}, {'input': '0 40072438\\r\\n-61016486 88561432\\r\\n28431496 60485628\\r\\n', 'output': ['NO']}, {'input': '0 24078959\\r\\n75842668 -56466325\\r\\n-64025705 12045125\\r\\n', 'output': ['NO']}, {'input': '24334185 -27189752\\r\\n0 -47230185\\r\\n0 -37588021\\r\\n', 'output': ['NO']}, {'input': '45479363 56862079\\r\\n28029163 0\\r\\n-38736303 59867108\\r\\n', 'output': ['NO']}, {'input': '-66738889 -24309585\\r\\n-39387414 -42921545\\r\\n-10462276 0\\r\\n', 'output': ['NO']}, {'input': '-95534030 -14392539\\r\\n-89751090 79655267\\r\\n-77491839 40745315\\r\\n', 'output': ['NO']}, {'input': '-48666683 22046293\\r\\n77649947 84819904\\r\\n-32803712 -99366118\\r\\n', 'output': ['NO']}, {'input': '10150745 93724033\\r\\n-59625481 -18232739\\r\\n34384941 -28147896\\r\\n', 'output': ['NO']}, {'input': '-12344578 -26470996\\r\\n0 -25186906\\r\\n-11572514 -38120367\\r\\n', 'output': ['NO']}, {'input': '-59220368 0\\r\\n0 -75968891\\r\\n0 74081590\\r\\n', 'output': ['NO']}, {'input': '-78038627 -49761049\\r\\n0 22143739\\r\\n0 -60448485\\r\\n', 'output': ['NO']}, {'input': '80358706 0\\r\\n23898082 -87631921\\r\\n-48798084 88174414\\r\\n', 'output': ['NO']}, {'input': '10 13\\r\\n13 10\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n10 13\\r\\n10 13\\r\\n', 'output': ['YES']}, {'input': '10 13\\r\\n0 0\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '10 13\\r\\n-10 -13\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '10 13\\r\\n-13 10\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n1 0\\r\\n100000000 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n1 1\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['YES']}, {'input': '100000000 0\\r\\n1 0\\r\\n100000000 0\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n1 1\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n100000000 99999999\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['YES']}, {'input': '100000000 100000000\\r\\n100000000 100000000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '5491 -1888\\r\\n58611137 -17279700\\r\\n5629 -7705\\r\\n', 'output': ['YES']}, {'input': '6791 1587\\r\\n23543337 24784850\\r\\n3970 2327\\r\\n', 'output': ['YES']}, {'input': '1214 8046\\r\\n84729946 38445218\\r\\n3488 -5838\\r\\n', 'output': ['YES']}, {'input': '-8725 -6466\\r\\n77278594 -3622341\\r\\n9344 -1256\\r\\n', 'output': ['YES']}, {'input': '-5922 -2466\\r\\n-46708374 -71085154\\r\\n-9882 298\\r\\n', 'output': ['YES']}, {'input': '4560 -6056\\r\\n97943322 -20616116\\r\\n-1107 -5440\\r\\n', 'output': ['YES']}, {'input': '-5645 2118\\r\\n-23770935 62615171\\r\\n-2080 9473\\r\\n', 'output': ['YES']}, {'input': '2630 8069\\r\\n-75372166 10085837\\r\\n-781 5563\\r\\n', 'output': ['YES']}, {'input': '-2588 9699\\r\\n50743921 -45114432\\r\\n-5288 -7358\\r\\n', 'output': ['YES']}, {'input': '6889 9158\\r\\n-843345 89332306\\r\\n7495 518\\r\\n', 'output': ['YES']}, {'input': '-2037 -1006\\r\\n-13301683 -83185771\\r\\n-3487 -4590\\r\\n', 'output': ['YES']}, {'input': '-925 -1240\\r\\n25904140 -92743662\\r\\n-8028 -2933\\r\\n', 'output': ['YES']}, {'input': '-573 5611\\r\\n-88934372 16274202\\r\\n-689 9294\\r\\n', 'output': ['YES']}, {'input': '-2859 7599\\r\\n37114911 -75750711\\r\\n-9150 -7398\\r\\n', 'output': ['YES']}, {'input': '-9234 9520\\r\\n58867682 17319702\\r\\n2273 -5831\\r\\n', 'output': ['YES']}, {'input': '3411 2674\\r\\n-21536783 -33506984\\r\\n-8254 -3778\\r\\n', 'output': ['YES']}, {'input': '1778735 -1803902\\r\\n-92875004 -2966747\\r\\n-4125460 1149178\\r\\n', 'output': ['YES']}, {'input': '-2413874 4166580\\r\\n83681508 25911924\\r\\n8615149 -6396049\\r\\n', 'output': ['YES']}, {'input': '5987456 -1627274\\r\\n-45083510 25782192\\r\\n-758074 971006\\r\\n', 'output': ['YES']}, {'input': '-881780 8157586\\r\\n-83355045 -86221641\\r\\n-5080144 1016625\\r\\n', 'output': ['YES']}, {'input': '836292 -1555463\\r\\n44451624 -63102407\\r\\n-7051275 -9619647\\r\\n', 'output': ['YES']}, {'input': '-5493123 4007625\\r\\n-49191721 -31674255\\r\\n-9754636 6418706\\r\\n', 'output': ['YES']}, {'input': '-2797960 2819364\\r\\n59202462 71529306\\r\\n7799041 -4640234\\r\\n', 'output': ['YES']}, {'input': '-7355750 -5710643\\r\\n-48075697 25746997\\r\\n-3569463 3650928\\r\\n', 'output': ['YES']}, {'input': '2517677 8638224\\r\\n-75757217 -17117074\\r\\n-2847910 1342478\\r\\n', 'output': ['YES']}, {'input': '-1782346 -522853\\r\\n56023653 37655619\\r\\n7455445 -936314\\r\\n', 'output': ['YES']}, {'input': '3922510 4979687\\r\\n-83613487 73792320\\r\\n-2355010 7196240\\r\\n', 'output': ['YES']}, {'input': '-2911250 -3788914\\r\\n9975544 20015444\\r\\n7278331 4185016\\r\\n', 'output': ['YES']}, {'input': '9495309 -4445256\\r\\n66581093 -48831427\\r\\n5864682 -8016505\\r\\n', 'output': ['YES']}, {'input': '-6389242 -2092524\\r\\n-18806778 85154882\\r\\n8457769 5141401\\r\\n', 'output': ['YES']}, {'input': '-6223066 -5334825\\r\\n36109780 -5416931\\r\\n3246899 -4890875\\r\\n', 'output': ['YES']}, {'input': '-1334950 3309875\\r\\n-20438919 -45390492\\r\\n-722222 280804\\r\\n', 'output': ['YES']}, {'input': '122542 -4826228\\r\\n-20855162 89301242\\r\\n8917870 2568139\\r\\n', 'output': ['YES']}, {'input': '-4662151 6642823\\r\\n-620983 29911124\\r\\n6914655 -1204368\\r\\n', 'output': ['YES']}, {'input': '806224 -7075643\\r\\n94593948 -33094579\\r\\n-540130 -5612242\\r\\n', 'output': ['YES']}, {'input': '2370720 9260730\\r\\n-31929898 43611588\\r\\n2817748 6788032\\r\\n', 'output': ['YES']}, {'input': '5 -12\\r\\n-47316040 -62956553\\r\\n-7 0\\r\\n', 'output': ['YES']}, {'input': '-7 0\\r\\n-51538008 -92285620\\r\\n-3 0\\r\\n', 'output': ['YES']}, {'input': '-12 9\\r\\n21015609 49124671\\r\\n3 2\\r\\n', 'output': ['YES']}, {'input': '-11 -10\\r\\n-1042937 89231497\\r\\n0 9\\r\\n', 'output': ['YES']}, {'input': '-3 11\\r\\n6154942 80496611\\r\\n5 0\\r\\n', 'output': ['YES']}, {'input': '-13 12\\r\\n826557 -90209918\\r\\n0 -5\\r\\n', 'output': ['YES']}, {'input': '-3 -9\\r\\n-72817057 -54284335\\r\\n-3 -1\\r\\n', 'output': ['YES']}, {'input': '-8 -8\\r\\n66949614 -53875176\\r\\n-2 -4\\r\\n', 'output': ['YES']}, {'input': '6 2\\r\\n-97096230 19770854\\r\\n-5 4\\r\\n', 'output': ['YES']}, {'input': '10 7\\r\\n91660376 -58581376\\r\\n0 -7\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999997\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999997\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '-100000000 -100000000\\r\\n100000000 100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '32 34\\r\\n-50070000 21003000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n100000000 0\\r\\n1 2\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n1 2\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n4 2\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '100000000 100000000\\r\\n0 0\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n10000000 10000000\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '1 2\\r\\n-2 1\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n1 -1\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n-63411382 -42720436\\r\\n123456 543253\\r\\n', 'output': ['YES']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a = 0, b = 0, c = 0, d = 0, x = 0, y = 0;\n  scanf(\"%d%d%d%d\", &x, &y, &a, &b);\n  scanf(\"%d%d\", &c, &d);\n  x -= a, y -= b;\n  int flag = 0, flag1 = 0, t = 0, m = 0;\n  while (true) {\n    if (!x &&!y) break;\n    if (!x)\n      x = x + y, y = 0;\n    else if (!y)\n      y = y - x, x = 0;\n    else if (x && y) {\n      if (x == y &&!flag) {\n        x = 0, y = 0, flag = 1;\n      } else if (x < y &&!flag1) {\n        swap(x, y), flag1 = 1;\n      } else if (!flag) {\n        x = x - y, y = 0, flag = 1;\n      } else if (x + y == 0 && flag1) {\n        x = 0, y = 0, flag = 1, flag1 = 1;\n      } else\n        break;\n    }\n    x -= c, y -= d;\n    t++, m++;\n  }\n  if (!x &&!y)\n    printf(\"YES\\n\");\n  else\n    printf(\"NO\\n\");\n}\n"}
{"src_uid": "cc8a8af1ba2b19bf081e379139542883", "id": 44, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2000, "testcases": "[{'input': '0 0\\r\\n1 1\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n2 2\\r\\n', 'output': ['NO']}, {'input': '2 3\\r\\n2 3\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '-4 -2\\r\\n0 0\\r\\n-2 -1\\r\\n', 'output': ['YES']}, {'input': '-100000000 -100000000\\r\\n100000000 100000000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '3 4\\r\\n-4 3\\r\\n1 7\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n2 2\\r\\n-3 -3\\r\\n', 'output': ['YES']}, {'input': '0 1\\r\\n2 3\\r\\n7 -11\\r\\n', 'output': ['NO']}, {'input': '-2 2\\r\\n3 3\\r\\n5 0\\r\\n', 'output': ['YES']}, {'input': '1 3\\r\\n3 1\\r\\n3 3\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n0 0\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n12 12\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 100000000\\r\\n0 -100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 4444\\r\\n-4444 -100000000\\r\\n50000000 50000000\\r\\n', 'output': ['YES']}, {'input': '45 6\\r\\n65 5\\r\\n0 5\\r\\n', 'output': ['NO']}, {'input': '1 0\\r\\n0 1\\r\\n2 1\\r\\n', 'output': ['YES']}, {'input': '7 11\\r\\n13 13\\r\\n0 4\\r\\n', 'output': ['YES']}, {'input': '4 2\\r\\n0 -1\\r\\n2 -2\\r\\n', 'output': ['NO']}, {'input': '4 -3\\r\\n-3 1\\r\\n0 -2\\r\\n', 'output': ['NO']}, {'input': '-2 -1\\r\\n0 1\\r\\n-2 -3\\r\\n', 'output': ['NO']}, {'input': '-1 1\\r\\n2 1\\r\\n-2 -1\\r\\n', 'output': ['NO']}, {'input': '4 0\\r\\n4 -3\\r\\n2 4\\r\\n', 'output': ['NO']}, {'input': '-3 -2\\r\\n-3 3\\r\\n4 4\\r\\n', 'output': ['NO']}, {'input': '2 1\\r\\n1 -4\\r\\n-4 -2\\r\\n', 'output': ['NO']}, {'input': '3 1\\r\\n1 -1\\r\\n-1 -4\\r\\n', 'output': ['NO']}, {'input': '2 -1\\r\\n-2 -4\\r\\n1 -1\\r\\n', 'output': ['NO']}, {'input': '0 4\\r\\n-1 -3\\r\\n4 1\\r\\n', 'output': ['NO']}, {'input': '-4 1\\r\\n-4 2\\r\\n0 -2\\r\\n', 'output': ['NO']}, {'input': '-2 -2\\r\\n-2 3\\r\\n3 -1\\r\\n', 'output': ['NO']}, {'input': '-3 0\\r\\n2 1\\r\\n-2 0\\r\\n', 'output': ['YES']}, {'input': '-1 -2\\r\\n3 -2\\r\\n-3 -1\\r\\n', 'output': ['NO']}, {'input': '3 1\\r\\n-2 3\\r\\n-2 -2\\r\\n', 'output': ['NO']}, {'input': '0 -4\\r\\n-1 -2\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '-4 -4\\r\\n1 0\\r\\n-1 -3\\r\\n', 'output': ['NO']}, {'input': '2 0\\r\\n-2 1\\r\\n2 3\\r\\n', 'output': ['NO']}, {'input': '-2 4\\r\\n0 1\\r\\n-2 1\\r\\n', 'output': ['YES']}, {'input': '4 1\\r\\n2 -1\\r\\n3 0\\r\\n', 'output': ['YES']}, {'input': '2 3\\r\\n3 -3\\r\\n3 -2\\r\\n', 'output': ['NO']}, {'input': '2 4\\r\\n-4 1\\r\\n3 3\\r\\n', 'output': ['NO']}, {'input': '-4 -3\\r\\n-3 -4\\r\\n1 4\\r\\n', 'output': ['NO']}, {'input': '3 2\\r\\n1 0\\r\\n-4 -1\\r\\n', 'output': ['NO']}, {'input': '0 -4\\r\\n-3 -2\\r\\n3 -1\\r\\n', 'output': ['NO']}, {'input': '-2 2\\r\\n4 -2\\r\\n-2 -2\\r\\n', 'output': ['NO']}, {'input': '2 2\\r\\n-2 1\\r\\n0 -3\\r\\n', 'output': ['YES']}, {'input': '0 4\\r\\n1 1\\r\\n-4 2\\r\\n', 'output': ['NO']}, {'input': '-4 -4\\r\\n4 1\\r\\n-4 -2\\r\\n', 'output': ['NO']}, {'input': '-4 2\\r\\n4 -1\\r\\n-2 -1\\r\\n', 'output': ['YES']}, {'input': '-7 9\\r\\n-2 10\\r\\n-6 -4\\r\\n', 'output': ['NO']}, {'input': '4 7\\r\\n2 9\\r\\n-7 -6\\r\\n', 'output': ['NO']}, {'input': '-6 9\\r\\n6 6\\r\\n9 6\\r\\n', 'output': ['NO']}, {'input': '-9 4\\r\\n8 1\\r\\n-8 8\\r\\n', 'output': ['NO']}, {'input': '-4 3\\r\\n9 -2\\r\\n-3 -3\\r\\n', 'output': ['YES']}, {'input': '-1 -7\\r\\n3 -2\\r\\n-4 -3\\r\\n', 'output': ['NO']}, {'input': '-9 4\\r\\n-2 -8\\r\\n9 4\\r\\n', 'output': ['NO']}, {'input': '8 2\\r\\n-10 1\\r\\n10 -2\\r\\n', 'output': ['NO']}, {'input': '-7 9\\r\\n5 5\\r\\n-2 6\\r\\n', 'output': ['NO']}, {'input': '-8 1\\r\\n-10 -8\\r\\n1 -4\\r\\n', 'output': ['YES']}, {'input': '-65 -52\\r\\n31 -22\\r\\n0 -77\\r\\n', 'output': ['NO']}, {'input': '74 -55\\r\\n0 50\\r\\n-68 26\\r\\n', 'output': ['NO']}, {'input': '-84 28\\r\\n33 -15\\r\\n-19 93\\r\\n', 'output': ['NO']}, {'input': '69 -30\\r\\n-66 -100\\r\\n86 -38\\r\\n', 'output': ['NO']}, {'input': '-43 41\\r\\n-99 92\\r\\n-20 51\\r\\n', 'output': ['NO']}, {'input': '-17 -33\\r\\n56 -75\\r\\n-93 65\\r\\n', 'output': ['NO']}, {'input': '-95 -32\\r\\n-90 -43\\r\\n-40 16\\r\\n', 'output': ['NO']}, {'input': '-48 -92\\r\\n59 -39\\r\\n-45 14\\r\\n', 'output': ['NO']}, {'input': '95 -13\\r\\n22 -36\\r\\n-25 -60\\r\\n', 'output': ['NO']}, {'input': '81 -91\\r\\n88 91\\r\\n-90 -77\\r\\n', 'output': ['NO']}, {'input': '281 -914\\r\\n-217 113\\r\\n479 329\\r\\n', 'output': ['NO']}, {'input': '620 514\\r\\n-276 966\\r\\n578 106\\r\\n', 'output': ['NO']}, {'input': '-253 -283\\r\\n-400 834\\r\\n718 -701\\r\\n', 'output': ['NO']}, {'input': '478 884\\r\\n418 -713\\r\\n-704 -961\\r\\n', 'output': ['NO']}, {'input': '-380 -712\\r\\n-263 -104\\r\\n187 -329\\r\\n', 'output': ['NO']}, {'input': '-2919 -7389\\r\\n-4955 -1807\\r\\n2103 9400\\r\\n', 'output': ['NO']}, {'input': '6040 9662\\r\\n1903 7813\\r\\n5296 8638\\r\\n', 'output': ['NO']}, {'input': '-6008 -6748\\r\\n-7106 -5319\\r\\n-1940 8048\\r\\n', 'output': ['NO']}, {'input': '-2171 -9855\\r\\n4255 -3857\\r\\n6446 9559\\r\\n', 'output': ['NO']}, {'input': '-8916 9282\\r\\n2666 2344\\r\\n9109 -2730\\r\\n', 'output': ['NO']}, {'input': '-52856 -58459\\r\\n-41878 81991\\r\\n-22821 59850\\r\\n', 'output': ['NO']}, {'input': '10327 -86117\\r\\n-51156 -26888\\r\\n-41007 27453\\r\\n', 'output': ['NO']}, {'input': '-46921 46529\\r\\n87797 -73235\\r\\n18213 -86569\\r\\n', 'output': ['NO']}, {'input': '-66381 86177\\r\\n24332 -47590\\r\\n-57592 80499\\r\\n', 'output': ['NO']}, {'input': '-69415 74546\\r\\n37868 -89407\\r\\n19505 -59846\\r\\n', 'output': ['NO']}, {'input': '-817674 316187\\r\\n-934134 660884\\r\\n-297136 -482732\\r\\n', 'output': ['NO']}, {'input': '-127066 941778\\r\\n-654926 -838416\\r\\n809821 -229819\\r\\n', 'output': ['NO']}, {'input': '251893 526074\\r\\n593818 288991\\r\\n-120613 211128\\r\\n', 'output': ['NO']}, {'input': '910801 387995\\r\\n-846325 167413\\r\\n-425681 -149086\\r\\n', 'output': ['NO']}, {'input': '769260 131679\\r\\n-399548 -620680\\r\\n-439456 -164378\\r\\n', 'output': ['NO']}, {'input': '4931249 7448503\\r\\n8740191 1123509\\r\\n4410817 -3494433\\r\\n', 'output': ['NO']}, {'input': '6752575 4525855\\r\\n-2269760 5249721\\r\\n7718280 -5550799\\r\\n', 'output': ['NO']}, {'input': '9121753 -1624238\\r\\n1358642 -7305098\\r\\n9182854 -2204498\\r\\n', 'output': ['NO']}, {'input': '-8540887 -7511495\\r\\n-2659834 -6893955\\r\\n8115011 -3482324\\r\\n', 'output': ['NO']}, {'input': '-4664203 -2707147\\r\\n7039468 5543778\\r\\n5854600 -7808563\\r\\n', 'output': ['NO']}, {'input': '-33622572 -65473509\\r\\n-54144104 -59861983\\r\\n89814248 47623606\\r\\n', 'output': ['NO']}, {'input': '-75629161 -68114618\\r\\n23285096 90997125\\r\\n84795646 72358903\\r\\n', 'output': ['NO']}, {'input': '-79956125 -88524398\\r\\n10949698 32312326\\r\\n-76024701 -77225990\\r\\n', 'output': ['NO']}, {'input': '26164297 21666711\\r\\n-20848219 -49928045\\r\\n-36819763 26811563\\r\\n', 'output': ['NO']}, {'input': '98219518 -66590186\\r\\n14970849 -24409139\\r\\n82951915 43915349\\r\\n', 'output': ['NO']}, {'input': '67195377 58333196\\r\\n-60739152 -69557068\\r\\n-82003989 74825425\\r\\n', 'output': ['NO']}, {'input': '92141071 -48275413\\r\\n-47968469 -13277723\\r\\n-15839680 51548907\\r\\n', 'output': ['NO']}, {'input': '82237071 -62729681\\r\\n45778244 -73153917\\r\\n25235041 83636828\\r\\n', 'output': ['NO']}, {'input': '82539131 17433579\\r\\n-56091046 68716401\\r\\n-73706000 41779060\\r\\n', 'output': ['NO']}, {'input': '-21570525 17439241\\r\\n-47857043 39456884\\r\\n-36121539 69473879\\r\\n', 'output': ['NO']}, {'input': '-38 -99\\r\\n76 43\\r\\n53 -84\\r\\n', 'output': ['NO']}, {'input': '-52 0\\r\\n-60 -50\\r\\n-47 91\\r\\n', 'output': ['NO']}, {'input': '-53 30\\r\\n-14 -19\\r\\n-61 11\\r\\n', 'output': ['NO']}, {'input': '60 55\\r\\n-88 -38\\r\\n0 59\\r\\n', 'output': ['NO']}, {'input': '89 55\\r\\n-13 27\\r\\n-13 -81\\r\\n', 'output': ['NO']}, {'input': '76 73\\r\\n82 -92\\r\\n-95 95\\r\\n', 'output': ['NO']}, {'input': '-81 57\\r\\n-96 0\\r\\n-73 -58\\r\\n', 'output': ['NO']}, {'input': '0 45\\r\\n42 -47\\r\\n-51 -82\\r\\n', 'output': ['NO']}, {'input': '16 39\\r\\n95 18\\r\\n39 -64\\r\\n', 'output': ['NO']}, {'input': '-23 36\\r\\n-72 0\\r\\n44 -60\\r\\n', 'output': ['NO']}, {'input': '57 43\\r\\n58 -54\\r\\n-43 0\\r\\n', 'output': ['NO']}, {'input': '51 77\\r\\n-9 81\\r\\n0 79\\r\\n', 'output': ['NO']}, {'input': '0 14\\r\\n88 0\\r\\n88 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n48 0\\r\\n-62 68\\r\\n', 'output': ['NO']}, {'input': '-35 -90\\r\\n0 -42\\r\\n-8 -60\\r\\n', 'output': ['NO']}, {'input': '59 0\\r\\n84 -28\\r\\n0 58\\r\\n', 'output': ['NO']}, {'input': '10 -15\\r\\n23 0\\r\\n88 -36\\r\\n', 'output': ['NO']}, {'input': '-66 -34\\r\\n59 -38\\r\\n13 0\\r\\n', 'output': ['NO']}, {'input': '0 -14\\r\\n80 94\\r\\n-14 15\\r\\n', 'output': ['NO']}, {'input': '-28 0\\r\\n0 43\\r\\n0 -51\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n-30010581 33889813\\r\\n12862004 15575384\\r\\n', 'output': ['NO']}, {'input': '94993760 -37786635\\r\\n-75326491 -21534927\\r\\n77949983 95218547\\r\\n', 'output': ['NO']}, {'input': '72913933 0\\r\\n54300106 60510850\\r\\n32295823 -60694017\\r\\n', 'output': ['NO']}, {'input': '0 -77922994\\r\\n47873382 0\\r\\n-48532375 -33729248\\r\\n', 'output': ['NO']}, {'input': '-50600641 25410541\\r\\n0 80575245\\r\\n0 62979800\\r\\n', 'output': ['NO']}, {'input': '-34280877 -82070958\\r\\n66030914 -52671703\\r\\n0 -90987154\\r\\n', 'output': ['NO']}, {'input': '27523869 0\\r\\n52900492 0\\r\\n33031150 -65488267\\r\\n', 'output': ['NO']}, {'input': '69226391 60708120\\r\\n43106396 25795293\\r\\n80380957 88577789\\r\\n', 'output': ['NO']}, {'input': '0 40072438\\r\\n-61016486 88561432\\r\\n28431496 60485628\\r\\n', 'output': ['NO']}, {'input': '0 24078959\\r\\n75842668 -56466325\\r\\n-64025705 12045125\\r\\n', 'output': ['NO']}, {'input': '24334185 -27189752\\r\\n0 -47230185\\r\\n0 -37588021\\r\\n', 'output': ['NO']}, {'input': '45479363 56862079\\r\\n28029163 0\\r\\n-38736303 59867108\\r\\n', 'output': ['NO']}, {'input': '-66738889 -24309585\\r\\n-39387414 -42921545\\r\\n-10462276 0\\r\\n', 'output': ['NO']}, {'input': '-95534030 -14392539\\r\\n-89751090 79655267\\r\\n-77491839 40745315\\r\\n', 'output': ['NO']}, {'input': '-48666683 22046293\\r\\n77649947 84819904\\r\\n-32803712 -99366118\\r\\n', 'output': ['NO']}, {'input': '10150745 93724033\\r\\n-59625481 -18232739\\r\\n34384941 -28147896\\r\\n', 'output': ['NO']}, {'input': '-12344578 -26470996\\r\\n0 -25186906\\r\\n-11572514 -38120367\\r\\n', 'output': ['NO']}, {'input': '-59220368 0\\r\\n0 -75968891\\r\\n0 74081590\\r\\n', 'output': ['NO']}, {'input': '-78038627 -49761049\\r\\n0 22143739\\r\\n0 -60448485\\r\\n', 'output': ['NO']}, {'input': '80358706 0\\r\\n23898082 -87631921\\r\\n-48798084 88174414\\r\\n', 'output': ['NO']}, {'input': '10 13\\r\\n13 10\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n10 13\\r\\n10 13\\r\\n', 'output': ['YES']}, {'input': '10 13\\r\\n0 0\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '10 13\\r\\n-10 -13\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '10 13\\r\\n-13 10\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n1 0\\r\\n100000000 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n1 1\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['YES']}, {'input': '100000000 0\\r\\n1 0\\r\\n100000000 0\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n1 1\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n100000000 99999999\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['YES']}, {'input': '100000000 100000000\\r\\n100000000 100000000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '5491 -1888\\r\\n58611137 -17279700\\r\\n5629 -7705\\r\\n', 'output': ['YES']}, {'input': '6791 1587\\r\\n23543337 24784850\\r\\n3970 2327\\r\\n', 'output': ['YES']}, {'input': '1214 8046\\r\\n84729946 38445218\\r\\n3488 -5838\\r\\n', 'output': ['YES']}, {'input': '-8725 -6466\\r\\n77278594 -3622341\\r\\n9344 -1256\\r\\n', 'output': ['YES']}, {'input': '-5922 -2466\\r\\n-46708374 -71085154\\r\\n-9882 298\\r\\n', 'output': ['YES']}, {'input': '4560 -6056\\r\\n97943322 -20616116\\r\\n-1107 -5440\\r\\n', 'output': ['YES']}, {'input': '-5645 2118\\r\\n-23770935 62615171\\r\\n-2080 9473\\r\\n', 'output': ['YES']}, {'input': '2630 8069\\r\\n-75372166 10085837\\r\\n-781 5563\\r\\n', 'output': ['YES']}, {'input': '-2588 9699\\r\\n50743921 -45114432\\r\\n-5288 -7358\\r\\n', 'output': ['YES']}, {'input': '6889 9158\\r\\n-843345 89332306\\r\\n7495 518\\r\\n', 'output': ['YES']}, {'input': '-2037 -1006\\r\\n-13301683 -83185771\\r\\n-3487 -4590\\r\\n', 'output': ['YES']}, {'input': '-925 -1240\\r\\n25904140 -92743662\\r\\n-8028 -2933\\r\\n', 'output': ['YES']}, {'input': '-573 5611\\r\\n-88934372 16274202\\r\\n-689 9294\\r\\n', 'output': ['YES']}, {'input': '-2859 7599\\r\\n37114911 -75750711\\r\\n-9150 -7398\\r\\n', 'output': ['YES']}, {'input': '-9234 9520\\r\\n58867682 17319702\\r\\n2273 -5831\\r\\n', 'output': ['YES']}, {'input': '3411 2674\\r\\n-21536783 -33506984\\r\\n-8254 -3778\\r\\n', 'output': ['YES']}, {'input': '1778735 -1803902\\r\\n-92875004 -2966747\\r\\n-4125460 1149178\\r\\n', 'output': ['YES']}, {'input': '-2413874 4166580\\r\\n83681508 25911924\\r\\n8615149 -6396049\\r\\n', 'output': ['YES']}, {'input': '5987456 -1627274\\r\\n-45083510 25782192\\r\\n-758074 971006\\r\\n', 'output': ['YES']}, {'input': '-881780 8157586\\r\\n-83355045 -86221641\\r\\n-5080144 1016625\\r\\n', 'output': ['YES']}, {'input': '836292 -1555463\\r\\n44451624 -63102407\\r\\n-7051275 -9619647\\r\\n', 'output': ['YES']}, {'input': '-5493123 4007625\\r\\n-49191721 -31674255\\r\\n-9754636 6418706\\r\\n', 'output': ['YES']}, {'input': '-2797960 2819364\\r\\n59202462 71529306\\r\\n7799041 -4640234\\r\\n', 'output': ['YES']}, {'input': '-7355750 -5710643\\r\\n-48075697 25746997\\r\\n-3569463 3650928\\r\\n', 'output': ['YES']}, {'input': '2517677 8638224\\r\\n-75757217 -17117074\\r\\n-2847910 1342478\\r\\n', 'output': ['YES']}, {'input': '-1782346 -522853\\r\\n56023653 37655619\\r\\n7455445 -936314\\r\\n', 'output': ['YES']}, {'input': '3922510 4979687\\r\\n-83613487 73792320\\r\\n-2355010 7196240\\r\\n', 'output': ['YES']}, {'input': '-2911250 -3788914\\r\\n9975544 20015444\\r\\n7278331 4185016\\r\\n', 'output': ['YES']}, {'input': '9495309 -4445256\\r\\n66581093 -48831427\\r\\n5864682 -8016505\\r\\n', 'output': ['YES']}, {'input': '-6389242 -2092524\\r\\n-18806778 85154882\\r\\n8457769 5141401\\r\\n', 'output': ['YES']}, {'input': '-6223066 -5334825\\r\\n36109780 -5416931\\r\\n3246899 -4890875\\r\\n', 'output': ['YES']}, {'input': '-1334950 3309875\\r\\n-20438919 -45390492\\r\\n-722222 280804\\r\\n', 'output': ['YES']}, {'input': '122542 -4826228\\r\\n-20855162 89301242\\r\\n8917870 2568139\\r\\n', 'output': ['YES']}, {'input': '-4662151 6642823\\r\\n-620983 29911124\\r\\n6914655 -1204368\\r\\n', 'output': ['YES']}, {'input': '806224 -7075643\\r\\n94593948 -33094579\\r\\n-540130 -5612242\\r\\n', 'output': ['YES']}, {'input': '2370720 9260730\\r\\n-31929898 43611588\\r\\n2817748 6788032\\r\\n', 'output': ['YES']}, {'input': '5 -12\\r\\n-47316040 -62956553\\r\\n-7 0\\r\\n', 'output': ['YES']}, {'input': '-7 0\\r\\n-51538008 -92285620\\r\\n-3 0\\r\\n', 'output': ['YES']}, {'input': '-12 9\\r\\n21015609 49124671\\r\\n3 2\\r\\n', 'output': ['YES']}, {'input': '-11 -10\\r\\n-1042937 89231497\\r\\n0 9\\r\\n', 'output': ['YES']}, {'input': '-3 11\\r\\n6154942 80496611\\r\\n5 0\\r\\n', 'output': ['YES']}, {'input': '-13 12\\r\\n826557 -90209918\\r\\n0 -5\\r\\n', 'output': ['YES']}, {'input': '-3 -9\\r\\n-72817057 -54284335\\r\\n-3 -1\\r\\n', 'output': ['YES']}, {'input': '-8 -8\\r\\n66949614 -53875176\\r\\n-2 -4\\r\\n', 'output': ['YES']}, {'input': '6 2\\r\\n-97096230 19770854\\r\\n-5 4\\r\\n', 'output': ['YES']}, {'input': '10 7\\r\\n91660376 -58581376\\r\\n0 -7\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999997\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999997\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '-100000000 -100000000\\r\\n100000000 100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '32 34\\r\\n-50070000 21003000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n100000000 0\\r\\n1 2\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n1 2\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n4 2\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '100000000 100000000\\r\\n0 0\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n10000000 10000000\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '1 2\\r\\n-2 1\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n1 -1\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n-63411382 -42720436\\r\\n123456 543253\\r\\n', 'output': ['YES']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nstruct point {\n  int x, y;\n  point() {}\n  point(int _x, int _y) { x = _x, y = _y; }\n  point operator-(const point &a) const {\n    return point(x - a.x, y - a.y);\n  }\n  point operator+(const point &a) const {\n    return point(x + a.x, y + a.y);\n  }\n  int operator*(const point &a) const { return x * a.y - a.x * y; }\n};\nconst int maxn = 1005;\nint main() {\n  point a, b, c;\n  cin >> a.x >> a.y >> b.x >> b.y >> c.x >> c.y;\n  int a_, b_, c_;\n  a_ = a.x * a.x + a.y * a.y;\n  b_ = b.x * b.x + b.y * b.y;\n  c_ = c.x * c.x + c.y * c.y;\n  int t1 = b * c, t2 = b * a, t3 = c * a;\n  if (b_ == 0 && c_ == 0 && t1 == 0)\n    cout << \"YES\" << endl;\n  else if (t1!= 0) {\n    if ((b_.y * t3 < b_.x * t2 || b_.x * t3 > b_.y * t2) &&\n        (c_.y * t2 < c_.x * t3 || c_.x * t2 > c_.y * t3))\n      cout << \"YES\" << endl;\n    else\n      cout << \"NO\" << endl;\n  } else\n    cout << (a_ == b_ && c_ == 0? \"YES\" : \"NO\") << endl;\n  return 0;\n}\n"}
{"src_uid": "1590da32b7e64d0462550923cce34355", "id": 45, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '2\\r\\n1 2 1\\r\\n', 'output': ['1.0\\r\\n']}, {'input': '4\\r\\n1 3 2\\r\\n4 2 1\\r\\n3 2 3\\r\\n', 'output': ['4.333333333333334\\r\\n']}, {'input': '5\\r\\n1 2 1\\r\\n1 3 1\\r\\n1 4 1\\r\\n1 5 1\\r\\n', 'output': ['4.0\\r\\n']}, {'input': '4\\r\\n1 2 1\\r\\n2 3 1\\r\\n2 4 1\\r\\n', 'output': ['2.333333333333333\\r\\n']}, {'input': '4\\r\\n1 2 1\\r\\n1 3 1\\r\\n3 4 1\\r\\n', 'output': ['2.6666666666666665\\r\\n']}, {'input': '6\\r\\n1 2 4\\r\\n2 3 2\\r\\n1 4 4\\r\\n4 5 2\\r\\n5 6 1\\r\\n', 'output': ['11.0\\r\\n']}, {'input': '9\\r\\n1 4 1\\r\\n1 5 1\\r\\n2 5 2\\r\\n3 5 2\\r\\n5 7 2\\r\\n4 6 2\\r\\n8 4 2\\r\\n9 4 1\\r\\n', 'output': ['10.875\\r\\n']}, {'input': '11\\r\\n1 2 4\\r\\n1 3 4\\r\\n3 4 1\\r\\n1 5 4\\r\\n5 6 1\\r\\n6 7 1\\r\\n1 8 4\\r\\n8 9 1\\r\\n9 10 1\\r\\n10 11 1\\r\\n', 'output': ['18.0\\r\\n']}, {'input': '13\\r\\n1 2 1\\r\\n2 3 2\\r\\n3 4 3\\r\\n4 5 4\\r\\n5 6 5\\r\\n6 7 6\\r\\n1 8 6\\r\\n2 9 5\\r\\n3 10 4\\r\\n4 11 3\\r\\n5 12 2\\r\\n6 13 1\\r\\n', 'output': ['28.0\\r\\n']}, {'input': '5\\r\\n1 2 1\\r\\n1 3 1\\r\\n1 4 1\\r\\n1 5 1\\r\\n', 'output': ['4.0\\r\\n']}, {'input': '8\\r\\n1 2 1\\r\\n2 3 2\\r\\n3 4 8\\r\\n1 5 1\\r\\n5 6 2\\r\\n6 7 3\\r\\n7 8 4\\r\\n', 'output': ['13.571428571428571\\r\\n']}, {'input': '7\\r\\n4 1 869\\r\\n5 2 160\\r\\n6 3 411\\r\\n3 2 228\\r\\n2 1 560\\r\\n1 7 811\\r\\n', 'output': ['2107.5\\r\\n']}, {'input': '5\\r\\n3 1 709\\r\\n4 1 97\\r\\n1 2 555\\r\\n2 5 469\\r\\n', 'output': ['1253.75\\r\\n']}, {'input': '5\\r\\n3 1 910\\r\\n4 1 987\\r\\n1 2 812\\r\\n2 5 734\\r\\n', 'output': ['3064.75\\r\\n']}, {'input': '3\\r\\n2 1 182\\r\\n1 3 352\\r\\n', 'output': ['449.0\\r\\n']}, {'input': '2\\r\\n1 2 550\\r\\n', 'output': ['550.0\\r\\n']}, {'input': '6\\r\\n4 1 233\\r\\n5 2 76\\r\\n2 1 455\\r\\n1 3 725\\r\\n3 6 444\\r\\n', 'output': ['1420.2\\r\\n']}, {'input': '7\\r\\n3 1 707\\r\\n4 2 301\\r\\n5 2 541\\r\\n2 1 794\\r\\n6 1 372\\r\\n1 7 259\\r\\n', 'output': ['2333.6666666666665\\r\\n']}, {'input': '2\\r\\n1 2 942\\r\\n', 'output': ['942.0\\r\\n']}, {'input': '7\\r\\n4 1 295\\r\\n5 2 624\\r\\n6 2 664\\r\\n2 1 722\\r\\n1 3 740\\r\\n3 7 979\\r\\n', 'output': ['3074.3333333333335\\r\\n']}, {'input': '7\\r\\n3 1 763\\r\\n1 2 303\\r\\n4 2 234\\r\\n5 2 109\\r\\n6 2 746\\r\\n2 7 853\\r\\n', 'output': ['1965.3333333333333\\r\\n']}, {'input': '23\\r\\n6 1 760\\r\\n7 1 15\\r\\n8 2 341\\r\\n9 2 322\\r\\n10 2 51\\r\\n11 3 859\\r\\n12 3 868\\r\\n13 4 755\\r\\n14 2 234\\r\\n15 1 980\\r\\n16 3 515\\r\\n17 4 781\\r\\n4 3 37\\r\\n18 2 389\\r\\n19 3 691\\r\\n20 2 189\\r\\n21 5 819\\r\\n5 1 529\\r\\n1 2 230\\r\\n22 2 570\\r\\n2 3 400\\r\\n3 23 45\\r\\n', 'output': ['6894.5\\r\\n']}, {'input': '42\\r\\n10 1 557\\r\\n11 1 743\\r\\n12 2 265\\r\\n13 1 824\\r\\n14 3 802\\r\\n15 2 760\\r\\n16 2 525\\r\\n17 2 572\\r\\n18 3 985\\r\\n19 1 7\\r\\n20 3 359\\r\\n21 4 423\\r\\n22 1 192\\r\\n23 2 386\\r\\n24 4 397\\r\\n25 2 862\\r\\n26 3 664\\r\\n27 1 643\\r\\n28 4 312\\r\\n29 1 503\\r\\n30 3 996\\r\\n31 3 733\\r\\n32 3 373\\r\\n3 5 931\\r\\n33 6 829\\r\\n34 6 527\\r\\n35 2 324\\r\\n2 6 878\\r\\n6 4 135\\r\\n36 1 766\\r\\n37 7 424\\r\\n38 7 1000\\r\\n39 8 836\\r\\n8 4 192\\r\\n40 1 483\\r\\n41 5 739\\r\\n5 1 59\\r\\n1 4 954\\r\\n4 7 717\\r\\n7 9 476\\r\\n9 42 485\\r\\n', 'output': ['19675.51219512195\\r\\n']}, {'input': '23\\r\\n7 1 563\\r\\n8 1 828\\r\\n9 2 12\\r\\n10 1 48\\r\\n11 1 678\\r\\n12 3 705\\r\\n13 2 231\\r\\n14 3 446\\r\\n15 4 374\\r\\n16 4 321\\r\\n17 5 370\\r\\n18 3 62\\r\\n19 1 193\\r\\n20 6 888\\r\\n21 1 674\\r\\n1 6 406\\r\\n6 3 554\\r\\n3 4 924\\r\\n4 2 102\\r\\n22 2 278\\r\\n2 5 648\\r\\n5 23 164\\r\\n', 'output': ['6377.954545454545\\r\\n']}, {'input': '31\\r\\n7 1 494\\r\\n8 2 887\\r\\n9 3 371\\r\\n10 3 121\\r\\n11 1 638\\r\\n12 4 513\\r\\n13 4 621\\r\\n14 3 65\\r\\n15 2 16\\r\\n16 5 716\\r\\n17 5 527\\r\\n18 4 451\\r\\n19 1 45\\r\\n20 2 736\\r\\n21 5 461\\r\\n22 3 318\\r\\n23 4 123\\r\\n24 2 340\\r\\n25 4 321\\r\\n26 1 457\\r\\n1 3 949\\r\\n27 6 368\\r\\n6 5 758\\r\\n5 3 145\\r\\n28 3 158\\r\\n29 3 43\\r\\n3 2 597\\r\\n2 4 287\\r\\n30 4 20\\r\\n4 31 730\\r\\n', 'output': ['8916.633333333333\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX_N = 100000;\nconst int MAX_T = 1000;\nvector<pair<int, int> > edge[MAX_N + 1];\nint n, m;\ndouble dp[MAX_N + 1][MAX_T + 1];\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n - 1; i++) {\n    int x, y, t;\n    cin >> x >> y >> t;\n    edge[x].push_back({y, t});\n    edge[y].push_back({x, t});\n  }\n  dp[1][0] = 0;\n  for (int i = 1; i <= n; i++)\n    for (int t = 0; t <= MAX_T; t++)\n      for (auto j : edge[i])\n        dp[j.first][t + j.second] = max(dp[j.first][t + j.second],\n                                          dp[i][t] + 1.0 / t);\n  double sum = 0;\n  for (int i = 2; i <= n; i++) sum += dp[i][1];\n  printf(\"%.12lf\\n\", sum);\n  return 0;\n}\n"}
{"src_uid": "1590da32b7e64d0462550923cce34355", "id": 45, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '2\\r\\n1 2 1\\r\\n', 'output': ['1.0\\r\\n']}, {'input': '4\\r\\n1 3 2\\r\\n4 2 1\\r\\n3 2 3\\r\\n', 'output': ['4.333333333333334\\r\\n']}, {'input': '5\\r\\n1 2 1\\r\\n1 3 1\\r\\n1 4 1\\r\\n1 5 1\\r\\n', 'output': ['4.0\\r\\n']}, {'input': '4\\r\\n1 2 1\\r\\n2 3 1\\r\\n2 4 1\\r\\n', 'output': ['2.333333333333333\\r\\n']}, {'input': '4\\r\\n1 2 1\\r\\n1 3 1\\r\\n3 4 1\\r\\n', 'output': ['2.6666666666666665\\r\\n']}, {'input': '6\\r\\n1 2 4\\r\\n2 3 2\\r\\n1 4 4\\r\\n4 5 2\\r\\n5 6 1\\r\\n', 'output': ['11.0\\r\\n']}, {'input': '9\\r\\n1 4 1\\r\\n1 5 1\\r\\n2 5 2\\r\\n3 5 2\\r\\n5 7 2\\r\\n4 6 2\\r\\n8 4 2\\r\\n9 4 1\\r\\n', 'output': ['10.875\\r\\n']}, {'input': '11\\r\\n1 2 4\\r\\n1 3 4\\r\\n3 4 1\\r\\n1 5 4\\r\\n5 6 1\\r\\n6 7 1\\r\\n1 8 4\\r\\n8 9 1\\r\\n9 10 1\\r\\n10 11 1\\r\\n', 'output': ['18.0\\r\\n']}, {'input': '13\\r\\n1 2 1\\r\\n2 3 2\\r\\n3 4 3\\r\\n4 5 4\\r\\n5 6 5\\r\\n6 7 6\\r\\n1 8 6\\r\\n2 9 5\\r\\n3 10 4\\r\\n4 11 3\\r\\n5 12 2\\r\\n6 13 1\\r\\n', 'output': ['28.0\\r\\n']}, {'input': '5\\r\\n1 2 1\\r\\n1 3 1\\r\\n1 4 1\\r\\n1 5 1\\r\\n', 'output': ['4.0\\r\\n']}, {'input': '8\\r\\n1 2 1\\r\\n2 3 2\\r\\n3 4 8\\r\\n1 5 1\\r\\n5 6 2\\r\\n6 7 3\\r\\n7 8 4\\r\\n', 'output': ['13.571428571428571\\r\\n']}, {'input': '7\\r\\n4 1 869\\r\\n5 2 160\\r\\n6 3 411\\r\\n3 2 228\\r\\n2 1 560\\r\\n1 7 811\\r\\n', 'output': ['2107.5\\r\\n']}, {'input': '5\\r\\n3 1 709\\r\\n4 1 97\\r\\n1 2 555\\r\\n2 5 469\\r\\n', 'output': ['1253.75\\r\\n']}, {'input': '5\\r\\n3 1 910\\r\\n4 1 987\\r\\n1 2 812\\r\\n2 5 734\\r\\n', 'output': ['3064.75\\r\\n']}, {'input': '3\\r\\n2 1 182\\r\\n1 3 352\\r\\n', 'output': ['449.0\\r\\n']}, {'input': '2\\r\\n1 2 550\\r\\n', 'output': ['550.0\\r\\n']}, {'input': '6\\r\\n4 1 233\\r\\n5 2 76\\r\\n2 1 455\\r\\n1 3 725\\r\\n3 6 444\\r\\n', 'output': ['1420.2\\r\\n']}, {'input': '7\\r\\n3 1 707\\r\\n4 2 301\\r\\n5 2 541\\r\\n2 1 794\\r\\n6 1 372\\r\\n1 7 259\\r\\n', 'output': ['2333.6666666666665\\r\\n']}, {'input': '2\\r\\n1 2 942\\r\\n', 'output': ['942.0\\r\\n']}, {'input': '7\\r\\n4 1 295\\r\\n5 2 624\\r\\n6 2 664\\r\\n2 1 722\\r\\n1 3 740\\r\\n3 7 979\\r\\n', 'output': ['3074.3333333333335\\r\\n']}, {'input': '7\\r\\n3 1 763\\r\\n1 2 303\\r\\n4 2 234\\r\\n5 2 109\\r\\n6 2 746\\r\\n2 7 853\\r\\n', 'output': ['1965.3333333333333\\r\\n']}, {'input': '23\\r\\n6 1 760\\r\\n7 1 15\\r\\n8 2 341\\r\\n9 2 322\\r\\n10 2 51\\r\\n11 3 859\\r\\n12 3 868\\r\\n13 4 755\\r\\n14 2 234\\r\\n15 1 980\\r\\n16 3 515\\r\\n17 4 781\\r\\n4 3 37\\r\\n18 2 389\\r\\n19 3 691\\r\\n20 2 189\\r\\n21 5 819\\r\\n5 1 529\\r\\n1 2 230\\r\\n22 2 570\\r\\n2 3 400\\r\\n3 23 45\\r\\n', 'output': ['6894.5\\r\\n']}, {'input': '42\\r\\n10 1 557\\r\\n11 1 743\\r\\n12 2 265\\r\\n13 1 824\\r\\n14 3 802\\r\\n15 2 760\\r\\n16 2 525\\r\\n17 2 572\\r\\n18 3 985\\r\\n19 1 7\\r\\n20 3 359\\r\\n21 4 423\\r\\n22 1 192\\r\\n23 2 386\\r\\n24 4 397\\r\\n25 2 862\\r\\n26 3 664\\r\\n27 1 643\\r\\n28 4 312\\r\\n29 1 503\\r\\n30 3 996\\r\\n31 3 733\\r\\n32 3 373\\r\\n3 5 931\\r\\n33 6 829\\r\\n34 6 527\\r\\n35 2 324\\r\\n2 6 878\\r\\n6 4 135\\r\\n36 1 766\\r\\n37 7 424\\r\\n38 7 1000\\r\\n39 8 836\\r\\n8 4 192\\r\\n40 1 483\\r\\n41 5 739\\r\\n5 1 59\\r\\n1 4 954\\r\\n4 7 717\\r\\n7 9 476\\r\\n9 42 485\\r\\n', 'output': ['19675.51219512195\\r\\n']}, {'input': '23\\r\\n7 1 563\\r\\n8 1 828\\r\\n9 2 12\\r\\n10 1 48\\r\\n11 1 678\\r\\n12 3 705\\r\\n13 2 231\\r\\n14 3 446\\r\\n15 4 374\\r\\n16 4 321\\r\\n17 5 370\\r\\n18 3 62\\r\\n19 1 193\\r\\n20 6 888\\r\\n21 1 674\\r\\n1 6 406\\r\\n6 3 554\\r\\n3 4 924\\r\\n4 2 102\\r\\n22 2 278\\r\\n2 5 648\\r\\n5 23 164\\r\\n', 'output': ['6377.954545454545\\r\\n']}, {'input': '31\\r\\n7 1 494\\r\\n8 2 887\\r\\n9 3 371\\r\\n10 3 121\\r\\n11 1 638\\r\\n12 4 513\\r\\n13 4 621\\r\\n14 3 65\\r\\n15 2 16\\r\\n16 5 716\\r\\n17 5 527\\r\\n18 4 451\\r\\n19 1 45\\r\\n20 2 736\\r\\n21 5 461\\r\\n22 3 318\\r\\n23 4 123\\r\\n24 2 340\\r\\n25 4 321\\r\\n26 1 457\\r\\n1 3 949\\r\\n27 6 368\\r\\n6 5 758\\r\\n5 3 145\\r\\n28 3 158\\r\\n29 3 43\\r\\n3 2 597\\r\\n2 4 287\\r\\n30 4 20\\r\\n4 31 730\\r\\n', 'output': ['8916.633333333333\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5;\nvector<pair<int, int>> d[N];\nint n, cnt, t, a, b;\ndouble ans;\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i < n; i++) {\n    scanf(\"%d %d %d\", &a, &b, &t);\n    d[a].push_back({t, b});\n    d[b].push_back({t, a});\n  }\n  cnt = t = 1;\n  while (1) {\n    ans += (t);\n    int x = d[cnt][0].second;\n    t += d[cnt][0].first;\n    for (int i = 0; i < d[cnt].size(); i++) {\n      if (d[cnt][i].second == x) {\n        d[cnt].erase(d[cnt].begin() + i);\n        break;\n      }\n    }\n    if (d[cnt].size() == 0) {\n      cout << fixed << setprecision(10) << ans << endl;\n      break;\n    }\n    cnt = x;\n  }\n}\n"}
{"src_uid": "1590da32b7e64d0462550923cce34355", "id": 45, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '2\\r\\n1 2 1\\r\\n', 'output': ['1.0\\r\\n']}, {'input': '4\\r\\n1 3 2\\r\\n4 2 1\\r\\n3 2 3\\r\\n', 'output': ['4.333333333333334\\r\\n']}, {'input': '5\\r\\n1 2 1\\r\\n1 3 1\\r\\n1 4 1\\r\\n1 5 1\\r\\n', 'output': ['4.0\\r\\n']}, {'input': '4\\r\\n1 2 1\\r\\n2 3 1\\r\\n2 4 1\\r\\n', 'output': ['2.333333333333333\\r\\n']}, {'input': '4\\r\\n1 2 1\\r\\n1 3 1\\r\\n3 4 1\\r\\n', 'output': ['2.6666666666666665\\r\\n']}, {'input': '6\\r\\n1 2 4\\r\\n2 3 2\\r\\n1 4 4\\r\\n4 5 2\\r\\n5 6 1\\r\\n', 'output': ['11.0\\r\\n']}, {'input': '9\\r\\n1 4 1\\r\\n1 5 1\\r\\n2 5 2\\r\\n3 5 2\\r\\n5 7 2\\r\\n4 6 2\\r\\n8 4 2\\r\\n9 4 1\\r\\n', 'output': ['10.875\\r\\n']}, {'input': '11\\r\\n1 2 4\\r\\n1 3 4\\r\\n3 4 1\\r\\n1 5 4\\r\\n5 6 1\\r\\n6 7 1\\r\\n1 8 4\\r\\n8 9 1\\r\\n9 10 1\\r\\n10 11 1\\r\\n', 'output': ['18.0\\r\\n']}, {'input': '13\\r\\n1 2 1\\r\\n2 3 2\\r\\n3 4 3\\r\\n4 5 4\\r\\n5 6 5\\r\\n6 7 6\\r\\n1 8 6\\r\\n2 9 5\\r\\n3 10 4\\r\\n4 11 3\\r\\n5 12 2\\r\\n6 13 1\\r\\n', 'output': ['28.0\\r\\n']}, {'input': '5\\r\\n1 2 1\\r\\n1 3 1\\r\\n1 4 1\\r\\n1 5 1\\r\\n', 'output': ['4.0\\r\\n']}, {'input': '8\\r\\n1 2 1\\r\\n2 3 2\\r\\n3 4 8\\r\\n1 5 1\\r\\n5 6 2\\r\\n6 7 3\\r\\n7 8 4\\r\\n', 'output': ['13.571428571428571\\r\\n']}, {'input': '7\\r\\n4 1 869\\r\\n5 2 160\\r\\n6 3 411\\r\\n3 2 228\\r\\n2 1 560\\r\\n1 7 811\\r\\n', 'output': ['2107.5\\r\\n']}, {'input': '5\\r\\n3 1 709\\r\\n4 1 97\\r\\n1 2 555\\r\\n2 5 469\\r\\n', 'output': ['1253.75\\r\\n']}, {'input': '5\\r\\n3 1 910\\r\\n4 1 987\\r\\n1 2 812\\r\\n2 5 734\\r\\n', 'output': ['3064.75\\r\\n']}, {'input': '3\\r\\n2 1 182\\r\\n1 3 352\\r\\n', 'output': ['449.0\\r\\n']}, {'input': '2\\r\\n1 2 550\\r\\n', 'output': ['550.0\\r\\n']}, {'input': '6\\r\\n4 1 233\\r\\n5 2 76\\r\\n2 1 455\\r\\n1 3 725\\r\\n3 6 444\\r\\n', 'output': ['1420.2\\r\\n']}, {'input': '7\\r\\n3 1 707\\r\\n4 2 301\\r\\n5 2 541\\r\\n2 1 794\\r\\n6 1 372\\r\\n1 7 259\\r\\n', 'output': ['2333.6666666666665\\r\\n']}, {'input': '2\\r\\n1 2 942\\r\\n', 'output': ['942.0\\r\\n']}, {'input': '7\\r\\n4 1 295\\r\\n5 2 624\\r\\n6 2 664\\r\\n2 1 722\\r\\n1 3 740\\r\\n3 7 979\\r\\n', 'output': ['3074.3333333333335\\r\\n']}, {'input': '7\\r\\n3 1 763\\r\\n1 2 303\\r\\n4 2 234\\r\\n5 2 109\\r\\n6 2 746\\r\\n2 7 853\\r\\n', 'output': ['1965.3333333333333\\r\\n']}, {'input': '23\\r\\n6 1 760\\r\\n7 1 15\\r\\n8 2 341\\r\\n9 2 322\\r\\n10 2 51\\r\\n11 3 859\\r\\n12 3 868\\r\\n13 4 755\\r\\n14 2 234\\r\\n15 1 980\\r\\n16 3 515\\r\\n17 4 781\\r\\n4 3 37\\r\\n18 2 389\\r\\n19 3 691\\r\\n20 2 189\\r\\n21 5 819\\r\\n5 1 529\\r\\n1 2 230\\r\\n22 2 570\\r\\n2 3 400\\r\\n3 23 45\\r\\n', 'output': ['6894.5\\r\\n']}, {'input': '42\\r\\n10 1 557\\r\\n11 1 743\\r\\n12 2 265\\r\\n13 1 824\\r\\n14 3 802\\r\\n15 2 760\\r\\n16 2 525\\r\\n17 2 572\\r\\n18 3 985\\r\\n19 1 7\\r\\n20 3 359\\r\\n21 4 423\\r\\n22 1 192\\r\\n23 2 386\\r\\n24 4 397\\r\\n25 2 862\\r\\n26 3 664\\r\\n27 1 643\\r\\n28 4 312\\r\\n29 1 503\\r\\n30 3 996\\r\\n31 3 733\\r\\n32 3 373\\r\\n3 5 931\\r\\n33 6 829\\r\\n34 6 527\\r\\n35 2 324\\r\\n2 6 878\\r\\n6 4 135\\r\\n36 1 766\\r\\n37 7 424\\r\\n38 7 1000\\r\\n39 8 836\\r\\n8 4 192\\r\\n40 1 483\\r\\n41 5 739\\r\\n5 1 59\\r\\n1 4 954\\r\\n4 7 717\\r\\n7 9 476\\r\\n9 42 485\\r\\n', 'output': ['19675.51219512195\\r\\n']}, {'input': '23\\r\\n7 1 563\\r\\n8 1 828\\r\\n9 2 12\\r\\n10 1 48\\r\\n11 1 678\\r\\n12 3 705\\r\\n13 2 231\\r\\n14 3 446\\r\\n15 4 374\\r\\n16 4 321\\r\\n17 5 370\\r\\n18 3 62\\r\\n19 1 193\\r\\n20 6 888\\r\\n21 1 674\\r\\n1 6 406\\r\\n6 3 554\\r\\n3 4 924\\r\\n4 2 102\\r\\n22 2 278\\r\\n2 5 648\\r\\n5 23 164\\r\\n', 'output': ['6377.954545454545\\r\\n']}, {'input': '31\\r\\n7 1 494\\r\\n8 2 887\\r\\n9 3 371\\r\\n10 3 121\\r\\n11 1 638\\r\\n12 4 513\\r\\n13 4 621\\r\\n14 3 65\\r\\n15 2 16\\r\\n16 5 716\\r\\n17 5 527\\r\\n18 4 451\\r\\n19 1 45\\r\\n20 2 736\\r\\n21 5 461\\r\\n22 3 318\\r\\n23 4 123\\r\\n24 2 340\\r\\n25 4 321\\r\\n26 1 457\\r\\n1 3 949\\r\\n27 6 368\\r\\n6 5 758\\r\\n5 3 145\\r\\n28 3 158\\r\\n29 3 43\\r\\n3 2 597\\r\\n2 4 287\\r\\n30 4 20\\r\\n4 31 730\\r\\n', 'output': ['8916.633333333333\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e5 + 10;\nconst int inf = 0x3f3f3f3f;\nstruct line {\n  int x1, y1;\n  double k;\n};\ndouble dis(int x, int y) {\n  if (x <= y)\n    return (double)(y - x);\n  else\n    return (double)((2 * maxn - y) - x);\n}\nint n;\ndouble f[maxn], g[maxn];\nline v[maxn];\nint a, b, t;\ndouble cnt;\nint main() {\n  scanf(\"%d\", &n);\n  cnt = 0;\n  for (int i = 0; i < n - 1; i++) {\n    scanf(\"%d%d%d\", &a, &b, &t);\n    a--, b--;\n    v[i].x1 = a, v[i].y1 = b, v[i].k = 0.5 * dis(a, b) / (double)t;\n    f[a] = g[a] = 1e9;\n  }\n  double ans = 0;\n  for (int i = 0; i < n; i++) {\n    double mi = 1e9;\n    for (int j = 0; j < n - 1; j++) {\n      mi = min(mi, f[v[j].x1] + v[j].k);\n    }\n    ans += mi;\n    for (int j = 0; j < n - 1; j++) {\n      f[v[j].y1] = min(f[v[j].y1], g[v[j].x1] + v[j].k);\n    }\n    for (int j = 0; j < n - 1; j++) {\n      g[v[j].y1] = min(g[v[j].y1], mi + v[j].k);\n    }\n  }\n  printf(\"%lf\\n\", ans / n);\n  return 0;\n}\n"}
{"src_uid": "1590da32b7e64d0462550923cce34355", "id": 45, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '2\\r\\n1 2 1\\r\\n', 'output': ['1.0\\r\\n']}, {'input': '4\\r\\n1 3 2\\r\\n4 2 1\\r\\n3 2 3\\r\\n', 'output': ['4.333333333333334\\r\\n']}, {'input': '5\\r\\n1 2 1\\r\\n1 3 1\\r\\n1 4 1\\r\\n1 5 1\\r\\n', 'output': ['4.0\\r\\n']}, {'input': '4\\r\\n1 2 1\\r\\n2 3 1\\r\\n2 4 1\\r\\n', 'output': ['2.333333333333333\\r\\n']}, {'input': '4\\r\\n1 2 1\\r\\n1 3 1\\r\\n3 4 1\\r\\n', 'output': ['2.6666666666666665\\r\\n']}, {'input': '6\\r\\n1 2 4\\r\\n2 3 2\\r\\n1 4 4\\r\\n4 5 2\\r\\n5 6 1\\r\\n', 'output': ['11.0\\r\\n']}, {'input': '9\\r\\n1 4 1\\r\\n1 5 1\\r\\n2 5 2\\r\\n3 5 2\\r\\n5 7 2\\r\\n4 6 2\\r\\n8 4 2\\r\\n9 4 1\\r\\n', 'output': ['10.875\\r\\n']}, {'input': '11\\r\\n1 2 4\\r\\n1 3 4\\r\\n3 4 1\\r\\n1 5 4\\r\\n5 6 1\\r\\n6 7 1\\r\\n1 8 4\\r\\n8 9 1\\r\\n9 10 1\\r\\n10 11 1\\r\\n', 'output': ['18.0\\r\\n']}, {'input': '13\\r\\n1 2 1\\r\\n2 3 2\\r\\n3 4 3\\r\\n4 5 4\\r\\n5 6 5\\r\\n6 7 6\\r\\n1 8 6\\r\\n2 9 5\\r\\n3 10 4\\r\\n4 11 3\\r\\n5 12 2\\r\\n6 13 1\\r\\n', 'output': ['28.0\\r\\n']}, {'input': '5\\r\\n1 2 1\\r\\n1 3 1\\r\\n1 4 1\\r\\n1 5 1\\r\\n', 'output': ['4.0\\r\\n']}, {'input': '8\\r\\n1 2 1\\r\\n2 3 2\\r\\n3 4 8\\r\\n1 5 1\\r\\n5 6 2\\r\\n6 7 3\\r\\n7 8 4\\r\\n', 'output': ['13.571428571428571\\r\\n']}, {'input': '7\\r\\n4 1 869\\r\\n5 2 160\\r\\n6 3 411\\r\\n3 2 228\\r\\n2 1 560\\r\\n1 7 811\\r\\n', 'output': ['2107.5\\r\\n']}, {'input': '5\\r\\n3 1 709\\r\\n4 1 97\\r\\n1 2 555\\r\\n2 5 469\\r\\n', 'output': ['1253.75\\r\\n']}, {'input': '5\\r\\n3 1 910\\r\\n4 1 987\\r\\n1 2 812\\r\\n2 5 734\\r\\n', 'output': ['3064.75\\r\\n']}, {'input': '3\\r\\n2 1 182\\r\\n1 3 352\\r\\n', 'output': ['449.0\\r\\n']}, {'input': '2\\r\\n1 2 550\\r\\n', 'output': ['550.0\\r\\n']}, {'input': '6\\r\\n4 1 233\\r\\n5 2 76\\r\\n2 1 455\\r\\n1 3 725\\r\\n3 6 444\\r\\n', 'output': ['1420.2\\r\\n']}, {'input': '7\\r\\n3 1 707\\r\\n4 2 301\\r\\n5 2 541\\r\\n2 1 794\\r\\n6 1 372\\r\\n1 7 259\\r\\n', 'output': ['2333.6666666666665\\r\\n']}, {'input': '2\\r\\n1 2 942\\r\\n', 'output': ['942.0\\r\\n']}, {'input': '7\\r\\n4 1 295\\r\\n5 2 624\\r\\n6 2 664\\r\\n2 1 722\\r\\n1 3 740\\r\\n3 7 979\\r\\n', 'output': ['3074.3333333333335\\r\\n']}, {'input': '7\\r\\n3 1 763\\r\\n1 2 303\\r\\n4 2 234\\r\\n5 2 109\\r\\n6 2 746\\r\\n2 7 853\\r\\n', 'output': ['1965.3333333333333\\r\\n']}, {'input': '23\\r\\n6 1 760\\r\\n7 1 15\\r\\n8 2 341\\r\\n9 2 322\\r\\n10 2 51\\r\\n11 3 859\\r\\n12 3 868\\r\\n13 4 755\\r\\n14 2 234\\r\\n15 1 980\\r\\n16 3 515\\r\\n17 4 781\\r\\n4 3 37\\r\\n18 2 389\\r\\n19 3 691\\r\\n20 2 189\\r\\n21 5 819\\r\\n5 1 529\\r\\n1 2 230\\r\\n22 2 570\\r\\n2 3 400\\r\\n3 23 45\\r\\n', 'output': ['6894.5\\r\\n']}, {'input': '42\\r\\n10 1 557\\r\\n11 1 743\\r\\n12 2 265\\r\\n13 1 824\\r\\n14 3 802\\r\\n15 2 760\\r\\n16 2 525\\r\\n17 2 572\\r\\n18 3 985\\r\\n19 1 7\\r\\n20 3 359\\r\\n21 4 423\\r\\n22 1 192\\r\\n23 2 386\\r\\n24 4 397\\r\\n25 2 862\\r\\n26 3 664\\r\\n27 1 643\\r\\n28 4 312\\r\\n29 1 503\\r\\n30 3 996\\r\\n31 3 733\\r\\n32 3 373\\r\\n3 5 931\\r\\n33 6 829\\r\\n34 6 527\\r\\n35 2 324\\r\\n2 6 878\\r\\n6 4 135\\r\\n36 1 766\\r\\n37 7 424\\r\\n38 7 1000\\r\\n39 8 836\\r\\n8 4 192\\r\\n40 1 483\\r\\n41 5 739\\r\\n5 1 59\\r\\n1 4 954\\r\\n4 7 717\\r\\n7 9 476\\r\\n9 42 485\\r\\n', 'output': ['19675.51219512195\\r\\n']}, {'input': '23\\r\\n7 1 563\\r\\n8 1 828\\r\\n9 2 12\\r\\n10 1 48\\r\\n11 1 678\\r\\n12 3 705\\r\\n13 2 231\\r\\n14 3 446\\r\\n15 4 374\\r\\n16 4 321\\r\\n17 5 370\\r\\n18 3 62\\r\\n19 1 193\\r\\n20 6 888\\r\\n21 1 674\\r\\n1 6 406\\r\\n6 3 554\\r\\n3 4 924\\r\\n4 2 102\\r\\n22 2 278\\r\\n2 5 648\\r\\n5 23 164\\r\\n', 'output': ['6377.954545454545\\r\\n']}, {'input': '31\\r\\n7 1 494\\r\\n8 2 887\\r\\n9 3 371\\r\\n10 3 121\\r\\n11 1 638\\r\\n12 4 513\\r\\n13 4 621\\r\\n14 3 65\\r\\n15 2 16\\r\\n16 5 716\\r\\n17 5 527\\r\\n18 4 451\\r\\n19 1 45\\r\\n20 2 736\\r\\n21 5 461\\r\\n22 3 318\\r\\n23 4 123\\r\\n24 2 340\\r\\n25 4 321\\r\\n26 1 457\\r\\n1 3 949\\r\\n27 6 368\\r\\n6 5 758\\r\\n5 3 145\\r\\n28 3 158\\r\\n29 3 43\\r\\n3 2 597\\r\\n2 4 287\\r\\n30 4 20\\r\\n4 31 730\\r\\n', 'output': ['8916.633333333333\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nstruct D {\n  int x, y, t;\n};\nvector<D> l;\nvector<vector<pair<int, double> > > dp(1000);\nint main() {\n  cin >> n;\n  l.resize(n - 1);\n  for (int i = 0; i < n - 1; i++) {\n    cin >> l[i].x >> l[i].y >> l[i].t;\n    l[i].x--;\n    l[i].y--;\n  }\n  dp[0].resize(n, make_pair(0, 0.0));\n  for (int i = 1; i <= 1000; i++) {\n    for (int j = 0; j < n; j++) {\n      if (dp[i - 1][j].first == 2) continue;\n      for (int k = 0; k < n; k++) {\n        double c = dp[i - 1][j].second;\n        if (j!= k) {\n          double s = (i - 1) * c + l[k].t;\n          pair<int, double> f = make_pair(dp[i - 1][j].first + 1, s);\n          pair<int, double> s2 = dp[i][k];\n          dp[i][k] = min(s2, f);\n        }\n      }\n    }\n  }\n  double ret = dp[1000][0].second;\n  cout.precision(10);\n  cout << fixed << ret / 2.0 << '\\n';\n  return 0;\n}\n"}
{"src_uid": "1590da32b7e64d0462550923cce34355", "id": 45, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '2\\r\\n1 2 1\\r\\n', 'output': ['1.0\\r\\n']}, {'input': '4\\r\\n1 3 2\\r\\n4 2 1\\r\\n3 2 3\\r\\n', 'output': ['4.333333333333334\\r\\n']}, {'input': '5\\r\\n1 2 1\\r\\n1 3 1\\r\\n1 4 1\\r\\n1 5 1\\r\\n', 'output': ['4.0\\r\\n']}, {'input': '4\\r\\n1 2 1\\r\\n2 3 1\\r\\n2 4 1\\r\\n', 'output': ['2.333333333333333\\r\\n']}, {'input': '4\\r\\n1 2 1\\r\\n1 3 1\\r\\n3 4 1\\r\\n', 'output': ['2.6666666666666665\\r\\n']}, {'input': '6\\r\\n1 2 4\\r\\n2 3 2\\r\\n1 4 4\\r\\n4 5 2\\r\\n5 6 1\\r\\n', 'output': ['11.0\\r\\n']}, {'input': '9\\r\\n1 4 1\\r\\n1 5 1\\r\\n2 5 2\\r\\n3 5 2\\r\\n5 7 2\\r\\n4 6 2\\r\\n8 4 2\\r\\n9 4 1\\r\\n', 'output': ['10.875\\r\\n']}, {'input': '11\\r\\n1 2 4\\r\\n1 3 4\\r\\n3 4 1\\r\\n1 5 4\\r\\n5 6 1\\r\\n6 7 1\\r\\n1 8 4\\r\\n8 9 1\\r\\n9 10 1\\r\\n10 11 1\\r\\n', 'output': ['18.0\\r\\n']}, {'input': '13\\r\\n1 2 1\\r\\n2 3 2\\r\\n3 4 3\\r\\n4 5 4\\r\\n5 6 5\\r\\n6 7 6\\r\\n1 8 6\\r\\n2 9 5\\r\\n3 10 4\\r\\n4 11 3\\r\\n5 12 2\\r\\n6 13 1\\r\\n', 'output': ['28.0\\r\\n']}, {'input': '5\\r\\n1 2 1\\r\\n1 3 1\\r\\n1 4 1\\r\\n1 5 1\\r\\n', 'output': ['4.0\\r\\n']}, {'input': '8\\r\\n1 2 1\\r\\n2 3 2\\r\\n3 4 8\\r\\n1 5 1\\r\\n5 6 2\\r\\n6 7 3\\r\\n7 8 4\\r\\n', 'output': ['13.571428571428571\\r\\n']}, {'input': '7\\r\\n4 1 869\\r\\n5 2 160\\r\\n6 3 411\\r\\n3 2 228\\r\\n2 1 560\\r\\n1 7 811\\r\\n', 'output': ['2107.5\\r\\n']}, {'input': '5\\r\\n3 1 709\\r\\n4 1 97\\r\\n1 2 555\\r\\n2 5 469\\r\\n', 'output': ['1253.75\\r\\n']}, {'input': '5\\r\\n3 1 910\\r\\n4 1 987\\r\\n1 2 812\\r\\n2 5 734\\r\\n', 'output': ['3064.75\\r\\n']}, {'input': '3\\r\\n2 1 182\\r\\n1 3 352\\r\\n', 'output': ['449.0\\r\\n']}, {'input': '2\\r\\n1 2 550\\r\\n', 'output': ['550.0\\r\\n']}, {'input': '6\\r\\n4 1 233\\r\\n5 2 76\\r\\n2 1 455\\r\\n1 3 725\\r\\n3 6 444\\r\\n', 'output': ['1420.2\\r\\n']}, {'input': '7\\r\\n3 1 707\\r\\n4 2 301\\r\\n5 2 541\\r\\n2 1 794\\r\\n6 1 372\\r\\n1 7 259\\r\\n', 'output': ['2333.6666666666665\\r\\n']}, {'input': '2\\r\\n1 2 942\\r\\n', 'output': ['942.0\\r\\n']}, {'input': '7\\r\\n4 1 295\\r\\n5 2 624\\r\\n6 2 664\\r\\n2 1 722\\r\\n1 3 740\\r\\n3 7 979\\r\\n', 'output': ['3074.3333333333335\\r\\n']}, {'input': '7\\r\\n3 1 763\\r\\n1 2 303\\r\\n4 2 234\\r\\n5 2 109\\r\\n6 2 746\\r\\n2 7 853\\r\\n', 'output': ['1965.3333333333333\\r\\n']}, {'input': '23\\r\\n6 1 760\\r\\n7 1 15\\r\\n8 2 341\\r\\n9 2 322\\r\\n10 2 51\\r\\n11 3 859\\r\\n12 3 868\\r\\n13 4 755\\r\\n14 2 234\\r\\n15 1 980\\r\\n16 3 515\\r\\n17 4 781\\r\\n4 3 37\\r\\n18 2 389\\r\\n19 3 691\\r\\n20 2 189\\r\\n21 5 819\\r\\n5 1 529\\r\\n1 2 230\\r\\n22 2 570\\r\\n2 3 400\\r\\n3 23 45\\r\\n', 'output': ['6894.5\\r\\n']}, {'input': '42\\r\\n10 1 557\\r\\n11 1 743\\r\\n12 2 265\\r\\n13 1 824\\r\\n14 3 802\\r\\n15 2 760\\r\\n16 2 525\\r\\n17 2 572\\r\\n18 3 985\\r\\n19 1 7\\r\\n20 3 359\\r\\n21 4 423\\r\\n22 1 192\\r\\n23 2 386\\r\\n24 4 397\\r\\n25 2 862\\r\\n26 3 664\\r\\n27 1 643\\r\\n28 4 312\\r\\n29 1 503\\r\\n30 3 996\\r\\n31 3 733\\r\\n32 3 373\\r\\n3 5 931\\r\\n33 6 829\\r\\n34 6 527\\r\\n35 2 324\\r\\n2 6 878\\r\\n6 4 135\\r\\n36 1 766\\r\\n37 7 424\\r\\n38 7 1000\\r\\n39 8 836\\r\\n8 4 192\\r\\n40 1 483\\r\\n41 5 739\\r\\n5 1 59\\r\\n1 4 954\\r\\n4 7 717\\r\\n7 9 476\\r\\n9 42 485\\r\\n', 'output': ['19675.51219512195\\r\\n']}, {'input': '23\\r\\n7 1 563\\r\\n8 1 828\\r\\n9 2 12\\r\\n10 1 48\\r\\n11 1 678\\r\\n12 3 705\\r\\n13 2 231\\r\\n14 3 446\\r\\n15 4 374\\r\\n16 4 321\\r\\n17 5 370\\r\\n18 3 62\\r\\n19 1 193\\r\\n20 6 888\\r\\n21 1 674\\r\\n1 6 406\\r\\n6 3 554\\r\\n3 4 924\\r\\n4 2 102\\r\\n22 2 278\\r\\n2 5 648\\r\\n5 23 164\\r\\n', 'output': ['6377.954545454545\\r\\n']}, {'input': '31\\r\\n7 1 494\\r\\n8 2 887\\r\\n9 3 371\\r\\n10 3 121\\r\\n11 1 638\\r\\n12 4 513\\r\\n13 4 621\\r\\n14 3 65\\r\\n15 2 16\\r\\n16 5 716\\r\\n17 5 527\\r\\n18 4 451\\r\\n19 1 45\\r\\n20 2 736\\r\\n21 5 461\\r\\n22 3 318\\r\\n23 4 123\\r\\n24 2 340\\r\\n25 4 321\\r\\n26 1 457\\r\\n1 3 949\\r\\n27 6 368\\r\\n6 5 758\\r\\n5 3 145\\r\\n28 3 158\\r\\n29 3 43\\r\\n3 2 597\\r\\n2 4 287\\r\\n30 4 20\\r\\n4 31 730\\r\\n', 'output': ['8916.633333333333\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  vector<pair<int, int> > pv;\n  for (int i = 0; i < n - 1; i++) {\n    int u, v, t;\n    scanf(\"%d%d%d\", &u, &v, &t);\n    pv.push_back(make_pair(u, v));\n    pv.push_back(make_pair(v, u));\n  }\n  sort(pv.begin(), pv.end());\n  double ans = 0;\n  int tmp = 1;\n  for (int i = 0; i < n * 2 - 1; i++) {\n    ans += (tmp * 1.0) / (i + 2);\n    tmp = pv[i].first;\n  }\n  printf(\"%.12lf\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "a14739b86d1fd62a030226263cdc1afc", "id": 46, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': '9 3 3\\r\\n4 3 1\\r\\n2 3 3\\r\\n', 'output': ['15']}, {'input': '2 4 6\\r\\n3 5 5\\r\\n5 6 4\\r\\n', 'output': ['24']}, {'input': '3 8 1\\r\\n4 7 1\\r\\n5 6 1\\r\\n', 'output': ['15']}, {'input': '2 1 1\\r\\n6 1 1\\r\\n10 1 1\\r\\n', 'output': ['11']}, {'input': '1 5 3\\r\\n9 4 3\\r\\n6 3 3\\r\\n', 'output': ['17']}, {'input': '6 5 10\\r\\n9 7 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '1 1 1\\r\\n2 1 10\\r\\n5 1 1\\r\\n', 'output': ['15']}, {'input': '3 1 4\\r\\n2 1 3\\r\\n4 1 1\\r\\n', 'output': ['12']}, {'input': '7 1 5\\r\\n9 2 1\\r\\n6 3 3\\r\\n', 'output': ['19']}, {'input': '2 1 3\\r\\n1 1 4\\r\\n3 1 1\\r\\n', 'output': ['11']}, {'input': '1 1 10\\r\\n2 1 2\\r\\n3 5 1\\r\\n', 'output': ['20']}, {'input': '8 10 10\\r\\n9 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '7 9 10\\r\\n8 10 9\\r\\n10 9 10\\r\\n', 'output': ['40']}, {'input': '1 1 10\\r\\n9 3 3\\r\\n10 2 4\\r\\n', 'output': ['17']}, {'input': '1 1 1\\r\\n2 1 1\\r\\n3 1 1\\r\\n', 'output': ['7']}, {'input': '1 10 10\\r\\n5 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '1 1 9\\r\\n5 1 10\\r\\n10 1 8\\r\\n', 'output': ['11']}, {'input': '1 3 1\\r\\n5 1 4\\r\\n10 2 10\\r\\n', 'output': ['20']}, {'input': '1 2 2\\r\\n2 2 3\\r\\n10 1 10\\r\\n', 'output': ['11']}, {'input': '10 10 10\\r\\n1 1 1\\r\\n2 1 1\\r\\n', 'output': ['20']}, {'input': '1 2 5\\r\\n9 5 3\\r\\n5 5 4\\r\\n', 'output': ['20']}, {'input': '5 1 2\\r\\n10 5 1\\r\\n3 1 3\\r\\n', 'output': ['15']}, {'input': '1 2 1\\r\\n9 4 3\\r\\n3 4 3\\r\\n', 'output': ['13']}, {'input': '7 1 1\\r\\n10 3 4\\r\\n3 5 3\\r\\n', 'output': ['17']}, {'input': '1 5 5\\r\\n2 3 2\\r\\n4 3 4\\r\\n', 'output': ['16']}, {'input': '7 4 2\\r\\n1 2 5\\r\\n4 4 4\\r\\n', 'output': ['17']}, {'input': '4 5 2\\r\\n9 2 2\\r\\n5 2 4\\r\\n', 'output': ['17']}, {'input': '6 4 1\\r\\n4 1 3\\r\\n7 3 5\\r\\n', 'output': ['20']}, {'input': '8 3 5\\r\\n2 5 1\\r\\n9 1 5\\r\\n', 'output': ['19']}, {'input': '5 5 5\\r\\n3 5 3\\r\\n9 3 5\\r\\n', 'output': ['22']}, {'input': '4 5 3\\r\\n8 1 3\\r\\n9 3 1\\r\\n', 'output': ['18']}, {'input': '8 2 2\\r\\n3 5 5\\r\\n4 3 3\\r\\n', 'output': ['18']}, {'input': '10 9 10\\r\\n9 10 9\\r\\n8 10 10\\r\\n', 'output': ['41']}, {'input': '9 9 8\\r\\n10 10 9\\r\\n8 10 10\\r\\n', 'output': ['40']}, {'input': '8 10 10\\r\\n9 10 9\\r\\n10 10 10\\r\\n', 'output': ['41']}, {'input': '8 9 10\\r\\n10 8 10\\r\\n9 10 10\\r\\n', 'output': ['41']}, {'input': '8 10 1\\r\\n9 10 1\\r\\n10 10 1\\r\\n', 'output': ['24']}, {'input': '8 10 10\\r\\n9 10 10\\r\\n10 9 10\\r\\n', 'output': ['41']}, {'input': '7 10 10\\r\\n9 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '10 9 10\\r\\n8 10 10\\r\\n7 10 10\\r\\n', 'output': ['41']}, {'input': '8 1 6\\r\\n6 4 7\\r\\n5 8 6\\r\\n', 'output': ['28']}, {'input': '2 8 10\\r\\n5 9 7\\r\\n7 2 9\\r\\n', 'output': ['35']}, {'input': '6 6 7\\r\\n10 2 4\\r\\n5 5 7\\r\\n', 'output': ['28']}, {'input': '5 1 7\\r\\n6 8 6\\r\\n10 9 3\\r\\n', 'output': ['27']}, {'input': '9 7 9\\r\\n10 5 10\\r\\n2 7 9\\r\\n', 'output': ['37']}, {'input': '6 7 6\\r\\n9 2 4\\r\\n4 2 8\\r\\n', 'output': ['27']}, {'input': '4 4 3\\r\\n5 8 2\\r\\n8 6 7\\r\\n', 'output': ['25']}, {'input': '3 1 8\\r\\n2 5 4\\r\\n4 4 1\\r\\n', 'output': ['22']}, {'input': '2 4 2\\r\\n4 7 8\\r\\n8 8 5\\r\\n', 'output': ['25']}, {'input': '5 10 6\\r\\n7 7 7\\r\\n1 6 3\\r\\n', 'output': ['27']}, {'input': '4 6 5\\r\\n10 6 8\\r\\n1 3 3\\r\\n', 'output': ['23']}, {'input': '9 8 4\\r\\n8 2 3\\r\\n2 1 8\\r\\n', 'output': ['21']}, {'input': '3 3 9\\r\\n1 5 6\\r\\n7 2 6\\r\\n', 'output': ['24']}, {'input': '10 8 6\\r\\n3 9 4\\r\\n4 4 5\\r\\n', 'output': ['25']}, {'input': '3 4 3\\r\\n2 5 1\\r\\n4 5 1\\r\\n', 'output': ['15']}, {'input': '5 9 10\\r\\n6 10 2\\r\\n7 1 10\\r\\n', 'output': ['38']}, {'input': '4 2 4\\r\\n5 7 7\\r\\n8 8 9\\r\\n', 'output': ['27']}, {'input': '1 8 2\\r\\n3 9 8\\r\\n6 4 6\\r\\n', 'output': ['25']}, {'input': '8 7 6\\r\\n10 5 1\\r\\n3 1 5\\r\\n', 'output': ['22']}, {'input': '6 3 1\\r\\n2 3 4\\r\\n5 7 1\\r\\n', 'output': ['19']}, {'input': '10 10 6\\r\\n7 10 8\\r\\n6 5 5\\r\\n', 'output': ['35']}, {'input': '3 3 10\\r\\n7 6 7\\r\\n10 5 10\\r\\n', 'output': ['35']}, {'input': '1 8 6\\r\\n9 8 8\\r\\n5 6 5\\r\\n', 'output': ['30']}, {'input': '6 6 3\\r\\n9 10 1\\r\\n2 7 6\\r\\n', 'output': ['30']}, {'input': '5 2 4\\r\\n10 10 7\\r\\n9 5 9\\r\\n', 'output': ['30']}, {'input': '2 2 9\\r\\n9 5 1\\r\\n7 4 7\\r\\n', 'output': ['24']}, {'input': '1 10 6\\r\\n6 1 2\\r\\n9 9 6\\r\\n', 'output': ['25']}, {'input': '3 8 4\\r\\n1 7 3\\r\\n8 5 10\\r\\n', 'output': ['26']}, {'input': '1 7 1\\r\\n10 9 7\\r\\n5 10 5\\r\\n', 'output': ['25']}, {'input': '8 10 1\\r\\n2 5 6\\r\\n3 5 7\\r\\n', 'output': ['31']}, {'input': '5 5 1\\r\\n3 4 10\\r\\n6 5 10\\r\\n', 'output': ['32']}, {'input': '10 3 8\\r\\n2 3 6\\r\\n1 1 8\\r\\n', 'output': ['23']}, {'input': '2 10 3\\r\\n4 10 1\\r\\n8 8 6\\r\\n', 'output': ['25']}, {'input': '10 2 6\\r\\n1 5 7\\r\\n2 8 6\\r\\n', 'output': ['25']}, {'input': '2 5 1\\r\\n7 9 3\\r\\n6 2 10\\r\\n', 'output': ['29']}, {'input': '1 1 4\\r\\n8 10 5\\r\\n5 3 9\\r\\n', 'output': ['28']}, {'input': '1 7 1\\r\\n9 9 3\\r\\n5 4 1\\r\\n', 'output': ['20']}, {'input': '8 6 10\\r\\n3 7 8\\r\\n9 2 9\\r\\n', 'output': ['33']}, {'input': '9 6 8\\r\\n5 5 2\\r\\n2 5 2\\r\\n', 'output': ['22']}, {'input': '2 1 3\\r\\n1 3 7\\r\\n4 5 10\\r\\n', 'output': ['22']}, {'input': '1 10 10\\r\\n2 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '3 10 10\\r\\n7 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int x1, x2, x3;\n  int l, e, f;\n  cin >> x1 >> l >> e >> x2 >> x3 >> f;\n  int ret = max(x1, x2);\n  ret = max(ret, x3);\n  if (ret >= 1 && ret <= 10) {\n    cout << ret;\n    return 0;\n  }\n  ret = (ret + 10 - 1) / 10 * 10;\n  ret -= 10;\n  if (ret >= x1)\n    ret += e;\n  else if (ret >= x2)\n    ret += f;\n  else if (ret >= x3)\n    ret = x3;\n  if (ret >= 1 && ret <= 10) {\n    cout << ret;\n    return 0;\n  }\n  ret = (ret + 10 - 1) / 10 * 10;\n  cout << ret;\n  return 0;\n}\n"}
{"src_uid": "a14739b86d1fd62a030226263cdc1afc", "id": 46, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': '9 3 3\\r\\n4 3 1\\r\\n2 3 3\\r\\n', 'output': ['15']}, {'input': '2 4 6\\r\\n3 5 5\\r\\n5 6 4\\r\\n', 'output': ['24']}, {'input': '3 8 1\\r\\n4 7 1\\r\\n5 6 1\\r\\n', 'output': ['15']}, {'input': '2 1 1\\r\\n6 1 1\\r\\n10 1 1\\r\\n', 'output': ['11']}, {'input': '1 5 3\\r\\n9 4 3\\r\\n6 3 3\\r\\n', 'output': ['17']}, {'input': '6 5 10\\r\\n9 7 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '1 1 1\\r\\n2 1 10\\r\\n5 1 1\\r\\n', 'output': ['15']}, {'input': '3 1 4\\r\\n2 1 3\\r\\n4 1 1\\r\\n', 'output': ['12']}, {'input': '7 1 5\\r\\n9 2 1\\r\\n6 3 3\\r\\n', 'output': ['19']}, {'input': '2 1 3\\r\\n1 1 4\\r\\n3 1 1\\r\\n', 'output': ['11']}, {'input': '1 1 10\\r\\n2 1 2\\r\\n3 5 1\\r\\n', 'output': ['20']}, {'input': '8 10 10\\r\\n9 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '7 9 10\\r\\n8 10 9\\r\\n10 9 10\\r\\n', 'output': ['40']}, {'input': '1 1 10\\r\\n9 3 3\\r\\n10 2 4\\r\\n', 'output': ['17']}, {'input': '1 1 1\\r\\n2 1 1\\r\\n3 1 1\\r\\n', 'output': ['7']}, {'input': '1 10 10\\r\\n5 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '1 1 9\\r\\n5 1 10\\r\\n10 1 8\\r\\n', 'output': ['11']}, {'input': '1 3 1\\r\\n5 1 4\\r\\n10 2 10\\r\\n', 'output': ['20']}, {'input': '1 2 2\\r\\n2 2 3\\r\\n10 1 10\\r\\n', 'output': ['11']}, {'input': '10 10 10\\r\\n1 1 1\\r\\n2 1 1\\r\\n', 'output': ['20']}, {'input': '1 2 5\\r\\n9 5 3\\r\\n5 5 4\\r\\n', 'output': ['20']}, {'input': '5 1 2\\r\\n10 5 1\\r\\n3 1 3\\r\\n', 'output': ['15']}, {'input': '1 2 1\\r\\n9 4 3\\r\\n3 4 3\\r\\n', 'output': ['13']}, {'input': '7 1 1\\r\\n10 3 4\\r\\n3 5 3\\r\\n', 'output': ['17']}, {'input': '1 5 5\\r\\n2 3 2\\r\\n4 3 4\\r\\n', 'output': ['16']}, {'input': '7 4 2\\r\\n1 2 5\\r\\n4 4 4\\r\\n', 'output': ['17']}, {'input': '4 5 2\\r\\n9 2 2\\r\\n5 2 4\\r\\n', 'output': ['17']}, {'input': '6 4 1\\r\\n4 1 3\\r\\n7 3 5\\r\\n', 'output': ['20']}, {'input': '8 3 5\\r\\n2 5 1\\r\\n9 1 5\\r\\n', 'output': ['19']}, {'input': '5 5 5\\r\\n3 5 3\\r\\n9 3 5\\r\\n', 'output': ['22']}, {'input': '4 5 3\\r\\n8 1 3\\r\\n9 3 1\\r\\n', 'output': ['18']}, {'input': '8 2 2\\r\\n3 5 5\\r\\n4 3 3\\r\\n', 'output': ['18']}, {'input': '10 9 10\\r\\n9 10 9\\r\\n8 10 10\\r\\n', 'output': ['41']}, {'input': '9 9 8\\r\\n10 10 9\\r\\n8 10 10\\r\\n', 'output': ['40']}, {'input': '8 10 10\\r\\n9 10 9\\r\\n10 10 10\\r\\n', 'output': ['41']}, {'input': '8 9 10\\r\\n10 8 10\\r\\n9 10 10\\r\\n', 'output': ['41']}, {'input': '8 10 1\\r\\n9 10 1\\r\\n10 10 1\\r\\n', 'output': ['24']}, {'input': '8 10 10\\r\\n9 10 10\\r\\n10 9 10\\r\\n', 'output': ['41']}, {'input': '7 10 10\\r\\n9 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '10 9 10\\r\\n8 10 10\\r\\n7 10 10\\r\\n', 'output': ['41']}, {'input': '8 1 6\\r\\n6 4 7\\r\\n5 8 6\\r\\n', 'output': ['28']}, {'input': '2 8 10\\r\\n5 9 7\\r\\n7 2 9\\r\\n', 'output': ['35']}, {'input': '6 6 7\\r\\n10 2 4\\r\\n5 5 7\\r\\n', 'output': ['28']}, {'input': '5 1 7\\r\\n6 8 6\\r\\n10 9 3\\r\\n', 'output': ['27']}, {'input': '9 7 9\\r\\n10 5 10\\r\\n2 7 9\\r\\n', 'output': ['37']}, {'input': '6 7 6\\r\\n9 2 4\\r\\n4 2 8\\r\\n', 'output': ['27']}, {'input': '4 4 3\\r\\n5 8 2\\r\\n8 6 7\\r\\n', 'output': ['25']}, {'input': '3 1 8\\r\\n2 5 4\\r\\n4 4 1\\r\\n', 'output': ['22']}, {'input': '2 4 2\\r\\n4 7 8\\r\\n8 8 5\\r\\n', 'output': ['25']}, {'input': '5 10 6\\r\\n7 7 7\\r\\n1 6 3\\r\\n', 'output': ['27']}, {'input': '4 6 5\\r\\n10 6 8\\r\\n1 3 3\\r\\n', 'output': ['23']}, {'input': '9 8 4\\r\\n8 2 3\\r\\n2 1 8\\r\\n', 'output': ['21']}, {'input': '3 3 9\\r\\n1 5 6\\r\\n7 2 6\\r\\n', 'output': ['24']}, {'input': '10 8 6\\r\\n3 9 4\\r\\n4 4 5\\r\\n', 'output': ['25']}, {'input': '3 4 3\\r\\n2 5 1\\r\\n4 5 1\\r\\n', 'output': ['15']}, {'input': '5 9 10\\r\\n6 10 2\\r\\n7 1 10\\r\\n', 'output': ['38']}, {'input': '4 2 4\\r\\n5 7 7\\r\\n8 8 9\\r\\n', 'output': ['27']}, {'input': '1 8 2\\r\\n3 9 8\\r\\n6 4 6\\r\\n', 'output': ['25']}, {'input': '8 7 6\\r\\n10 5 1\\r\\n3 1 5\\r\\n', 'output': ['22']}, {'input': '6 3 1\\r\\n2 3 4\\r\\n5 7 1\\r\\n', 'output': ['19']}, {'input': '10 10 6\\r\\n7 10 8\\r\\n6 5 5\\r\\n', 'output': ['35']}, {'input': '3 3 10\\r\\n7 6 7\\r\\n10 5 10\\r\\n', 'output': ['35']}, {'input': '1 8 6\\r\\n9 8 8\\r\\n5 6 5\\r\\n', 'output': ['30']}, {'input': '6 6 3\\r\\n9 10 1\\r\\n2 7 6\\r\\n', 'output': ['30']}, {'input': '5 2 4\\r\\n10 10 7\\r\\n9 5 9\\r\\n', 'output': ['30']}, {'input': '2 2 9\\r\\n9 5 1\\r\\n7 4 7\\r\\n', 'output': ['24']}, {'input': '1 10 6\\r\\n6 1 2\\r\\n9 9 6\\r\\n', 'output': ['25']}, {'input': '3 8 4\\r\\n1 7 3\\r\\n8 5 10\\r\\n', 'output': ['26']}, {'input': '1 7 1\\r\\n10 9 7\\r\\n5 10 5\\r\\n', 'output': ['25']}, {'input': '8 10 1\\r\\n2 5 6\\r\\n3 5 7\\r\\n', 'output': ['31']}, {'input': '5 5 1\\r\\n3 4 10\\r\\n6 5 10\\r\\n', 'output': ['32']}, {'input': '10 3 8\\r\\n2 3 6\\r\\n1 1 8\\r\\n', 'output': ['23']}, {'input': '2 10 3\\r\\n4 10 1\\r\\n8 8 6\\r\\n', 'output': ['25']}, {'input': '10 2 6\\r\\n1 5 7\\r\\n2 8 6\\r\\n', 'output': ['25']}, {'input': '2 5 1\\r\\n7 9 3\\r\\n6 2 10\\r\\n', 'output': ['29']}, {'input': '1 1 4\\r\\n8 10 5\\r\\n5 3 9\\r\\n', 'output': ['28']}, {'input': '1 7 1\\r\\n9 9 3\\r\\n5 4 1\\r\\n', 'output': ['20']}, {'input': '8 6 10\\r\\n3 7 8\\r\\n9 2 9\\r\\n', 'output': ['33']}, {'input': '9 6 8\\r\\n5 5 2\\r\\n2 5 2\\r\\n', 'output': ['22']}, {'input': '2 1 3\\r\\n1 3 7\\r\\n4 5 10\\r\\n', 'output': ['22']}, {'input': '1 10 10\\r\\n2 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '3 10 10\\r\\n7 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int l, dl, d, e, dh, de, h, eh, dm, dem, m, em;\n  cin >> l >> dl >> d >> e >> dh >> de >> h >> eh >> dm >> dem;\n  for (int i = 1; i <= 100; i++) {\n    for (int x = 1; x <= 10; x++) {\n      if (l + x <= 100 && l + x > m) m = l + x;\n      if (e + x <= 100 && h + x <= 100 && dm + x <= 100 &&\n          abs(e + x - h) <= de && abs(e + x - h) <= dh &&\n          abs(dm + x - h) <= dm) {\n        m = max(x + e + dm, m);\n        m = max(x + e + dm + de, m);\n        m = max(x + e + dm + dh, m);\n      }\n      if (h + x <= 100 && d + x <= 100 && dm + x <= 100 &&\n          abs(h + x - d) <= de && abs(h + x - d) <= dh &&\n          abs(dm + x - d) <= dm) {\n        m = max(x + h + dm, m);\n        m = max(x + h + dm + de, m);\n        m = max(x + h + dm + dh, m);\n      }\n      if (dm + x <= 100 && em + x <= 100 && h + x <= 100 &&\n          abs(dm + x - em) <= dem && abs(dm + x - em) <= dh &&\n          abs(dm + x - h) <= dm) {\n        m = max(x + dm + em, m);\n        m = max(x + dm + em + de, m);\n        m = max(x + dm + em + dh, m);\n      }\n    }\n  }\n  cout << m;\n}\n"}
{"src_uid": "a14739b86d1fd62a030226263cdc1afc", "id": 46, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': '9 3 3\\r\\n4 3 1\\r\\n2 3 3\\r\\n', 'output': ['15']}, {'input': '2 4 6\\r\\n3 5 5\\r\\n5 6 4\\r\\n', 'output': ['24']}, {'input': '3 8 1\\r\\n4 7 1\\r\\n5 6 1\\r\\n', 'output': ['15']}, {'input': '2 1 1\\r\\n6 1 1\\r\\n10 1 1\\r\\n', 'output': ['11']}, {'input': '1 5 3\\r\\n9 4 3\\r\\n6 3 3\\r\\n', 'output': ['17']}, {'input': '6 5 10\\r\\n9 7 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '1 1 1\\r\\n2 1 10\\r\\n5 1 1\\r\\n', 'output': ['15']}, {'input': '3 1 4\\r\\n2 1 3\\r\\n4 1 1\\r\\n', 'output': ['12']}, {'input': '7 1 5\\r\\n9 2 1\\r\\n6 3 3\\r\\n', 'output': ['19']}, {'input': '2 1 3\\r\\n1 1 4\\r\\n3 1 1\\r\\n', 'output': ['11']}, {'input': '1 1 10\\r\\n2 1 2\\r\\n3 5 1\\r\\n', 'output': ['20']}, {'input': '8 10 10\\r\\n9 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '7 9 10\\r\\n8 10 9\\r\\n10 9 10\\r\\n', 'output': ['40']}, {'input': '1 1 10\\r\\n9 3 3\\r\\n10 2 4\\r\\n', 'output': ['17']}, {'input': '1 1 1\\r\\n2 1 1\\r\\n3 1 1\\r\\n', 'output': ['7']}, {'input': '1 10 10\\r\\n5 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '1 1 9\\r\\n5 1 10\\r\\n10 1 8\\r\\n', 'output': ['11']}, {'input': '1 3 1\\r\\n5 1 4\\r\\n10 2 10\\r\\n', 'output': ['20']}, {'input': '1 2 2\\r\\n2 2 3\\r\\n10 1 10\\r\\n', 'output': ['11']}, {'input': '10 10 10\\r\\n1 1 1\\r\\n2 1 1\\r\\n', 'output': ['20']}, {'input': '1 2 5\\r\\n9 5 3\\r\\n5 5 4\\r\\n', 'output': ['20']}, {'input': '5 1 2\\r\\n10 5 1\\r\\n3 1 3\\r\\n', 'output': ['15']}, {'input': '1 2 1\\r\\n9 4 3\\r\\n3 4 3\\r\\n', 'output': ['13']}, {'input': '7 1 1\\r\\n10 3 4\\r\\n3 5 3\\r\\n', 'output': ['17']}, {'input': '1 5 5\\r\\n2 3 2\\r\\n4 3 4\\r\\n', 'output': ['16']}, {'input': '7 4 2\\r\\n1 2 5\\r\\n4 4 4\\r\\n', 'output': ['17']}, {'input': '4 5 2\\r\\n9 2 2\\r\\n5 2 4\\r\\n', 'output': ['17']}, {'input': '6 4 1\\r\\n4 1 3\\r\\n7 3 5\\r\\n', 'output': ['20']}, {'input': '8 3 5\\r\\n2 5 1\\r\\n9 1 5\\r\\n', 'output': ['19']}, {'input': '5 5 5\\r\\n3 5 3\\r\\n9 3 5\\r\\n', 'output': ['22']}, {'input': '4 5 3\\r\\n8 1 3\\r\\n9 3 1\\r\\n', 'output': ['18']}, {'input': '8 2 2\\r\\n3 5 5\\r\\n4 3 3\\r\\n', 'output': ['18']}, {'input': '10 9 10\\r\\n9 10 9\\r\\n8 10 10\\r\\n', 'output': ['41']}, {'input': '9 9 8\\r\\n10 10 9\\r\\n8 10 10\\r\\n', 'output': ['40']}, {'input': '8 10 10\\r\\n9 10 9\\r\\n10 10 10\\r\\n', 'output': ['41']}, {'input': '8 9 10\\r\\n10 8 10\\r\\n9 10 10\\r\\n', 'output': ['41']}, {'input': '8 10 1\\r\\n9 10 1\\r\\n10 10 1\\r\\n', 'output': ['24']}, {'input': '8 10 10\\r\\n9 10 10\\r\\n10 9 10\\r\\n', 'output': ['41']}, {'input': '7 10 10\\r\\n9 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '10 9 10\\r\\n8 10 10\\r\\n7 10 10\\r\\n', 'output': ['41']}, {'input': '8 1 6\\r\\n6 4 7\\r\\n5 8 6\\r\\n', 'output': ['28']}, {'input': '2 8 10\\r\\n5 9 7\\r\\n7 2 9\\r\\n', 'output': ['35']}, {'input': '6 6 7\\r\\n10 2 4\\r\\n5 5 7\\r\\n', 'output': ['28']}, {'input': '5 1 7\\r\\n6 8 6\\r\\n10 9 3\\r\\n', 'output': ['27']}, {'input': '9 7 9\\r\\n10 5 10\\r\\n2 7 9\\r\\n', 'output': ['37']}, {'input': '6 7 6\\r\\n9 2 4\\r\\n4 2 8\\r\\n', 'output': ['27']}, {'input': '4 4 3\\r\\n5 8 2\\r\\n8 6 7\\r\\n', 'output': ['25']}, {'input': '3 1 8\\r\\n2 5 4\\r\\n4 4 1\\r\\n', 'output': ['22']}, {'input': '2 4 2\\r\\n4 7 8\\r\\n8 8 5\\r\\n', 'output': ['25']}, {'input': '5 10 6\\r\\n7 7 7\\r\\n1 6 3\\r\\n', 'output': ['27']}, {'input': '4 6 5\\r\\n10 6 8\\r\\n1 3 3\\r\\n', 'output': ['23']}, {'input': '9 8 4\\r\\n8 2 3\\r\\n2 1 8\\r\\n', 'output': ['21']}, {'input': '3 3 9\\r\\n1 5 6\\r\\n7 2 6\\r\\n', 'output': ['24']}, {'input': '10 8 6\\r\\n3 9 4\\r\\n4 4 5\\r\\n', 'output': ['25']}, {'input': '3 4 3\\r\\n2 5 1\\r\\n4 5 1\\r\\n', 'output': ['15']}, {'input': '5 9 10\\r\\n6 10 2\\r\\n7 1 10\\r\\n', 'output': ['38']}, {'input': '4 2 4\\r\\n5 7 7\\r\\n8 8 9\\r\\n', 'output': ['27']}, {'input': '1 8 2\\r\\n3 9 8\\r\\n6 4 6\\r\\n', 'output': ['25']}, {'input': '8 7 6\\r\\n10 5 1\\r\\n3 1 5\\r\\n', 'output': ['22']}, {'input': '6 3 1\\r\\n2 3 4\\r\\n5 7 1\\r\\n', 'output': ['19']}, {'input': '10 10 6\\r\\n7 10 8\\r\\n6 5 5\\r\\n', 'output': ['35']}, {'input': '3 3 10\\r\\n7 6 7\\r\\n10 5 10\\r\\n', 'output': ['35']}, {'input': '1 8 6\\r\\n9 8 8\\r\\n5 6 5\\r\\n', 'output': ['30']}, {'input': '6 6 3\\r\\n9 10 1\\r\\n2 7 6\\r\\n', 'output': ['30']}, {'input': '5 2 4\\r\\n10 10 7\\r\\n9 5 9\\r\\n', 'output': ['30']}, {'input': '2 2 9\\r\\n9 5 1\\r\\n7 4 7\\r\\n', 'output': ['24']}, {'input': '1 10 6\\r\\n6 1 2\\r\\n9 9 6\\r\\n', 'output': ['25']}, {'input': '3 8 4\\r\\n1 7 3\\r\\n8 5 10\\r\\n', 'output': ['26']}, {'input': '1 7 1\\r\\n10 9 7\\r\\n5 10 5\\r\\n', 'output': ['25']}, {'input': '8 10 1\\r\\n2 5 6\\r\\n3 5 7\\r\\n', 'output': ['31']}, {'input': '5 5 1\\r\\n3 4 10\\r\\n6 5 10\\r\\n', 'output': ['32']}, {'input': '10 3 8\\r\\n2 3 6\\r\\n1 1 8\\r\\n', 'output': ['23']}, {'input': '2 10 3\\r\\n4 10 1\\r\\n8 8 6\\r\\n', 'output': ['25']}, {'input': '10 2 6\\r\\n1 5 7\\r\\n2 8 6\\r\\n', 'output': ['25']}, {'input': '2 5 1\\r\\n7 9 3\\r\\n6 2 10\\r\\n', 'output': ['29']}, {'input': '1 1 4\\r\\n8 10 5\\r\\n5 3 9\\r\\n', 'output': ['28']}, {'input': '1 7 1\\r\\n9 9 3\\r\\n5 4 1\\r\\n', 'output': ['20']}, {'input': '8 6 10\\r\\n3 7 8\\r\\n9 2 9\\r\\n', 'output': ['33']}, {'input': '9 6 8\\r\\n5 5 2\\r\\n2 5 2\\r\\n', 'output': ['22']}, {'input': '2 1 3\\r\\n1 3 7\\r\\n4 5 10\\r\\n', 'output': ['22']}, {'input': '1 10 10\\r\\n2 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '3 10 10\\r\\n7 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int la, ra, lr, rr;\n  cin >> la >> ra >> lr;\n  cin >> la >> ra >> lr;\n  int ans = 0;\n  for (int i = 1; i <= 10; i++) {\n    int m = la + i - 1;\n    if (m > ans) ans = m;\n    if (m - la + 1 > ra && lr >= i - 1) {\n      m = (la + la + i - 1) / 2;\n      if (m > ans) ans = m;\n    }\n    if (m > ans && lr >= 2 * i - 2) {\n      m = la + la + i - 2;\n      if (m > ans) ans = m;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"}
{"src_uid": "a14739b86d1fd62a030226263cdc1afc", "id": 46, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': '9 3 3\\r\\n4 3 1\\r\\n2 3 3\\r\\n', 'output': ['15']}, {'input': '2 4 6\\r\\n3 5 5\\r\\n5 6 4\\r\\n', 'output': ['24']}, {'input': '3 8 1\\r\\n4 7 1\\r\\n5 6 1\\r\\n', 'output': ['15']}, {'input': '2 1 1\\r\\n6 1 1\\r\\n10 1 1\\r\\n', 'output': ['11']}, {'input': '1 5 3\\r\\n9 4 3\\r\\n6 3 3\\r\\n', 'output': ['17']}, {'input': '6 5 10\\r\\n9 7 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '1 1 1\\r\\n2 1 10\\r\\n5 1 1\\r\\n', 'output': ['15']}, {'input': '3 1 4\\r\\n2 1 3\\r\\n4 1 1\\r\\n', 'output': ['12']}, {'input': '7 1 5\\r\\n9 2 1\\r\\n6 3 3\\r\\n', 'output': ['19']}, {'input': '2 1 3\\r\\n1 1 4\\r\\n3 1 1\\r\\n', 'output': ['11']}, {'input': '1 1 10\\r\\n2 1 2\\r\\n3 5 1\\r\\n', 'output': ['20']}, {'input': '8 10 10\\r\\n9 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '7 9 10\\r\\n8 10 9\\r\\n10 9 10\\r\\n', 'output': ['40']}, {'input': '1 1 10\\r\\n9 3 3\\r\\n10 2 4\\r\\n', 'output': ['17']}, {'input': '1 1 1\\r\\n2 1 1\\r\\n3 1 1\\r\\n', 'output': ['7']}, {'input': '1 10 10\\r\\n5 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '1 1 9\\r\\n5 1 10\\r\\n10 1 8\\r\\n', 'output': ['11']}, {'input': '1 3 1\\r\\n5 1 4\\r\\n10 2 10\\r\\n', 'output': ['20']}, {'input': '1 2 2\\r\\n2 2 3\\r\\n10 1 10\\r\\n', 'output': ['11']}, {'input': '10 10 10\\r\\n1 1 1\\r\\n2 1 1\\r\\n', 'output': ['20']}, {'input': '1 2 5\\r\\n9 5 3\\r\\n5 5 4\\r\\n', 'output': ['20']}, {'input': '5 1 2\\r\\n10 5 1\\r\\n3 1 3\\r\\n', 'output': ['15']}, {'input': '1 2 1\\r\\n9 4 3\\r\\n3 4 3\\r\\n', 'output': ['13']}, {'input': '7 1 1\\r\\n10 3 4\\r\\n3 5 3\\r\\n', 'output': ['17']}, {'input': '1 5 5\\r\\n2 3 2\\r\\n4 3 4\\r\\n', 'output': ['16']}, {'input': '7 4 2\\r\\n1 2 5\\r\\n4 4 4\\r\\n', 'output': ['17']}, {'input': '4 5 2\\r\\n9 2 2\\r\\n5 2 4\\r\\n', 'output': ['17']}, {'input': '6 4 1\\r\\n4 1 3\\r\\n7 3 5\\r\\n', 'output': ['20']}, {'input': '8 3 5\\r\\n2 5 1\\r\\n9 1 5\\r\\n', 'output': ['19']}, {'input': '5 5 5\\r\\n3 5 3\\r\\n9 3 5\\r\\n', 'output': ['22']}, {'input': '4 5 3\\r\\n8 1 3\\r\\n9 3 1\\r\\n', 'output': ['18']}, {'input': '8 2 2\\r\\n3 5 5\\r\\n4 3 3\\r\\n', 'output': ['18']}, {'input': '10 9 10\\r\\n9 10 9\\r\\n8 10 10\\r\\n', 'output': ['41']}, {'input': '9 9 8\\r\\n10 10 9\\r\\n8 10 10\\r\\n', 'output': ['40']}, {'input': '8 10 10\\r\\n9 10 9\\r\\n10 10 10\\r\\n', 'output': ['41']}, {'input': '8 9 10\\r\\n10 8 10\\r\\n9 10 10\\r\\n', 'output': ['41']}, {'input': '8 10 1\\r\\n9 10 1\\r\\n10 10 1\\r\\n', 'output': ['24']}, {'input': '8 10 10\\r\\n9 10 10\\r\\n10 9 10\\r\\n', 'output': ['41']}, {'input': '7 10 10\\r\\n9 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '10 9 10\\r\\n8 10 10\\r\\n7 10 10\\r\\n', 'output': ['41']}, {'input': '8 1 6\\r\\n6 4 7\\r\\n5 8 6\\r\\n', 'output': ['28']}, {'input': '2 8 10\\r\\n5 9 7\\r\\n7 2 9\\r\\n', 'output': ['35']}, {'input': '6 6 7\\r\\n10 2 4\\r\\n5 5 7\\r\\n', 'output': ['28']}, {'input': '5 1 7\\r\\n6 8 6\\r\\n10 9 3\\r\\n', 'output': ['27']}, {'input': '9 7 9\\r\\n10 5 10\\r\\n2 7 9\\r\\n', 'output': ['37']}, {'input': '6 7 6\\r\\n9 2 4\\r\\n4 2 8\\r\\n', 'output': ['27']}, {'input': '4 4 3\\r\\n5 8 2\\r\\n8 6 7\\r\\n', 'output': ['25']}, {'input': '3 1 8\\r\\n2 5 4\\r\\n4 4 1\\r\\n', 'output': ['22']}, {'input': '2 4 2\\r\\n4 7 8\\r\\n8 8 5\\r\\n', 'output': ['25']}, {'input': '5 10 6\\r\\n7 7 7\\r\\n1 6 3\\r\\n', 'output': ['27']}, {'input': '4 6 5\\r\\n10 6 8\\r\\n1 3 3\\r\\n', 'output': ['23']}, {'input': '9 8 4\\r\\n8 2 3\\r\\n2 1 8\\r\\n', 'output': ['21']}, {'input': '3 3 9\\r\\n1 5 6\\r\\n7 2 6\\r\\n', 'output': ['24']}, {'input': '10 8 6\\r\\n3 9 4\\r\\n4 4 5\\r\\n', 'output': ['25']}, {'input': '3 4 3\\r\\n2 5 1\\r\\n4 5 1\\r\\n', 'output': ['15']}, {'input': '5 9 10\\r\\n6 10 2\\r\\n7 1 10\\r\\n', 'output': ['38']}, {'input': '4 2 4\\r\\n5 7 7\\r\\n8 8 9\\r\\n', 'output': ['27']}, {'input': '1 8 2\\r\\n3 9 8\\r\\n6 4 6\\r\\n', 'output': ['25']}, {'input': '8 7 6\\r\\n10 5 1\\r\\n3 1 5\\r\\n', 'output': ['22']}, {'input': '6 3 1\\r\\n2 3 4\\r\\n5 7 1\\r\\n', 'output': ['19']}, {'input': '10 10 6\\r\\n7 10 8\\r\\n6 5 5\\r\\n', 'output': ['35']}, {'input': '3 3 10\\r\\n7 6 7\\r\\n10 5 10\\r\\n', 'output': ['35']}, {'input': '1 8 6\\r\\n9 8 8\\r\\n5 6 5\\r\\n', 'output': ['30']}, {'input': '6 6 3\\r\\n9 10 1\\r\\n2 7 6\\r\\n', 'output': ['30']}, {'input': '5 2 4\\r\\n10 10 7\\r\\n9 5 9\\r\\n', 'output': ['30']}, {'input': '2 2 9\\r\\n9 5 1\\r\\n7 4 7\\r\\n', 'output': ['24']}, {'input': '1 10 6\\r\\n6 1 2\\r\\n9 9 6\\r\\n', 'output': ['25']}, {'input': '3 8 4\\r\\n1 7 3\\r\\n8 5 10\\r\\n', 'output': ['26']}, {'input': '1 7 1\\r\\n10 9 7\\r\\n5 10 5\\r\\n', 'output': ['25']}, {'input': '8 10 1\\r\\n2 5 6\\r\\n3 5 7\\r\\n', 'output': ['31']}, {'input': '5 5 1\\r\\n3 4 10\\r\\n6 5 10\\r\\n', 'output': ['32']}, {'input': '10 3 8\\r\\n2 3 6\\r\\n1 1 8\\r\\n', 'output': ['23']}, {'input': '2 10 3\\r\\n4 10 1\\r\\n8 8 6\\r\\n', 'output': ['25']}, {'input': '10 2 6\\r\\n1 5 7\\r\\n2 8 6\\r\\n', 'output': ['25']}, {'input': '2 5 1\\r\\n7 9 3\\r\\n6 2 10\\r\\n', 'output': ['29']}, {'input': '1 1 4\\r\\n8 10 5\\r\\n5 3 9\\r\\n', 'output': ['28']}, {'input': '1 7 1\\r\\n9 9 3\\r\\n5 4 1\\r\\n', 'output': ['20']}, {'input': '8 6 10\\r\\n3 7 8\\r\\n9 2 9\\r\\n', 'output': ['33']}, {'input': '9 6 8\\r\\n5 5 2\\r\\n2 5 2\\r\\n', 'output': ['22']}, {'input': '2 1 3\\r\\n1 3 7\\r\\n4 5 10\\r\\n', 'output': ['22']}, {'input': '1 10 10\\r\\n2 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '3 10 10\\r\\n7 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long p1, mr1, tr1, p2, mr2, tr2, p3, mr3, tr3;\n  cin >> p1 >> mr1 >> tr1;\n  cin >> p2 >> mr2 >> tr2;\n  cin >> p3 >> mr3 >> tr3;\n  long long p = min(min(p1 + tr1, p2 + mr2 + tr2), p3 + mr3 + tr3);\n  if (p > max(p1, max(p2, p3))) {\n    p = max(p1, max(p2, p3));\n  }\n  cout << p << endl;\n  return 0;\n}\n"}
{"src_uid": "a14739b86d1fd62a030226263cdc1afc", "id": 46, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': '9 3 3\\r\\n4 3 1\\r\\n2 3 3\\r\\n', 'output': ['15']}, {'input': '2 4 6\\r\\n3 5 5\\r\\n5 6 4\\r\\n', 'output': ['24']}, {'input': '3 8 1\\r\\n4 7 1\\r\\n5 6 1\\r\\n', 'output': ['15']}, {'input': '2 1 1\\r\\n6 1 1\\r\\n10 1 1\\r\\n', 'output': ['11']}, {'input': '1 5 3\\r\\n9 4 3\\r\\n6 3 3\\r\\n', 'output': ['17']}, {'input': '6 5 10\\r\\n9 7 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '1 1 1\\r\\n2 1 10\\r\\n5 1 1\\r\\n', 'output': ['15']}, {'input': '3 1 4\\r\\n2 1 3\\r\\n4 1 1\\r\\n', 'output': ['12']}, {'input': '7 1 5\\r\\n9 2 1\\r\\n6 3 3\\r\\n', 'output': ['19']}, {'input': '2 1 3\\r\\n1 1 4\\r\\n3 1 1\\r\\n', 'output': ['11']}, {'input': '1 1 10\\r\\n2 1 2\\r\\n3 5 1\\r\\n', 'output': ['20']}, {'input': '8 10 10\\r\\n9 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '7 9 10\\r\\n8 10 9\\r\\n10 9 10\\r\\n', 'output': ['40']}, {'input': '1 1 10\\r\\n9 3 3\\r\\n10 2 4\\r\\n', 'output': ['17']}, {'input': '1 1 1\\r\\n2 1 1\\r\\n3 1 1\\r\\n', 'output': ['7']}, {'input': '1 10 10\\r\\n5 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '1 1 9\\r\\n5 1 10\\r\\n10 1 8\\r\\n', 'output': ['11']}, {'input': '1 3 1\\r\\n5 1 4\\r\\n10 2 10\\r\\n', 'output': ['20']}, {'input': '1 2 2\\r\\n2 2 3\\r\\n10 1 10\\r\\n', 'output': ['11']}, {'input': '10 10 10\\r\\n1 1 1\\r\\n2 1 1\\r\\n', 'output': ['20']}, {'input': '1 2 5\\r\\n9 5 3\\r\\n5 5 4\\r\\n', 'output': ['20']}, {'input': '5 1 2\\r\\n10 5 1\\r\\n3 1 3\\r\\n', 'output': ['15']}, {'input': '1 2 1\\r\\n9 4 3\\r\\n3 4 3\\r\\n', 'output': ['13']}, {'input': '7 1 1\\r\\n10 3 4\\r\\n3 5 3\\r\\n', 'output': ['17']}, {'input': '1 5 5\\r\\n2 3 2\\r\\n4 3 4\\r\\n', 'output': ['16']}, {'input': '7 4 2\\r\\n1 2 5\\r\\n4 4 4\\r\\n', 'output': ['17']}, {'input': '4 5 2\\r\\n9 2 2\\r\\n5 2 4\\r\\n', 'output': ['17']}, {'input': '6 4 1\\r\\n4 1 3\\r\\n7 3 5\\r\\n', 'output': ['20']}, {'input': '8 3 5\\r\\n2 5 1\\r\\n9 1 5\\r\\n', 'output': ['19']}, {'input': '5 5 5\\r\\n3 5 3\\r\\n9 3 5\\r\\n', 'output': ['22']}, {'input': '4 5 3\\r\\n8 1 3\\r\\n9 3 1\\r\\n', 'output': ['18']}, {'input': '8 2 2\\r\\n3 5 5\\r\\n4 3 3\\r\\n', 'output': ['18']}, {'input': '10 9 10\\r\\n9 10 9\\r\\n8 10 10\\r\\n', 'output': ['41']}, {'input': '9 9 8\\r\\n10 10 9\\r\\n8 10 10\\r\\n', 'output': ['40']}, {'input': '8 10 10\\r\\n9 10 9\\r\\n10 10 10\\r\\n', 'output': ['41']}, {'input': '8 9 10\\r\\n10 8 10\\r\\n9 10 10\\r\\n', 'output': ['41']}, {'input': '8 10 1\\r\\n9 10 1\\r\\n10 10 1\\r\\n', 'output': ['24']}, {'input': '8 10 10\\r\\n9 10 10\\r\\n10 9 10\\r\\n', 'output': ['41']}, {'input': '7 10 10\\r\\n9 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '10 9 10\\r\\n8 10 10\\r\\n7 10 10\\r\\n', 'output': ['41']}, {'input': '8 1 6\\r\\n6 4 7\\r\\n5 8 6\\r\\n', 'output': ['28']}, {'input': '2 8 10\\r\\n5 9 7\\r\\n7 2 9\\r\\n', 'output': ['35']}, {'input': '6 6 7\\r\\n10 2 4\\r\\n5 5 7\\r\\n', 'output': ['28']}, {'input': '5 1 7\\r\\n6 8 6\\r\\n10 9 3\\r\\n', 'output': ['27']}, {'input': '9 7 9\\r\\n10 5 10\\r\\n2 7 9\\r\\n', 'output': ['37']}, {'input': '6 7 6\\r\\n9 2 4\\r\\n4 2 8\\r\\n', 'output': ['27']}, {'input': '4 4 3\\r\\n5 8 2\\r\\n8 6 7\\r\\n', 'output': ['25']}, {'input': '3 1 8\\r\\n2 5 4\\r\\n4 4 1\\r\\n', 'output': ['22']}, {'input': '2 4 2\\r\\n4 7 8\\r\\n8 8 5\\r\\n', 'output': ['25']}, {'input': '5 10 6\\r\\n7 7 7\\r\\n1 6 3\\r\\n', 'output': ['27']}, {'input': '4 6 5\\r\\n10 6 8\\r\\n1 3 3\\r\\n', 'output': ['23']}, {'input': '9 8 4\\r\\n8 2 3\\r\\n2 1 8\\r\\n', 'output': ['21']}, {'input': '3 3 9\\r\\n1 5 6\\r\\n7 2 6\\r\\n', 'output': ['24']}, {'input': '10 8 6\\r\\n3 9 4\\r\\n4 4 5\\r\\n', 'output': ['25']}, {'input': '3 4 3\\r\\n2 5 1\\r\\n4 5 1\\r\\n', 'output': ['15']}, {'input': '5 9 10\\r\\n6 10 2\\r\\n7 1 10\\r\\n', 'output': ['38']}, {'input': '4 2 4\\r\\n5 7 7\\r\\n8 8 9\\r\\n', 'output': ['27']}, {'input': '1 8 2\\r\\n3 9 8\\r\\n6 4 6\\r\\n', 'output': ['25']}, {'input': '8 7 6\\r\\n10 5 1\\r\\n3 1 5\\r\\n', 'output': ['22']}, {'input': '6 3 1\\r\\n2 3 4\\r\\n5 7 1\\r\\n', 'output': ['19']}, {'input': '10 10 6\\r\\n7 10 8\\r\\n6 5 5\\r\\n', 'output': ['35']}, {'input': '3 3 10\\r\\n7 6 7\\r\\n10 5 10\\r\\n', 'output': ['35']}, {'input': '1 8 6\\r\\n9 8 8\\r\\n5 6 5\\r\\n', 'output': ['30']}, {'input': '6 6 3\\r\\n9 10 1\\r\\n2 7 6\\r\\n', 'output': ['30']}, {'input': '5 2 4\\r\\n10 10 7\\r\\n9 5 9\\r\\n', 'output': ['30']}, {'input': '2 2 9\\r\\n9 5 1\\r\\n7 4 7\\r\\n', 'output': ['24']}, {'input': '1 10 6\\r\\n6 1 2\\r\\n9 9 6\\r\\n', 'output': ['25']}, {'input': '3 8 4\\r\\n1 7 3\\r\\n8 5 10\\r\\n', 'output': ['26']}, {'input': '1 7 1\\r\\n10 9 7\\r\\n5 10 5\\r\\n', 'output': ['25']}, {'input': '8 10 1\\r\\n2 5 6\\r\\n3 5 7\\r\\n', 'output': ['31']}, {'input': '5 5 1\\r\\n3 4 10\\r\\n6 5 10\\r\\n', 'output': ['32']}, {'input': '10 3 8\\r\\n2 3 6\\r\\n1 1 8\\r\\n', 'output': ['23']}, {'input': '2 10 3\\r\\n4 10 1\\r\\n8 8 6\\r\\n', 'output': ['25']}, {'input': '10 2 6\\r\\n1 5 7\\r\\n2 8 6\\r\\n', 'output': ['25']}, {'input': '2 5 1\\r\\n7 9 3\\r\\n6 2 10\\r\\n', 'output': ['29']}, {'input': '1 1 4\\r\\n8 10 5\\r\\n5 3 9\\r\\n', 'output': ['28']}, {'input': '1 7 1\\r\\n9 9 3\\r\\n5 4 1\\r\\n', 'output': ['20']}, {'input': '8 6 10\\r\\n3 7 8\\r\\n9 2 9\\r\\n', 'output': ['33']}, {'input': '9 6 8\\r\\n5 5 2\\r\\n2 5 2\\r\\n', 'output': ['22']}, {'input': '2 1 3\\r\\n1 3 7\\r\\n4 5 10\\r\\n', 'output': ['22']}, {'input': '1 10 10\\r\\n2 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '3 10 10\\r\\n7 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int l, sl, tl;\n  cin >> l >> sl >> tl;\n  int e, se, te;\n  cin >> e >> se >> te;\n  int f, sf, tf;\n  cin >> f >> sf >> tf;\n  int max = 0;\n  for (int i = 1; i <= 10; ++i) {\n    int len = 0;\n    for (int j = 1; j <= 10; ++j) {\n      int t = f - e;\n      if (t >= -se && t <= te && se <= sf) len = max(len, j + sl + sf);\n      t = f - l;\n      if (t >= -se && t <= tl && sl + se <= sf) len = max(len, j + sl + sf);\n      t = e - f;\n      if (t >= -sf && t <= tf && se + se <= sf) len = max(len, j + sf + sl);\n    }\n    max = max(max, len);\n  }\n  cout << max << endl;\n  return 0;\n}\n"}
{"src_uid": "899c5b77bfc0b4b99aff310741c9c0dd", "id": 47, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '7 3\\r\\n7 15 0 19 10 5 12\\r\\n2\\r\\n1 6\\r\\n7 4\\r\\n', 'output': ['5.0000000000 15.5000000000']}, {'input': '4 2\\r\\n10 8 1 17\\r\\n2\\r\\n2 3\\r\\n3 2\\r\\n', 'output': ['4.5000000000 13.5000000000']}, {'input': '10 5\\r\\n3 10 0 15 45 84 67 100 46 73\\r\\n3\\r\\n1 6\\r\\n8 9\\r\\n6 1\\r\\n', 'output': ['5.0000000000 73.0000000000']}, {'input': '8 4\\r\\n1 2 17 45 23 0 5 5\\r\\n4\\r\\n8 7\\r\\n2 3\\r\\n1 4\\r\\n6 5\\r\\n', 'output': ['5.0000000000 23.0000000000']}, {'input': '11 3\\r\\n60 100 84 74 19 77 36 48 70 18 63\\r\\n4\\r\\n3 7 11\\r\\n5 9 2\\r\\n2 9 5\\r\\n8 10 1\\r\\n', 'output': ['42.0000000000 63.0000000000']}, {'input': '9 4\\r\\n25 0 71 69 12 67 39 4 62\\r\\n2\\r\\n2 1\\r\\n5 7\\r\\n', 'output': ['12.5000000000 70.0000000000']}, {'input': '6 4\\r\\n85 84 81 33 28 94\\r\\n3\\r\\n3\\r\\n4\\r\\n6\\r\\n', 'output': ['28.0000000000 94.0000000000']}, {'input': '7 2\\r\\n4 34 56 0 35 23 2\\r\\n1\\r\\n1 2 6\\r\\n', 'output': ['12.3333333333 31.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n2\\r\\n1\\r\\n2\\r\\n', 'output': ['1.0000000000 2.0000000000']}, {'input': '1 1\\r\\n0\\r\\n1\\r\\n1\\r\\n', 'output': ['0.0000000000 0.0000000000']}, {'input': '1 1\\r\\n99\\r\\n0\\r\\n', 'output': ['99.0000000000 99.0000000000']}, {'input': '5 1\\r\\n34 0 100 45 3\\r\\n0\\r\\n', 'output': ['36.4000000000 36.4000000000']}, {'input': '6 1\\r\\n33 2 7 99 0 0\\r\\n1\\r\\n3 6 5 4 1 2\\r\\n', 'output': ['23.5000000000 23.5000000000']}, {'input': '6 6\\r\\n1 0 46 5 79 4\\r\\n0\\r\\n', 'output': ['0.0000000000 79.0000000000']}, {'input': '8 8\\r\\n3 7 74 90 100 74 4 55\\r\\n6\\r\\n2\\r\\n3\\r\\n4\\r\\n8\\r\\n6\\r\\n7\\r\\n', 'output': ['3.0000000000 100.0000000000']}, {'input': '10 5\\r\\n0 0 0 0 0 0 0 0 0 0\\r\\n3\\r\\n1 2\\r\\n8 5\\r\\n2 1\\r\\n', 'output': ['0.0000000000 0.0000000000']}, {'input': '15 4\\r\\n3 6 15 0 99 100 57 32 67 99 44 10 85 45 37\\r\\n6\\r\\n2 3 1\\r\\n15 13 12\\r\\n3 1 2\\r\\n10 9 5\\r\\n8 4 11\\r\\n8 4 11\\r\\n', 'output': ['8.0000000000 88.3333333333']}, {'input': '8 3\\r\\n45 67 0 98 12 56 93 99\\r\\n1\\r\\n4 5\\r\\n', 'output': ['22.5000000000 96.0000000000']}, {'input': '10 4\\r\\n45 32 0 0 99 73 24 22 81 56\\r\\n6\\r\\n4 3\\r\\n3 4\\r\\n5 9\\r\\n4 3\\r\\n9 5\\r\\n5 9\\r\\n', 'output': ['0.0000000000 90.0000000000']}, {'input': '10 4\\r\\n45 32 0 0 99 73 24 22 81 56\\r\\n2\\r\\n4 8\\r\\n1 9\\r\\n', 'output': ['11.0000000000 86.0000000000']}, {'input': '4 1\\r\\n4 10 0 35\\r\\n7\\r\\n1 2 3 4\\r\\n1 2 4 3\\r\\n3 2 4 1\\r\\n4 3 2 1\\r\\n3 1 4 2\\r\\n2 4 1 3\\r\\n4 3 1 2\\r\\n', 'output': ['12.2500000000 12.2500000000']}, {'input': '12 3\\r\\n4 77 0 90 2 5 74 7 77 100 45 34\\r\\n3\\r\\n9 12 1 5\\r\\n4 3 10 2\\r\\n11 6 7 8\\r\\n', 'output': ['29.2500000000 66.7500000000']}, {'input': '15 2\\r\\n56 9 100 86 5 44 3 63 98 23 11 84 56 33 84\\r\\n1\\r\\n4 7 6 2 8 3 15\\r\\n', 'output': ['38.2857142857 55.5714285714']}, {'input': '19 2\\r\\n63 18 76 3 18 22 2 49 50 23 13 76 29 36 95 49 78 95 25\\r\\n5\\r\\n15 5 3 4 18 17 6 1 8\\r\\n14 11 2 19 13 7 12 16 9\\r\\n19 16 13 9 2 11 14 12 7\\r\\n12 9 11 7 14 2 19 13 16\\r\\n15 18 17 3 1 5 8 6 4\\r\\n', 'output': ['33.1111111111 55.4444444444']}, {'input': '67 5\\r\\n11 89 2 71 41 6 35 19 34 51 49 97 37 57 84 39 3 62 14 1 67 18 49 77 16 46 99 38 3 51 68 72 31 79 35 10 65 90 28 43 88 67 2 13 93 40 52 28 75 26 90 3 22 29 44 38 73 62 17 92 91 37 29 87 25 54 8\\r\\n3\\r\\n46 57 28 2 54 12 19 18 42 4 14 37 13\\r\\n61 11 30 64 38 47 15 41 67 29 20 35 45\\r\\n11 35 67 15 38 47 61 45 30 20 41 64 29\\r\\n', 'output': ['10.9230769231 71.9230769231']}, {'input': '89 3\\r\\n100 52 96 60 96 86 70 2 16 44 79 37 18 16 92 0 55 49 98 83 47 42 45 92 33 99 20 52 32 47 30 61 89 86 29 64 80 96 35 85 17 39 14 2 43 8 65 98 62 57 54 73 87 79 34 42 50 89 56 54 52 59 93 31 95 86 29 4 4 46 2 14 45 73 42 24 3 55 47 10 60 61 67 16 20 71 47 91 29\\r\\n1\\r\\n38 1 80 16 77 58 17 30 39 4 49 63 11 47 8 61 10 24 64 15 74 6 45 12 35 79 22 52 20\\r\\n', 'output': ['25.3448275862 74.4137931034']}, {'input': '53 27\\r\\n100 85 0 86 19 32 82 66 54 10 9 81 40 65 23 17 58 68 100 46 28 48 28 11 79 11 36 89 61 11 67 88 79 28 16 93 31 34 54 9 33 45 60 18 23 28 38 71 76 51 10 9 92\\r\\n20\\r\\n43\\r\\n43\\r\\n14\\r\\n2\\r\\n25\\r\\n31\\r\\n25\\r\\n13\\r\\n48\\r\\n1\\r\\n38\\r\\n46\\r\\n9\\r\\n19\\r\\n30\\r\\n1\\r\\n28\\r\\n19\\r\\n43\\r\\n27\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '93 3\\r\\n47 45 32 90 54 22 99 70 55 22 2 86 23 18 0 42 42 41 63 90 60 70 81 38 42 4 17 96 15 65 2 21 66 5 18 20 97 38 18 2 60 41 38 18 39 38 43 75 51 97 72 90 59 4 40 34 40 18 15 71 82 9 66 82 0 50 21 37 47 31 65 42 6 78 94 0 5 56 85 28 37 30 77 11 71 42 48 4 42 13 96 82 35\\r\\n2\\r\\n62 86 47 34 31 59 58 76 15 88 23 19 87 48 41 32 74 89 26 20 61 5 35 39 81 2 17 55 40 69 38\\r\\n9 3 53 73 18 92 52 12 46 82 75 27 68 24 7 79 22 50 67 65 33 51 54 10 8 70 57 43 25 63 30\\r\\n', 'output': ['36.2258064516 51.3870967742']}, {'input': '99 1\\r\\n20 83 45 17 53 33 56 58 65 26 68 44 21 52 55 21 79 23 82 11 19 33 29 66 10 29 69 15 5 0 99 25 13 83 62 63 1 22 7 93 51 41 64 35 89 10 97 0 43 34 89 97 52 65 80 0 73 12 100 45 78 8 5 47 23 91 46 33 70 37 25 55 75 60 100 30 28 87 59 1 58 39 29 66 60 66 68 77 0 93 18 28 51 64 36 25 63 74 6\\r\\n0\\r\\n', 'output': ['46.5757575758 46.5757575758']}, {'input': '100 54\\r\\n46 64 22 47 5 70 61 8 25 78 88 62 91 52 3 55 46 63 90 27 92 64 33 83 7 7 0 47 64 85 89 3 40 49 11 14 51 93 5 56 8 37 82 49 10 7 14 7 33 66 35 66 41 23 7 56 55 2 74 39 75 16 46 63 81 10 73 67 70 30 37 22 97 33 52 60 38 42 16 43 79 70 15 51 70 8 99 75 7 76 49 10 96 74 82 97 15 98 75 11\\r\\n20\\r\\n91\\r\\n60\\r\\n90\\r\\n92\\r\\n88\\r\\n52\\r\\n53\\r\\n15\\r\\n92\\r\\n58\\r\\n88\\r\\n18\\r\\n95\\r\\n8\\r\\n43\\r\\n22\\r\\n69\\r\\n48\\r\\n42\\r\\n88\\r\\n', 'output': ['0.0000000000 99.0000000000']}, {'input': '86 5\\r\\n51 59 52 84 64 40 9 6 35 63 66 82 52 52 84 66 89 85 30 0 91 81 73 0 58 22 59 96 27 28 35 2 79 55 88 43 92 97 89 52 49 27 100 54 4 11 28 38 86 82 63 72 31 75 77 42 35 1 56 11 93 56 80 63 5 78 63 73 8 2 44 18 6 20 47 4 88 16 24 13 100 68 34 21 0 70\\r\\n4\\r\\n57 32 69 9 61 39 10 6 56 36 78 8 80 58 50 65 77\\r\\n2 83 3 31 85 21 62 28 79 46 49 20 22 34 42 12 76\\r\\n32 65 58 39 57 9 50 8 61 10 80 77 69 36 56 78 6\\r\\n4 86 40 30 54 75 37 48 64 15 59 44 16 5 43 73 81\\r\\n', 'output': ['24.6470588235 74.5882352941']}, {'input': '90 15\\r\\n78 78 57 46 96 3 2 79 26 58 95 79 33 33 54 60 26 93 85 74 51 100 68 40 51 14 78 0 73 61 17 59 8 40 87 93 57 72 38 92 20 15 77 74 97 59 33 45 69 71 71 32 25 58 86 26 13 36 6 73 56 36 30 43 38 26 58 6 74 13 11 23 80 54 81 76 41 22 1 73 10 15 82 47 66 50 98 74 12 63\\r\\n9\\r\\n88 89 86 66 12 15\\r\\n59 3 38 78 53 18\\r\\n21 61 36 39 57 4\\r\\n67 55 14 46 60 54\\r\\n84 75 9 23 48 1\\r\\n57 4 61 21 36 39\\r\\n79 72 2 83 6 26\\r\\n4 61 36 39 21 57\\r\\n74 32 24 11 85 42\\r\\n', 'output': ['6.1666666667 95.0000000000']}, {'input': '100 87\\r\\n89 43 79 20 88 74 41 99 16 64 53 54 54 59 26 20 31 81 100 66 12 71 93 40 53 2 55 69 53 91 23 54 43 19 78 73 95 70 69 47 15 63 60 88 98 63 13 66 95 55 12 3 4 12 14 79 80 15 62 15 93 11 23 86 17 71 22 21 40 90 71 90 81 40 50 68 55 28 100 12 0 21 66 93 80 91 62 37 9 7 59 10 18 73 7 32 50 12 57 87\\r\\n50\\r\\n25\\r\\n54\\r\\n83\\r\\n46\\r\\n6\\r\\n39\\r\\n48\\r\\n85\\r\\n10\\r\\n79\\r\\n66\\r\\n97\\r\\n6\\r\\n85\\r\\n64\\r\\n67\\r\\n87\\r\\n44\\r\\n65\\r\\n67\\r\\n41\\r\\n5\\r\\n3\\r\\n76\\r\\n93\\r\\n49\\r\\n26\\r\\n82\\r\\n3\\r\\n11\\r\\n47\\r\\n13\\r\\n70\\r\\n74\\r\\n82\\r\\n99\\r\\n43\\r\\n91\\r\\n42\\r\\n7\\r\\n92\\r\\n80\\r\\n78\\r\\n45\\r\\n3\\r\\n84\\r\\n6\\r\\n29\\r\\n38\\r\\n45\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '82 2\\r\\n89 81 1 65 17 37 65 73 19 20 67 15 86 99 30 70 44 83 2 50 20 93 57 64 30 85 53 9 22 18 97 13 85 38 70 96 3 85 12 72 44 10 62 93 60 81 7 91 17 13 64 63 83 96 15 9 62 43 83 72 65 89 49 75 36 61 98 89 48 45 74 80 37 39 71 1 76 69 56 72 28 86\\r\\n1\\r\\n41 71 27 69 17 14 20 46 53 64 5 35 7 9 56 18 75 36 16 34 81 37 58 65 66 4 40 8 44 19 31 38 30 60 77 80 42 63 73 33 43\\r\\n', 'output': ['51.6829268293 56.7804878049']}, {'input': '10 6\\r\\n100 100 100 100 100 100 100 100 100 100\\r\\n6\\r\\n4\\r\\n10\\r\\n2\\r\\n4\\r\\n7\\r\\n5\\r\\n', 'output': ['100.0000000000 100.0000000000']}, {'input': '100 6\\r\\n14 6 0 34 22 84 9 18 94 61 16 83 79 58 80 22 16 78 51 74 5 96 29 75 91 89 78 85 12 25 24 65 23 66 54 56 89 25 18 51 74 83 89 31 6 45 79 17 35 16 74 93 82 80 62 6 46 14 90 68 51 59 1 27 73 95 89 17 43 63 23 26 99 77 23 39 43 100 65 80 78 71 48 48 31 3 69 7 26 2 44 57 99 68 1 18 9 62 97 43\\r\\n0\\r\\n', 'output': ['6.9375000000 92.4375000000']}, {'input': '67 5\\r\\n11 89 2 71 41 6 35 19 34 51 49 97 37 57 84 39 3 62 14 1 67 18 49 77 16 46 99 38 3 51 68 72 31 79 35 10 65 90 28 43 88 67 2 13 93 40 52 28 75 26 90 3 22 29 44 38 73 62 17 92 91 37 29 87 25 54 8\\r\\n3\\r\\n46 57 28 2 54 12 19 18 42 4 14 37 13\\r\\n61 11 30 64 38 47 15 41 67 29 20 35 45\\r\\n11 35 67 15 38 47 61 45 30 20 41 64 29\\r\\n', 'output': ['10.9230769231 71.9230769231']}, {'input': '23 5\\r\\n30 38 57 63 1 26 11 47 47 95 83 9 61 24 82 82 86 99 90 18 4 5 76\\r\\n5\\r\\n2 15 21 13\\r\\n1 4 9 7\\r\\n3 8 14 17\\r\\n23 6 5 11\\r\\n12 10 22 16\\r\\n', 'output': ['37.7500000000 53.5000000000']}, {'input': '100 3\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 89\\r\\n0\\r\\n', 'output': ['0.0000000000 2.6969696970']}, {'input': '100 1\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100\\r\\n0\\r\\n', 'output': ['1.0000000000 1.0000000000']}, {'input': '100 100\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100\\r\\n0\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '100 100\\r\\n53 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.0000000000 53.0000000000']}, {'input': '100 1\\r\\n45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.4500000000 0.4500000000']}, {'input': '100 13\\r\\n45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.0000000000 6.4285714286']}, {'input': '100 1\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 99\\r\\n1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 100 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 67\\r\\n', 'output': ['0.9900000000 0.9900000000']}, {'input': '100 100\\r\\n1 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\\r\\n2\\r\\n1\\r\\n100\\r\\n', 'output': ['1.0000000000 100.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n2\\r\\n1\\r\\n1\\r\\n', 'output': ['1.0000000000 3.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n4\\r\\n1\\r\\n1\\r\\n2\\r\\n2\\r\\n', 'output': ['1.0000000000 2.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n5\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n', 'output': ['1.0000000000 3.0000000000']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, k, p[101];\nint main() {\n  int n, q;\n  scanf(\"%d%d\", &n, &k);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &p[i]);\n  double a = 0, b = 0;\n  for (int i = 0, m; i < k; i++) {\n    scanf(\"%d\", &m);\n    for (int j = 0; j < m; j++) {\n      int x;\n      scanf(\"%d\", &x);\n      if (p[x] < a)\n        a = p[x];\n      else if (p[x] > b)\n        b = p[x];\n    }\n  }\n  printf(\"%.10f %.10f\\n\", a + 1.0 / k, b);\n}\n"}
{"src_uid": "899c5b77bfc0b4b99aff310741c9c0dd", "id": 47, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '7 3\\r\\n7 15 0 19 10 5 12\\r\\n2\\r\\n1 6\\r\\n7 4\\r\\n', 'output': ['5.0000000000 15.5000000000']}, {'input': '4 2\\r\\n10 8 1 17\\r\\n2\\r\\n2 3\\r\\n3 2\\r\\n', 'output': ['4.5000000000 13.5000000000']}, {'input': '10 5\\r\\n3 10 0 15 45 84 67 100 46 73\\r\\n3\\r\\n1 6\\r\\n8 9\\r\\n6 1\\r\\n', 'output': ['5.0000000000 73.0000000000']}, {'input': '8 4\\r\\n1 2 17 45 23 0 5 5\\r\\n4\\r\\n8 7\\r\\n2 3\\r\\n1 4\\r\\n6 5\\r\\n', 'output': ['5.0000000000 23.0000000000']}, {'input': '11 3\\r\\n60 100 84 74 19 77 36 48 70 18 63\\r\\n4\\r\\n3 7 11\\r\\n5 9 2\\r\\n2 9 5\\r\\n8 10 1\\r\\n', 'output': ['42.0000000000 63.0000000000']}, {'input': '9 4\\r\\n25 0 71 69 12 67 39 4 62\\r\\n2\\r\\n2 1\\r\\n5 7\\r\\n', 'output': ['12.5000000000 70.0000000000']}, {'input': '6 4\\r\\n85 84 81 33 28 94\\r\\n3\\r\\n3\\r\\n4\\r\\n6\\r\\n', 'output': ['28.0000000000 94.0000000000']}, {'input': '7 2\\r\\n4 34 56 0 35 23 2\\r\\n1\\r\\n1 2 6\\r\\n', 'output': ['12.3333333333 31.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n2\\r\\n1\\r\\n2\\r\\n', 'output': ['1.0000000000 2.0000000000']}, {'input': '1 1\\r\\n0\\r\\n1\\r\\n1\\r\\n', 'output': ['0.0000000000 0.0000000000']}, {'input': '1 1\\r\\n99\\r\\n0\\r\\n', 'output': ['99.0000000000 99.0000000000']}, {'input': '5 1\\r\\n34 0 100 45 3\\r\\n0\\r\\n', 'output': ['36.4000000000 36.4000000000']}, {'input': '6 1\\r\\n33 2 7 99 0 0\\r\\n1\\r\\n3 6 5 4 1 2\\r\\n', 'output': ['23.5000000000 23.5000000000']}, {'input': '6 6\\r\\n1 0 46 5 79 4\\r\\n0\\r\\n', 'output': ['0.0000000000 79.0000000000']}, {'input': '8 8\\r\\n3 7 74 90 100 74 4 55\\r\\n6\\r\\n2\\r\\n3\\r\\n4\\r\\n8\\r\\n6\\r\\n7\\r\\n', 'output': ['3.0000000000 100.0000000000']}, {'input': '10 5\\r\\n0 0 0 0 0 0 0 0 0 0\\r\\n3\\r\\n1 2\\r\\n8 5\\r\\n2 1\\r\\n', 'output': ['0.0000000000 0.0000000000']}, {'input': '15 4\\r\\n3 6 15 0 99 100 57 32 67 99 44 10 85 45 37\\r\\n6\\r\\n2 3 1\\r\\n15 13 12\\r\\n3 1 2\\r\\n10 9 5\\r\\n8 4 11\\r\\n8 4 11\\r\\n', 'output': ['8.0000000000 88.3333333333']}, {'input': '8 3\\r\\n45 67 0 98 12 56 93 99\\r\\n1\\r\\n4 5\\r\\n', 'output': ['22.5000000000 96.0000000000']}, {'input': '10 4\\r\\n45 32 0 0 99 73 24 22 81 56\\r\\n6\\r\\n4 3\\r\\n3 4\\r\\n5 9\\r\\n4 3\\r\\n9 5\\r\\n5 9\\r\\n', 'output': ['0.0000000000 90.0000000000']}, {'input': '10 4\\r\\n45 32 0 0 99 73 24 22 81 56\\r\\n2\\r\\n4 8\\r\\n1 9\\r\\n', 'output': ['11.0000000000 86.0000000000']}, {'input': '4 1\\r\\n4 10 0 35\\r\\n7\\r\\n1 2 3 4\\r\\n1 2 4 3\\r\\n3 2 4 1\\r\\n4 3 2 1\\r\\n3 1 4 2\\r\\n2 4 1 3\\r\\n4 3 1 2\\r\\n', 'output': ['12.2500000000 12.2500000000']}, {'input': '12 3\\r\\n4 77 0 90 2 5 74 7 77 100 45 34\\r\\n3\\r\\n9 12 1 5\\r\\n4 3 10 2\\r\\n11 6 7 8\\r\\n', 'output': ['29.2500000000 66.7500000000']}, {'input': '15 2\\r\\n56 9 100 86 5 44 3 63 98 23 11 84 56 33 84\\r\\n1\\r\\n4 7 6 2 8 3 15\\r\\n', 'output': ['38.2857142857 55.5714285714']}, {'input': '19 2\\r\\n63 18 76 3 18 22 2 49 50 23 13 76 29 36 95 49 78 95 25\\r\\n5\\r\\n15 5 3 4 18 17 6 1 8\\r\\n14 11 2 19 13 7 12 16 9\\r\\n19 16 13 9 2 11 14 12 7\\r\\n12 9 11 7 14 2 19 13 16\\r\\n15 18 17 3 1 5 8 6 4\\r\\n', 'output': ['33.1111111111 55.4444444444']}, {'input': '67 5\\r\\n11 89 2 71 41 6 35 19 34 51 49 97 37 57 84 39 3 62 14 1 67 18 49 77 16 46 99 38 3 51 68 72 31 79 35 10 65 90 28 43 88 67 2 13 93 40 52 28 75 26 90 3 22 29 44 38 73 62 17 92 91 37 29 87 25 54 8\\r\\n3\\r\\n46 57 28 2 54 12 19 18 42 4 14 37 13\\r\\n61 11 30 64 38 47 15 41 67 29 20 35 45\\r\\n11 35 67 15 38 47 61 45 30 20 41 64 29\\r\\n', 'output': ['10.9230769231 71.9230769231']}, {'input': '89 3\\r\\n100 52 96 60 96 86 70 2 16 44 79 37 18 16 92 0 55 49 98 83 47 42 45 92 33 99 20 52 32 47 30 61 89 86 29 64 80 96 35 85 17 39 14 2 43 8 65 98 62 57 54 73 87 79 34 42 50 89 56 54 52 59 93 31 95 86 29 4 4 46 2 14 45 73 42 24 3 55 47 10 60 61 67 16 20 71 47 91 29\\r\\n1\\r\\n38 1 80 16 77 58 17 30 39 4 49 63 11 47 8 61 10 24 64 15 74 6 45 12 35 79 22 52 20\\r\\n', 'output': ['25.3448275862 74.4137931034']}, {'input': '53 27\\r\\n100 85 0 86 19 32 82 66 54 10 9 81 40 65 23 17 58 68 100 46 28 48 28 11 79 11 36 89 61 11 67 88 79 28 16 93 31 34 54 9 33 45 60 18 23 28 38 71 76 51 10 9 92\\r\\n20\\r\\n43\\r\\n43\\r\\n14\\r\\n2\\r\\n25\\r\\n31\\r\\n25\\r\\n13\\r\\n48\\r\\n1\\r\\n38\\r\\n46\\r\\n9\\r\\n19\\r\\n30\\r\\n1\\r\\n28\\r\\n19\\r\\n43\\r\\n27\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '93 3\\r\\n47 45 32 90 54 22 99 70 55 22 2 86 23 18 0 42 42 41 63 90 60 70 81 38 42 4 17 96 15 65 2 21 66 5 18 20 97 38 18 2 60 41 38 18 39 38 43 75 51 97 72 90 59 4 40 34 40 18 15 71 82 9 66 82 0 50 21 37 47 31 65 42 6 78 94 0 5 56 85 28 37 30 77 11 71 42 48 4 42 13 96 82 35\\r\\n2\\r\\n62 86 47 34 31 59 58 76 15 88 23 19 87 48 41 32 74 89 26 20 61 5 35 39 81 2 17 55 40 69 38\\r\\n9 3 53 73 18 92 52 12 46 82 75 27 68 24 7 79 22 50 67 65 33 51 54 10 8 70 57 43 25 63 30\\r\\n', 'output': ['36.2258064516 51.3870967742']}, {'input': '99 1\\r\\n20 83 45 17 53 33 56 58 65 26 68 44 21 52 55 21 79 23 82 11 19 33 29 66 10 29 69 15 5 0 99 25 13 83 62 63 1 22 7 93 51 41 64 35 89 10 97 0 43 34 89 97 52 65 80 0 73 12 100 45 78 8 5 47 23 91 46 33 70 37 25 55 75 60 100 30 28 87 59 1 58 39 29 66 60 66 68 77 0 93 18 28 51 64 36 25 63 74 6\\r\\n0\\r\\n', 'output': ['46.5757575758 46.5757575758']}, {'input': '100 54\\r\\n46 64 22 47 5 70 61 8 25 78 88 62 91 52 3 55 46 63 90 27 92 64 33 83 7 7 0 47 64 85 89 3 40 49 11 14 51 93 5 56 8 37 82 49 10 7 14 7 33 66 35 66 41 23 7 56 55 2 74 39 75 16 46 63 81 10 73 67 70 30 37 22 97 33 52 60 38 42 16 43 79 70 15 51 70 8 99 75 7 76 49 10 96 74 82 97 15 98 75 11\\r\\n20\\r\\n91\\r\\n60\\r\\n90\\r\\n92\\r\\n88\\r\\n52\\r\\n53\\r\\n15\\r\\n92\\r\\n58\\r\\n88\\r\\n18\\r\\n95\\r\\n8\\r\\n43\\r\\n22\\r\\n69\\r\\n48\\r\\n42\\r\\n88\\r\\n', 'output': ['0.0000000000 99.0000000000']}, {'input': '86 5\\r\\n51 59 52 84 64 40 9 6 35 63 66 82 52 52 84 66 89 85 30 0 91 81 73 0 58 22 59 96 27 28 35 2 79 55 88 43 92 97 89 52 49 27 100 54 4 11 28 38 86 82 63 72 31 75 77 42 35 1 56 11 93 56 80 63 5 78 63 73 8 2 44 18 6 20 47 4 88 16 24 13 100 68 34 21 0 70\\r\\n4\\r\\n57 32 69 9 61 39 10 6 56 36 78 8 80 58 50 65 77\\r\\n2 83 3 31 85 21 62 28 79 46 49 20 22 34 42 12 76\\r\\n32 65 58 39 57 9 50 8 61 10 80 77 69 36 56 78 6\\r\\n4 86 40 30 54 75 37 48 64 15 59 44 16 5 43 73 81\\r\\n', 'output': ['24.6470588235 74.5882352941']}, {'input': '90 15\\r\\n78 78 57 46 96 3 2 79 26 58 95 79 33 33 54 60 26 93 85 74 51 100 68 40 51 14 78 0 73 61 17 59 8 40 87 93 57 72 38 92 20 15 77 74 97 59 33 45 69 71 71 32 25 58 86 26 13 36 6 73 56 36 30 43 38 26 58 6 74 13 11 23 80 54 81 76 41 22 1 73 10 15 82 47 66 50 98 74 12 63\\r\\n9\\r\\n88 89 86 66 12 15\\r\\n59 3 38 78 53 18\\r\\n21 61 36 39 57 4\\r\\n67 55 14 46 60 54\\r\\n84 75 9 23 48 1\\r\\n57 4 61 21 36 39\\r\\n79 72 2 83 6 26\\r\\n4 61 36 39 21 57\\r\\n74 32 24 11 85 42\\r\\n', 'output': ['6.1666666667 95.0000000000']}, {'input': '100 87\\r\\n89 43 79 20 88 74 41 99 16 64 53 54 54 59 26 20 31 81 100 66 12 71 93 40 53 2 55 69 53 91 23 54 43 19 78 73 95 70 69 47 15 63 60 88 98 63 13 66 95 55 12 3 4 12 14 79 80 15 62 15 93 11 23 86 17 71 22 21 40 90 71 90 81 40 50 68 55 28 100 12 0 21 66 93 80 91 62 37 9 7 59 10 18 73 7 32 50 12 57 87\\r\\n50\\r\\n25\\r\\n54\\r\\n83\\r\\n46\\r\\n6\\r\\n39\\r\\n48\\r\\n85\\r\\n10\\r\\n79\\r\\n66\\r\\n97\\r\\n6\\r\\n85\\r\\n64\\r\\n67\\r\\n87\\r\\n44\\r\\n65\\r\\n67\\r\\n41\\r\\n5\\r\\n3\\r\\n76\\r\\n93\\r\\n49\\r\\n26\\r\\n82\\r\\n3\\r\\n11\\r\\n47\\r\\n13\\r\\n70\\r\\n74\\r\\n82\\r\\n99\\r\\n43\\r\\n91\\r\\n42\\r\\n7\\r\\n92\\r\\n80\\r\\n78\\r\\n45\\r\\n3\\r\\n84\\r\\n6\\r\\n29\\r\\n38\\r\\n45\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '82 2\\r\\n89 81 1 65 17 37 65 73 19 20 67 15 86 99 30 70 44 83 2 50 20 93 57 64 30 85 53 9 22 18 97 13 85 38 70 96 3 85 12 72 44 10 62 93 60 81 7 91 17 13 64 63 83 96 15 9 62 43 83 72 65 89 49 75 36 61 98 89 48 45 74 80 37 39 71 1 76 69 56 72 28 86\\r\\n1\\r\\n41 71 27 69 17 14 20 46 53 64 5 35 7 9 56 18 75 36 16 34 81 37 58 65 66 4 40 8 44 19 31 38 30 60 77 80 42 63 73 33 43\\r\\n', 'output': ['51.6829268293 56.7804878049']}, {'input': '10 6\\r\\n100 100 100 100 100 100 100 100 100 100\\r\\n6\\r\\n4\\r\\n10\\r\\n2\\r\\n4\\r\\n7\\r\\n5\\r\\n', 'output': ['100.0000000000 100.0000000000']}, {'input': '100 6\\r\\n14 6 0 34 22 84 9 18 94 61 16 83 79 58 80 22 16 78 51 74 5 96 29 75 91 89 78 85 12 25 24 65 23 66 54 56 89 25 18 51 74 83 89 31 6 45 79 17 35 16 74 93 82 80 62 6 46 14 90 68 51 59 1 27 73 95 89 17 43 63 23 26 99 77 23 39 43 100 65 80 78 71 48 48 31 3 69 7 26 2 44 57 99 68 1 18 9 62 97 43\\r\\n0\\r\\n', 'output': ['6.9375000000 92.4375000000']}, {'input': '67 5\\r\\n11 89 2 71 41 6 35 19 34 51 49 97 37 57 84 39 3 62 14 1 67 18 49 77 16 46 99 38 3 51 68 72 31 79 35 10 65 90 28 43 88 67 2 13 93 40 52 28 75 26 90 3 22 29 44 38 73 62 17 92 91 37 29 87 25 54 8\\r\\n3\\r\\n46 57 28 2 54 12 19 18 42 4 14 37 13\\r\\n61 11 30 64 38 47 15 41 67 29 20 35 45\\r\\n11 35 67 15 38 47 61 45 30 20 41 64 29\\r\\n', 'output': ['10.9230769231 71.9230769231']}, {'input': '23 5\\r\\n30 38 57 63 1 26 11 47 47 95 83 9 61 24 82 82 86 99 90 18 4 5 76\\r\\n5\\r\\n2 15 21 13\\r\\n1 4 9 7\\r\\n3 8 14 17\\r\\n23 6 5 11\\r\\n12 10 22 16\\r\\n', 'output': ['37.7500000000 53.5000000000']}, {'input': '100 3\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 89\\r\\n0\\r\\n', 'output': ['0.0000000000 2.6969696970']}, {'input': '100 1\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100\\r\\n0\\r\\n', 'output': ['1.0000000000 1.0000000000']}, {'input': '100 100\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100\\r\\n0\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '100 100\\r\\n53 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.0000000000 53.0000000000']}, {'input': '100 1\\r\\n45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.4500000000 0.4500000000']}, {'input': '100 13\\r\\n45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.0000000000 6.4285714286']}, {'input': '100 1\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 99\\r\\n1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 100 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 67\\r\\n', 'output': ['0.9900000000 0.9900000000']}, {'input': '100 100\\r\\n1 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\\r\\n2\\r\\n1\\r\\n100\\r\\n', 'output': ['1.0000000000 100.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n2\\r\\n1\\r\\n1\\r\\n', 'output': ['1.0000000000 3.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n4\\r\\n1\\r\\n1\\r\\n2\\r\\n2\\r\\n', 'output': ['1.0000000000 2.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n5\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n', 'output': ['1.0000000000 3.0000000000']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 105;\nint n, k, a[MAXN];\nint main() {\n  int i, j, q, t;\n  cin >> n >> k;\n  for (i = 1; i <= n; i++) cin >> a[i];\n  cin >> q;\n  double m = 0;\n  for (i = 0; i < q; i++) {\n    double sum = 0;\n    cin >> t;\n    for (j = 0; j < t; j++) {\n      int x;\n      cin >> x;\n      sum += a[x];\n    }\n    m = max(m, sum / t);\n  }\n  double t = 0;\n  for (i = 1; i <= k; i++) t += (1.0 * (n - i + 1)) / n;\n  cout << fixed << setprecision(10) << m << \" \" << t << \"\\n\";\n}\n"}
{"src_uid": "899c5b77bfc0b4b99aff310741c9c0dd", "id": 47, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '7 3\\r\\n7 15 0 19 10 5 12\\r\\n2\\r\\n1 6\\r\\n7 4\\r\\n', 'output': ['5.0000000000 15.5000000000']}, {'input': '4 2\\r\\n10 8 1 17\\r\\n2\\r\\n2 3\\r\\n3 2\\r\\n', 'output': ['4.5000000000 13.5000000000']}, {'input': '10 5\\r\\n3 10 0 15 45 84 67 100 46 73\\r\\n3\\r\\n1 6\\r\\n8 9\\r\\n6 1\\r\\n', 'output': ['5.0000000000 73.0000000000']}, {'input': '8 4\\r\\n1 2 17 45 23 0 5 5\\r\\n4\\r\\n8 7\\r\\n2 3\\r\\n1 4\\r\\n6 5\\r\\n', 'output': ['5.0000000000 23.0000000000']}, {'input': '11 3\\r\\n60 100 84 74 19 77 36 48 70 18 63\\r\\n4\\r\\n3 7 11\\r\\n5 9 2\\r\\n2 9 5\\r\\n8 10 1\\r\\n', 'output': ['42.0000000000 63.0000000000']}, {'input': '9 4\\r\\n25 0 71 69 12 67 39 4 62\\r\\n2\\r\\n2 1\\r\\n5 7\\r\\n', 'output': ['12.5000000000 70.0000000000']}, {'input': '6 4\\r\\n85 84 81 33 28 94\\r\\n3\\r\\n3\\r\\n4\\r\\n6\\r\\n', 'output': ['28.0000000000 94.0000000000']}, {'input': '7 2\\r\\n4 34 56 0 35 23 2\\r\\n1\\r\\n1 2 6\\r\\n', 'output': ['12.3333333333 31.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n2\\r\\n1\\r\\n2\\r\\n', 'output': ['1.0000000000 2.0000000000']}, {'input': '1 1\\r\\n0\\r\\n1\\r\\n1\\r\\n', 'output': ['0.0000000000 0.0000000000']}, {'input': '1 1\\r\\n99\\r\\n0\\r\\n', 'output': ['99.0000000000 99.0000000000']}, {'input': '5 1\\r\\n34 0 100 45 3\\r\\n0\\r\\n', 'output': ['36.4000000000 36.4000000000']}, {'input': '6 1\\r\\n33 2 7 99 0 0\\r\\n1\\r\\n3 6 5 4 1 2\\r\\n', 'output': ['23.5000000000 23.5000000000']}, {'input': '6 6\\r\\n1 0 46 5 79 4\\r\\n0\\r\\n', 'output': ['0.0000000000 79.0000000000']}, {'input': '8 8\\r\\n3 7 74 90 100 74 4 55\\r\\n6\\r\\n2\\r\\n3\\r\\n4\\r\\n8\\r\\n6\\r\\n7\\r\\n', 'output': ['3.0000000000 100.0000000000']}, {'input': '10 5\\r\\n0 0 0 0 0 0 0 0 0 0\\r\\n3\\r\\n1 2\\r\\n8 5\\r\\n2 1\\r\\n', 'output': ['0.0000000000 0.0000000000']}, {'input': '15 4\\r\\n3 6 15 0 99 100 57 32 67 99 44 10 85 45 37\\r\\n6\\r\\n2 3 1\\r\\n15 13 12\\r\\n3 1 2\\r\\n10 9 5\\r\\n8 4 11\\r\\n8 4 11\\r\\n', 'output': ['8.0000000000 88.3333333333']}, {'input': '8 3\\r\\n45 67 0 98 12 56 93 99\\r\\n1\\r\\n4 5\\r\\n', 'output': ['22.5000000000 96.0000000000']}, {'input': '10 4\\r\\n45 32 0 0 99 73 24 22 81 56\\r\\n6\\r\\n4 3\\r\\n3 4\\r\\n5 9\\r\\n4 3\\r\\n9 5\\r\\n5 9\\r\\n', 'output': ['0.0000000000 90.0000000000']}, {'input': '10 4\\r\\n45 32 0 0 99 73 24 22 81 56\\r\\n2\\r\\n4 8\\r\\n1 9\\r\\n', 'output': ['11.0000000000 86.0000000000']}, {'input': '4 1\\r\\n4 10 0 35\\r\\n7\\r\\n1 2 3 4\\r\\n1 2 4 3\\r\\n3 2 4 1\\r\\n4 3 2 1\\r\\n3 1 4 2\\r\\n2 4 1 3\\r\\n4 3 1 2\\r\\n', 'output': ['12.2500000000 12.2500000000']}, {'input': '12 3\\r\\n4 77 0 90 2 5 74 7 77 100 45 34\\r\\n3\\r\\n9 12 1 5\\r\\n4 3 10 2\\r\\n11 6 7 8\\r\\n', 'output': ['29.2500000000 66.7500000000']}, {'input': '15 2\\r\\n56 9 100 86 5 44 3 63 98 23 11 84 56 33 84\\r\\n1\\r\\n4 7 6 2 8 3 15\\r\\n', 'output': ['38.2857142857 55.5714285714']}, {'input': '19 2\\r\\n63 18 76 3 18 22 2 49 50 23 13 76 29 36 95 49 78 95 25\\r\\n5\\r\\n15 5 3 4 18 17 6 1 8\\r\\n14 11 2 19 13 7 12 16 9\\r\\n19 16 13 9 2 11 14 12 7\\r\\n12 9 11 7 14 2 19 13 16\\r\\n15 18 17 3 1 5 8 6 4\\r\\n', 'output': ['33.1111111111 55.4444444444']}, {'input': '67 5\\r\\n11 89 2 71 41 6 35 19 34 51 49 97 37 57 84 39 3 62 14 1 67 18 49 77 16 46 99 38 3 51 68 72 31 79 35 10 65 90 28 43 88 67 2 13 93 40 52 28 75 26 90 3 22 29 44 38 73 62 17 92 91 37 29 87 25 54 8\\r\\n3\\r\\n46 57 28 2 54 12 19 18 42 4 14 37 13\\r\\n61 11 30 64 38 47 15 41 67 29 20 35 45\\r\\n11 35 67 15 38 47 61 45 30 20 41 64 29\\r\\n', 'output': ['10.9230769231 71.9230769231']}, {'input': '89 3\\r\\n100 52 96 60 96 86 70 2 16 44 79 37 18 16 92 0 55 49 98 83 47 42 45 92 33 99 20 52 32 47 30 61 89 86 29 64 80 96 35 85 17 39 14 2 43 8 65 98 62 57 54 73 87 79 34 42 50 89 56 54 52 59 93 31 95 86 29 4 4 46 2 14 45 73 42 24 3 55 47 10 60 61 67 16 20 71 47 91 29\\r\\n1\\r\\n38 1 80 16 77 58 17 30 39 4 49 63 11 47 8 61 10 24 64 15 74 6 45 12 35 79 22 52 20\\r\\n', 'output': ['25.3448275862 74.4137931034']}, {'input': '53 27\\r\\n100 85 0 86 19 32 82 66 54 10 9 81 40 65 23 17 58 68 100 46 28 48 28 11 79 11 36 89 61 11 67 88 79 28 16 93 31 34 54 9 33 45 60 18 23 28 38 71 76 51 10 9 92\\r\\n20\\r\\n43\\r\\n43\\r\\n14\\r\\n2\\r\\n25\\r\\n31\\r\\n25\\r\\n13\\r\\n48\\r\\n1\\r\\n38\\r\\n46\\r\\n9\\r\\n19\\r\\n30\\r\\n1\\r\\n28\\r\\n19\\r\\n43\\r\\n27\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '93 3\\r\\n47 45 32 90 54 22 99 70 55 22 2 86 23 18 0 42 42 41 63 90 60 70 81 38 42 4 17 96 15 65 2 21 66 5 18 20 97 38 18 2 60 41 38 18 39 38 43 75 51 97 72 90 59 4 40 34 40 18 15 71 82 9 66 82 0 50 21 37 47 31 65 42 6 78 94 0 5 56 85 28 37 30 77 11 71 42 48 4 42 13 96 82 35\\r\\n2\\r\\n62 86 47 34 31 59 58 76 15 88 23 19 87 48 41 32 74 89 26 20 61 5 35 39 81 2 17 55 40 69 38\\r\\n9 3 53 73 18 92 52 12 46 82 75 27 68 24 7 79 22 50 67 65 33 51 54 10 8 70 57 43 25 63 30\\r\\n', 'output': ['36.2258064516 51.3870967742']}, {'input': '99 1\\r\\n20 83 45 17 53 33 56 58 65 26 68 44 21 52 55 21 79 23 82 11 19 33 29 66 10 29 69 15 5 0 99 25 13 83 62 63 1 22 7 93 51 41 64 35 89 10 97 0 43 34 89 97 52 65 80 0 73 12 100 45 78 8 5 47 23 91 46 33 70 37 25 55 75 60 100 30 28 87 59 1 58 39 29 66 60 66 68 77 0 93 18 28 51 64 36 25 63 74 6\\r\\n0\\r\\n', 'output': ['46.5757575758 46.5757575758']}, {'input': '100 54\\r\\n46 64 22 47 5 70 61 8 25 78 88 62 91 52 3 55 46 63 90 27 92 64 33 83 7 7 0 47 64 85 89 3 40 49 11 14 51 93 5 56 8 37 82 49 10 7 14 7 33 66 35 66 41 23 7 56 55 2 74 39 75 16 46 63 81 10 73 67 70 30 37 22 97 33 52 60 38 42 16 43 79 70 15 51 70 8 99 75 7 76 49 10 96 74 82 97 15 98 75 11\\r\\n20\\r\\n91\\r\\n60\\r\\n90\\r\\n92\\r\\n88\\r\\n52\\r\\n53\\r\\n15\\r\\n92\\r\\n58\\r\\n88\\r\\n18\\r\\n95\\r\\n8\\r\\n43\\r\\n22\\r\\n69\\r\\n48\\r\\n42\\r\\n88\\r\\n', 'output': ['0.0000000000 99.0000000000']}, {'input': '86 5\\r\\n51 59 52 84 64 40 9 6 35 63 66 82 52 52 84 66 89 85 30 0 91 81 73 0 58 22 59 96 27 28 35 2 79 55 88 43 92 97 89 52 49 27 100 54 4 11 28 38 86 82 63 72 31 75 77 42 35 1 56 11 93 56 80 63 5 78 63 73 8 2 44 18 6 20 47 4 88 16 24 13 100 68 34 21 0 70\\r\\n4\\r\\n57 32 69 9 61 39 10 6 56 36 78 8 80 58 50 65 77\\r\\n2 83 3 31 85 21 62 28 79 46 49 20 22 34 42 12 76\\r\\n32 65 58 39 57 9 50 8 61 10 80 77 69 36 56 78 6\\r\\n4 86 40 30 54 75 37 48 64 15 59 44 16 5 43 73 81\\r\\n', 'output': ['24.6470588235 74.5882352941']}, {'input': '90 15\\r\\n78 78 57 46 96 3 2 79 26 58 95 79 33 33 54 60 26 93 85 74 51 100 68 40 51 14 78 0 73 61 17 59 8 40 87 93 57 72 38 92 20 15 77 74 97 59 33 45 69 71 71 32 25 58 86 26 13 36 6 73 56 36 30 43 38 26 58 6 74 13 11 23 80 54 81 76 41 22 1 73 10 15 82 47 66 50 98 74 12 63\\r\\n9\\r\\n88 89 86 66 12 15\\r\\n59 3 38 78 53 18\\r\\n21 61 36 39 57 4\\r\\n67 55 14 46 60 54\\r\\n84 75 9 23 48 1\\r\\n57 4 61 21 36 39\\r\\n79 72 2 83 6 26\\r\\n4 61 36 39 21 57\\r\\n74 32 24 11 85 42\\r\\n', 'output': ['6.1666666667 95.0000000000']}, {'input': '100 87\\r\\n89 43 79 20 88 74 41 99 16 64 53 54 54 59 26 20 31 81 100 66 12 71 93 40 53 2 55 69 53 91 23 54 43 19 78 73 95 70 69 47 15 63 60 88 98 63 13 66 95 55 12 3 4 12 14 79 80 15 62 15 93 11 23 86 17 71 22 21 40 90 71 90 81 40 50 68 55 28 100 12 0 21 66 93 80 91 62 37 9 7 59 10 18 73 7 32 50 12 57 87\\r\\n50\\r\\n25\\r\\n54\\r\\n83\\r\\n46\\r\\n6\\r\\n39\\r\\n48\\r\\n85\\r\\n10\\r\\n79\\r\\n66\\r\\n97\\r\\n6\\r\\n85\\r\\n64\\r\\n67\\r\\n87\\r\\n44\\r\\n65\\r\\n67\\r\\n41\\r\\n5\\r\\n3\\r\\n76\\r\\n93\\r\\n49\\r\\n26\\r\\n82\\r\\n3\\r\\n11\\r\\n47\\r\\n13\\r\\n70\\r\\n74\\r\\n82\\r\\n99\\r\\n43\\r\\n91\\r\\n42\\r\\n7\\r\\n92\\r\\n80\\r\\n78\\r\\n45\\r\\n3\\r\\n84\\r\\n6\\r\\n29\\r\\n38\\r\\n45\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '82 2\\r\\n89 81 1 65 17 37 65 73 19 20 67 15 86 99 30 70 44 83 2 50 20 93 57 64 30 85 53 9 22 18 97 13 85 38 70 96 3 85 12 72 44 10 62 93 60 81 7 91 17 13 64 63 83 96 15 9 62 43 83 72 65 89 49 75 36 61 98 89 48 45 74 80 37 39 71 1 76 69 56 72 28 86\\r\\n1\\r\\n41 71 27 69 17 14 20 46 53 64 5 35 7 9 56 18 75 36 16 34 81 37 58 65 66 4 40 8 44 19 31 38 30 60 77 80 42 63 73 33 43\\r\\n', 'output': ['51.6829268293 56.7804878049']}, {'input': '10 6\\r\\n100 100 100 100 100 100 100 100 100 100\\r\\n6\\r\\n4\\r\\n10\\r\\n2\\r\\n4\\r\\n7\\r\\n5\\r\\n', 'output': ['100.0000000000 100.0000000000']}, {'input': '100 6\\r\\n14 6 0 34 22 84 9 18 94 61 16 83 79 58 80 22 16 78 51 74 5 96 29 75 91 89 78 85 12 25 24 65 23 66 54 56 89 25 18 51 74 83 89 31 6 45 79 17 35 16 74 93 82 80 62 6 46 14 90 68 51 59 1 27 73 95 89 17 43 63 23 26 99 77 23 39 43 100 65 80 78 71 48 48 31 3 69 7 26 2 44 57 99 68 1 18 9 62 97 43\\r\\n0\\r\\n', 'output': ['6.9375000000 92.4375000000']}, {'input': '67 5\\r\\n11 89 2 71 41 6 35 19 34 51 49 97 37 57 84 39 3 62 14 1 67 18 49 77 16 46 99 38 3 51 68 72 31 79 35 10 65 90 28 43 88 67 2 13 93 40 52 28 75 26 90 3 22 29 44 38 73 62 17 92 91 37 29 87 25 54 8\\r\\n3\\r\\n46 57 28 2 54 12 19 18 42 4 14 37 13\\r\\n61 11 30 64 38 47 15 41 67 29 20 35 45\\r\\n11 35 67 15 38 47 61 45 30 20 41 64 29\\r\\n', 'output': ['10.9230769231 71.9230769231']}, {'input': '23 5\\r\\n30 38 57 63 1 26 11 47 47 95 83 9 61 24 82 82 86 99 90 18 4 5 76\\r\\n5\\r\\n2 15 21 13\\r\\n1 4 9 7\\r\\n3 8 14 17\\r\\n23 6 5 11\\r\\n12 10 22 16\\r\\n', 'output': ['37.7500000000 53.5000000000']}, {'input': '100 3\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 89\\r\\n0\\r\\n', 'output': ['0.0000000000 2.6969696970']}, {'input': '100 1\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100\\r\\n0\\r\\n', 'output': ['1.0000000000 1.0000000000']}, {'input': '100 100\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100\\r\\n0\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '100 100\\r\\n53 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.0000000000 53.0000000000']}, {'input': '100 1\\r\\n45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.4500000000 0.4500000000']}, {'input': '100 13\\r\\n45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.0000000000 6.4285714286']}, {'input': '100 1\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 99\\r\\n1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 100 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 67\\r\\n', 'output': ['0.9900000000 0.9900000000']}, {'input': '100 100\\r\\n1 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\\r\\n2\\r\\n1\\r\\n100\\r\\n', 'output': ['1.0000000000 100.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n2\\r\\n1\\r\\n1\\r\\n', 'output': ['1.0000000000 3.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n4\\r\\n1\\r\\n1\\r\\n2\\r\\n2\\r\\n', 'output': ['1.0000000000 2.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n5\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n', 'output': ['1.0000000000 3.0000000000']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, k, q;\n  cin >> n >> k;\n  double arr[101] = {};\n  double sum = 0;\n  for (int i = 1; i <= n; i++) {\n    cin >> arr[i];\n    sum += arr[i];\n  }\n  cin >> q;\n  vector<int> a(q + 1, 0);\n  int b = 0;\n  for (int i = 1; i <= q; i++) {\n    cin >> b;\n    a[b] = 1;\n  }\n  for (int i = 1; i <= k; i++)\n    for (int j = 1; j <= n; j++)\n      if (a[j] == 0) sum -= arr[j];\n  double avg = sum / k;\n  cout << avg << \" \";\n  int flag = 0;\n  double mx = arr[1];\n  double mn = arr[1];\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == 1) continue;\n    mx = max(mx, arr[i]);\n    mn = min(mn, arr[i]);\n  }\n  cout << fixed << setprecision(9) << mx;\n  return 0;\n}\n"}
{"src_uid": "899c5b77bfc0b4b99aff310741c9c0dd", "id": 47, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '7 3\\r\\n7 15 0 19 10 5 12\\r\\n2\\r\\n1 6\\r\\n7 4\\r\\n', 'output': ['5.0000000000 15.5000000000']}, {'input': '4 2\\r\\n10 8 1 17\\r\\n2\\r\\n2 3\\r\\n3 2\\r\\n', 'output': ['4.5000000000 13.5000000000']}, {'input': '10 5\\r\\n3 10 0 15 45 84 67 100 46 73\\r\\n3\\r\\n1 6\\r\\n8 9\\r\\n6 1\\r\\n', 'output': ['5.0000000000 73.0000000000']}, {'input': '8 4\\r\\n1 2 17 45 23 0 5 5\\r\\n4\\r\\n8 7\\r\\n2 3\\r\\n1 4\\r\\n6 5\\r\\n', 'output': ['5.0000000000 23.0000000000']}, {'input': '11 3\\r\\n60 100 84 74 19 77 36 48 70 18 63\\r\\n4\\r\\n3 7 11\\r\\n5 9 2\\r\\n2 9 5\\r\\n8 10 1\\r\\n', 'output': ['42.0000000000 63.0000000000']}, {'input': '9 4\\r\\n25 0 71 69 12 67 39 4 62\\r\\n2\\r\\n2 1\\r\\n5 7\\r\\n', 'output': ['12.5000000000 70.0000000000']}, {'input': '6 4\\r\\n85 84 81 33 28 94\\r\\n3\\r\\n3\\r\\n4\\r\\n6\\r\\n', 'output': ['28.0000000000 94.0000000000']}, {'input': '7 2\\r\\n4 34 56 0 35 23 2\\r\\n1\\r\\n1 2 6\\r\\n', 'output': ['12.3333333333 31.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n2\\r\\n1\\r\\n2\\r\\n', 'output': ['1.0000000000 2.0000000000']}, {'input': '1 1\\r\\n0\\r\\n1\\r\\n1\\r\\n', 'output': ['0.0000000000 0.0000000000']}, {'input': '1 1\\r\\n99\\r\\n0\\r\\n', 'output': ['99.0000000000 99.0000000000']}, {'input': '5 1\\r\\n34 0 100 45 3\\r\\n0\\r\\n', 'output': ['36.4000000000 36.4000000000']}, {'input': '6 1\\r\\n33 2 7 99 0 0\\r\\n1\\r\\n3 6 5 4 1 2\\r\\n', 'output': ['23.5000000000 23.5000000000']}, {'input': '6 6\\r\\n1 0 46 5 79 4\\r\\n0\\r\\n', 'output': ['0.0000000000 79.0000000000']}, {'input': '8 8\\r\\n3 7 74 90 100 74 4 55\\r\\n6\\r\\n2\\r\\n3\\r\\n4\\r\\n8\\r\\n6\\r\\n7\\r\\n', 'output': ['3.0000000000 100.0000000000']}, {'input': '10 5\\r\\n0 0 0 0 0 0 0 0 0 0\\r\\n3\\r\\n1 2\\r\\n8 5\\r\\n2 1\\r\\n', 'output': ['0.0000000000 0.0000000000']}, {'input': '15 4\\r\\n3 6 15 0 99 100 57 32 67 99 44 10 85 45 37\\r\\n6\\r\\n2 3 1\\r\\n15 13 12\\r\\n3 1 2\\r\\n10 9 5\\r\\n8 4 11\\r\\n8 4 11\\r\\n', 'output': ['8.0000000000 88.3333333333']}, {'input': '8 3\\r\\n45 67 0 98 12 56 93 99\\r\\n1\\r\\n4 5\\r\\n', 'output': ['22.5000000000 96.0000000000']}, {'input': '10 4\\r\\n45 32 0 0 99 73 24 22 81 56\\r\\n6\\r\\n4 3\\r\\n3 4\\r\\n5 9\\r\\n4 3\\r\\n9 5\\r\\n5 9\\r\\n', 'output': ['0.0000000000 90.0000000000']}, {'input': '10 4\\r\\n45 32 0 0 99 73 24 22 81 56\\r\\n2\\r\\n4 8\\r\\n1 9\\r\\n', 'output': ['11.0000000000 86.0000000000']}, {'input': '4 1\\r\\n4 10 0 35\\r\\n7\\r\\n1 2 3 4\\r\\n1 2 4 3\\r\\n3 2 4 1\\r\\n4 3 2 1\\r\\n3 1 4 2\\r\\n2 4 1 3\\r\\n4 3 1 2\\r\\n', 'output': ['12.2500000000 12.2500000000']}, {'input': '12 3\\r\\n4 77 0 90 2 5 74 7 77 100 45 34\\r\\n3\\r\\n9 12 1 5\\r\\n4 3 10 2\\r\\n11 6 7 8\\r\\n', 'output': ['29.2500000000 66.7500000000']}, {'input': '15 2\\r\\n56 9 100 86 5 44 3 63 98 23 11 84 56 33 84\\r\\n1\\r\\n4 7 6 2 8 3 15\\r\\n', 'output': ['38.2857142857 55.5714285714']}, {'input': '19 2\\r\\n63 18 76 3 18 22 2 49 50 23 13 76 29 36 95 49 78 95 25\\r\\n5\\r\\n15 5 3 4 18 17 6 1 8\\r\\n14 11 2 19 13 7 12 16 9\\r\\n19 16 13 9 2 11 14 12 7\\r\\n12 9 11 7 14 2 19 13 16\\r\\n15 18 17 3 1 5 8 6 4\\r\\n', 'output': ['33.1111111111 55.4444444444']}, {'input': '67 5\\r\\n11 89 2 71 41 6 35 19 34 51 49 97 37 57 84 39 3 62 14 1 67 18 49 77 16 46 99 38 3 51 68 72 31 79 35 10 65 90 28 43 88 67 2 13 93 40 52 28 75 26 90 3 22 29 44 38 73 62 17 92 91 37 29 87 25 54 8\\r\\n3\\r\\n46 57 28 2 54 12 19 18 42 4 14 37 13\\r\\n61 11 30 64 38 47 15 41 67 29 20 35 45\\r\\n11 35 67 15 38 47 61 45 30 20 41 64 29\\r\\n', 'output': ['10.9230769231 71.9230769231']}, {'input': '89 3\\r\\n100 52 96 60 96 86 70 2 16 44 79 37 18 16 92 0 55 49 98 83 47 42 45 92 33 99 20 52 32 47 30 61 89 86 29 64 80 96 35 85 17 39 14 2 43 8 65 98 62 57 54 73 87 79 34 42 50 89 56 54 52 59 93 31 95 86 29 4 4 46 2 14 45 73 42 24 3 55 47 10 60 61 67 16 20 71 47 91 29\\r\\n1\\r\\n38 1 80 16 77 58 17 30 39 4 49 63 11 47 8 61 10 24 64 15 74 6 45 12 35 79 22 52 20\\r\\n', 'output': ['25.3448275862 74.4137931034']}, {'input': '53 27\\r\\n100 85 0 86 19 32 82 66 54 10 9 81 40 65 23 17 58 68 100 46 28 48 28 11 79 11 36 89 61 11 67 88 79 28 16 93 31 34 54 9 33 45 60 18 23 28 38 71 76 51 10 9 92\\r\\n20\\r\\n43\\r\\n43\\r\\n14\\r\\n2\\r\\n25\\r\\n31\\r\\n25\\r\\n13\\r\\n48\\r\\n1\\r\\n38\\r\\n46\\r\\n9\\r\\n19\\r\\n30\\r\\n1\\r\\n28\\r\\n19\\r\\n43\\r\\n27\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '93 3\\r\\n47 45 32 90 54 22 99 70 55 22 2 86 23 18 0 42 42 41 63 90 60 70 81 38 42 4 17 96 15 65 2 21 66 5 18 20 97 38 18 2 60 41 38 18 39 38 43 75 51 97 72 90 59 4 40 34 40 18 15 71 82 9 66 82 0 50 21 37 47 31 65 42 6 78 94 0 5 56 85 28 37 30 77 11 71 42 48 4 42 13 96 82 35\\r\\n2\\r\\n62 86 47 34 31 59 58 76 15 88 23 19 87 48 41 32 74 89 26 20 61 5 35 39 81 2 17 55 40 69 38\\r\\n9 3 53 73 18 92 52 12 46 82 75 27 68 24 7 79 22 50 67 65 33 51 54 10 8 70 57 43 25 63 30\\r\\n', 'output': ['36.2258064516 51.3870967742']}, {'input': '99 1\\r\\n20 83 45 17 53 33 56 58 65 26 68 44 21 52 55 21 79 23 82 11 19 33 29 66 10 29 69 15 5 0 99 25 13 83 62 63 1 22 7 93 51 41 64 35 89 10 97 0 43 34 89 97 52 65 80 0 73 12 100 45 78 8 5 47 23 91 46 33 70 37 25 55 75 60 100 30 28 87 59 1 58 39 29 66 60 66 68 77 0 93 18 28 51 64 36 25 63 74 6\\r\\n0\\r\\n', 'output': ['46.5757575758 46.5757575758']}, {'input': '100 54\\r\\n46 64 22 47 5 70 61 8 25 78 88 62 91 52 3 55 46 63 90 27 92 64 33 83 7 7 0 47 64 85 89 3 40 49 11 14 51 93 5 56 8 37 82 49 10 7 14 7 33 66 35 66 41 23 7 56 55 2 74 39 75 16 46 63 81 10 73 67 70 30 37 22 97 33 52 60 38 42 16 43 79 70 15 51 70 8 99 75 7 76 49 10 96 74 82 97 15 98 75 11\\r\\n20\\r\\n91\\r\\n60\\r\\n90\\r\\n92\\r\\n88\\r\\n52\\r\\n53\\r\\n15\\r\\n92\\r\\n58\\r\\n88\\r\\n18\\r\\n95\\r\\n8\\r\\n43\\r\\n22\\r\\n69\\r\\n48\\r\\n42\\r\\n88\\r\\n', 'output': ['0.0000000000 99.0000000000']}, {'input': '86 5\\r\\n51 59 52 84 64 40 9 6 35 63 66 82 52 52 84 66 89 85 30 0 91 81 73 0 58 22 59 96 27 28 35 2 79 55 88 43 92 97 89 52 49 27 100 54 4 11 28 38 86 82 63 72 31 75 77 42 35 1 56 11 93 56 80 63 5 78 63 73 8 2 44 18 6 20 47 4 88 16 24 13 100 68 34 21 0 70\\r\\n4\\r\\n57 32 69 9 61 39 10 6 56 36 78 8 80 58 50 65 77\\r\\n2 83 3 31 85 21 62 28 79 46 49 20 22 34 42 12 76\\r\\n32 65 58 39 57 9 50 8 61 10 80 77 69 36 56 78 6\\r\\n4 86 40 30 54 75 37 48 64 15 59 44 16 5 43 73 81\\r\\n', 'output': ['24.6470588235 74.5882352941']}, {'input': '90 15\\r\\n78 78 57 46 96 3 2 79 26 58 95 79 33 33 54 60 26 93 85 74 51 100 68 40 51 14 78 0 73 61 17 59 8 40 87 93 57 72 38 92 20 15 77 74 97 59 33 45 69 71 71 32 25 58 86 26 13 36 6 73 56 36 30 43 38 26 58 6 74 13 11 23 80 54 81 76 41 22 1 73 10 15 82 47 66 50 98 74 12 63\\r\\n9\\r\\n88 89 86 66 12 15\\r\\n59 3 38 78 53 18\\r\\n21 61 36 39 57 4\\r\\n67 55 14 46 60 54\\r\\n84 75 9 23 48 1\\r\\n57 4 61 21 36 39\\r\\n79 72 2 83 6 26\\r\\n4 61 36 39 21 57\\r\\n74 32 24 11 85 42\\r\\n', 'output': ['6.1666666667 95.0000000000']}, {'input': '100 87\\r\\n89 43 79 20 88 74 41 99 16 64 53 54 54 59 26 20 31 81 100 66 12 71 93 40 53 2 55 69 53 91 23 54 43 19 78 73 95 70 69 47 15 63 60 88 98 63 13 66 95 55 12 3 4 12 14 79 80 15 62 15 93 11 23 86 17 71 22 21 40 90 71 90 81 40 50 68 55 28 100 12 0 21 66 93 80 91 62 37 9 7 59 10 18 73 7 32 50 12 57 87\\r\\n50\\r\\n25\\r\\n54\\r\\n83\\r\\n46\\r\\n6\\r\\n39\\r\\n48\\r\\n85\\r\\n10\\r\\n79\\r\\n66\\r\\n97\\r\\n6\\r\\n85\\r\\n64\\r\\n67\\r\\n87\\r\\n44\\r\\n65\\r\\n67\\r\\n41\\r\\n5\\r\\n3\\r\\n76\\r\\n93\\r\\n49\\r\\n26\\r\\n82\\r\\n3\\r\\n11\\r\\n47\\r\\n13\\r\\n70\\r\\n74\\r\\n82\\r\\n99\\r\\n43\\r\\n91\\r\\n42\\r\\n7\\r\\n92\\r\\n80\\r\\n78\\r\\n45\\r\\n3\\r\\n84\\r\\n6\\r\\n29\\r\\n38\\r\\n45\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '82 2\\r\\n89 81 1 65 17 37 65 73 19 20 67 15 86 99 30 70 44 83 2 50 20 93 57 64 30 85 53 9 22 18 97 13 85 38 70 96 3 85 12 72 44 10 62 93 60 81 7 91 17 13 64 63 83 96 15 9 62 43 83 72 65 89 49 75 36 61 98 89 48 45 74 80 37 39 71 1 76 69 56 72 28 86\\r\\n1\\r\\n41 71 27 69 17 14 20 46 53 64 5 35 7 9 56 18 75 36 16 34 81 37 58 65 66 4 40 8 44 19 31 38 30 60 77 80 42 63 73 33 43\\r\\n', 'output': ['51.6829268293 56.7804878049']}, {'input': '10 6\\r\\n100 100 100 100 100 100 100 100 100 100\\r\\n6\\r\\n4\\r\\n10\\r\\n2\\r\\n4\\r\\n7\\r\\n5\\r\\n', 'output': ['100.0000000000 100.0000000000']}, {'input': '100 6\\r\\n14 6 0 34 22 84 9 18 94 61 16 83 79 58 80 22 16 78 51 74 5 96 29 75 91 89 78 85 12 25 24 65 23 66 54 56 89 25 18 51 74 83 89 31 6 45 79 17 35 16 74 93 82 80 62 6 46 14 90 68 51 59 1 27 73 95 89 17 43 63 23 26 99 77 23 39 43 100 65 80 78 71 48 48 31 3 69 7 26 2 44 57 99 68 1 18 9 62 97 43\\r\\n0\\r\\n', 'output': ['6.9375000000 92.4375000000']}, {'input': '67 5\\r\\n11 89 2 71 41 6 35 19 34 51 49 97 37 57 84 39 3 62 14 1 67 18 49 77 16 46 99 38 3 51 68 72 31 79 35 10 65 90 28 43 88 67 2 13 93 40 52 28 75 26 90 3 22 29 44 38 73 62 17 92 91 37 29 87 25 54 8\\r\\n3\\r\\n46 57 28 2 54 12 19 18 42 4 14 37 13\\r\\n61 11 30 64 38 47 15 41 67 29 20 35 45\\r\\n11 35 67 15 38 47 61 45 30 20 41 64 29\\r\\n', 'output': ['10.9230769231 71.9230769231']}, {'input': '23 5\\r\\n30 38 57 63 1 26 11 47 47 95 83 9 61 24 82 82 86 99 90 18 4 5 76\\r\\n5\\r\\n2 15 21 13\\r\\n1 4 9 7\\r\\n3 8 14 17\\r\\n23 6 5 11\\r\\n12 10 22 16\\r\\n', 'output': ['37.7500000000 53.5000000000']}, {'input': '100 3\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 89\\r\\n0\\r\\n', 'output': ['0.0000000000 2.6969696970']}, {'input': '100 1\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100\\r\\n0\\r\\n', 'output': ['1.0000000000 1.0000000000']}, {'input': '100 100\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100\\r\\n0\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '100 100\\r\\n53 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.0000000000 53.0000000000']}, {'input': '100 1\\r\\n45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.4500000000 0.4500000000']}, {'input': '100 13\\r\\n45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.0000000000 6.4285714286']}, {'input': '100 1\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 99\\r\\n1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 100 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 67\\r\\n', 'output': ['0.9900000000 0.9900000000']}, {'input': '100 100\\r\\n1 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\\r\\n2\\r\\n1\\r\\n100\\r\\n', 'output': ['1.0000000000 100.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n2\\r\\n1\\r\\n1\\r\\n', 'output': ['1.0000000000 3.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n4\\r\\n1\\r\\n1\\r\\n2\\r\\n2\\r\\n', 'output': ['1.0000000000 2.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n5\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n', 'output': ['1.0000000000 3.0000000000']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, q;\ndouble a[1000], sum, ave, max, min;\nint main() {\n  scanf(\"%d %d\", &n, &m);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%lf\", &a[i]);\n    sum += a[i];\n  }\n  ave = sum / n;\n  max = 0;\n  min = 0;\n  for (int i = 0; i < m; i++) {\n    scanf(\"%d\", &q);\n    max = 0;\n    min = 0;\n    for (int j = 0; j < q; j++) {\n      int x;\n      scanf(\"%d\", &x);\n      if (a[x - 1] > max) max = a[x - 1];\n      if (a[x - 1] < min) min = a[x - 1];\n    }\n    if (max > ave) max = ave;\n    if (min < ave) min = ave;\n    sum -= max;\n    sum += min;\n  }\n  printf(\"%.15lf %.15lf\", min, sum / n);\n}\n"}
{"src_uid": "899c5b77bfc0b4b99aff310741c9c0dd", "id": 47, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '7 3\\r\\n7 15 0 19 10 5 12\\r\\n2\\r\\n1 6\\r\\n7 4\\r\\n', 'output': ['5.0000000000 15.5000000000']}, {'input': '4 2\\r\\n10 8 1 17\\r\\n2\\r\\n2 3\\r\\n3 2\\r\\n', 'output': ['4.5000000000 13.5000000000']}, {'input': '10 5\\r\\n3 10 0 15 45 84 67 100 46 73\\r\\n3\\r\\n1 6\\r\\n8 9\\r\\n6 1\\r\\n', 'output': ['5.0000000000 73.0000000000']}, {'input': '8 4\\r\\n1 2 17 45 23 0 5 5\\r\\n4\\r\\n8 7\\r\\n2 3\\r\\n1 4\\r\\n6 5\\r\\n', 'output': ['5.0000000000 23.0000000000']}, {'input': '11 3\\r\\n60 100 84 74 19 77 36 48 70 18 63\\r\\n4\\r\\n3 7 11\\r\\n5 9 2\\r\\n2 9 5\\r\\n8 10 1\\r\\n', 'output': ['42.0000000000 63.0000000000']}, {'input': '9 4\\r\\n25 0 71 69 12 67 39 4 62\\r\\n2\\r\\n2 1\\r\\n5 7\\r\\n', 'output': ['12.5000000000 70.0000000000']}, {'input': '6 4\\r\\n85 84 81 33 28 94\\r\\n3\\r\\n3\\r\\n4\\r\\n6\\r\\n', 'output': ['28.0000000000 94.0000000000']}, {'input': '7 2\\r\\n4 34 56 0 35 23 2\\r\\n1\\r\\n1 2 6\\r\\n', 'output': ['12.3333333333 31.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n2\\r\\n1\\r\\n2\\r\\n', 'output': ['1.0000000000 2.0000000000']}, {'input': '1 1\\r\\n0\\r\\n1\\r\\n1\\r\\n', 'output': ['0.0000000000 0.0000000000']}, {'input': '1 1\\r\\n99\\r\\n0\\r\\n', 'output': ['99.0000000000 99.0000000000']}, {'input': '5 1\\r\\n34 0 100 45 3\\r\\n0\\r\\n', 'output': ['36.4000000000 36.4000000000']}, {'input': '6 1\\r\\n33 2 7 99 0 0\\r\\n1\\r\\n3 6 5 4 1 2\\r\\n', 'output': ['23.5000000000 23.5000000000']}, {'input': '6 6\\r\\n1 0 46 5 79 4\\r\\n0\\r\\n', 'output': ['0.0000000000 79.0000000000']}, {'input': '8 8\\r\\n3 7 74 90 100 74 4 55\\r\\n6\\r\\n2\\r\\n3\\r\\n4\\r\\n8\\r\\n6\\r\\n7\\r\\n', 'output': ['3.0000000000 100.0000000000']}, {'input': '10 5\\r\\n0 0 0 0 0 0 0 0 0 0\\r\\n3\\r\\n1 2\\r\\n8 5\\r\\n2 1\\r\\n', 'output': ['0.0000000000 0.0000000000']}, {'input': '15 4\\r\\n3 6 15 0 99 100 57 32 67 99 44 10 85 45 37\\r\\n6\\r\\n2 3 1\\r\\n15 13 12\\r\\n3 1 2\\r\\n10 9 5\\r\\n8 4 11\\r\\n8 4 11\\r\\n', 'output': ['8.0000000000 88.3333333333']}, {'input': '8 3\\r\\n45 67 0 98 12 56 93 99\\r\\n1\\r\\n4 5\\r\\n', 'output': ['22.5000000000 96.0000000000']}, {'input': '10 4\\r\\n45 32 0 0 99 73 24 22 81 56\\r\\n6\\r\\n4 3\\r\\n3 4\\r\\n5 9\\r\\n4 3\\r\\n9 5\\r\\n5 9\\r\\n', 'output': ['0.0000000000 90.0000000000']}, {'input': '10 4\\r\\n45 32 0 0 99 73 24 22 81 56\\r\\n2\\r\\n4 8\\r\\n1 9\\r\\n', 'output': ['11.0000000000 86.0000000000']}, {'input': '4 1\\r\\n4 10 0 35\\r\\n7\\r\\n1 2 3 4\\r\\n1 2 4 3\\r\\n3 2 4 1\\r\\n4 3 2 1\\r\\n3 1 4 2\\r\\n2 4 1 3\\r\\n4 3 1 2\\r\\n', 'output': ['12.2500000000 12.2500000000']}, {'input': '12 3\\r\\n4 77 0 90 2 5 74 7 77 100 45 34\\r\\n3\\r\\n9 12 1 5\\r\\n4 3 10 2\\r\\n11 6 7 8\\r\\n', 'output': ['29.2500000000 66.7500000000']}, {'input': '15 2\\r\\n56 9 100 86 5 44 3 63 98 23 11 84 56 33 84\\r\\n1\\r\\n4 7 6 2 8 3 15\\r\\n', 'output': ['38.2857142857 55.5714285714']}, {'input': '19 2\\r\\n63 18 76 3 18 22 2 49 50 23 13 76 29 36 95 49 78 95 25\\r\\n5\\r\\n15 5 3 4 18 17 6 1 8\\r\\n14 11 2 19 13 7 12 16 9\\r\\n19 16 13 9 2 11 14 12 7\\r\\n12 9 11 7 14 2 19 13 16\\r\\n15 18 17 3 1 5 8 6 4\\r\\n', 'output': ['33.1111111111 55.4444444444']}, {'input': '67 5\\r\\n11 89 2 71 41 6 35 19 34 51 49 97 37 57 84 39 3 62 14 1 67 18 49 77 16 46 99 38 3 51 68 72 31 79 35 10 65 90 28 43 88 67 2 13 93 40 52 28 75 26 90 3 22 29 44 38 73 62 17 92 91 37 29 87 25 54 8\\r\\n3\\r\\n46 57 28 2 54 12 19 18 42 4 14 37 13\\r\\n61 11 30 64 38 47 15 41 67 29 20 35 45\\r\\n11 35 67 15 38 47 61 45 30 20 41 64 29\\r\\n', 'output': ['10.9230769231 71.9230769231']}, {'input': '89 3\\r\\n100 52 96 60 96 86 70 2 16 44 79 37 18 16 92 0 55 49 98 83 47 42 45 92 33 99 20 52 32 47 30 61 89 86 29 64 80 96 35 85 17 39 14 2 43 8 65 98 62 57 54 73 87 79 34 42 50 89 56 54 52 59 93 31 95 86 29 4 4 46 2 14 45 73 42 24 3 55 47 10 60 61 67 16 20 71 47 91 29\\r\\n1\\r\\n38 1 80 16 77 58 17 30 39 4 49 63 11 47 8 61 10 24 64 15 74 6 45 12 35 79 22 52 20\\r\\n', 'output': ['25.3448275862 74.4137931034']}, {'input': '53 27\\r\\n100 85 0 86 19 32 82 66 54 10 9 81 40 65 23 17 58 68 100 46 28 48 28 11 79 11 36 89 61 11 67 88 79 28 16 93 31 34 54 9 33 45 60 18 23 28 38 71 76 51 10 9 92\\r\\n20\\r\\n43\\r\\n43\\r\\n14\\r\\n2\\r\\n25\\r\\n31\\r\\n25\\r\\n13\\r\\n48\\r\\n1\\r\\n38\\r\\n46\\r\\n9\\r\\n19\\r\\n30\\r\\n1\\r\\n28\\r\\n19\\r\\n43\\r\\n27\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '93 3\\r\\n47 45 32 90 54 22 99 70 55 22 2 86 23 18 0 42 42 41 63 90 60 70 81 38 42 4 17 96 15 65 2 21 66 5 18 20 97 38 18 2 60 41 38 18 39 38 43 75 51 97 72 90 59 4 40 34 40 18 15 71 82 9 66 82 0 50 21 37 47 31 65 42 6 78 94 0 5 56 85 28 37 30 77 11 71 42 48 4 42 13 96 82 35\\r\\n2\\r\\n62 86 47 34 31 59 58 76 15 88 23 19 87 48 41 32 74 89 26 20 61 5 35 39 81 2 17 55 40 69 38\\r\\n9 3 53 73 18 92 52 12 46 82 75 27 68 24 7 79 22 50 67 65 33 51 54 10 8 70 57 43 25 63 30\\r\\n', 'output': ['36.2258064516 51.3870967742']}, {'input': '99 1\\r\\n20 83 45 17 53 33 56 58 65 26 68 44 21 52 55 21 79 23 82 11 19 33 29 66 10 29 69 15 5 0 99 25 13 83 62 63 1 22 7 93 51 41 64 35 89 10 97 0 43 34 89 97 52 65 80 0 73 12 100 45 78 8 5 47 23 91 46 33 70 37 25 55 75 60 100 30 28 87 59 1 58 39 29 66 60 66 68 77 0 93 18 28 51 64 36 25 63 74 6\\r\\n0\\r\\n', 'output': ['46.5757575758 46.5757575758']}, {'input': '100 54\\r\\n46 64 22 47 5 70 61 8 25 78 88 62 91 52 3 55 46 63 90 27 92 64 33 83 7 7 0 47 64 85 89 3 40 49 11 14 51 93 5 56 8 37 82 49 10 7 14 7 33 66 35 66 41 23 7 56 55 2 74 39 75 16 46 63 81 10 73 67 70 30 37 22 97 33 52 60 38 42 16 43 79 70 15 51 70 8 99 75 7 76 49 10 96 74 82 97 15 98 75 11\\r\\n20\\r\\n91\\r\\n60\\r\\n90\\r\\n92\\r\\n88\\r\\n52\\r\\n53\\r\\n15\\r\\n92\\r\\n58\\r\\n88\\r\\n18\\r\\n95\\r\\n8\\r\\n43\\r\\n22\\r\\n69\\r\\n48\\r\\n42\\r\\n88\\r\\n', 'output': ['0.0000000000 99.0000000000']}, {'input': '86 5\\r\\n51 59 52 84 64 40 9 6 35 63 66 82 52 52 84 66 89 85 30 0 91 81 73 0 58 22 59 96 27 28 35 2 79 55 88 43 92 97 89 52 49 27 100 54 4 11 28 38 86 82 63 72 31 75 77 42 35 1 56 11 93 56 80 63 5 78 63 73 8 2 44 18 6 20 47 4 88 16 24 13 100 68 34 21 0 70\\r\\n4\\r\\n57 32 69 9 61 39 10 6 56 36 78 8 80 58 50 65 77\\r\\n2 83 3 31 85 21 62 28 79 46 49 20 22 34 42 12 76\\r\\n32 65 58 39 57 9 50 8 61 10 80 77 69 36 56 78 6\\r\\n4 86 40 30 54 75 37 48 64 15 59 44 16 5 43 73 81\\r\\n', 'output': ['24.6470588235 74.5882352941']}, {'input': '90 15\\r\\n78 78 57 46 96 3 2 79 26 58 95 79 33 33 54 60 26 93 85 74 51 100 68 40 51 14 78 0 73 61 17 59 8 40 87 93 57 72 38 92 20 15 77 74 97 59 33 45 69 71 71 32 25 58 86 26 13 36 6 73 56 36 30 43 38 26 58 6 74 13 11 23 80 54 81 76 41 22 1 73 10 15 82 47 66 50 98 74 12 63\\r\\n9\\r\\n88 89 86 66 12 15\\r\\n59 3 38 78 53 18\\r\\n21 61 36 39 57 4\\r\\n67 55 14 46 60 54\\r\\n84 75 9 23 48 1\\r\\n57 4 61 21 36 39\\r\\n79 72 2 83 6 26\\r\\n4 61 36 39 21 57\\r\\n74 32 24 11 85 42\\r\\n', 'output': ['6.1666666667 95.0000000000']}, {'input': '100 87\\r\\n89 43 79 20 88 74 41 99 16 64 53 54 54 59 26 20 31 81 100 66 12 71 93 40 53 2 55 69 53 91 23 54 43 19 78 73 95 70 69 47 15 63 60 88 98 63 13 66 95 55 12 3 4 12 14 79 80 15 62 15 93 11 23 86 17 71 22 21 40 90 71 90 81 40 50 68 55 28 100 12 0 21 66 93 80 91 62 37 9 7 59 10 18 73 7 32 50 12 57 87\\r\\n50\\r\\n25\\r\\n54\\r\\n83\\r\\n46\\r\\n6\\r\\n39\\r\\n48\\r\\n85\\r\\n10\\r\\n79\\r\\n66\\r\\n97\\r\\n6\\r\\n85\\r\\n64\\r\\n67\\r\\n87\\r\\n44\\r\\n65\\r\\n67\\r\\n41\\r\\n5\\r\\n3\\r\\n76\\r\\n93\\r\\n49\\r\\n26\\r\\n82\\r\\n3\\r\\n11\\r\\n47\\r\\n13\\r\\n70\\r\\n74\\r\\n82\\r\\n99\\r\\n43\\r\\n91\\r\\n42\\r\\n7\\r\\n92\\r\\n80\\r\\n78\\r\\n45\\r\\n3\\r\\n84\\r\\n6\\r\\n29\\r\\n38\\r\\n45\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '82 2\\r\\n89 81 1 65 17 37 65 73 19 20 67 15 86 99 30 70 44 83 2 50 20 93 57 64 30 85 53 9 22 18 97 13 85 38 70 96 3 85 12 72 44 10 62 93 60 81 7 91 17 13 64 63 83 96 15 9 62 43 83 72 65 89 49 75 36 61 98 89 48 45 74 80 37 39 71 1 76 69 56 72 28 86\\r\\n1\\r\\n41 71 27 69 17 14 20 46 53 64 5 35 7 9 56 18 75 36 16 34 81 37 58 65 66 4 40 8 44 19 31 38 30 60 77 80 42 63 73 33 43\\r\\n', 'output': ['51.6829268293 56.7804878049']}, {'input': '10 6\\r\\n100 100 100 100 100 100 100 100 100 100\\r\\n6\\r\\n4\\r\\n10\\r\\n2\\r\\n4\\r\\n7\\r\\n5\\r\\n', 'output': ['100.0000000000 100.0000000000']}, {'input': '100 6\\r\\n14 6 0 34 22 84 9 18 94 61 16 83 79 58 80 22 16 78 51 74 5 96 29 75 91 89 78 85 12 25 24 65 23 66 54 56 89 25 18 51 74 83 89 31 6 45 79 17 35 16 74 93 82 80 62 6 46 14 90 68 51 59 1 27 73 95 89 17 43 63 23 26 99 77 23 39 43 100 65 80 78 71 48 48 31 3 69 7 26 2 44 57 99 68 1 18 9 62 97 43\\r\\n0\\r\\n', 'output': ['6.9375000000 92.4375000000']}, {'input': '67 5\\r\\n11 89 2 71 41 6 35 19 34 51 49 97 37 57 84 39 3 62 14 1 67 18 49 77 16 46 99 38 3 51 68 72 31 79 35 10 65 90 28 43 88 67 2 13 93 40 52 28 75 26 90 3 22 29 44 38 73 62 17 92 91 37 29 87 25 54 8\\r\\n3\\r\\n46 57 28 2 54 12 19 18 42 4 14 37 13\\r\\n61 11 30 64 38 47 15 41 67 29 20 35 45\\r\\n11 35 67 15 38 47 61 45 30 20 41 64 29\\r\\n', 'output': ['10.9230769231 71.9230769231']}, {'input': '23 5\\r\\n30 38 57 63 1 26 11 47 47 95 83 9 61 24 82 82 86 99 90 18 4 5 76\\r\\n5\\r\\n2 15 21 13\\r\\n1 4 9 7\\r\\n3 8 14 17\\r\\n23 6 5 11\\r\\n12 10 22 16\\r\\n', 'output': ['37.7500000000 53.5000000000']}, {'input': '100 3\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 89\\r\\n0\\r\\n', 'output': ['0.0000000000 2.6969696970']}, {'input': '100 1\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100\\r\\n0\\r\\n', 'output': ['1.0000000000 1.0000000000']}, {'input': '100 100\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100\\r\\n0\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '100 100\\r\\n53 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.0000000000 53.0000000000']}, {'input': '100 1\\r\\n45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.4500000000 0.4500000000']}, {'input': '100 13\\r\\n45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.0000000000 6.4285714286']}, {'input': '100 1\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 99\\r\\n1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 100 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 67\\r\\n', 'output': ['0.9900000000 0.9900000000']}, {'input': '100 100\\r\\n1 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\\r\\n2\\r\\n1\\r\\n100\\r\\n', 'output': ['1.0000000000 100.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n2\\r\\n1\\r\\n1\\r\\n', 'output': ['1.0000000000 3.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n4\\r\\n1\\r\\n1\\r\\n2\\r\\n2\\r\\n', 'output': ['1.0000000000 2.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n5\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n', 'output': ['1.0000000000 3.0000000000']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, k, x, y, a[101], q;\ndouble mn, mx;\nint main() {\n  cin >> n >> k;\n  for (int i = 1; i <= n; ++i) cin >> a[i];\n  mn = (1.0 * accumulate(a + 1, a + n + 1, 0)) / n;\n  mx = mn;\n  cin >> q;\n  for (int i = 1; i <= q; ++i) {\n    for (int j = 0; j < n; ++j) x = 0;\n    cin >> y;\n    for (int j = 0; j < y; ++j) {\n      cin >> x;\n      mx = max((1.0 * a[x]) + mn - (1.0 * accumulate(a + 1, a + x, 0)),\n                mx);\n      mn = min((1.0 * a[x]) + mn - (1.0 * accumulate(a + 1, a + x + 1, 0)),\n                mn);\n    }\n  }\n  printf(\"%.10lf %.10lf\\n\", mn, mx);\n  return 0;\n}\n"}
{"src_uid": "0a77937c01ac69490f8b478eae77de1d", "id": 48, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': ['1\\r\\n1\\r\\n2\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n2 2\\r\\n1 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['2\\r\\n2 2\\r\\n1 2\\r\\n5\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n661397 84822 450280 333101\\r\\n69413 273309 622139 246693\\r\\n731970 90981 550001\\r\\n606352 518276\\r\\n101164\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['1\\r\\n168203\\r\\n790853\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n798097 886901 292688 792934\\r\\n987579 447910 689959 311317\\r\\n41624 797440 706737\\r\\n921438 988902\\r\\n506461\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['1\\r\\n363820\\r\\n536239\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n593976 642315\\r\\n657797 687112\\r\\n1001\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['5\\r\\n614938 943862 658531 218884 839422\\r\\n274607 627152 341331 47413 388677\\r\\n161622 678978 475188 341521\\r\\n215974 138021 733048\\r\\n397507 162082\\r\\n355681\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['5\\r\\n702 114 58 727 872\\r\\n781267 425220 371815 135938 904298\\r\\n780616 359062 776048 643435\\r\\n291016 886705 209517\\r\\n146755 15373\\r\\n592370\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['1\\r\\n1\\r\\n1\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['1\\r\\n2588\\r\\n570509\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n6262 4403\\r\\n785114 650029\\r\\n382125\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n8992 8296 4165\\r\\n638616 382669 833904\\r\\n985282 709096\\r\\n387795\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n5370 4894 9568 852\\r\\n899565 709693 770339 953202\\r\\n653322 585847 268500\\r\\n823472 887614\\r\\n49168\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n1 1\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 8 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 2 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n2 2\\r\\n3\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 10 1\\r\\n100 10 100\\r\\n10 10\\r\\n20\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 2 2\\r\\n3 3\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['6\\r\\n1 1 2 2 1 1\\r\\n1 1 2 2 1 1\\r\\n2 4 2 4 2\\r\\n2 2 2 2\\r\\n4 10 4\\r\\n4 4\\r\\n8\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n2 2 2\\r\\n1 1 1\\r\\n3 3\\r\\n5\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n5 5 5 5\\r\\n5 5 5 5\\r\\n10 5 10\\r\\n10 10\\r\\n20\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['3\\r\\n5 5 5\\r\\n5 5 5\\r\\n10 10\\r\\n15\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n2 2 2\\r\\n2 2 2\\r\\n3 3\\r\\n6\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['6\\r\\n1 1 1 1 1 1\\r\\n1 2 1 1 2 1\\r\\n1 9 1 9 1\\r\\n1 1 1 1\\r\\n2 9 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['7\\r\\n1 1 1 1 1 1 1\\r\\n1 9 1 9 1 9 9\\r\\n1 9 1 9 1 9\\r\\n1 1 9 1 9\\r\\n1 9 9 1\\r\\n1 9 1\\r\\n1 1\\r\\n3\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['9\\r\\n1 1 1 1 1 1 1 1 1\\r\\n9 1 9 1 9 1 9 9 9\\r\\n9 1 1 1 1 9 9 9\\r\\n9 2 9 2 9 9 9\\r\\n9 1 1 9 9 9\\r\\n9 1 9 9 9\\r\\n9 1 9 9\\r\\n9 1 9\\r\\n9 1\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['20\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n9 1 9 9 1 9 1 9 1 1 9 9 9 1 9 1 9 1 9 9\\r\\n9 1 9 9 1 1 9 9 1 9 9 9 1 9 9 1 1 9 9\\r\\n9 1 9 9 1 9 9 1 1 9 9 1 9 9 9 2 9 9\\r\\n9 1 9 1 1 9 1 9 1 9 1 9 9 9 2 9 9\\r\\n9 1 1 9 1 1 9 9 1 1 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 9 9 2 9\\r\\n9 2 9 2 2 9 9 9 9 2\\r\\n9 2 2 9 2 9 9 9 2\\r\\n9 4 9 9 2 9 9 2\\r\\n9 4 9 9 2 9 2\\r\\n9 4 9 9 2 2\\r\\n9 4 9 9 4\\r\\n9 4 9 4\\r\\n9 4 4\\r\\n9 8\\r\\n8\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['15\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n9 9 9 9 9 9 1 9 9 9 9 9 9 9 9\\r\\n9 9 9 9 9 1 1 9 9 9 9 9 9 9\\r\\n9 9 9 9 1 1 1 9 9 9 9 9 9\\r\\n9 9 9 1 1 9 1 9 9 9 9 9\\r\\n9 9 1 1 9 9 1 9 9 9 9\\r\\n9 1 1 1 9 9 1 9 9 9\\r\\n1 9 1 1 9 9 1 9 9\\r\\n1 9 1 9 9 9 1 9\\r\\n1 9 1 9 9 9 9\\r\\n1 9 1 9 9 9\\r\\n1 9 9 9 9\\r\\n1 9 9 9\\r\\n1 9 9\\r\\n1 9\\r\\n1\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['6\\r\\n1 1 2 2 1 1\\r\\n1 1 1 2 1 1\\r\\n1 1 2 4 2\\r\\n1 9 2 2\\r\\n1 9 4\\r\\n4 4\\r\\n8\\r\\n'], 'output': ['Cerealguy\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint N, A, a[55], W, w[55][55], s;\nint main() {\n  scanf(\"%d\", &N);\n  for (int i = 0; i < N; i++) scanf(\"%d\", &a[i]);\n  for (int i = 0; i < N; i++)\n    for (int j = 0; j < N - i; j++) {\n      scanf(\"%d\", &W);\n      w[i][j] = W;\n    }\n  for (int i = 0; i < N; i++)\n    for (int j = 0; j < N - i; j++) {\n      s += min(a[i], w[i][j]);\n      a[i] -= min(a[i], w[i][j]);\n      w[i + 1][j] = min(w[i + 1][j], w[i][j]);\n      w[i][j] -= min(w[i][j], w[i][j]);\n      if (w[i][j] == 0) w[i][j] = 1 << 29;\n    }\n  if (s >= a[N - 1])\n    printf(\"Cerealguy\");\n  else\n    printf(\"Fat Rat\");\n  return 0;\n}\n"}
{"src_uid": "0a77937c01ac69490f8b478eae77de1d", "id": 48, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': ['1\\r\\n1\\r\\n2\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n2 2\\r\\n1 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['2\\r\\n2 2\\r\\n1 2\\r\\n5\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n661397 84822 450280 333101\\r\\n69413 273309 622139 246693\\r\\n731970 90981 550001\\r\\n606352 518276\\r\\n101164\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['1\\r\\n168203\\r\\n790853\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n798097 886901 292688 792934\\r\\n987579 447910 689959 311317\\r\\n41624 797440 706737\\r\\n921438 988902\\r\\n506461\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['1\\r\\n363820\\r\\n536239\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n593976 642315\\r\\n657797 687112\\r\\n1001\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['5\\r\\n614938 943862 658531 218884 839422\\r\\n274607 627152 341331 47413 388677\\r\\n161622 678978 475188 341521\\r\\n215974 138021 733048\\r\\n397507 162082\\r\\n355681\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['5\\r\\n702 114 58 727 872\\r\\n781267 425220 371815 135938 904298\\r\\n780616 359062 776048 643435\\r\\n291016 886705 209517\\r\\n146755 15373\\r\\n592370\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['1\\r\\n1\\r\\n1\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['1\\r\\n2588\\r\\n570509\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n6262 4403\\r\\n785114 650029\\r\\n382125\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n8992 8296 4165\\r\\n638616 382669 833904\\r\\n985282 709096\\r\\n387795\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n5370 4894 9568 852\\r\\n899565 709693 770339 953202\\r\\n653322 585847 268500\\r\\n823472 887614\\r\\n49168\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n1 1\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 8 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 2 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n2 2\\r\\n3\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 10 1\\r\\n100 10 100\\r\\n10 10\\r\\n20\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 2 2\\r\\n3 3\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['6\\r\\n1 1 2 2 1 1\\r\\n1 1 2 2 1 1\\r\\n2 4 2 4 2\\r\\n2 2 2 2\\r\\n4 10 4\\r\\n4 4\\r\\n8\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n2 2 2\\r\\n1 1 1\\r\\n3 3\\r\\n5\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n5 5 5 5\\r\\n5 5 5 5\\r\\n10 5 10\\r\\n10 10\\r\\n20\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['3\\r\\n5 5 5\\r\\n5 5 5\\r\\n10 10\\r\\n15\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n2 2 2\\r\\n2 2 2\\r\\n3 3\\r\\n6\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['6\\r\\n1 1 1 1 1 1\\r\\n1 2 1 1 2 1\\r\\n1 9 1 9 1\\r\\n1 1 1 1\\r\\n2 9 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['7\\r\\n1 1 1 1 1 1 1\\r\\n1 9 1 9 1 9 9\\r\\n1 9 1 9 1 9\\r\\n1 1 9 1 9\\r\\n1 9 9 1\\r\\n1 9 1\\r\\n1 1\\r\\n3\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['9\\r\\n1 1 1 1 1 1 1 1 1\\r\\n9 1 9 1 9 1 9 9 9\\r\\n9 1 1 1 1 9 9 9\\r\\n9 2 9 2 9 9 9\\r\\n9 1 1 9 9 9\\r\\n9 1 9 9 9\\r\\n9 1 9 9\\r\\n9 1 9\\r\\n9 1\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['20\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n9 1 9 9 1 9 1 9 1 1 9 9 9 1 9 1 9 1 9 9\\r\\n9 1 9 9 1 1 9 9 1 9 9 9 1 9 9 1 1 9 9\\r\\n9 1 9 9 1 9 9 1 1 9 9 1 9 9 9 2 9 9\\r\\n9 1 9 1 1 9 1 9 1 9 1 9 9 9 2 9 9\\r\\n9 1 1 9 1 1 9 9 1 1 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 9 9 2 9\\r\\n9 2 9 2 2 9 9 9 9 2\\r\\n9 2 2 9 2 9 9 9 2\\r\\n9 4 9 9 2 9 9 2\\r\\n9 4 9 9 2 9 2\\r\\n9 4 9 9 2 2\\r\\n9 4 9 9 4\\r\\n9 4 9 4\\r\\n9 4 4\\r\\n9 8\\r\\n8\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['15\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n9 9 9 9 9 9 1 9 9 9 9 9 9 9 9\\r\\n9 9 9 9 9 1 1 9 9 9 9 9 9 9\\r\\n9 9 9 9 1 1 1 9 9 9 9 9 9\\r\\n9 9 9 1 1 9 1 9 9 9 9 9\\r\\n9 9 1 1 9 9 1 9 9 9 9\\r\\n9 1 1 1 9 9 1 9 9 9\\r\\n1 9 1 1 9 9 1 9 9\\r\\n1 9 1 9 9 9 1 9\\r\\n1 9 1 9 9 9 9\\r\\n1 9 1 9 9 9\\r\\n1 9 9 9 9\\r\\n1 9 9 9\\r\\n1 9 9\\r\\n1 9\\r\\n1\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['6\\r\\n1 1 2 2 1 1\\r\\n1 1 1 2 1 1\\r\\n1 1 2 4 2\\r\\n1 9 2 2\\r\\n1 9 4\\r\\n4 4\\r\\n8\\r\\n'], 'output': ['Cerealguy\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  long long a, sum = 0;\n  cin >> a;\n  for (int i = 1; i < n; i++) {\n    sum += a;\n    a = 0;\n    for (int j = 1; j <= i; j++) {\n      int w;\n      cin >> w;\n      if (w < a) a = w;\n    }\n  }\n  if (sum - a >= a)\n    cout << \"Cerealguy\";\n  else\n    cout << \"Fat Rat\";\n  return 0;\n}\n"}
{"src_uid": "0a77937c01ac69490f8b478eae77de1d", "id": 48, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': ['1\\r\\n1\\r\\n2\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n2 2\\r\\n1 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['2\\r\\n2 2\\r\\n1 2\\r\\n5\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n661397 84822 450280 333101\\r\\n69413 273309 622139 246693\\r\\n731970 90981 550001\\r\\n606352 518276\\r\\n101164\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['1\\r\\n168203\\r\\n790853\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n798097 886901 292688 792934\\r\\n987579 447910 689959 311317\\r\\n41624 797440 706737\\r\\n921438 988902\\r\\n506461\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['1\\r\\n363820\\r\\n536239\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n593976 642315\\r\\n657797 687112\\r\\n1001\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['5\\r\\n614938 943862 658531 218884 839422\\r\\n274607 627152 341331 47413 388677\\r\\n161622 678978 475188 341521\\r\\n215974 138021 733048\\r\\n397507 162082\\r\\n355681\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['5\\r\\n702 114 58 727 872\\r\\n781267 425220 371815 135938 904298\\r\\n780616 359062 776048 643435\\r\\n291016 886705 209517\\r\\n146755 15373\\r\\n592370\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['1\\r\\n1\\r\\n1\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['1\\r\\n2588\\r\\n570509\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n6262 4403\\r\\n785114 650029\\r\\n382125\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n8992 8296 4165\\r\\n638616 382669 833904\\r\\n985282 709096\\r\\n387795\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n5370 4894 9568 852\\r\\n899565 709693 770339 953202\\r\\n653322 585847 268500\\r\\n823472 887614\\r\\n49168\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n1 1\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 8 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 2 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n2 2\\r\\n3\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 10 1\\r\\n100 10 100\\r\\n10 10\\r\\n20\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 2 2\\r\\n3 3\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['6\\r\\n1 1 2 2 1 1\\r\\n1 1 2 2 1 1\\r\\n2 4 2 4 2\\r\\n2 2 2 2\\r\\n4 10 4\\r\\n4 4\\r\\n8\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n2 2 2\\r\\n1 1 1\\r\\n3 3\\r\\n5\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n5 5 5 5\\r\\n5 5 5 5\\r\\n10 5 10\\r\\n10 10\\r\\n20\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['3\\r\\n5 5 5\\r\\n5 5 5\\r\\n10 10\\r\\n15\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n2 2 2\\r\\n2 2 2\\r\\n3 3\\r\\n6\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['6\\r\\n1 1 1 1 1 1\\r\\n1 2 1 1 2 1\\r\\n1 9 1 9 1\\r\\n1 1 1 1\\r\\n2 9 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['7\\r\\n1 1 1 1 1 1 1\\r\\n1 9 1 9 1 9 9\\r\\n1 9 1 9 1 9\\r\\n1 1 9 1 9\\r\\n1 9 9 1\\r\\n1 9 1\\r\\n1 1\\r\\n3\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['9\\r\\n1 1 1 1 1 1 1 1 1\\r\\n9 1 9 1 9 1 9 9 9\\r\\n9 1 1 1 1 9 9 9\\r\\n9 2 9 2 9 9 9\\r\\n9 1 1 9 9 9\\r\\n9 1 9 9 9\\r\\n9 1 9 9\\r\\n9 1 9\\r\\n9 1\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['20\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n9 1 9 9 1 9 1 9 1 1 9 9 9 1 9 1 9 1 9 9\\r\\n9 1 9 9 1 1 9 9 1 9 9 9 1 9 9 1 1 9 9\\r\\n9 1 9 9 1 9 9 1 1 9 9 1 9 9 9 2 9 9\\r\\n9 1 9 1 1 9 1 9 1 9 1 9 9 9 2 9 9\\r\\n9 1 1 9 1 1 9 9 1 1 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 9 9 2 9\\r\\n9 2 9 2 2 9 9 9 9 2\\r\\n9 2 2 9 2 9 9 9 2\\r\\n9 4 9 9 2 9 9 2\\r\\n9 4 9 9 2 9 2\\r\\n9 4 9 9 2 2\\r\\n9 4 9 9 4\\r\\n9 4 9 4\\r\\n9 4 4\\r\\n9 8\\r\\n8\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['15\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n9 9 9 9 9 9 1 9 9 9 9 9 9 9 9\\r\\n9 9 9 9 9 1 1 9 9 9 9 9 9 9\\r\\n9 9 9 9 1 1 1 9 9 9 9 9 9\\r\\n9 9 9 1 1 9 1 9 9 9 9 9\\r\\n9 9 1 1 9 9 1 9 9 9 9\\r\\n9 1 1 1 9 9 1 9 9 9\\r\\n1 9 1 1 9 9 1 9 9\\r\\n1 9 1 9 9 9 1 9\\r\\n1 9 1 9 9 9 9\\r\\n1 9 1 9 9 9\\r\\n1 9 9 9 9\\r\\n1 9 9 9\\r\\n1 9 9\\r\\n1 9\\r\\n1\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['6\\r\\n1 1 2 2 1 1\\r\\n1 1 1 2 1 1\\r\\n1 1 2 4 2\\r\\n1 9 2 2\\r\\n1 9 4\\r\\n4 4\\r\\n8\\r\\n'], 'output': ['Cerealguy\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 55;\nconst long long INF = 2e16;\nint n, A[MAXN], row[MAXN];\nvector<long long> W[MAXN];\nvoid run() {\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> A[i];\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j <= i; j++) {\n      cin >> row[i];\n      W[i].push_back(row[i]);\n    }\n  }\n  sort(A, A + n);\n  for (int i = n - 1; i >= 0; i--) {\n    long long mx = INF;\n    for (int j = 0; j < W[i].size(); j++) {\n      if (A[i] < W[i][j]) {\n        mx = min(mx, W[i][j] - A[i]);\n      }\n    }\n    if (mx < INF) {\n      cout << \"Cerealguy\\n\";\n      return;\n    }\n  }\n  cout << \"Fat Rat\\n\";\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  run();\n}\n"}
{"src_uid": "0a77937c01ac69490f8b478eae77de1d", "id": 48, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': ['1\\r\\n1\\r\\n2\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n2 2\\r\\n1 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['2\\r\\n2 2\\r\\n1 2\\r\\n5\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n661397 84822 450280 333101\\r\\n69413 273309 622139 246693\\r\\n731970 90981 550001\\r\\n606352 518276\\r\\n101164\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['1\\r\\n168203\\r\\n790853\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n798097 886901 292688 792934\\r\\n987579 447910 689959 311317\\r\\n41624 797440 706737\\r\\n921438 988902\\r\\n506461\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['1\\r\\n363820\\r\\n536239\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n593976 642315\\r\\n657797 687112\\r\\n1001\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['5\\r\\n614938 943862 658531 218884 839422\\r\\n274607 627152 341331 47413 388677\\r\\n161622 678978 475188 341521\\r\\n215974 138021 733048\\r\\n397507 162082\\r\\n355681\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['5\\r\\n702 114 58 727 872\\r\\n781267 425220 371815 135938 904298\\r\\n780616 359062 776048 643435\\r\\n291016 886705 209517\\r\\n146755 15373\\r\\n592370\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['1\\r\\n1\\r\\n1\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['1\\r\\n2588\\r\\n570509\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n6262 4403\\r\\n785114 650029\\r\\n382125\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n8992 8296 4165\\r\\n638616 382669 833904\\r\\n985282 709096\\r\\n387795\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n5370 4894 9568 852\\r\\n899565 709693 770339 953202\\r\\n653322 585847 268500\\r\\n823472 887614\\r\\n49168\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n1 1\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 8 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 2 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n2 2\\r\\n3\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 10 1\\r\\n100 10 100\\r\\n10 10\\r\\n20\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 2 2\\r\\n3 3\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['6\\r\\n1 1 2 2 1 1\\r\\n1 1 2 2 1 1\\r\\n2 4 2 4 2\\r\\n2 2 2 2\\r\\n4 10 4\\r\\n4 4\\r\\n8\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n2 2 2\\r\\n1 1 1\\r\\n3 3\\r\\n5\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n5 5 5 5\\r\\n5 5 5 5\\r\\n10 5 10\\r\\n10 10\\r\\n20\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['3\\r\\n5 5 5\\r\\n5 5 5\\r\\n10 10\\r\\n15\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n2 2 2\\r\\n2 2 2\\r\\n3 3\\r\\n6\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['6\\r\\n1 1 1 1 1 1\\r\\n1 2 1 1 2 1\\r\\n1 9 1 9 1\\r\\n1 1 1 1\\r\\n2 9 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['7\\r\\n1 1 1 1 1 1 1\\r\\n1 9 1 9 1 9 9\\r\\n1 9 1 9 1 9\\r\\n1 1 9 1 9\\r\\n1 9 9 1\\r\\n1 9 1\\r\\n1 1\\r\\n3\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['9\\r\\n1 1 1 1 1 1 1 1 1\\r\\n9 1 9 1 9 1 9 9 9\\r\\n9 1 1 1 1 9 9 9\\r\\n9 2 9 2 9 9 9\\r\\n9 1 1 9 9 9\\r\\n9 1 9 9 9\\r\\n9 1 9 9\\r\\n9 1 9\\r\\n9 1\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['20\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n9 1 9 9 1 9 1 9 1 1 9 9 9 1 9 1 9 1 9 9\\r\\n9 1 9 9 1 1 9 9 1 9 9 9 1 9 9 1 1 9 9\\r\\n9 1 9 9 1 9 9 1 1 9 9 1 9 9 9 2 9 9\\r\\n9 1 9 1 1 9 1 9 1 9 1 9 9 9 2 9 9\\r\\n9 1 1 9 1 1 9 9 1 1 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 9 9 2 9\\r\\n9 2 9 2 2 9 9 9 9 2\\r\\n9 2 2 9 2 9 9 9 2\\r\\n9 4 9 9 2 9 9 2\\r\\n9 4 9 9 2 9 2\\r\\n9 4 9 9 2 2\\r\\n9 4 9 9 4\\r\\n9 4 9 4\\r\\n9 4 4\\r\\n9 8\\r\\n8\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['15\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n9 9 9 9 9 9 1 9 9 9 9 9 9 9 9\\r\\n9 9 9 9 9 1 1 9 9 9 9 9 9 9\\r\\n9 9 9 9 1 1 1 9 9 9 9 9 9\\r\\n9 9 9 1 1 9 1 9 9 9 9 9\\r\\n9 9 1 1 9 9 1 9 9 9 9\\r\\n9 1 1 1 9 9 1 9 9 9\\r\\n1 9 1 1 9 9 1 9 9\\r\\n1 9 1 9 9 9 1 9\\r\\n1 9 1 9 9 9 9\\r\\n1 9 1 9 9 9\\r\\n1 9 9 9 9\\r\\n1 9 9 9\\r\\n1 9 9\\r\\n1 9\\r\\n1\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['6\\r\\n1 1 2 2 1 1\\r\\n1 1 1 2 1 1\\r\\n1 1 2 4 2\\r\\n1 9 2 2\\r\\n1 9 4\\r\\n4 4\\r\\n8\\r\\n'], 'output': ['Cerealguy\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nint a[55];\nint w[55][55];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 0; i < n; i++) {\n    scanf(\"%d\", &a[i]);\n  }\n  for (int i = n - 1; i >= 0; i--) {\n    for (int j = 0; j < n - i; j++) {\n      scanf(\"%d\", &w[i][j]);\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    int maxx = 0;\n    int total = 0;\n    for (int j = 0; j <= n - i; j++) {\n      if (maxx < w[i][j]) {\n        maxx = w[i][j];\n        total = j;\n      }\n    }\n    a[i] += total;\n  }\n  int last = 0;\n  for (int i = 1; i <= n - 1; i++) {\n    if (a[i] >= a[i - 1]) {\n      last = 1;\n    }\n  }\n  if (last) {\n    printf(\"Fat Rat\\n\");\n  } else {\n    printf(\"Cerealguy\\n\");\n  }\n}\n"}
{"src_uid": "0a77937c01ac69490f8b478eae77de1d", "id": 48, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': ['1\\r\\n1\\r\\n2\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n2 2\\r\\n1 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['2\\r\\n2 2\\r\\n1 2\\r\\n5\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n661397 84822 450280 333101\\r\\n69413 273309 622139 246693\\r\\n731970 90981 550001\\r\\n606352 518276\\r\\n101164\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['1\\r\\n168203\\r\\n790853\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n798097 886901 292688 792934\\r\\n987579 447910 689959 311317\\r\\n41624 797440 706737\\r\\n921438 988902\\r\\n506461\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['1\\r\\n363820\\r\\n536239\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n593976 642315\\r\\n657797 687112\\r\\n1001\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['5\\r\\n614938 943862 658531 218884 839422\\r\\n274607 627152 341331 47413 388677\\r\\n161622 678978 475188 341521\\r\\n215974 138021 733048\\r\\n397507 162082\\r\\n355681\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['5\\r\\n702 114 58 727 872\\r\\n781267 425220 371815 135938 904298\\r\\n780616 359062 776048 643435\\r\\n291016 886705 209517\\r\\n146755 15373\\r\\n592370\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['1\\r\\n1\\r\\n1\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['1\\r\\n2588\\r\\n570509\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n6262 4403\\r\\n785114 650029\\r\\n382125\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n8992 8296 4165\\r\\n638616 382669 833904\\r\\n985282 709096\\r\\n387795\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n5370 4894 9568 852\\r\\n899565 709693 770339 953202\\r\\n653322 585847 268500\\r\\n823472 887614\\r\\n49168\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n1 1\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 8 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 2 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n2 2\\r\\n3\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 10 1\\r\\n100 10 100\\r\\n10 10\\r\\n20\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 2 2\\r\\n3 3\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['6\\r\\n1 1 2 2 1 1\\r\\n1 1 2 2 1 1\\r\\n2 4 2 4 2\\r\\n2 2 2 2\\r\\n4 10 4\\r\\n4 4\\r\\n8\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n2 2 2\\r\\n1 1 1\\r\\n3 3\\r\\n5\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n5 5 5 5\\r\\n5 5 5 5\\r\\n10 5 10\\r\\n10 10\\r\\n20\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['3\\r\\n5 5 5\\r\\n5 5 5\\r\\n10 10\\r\\n15\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n2 2 2\\r\\n2 2 2\\r\\n3 3\\r\\n6\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['6\\r\\n1 1 1 1 1 1\\r\\n1 2 1 1 2 1\\r\\n1 9 1 9 1\\r\\n1 1 1 1\\r\\n2 9 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['7\\r\\n1 1 1 1 1 1 1\\r\\n1 9 1 9 1 9 9\\r\\n1 9 1 9 1 9\\r\\n1 1 9 1 9\\r\\n1 9 9 1\\r\\n1 9 1\\r\\n1 1\\r\\n3\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['9\\r\\n1 1 1 1 1 1 1 1 1\\r\\n9 1 9 1 9 1 9 9 9\\r\\n9 1 1 1 1 9 9 9\\r\\n9 2 9 2 9 9 9\\r\\n9 1 1 9 9 9\\r\\n9 1 9 9 9\\r\\n9 1 9 9\\r\\n9 1 9\\r\\n9 1\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['20\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n9 1 9 9 1 9 1 9 1 1 9 9 9 1 9 1 9 1 9 9\\r\\n9 1 9 9 1 1 9 9 1 9 9 9 1 9 9 1 1 9 9\\r\\n9 1 9 9 1 9 9 1 1 9 9 1 9 9 9 2 9 9\\r\\n9 1 9 1 1 9 1 9 1 9 1 9 9 9 2 9 9\\r\\n9 1 1 9 1 1 9 9 1 1 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 9 9 2 9\\r\\n9 2 9 2 2 9 9 9 9 2\\r\\n9 2 2 9 2 9 9 9 2\\r\\n9 4 9 9 2 9 9 2\\r\\n9 4 9 9 2 9 2\\r\\n9 4 9 9 2 2\\r\\n9 4 9 9 4\\r\\n9 4 9 4\\r\\n9 4 4\\r\\n9 8\\r\\n8\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['15\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n9 9 9 9 9 9 1 9 9 9 9 9 9 9 9\\r\\n9 9 9 9 9 1 1 9 9 9 9 9 9 9\\r\\n9 9 9 9 1 1 1 9 9 9 9 9 9\\r\\n9 9 9 1 1 9 1 9 9 9 9 9\\r\\n9 9 1 1 9 9 1 9 9 9 9\\r\\n9 1 1 1 9 9 1 9 9 9\\r\\n1 9 1 1 9 9 1 9 9\\r\\n1 9 1 9 9 9 1 9\\r\\n1 9 1 9 9 9 9\\r\\n1 9 1 9 9 9\\r\\n1 9 9 9 9\\r\\n1 9 9 9\\r\\n1 9 9\\r\\n1 9\\r\\n1\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['6\\r\\n1 1 2 2 1 1\\r\\n1 1 1 2 1 1\\r\\n1 1 2 4 2\\r\\n1 9 2 2\\r\\n1 9 4\\r\\n4 4\\r\\n8\\r\\n'], 'output': ['Cerealguy\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, x, ans = 0, a[51];\nlong long w[51][51];\nvoid FatRat() { printf(\"Fat Rat\\n\"); }\nvoid Cerealguy() { printf(\"Cerealguy\\n\"); }\nint main() {\n  scanf(\"%I64d\", &n);\n  for (int i = 0; i < n; i++) scanf(\"%I64d\", &a[i]);\n  for (int i = n - 1; i >= 0; i--)\n    for (int j = 1; j <= n - i; j++) scanf(\"%I64d\", &w[i][j]);\n  for (int i = 0; i < n; i++) {\n    for (int j = n - i; j >= 1; j--) {\n      ans += w[i][j];\n      if (ans >= a[i]) {\n        Cerealguy();\n        return 0;\n      }\n    }\n  }\n  FatRat();\n  return 0;\n}\n"}
{"src_uid": "4c2865e4742a29460ca64860740b84f4", "id": 49, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '60 60 45 55\\r\\n80 80 8 32\\r\\n', 'output': ['1']}, {'input': '60 60 45 55\\r\\n80 60 15 25\\r\\n', 'output': ['4']}, {'input': '50 50 35 45\\r\\n90 50 35 45\\r\\n', 'output': ['0']}, {'input': '0 0 50 70\\r\\n1 0 60 80\\r\\n', 'output': ['2']}, {'input': '0 0 1 2\\r\\n10 0 2 20\\r\\n', 'output': ['2']}, {'input': '31 13 22 95\\r\\n48 63 21 98\\r\\n', 'output': ['0']}, {'input': '31 40 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['0']}, {'input': '-65 -81 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['4']}, {'input': '41 -14 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['0']}, {'input': '41 -14 16 100\\r\\n48 17 37 66\\r\\n', 'output': ['1']}, {'input': '-75 -9 20 40\\r\\n25 55 99 100\\r\\n', 'output': ['0']}, {'input': '-45 6 20 40\\r\\n35 6 99 100\\r\\n', 'output': ['0']}, {'input': '-3 84 20 40\\r\\n76 96 96 100\\r\\n', 'output': ['0']}, {'input': '10 -91 20 40\\r\\n70 -91 79 100\\r\\n', 'output': ['1']}, {'input': '-64 -47 20 40\\r\\n-5 -37 79 100\\r\\n', 'output': ['1']}, {'input': '-63 97 20 40\\r\\n-34 97 11 48\\r\\n', 'output': ['0']}, {'input': '-67 47 20 40\\r\\n-38 47 11 49\\r\\n', 'output': ['0']}, {'input': '-100 -91 20 40\\r\\n-71 -91 11 68\\r\\n', 'output': ['0']}, {'input': '45 -76 20 40\\r\\n69 -69 15 65\\r\\n', 'output': ['1']}, {'input': '12 -43 20 40\\r\\n41 -43 11 97\\r\\n', 'output': ['1']}, {'input': '10 71 20 40\\r\\n39 78 10 49\\r\\n', 'output': ['0']}, {'input': '56 44 20 40\\r\\n83 44 12 13\\r\\n', 'output': ['1']}, {'input': '-20 78 20 40\\r\\n8 85 10 11\\r\\n', 'output': ['1']}, {'input': '65 -9 20 40\\r\\n94 -9 10 49\\r\\n', 'output': ['0']}, {'input': '-84 -59 20 40\\r\\n-74 -59 29 30\\r\\n', 'output': ['1']}, {'input': '33 -37 20 40\\r\\n42 -37 28 29\\r\\n', 'output': ['1']}, {'input': '-25 10 20 40\\r\\n4 17 10 69\\r\\n', 'output': ['0']}, {'input': '13 32 20 40\\r\\n42 32 10 69\\r\\n', 'output': ['1']}, {'input': '-12 -1 20 40\\r\\n-3 -1 28 31\\r\\n', 'output': ['1']}, {'input': '48 30 20 40\\r\\n77 37 10 99\\r\\n', 'output': ['1']}, {'input': '47 -50 20 40\\r\\n56 -46 28 30\\r\\n', 'output': ['1']}, {'input': '-26 -65 20 40\\r\\n52 -65 98 100\\r\\n', 'output': ['1']}, {'input': '-46 36 20 40\\r\\n14 36 80 100\\r\\n', 'output': ['2']}, {'input': '19 96 20 40\\r\\n77 96 78 99\\r\\n', 'output': ['2']}, {'input': '-42 -44 20 40\\r\\n-32 -44 30 48\\r\\n', 'output': ['1']}, {'input': '83 -23 20 40\\r\\n93 -23 30 50\\r\\n', 'output': ['2']}, {'input': '-100 -97 20 40\\r\\n-90 -97 30 100\\r\\n', 'output': ['2']}, {'input': '65 16 20 40\\r\\n74 16 29 48\\r\\n', 'output': ['1']}, {'input': '-66 78 20 40\\r\\n-62 81 25 45\\r\\n', 'output': ['2']}, {'input': '-11 63 20 40\\r\\n-2 63 29 31\\r\\n', 'output': ['2']}, {'input': '91 -59 20 40\\r\\n100 -59 29 100\\r\\n', 'output': ['2']}, {'input': '39 90 20 40\\r\\n47 90 28 31\\r\\n', 'output': ['2']}, {'input': '-100 40 20 40\\r\\n-81 40 1 38\\r\\n', 'output': ['1']}, {'input': '24 -24 20 40\\r\\n43 -24 1 21\\r\\n', 'output': ['2']}, {'input': '-8 35 20 40\\r\\n11 35 1 19\\r\\n', 'output': ['2']}, {'input': '-52 -94 20 40\\r\\n-33 -94 1 39\\r\\n', 'output': ['1']}, {'input': '61 2 20 40\\r\\n67 10 10 30\\r\\n', 'output': ['2']}, {'input': '49 -67 20 40\\r\\n57 -67 12 28\\r\\n', 'output': ['2']}, {'input': '65 17 20 40\\r\\n84 17 1 58\\r\\n', 'output': ['1']}, {'input': '-16 -18 20 40\\r\\n3 -18 1 59\\r\\n', 'output': ['2']}, {'input': '24 -16 20 40\\r\\n33 -16 11 31\\r\\n', 'output': ['2']}, {'input': '-83 96 20 40\\r\\n-64 96 1 98\\r\\n', 'output': ['2']}, {'input': '-10 89 20 40\\r\\n-2 89 12 29\\r\\n', 'output': ['2']}, {'input': '-40 -69 20 40\\r\\n60 -69 80 100\\r\\n', 'output': ['0']}, {'input': '-70 66 20 40\\r\\n8 66 58 98\\r\\n', 'output': ['0']}, {'input': '-11 -97 20 40\\r\\n67 -97 58 100\\r\\n', 'output': ['0']}, {'input': '-60 60 20 40\\r\\n0 60 40 100\\r\\n', 'output': ['1']}, {'input': '0 73 20 40\\r\\n59 73 39 100\\r\\n', 'output': ['1']}, {'input': '28 -91 20 40\\r\\n58 -91 10 49\\r\\n', 'output': ['0']}, {'input': '75 72 20 40\\r\\n99 90 10 50\\r\\n', 'output': ['0']}, {'input': '-84 74 20 40\\r\\n-54 74 10 63\\r\\n', 'output': ['0']}, {'input': '35 -6 20 40\\r\\n59 12 10 70\\r\\n', 'output': ['1']}, {'input': '67 41 20 40\\r\\n97 41 10 98\\r\\n', 'output': ['1']}, {'input': '-27 -68 20 40\\r\\n2 -68 9 48\\r\\n', 'output': ['0']}, {'input': '50 13 20 40\\r\\n78 13 8 12\\r\\n', 'output': ['1']}, {'input': '-73 36 20 40\\r\\n-44 36 9 10\\r\\n', 'output': ['1']}, {'input': '70 92 20 40\\r\\n99 92 9 49\\r\\n', 'output': ['0']}, {'input': '37 -80 20 40\\r\\n66 -80 9 66\\r\\n', 'output': ['0']}, {'input': '8 -95 20 40\\r\\n36 -95 8 68\\r\\n', 'output': ['1']}, {'input': '-9 77 20 40\\r\\n20 77 9 100\\r\\n', 'output': ['1']}, {'input': '-37 20 20 40\\r\\n41 31 99 100\\r\\n', 'output': ['1']}, {'input': '-36 28 20 40\\r\\n24 28 99 100\\r\\n', 'output': ['2']}, {'input': '-77 -16 20 40\\r\\n-18 -6 99 100\\r\\n', 'output': ['2']}, {'input': '-65 24 20 40\\r\\n-6 24 99 100\\r\\n', 'output': ['4']}, {'input': '-55 23 20 40\\r\\n-46 23 31 48\\r\\n', 'output': ['1']}, {'input': '-37 18 20 40\\r\\n-30 18 33 47\\r\\n', 'output': ['2']}, {'input': '-45 -93 20 40\\r\\n-36 -93 31 99\\r\\n', 'output': ['2']}, {'input': '-97 -29 20 40\\r\\n-39 -19 99 100\\r\\n', 'output': ['4']}, {'input': '14 18 20 40\\r\\n23 22 30 49\\r\\n', 'output': ['1']}, {'input': '-90 -38 20 40\\r\\n-81 -38 30 49\\r\\n', 'output': ['2']}, {'input': '52 -4 20 40\\r\\n61 -4 30 31\\r\\n', 'output': ['2']}, {'input': '-54 46 20 40\\r\\n-45 50 30 98\\r\\n', 'output': ['2']}, {'input': '74 -34 20 40\\r\\n82 -30 30 31\\r\\n', 'output': ['2']}, {'input': '23 -61 20 40\\r\\n41 -55 1 37\\r\\n', 'output': ['1']}, {'input': '57 -86 20 40\\r\\n75 -86 1 22\\r\\n', 'output': ['2']}, {'input': '-38 43 20 40\\r\\n-20 49 1 20\\r\\n', 'output': ['2']}, {'input': '-19 10 20 40\\r\\n-2 10 2 37\\r\\n', 'output': ['1']}, {'input': '64 58 20 40\\r\\n74 58 7 30\\r\\n', 'output': ['2']}, {'input': '53 49 20 40\\r\\n62 49 10 29\\r\\n', 'output': ['2']}, {'input': '53 80 20 40\\r\\n70 80 2 3\\r\\n', 'output': ['4']}, {'input': '73 -41 20 40\\r\\n91 -35 1 49\\r\\n', 'output': ['1']}, {'input': '-8 -34 20 40\\r\\n9 -34 2 57\\r\\n', 'output': ['2']}, {'input': '51 -40 20 40\\r\\n60 -40 9 31\\r\\n', 'output': ['2']}, {'input': '-29 87 20 40\\r\\n-11 93 1 94\\r\\n', 'output': ['2']}, {'input': '-64 3 20 40\\r\\n-55 7 6 30\\r\\n', 'output': ['2']}, {'input': '24 36 20 40\\r\\n41 39 1 2\\r\\n', 'output': ['4']}, {'input': '-56 -64 20 40\\r\\n44 2 96 100\\r\\n', 'output': ['0']}, {'input': '-59 -17 20 40\\r\\n21 -17 59 100\\r\\n', 'output': ['0']}, {'input': '-43 -3 20 40\\r\\n57 -3 79 80\\r\\n', 'output': ['1']}, {'input': '20 57 20 40\\r\\n99 69 58 100\\r\\n', 'output': ['0']}, {'input': '36 82 20 40\\r\\n96 82 38 100\\r\\n', 'output': ['1']}, {'input': '-55 37 20 40\\r\\n4 47 38 100\\r\\n', 'output': ['1']}, {'input': '-58 -4 20 40\\r\\n42 91 99 100\\r\\n', 'output': ['1']}, {'input': '28 51 20 40\\r\\n67 51 1 58\\r\\n', 'output': ['0']}, {'input': '-79 -62 20 40\\r\\n-41 -62 2 58\\r\\n', 'output': ['0']}, {'input': '-19 -10 20 40\\r\\n20 -10 1 19\\r\\n', 'output': ['1']}, {'input': '-95 -64 20 40\\r\\n-56 -64 1 78\\r\\n', 'output': ['0']}, {'input': '-17 -7 20 40\\r\\n22 -7 1 79\\r\\n', 'output': ['1']}, {'input': '-45 86 20 40\\r\\n-6 86 1 99\\r\\n', 'output': ['1']}, {'input': '-71 -23 20 40\\r\\n-32 -23 1 18\\r\\n', 'output': ['1']}, {'input': '-20 11 20 40\\r\\n80 11 60 100\\r\\n', 'output': ['1']}, {'input': '-27 97 20 40\\r\\n51 97 38 98\\r\\n', 'output': ['1']}, {'input': '-47 -84 20 40\\r\\n52 -64 61 81\\r\\n', 'output': ['2']}, {'input': '-81 99 20 40\\r\\n-3 99 38 99\\r\\n', 'output': ['1']}, {'input': '-54 25 20 40\\r\\n6 25 20 100\\r\\n', 'output': ['2']}, {'input': '-22 40 20 40\\r\\n36 40 18 100\\r\\n', 'output': ['2']}, {'input': '-71 15 20 40\\r\\n29 90 85 100\\r\\n', 'output': ['2']}, {'input': '31 -13 20 40\\r\\n69 -5 1 56\\r\\n', 'output': ['0']}, {'input': '-46 55 20 40\\r\\n-17 55 7 11\\r\\n', 'output': ['1']}, {'input': '-35 25 20 40\\r\\n-6 32 7 10\\r\\n', 'output': ['1']}, {'input': '27 -98 20 40\\r\\n65 -98 1 58\\r\\n', 'output': ['0']}, {'input': '-100 -19 20 40\\r\\n-62 -19 1 18\\r\\n', 'output': ['1']}, {'input': '48 66 20 40\\r\\n78 66 9 10\\r\\n', 'output': ['2']}, {'input': '-37 -22 20 40\\r\\n-8 -22 8 9\\r\\n', 'output': ['2']}, {'input': '-42 41 20 40\\r\\n-4 49 1 78\\r\\n', 'output': ['0']}, {'input': '-2 -27 20 40\\r\\n35 -27 1 77\\r\\n', 'output': ['1']}, {'input': '-28 -36 20 40\\r\\n10 -28 1 100\\r\\n', 'output': ['1']}, {'input': '-17 31 20 40\\r\\n21 39 1 14\\r\\n', 'output': ['1']}, {'input': '1 44 20 40\\r\\n39 44 1 2\\r\\n', 'output': ['2']}, {'input': '21 -99 20 40\\r\\n58 -97 1 2\\r\\n', 'output': ['2']}, {'input': '-86 -97 20 40\\r\\n14 -31 79 100\\r\\n', 'output': ['1']}, {'input': '-33 42 20 40\\r\\n47 42 39 100\\r\\n', 'output': ['1']}, {'input': '-79 45 20 40\\r\\n21 45 57 80\\r\\n', 'output': ['2']}, {'input': '-99 -66 20 40\\r\\n-20 -54 39 100\\r\\n', 'output': ['1']}, {'input': '39 -44 20 40\\r\\n99 -44 17 100\\r\\n', 'output': ['2']}, {'input': '10 86 20 40\\r\\n69 96 19 100\\r\\n', 'output': ['2']}, {'input': '-72 -4 20 40\\r\\n28 93 99 100\\r\\n', 'output': ['2']}, {'input': '-81 -55 20 40\\r\\n19 20 83 85\\r\\n', 'output': ['4']}, {'input': '-65 -34 20 40\\r\\n35 66 99 100\\r\\n', 'output': ['4']}, {'input': '-91 -46 10 50\\r\\n-73 -40 30 31\\r\\n', 'output': ['2']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v;\n  scanf(\"%d %d %d %d\", &a, &b, &c, &d);\n  int ans = 1;\n  int x1 = a, y1 = b;\n  int x2 = 0, y2 = 0;\n  while (x2 == 0 && y2 == 0) {\n    ans *= 2;\n    swap(x1, y1);\n    swap(x2, y2);\n    if (x2 == 0 && y2 == 0) {\n      int x = x1 - c, y = y1 - c, z = x1 + c, w = y1 + c;\n      if (x >= 0 && y >= 0 && z <= 0 && w <= 0) {\n        x2 = x1 - d, y2 = y1 - d;\n      } else if (x <= 0 && y >= 0 && z <= 0 && w <= 0) {\n        x2 = x1 + d, y2 = y1 - d;\n      } else if (x >= 0 && y <= 0 && z <= 0 && w <= 0) {\n        x2 = x1 - d, y2 = y1 + d;\n      } else if (x <= 0 && y <= 0 && z <= 0 && w <= 0) {\n        x2 = x1 + d, y2 = y1 + d;\n      } else if (x >= 0 && y >= 0 && z >= 0 && w >= 0) {\n        x2 = x1 - d, y2 = y1 - d;\n      } else if (x <= 0 && y >= 0 && z >= 0 && w >= 0) {\n        x2 = x1 + d, y2 = y1 - d;\n      } else if (x >= 0 && y <= 0 && z >= 0 && w >= 0) {\n        x2 = x1 - d, y2 = y1 + d;\n      } else if (x <= 0 && y <= 0 && z >= 0 && w >= 0) {\n        x2 = x1 + d, y2 = y1 + d;\n      }\n    }\n  }\n  if (x2!= 0 && y2!= 0) {\n    printf(\"%d\\n\", ans / 4);\n  } else {\n    printf(\"0\\n\");\n  }\n  return 0;\n}\n"}
{"src_uid": "4c2865e4742a29460ca64860740b84f4", "id": 49, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '60 60 45 55\\r\\n80 80 8 32\\r\\n', 'output': ['1']}, {'input': '60 60 45 55\\r\\n80 60 15 25\\r\\n', 'output': ['4']}, {'input': '50 50 35 45\\r\\n90 50 35 45\\r\\n', 'output': ['0']}, {'input': '0 0 50 70\\r\\n1 0 60 80\\r\\n', 'output': ['2']}, {'input': '0 0 1 2\\r\\n10 0 2 20\\r\\n', 'output': ['2']}, {'input': '31 13 22 95\\r\\n48 63 21 98\\r\\n', 'output': ['0']}, {'input': '31 40 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['0']}, {'input': '-65 -81 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['4']}, {'input': '41 -14 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['0']}, {'input': '41 -14 16 100\\r\\n48 17 37 66\\r\\n', 'output': ['1']}, {'input': '-75 -9 20 40\\r\\n25 55 99 100\\r\\n', 'output': ['0']}, {'input': '-45 6 20 40\\r\\n35 6 99 100\\r\\n', 'output': ['0']}, {'input': '-3 84 20 40\\r\\n76 96 96 100\\r\\n', 'output': ['0']}, {'input': '10 -91 20 40\\r\\n70 -91 79 100\\r\\n', 'output': ['1']}, {'input': '-64 -47 20 40\\r\\n-5 -37 79 100\\r\\n', 'output': ['1']}, {'input': '-63 97 20 40\\r\\n-34 97 11 48\\r\\n', 'output': ['0']}, {'input': '-67 47 20 40\\r\\n-38 47 11 49\\r\\n', 'output': ['0']}, {'input': '-100 -91 20 40\\r\\n-71 -91 11 68\\r\\n', 'output': ['0']}, {'input': '45 -76 20 40\\r\\n69 -69 15 65\\r\\n', 'output': ['1']}, {'input': '12 -43 20 40\\r\\n41 -43 11 97\\r\\n', 'output': ['1']}, {'input': '10 71 20 40\\r\\n39 78 10 49\\r\\n', 'output': ['0']}, {'input': '56 44 20 40\\r\\n83 44 12 13\\r\\n', 'output': ['1']}, {'input': '-20 78 20 40\\r\\n8 85 10 11\\r\\n', 'output': ['1']}, {'input': '65 -9 20 40\\r\\n94 -9 10 49\\r\\n', 'output': ['0']}, {'input': '-84 -59 20 40\\r\\n-74 -59 29 30\\r\\n', 'output': ['1']}, {'input': '33 -37 20 40\\r\\n42 -37 28 29\\r\\n', 'output': ['1']}, {'input': '-25 10 20 40\\r\\n4 17 10 69\\r\\n', 'output': ['0']}, {'input': '13 32 20 40\\r\\n42 32 10 69\\r\\n', 'output': ['1']}, {'input': '-12 -1 20 40\\r\\n-3 -1 28 31\\r\\n', 'output': ['1']}, {'input': '48 30 20 40\\r\\n77 37 10 99\\r\\n', 'output': ['1']}, {'input': '47 -50 20 40\\r\\n56 -46 28 30\\r\\n', 'output': ['1']}, {'input': '-26 -65 20 40\\r\\n52 -65 98 100\\r\\n', 'output': ['1']}, {'input': '-46 36 20 40\\r\\n14 36 80 100\\r\\n', 'output': ['2']}, {'input': '19 96 20 40\\r\\n77 96 78 99\\r\\n', 'output': ['2']}, {'input': '-42 -44 20 40\\r\\n-32 -44 30 48\\r\\n', 'output': ['1']}, {'input': '83 -23 20 40\\r\\n93 -23 30 50\\r\\n', 'output': ['2']}, {'input': '-100 -97 20 40\\r\\n-90 -97 30 100\\r\\n', 'output': ['2']}, {'input': '65 16 20 40\\r\\n74 16 29 48\\r\\n', 'output': ['1']}, {'input': '-66 78 20 40\\r\\n-62 81 25 45\\r\\n', 'output': ['2']}, {'input': '-11 63 20 40\\r\\n-2 63 29 31\\r\\n', 'output': ['2']}, {'input': '91 -59 20 40\\r\\n100 -59 29 100\\r\\n', 'output': ['2']}, {'input': '39 90 20 40\\r\\n47 90 28 31\\r\\n', 'output': ['2']}, {'input': '-100 40 20 40\\r\\n-81 40 1 38\\r\\n', 'output': ['1']}, {'input': '24 -24 20 40\\r\\n43 -24 1 21\\r\\n', 'output': ['2']}, {'input': '-8 35 20 40\\r\\n11 35 1 19\\r\\n', 'output': ['2']}, {'input': '-52 -94 20 40\\r\\n-33 -94 1 39\\r\\n', 'output': ['1']}, {'input': '61 2 20 40\\r\\n67 10 10 30\\r\\n', 'output': ['2']}, {'input': '49 -67 20 40\\r\\n57 -67 12 28\\r\\n', 'output': ['2']}, {'input': '65 17 20 40\\r\\n84 17 1 58\\r\\n', 'output': ['1']}, {'input': '-16 -18 20 40\\r\\n3 -18 1 59\\r\\n', 'output': ['2']}, {'input': '24 -16 20 40\\r\\n33 -16 11 31\\r\\n', 'output': ['2']}, {'input': '-83 96 20 40\\r\\n-64 96 1 98\\r\\n', 'output': ['2']}, {'input': '-10 89 20 40\\r\\n-2 89 12 29\\r\\n', 'output': ['2']}, {'input': '-40 -69 20 40\\r\\n60 -69 80 100\\r\\n', 'output': ['0']}, {'input': '-70 66 20 40\\r\\n8 66 58 98\\r\\n', 'output': ['0']}, {'input': '-11 -97 20 40\\r\\n67 -97 58 100\\r\\n', 'output': ['0']}, {'input': '-60 60 20 40\\r\\n0 60 40 100\\r\\n', 'output': ['1']}, {'input': '0 73 20 40\\r\\n59 73 39 100\\r\\n', 'output': ['1']}, {'input': '28 -91 20 40\\r\\n58 -91 10 49\\r\\n', 'output': ['0']}, {'input': '75 72 20 40\\r\\n99 90 10 50\\r\\n', 'output': ['0']}, {'input': '-84 74 20 40\\r\\n-54 74 10 63\\r\\n', 'output': ['0']}, {'input': '35 -6 20 40\\r\\n59 12 10 70\\r\\n', 'output': ['1']}, {'input': '67 41 20 40\\r\\n97 41 10 98\\r\\n', 'output': ['1']}, {'input': '-27 -68 20 40\\r\\n2 -68 9 48\\r\\n', 'output': ['0']}, {'input': '50 13 20 40\\r\\n78 13 8 12\\r\\n', 'output': ['1']}, {'input': '-73 36 20 40\\r\\n-44 36 9 10\\r\\n', 'output': ['1']}, {'input': '70 92 20 40\\r\\n99 92 9 49\\r\\n', 'output': ['0']}, {'input': '37 -80 20 40\\r\\n66 -80 9 66\\r\\n', 'output': ['0']}, {'input': '8 -95 20 40\\r\\n36 -95 8 68\\r\\n', 'output': ['1']}, {'input': '-9 77 20 40\\r\\n20 77 9 100\\r\\n', 'output': ['1']}, {'input': '-37 20 20 40\\r\\n41 31 99 100\\r\\n', 'output': ['1']}, {'input': '-36 28 20 40\\r\\n24 28 99 100\\r\\n', 'output': ['2']}, {'input': '-77 -16 20 40\\r\\n-18 -6 99 100\\r\\n', 'output': ['2']}, {'input': '-65 24 20 40\\r\\n-6 24 99 100\\r\\n', 'output': ['4']}, {'input': '-55 23 20 40\\r\\n-46 23 31 48\\r\\n', 'output': ['1']}, {'input': '-37 18 20 40\\r\\n-30 18 33 47\\r\\n', 'output': ['2']}, {'input': '-45 -93 20 40\\r\\n-36 -93 31 99\\r\\n', 'output': ['2']}, {'input': '-97 -29 20 40\\r\\n-39 -19 99 100\\r\\n', 'output': ['4']}, {'input': '14 18 20 40\\r\\n23 22 30 49\\r\\n', 'output': ['1']}, {'input': '-90 -38 20 40\\r\\n-81 -38 30 49\\r\\n', 'output': ['2']}, {'input': '52 -4 20 40\\r\\n61 -4 30 31\\r\\n', 'output': ['2']}, {'input': '-54 46 20 40\\r\\n-45 50 30 98\\r\\n', 'output': ['2']}, {'input': '74 -34 20 40\\r\\n82 -30 30 31\\r\\n', 'output': ['2']}, {'input': '23 -61 20 40\\r\\n41 -55 1 37\\r\\n', 'output': ['1']}, {'input': '57 -86 20 40\\r\\n75 -86 1 22\\r\\n', 'output': ['2']}, {'input': '-38 43 20 40\\r\\n-20 49 1 20\\r\\n', 'output': ['2']}, {'input': '-19 10 20 40\\r\\n-2 10 2 37\\r\\n', 'output': ['1']}, {'input': '64 58 20 40\\r\\n74 58 7 30\\r\\n', 'output': ['2']}, {'input': '53 49 20 40\\r\\n62 49 10 29\\r\\n', 'output': ['2']}, {'input': '53 80 20 40\\r\\n70 80 2 3\\r\\n', 'output': ['4']}, {'input': '73 -41 20 40\\r\\n91 -35 1 49\\r\\n', 'output': ['1']}, {'input': '-8 -34 20 40\\r\\n9 -34 2 57\\r\\n', 'output': ['2']}, {'input': '51 -40 20 40\\r\\n60 -40 9 31\\r\\n', 'output': ['2']}, {'input': '-29 87 20 40\\r\\n-11 93 1 94\\r\\n', 'output': ['2']}, {'input': '-64 3 20 40\\r\\n-55 7 6 30\\r\\n', 'output': ['2']}, {'input': '24 36 20 40\\r\\n41 39 1 2\\r\\n', 'output': ['4']}, {'input': '-56 -64 20 40\\r\\n44 2 96 100\\r\\n', 'output': ['0']}, {'input': '-59 -17 20 40\\r\\n21 -17 59 100\\r\\n', 'output': ['0']}, {'input': '-43 -3 20 40\\r\\n57 -3 79 80\\r\\n', 'output': ['1']}, {'input': '20 57 20 40\\r\\n99 69 58 100\\r\\n', 'output': ['0']}, {'input': '36 82 20 40\\r\\n96 82 38 100\\r\\n', 'output': ['1']}, {'input': '-55 37 20 40\\r\\n4 47 38 100\\r\\n', 'output': ['1']}, {'input': '-58 -4 20 40\\r\\n42 91 99 100\\r\\n', 'output': ['1']}, {'input': '28 51 20 40\\r\\n67 51 1 58\\r\\n', 'output': ['0']}, {'input': '-79 -62 20 40\\r\\n-41 -62 2 58\\r\\n', 'output': ['0']}, {'input': '-19 -10 20 40\\r\\n20 -10 1 19\\r\\n', 'output': ['1']}, {'input': '-95 -64 20 40\\r\\n-56 -64 1 78\\r\\n', 'output': ['0']}, {'input': '-17 -7 20 40\\r\\n22 -7 1 79\\r\\n', 'output': ['1']}, {'input': '-45 86 20 40\\r\\n-6 86 1 99\\r\\n', 'output': ['1']}, {'input': '-71 -23 20 40\\r\\n-32 -23 1 18\\r\\n', 'output': ['1']}, {'input': '-20 11 20 40\\r\\n80 11 60 100\\r\\n', 'output': ['1']}, {'input': '-27 97 20 40\\r\\n51 97 38 98\\r\\n', 'output': ['1']}, {'input': '-47 -84 20 40\\r\\n52 -64 61 81\\r\\n', 'output': ['2']}, {'input': '-81 99 20 40\\r\\n-3 99 38 99\\r\\n', 'output': ['1']}, {'input': '-54 25 20 40\\r\\n6 25 20 100\\r\\n', 'output': ['2']}, {'input': '-22 40 20 40\\r\\n36 40 18 100\\r\\n', 'output': ['2']}, {'input': '-71 15 20 40\\r\\n29 90 85 100\\r\\n', 'output': ['2']}, {'input': '31 -13 20 40\\r\\n69 -5 1 56\\r\\n', 'output': ['0']}, {'input': '-46 55 20 40\\r\\n-17 55 7 11\\r\\n', 'output': ['1']}, {'input': '-35 25 20 40\\r\\n-6 32 7 10\\r\\n', 'output': ['1']}, {'input': '27 -98 20 40\\r\\n65 -98 1 58\\r\\n', 'output': ['0']}, {'input': '-100 -19 20 40\\r\\n-62 -19 1 18\\r\\n', 'output': ['1']}, {'input': '48 66 20 40\\r\\n78 66 9 10\\r\\n', 'output': ['2']}, {'input': '-37 -22 20 40\\r\\n-8 -22 8 9\\r\\n', 'output': ['2']}, {'input': '-42 41 20 40\\r\\n-4 49 1 78\\r\\n', 'output': ['0']}, {'input': '-2 -27 20 40\\r\\n35 -27 1 77\\r\\n', 'output': ['1']}, {'input': '-28 -36 20 40\\r\\n10 -28 1 100\\r\\n', 'output': ['1']}, {'input': '-17 31 20 40\\r\\n21 39 1 14\\r\\n', 'output': ['1']}, {'input': '1 44 20 40\\r\\n39 44 1 2\\r\\n', 'output': ['2']}, {'input': '21 -99 20 40\\r\\n58 -97 1 2\\r\\n', 'output': ['2']}, {'input': '-86 -97 20 40\\r\\n14 -31 79 100\\r\\n', 'output': ['1']}, {'input': '-33 42 20 40\\r\\n47 42 39 100\\r\\n', 'output': ['1']}, {'input': '-79 45 20 40\\r\\n21 45 57 80\\r\\n', 'output': ['2']}, {'input': '-99 -66 20 40\\r\\n-20 -54 39 100\\r\\n', 'output': ['1']}, {'input': '39 -44 20 40\\r\\n99 -44 17 100\\r\\n', 'output': ['2']}, {'input': '10 86 20 40\\r\\n69 96 19 100\\r\\n', 'output': ['2']}, {'input': '-72 -4 20 40\\r\\n28 93 99 100\\r\\n', 'output': ['2']}, {'input': '-81 -55 20 40\\r\\n19 20 83 85\\r\\n', 'output': ['4']}, {'input': '-65 -34 20 40\\r\\n35 66 99 100\\r\\n', 'output': ['4']}, {'input': '-91 -46 10 50\\r\\n-73 -40 30 31\\r\\n', 'output': ['2']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\ndouble X1, Y1, R1, r1, X2, Y2, R2, r2;\nint main() {\n  cin >> X1 >> Y1 >> R1 >> r1 >> X2 >> Y2 >> R2 >> r2;\n  double a, b, c, d, e, f, g, h;\n  a = X2 - X1;\n  b = Y2 - Y1;\n  c = a * a + b * b;\n  d = (r1 + r2) * (r1 + r2);\n  e = (R1 - r1) * (R1 - r1);\n  f = (r2 - R2) * (r2 - R2);\n  g = (R1 + R2) * (R1 + R2);\n  g = g * g;\n  h = g - e - f;\n  if (h < 0 || h * c < d * d)\n    cout << 0 << endl;\n  else if (c * g < d * d + d * h)\n    cout << 1 << endl;\n  else if (c * h < d * d + d * d)\n    cout << 2 << endl;\n  else\n    cout << 4 << endl;\n  return 0;\n}\n"}
{"src_uid": "4c2865e4742a29460ca64860740b84f4", "id": 49, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '60 60 45 55\\r\\n80 80 8 32\\r\\n', 'output': ['1']}, {'input': '60 60 45 55\\r\\n80 60 15 25\\r\\n', 'output': ['4']}, {'input': '50 50 35 45\\r\\n90 50 35 45\\r\\n', 'output': ['0']}, {'input': '0 0 50 70\\r\\n1 0 60 80\\r\\n', 'output': ['2']}, {'input': '0 0 1 2\\r\\n10 0 2 20\\r\\n', 'output': ['2']}, {'input': '31 13 22 95\\r\\n48 63 21 98\\r\\n', 'output': ['0']}, {'input': '31 40 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['0']}, {'input': '-65 -81 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['4']}, {'input': '41 -14 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['0']}, {'input': '41 -14 16 100\\r\\n48 17 37 66\\r\\n', 'output': ['1']}, {'input': '-75 -9 20 40\\r\\n25 55 99 100\\r\\n', 'output': ['0']}, {'input': '-45 6 20 40\\r\\n35 6 99 100\\r\\n', 'output': ['0']}, {'input': '-3 84 20 40\\r\\n76 96 96 100\\r\\n', 'output': ['0']}, {'input': '10 -91 20 40\\r\\n70 -91 79 100\\r\\n', 'output': ['1']}, {'input': '-64 -47 20 40\\r\\n-5 -37 79 100\\r\\n', 'output': ['1']}, {'input': '-63 97 20 40\\r\\n-34 97 11 48\\r\\n', 'output': ['0']}, {'input': '-67 47 20 40\\r\\n-38 47 11 49\\r\\n', 'output': ['0']}, {'input': '-100 -91 20 40\\r\\n-71 -91 11 68\\r\\n', 'output': ['0']}, {'input': '45 -76 20 40\\r\\n69 -69 15 65\\r\\n', 'output': ['1']}, {'input': '12 -43 20 40\\r\\n41 -43 11 97\\r\\n', 'output': ['1']}, {'input': '10 71 20 40\\r\\n39 78 10 49\\r\\n', 'output': ['0']}, {'input': '56 44 20 40\\r\\n83 44 12 13\\r\\n', 'output': ['1']}, {'input': '-20 78 20 40\\r\\n8 85 10 11\\r\\n', 'output': ['1']}, {'input': '65 -9 20 40\\r\\n94 -9 10 49\\r\\n', 'output': ['0']}, {'input': '-84 -59 20 40\\r\\n-74 -59 29 30\\r\\n', 'output': ['1']}, {'input': '33 -37 20 40\\r\\n42 -37 28 29\\r\\n', 'output': ['1']}, {'input': '-25 10 20 40\\r\\n4 17 10 69\\r\\n', 'output': ['0']}, {'input': '13 32 20 40\\r\\n42 32 10 69\\r\\n', 'output': ['1']}, {'input': '-12 -1 20 40\\r\\n-3 -1 28 31\\r\\n', 'output': ['1']}, {'input': '48 30 20 40\\r\\n77 37 10 99\\r\\n', 'output': ['1']}, {'input': '47 -50 20 40\\r\\n56 -46 28 30\\r\\n', 'output': ['1']}, {'input': '-26 -65 20 40\\r\\n52 -65 98 100\\r\\n', 'output': ['1']}, {'input': '-46 36 20 40\\r\\n14 36 80 100\\r\\n', 'output': ['2']}, {'input': '19 96 20 40\\r\\n77 96 78 99\\r\\n', 'output': ['2']}, {'input': '-42 -44 20 40\\r\\n-32 -44 30 48\\r\\n', 'output': ['1']}, {'input': '83 -23 20 40\\r\\n93 -23 30 50\\r\\n', 'output': ['2']}, {'input': '-100 -97 20 40\\r\\n-90 -97 30 100\\r\\n', 'output': ['2']}, {'input': '65 16 20 40\\r\\n74 16 29 48\\r\\n', 'output': ['1']}, {'input': '-66 78 20 40\\r\\n-62 81 25 45\\r\\n', 'output': ['2']}, {'input': '-11 63 20 40\\r\\n-2 63 29 31\\r\\n', 'output': ['2']}, {'input': '91 -59 20 40\\r\\n100 -59 29 100\\r\\n', 'output': ['2']}, {'input': '39 90 20 40\\r\\n47 90 28 31\\r\\n', 'output': ['2']}, {'input': '-100 40 20 40\\r\\n-81 40 1 38\\r\\n', 'output': ['1']}, {'input': '24 -24 20 40\\r\\n43 -24 1 21\\r\\n', 'output': ['2']}, {'input': '-8 35 20 40\\r\\n11 35 1 19\\r\\n', 'output': ['2']}, {'input': '-52 -94 20 40\\r\\n-33 -94 1 39\\r\\n', 'output': ['1']}, {'input': '61 2 20 40\\r\\n67 10 10 30\\r\\n', 'output': ['2']}, {'input': '49 -67 20 40\\r\\n57 -67 12 28\\r\\n', 'output': ['2']}, {'input': '65 17 20 40\\r\\n84 17 1 58\\r\\n', 'output': ['1']}, {'input': '-16 -18 20 40\\r\\n3 -18 1 59\\r\\n', 'output': ['2']}, {'input': '24 -16 20 40\\r\\n33 -16 11 31\\r\\n', 'output': ['2']}, {'input': '-83 96 20 40\\r\\n-64 96 1 98\\r\\n', 'output': ['2']}, {'input': '-10 89 20 40\\r\\n-2 89 12 29\\r\\n', 'output': ['2']}, {'input': '-40 -69 20 40\\r\\n60 -69 80 100\\r\\n', 'output': ['0']}, {'input': '-70 66 20 40\\r\\n8 66 58 98\\r\\n', 'output': ['0']}, {'input': '-11 -97 20 40\\r\\n67 -97 58 100\\r\\n', 'output': ['0']}, {'input': '-60 60 20 40\\r\\n0 60 40 100\\r\\n', 'output': ['1']}, {'input': '0 73 20 40\\r\\n59 73 39 100\\r\\n', 'output': ['1']}, {'input': '28 -91 20 40\\r\\n58 -91 10 49\\r\\n', 'output': ['0']}, {'input': '75 72 20 40\\r\\n99 90 10 50\\r\\n', 'output': ['0']}, {'input': '-84 74 20 40\\r\\n-54 74 10 63\\r\\n', 'output': ['0']}, {'input': '35 -6 20 40\\r\\n59 12 10 70\\r\\n', 'output': ['1']}, {'input': '67 41 20 40\\r\\n97 41 10 98\\r\\n', 'output': ['1']}, {'input': '-27 -68 20 40\\r\\n2 -68 9 48\\r\\n', 'output': ['0']}, {'input': '50 13 20 40\\r\\n78 13 8 12\\r\\n', 'output': ['1']}, {'input': '-73 36 20 40\\r\\n-44 36 9 10\\r\\n', 'output': ['1']}, {'input': '70 92 20 40\\r\\n99 92 9 49\\r\\n', 'output': ['0']}, {'input': '37 -80 20 40\\r\\n66 -80 9 66\\r\\n', 'output': ['0']}, {'input': '8 -95 20 40\\r\\n36 -95 8 68\\r\\n', 'output': ['1']}, {'input': '-9 77 20 40\\r\\n20 77 9 100\\r\\n', 'output': ['1']}, {'input': '-37 20 20 40\\r\\n41 31 99 100\\r\\n', 'output': ['1']}, {'input': '-36 28 20 40\\r\\n24 28 99 100\\r\\n', 'output': ['2']}, {'input': '-77 -16 20 40\\r\\n-18 -6 99 100\\r\\n', 'output': ['2']}, {'input': '-65 24 20 40\\r\\n-6 24 99 100\\r\\n', 'output': ['4']}, {'input': '-55 23 20 40\\r\\n-46 23 31 48\\r\\n', 'output': ['1']}, {'input': '-37 18 20 40\\r\\n-30 18 33 47\\r\\n', 'output': ['2']}, {'input': '-45 -93 20 40\\r\\n-36 -93 31 99\\r\\n', 'output': ['2']}, {'input': '-97 -29 20 40\\r\\n-39 -19 99 100\\r\\n', 'output': ['4']}, {'input': '14 18 20 40\\r\\n23 22 30 49\\r\\n', 'output': ['1']}, {'input': '-90 -38 20 40\\r\\n-81 -38 30 49\\r\\n', 'output': ['2']}, {'input': '52 -4 20 40\\r\\n61 -4 30 31\\r\\n', 'output': ['2']}, {'input': '-54 46 20 40\\r\\n-45 50 30 98\\r\\n', 'output': ['2']}, {'input': '74 -34 20 40\\r\\n82 -30 30 31\\r\\n', 'output': ['2']}, {'input': '23 -61 20 40\\r\\n41 -55 1 37\\r\\n', 'output': ['1']}, {'input': '57 -86 20 40\\r\\n75 -86 1 22\\r\\n', 'output': ['2']}, {'input': '-38 43 20 40\\r\\n-20 49 1 20\\r\\n', 'output': ['2']}, {'input': '-19 10 20 40\\r\\n-2 10 2 37\\r\\n', 'output': ['1']}, {'input': '64 58 20 40\\r\\n74 58 7 30\\r\\n', 'output': ['2']}, {'input': '53 49 20 40\\r\\n62 49 10 29\\r\\n', 'output': ['2']}, {'input': '53 80 20 40\\r\\n70 80 2 3\\r\\n', 'output': ['4']}, {'input': '73 -41 20 40\\r\\n91 -35 1 49\\r\\n', 'output': ['1']}, {'input': '-8 -34 20 40\\r\\n9 -34 2 57\\r\\n', 'output': ['2']}, {'input': '51 -40 20 40\\r\\n60 -40 9 31\\r\\n', 'output': ['2']}, {'input': '-29 87 20 40\\r\\n-11 93 1 94\\r\\n', 'output': ['2']}, {'input': '-64 3 20 40\\r\\n-55 7 6 30\\r\\n', 'output': ['2']}, {'input': '24 36 20 40\\r\\n41 39 1 2\\r\\n', 'output': ['4']}, {'input': '-56 -64 20 40\\r\\n44 2 96 100\\r\\n', 'output': ['0']}, {'input': '-59 -17 20 40\\r\\n21 -17 59 100\\r\\n', 'output': ['0']}, {'input': '-43 -3 20 40\\r\\n57 -3 79 80\\r\\n', 'output': ['1']}, {'input': '20 57 20 40\\r\\n99 69 58 100\\r\\n', 'output': ['0']}, {'input': '36 82 20 40\\r\\n96 82 38 100\\r\\n', 'output': ['1']}, {'input': '-55 37 20 40\\r\\n4 47 38 100\\r\\n', 'output': ['1']}, {'input': '-58 -4 20 40\\r\\n42 91 99 100\\r\\n', 'output': ['1']}, {'input': '28 51 20 40\\r\\n67 51 1 58\\r\\n', 'output': ['0']}, {'input': '-79 -62 20 40\\r\\n-41 -62 2 58\\r\\n', 'output': ['0']}, {'input': '-19 -10 20 40\\r\\n20 -10 1 19\\r\\n', 'output': ['1']}, {'input': '-95 -64 20 40\\r\\n-56 -64 1 78\\r\\n', 'output': ['0']}, {'input': '-17 -7 20 40\\r\\n22 -7 1 79\\r\\n', 'output': ['1']}, {'input': '-45 86 20 40\\r\\n-6 86 1 99\\r\\n', 'output': ['1']}, {'input': '-71 -23 20 40\\r\\n-32 -23 1 18\\r\\n', 'output': ['1']}, {'input': '-20 11 20 40\\r\\n80 11 60 100\\r\\n', 'output': ['1']}, {'input': '-27 97 20 40\\r\\n51 97 38 98\\r\\n', 'output': ['1']}, {'input': '-47 -84 20 40\\r\\n52 -64 61 81\\r\\n', 'output': ['2']}, {'input': '-81 99 20 40\\r\\n-3 99 38 99\\r\\n', 'output': ['1']}, {'input': '-54 25 20 40\\r\\n6 25 20 100\\r\\n', 'output': ['2']}, {'input': '-22 40 20 40\\r\\n36 40 18 100\\r\\n', 'output': ['2']}, {'input': '-71 15 20 40\\r\\n29 90 85 100\\r\\n', 'output': ['2']}, {'input': '31 -13 20 40\\r\\n69 -5 1 56\\r\\n', 'output': ['0']}, {'input': '-46 55 20 40\\r\\n-17 55 7 11\\r\\n', 'output': ['1']}, {'input': '-35 25 20 40\\r\\n-6 32 7 10\\r\\n', 'output': ['1']}, {'input': '27 -98 20 40\\r\\n65 -98 1 58\\r\\n', 'output': ['0']}, {'input': '-100 -19 20 40\\r\\n-62 -19 1 18\\r\\n', 'output': ['1']}, {'input': '48 66 20 40\\r\\n78 66 9 10\\r\\n', 'output': ['2']}, {'input': '-37 -22 20 40\\r\\n-8 -22 8 9\\r\\n', 'output': ['2']}, {'input': '-42 41 20 40\\r\\n-4 49 1 78\\r\\n', 'output': ['0']}, {'input': '-2 -27 20 40\\r\\n35 -27 1 77\\r\\n', 'output': ['1']}, {'input': '-28 -36 20 40\\r\\n10 -28 1 100\\r\\n', 'output': ['1']}, {'input': '-17 31 20 40\\r\\n21 39 1 14\\r\\n', 'output': ['1']}, {'input': '1 44 20 40\\r\\n39 44 1 2\\r\\n', 'output': ['2']}, {'input': '21 -99 20 40\\r\\n58 -97 1 2\\r\\n', 'output': ['2']}, {'input': '-86 -97 20 40\\r\\n14 -31 79 100\\r\\n', 'output': ['1']}, {'input': '-33 42 20 40\\r\\n47 42 39 100\\r\\n', 'output': ['1']}, {'input': '-79 45 20 40\\r\\n21 45 57 80\\r\\n', 'output': ['2']}, {'input': '-99 -66 20 40\\r\\n-20 -54 39 100\\r\\n', 'output': ['1']}, {'input': '39 -44 20 40\\r\\n99 -44 17 100\\r\\n', 'output': ['2']}, {'input': '10 86 20 40\\r\\n69 96 19 100\\r\\n', 'output': ['2']}, {'input': '-72 -4 20 40\\r\\n28 93 99 100\\r\\n', 'output': ['2']}, {'input': '-81 -55 20 40\\r\\n19 20 83 85\\r\\n', 'output': ['4']}, {'input': '-65 -34 20 40\\r\\n35 66 99 100\\r\\n', 'output': ['4']}, {'input': '-91 -46 10 50\\r\\n-73 -40 30 31\\r\\n', 'output': ['2']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\ndouble x1, y1, x2, y2;\ndouble r1, r2;\nbool check(double x, double y) {\n  double l = sqrt(pow(x - x1, 2) + pow(y - y1, 2));\n  if ((r2 >= l + r1 && r2 <= l + r2) || (r1 >= l + r1 && r1 <= l + r2)) {\n    if (r2 - r1 >= l) return true;\n  }\n  return false;\n}\nint main() {\n  cin >> x1 >> y1 >> r1 >> r2;\n  cin >> x2 >> y2 >> r1 >> r2;\n  int count = 0;\n  if (r1 >= r2) {\n    for (int i = 1; i <= 301; i++) {\n      double x = x2 + (x1 - x2) / sqrt(pow(x1 - x2, 2) + pow(y1 - y2, 2)) *\n                           (r2 + i / 100.0);\n      double y = y2 + (y1 - y2) / sqrt(pow(x1 - x2, 2) + pow(y1 - y2, 2)) *\n                           (r2 + i / 100.0);\n      if (check(x, y)) {\n        count++;\n      }\n    }\n  } else {\n    for (int i = 1; i <= 301; i++) {\n      double x = x2 + (x1 - x2) / sqrt(pow(x1 - x2, 2) + pow(y1 - y2, 2)) *\n                           (r2 - i / 100.0);\n      double y = y2 + (y1 - y2) / sqrt(pow(x1 - x2, 2) + pow(y1 - y2, 2)) *\n                           (r2 - i / 100.0);\n      if (check(x, y)) {\n        count++;\n      }\n    }\n  }\n  cout << count << endl;\n  return 0;\n}\n"}
{"src_uid": "4c2865e4742a29460ca64860740b84f4", "id": 49, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '60 60 45 55\\r\\n80 80 8 32\\r\\n', 'output': ['1']}, {'input': '60 60 45 55\\r\\n80 60 15 25\\r\\n', 'output': ['4']}, {'input': '50 50 35 45\\r\\n90 50 35 45\\r\\n', 'output': ['0']}, {'input': '0 0 50 70\\r\\n1 0 60 80\\r\\n', 'output': ['2']}, {'input': '0 0 1 2\\r\\n10 0 2 20\\r\\n', 'output': ['2']}, {'input': '31 13 22 95\\r\\n48 63 21 98\\r\\n', 'output': ['0']}, {'input': '31 40 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['0']}, {'input': '-65 -81 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['4']}, {'input': '41 -14 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['0']}, {'input': '41 -14 16 100\\r\\n48 17 37 66\\r\\n', 'output': ['1']}, {'input': '-75 -9 20 40\\r\\n25 55 99 100\\r\\n', 'output': ['0']}, {'input': '-45 6 20 40\\r\\n35 6 99 100\\r\\n', 'output': ['0']}, {'input': '-3 84 20 40\\r\\n76 96 96 100\\r\\n', 'output': ['0']}, {'input': '10 -91 20 40\\r\\n70 -91 79 100\\r\\n', 'output': ['1']}, {'input': '-64 -47 20 40\\r\\n-5 -37 79 100\\r\\n', 'output': ['1']}, {'input': '-63 97 20 40\\r\\n-34 97 11 48\\r\\n', 'output': ['0']}, {'input': '-67 47 20 40\\r\\n-38 47 11 49\\r\\n', 'output': ['0']}, {'input': '-100 -91 20 40\\r\\n-71 -91 11 68\\r\\n', 'output': ['0']}, {'input': '45 -76 20 40\\r\\n69 -69 15 65\\r\\n', 'output': ['1']}, {'input': '12 -43 20 40\\r\\n41 -43 11 97\\r\\n', 'output': ['1']}, {'input': '10 71 20 40\\r\\n39 78 10 49\\r\\n', 'output': ['0']}, {'input': '56 44 20 40\\r\\n83 44 12 13\\r\\n', 'output': ['1']}, {'input': '-20 78 20 40\\r\\n8 85 10 11\\r\\n', 'output': ['1']}, {'input': '65 -9 20 40\\r\\n94 -9 10 49\\r\\n', 'output': ['0']}, {'input': '-84 -59 20 40\\r\\n-74 -59 29 30\\r\\n', 'output': ['1']}, {'input': '33 -37 20 40\\r\\n42 -37 28 29\\r\\n', 'output': ['1']}, {'input': '-25 10 20 40\\r\\n4 17 10 69\\r\\n', 'output': ['0']}, {'input': '13 32 20 40\\r\\n42 32 10 69\\r\\n', 'output': ['1']}, {'input': '-12 -1 20 40\\r\\n-3 -1 28 31\\r\\n', 'output': ['1']}, {'input': '48 30 20 40\\r\\n77 37 10 99\\r\\n', 'output': ['1']}, {'input': '47 -50 20 40\\r\\n56 -46 28 30\\r\\n', 'output': ['1']}, {'input': '-26 -65 20 40\\r\\n52 -65 98 100\\r\\n', 'output': ['1']}, {'input': '-46 36 20 40\\r\\n14 36 80 100\\r\\n', 'output': ['2']}, {'input': '19 96 20 40\\r\\n77 96 78 99\\r\\n', 'output': ['2']}, {'input': '-42 -44 20 40\\r\\n-32 -44 30 48\\r\\n', 'output': ['1']}, {'input': '83 -23 20 40\\r\\n93 -23 30 50\\r\\n', 'output': ['2']}, {'input': '-100 -97 20 40\\r\\n-90 -97 30 100\\r\\n', 'output': ['2']}, {'input': '65 16 20 40\\r\\n74 16 29 48\\r\\n', 'output': ['1']}, {'input': '-66 78 20 40\\r\\n-62 81 25 45\\r\\n', 'output': ['2']}, {'input': '-11 63 20 40\\r\\n-2 63 29 31\\r\\n', 'output': ['2']}, {'input': '91 -59 20 40\\r\\n100 -59 29 100\\r\\n', 'output': ['2']}, {'input': '39 90 20 40\\r\\n47 90 28 31\\r\\n', 'output': ['2']}, {'input': '-100 40 20 40\\r\\n-81 40 1 38\\r\\n', 'output': ['1']}, {'input': '24 -24 20 40\\r\\n43 -24 1 21\\r\\n', 'output': ['2']}, {'input': '-8 35 20 40\\r\\n11 35 1 19\\r\\n', 'output': ['2']}, {'input': '-52 -94 20 40\\r\\n-33 -94 1 39\\r\\n', 'output': ['1']}, {'input': '61 2 20 40\\r\\n67 10 10 30\\r\\n', 'output': ['2']}, {'input': '49 -67 20 40\\r\\n57 -67 12 28\\r\\n', 'output': ['2']}, {'input': '65 17 20 40\\r\\n84 17 1 58\\r\\n', 'output': ['1']}, {'input': '-16 -18 20 40\\r\\n3 -18 1 59\\r\\n', 'output': ['2']}, {'input': '24 -16 20 40\\r\\n33 -16 11 31\\r\\n', 'output': ['2']}, {'input': '-83 96 20 40\\r\\n-64 96 1 98\\r\\n', 'output': ['2']}, {'input': '-10 89 20 40\\r\\n-2 89 12 29\\r\\n', 'output': ['2']}, {'input': '-40 -69 20 40\\r\\n60 -69 80 100\\r\\n', 'output': ['0']}, {'input': '-70 66 20 40\\r\\n8 66 58 98\\r\\n', 'output': ['0']}, {'input': '-11 -97 20 40\\r\\n67 -97 58 100\\r\\n', 'output': ['0']}, {'input': '-60 60 20 40\\r\\n0 60 40 100\\r\\n', 'output': ['1']}, {'input': '0 73 20 40\\r\\n59 73 39 100\\r\\n', 'output': ['1']}, {'input': '28 -91 20 40\\r\\n58 -91 10 49\\r\\n', 'output': ['0']}, {'input': '75 72 20 40\\r\\n99 90 10 50\\r\\n', 'output': ['0']}, {'input': '-84 74 20 40\\r\\n-54 74 10 63\\r\\n', 'output': ['0']}, {'input': '35 -6 20 40\\r\\n59 12 10 70\\r\\n', 'output': ['1']}, {'input': '67 41 20 40\\r\\n97 41 10 98\\r\\n', 'output': ['1']}, {'input': '-27 -68 20 40\\r\\n2 -68 9 48\\r\\n', 'output': ['0']}, {'input': '50 13 20 40\\r\\n78 13 8 12\\r\\n', 'output': ['1']}, {'input': '-73 36 20 40\\r\\n-44 36 9 10\\r\\n', 'output': ['1']}, {'input': '70 92 20 40\\r\\n99 92 9 49\\r\\n', 'output': ['0']}, {'input': '37 -80 20 40\\r\\n66 -80 9 66\\r\\n', 'output': ['0']}, {'input': '8 -95 20 40\\r\\n36 -95 8 68\\r\\n', 'output': ['1']}, {'input': '-9 77 20 40\\r\\n20 77 9 100\\r\\n', 'output': ['1']}, {'input': '-37 20 20 40\\r\\n41 31 99 100\\r\\n', 'output': ['1']}, {'input': '-36 28 20 40\\r\\n24 28 99 100\\r\\n', 'output': ['2']}, {'input': '-77 -16 20 40\\r\\n-18 -6 99 100\\r\\n', 'output': ['2']}, {'input': '-65 24 20 40\\r\\n-6 24 99 100\\r\\n', 'output': ['4']}, {'input': '-55 23 20 40\\r\\n-46 23 31 48\\r\\n', 'output': ['1']}, {'input': '-37 18 20 40\\r\\n-30 18 33 47\\r\\n', 'output': ['2']}, {'input': '-45 -93 20 40\\r\\n-36 -93 31 99\\r\\n', 'output': ['2']}, {'input': '-97 -29 20 40\\r\\n-39 -19 99 100\\r\\n', 'output': ['4']}, {'input': '14 18 20 40\\r\\n23 22 30 49\\r\\n', 'output': ['1']}, {'input': '-90 -38 20 40\\r\\n-81 -38 30 49\\r\\n', 'output': ['2']}, {'input': '52 -4 20 40\\r\\n61 -4 30 31\\r\\n', 'output': ['2']}, {'input': '-54 46 20 40\\r\\n-45 50 30 98\\r\\n', 'output': ['2']}, {'input': '74 -34 20 40\\r\\n82 -30 30 31\\r\\n', 'output': ['2']}, {'input': '23 -61 20 40\\r\\n41 -55 1 37\\r\\n', 'output': ['1']}, {'input': '57 -86 20 40\\r\\n75 -86 1 22\\r\\n', 'output': ['2']}, {'input': '-38 43 20 40\\r\\n-20 49 1 20\\r\\n', 'output': ['2']}, {'input': '-19 10 20 40\\r\\n-2 10 2 37\\r\\n', 'output': ['1']}, {'input': '64 58 20 40\\r\\n74 58 7 30\\r\\n', 'output': ['2']}, {'input': '53 49 20 40\\r\\n62 49 10 29\\r\\n', 'output': ['2']}, {'input': '53 80 20 40\\r\\n70 80 2 3\\r\\n', 'output': ['4']}, {'input': '73 -41 20 40\\r\\n91 -35 1 49\\r\\n', 'output': ['1']}, {'input': '-8 -34 20 40\\r\\n9 -34 2 57\\r\\n', 'output': ['2']}, {'input': '51 -40 20 40\\r\\n60 -40 9 31\\r\\n', 'output': ['2']}, {'input': '-29 87 20 40\\r\\n-11 93 1 94\\r\\n', 'output': ['2']}, {'input': '-64 3 20 40\\r\\n-55 7 6 30\\r\\n', 'output': ['2']}, {'input': '24 36 20 40\\r\\n41 39 1 2\\r\\n', 'output': ['4']}, {'input': '-56 -64 20 40\\r\\n44 2 96 100\\r\\n', 'output': ['0']}, {'input': '-59 -17 20 40\\r\\n21 -17 59 100\\r\\n', 'output': ['0']}, {'input': '-43 -3 20 40\\r\\n57 -3 79 80\\r\\n', 'output': ['1']}, {'input': '20 57 20 40\\r\\n99 69 58 100\\r\\n', 'output': ['0']}, {'input': '36 82 20 40\\r\\n96 82 38 100\\r\\n', 'output': ['1']}, {'input': '-55 37 20 40\\r\\n4 47 38 100\\r\\n', 'output': ['1']}, {'input': '-58 -4 20 40\\r\\n42 91 99 100\\r\\n', 'output': ['1']}, {'input': '28 51 20 40\\r\\n67 51 1 58\\r\\n', 'output': ['0']}, {'input': '-79 -62 20 40\\r\\n-41 -62 2 58\\r\\n', 'output': ['0']}, {'input': '-19 -10 20 40\\r\\n20 -10 1 19\\r\\n', 'output': ['1']}, {'input': '-95 -64 20 40\\r\\n-56 -64 1 78\\r\\n', 'output': ['0']}, {'input': '-17 -7 20 40\\r\\n22 -7 1 79\\r\\n', 'output': ['1']}, {'input': '-45 86 20 40\\r\\n-6 86 1 99\\r\\n', 'output': ['1']}, {'input': '-71 -23 20 40\\r\\n-32 -23 1 18\\r\\n', 'output': ['1']}, {'input': '-20 11 20 40\\r\\n80 11 60 100\\r\\n', 'output': ['1']}, {'input': '-27 97 20 40\\r\\n51 97 38 98\\r\\n', 'output': ['1']}, {'input': '-47 -84 20 40\\r\\n52 -64 61 81\\r\\n', 'output': ['2']}, {'input': '-81 99 20 40\\r\\n-3 99 38 99\\r\\n', 'output': ['1']}, {'input': '-54 25 20 40\\r\\n6 25 20 100\\r\\n', 'output': ['2']}, {'input': '-22 40 20 40\\r\\n36 40 18 100\\r\\n', 'output': ['2']}, {'input': '-71 15 20 40\\r\\n29 90 85 100\\r\\n', 'output': ['2']}, {'input': '31 -13 20 40\\r\\n69 -5 1 56\\r\\n', 'output': ['0']}, {'input': '-46 55 20 40\\r\\n-17 55 7 11\\r\\n', 'output': ['1']}, {'input': '-35 25 20 40\\r\\n-6 32 7 10\\r\\n', 'output': ['1']}, {'input': '27 -98 20 40\\r\\n65 -98 1 58\\r\\n', 'output': ['0']}, {'input': '-100 -19 20 40\\r\\n-62 -19 1 18\\r\\n', 'output': ['1']}, {'input': '48 66 20 40\\r\\n78 66 9 10\\r\\n', 'output': ['2']}, {'input': '-37 -22 20 40\\r\\n-8 -22 8 9\\r\\n', 'output': ['2']}, {'input': '-42 41 20 40\\r\\n-4 49 1 78\\r\\n', 'output': ['0']}, {'input': '-2 -27 20 40\\r\\n35 -27 1 77\\r\\n', 'output': ['1']}, {'input': '-28 -36 20 40\\r\\n10 -28 1 100\\r\\n', 'output': ['1']}, {'input': '-17 31 20 40\\r\\n21 39 1 14\\r\\n', 'output': ['1']}, {'input': '1 44 20 40\\r\\n39 44 1 2\\r\\n', 'output': ['2']}, {'input': '21 -99 20 40\\r\\n58 -97 1 2\\r\\n', 'output': ['2']}, {'input': '-86 -97 20 40\\r\\n14 -31 79 100\\r\\n', 'output': ['1']}, {'input': '-33 42 20 40\\r\\n47 42 39 100\\r\\n', 'output': ['1']}, {'input': '-79 45 20 40\\r\\n21 45 57 80\\r\\n', 'output': ['2']}, {'input': '-99 -66 20 40\\r\\n-20 -54 39 100\\r\\n', 'output': ['1']}, {'input': '39 -44 20 40\\r\\n99 -44 17 100\\r\\n', 'output': ['2']}, {'input': '10 86 20 40\\r\\n69 96 19 100\\r\\n', 'output': ['2']}, {'input': '-72 -4 20 40\\r\\n28 93 99 100\\r\\n', 'output': ['2']}, {'input': '-81 -55 20 40\\r\\n19 20 83 85\\r\\n', 'output': ['4']}, {'input': '-65 -34 20 40\\r\\n35 66 99 100\\r\\n', 'output': ['4']}, {'input': '-91 -46 10 50\\r\\n-73 -40 30 31\\r\\n', 'output': ['2']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, cnt, ans, f1[1001], f2[1001];\nint main() {\n  double x1, y1, r1, r2;\n  double cx, cy;\n  while (~scanf(\"%lf%lf%lf%lf\", &x1, &y1, &r1, &r2)) {\n    cnt = 0;\n    ans = 0;\n    if (r1 > r2) {\n      swap(r1, r2);\n    }\n    f1[r1]++;\n    f2[r2]++;\n    for (int i = r1 + 1; i <= r2; i++) {\n      f1[i]++;\n    }\n    for (int i = r2 + 1; i <= 200; i++) {\n      f1[i]++;\n      if (f1[i] == 1) cnt++;\n    }\n    for (int i = 1; i < 200; i++) {\n      ans += cnt * f2[i];\n    }\n    printf(\"%d\\n\", ans);\n  }\n  return 0;\n}\n"}
{"src_uid": "4c2865e4742a29460ca64860740b84f4", "id": 49, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '60 60 45 55\\r\\n80 80 8 32\\r\\n', 'output': ['1']}, {'input': '60 60 45 55\\r\\n80 60 15 25\\r\\n', 'output': ['4']}, {'input': '50 50 35 45\\r\\n90 50 35 45\\r\\n', 'output': ['0']}, {'input': '0 0 50 70\\r\\n1 0 60 80\\r\\n', 'output': ['2']}, {'input': '0 0 1 2\\r\\n10 0 2 20\\r\\n', 'output': ['2']}, {'input': '31 13 22 95\\r\\n48 63 21 98\\r\\n', 'output': ['0']}, {'input': '31 40 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['0']}, {'input': '-65 -81 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['4']}, {'input': '41 -14 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['0']}, {'input': '41 -14 16 100\\r\\n48 17 37 66\\r\\n', 'output': ['1']}, {'input': '-75 -9 20 40\\r\\n25 55 99 100\\r\\n', 'output': ['0']}, {'input': '-45 6 20 40\\r\\n35 6 99 100\\r\\n', 'output': ['0']}, {'input': '-3 84 20 40\\r\\n76 96 96 100\\r\\n', 'output': ['0']}, {'input': '10 -91 20 40\\r\\n70 -91 79 100\\r\\n', 'output': ['1']}, {'input': '-64 -47 20 40\\r\\n-5 -37 79 100\\r\\n', 'output': ['1']}, {'input': '-63 97 20 40\\r\\n-34 97 11 48\\r\\n', 'output': ['0']}, {'input': '-67 47 20 40\\r\\n-38 47 11 49\\r\\n', 'output': ['0']}, {'input': '-100 -91 20 40\\r\\n-71 -91 11 68\\r\\n', 'output': ['0']}, {'input': '45 -76 20 40\\r\\n69 -69 15 65\\r\\n', 'output': ['1']}, {'input': '12 -43 20 40\\r\\n41 -43 11 97\\r\\n', 'output': ['1']}, {'input': '10 71 20 40\\r\\n39 78 10 49\\r\\n', 'output': ['0']}, {'input': '56 44 20 40\\r\\n83 44 12 13\\r\\n', 'output': ['1']}, {'input': '-20 78 20 40\\r\\n8 85 10 11\\r\\n', 'output': ['1']}, {'input': '65 -9 20 40\\r\\n94 -9 10 49\\r\\n', 'output': ['0']}, {'input': '-84 -59 20 40\\r\\n-74 -59 29 30\\r\\n', 'output': ['1']}, {'input': '33 -37 20 40\\r\\n42 -37 28 29\\r\\n', 'output': ['1']}, {'input': '-25 10 20 40\\r\\n4 17 10 69\\r\\n', 'output': ['0']}, {'input': '13 32 20 40\\r\\n42 32 10 69\\r\\n', 'output': ['1']}, {'input': '-12 -1 20 40\\r\\n-3 -1 28 31\\r\\n', 'output': ['1']}, {'input': '48 30 20 40\\r\\n77 37 10 99\\r\\n', 'output': ['1']}, {'input': '47 -50 20 40\\r\\n56 -46 28 30\\r\\n', 'output': ['1']}, {'input': '-26 -65 20 40\\r\\n52 -65 98 100\\r\\n', 'output': ['1']}, {'input': '-46 36 20 40\\r\\n14 36 80 100\\r\\n', 'output': ['2']}, {'input': '19 96 20 40\\r\\n77 96 78 99\\r\\n', 'output': ['2']}, {'input': '-42 -44 20 40\\r\\n-32 -44 30 48\\r\\n', 'output': ['1']}, {'input': '83 -23 20 40\\r\\n93 -23 30 50\\r\\n', 'output': ['2']}, {'input': '-100 -97 20 40\\r\\n-90 -97 30 100\\r\\n', 'output': ['2']}, {'input': '65 16 20 40\\r\\n74 16 29 48\\r\\n', 'output': ['1']}, {'input': '-66 78 20 40\\r\\n-62 81 25 45\\r\\n', 'output': ['2']}, {'input': '-11 63 20 40\\r\\n-2 63 29 31\\r\\n', 'output': ['2']}, {'input': '91 -59 20 40\\r\\n100 -59 29 100\\r\\n', 'output': ['2']}, {'input': '39 90 20 40\\r\\n47 90 28 31\\r\\n', 'output': ['2']}, {'input': '-100 40 20 40\\r\\n-81 40 1 38\\r\\n', 'output': ['1']}, {'input': '24 -24 20 40\\r\\n43 -24 1 21\\r\\n', 'output': ['2']}, {'input': '-8 35 20 40\\r\\n11 35 1 19\\r\\n', 'output': ['2']}, {'input': '-52 -94 20 40\\r\\n-33 -94 1 39\\r\\n', 'output': ['1']}, {'input': '61 2 20 40\\r\\n67 10 10 30\\r\\n', 'output': ['2']}, {'input': '49 -67 20 40\\r\\n57 -67 12 28\\r\\n', 'output': ['2']}, {'input': '65 17 20 40\\r\\n84 17 1 58\\r\\n', 'output': ['1']}, {'input': '-16 -18 20 40\\r\\n3 -18 1 59\\r\\n', 'output': ['2']}, {'input': '24 -16 20 40\\r\\n33 -16 11 31\\r\\n', 'output': ['2']}, {'input': '-83 96 20 40\\r\\n-64 96 1 98\\r\\n', 'output': ['2']}, {'input': '-10 89 20 40\\r\\n-2 89 12 29\\r\\n', 'output': ['2']}, {'input': '-40 -69 20 40\\r\\n60 -69 80 100\\r\\n', 'output': ['0']}, {'input': '-70 66 20 40\\r\\n8 66 58 98\\r\\n', 'output': ['0']}, {'input': '-11 -97 20 40\\r\\n67 -97 58 100\\r\\n', 'output': ['0']}, {'input': '-60 60 20 40\\r\\n0 60 40 100\\r\\n', 'output': ['1']}, {'input': '0 73 20 40\\r\\n59 73 39 100\\r\\n', 'output': ['1']}, {'input': '28 -91 20 40\\r\\n58 -91 10 49\\r\\n', 'output': ['0']}, {'input': '75 72 20 40\\r\\n99 90 10 50\\r\\n', 'output': ['0']}, {'input': '-84 74 20 40\\r\\n-54 74 10 63\\r\\n', 'output': ['0']}, {'input': '35 -6 20 40\\r\\n59 12 10 70\\r\\n', 'output': ['1']}, {'input': '67 41 20 40\\r\\n97 41 10 98\\r\\n', 'output': ['1']}, {'input': '-27 -68 20 40\\r\\n2 -68 9 48\\r\\n', 'output': ['0']}, {'input': '50 13 20 40\\r\\n78 13 8 12\\r\\n', 'output': ['1']}, {'input': '-73 36 20 40\\r\\n-44 36 9 10\\r\\n', 'output': ['1']}, {'input': '70 92 20 40\\r\\n99 92 9 49\\r\\n', 'output': ['0']}, {'input': '37 -80 20 40\\r\\n66 -80 9 66\\r\\n', 'output': ['0']}, {'input': '8 -95 20 40\\r\\n36 -95 8 68\\r\\n', 'output': ['1']}, {'input': '-9 77 20 40\\r\\n20 77 9 100\\r\\n', 'output': ['1']}, {'input': '-37 20 20 40\\r\\n41 31 99 100\\r\\n', 'output': ['1']}, {'input': '-36 28 20 40\\r\\n24 28 99 100\\r\\n', 'output': ['2']}, {'input': '-77 -16 20 40\\r\\n-18 -6 99 100\\r\\n', 'output': ['2']}, {'input': '-65 24 20 40\\r\\n-6 24 99 100\\r\\n', 'output': ['4']}, {'input': '-55 23 20 40\\r\\n-46 23 31 48\\r\\n', 'output': ['1']}, {'input': '-37 18 20 40\\r\\n-30 18 33 47\\r\\n', 'output': ['2']}, {'input': '-45 -93 20 40\\r\\n-36 -93 31 99\\r\\n', 'output': ['2']}, {'input': '-97 -29 20 40\\r\\n-39 -19 99 100\\r\\n', 'output': ['4']}, {'input': '14 18 20 40\\r\\n23 22 30 49\\r\\n', 'output': ['1']}, {'input': '-90 -38 20 40\\r\\n-81 -38 30 49\\r\\n', 'output': ['2']}, {'input': '52 -4 20 40\\r\\n61 -4 30 31\\r\\n', 'output': ['2']}, {'input': '-54 46 20 40\\r\\n-45 50 30 98\\r\\n', 'output': ['2']}, {'input': '74 -34 20 40\\r\\n82 -30 30 31\\r\\n', 'output': ['2']}, {'input': '23 -61 20 40\\r\\n41 -55 1 37\\r\\n', 'output': ['1']}, {'input': '57 -86 20 40\\r\\n75 -86 1 22\\r\\n', 'output': ['2']}, {'input': '-38 43 20 40\\r\\n-20 49 1 20\\r\\n', 'output': ['2']}, {'input': '-19 10 20 40\\r\\n-2 10 2 37\\r\\n', 'output': ['1']}, {'input': '64 58 20 40\\r\\n74 58 7 30\\r\\n', 'output': ['2']}, {'input': '53 49 20 40\\r\\n62 49 10 29\\r\\n', 'output': ['2']}, {'input': '53 80 20 40\\r\\n70 80 2 3\\r\\n', 'output': ['4']}, {'input': '73 -41 20 40\\r\\n91 -35 1 49\\r\\n', 'output': ['1']}, {'input': '-8 -34 20 40\\r\\n9 -34 2 57\\r\\n', 'output': ['2']}, {'input': '51 -40 20 40\\r\\n60 -40 9 31\\r\\n', 'output': ['2']}, {'input': '-29 87 20 40\\r\\n-11 93 1 94\\r\\n', 'output': ['2']}, {'input': '-64 3 20 40\\r\\n-55 7 6 30\\r\\n', 'output': ['2']}, {'input': '24 36 20 40\\r\\n41 39 1 2\\r\\n', 'output': ['4']}, {'input': '-56 -64 20 40\\r\\n44 2 96 100\\r\\n', 'output': ['0']}, {'input': '-59 -17 20 40\\r\\n21 -17 59 100\\r\\n', 'output': ['0']}, {'input': '-43 -3 20 40\\r\\n57 -3 79 80\\r\\n', 'output': ['1']}, {'input': '20 57 20 40\\r\\n99 69 58 100\\r\\n', 'output': ['0']}, {'input': '36 82 20 40\\r\\n96 82 38 100\\r\\n', 'output': ['1']}, {'input': '-55 37 20 40\\r\\n4 47 38 100\\r\\n', 'output': ['1']}, {'input': '-58 -4 20 40\\r\\n42 91 99 100\\r\\n', 'output': ['1']}, {'input': '28 51 20 40\\r\\n67 51 1 58\\r\\n', 'output': ['0']}, {'input': '-79 -62 20 40\\r\\n-41 -62 2 58\\r\\n', 'output': ['0']}, {'input': '-19 -10 20 40\\r\\n20 -10 1 19\\r\\n', 'output': ['1']}, {'input': '-95 -64 20 40\\r\\n-56 -64 1 78\\r\\n', 'output': ['0']}, {'input': '-17 -7 20 40\\r\\n22 -7 1 79\\r\\n', 'output': ['1']}, {'input': '-45 86 20 40\\r\\n-6 86 1 99\\r\\n', 'output': ['1']}, {'input': '-71 -23 20 40\\r\\n-32 -23 1 18\\r\\n', 'output': ['1']}, {'input': '-20 11 20 40\\r\\n80 11 60 100\\r\\n', 'output': ['1']}, {'input': '-27 97 20 40\\r\\n51 97 38 98\\r\\n', 'output': ['1']}, {'input': '-47 -84 20 40\\r\\n52 -64 61 81\\r\\n', 'output': ['2']}, {'input': '-81 99 20 40\\r\\n-3 99 38 99\\r\\n', 'output': ['1']}, {'input': '-54 25 20 40\\r\\n6 25 20 100\\r\\n', 'output': ['2']}, {'input': '-22 40 20 40\\r\\n36 40 18 100\\r\\n', 'output': ['2']}, {'input': '-71 15 20 40\\r\\n29 90 85 100\\r\\n', 'output': ['2']}, {'input': '31 -13 20 40\\r\\n69 -5 1 56\\r\\n', 'output': ['0']}, {'input': '-46 55 20 40\\r\\n-17 55 7 11\\r\\n', 'output': ['1']}, {'input': '-35 25 20 40\\r\\n-6 32 7 10\\r\\n', 'output': ['1']}, {'input': '27 -98 20 40\\r\\n65 -98 1 58\\r\\n', 'output': ['0']}, {'input': '-100 -19 20 40\\r\\n-62 -19 1 18\\r\\n', 'output': ['1']}, {'input': '48 66 20 40\\r\\n78 66 9 10\\r\\n', 'output': ['2']}, {'input': '-37 -22 20 40\\r\\n-8 -22 8 9\\r\\n', 'output': ['2']}, {'input': '-42 41 20 40\\r\\n-4 49 1 78\\r\\n', 'output': ['0']}, {'input': '-2 -27 20 40\\r\\n35 -27 1 77\\r\\n', 'output': ['1']}, {'input': '-28 -36 20 40\\r\\n10 -28 1 100\\r\\n', 'output': ['1']}, {'input': '-17 31 20 40\\r\\n21 39 1 14\\r\\n', 'output': ['1']}, {'input': '1 44 20 40\\r\\n39 44 1 2\\r\\n', 'output': ['2']}, {'input': '21 -99 20 40\\r\\n58 -97 1 2\\r\\n', 'output': ['2']}, {'input': '-86 -97 20 40\\r\\n14 -31 79 100\\r\\n', 'output': ['1']}, {'input': '-33 42 20 40\\r\\n47 42 39 100\\r\\n', 'output': ['1']}, {'input': '-79 45 20 40\\r\\n21 45 57 80\\r\\n', 'output': ['2']}, {'input': '-99 -66 20 40\\r\\n-20 -54 39 100\\r\\n', 'output': ['1']}, {'input': '39 -44 20 40\\r\\n99 -44 17 100\\r\\n', 'output': ['2']}, {'input': '10 86 20 40\\r\\n69 96 19 100\\r\\n', 'output': ['2']}, {'input': '-72 -4 20 40\\r\\n28 93 99 100\\r\\n', 'output': ['2']}, {'input': '-81 -55 20 40\\r\\n19 20 83 85\\r\\n', 'output': ['4']}, {'input': '-65 -34 20 40\\r\\n35 66 99 100\\r\\n', 'output': ['4']}, {'input': '-91 -46 10 50\\r\\n-73 -40 30 31\\r\\n', 'output': ['2']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  double a1, a2, b1, b2, n1, n2;\n  cin >> a1 >> a2 >> n1 >> n2;\n  if (n1 + n2 > 1.1 * sqrt(pow(a1 - a2, 2) + pow(n1 - n2, 2))) {\n    cout << 0 << endl;\n  } else if (n1 + n2 == 0.5 * sqrt(pow(a1 - a2, 2) + pow(n1 - n2, 2))) {\n    cout << 4 << endl;\n  } else if (n1 + n2 > 0.5 * sqrt(pow(a1 - a2, 2) + pow(n1 - n2, 2))) {\n    cout << 2 << endl;\n  } else if (n1 + n2 < 0.5 * sqrt(pow(a1 - a2, 2) + pow(n1 - n2, 2))) {\n    cout << 0 << endl;\n  }\n}\n"}
{"src_uid": "01eccb722b09a0474903b7e5abc4c47a", "id": 50, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1700, "testcases": "[{'input': '4\\r\\n', 'output': ['3']}, {'input': '9\\r\\n', 'output': ['5']}, {'input': '10\\r\\n', 'output': ['5']}, {'input': '12\\r\\n', 'output': ['5']}, {'input': '1\\r\\n', 'output': ['1']}, {'input': '19\\r\\n', 'output': ['7']}, {'input': '3\\r\\n', 'output': ['5']}, {'input': '2\\r\\n', 'output': ['3']}, {'input': '5\\r\\n', 'output': ['3']}, {'input': '6\\r\\n', 'output': ['5']}, {'input': '7\\r\\n', 'output': ['5']}, {'input': '8\\r\\n', 'output': ['5']}, {'input': '11\\r\\n', 'output': ['5']}, {'input': '13\\r\\n', 'output': ['5']}, {'input': '14\\r\\n', 'output': ['7']}, {'input': '15\\r\\n', 'output': ['7']}, {'input': '16\\r\\n', 'output': ['7']}, {'input': '17\\r\\n', 'output': ['7']}, {'input': '18\\r\\n', 'output': ['7']}, {'input': '20\\r\\n', 'output': ['7']}, {'input': '21\\r\\n', 'output': ['7']}, {'input': '22\\r\\n', 'output': ['7']}, {'input': '23\\r\\n', 'output': ['7']}, {'input': '24\\r\\n', 'output': ['7']}, {'input': '25\\r\\n', 'output': ['7']}, {'input': '26\\r\\n', 'output': ['9']}, {'input': '27\\r\\n', 'output': ['9']}, {'input': '28\\r\\n', 'output': ['9']}, {'input': '29\\r\\n', 'output': ['9']}, {'input': '30\\r\\n', 'output': ['9']}, {'input': '31\\r\\n', 'output': ['9']}, {'input': '32\\r\\n', 'output': ['9']}, {'input': '33\\r\\n', 'output': ['9']}, {'input': '34\\r\\n', 'output': ['9']}, {'input': '35\\r\\n', 'output': ['9']}, {'input': '36\\r\\n', 'output': ['9']}, {'input': '37\\r\\n', 'output': ['9']}, {'input': '38\\r\\n', 'output': ['9']}, {'input': '39\\r\\n', 'output': ['9']}, {'input': '40\\r\\n', 'output': ['9']}, {'input': '41\\r\\n', 'output': ['9']}, {'input': '42\\r\\n', 'output': ['11']}, {'input': '43\\r\\n', 'output': ['11']}, {'input': '44\\r\\n', 'output': ['11']}, {'input': '45\\r\\n', 'output': ['11']}, {'input': '46\\r\\n', 'output': ['11']}, {'input': '47\\r\\n', 'output': ['11']}, {'input': '48\\r\\n', 'output': ['11']}, {'input': '49\\r\\n', 'output': ['11']}, {'input': '50\\r\\n', 'output': ['11']}, {'input': '51\\r\\n', 'output': ['11']}, {'input': '52\\r\\n', 'output': ['11']}, {'input': '53\\r\\n', 'output': ['11']}, {'input': '54\\r\\n', 'output': ['11']}, {'input': '55\\r\\n', 'output': ['11']}, {'input': '56\\r\\n', 'output': ['11']}, {'input': '57\\r\\n', 'output': ['11']}, {'input': '58\\r\\n', 'output': ['11']}, {'input': '59\\r\\n', 'output': ['11']}, {'input': '60\\r\\n', 'output': ['11']}, {'input': '61\\r\\n', 'output': ['11']}, {'input': '62\\r\\n', 'output': ['13']}, {'input': '63\\r\\n', 'output': ['13']}, {'input': '64\\r\\n', 'output': ['13']}, {'input': '65\\r\\n', 'output': ['13']}, {'input': '66\\r\\n', 'output': ['13']}, {'input': '67\\r\\n', 'output': ['13']}, {'input': '68\\r\\n', 'output': ['13']}, {'input': '69\\r\\n', 'output': ['13']}, {'input': '70\\r\\n', 'output': ['13']}, {'input': '71\\r\\n', 'output': ['13']}, {'input': '72\\r\\n', 'output': ['13']}, {'input': '73\\r\\n', 'output': ['13']}, {'input': '74\\r\\n', 'output': ['13']}, {'input': '75\\r\\n', 'output': ['13']}, {'input': '76\\r\\n', 'output': ['13']}, {'input': '77\\r\\n', 'output': ['13']}, {'input': '78\\r\\n', 'output': ['13']}, {'input': '79\\r\\n', 'output': ['13']}, {'input': '80\\r\\n', 'output': ['13']}, {'input': '81\\r\\n', 'output': ['13']}, {'input': '82\\r\\n', 'output': ['13']}, {'input': '83\\r\\n', 'output': ['13']}, {'input': '84\\r\\n', 'output': ['13']}, {'input': '85\\r\\n', 'output': ['13']}, {'input': '86\\r\\n', 'output': ['15']}, {'input': '87\\r\\n', 'output': ['15']}, {'input': '88\\r\\n', 'output': ['15']}, {'input': '89\\r\\n', 'output': ['15']}, {'input': '90\\r\\n', 'output': ['15']}, {'input': '91\\r\\n', 'output': ['15']}, {'input': '92\\r\\n', 'output': ['15']}, {'input': '93\\r\\n', 'output': ['15']}, {'input': '94\\r\\n', 'output': ['15']}, {'input': '95\\r\\n', 'output': ['15']}, {'input': '96\\r\\n', 'output': ['15']}, {'input': '97\\r\\n', 'output': ['15']}, {'input': '98\\r\\n', 'output': ['15']}, {'input': '99\\r\\n', 'output': ['15']}, {'input': '100\\r\\n', 'output': ['15']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  if (n % 2 == 0)\n    cout << n / 2 + 1 << endl;\n  else {\n    cout << n / 2 + 1;\n    if (n / 2 + 1 == 1)\n      cout << endl;\n    else\n      cout << \" \\n\"[n == 3];\n  }\n  return 0;\n}\n"}
{"src_uid": "01eccb722b09a0474903b7e5abc4c47a", "id": 50, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1700, "testcases": "[{'input': '4\\r\\n', 'output': ['3']}, {'input': '9\\r\\n', 'output': ['5']}, {'input': '10\\r\\n', 'output': ['5']}, {'input': '12\\r\\n', 'output': ['5']}, {'input': '1\\r\\n', 'output': ['1']}, {'input': '19\\r\\n', 'output': ['7']}, {'input': '3\\r\\n', 'output': ['5']}, {'input': '2\\r\\n', 'output': ['3']}, {'input': '5\\r\\n', 'output': ['3']}, {'input': '6\\r\\n', 'output': ['5']}, {'input': '7\\r\\n', 'output': ['5']}, {'input': '8\\r\\n', 'output': ['5']}, {'input': '11\\r\\n', 'output': ['5']}, {'input': '13\\r\\n', 'output': ['5']}, {'input': '14\\r\\n', 'output': ['7']}, {'input': '15\\r\\n', 'output': ['7']}, {'input': '16\\r\\n', 'output': ['7']}, {'input': '17\\r\\n', 'output': ['7']}, {'input': '18\\r\\n', 'output': ['7']}, {'input': '20\\r\\n', 'output': ['7']}, {'input': '21\\r\\n', 'output': ['7']}, {'input': '22\\r\\n', 'output': ['7']}, {'input': '23\\r\\n', 'output': ['7']}, {'input': '24\\r\\n', 'output': ['7']}, {'input': '25\\r\\n', 'output': ['7']}, {'input': '26\\r\\n', 'output': ['9']}, {'input': '27\\r\\n', 'output': ['9']}, {'input': '28\\r\\n', 'output': ['9']}, {'input': '29\\r\\n', 'output': ['9']}, {'input': '30\\r\\n', 'output': ['9']}, {'input': '31\\r\\n', 'output': ['9']}, {'input': '32\\r\\n', 'output': ['9']}, {'input': '33\\r\\n', 'output': ['9']}, {'input': '34\\r\\n', 'output': ['9']}, {'input': '35\\r\\n', 'output': ['9']}, {'input': '36\\r\\n', 'output': ['9']}, {'input': '37\\r\\n', 'output': ['9']}, {'input': '38\\r\\n', 'output': ['9']}, {'input': '39\\r\\n', 'output': ['9']}, {'input': '40\\r\\n', 'output': ['9']}, {'input': '41\\r\\n', 'output': ['9']}, {'input': '42\\r\\n', 'output': ['11']}, {'input': '43\\r\\n', 'output': ['11']}, {'input': '44\\r\\n', 'output': ['11']}, {'input': '45\\r\\n', 'output': ['11']}, {'input': '46\\r\\n', 'output': ['11']}, {'input': '47\\r\\n', 'output': ['11']}, {'input': '48\\r\\n', 'output': ['11']}, {'input': '49\\r\\n', 'output': ['11']}, {'input': '50\\r\\n', 'output': ['11']}, {'input': '51\\r\\n', 'output': ['11']}, {'input': '52\\r\\n', 'output': ['11']}, {'input': '53\\r\\n', 'output': ['11']}, {'input': '54\\r\\n', 'output': ['11']}, {'input': '55\\r\\n', 'output': ['11']}, {'input': '56\\r\\n', 'output': ['11']}, {'input': '57\\r\\n', 'output': ['11']}, {'input': '58\\r\\n', 'output': ['11']}, {'input': '59\\r\\n', 'output': ['11']}, {'input': '60\\r\\n', 'output': ['11']}, {'input': '61\\r\\n', 'output': ['11']}, {'input': '62\\r\\n', 'output': ['13']}, {'input': '63\\r\\n', 'output': ['13']}, {'input': '64\\r\\n', 'output': ['13']}, {'input': '65\\r\\n', 'output': ['13']}, {'input': '66\\r\\n', 'output': ['13']}, {'input': '67\\r\\n', 'output': ['13']}, {'input': '68\\r\\n', 'output': ['13']}, {'input': '69\\r\\n', 'output': ['13']}, {'input': '70\\r\\n', 'output': ['13']}, {'input': '71\\r\\n', 'output': ['13']}, {'input': '72\\r\\n', 'output': ['13']}, {'input': '73\\r\\n', 'output': ['13']}, {'input': '74\\r\\n', 'output': ['13']}, {'input': '75\\r\\n', 'output': ['13']}, {'input': '76\\r\\n', 'output': ['13']}, {'input': '77\\r\\n', 'output': ['13']}, {'input': '78\\r\\n', 'output': ['13']}, {'input': '79\\r\\n', 'output': ['13']}, {'input': '80\\r\\n', 'output': ['13']}, {'input': '81\\r\\n', 'output': ['13']}, {'input': '82\\r\\n', 'output': ['13']}, {'input': '83\\r\\n', 'output': ['13']}, {'input': '84\\r\\n', 'output': ['13']}, {'input': '85\\r\\n', 'output': ['13']}, {'input': '86\\r\\n', 'output': ['15']}, {'input': '87\\r\\n', 'output': ['15']}, {'input': '88\\r\\n', 'output': ['15']}, {'input': '89\\r\\n', 'output': ['15']}, {'input': '90\\r\\n', 'output': ['15']}, {'input': '91\\r\\n', 'output': ['15']}, {'input': '92\\r\\n', 'output': ['15']}, {'input': '93\\r\\n', 'output': ['15']}, {'input': '94\\r\\n', 'output': ['15']}, {'input': '95\\r\\n', 'output': ['15']}, {'input': '96\\r\\n', 'output': ['15']}, {'input': '97\\r\\n', 'output': ['15']}, {'input': '98\\r\\n', 'output': ['15']}, {'input': '99\\r\\n', 'output': ['15']}, {'input': '100\\r\\n', 'output': ['15']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, c = 0;\n  cin >> n;\n  for (int i = 1; i <= 100000; i++) {\n    if (i % 2 == 0) continue;\n    if (i % 4 == 0) {\n      c = n;\n      break;\n    }\n    if (n > i * i / 4 + i / 2 + 1) continue;\n    if (n <= i * i / 4 + i / 2) {\n      c = i;\n      break;\n    }\n  }\n  cout << c;\n}\n"}
{"src_uid": "01eccb722b09a0474903b7e5abc4c47a", "id": 50, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1700, "testcases": "[{'input': '4\\r\\n', 'output': ['3']}, {'input': '9\\r\\n', 'output': ['5']}, {'input': '10\\r\\n', 'output': ['5']}, {'input': '12\\r\\n', 'output': ['5']}, {'input': '1\\r\\n', 'output': ['1']}, {'input': '19\\r\\n', 'output': ['7']}, {'input': '3\\r\\n', 'output': ['5']}, {'input': '2\\r\\n', 'output': ['3']}, {'input': '5\\r\\n', 'output': ['3']}, {'input': '6\\r\\n', 'output': ['5']}, {'input': '7\\r\\n', 'output': ['5']}, {'input': '8\\r\\n', 'output': ['5']}, {'input': '11\\r\\n', 'output': ['5']}, {'input': '13\\r\\n', 'output': ['5']}, {'input': '14\\r\\n', 'output': ['7']}, {'input': '15\\r\\n', 'output': ['7']}, {'input': '16\\r\\n', 'output': ['7']}, {'input': '17\\r\\n', 'output': ['7']}, {'input': '18\\r\\n', 'output': ['7']}, {'input': '20\\r\\n', 'output': ['7']}, {'input': '21\\r\\n', 'output': ['7']}, {'input': '22\\r\\n', 'output': ['7']}, {'input': '23\\r\\n', 'output': ['7']}, {'input': '24\\r\\n', 'output': ['7']}, {'input': '25\\r\\n', 'output': ['7']}, {'input': '26\\r\\n', 'output': ['9']}, {'input': '27\\r\\n', 'output': ['9']}, {'input': '28\\r\\n', 'output': ['9']}, {'input': '29\\r\\n', 'output': ['9']}, {'input': '30\\r\\n', 'output': ['9']}, {'input': '31\\r\\n', 'output': ['9']}, {'input': '32\\r\\n', 'output': ['9']}, {'input': '33\\r\\n', 'output': ['9']}, {'input': '34\\r\\n', 'output': ['9']}, {'input': '35\\r\\n', 'output': ['9']}, {'input': '36\\r\\n', 'output': ['9']}, {'input': '37\\r\\n', 'output': ['9']}, {'input': '38\\r\\n', 'output': ['9']}, {'input': '39\\r\\n', 'output': ['9']}, {'input': '40\\r\\n', 'output': ['9']}, {'input': '41\\r\\n', 'output': ['9']}, {'input': '42\\r\\n', 'output': ['11']}, {'input': '43\\r\\n', 'output': ['11']}, {'input': '44\\r\\n', 'output': ['11']}, {'input': '45\\r\\n', 'output': ['11']}, {'input': '46\\r\\n', 'output': ['11']}, {'input': '47\\r\\n', 'output': ['11']}, {'input': '48\\r\\n', 'output': ['11']}, {'input': '49\\r\\n', 'output': ['11']}, {'input': '50\\r\\n', 'output': ['11']}, {'input': '51\\r\\n', 'output': ['11']}, {'input': '52\\r\\n', 'output': ['11']}, {'input': '53\\r\\n', 'output': ['11']}, {'input': '54\\r\\n', 'output': ['11']}, {'input': '55\\r\\n', 'output': ['11']}, {'input': '56\\r\\n', 'output': ['11']}, {'input': '57\\r\\n', 'output': ['11']}, {'input': '58\\r\\n', 'output': ['11']}, {'input': '59\\r\\n', 'output': ['11']}, {'input': '60\\r\\n', 'output': ['11']}, {'input': '61\\r\\n', 'output': ['11']}, {'input': '62\\r\\n', 'output': ['13']}, {'input': '63\\r\\n', 'output': ['13']}, {'input': '64\\r\\n', 'output': ['13']}, {'input': '65\\r\\n', 'output': ['13']}, {'input': '66\\r\\n', 'output': ['13']}, {'input': '67\\r\\n', 'output': ['13']}, {'input': '68\\r\\n', 'output': ['13']}, {'input': '69\\r\\n', 'output': ['13']}, {'input': '70\\r\\n', 'output': ['13']}, {'input': '71\\r\\n', 'output': ['13']}, {'input': '72\\r\\n', 'output': ['13']}, {'input': '73\\r\\n', 'output': ['13']}, {'input': '74\\r\\n', 'output': ['13']}, {'input': '75\\r\\n', 'output': ['13']}, {'input': '76\\r\\n', 'output': ['13']}, {'input': '77\\r\\n', 'output': ['13']}, {'input': '78\\r\\n', 'output': ['13']}, {'input': '79\\r\\n', 'output': ['13']}, {'input': '80\\r\\n', 'output': ['13']}, {'input': '81\\r\\n', 'output': ['13']}, {'input': '82\\r\\n', 'output': ['13']}, {'input': '83\\r\\n', 'output': ['13']}, {'input': '84\\r\\n', 'output': ['13']}, {'input': '85\\r\\n', 'output': ['13']}, {'input': '86\\r\\n', 'output': ['15']}, {'input': '87\\r\\n', 'output': ['15']}, {'input': '88\\r\\n', 'output': ['15']}, {'input': '89\\r\\n', 'output': ['15']}, {'input': '90\\r\\n', 'output': ['15']}, {'input': '91\\r\\n', 'output': ['15']}, {'input': '92\\r\\n', 'output': ['15']}, {'input': '93\\r\\n', 'output': ['15']}, {'input': '94\\r\\n', 'output': ['15']}, {'input': '95\\r\\n', 'output': ['15']}, {'input': '96\\r\\n', 'output': ['15']}, {'input': '97\\r\\n', 'output': ['15']}, {'input': '98\\r\\n', 'output': ['15']}, {'input': '99\\r\\n', 'output': ['15']}, {'input': '100\\r\\n', 'output': ['15']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a[110];\nint main() {\n  int x;\n  while (cin >> x) {\n    int s = (x + 1) / 2 + 1, n, i;\n    for (i = 1; a[s + i] < x; i++)\n      ;\n    n = s + i - 1;\n    if (n % 2 == 0) {\n      if (x % 4 == 0)\n        cout << n / 2 << endl;\n      else\n        cout << n << endl;\n    } else if (x % 4 == 2)\n      cout << n << endl;\n    else if (x % 4 == 3)\n      cout << n + 1 << endl;\n    else\n      cout << n - 1 << endl;\n  }\n}\n"}
{"src_uid": "01eccb722b09a0474903b7e5abc4c47a", "id": 50, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1700, "testcases": "[{'input': '4\\r\\n', 'output': ['3']}, {'input': '9\\r\\n', 'output': ['5']}, {'input': '10\\r\\n', 'output': ['5']}, {'input': '12\\r\\n', 'output': ['5']}, {'input': '1\\r\\n', 'output': ['1']}, {'input': '19\\r\\n', 'output': ['7']}, {'input': '3\\r\\n', 'output': ['5']}, {'input': '2\\r\\n', 'output': ['3']}, {'input': '5\\r\\n', 'output': ['3']}, {'input': '6\\r\\n', 'output': ['5']}, {'input': '7\\r\\n', 'output': ['5']}, {'input': '8\\r\\n', 'output': ['5']}, {'input': '11\\r\\n', 'output': ['5']}, {'input': '13\\r\\n', 'output': ['5']}, {'input': '14\\r\\n', 'output': ['7']}, {'input': '15\\r\\n', 'output': ['7']}, {'input': '16\\r\\n', 'output': ['7']}, {'input': '17\\r\\n', 'output': ['7']}, {'input': '18\\r\\n', 'output': ['7']}, {'input': '20\\r\\n', 'output': ['7']}, {'input': '21\\r\\n', 'output': ['7']}, {'input': '22\\r\\n', 'output': ['7']}, {'input': '23\\r\\n', 'output': ['7']}, {'input': '24\\r\\n', 'output': ['7']}, {'input': '25\\r\\n', 'output': ['7']}, {'input': '26\\r\\n', 'output': ['9']}, {'input': '27\\r\\n', 'output': ['9']}, {'input': '28\\r\\n', 'output': ['9']}, {'input': '29\\r\\n', 'output': ['9']}, {'input': '30\\r\\n', 'output': ['9']}, {'input': '31\\r\\n', 'output': ['9']}, {'input': '32\\r\\n', 'output': ['9']}, {'input': '33\\r\\n', 'output': ['9']}, {'input': '34\\r\\n', 'output': ['9']}, {'input': '35\\r\\n', 'output': ['9']}, {'input': '36\\r\\n', 'output': ['9']}, {'input': '37\\r\\n', 'output': ['9']}, {'input': '38\\r\\n', 'output': ['9']}, {'input': '39\\r\\n', 'output': ['9']}, {'input': '40\\r\\n', 'output': ['9']}, {'input': '41\\r\\n', 'output': ['9']}, {'input': '42\\r\\n', 'output': ['11']}, {'input': '43\\r\\n', 'output': ['11']}, {'input': '44\\r\\n', 'output': ['11']}, {'input': '45\\r\\n', 'output': ['11']}, {'input': '46\\r\\n', 'output': ['11']}, {'input': '47\\r\\n', 'output': ['11']}, {'input': '48\\r\\n', 'output': ['11']}, {'input': '49\\r\\n', 'output': ['11']}, {'input': '50\\r\\n', 'output': ['11']}, {'input': '51\\r\\n', 'output': ['11']}, {'input': '52\\r\\n', 'output': ['11']}, {'input': '53\\r\\n', 'output': ['11']}, {'input': '54\\r\\n', 'output': ['11']}, {'input': '55\\r\\n', 'output': ['11']}, {'input': '56\\r\\n', 'output': ['11']}, {'input': '57\\r\\n', 'output': ['11']}, {'input': '58\\r\\n', 'output': ['11']}, {'input': '59\\r\\n', 'output': ['11']}, {'input': '60\\r\\n', 'output': ['11']}, {'input': '61\\r\\n', 'output': ['11']}, {'input': '62\\r\\n', 'output': ['13']}, {'input': '63\\r\\n', 'output': ['13']}, {'input': '64\\r\\n', 'output': ['13']}, {'input': '65\\r\\n', 'output': ['13']}, {'input': '66\\r\\n', 'output': ['13']}, {'input': '67\\r\\n', 'output': ['13']}, {'input': '68\\r\\n', 'output': ['13']}, {'input': '69\\r\\n', 'output': ['13']}, {'input': '70\\r\\n', 'output': ['13']}, {'input': '71\\r\\n', 'output': ['13']}, {'input': '72\\r\\n', 'output': ['13']}, {'input': '73\\r\\n', 'output': ['13']}, {'input': '74\\r\\n', 'output': ['13']}, {'input': '75\\r\\n', 'output': ['13']}, {'input': '76\\r\\n', 'output': ['13']}, {'input': '77\\r\\n', 'output': ['13']}, {'input': '78\\r\\n', 'output': ['13']}, {'input': '79\\r\\n', 'output': ['13']}, {'input': '80\\r\\n', 'output': ['13']}, {'input': '81\\r\\n', 'output': ['13']}, {'input': '82\\r\\n', 'output': ['13']}, {'input': '83\\r\\n', 'output': ['13']}, {'input': '84\\r\\n', 'output': ['13']}, {'input': '85\\r\\n', 'output': ['13']}, {'input': '86\\r\\n', 'output': ['15']}, {'input': '87\\r\\n', 'output': ['15']}, {'input': '88\\r\\n', 'output': ['15']}, {'input': '89\\r\\n', 'output': ['15']}, {'input': '90\\r\\n', 'output': ['15']}, {'input': '91\\r\\n', 'output': ['15']}, {'input': '92\\r\\n', 'output': ['15']}, {'input': '93\\r\\n', 'output': ['15']}, {'input': '94\\r\\n', 'output': ['15']}, {'input': '95\\r\\n', 'output': ['15']}, {'input': '96\\r\\n', 'output': ['15']}, {'input': '97\\r\\n', 'output': ['15']}, {'input': '98\\r\\n', 'output': ['15']}, {'input': '99\\r\\n', 'output': ['15']}, {'input': '100\\r\\n', 'output': ['15']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int t;\n  cin >> t;\n  if (t == 1) {\n    cout << \"1\";\n    return 0;\n  }\n  for (int i = 1; i <= sqrt(t); i++) {\n    if (t % i == 0) {\n      if (t / i == 1) {\n        cout << t;\n        return 0;\n      }\n    }\n  }\n  int ans = 0;\n  for (int i = 1; i <= t / 4 + 1; i++) {\n    if (t % (i * 2) == 0) {\n      ans = max(ans, i * 2);\n    } else {\n      ans = max(ans, (i * 2) - 1);\n    }\n  }\n  cout << ans;\n}\n"}
{"src_uid": "01eccb722b09a0474903b7e5abc4c47a", "id": 50, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1700, "testcases": "[{'input': '4\\r\\n', 'output': ['3']}, {'input': '9\\r\\n', 'output': ['5']}, {'input': '10\\r\\n', 'output': ['5']}, {'input': '12\\r\\n', 'output': ['5']}, {'input': '1\\r\\n', 'output': ['1']}, {'input': '19\\r\\n', 'output': ['7']}, {'input': '3\\r\\n', 'output': ['5']}, {'input': '2\\r\\n', 'output': ['3']}, {'input': '5\\r\\n', 'output': ['3']}, {'input': '6\\r\\n', 'output': ['5']}, {'input': '7\\r\\n', 'output': ['5']}, {'input': '8\\r\\n', 'output': ['5']}, {'input': '11\\r\\n', 'output': ['5']}, {'input': '13\\r\\n', 'output': ['5']}, {'input': '14\\r\\n', 'output': ['7']}, {'input': '15\\r\\n', 'output': ['7']}, {'input': '16\\r\\n', 'output': ['7']}, {'input': '17\\r\\n', 'output': ['7']}, {'input': '18\\r\\n', 'output': ['7']}, {'input': '20\\r\\n', 'output': ['7']}, {'input': '21\\r\\n', 'output': ['7']}, {'input': '22\\r\\n', 'output': ['7']}, {'input': '23\\r\\n', 'output': ['7']}, {'input': '24\\r\\n', 'output': ['7']}, {'input': '25\\r\\n', 'output': ['7']}, {'input': '26\\r\\n', 'output': ['9']}, {'input': '27\\r\\n', 'output': ['9']}, {'input': '28\\r\\n', 'output': ['9']}, {'input': '29\\r\\n', 'output': ['9']}, {'input': '30\\r\\n', 'output': ['9']}, {'input': '31\\r\\n', 'output': ['9']}, {'input': '32\\r\\n', 'output': ['9']}, {'input': '33\\r\\n', 'output': ['9']}, {'input': '34\\r\\n', 'output': ['9']}, {'input': '35\\r\\n', 'output': ['9']}, {'input': '36\\r\\n', 'output': ['9']}, {'input': '37\\r\\n', 'output': ['9']}, {'input': '38\\r\\n', 'output': ['9']}, {'input': '39\\r\\n', 'output': ['9']}, {'input': '40\\r\\n', 'output': ['9']}, {'input': '41\\r\\n', 'output': ['9']}, {'input': '42\\r\\n', 'output': ['11']}, {'input': '43\\r\\n', 'output': ['11']}, {'input': '44\\r\\n', 'output': ['11']}, {'input': '45\\r\\n', 'output': ['11']}, {'input': '46\\r\\n', 'output': ['11']}, {'input': '47\\r\\n', 'output': ['11']}, {'input': '48\\r\\n', 'output': ['11']}, {'input': '49\\r\\n', 'output': ['11']}, {'input': '50\\r\\n', 'output': ['11']}, {'input': '51\\r\\n', 'output': ['11']}, {'input': '52\\r\\n', 'output': ['11']}, {'input': '53\\r\\n', 'output': ['11']}, {'input': '54\\r\\n', 'output': ['11']}, {'input': '55\\r\\n', 'output': ['11']}, {'input': '56\\r\\n', 'output': ['11']}, {'input': '57\\r\\n', 'output': ['11']}, {'input': '58\\r\\n', 'output': ['11']}, {'input': '59\\r\\n', 'output': ['11']}, {'input': '60\\r\\n', 'output': ['11']}, {'input': '61\\r\\n', 'output': ['11']}, {'input': '62\\r\\n', 'output': ['13']}, {'input': '63\\r\\n', 'output': ['13']}, {'input': '64\\r\\n', 'output': ['13']}, {'input': '65\\r\\n', 'output': ['13']}, {'input': '66\\r\\n', 'output': ['13']}, {'input': '67\\r\\n', 'output': ['13']}, {'input': '68\\r\\n', 'output': ['13']}, {'input': '69\\r\\n', 'output': ['13']}, {'input': '70\\r\\n', 'output': ['13']}, {'input': '71\\r\\n', 'output': ['13']}, {'input': '72\\r\\n', 'output': ['13']}, {'input': '73\\r\\n', 'output': ['13']}, {'input': '74\\r\\n', 'output': ['13']}, {'input': '75\\r\\n', 'output': ['13']}, {'input': '76\\r\\n', 'output': ['13']}, {'input': '77\\r\\n', 'output': ['13']}, {'input': '78\\r\\n', 'output': ['13']}, {'input': '79\\r\\n', 'output': ['13']}, {'input': '80\\r\\n', 'output': ['13']}, {'input': '81\\r\\n', 'output': ['13']}, {'input': '82\\r\\n', 'output': ['13']}, {'input': '83\\r\\n', 'output': ['13']}, {'input': '84\\r\\n', 'output': ['13']}, {'input': '85\\r\\n', 'output': ['13']}, {'input': '86\\r\\n', 'output': ['15']}, {'input': '87\\r\\n', 'output': ['15']}, {'input': '88\\r\\n', 'output': ['15']}, {'input': '89\\r\\n', 'output': ['15']}, {'input': '90\\r\\n', 'output': ['15']}, {'input': '91\\r\\n', 'output': ['15']}, {'input': '92\\r\\n', 'output': ['15']}, {'input': '93\\r\\n', 'output': ['15']}, {'input': '94\\r\\n', 'output': ['15']}, {'input': '95\\r\\n', 'output': ['15']}, {'input': '96\\r\\n', 'output': ['15']}, {'input': '97\\r\\n', 'output': ['15']}, {'input': '98\\r\\n', 'output': ['15']}, {'input': '99\\r\\n', 'output': ['15']}, {'input': '100\\r\\n', 'output': ['15']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 2000000000;\nint dp[2001][2001];\nint main() {\n  int x;\n  cin >> x;\n  for (int i = 1; i <= x + 1; ++i)\n    for (int j = 1; j <= x + 1; ++j) {\n      if (i == j)\n        dp[i][j] = 1;\n      else\n        dp[i][j] = inf;\n    }\n  for (int i = 1; i <= x + 1; ++i) {\n    for (int j = 1; j <= x + 1; ++j) {\n      if (i == j + 1 || i == j - 1) continue;\n      int temp1 = dp[i][j];\n      int temp2 = dp[i][j] + 2;\n      int temp3 = dp[j][i] + 2;\n      int temp4 = dp[j][i] + 2 * (j - i);\n      temp1 = min(temp1, temp2);\n      temp1 = min(temp1, temp3);\n      temp1 = min(temp1, temp4);\n      dp[i][j] = min(temp1, dp[i][j]);\n    }\n  }\n  int k = x + 1;\n  for (int i = 1; i <= x + 1; ++i) {\n    for (int j = 1; j <= x + 1; ++j)\n      if (dp[i][j] == x) k = min(k, i);\n  }\n  cout << k;\n  return 0;\n}\n"}
{"src_uid": "5c4bd12df3915186a7b506c2060db125", "id": 51, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '3\\r\\n', 'output': ['6']}, {'input': '4\\r\\n', 'output': ['11']}, {'input': '1\\r\\n', 'output': ['1']}, {'input': '2\\r\\n', 'output': ['3']}, {'input': '5\\r\\n', 'output': ['19']}, {'input': '6\\r\\n', 'output': ['32']}, {'input': '7\\r\\n', 'output': ['53']}, {'input': '8\\r\\n', 'output': ['87']}, {'input': '9\\r\\n', 'output': ['142']}, {'input': '10\\r\\n', 'output': ['231']}, {'input': '11\\r\\n', 'output': ['375']}, {'input': '12\\r\\n', 'output': ['608']}, {'input': '13\\r\\n', 'output': ['985']}, {'input': '14\\r\\n', 'output': ['1595']}, {'input': '15\\r\\n', 'output': ['2582']}, {'input': '16\\r\\n', 'output': ['4179']}, {'input': '17\\r\\n', 'output': ['6763']}, {'input': '18\\r\\n', 'output': ['10944']}, {'input': '19\\r\\n', 'output': ['17709']}, {'input': '20\\r\\n', 'output': ['28655']}, {'input': '21\\r\\n', 'output': ['46366']}, {'input': '22\\r\\n', 'output': ['75023']}, {'input': '30\\r\\n', 'output': ['3524576']}, {'input': '40\\r\\n', 'output': ['433494435']}, {'input': '35\\r\\n', 'output': ['39088167']}, {'input': '747\\r\\n', 'output': ['864986803']}, {'input': '811\\r\\n', 'output': ['121575679']}, {'input': '523\\r\\n', 'output': ['810594171']}, {'input': '939\\r\\n', 'output': ['834252191']}, {'input': '7218\\r\\n', 'output': ['124017976']}, {'input': '6578\\r\\n', 'output': ['105202924']}, {'input': '4994\\r\\n', 'output': ['909729063']}, {'input': '3410\\r\\n', 'output': ['995527079']}, {'input': '9122\\r\\n', 'output': ['424682518']}, {'input': '11500\\r\\n', 'output': ['123418864']}, {'input': '37212\\r\\n', 'output': ['991850249']}, {'input': '95628\\r\\n', 'output': ['265542306']}, {'input': '21341\\r\\n', 'output': ['913329411']}, {'input': '63405\\r\\n', 'output': ['206564501']}, {'input': '670293\\r\\n', 'output': ['922731630']}, {'input': '12357\\r\\n', 'output': ['808648710']}, {'input': '838069\\r\\n', 'output': ['536545985']}, {'input': '696485\\r\\n', 'output': ['467961960']}, {'input': '1000000\\r\\n', 'output': ['986892583']}, {'input': '999999\\r\\n', 'output': ['452491920']}, {'input': '999998\\r\\n', 'output': ['534400661']}, {'input': '999997\\r\\n', 'output': ['918091264']}, {'input': '999996\\r\\n', 'output': ['616309402']}, {'input': '999000\\r\\n', 'output': ['47031574']}, {'input': '100\\r\\n', 'output': ['252403354']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1000007, M = 1000000007;\nlong long fact[N + 1], inv[N + 1];\nint n, m;\nlong long pow(long long a, int b) {\n  long long ans = 1;\n  for (; b; b /= 2, a = a * a % M)\n    if (b & 1) ans = ans * a % M;\n  return ans;\n}\nlong long comb(int a, int b) {\n  return (fact[a] * inv[b] % M) * inv[a - b] % M;\n}\nint main() {\n  cin >> n;\n  fact[0] = 1;\n  for (int i = 1; i <= n; i++) {\n    fact[i] = fact[i - 1] * (i + 1) % M;\n  }\n  inv[n] = pow(fact[n], M - 2);\n  for (int i = n - 1; ~i; i--) inv[i] = inv[i + 1] * (i + 1) % M;\n  m = min(n, n / 2 + 1);\n  long long ans = 0;\n  for (int i = 1; i <= m; i++) {\n    ans += comb(n - i + 2, 2);\n  }\n  cout << ans % M << endl;\n  return 0;\n}\n"}
{"src_uid": "5c4bd12df3915186a7b506c2060db125", "id": 51, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '3\\r\\n', 'output': ['6']}, {'input': '4\\r\\n', 'output': ['11']}, {'input': '1\\r\\n', 'output': ['1']}, {'input': '2\\r\\n', 'output': ['3']}, {'input': '5\\r\\n', 'output': ['19']}, {'input': '6\\r\\n', 'output': ['32']}, {'input': '7\\r\\n', 'output': ['53']}, {'input': '8\\r\\n', 'output': ['87']}, {'input': '9\\r\\n', 'output': ['142']}, {'input': '10\\r\\n', 'output': ['231']}, {'input': '11\\r\\n', 'output': ['375']}, {'input': '12\\r\\n', 'output': ['608']}, {'input': '13\\r\\n', 'output': ['985']}, {'input': '14\\r\\n', 'output': ['1595']}, {'input': '15\\r\\n', 'output': ['2582']}, {'input': '16\\r\\n', 'output': ['4179']}, {'input': '17\\r\\n', 'output': ['6763']}, {'input': '18\\r\\n', 'output': ['10944']}, {'input': '19\\r\\n', 'output': ['17709']}, {'input': '20\\r\\n', 'output': ['28655']}, {'input': '21\\r\\n', 'output': ['46366']}, {'input': '22\\r\\n', 'output': ['75023']}, {'input': '30\\r\\n', 'output': ['3524576']}, {'input': '40\\r\\n', 'output': ['433494435']}, {'input': '35\\r\\n', 'output': ['39088167']}, {'input': '747\\r\\n', 'output': ['864986803']}, {'input': '811\\r\\n', 'output': ['121575679']}, {'input': '523\\r\\n', 'output': ['810594171']}, {'input': '939\\r\\n', 'output': ['834252191']}, {'input': '7218\\r\\n', 'output': ['124017976']}, {'input': '6578\\r\\n', 'output': ['105202924']}, {'input': '4994\\r\\n', 'output': ['909729063']}, {'input': '3410\\r\\n', 'output': ['995527079']}, {'input': '9122\\r\\n', 'output': ['424682518']}, {'input': '11500\\r\\n', 'output': ['123418864']}, {'input': '37212\\r\\n', 'output': ['991850249']}, {'input': '95628\\r\\n', 'output': ['265542306']}, {'input': '21341\\r\\n', 'output': ['913329411']}, {'input': '63405\\r\\n', 'output': ['206564501']}, {'input': '670293\\r\\n', 'output': ['922731630']}, {'input': '12357\\r\\n', 'output': ['808648710']}, {'input': '838069\\r\\n', 'output': ['536545985']}, {'input': '696485\\r\\n', 'output': ['467961960']}, {'input': '1000000\\r\\n', 'output': ['986892583']}, {'input': '999999\\r\\n', 'output': ['452491920']}, {'input': '999998\\r\\n', 'output': ['534400661']}, {'input': '999997\\r\\n', 'output': ['918091264']}, {'input': '999996\\r\\n', 'output': ['616309402']}, {'input': '999000\\r\\n', 'output': ['47031574']}, {'input': '100\\r\\n', 'output': ['252403354']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 1e9 + 7;\nconst int N = 1000005;\nint n, dp[N];\nint main() {\n  scanf(\"%d\", &n);\n  dp[1] = 1;\n  dp[2] = 2;\n  dp[3] = 6;\n  dp[4] = 11;\n  dp[5] = 20;\n  dp[6] = 30;\n  for (int i = 7; i <= n; i++) {\n    dp[i] = (dp[i - 1] + dp[i - 2]) % MOD;\n  }\n  printf(\"%d\\n\", dp[n]);\n}\n"}
{"src_uid": "5c4bd12df3915186a7b506c2060db125", "id": 51, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '3\\r\\n', 'output': ['6']}, {'input': '4\\r\\n', 'output': ['11']}, {'input': '1\\r\\n', 'output': ['1']}, {'input': '2\\r\\n', 'output': ['3']}, {'input': '5\\r\\n', 'output': ['19']}, {'input': '6\\r\\n', 'output': ['32']}, {'input': '7\\r\\n', 'output': ['53']}, {'input': '8\\r\\n', 'output': ['87']}, {'input': '9\\r\\n', 'output': ['142']}, {'input': '10\\r\\n', 'output': ['231']}, {'input': '11\\r\\n', 'output': ['375']}, {'input': '12\\r\\n', 'output': ['608']}, {'input': '13\\r\\n', 'output': ['985']}, {'input': '14\\r\\n', 'output': ['1595']}, {'input': '15\\r\\n', 'output': ['2582']}, {'input': '16\\r\\n', 'output': ['4179']}, {'input': '17\\r\\n', 'output': ['6763']}, {'input': '18\\r\\n', 'output': ['10944']}, {'input': '19\\r\\n', 'output': ['17709']}, {'input': '20\\r\\n', 'output': ['28655']}, {'input': '21\\r\\n', 'output': ['46366']}, {'input': '22\\r\\n', 'output': ['75023']}, {'input': '30\\r\\n', 'output': ['3524576']}, {'input': '40\\r\\n', 'output': ['433494435']}, {'input': '35\\r\\n', 'output': ['39088167']}, {'input': '747\\r\\n', 'output': ['864986803']}, {'input': '811\\r\\n', 'output': ['121575679']}, {'input': '523\\r\\n', 'output': ['810594171']}, {'input': '939\\r\\n', 'output': ['834252191']}, {'input': '7218\\r\\n', 'output': ['124017976']}, {'input': '6578\\r\\n', 'output': ['105202924']}, {'input': '4994\\r\\n', 'output': ['909729063']}, {'input': '3410\\r\\n', 'output': ['995527079']}, {'input': '9122\\r\\n', 'output': ['424682518']}, {'input': '11500\\r\\n', 'output': ['123418864']}, {'input': '37212\\r\\n', 'output': ['991850249']}, {'input': '95628\\r\\n', 'output': ['265542306']}, {'input': '21341\\r\\n', 'output': ['913329411']}, {'input': '63405\\r\\n', 'output': ['206564501']}, {'input': '670293\\r\\n', 'output': ['922731630']}, {'input': '12357\\r\\n', 'output': ['808648710']}, {'input': '838069\\r\\n', 'output': ['536545985']}, {'input': '696485\\r\\n', 'output': ['467961960']}, {'input': '1000000\\r\\n', 'output': ['986892583']}, {'input': '999999\\r\\n', 'output': ['452491920']}, {'input': '999998\\r\\n', 'output': ['534400661']}, {'input': '999997\\r\\n', 'output': ['918091264']}, {'input': '999996\\r\\n', 'output': ['616309402']}, {'input': '999000\\r\\n', 'output': ['47031574']}, {'input': '100\\r\\n', 'output': ['252403354']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int mod = 1000000007;\nint n, dp[2][1000010];\nint main() {\n  scanf(\"%d\", &n);\n  dp[0][0] = 1;\n  for (int i = 0; i <= n; i++) {\n    dp[i & 1][i] = dp[i & 1][i - 1] + 1;\n    for (int j = 0; j < min(i, 3000); j++) {\n      dp[i & 1][i] =\n          (dp[i & 1][i] + dp[i & 1][i - 1 - j] * dp[!(i & 1)][j]) % mod;\n    }\n  }\n  printf(\"%d\\n\", dp[n & 1][n]);\n  return 0;\n}\n"}
{"src_uid": "5c4bd12df3915186a7b506c2060db125", "id": 51, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '3\\r\\n', 'output': ['6']}, {'input': '4\\r\\n', 'output': ['11']}, {'input': '1\\r\\n', 'output': ['1']}, {'input': '2\\r\\n', 'output': ['3']}, {'input': '5\\r\\n', 'output': ['19']}, {'input': '6\\r\\n', 'output': ['32']}, {'input': '7\\r\\n', 'output': ['53']}, {'input': '8\\r\\n', 'output': ['87']}, {'input': '9\\r\\n', 'output': ['142']}, {'input': '10\\r\\n', 'output': ['231']}, {'input': '11\\r\\n', 'output': ['375']}, {'input': '12\\r\\n', 'output': ['608']}, {'input': '13\\r\\n', 'output': ['985']}, {'input': '14\\r\\n', 'output': ['1595']}, {'input': '15\\r\\n', 'output': ['2582']}, {'input': '16\\r\\n', 'output': ['4179']}, {'input': '17\\r\\n', 'output': ['6763']}, {'input': '18\\r\\n', 'output': ['10944']}, {'input': '19\\r\\n', 'output': ['17709']}, {'input': '20\\r\\n', 'output': ['28655']}, {'input': '21\\r\\n', 'output': ['46366']}, {'input': '22\\r\\n', 'output': ['75023']}, {'input': '30\\r\\n', 'output': ['3524576']}, {'input': '40\\r\\n', 'output': ['433494435']}, {'input': '35\\r\\n', 'output': ['39088167']}, {'input': '747\\r\\n', 'output': ['864986803']}, {'input': '811\\r\\n', 'output': ['121575679']}, {'input': '523\\r\\n', 'output': ['810594171']}, {'input': '939\\r\\n', 'output': ['834252191']}, {'input': '7218\\r\\n', 'output': ['124017976']}, {'input': '6578\\r\\n', 'output': ['105202924']}, {'input': '4994\\r\\n', 'output': ['909729063']}, {'input': '3410\\r\\n', 'output': ['995527079']}, {'input': '9122\\r\\n', 'output': ['424682518']}, {'input': '11500\\r\\n', 'output': ['123418864']}, {'input': '37212\\r\\n', 'output': ['991850249']}, {'input': '95628\\r\\n', 'output': ['265542306']}, {'input': '21341\\r\\n', 'output': ['913329411']}, {'input': '63405\\r\\n', 'output': ['206564501']}, {'input': '670293\\r\\n', 'output': ['922731630']}, {'input': '12357\\r\\n', 'output': ['808648710']}, {'input': '838069\\r\\n', 'output': ['536545985']}, {'input': '696485\\r\\n', 'output': ['467961960']}, {'input': '1000000\\r\\n', 'output': ['986892583']}, {'input': '999999\\r\\n', 'output': ['452491920']}, {'input': '999998\\r\\n', 'output': ['534400661']}, {'input': '999997\\r\\n', 'output': ['918091264']}, {'input': '999996\\r\\n', 'output': ['616309402']}, {'input': '999000\\r\\n', 'output': ['47031574']}, {'input': '100\\r\\n', 'output': ['252403354']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long n, ans = 1;\n  cin >> n;\n  for (long long i = 1; i <= n; i++) {\n    ans = ((ans << 1) % 1000000007) + 1;\n  }\n  cout << ans << \"\\n\";\n  return 0;\n}\n"}
{"src_uid": "5c4bd12df3915186a7b506c2060db125", "id": 51, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '3\\r\\n', 'output': ['6']}, {'input': '4\\r\\n', 'output': ['11']}, {'input': '1\\r\\n', 'output': ['1']}, {'input': '2\\r\\n', 'output': ['3']}, {'input': '5\\r\\n', 'output': ['19']}, {'input': '6\\r\\n', 'output': ['32']}, {'input': '7\\r\\n', 'output': ['53']}, {'input': '8\\r\\n', 'output': ['87']}, {'input': '9\\r\\n', 'output': ['142']}, {'input': '10\\r\\n', 'output': ['231']}, {'input': '11\\r\\n', 'output': ['375']}, {'input': '12\\r\\n', 'output': ['608']}, {'input': '13\\r\\n', 'output': ['985']}, {'input': '14\\r\\n', 'output': ['1595']}, {'input': '15\\r\\n', 'output': ['2582']}, {'input': '16\\r\\n', 'output': ['4179']}, {'input': '17\\r\\n', 'output': ['6763']}, {'input': '18\\r\\n', 'output': ['10944']}, {'input': '19\\r\\n', 'output': ['17709']}, {'input': '20\\r\\n', 'output': ['28655']}, {'input': '21\\r\\n', 'output': ['46366']}, {'input': '22\\r\\n', 'output': ['75023']}, {'input': '30\\r\\n', 'output': ['3524576']}, {'input': '40\\r\\n', 'output': ['433494435']}, {'input': '35\\r\\n', 'output': ['39088167']}, {'input': '747\\r\\n', 'output': ['864986803']}, {'input': '811\\r\\n', 'output': ['121575679']}, {'input': '523\\r\\n', 'output': ['810594171']}, {'input': '939\\r\\n', 'output': ['834252191']}, {'input': '7218\\r\\n', 'output': ['124017976']}, {'input': '6578\\r\\n', 'output': ['105202924']}, {'input': '4994\\r\\n', 'output': ['909729063']}, {'input': '3410\\r\\n', 'output': ['995527079']}, {'input': '9122\\r\\n', 'output': ['424682518']}, {'input': '11500\\r\\n', 'output': ['123418864']}, {'input': '37212\\r\\n', 'output': ['991850249']}, {'input': '95628\\r\\n', 'output': ['265542306']}, {'input': '21341\\r\\n', 'output': ['913329411']}, {'input': '63405\\r\\n', 'output': ['206564501']}, {'input': '670293\\r\\n', 'output': ['922731630']}, {'input': '12357\\r\\n', 'output': ['808648710']}, {'input': '838069\\r\\n', 'output': ['536545985']}, {'input': '696485\\r\\n', 'output': ['467961960']}, {'input': '1000000\\r\\n', 'output': ['986892583']}, {'input': '999999\\r\\n', 'output': ['452491920']}, {'input': '999998\\r\\n', 'output': ['534400661']}, {'input': '999997\\r\\n', 'output': ['918091264']}, {'input': '999996\\r\\n', 'output': ['616309402']}, {'input': '999000\\r\\n', 'output': ['47031574']}, {'input': '100\\r\\n', 'output': ['252403354']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long mod = 1e9 + 7;\nlong long dp[1000001][2];\nint main() {\n  long long n;\n  cin >> n;\n  dp[1][0] = 1;\n  dp[1][1] = 1;\n  for (long long i = 2; i <= n; i++) {\n    dp[i][0] = (dp[i - 1][0] + dp[i - 1][1]) % mod;\n    dp[i][1] = (dp[i - 1][0] + dp[i - 1][1]) % mod;\n  }\n  long long ans = 0;\n  for (long long i = 1; i <= n; i++) {\n    ans = (ans + dp[i][0] + dp[i][1]) % mod;\n  }\n  cout << ans << endl;\n}\n"}
{"src_uid": "5ce8de80c6953cd1e6e6eefd9ad35f7e", "id": 52, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1700, "testcases": "[{'input': '([])\\r\\n', 'output': ['1\\r\\n([])\\r\\n']}, {'input': '(((\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '(][)\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '(()[))()[]\\r\\n', 'output': ['1\\r\\n()[]\\r\\n']}, {'input': '(][](](][[(][\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((])(]]))(](((()[[()[[[)([]()])[(]][)]])[]]()[()[[[[(([[)\\r\\n', 'output': ['1\\r\\n[]()\\r\\n']}, {'input': '](]][)]()][[])[()(][)]))[)[]()()])[([((([[(([)][(])](][])([([)())))([(([][))[)()]][[])()[)](][[((]](](])]][(][[()(]][[)][])(][]))[])[)[(])[)()()[[))((()]]([([[(]))][(]())))))[[]]][][))[)])])()((((([[](([[()(([[()](([[([[(](]([)]())))[)]([]\\r\\n', 'output': ['2\\r\\n[[]]\\r\\n']}, {'input': '[(()[])]()[()[]]\\r\\n', 'output': ['4\\r\\n[(()[])]()[()[]]\\r\\n']}, {'input': '([])()[()]()()[(([])[]()[()([])()[][]()])]\\r\\n', 'output': ['9\\r\\n([])()[()]()()[(([])[]()[()([])()[][]()])]\\r\\n']}, {'input': '[()][([[]])][[[]()]][()[]]()()([[][]][[]][](()))[[[(())]]][]()(([([])(([[[]]()])(()))]((())))([()]([()[[[]([][[[[][(())([[]()])]]][[(())]([])]()][[](())]()[])]()[][]]([[]])[]])[(()[()((()[][()]))][])[]()()([]())](()[][][])()()[]()))[]()[]\\r\\n', 'output': ['61\\r\\n[()][([[]])][[[]()]][()[]]()()([[][]][[]][](()))[[[(())]]][]()(([([])(([[[]]()])(()))]((())))([()]([()[[[]([][[[[][(())([[]()])]]][[(())]([])]()][[](())]()[])]()[][]]([[]])[]])[(()[()((()[][()]))][])[]()()([]())](()[][][])()()[]()))[]()[]\\r\\n']}, {'input': '(][(](][[(][(\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': ')[)][)))((([[)]((]][)[)((]([)[)(([)[)]][([\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '][([))][[))[[((]][([(([[)]]])([)][([([[[[([))]])][[[[[([)]]([[(((]([(](([([[)[(]])(][(((][)[[)][)(][[)[[)])))[)]))]])[([[))(([(]][))([(]]][(])]))))))[[[[[([[([)[[[)[(([)[[(][((([(([([(([))[[[[[[([(](])(][[)[)(](]])]]]((([))(])[[)[))[([[[[(]][)[([(]](([)([[)[[([))[)\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '()]])()()]\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '[([[)[(()[])[()][]()[[[)()[][[[()[]]]()]][\\r\\n', 'output': ['5\\r\\n()[][[[()[]]]()]\\r\\n']}, {'input': '[()][][][][]()[)])))[(]()[]([)(])[)(])()[))][)]()[][][]][][)(((([))))[)[))]]([[[)[())))[(][(()[()[(]())]])([[)[)[[())[()[]()[[[[])][))](()()())()](((((([(()]][[)([)([]]))(()[((]]())[]])][)()(][]][][(([])]]((]])([[][)])(][)][([[[[(][()(][[(\\r\\n', 'output': ['5\\r\\n[()][][][][]()\\r\\n']}, {'input': '(([])\\r\\n', 'output': ['1\\r\\n([])\\r\\n']}, {'input': '()()([]]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '([[[]]))\\r\\n', 'output': ['2\\r\\n[[]]\\r\\n']}, {'input': '[[]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((((([]((((((((((\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '(((((([](((((((\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '[[])\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((()))([]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '([]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '[]())])([)][[[]])))][])([]([]()]]))))())[[([))()(])))]][)[][[])(][()()]]](]][])[[))((]][)[)(]))([])((]([)([])]]]]]]][)[[[]]([[[]]][(][][])()[[([](])(]]((]([[)])]])([)(][([)(([))(]([)[[](([(](][[)()(][\\r\\n', 'output': ['3\\r\\n[[[]]]\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 10;\nint l, r;\nchar s[N];\nint main() {\n  while (~scanf(\"%s\", s + 1)) {\n    l = 0;\n    r = strlen(s + 1);\n    while (l < r) {\n      int flag = 1, b[100], j = 0, t = l;\n      for (int i = l; i < r && flag; i++) {\n        if (s[i] == '(' || s[i] == '[') b[j++] = i;\n        if (s[i] == ')' || s[i] == ']') {\n          if (s[i] == ']') {\n            j--;\n            if (j < 0) {\n              flag = 0;\n              break;\n            }\n          }\n          if (s[i] == ')') {\n            if (j == 0 || b[j - 1] < t) {\n              flag = 0;\n              break;\n            }\n            t = b[j - 1];\n          }\n        }\n      }\n      if (flag) {\n        l = r;\n        r = i;\n      }\n    }\n    int num = 0;\n    int pos = 0;\n    for (int i = l; i < r; i++) {\n      if (s[i] == '[') num++;\n      if (s[i] == '(') pos = i;\n    }\n    printf(\"%d\\n\", num);\n    for (int i = pos; i < r; i++) putchar(s[i]);\n    putchar('\\n');\n  }\n  return 0;\n}\n"}
{"src_uid": "5ce8de80c6953cd1e6e6eefd9ad35f7e", "id": 52, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1700, "testcases": "[{'input': '([])\\r\\n', 'output': ['1\\r\\n([])\\r\\n']}, {'input': '(((\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '(][)\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '(()[))()[]\\r\\n', 'output': ['1\\r\\n()[]\\r\\n']}, {'input': '(][](](][[(][\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((])(]]))(](((()[[()[[[)([]()])[(]][)]])[]]()[()[[[[(([[)\\r\\n', 'output': ['1\\r\\n[]()\\r\\n']}, {'input': '](]][)]()][[])[()(][)]))[)[]()()])[([((([[(([)][(])](][])([([)())))([(([][))[)()]][[])()[)](][[((]](](])]][(][[()(]][[)][])(][]))[])[)[(])[)()()[[))((()]]([([[(]))][(]())))))[[]]][][))[)])])()((((([[](([[()(([[()](([[([[(](]([)]())))[)]([]\\r\\n', 'output': ['2\\r\\n[[]]\\r\\n']}, {'input': '[(()[])]()[()[]]\\r\\n', 'output': ['4\\r\\n[(()[])]()[()[]]\\r\\n']}, {'input': '([])()[()]()()[(([])[]()[()([])()[][]()])]\\r\\n', 'output': ['9\\r\\n([])()[()]()()[(([])[]()[()([])()[][]()])]\\r\\n']}, {'input': '[()][([[]])][[[]()]][()[]]()()([[][]][[]][](()))[[[(())]]][]()(([([])(([[[]]()])(()))]((())))([()]([()[[[]([][[[[][(())([[]()])]]][[(())]([])]()][[](())]()[])]()[][]]([[]])[]])[(()[()((()[][()]))][])[]()()([]())](()[][][])()()[]()))[]()[]\\r\\n', 'output': ['61\\r\\n[()][([[]])][[[]()]][()[]]()()([[][]][[]][](()))[[[(())]]][]()(([([])(([[[]]()])(()))]((())))([()]([()[[[]([][[[[][(())([[]()])]]][[(())]([])]()][[](())]()[])]()[][]]([[]])[]])[(()[()((()[][()]))][])[]()()([]())](()[][][])()()[]()))[]()[]\\r\\n']}, {'input': '(][(](][[(][(\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': ')[)][)))((([[)]((]][)[)((]([)[)(([)[)]][([\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '][([))][[))[[((]][([(([[)]]])([)][([([[[[([))]])][[[[[([)]]([[(((]([(](([([[)[(]])(][(((][)[[)][)(][[)[[)])))[)]))]])[([[))(([(]][))([(]]][(])]))))))[[[[[([[([)[[[)[(([)[[(][((([(([([(([))[[[[[[([(](])(][[)[)(](]])]]]((([))(])[[)[))[([[[[(]][)[([(]](([)([[)[[([))[)\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '()]])()()]\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '[([[)[(()[])[()][]()[[[)()[][[[()[]]]()]][\\r\\n', 'output': ['5\\r\\n()[][[[()[]]]()]\\r\\n']}, {'input': '[()][][][][]()[)])))[(]()[]([)(])[)(])()[))][)]()[][][]][][)(((([))))[)[))]]([[[)[())))[(][(()[()[(]())]])([[)[)[[())[()[]()[[[[])][))](()()())()](((((([(()]][[)([)([]]))(()[((]]())[]])][)()(][]][][(([])]]((]])([[][)])(][)][([[[[(][()(][[(\\r\\n', 'output': ['5\\r\\n[()][][][][]()\\r\\n']}, {'input': '(([])\\r\\n', 'output': ['1\\r\\n([])\\r\\n']}, {'input': '()()([]]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '([[[]]))\\r\\n', 'output': ['2\\r\\n[[]]\\r\\n']}, {'input': '[[]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((((([]((((((((((\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '(((((([](((((((\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '[[])\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((()))([]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '([]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '[]())])([)][[[]])))][])([]([]()]]))))())[[([))()(])))]][)[][[])(][()()]]](]][])[[))((]][)[)(]))([])((]([)([])]]]]]]][)[[[]]([[[]]][(][][])()[[([](])(]]((]([[)])]])([)(][([)(([))(]([)[[](([(](][[)()(][\\r\\n', 'output': ['3\\r\\n[[[]]]\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nstring s;\nint i, n, x, f[100010], g[100010], ans[100010], p, ansn = 0, ansp = 0;\nint main() {\n  cin >> s;\n  n = s.size();\n  x = 0;\n  for (i = 1; i <= n; i++) {\n    if (s[i - 1] == '(' || s[i - 1] == '[' || s[i - 1] == '{') {\n      x++;\n    } else {\n      x--;\n      if (x < 0) x = 0;\n    }\n    f[i] = x;\n  }\n  for (i = 1; i <= n; i++) {\n    x = 0;\n    if (s[i - 1] == ')' || s[i - 1] == ']' || s[i - 1] == '}') {\n      x++;\n    } else {\n      x--;\n      if (x < 0) x = 0;\n    }\n    g[i] = x;\n  }\n  for (i = 1; i <= n; i++) {\n    if (f[i] == g[i]) {\n      p = 0;\n      for (int j = i; j <= n; j++) {\n        if (s[j - 1] == '[' || s[j - 1] == ']') {\n          p++;\n        } else if (s[j - 1] == '(' || s[j - 1] == ')') {\n          p--;\n          if (p < 0) p = 0;\n        }\n        if (p == f[j]) {\n          if (ansn < f[j]) {\n            ansn = f[j];\n            ansp = j;\n          }\n        }\n      }\n    }\n  }\n  cout << ansn << endl;\n  for (int j = ansp; j >= 1; j--) {\n    if (s[j - 1] == '[' || s[j - 1] == ']') {\n      break;\n    }\n    ans[ansn] = s[j - 1];\n    ansn--;\n  }\n  for (int j = ansp; j <= n; j++) {\n    if (s[j - 1] == '[' || s[j - 1] == ']') {\n      break;\n    }\n    ans[ansn] = s[j - 1];\n    ansn--;\n  }\n  for (int k = ansn + 1; k >= 1; k--) {\n    cout << ans[k];\n  }\n  return 0;\n}\n"}
{"src_uid": "5ce8de80c6953cd1e6e6eefd9ad35f7e", "id": 52, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1700, "testcases": "[{'input': '([])\\r\\n', 'output': ['1\\r\\n([])\\r\\n']}, {'input': '(((\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '(][)\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '(()[))()[]\\r\\n', 'output': ['1\\r\\n()[]\\r\\n']}, {'input': '(][](](][[(][\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((])(]]))(](((()[[()[[[)([]()])[(]][)]])[]]()[()[[[[(([[)\\r\\n', 'output': ['1\\r\\n[]()\\r\\n']}, {'input': '](]][)]()][[])[()(][)]))[)[]()()])[([((([[(([)][(])](][])([([)())))([(([][))[)()]][[])()[)](][[((]](](])]][(][[()(]][[)][])(][]))[])[)[(])[)()()[[))((()]]([([[(]))][(]())))))[[]]][][))[)])])()((((([[](([[()(([[()](([[([[(](]([)]())))[)]([]\\r\\n', 'output': ['2\\r\\n[[]]\\r\\n']}, {'input': '[(()[])]()[()[]]\\r\\n', 'output': ['4\\r\\n[(()[])]()[()[]]\\r\\n']}, {'input': '([])()[()]()()[(([])[]()[()([])()[][]()])]\\r\\n', 'output': ['9\\r\\n([])()[()]()()[(([])[]()[()([])()[][]()])]\\r\\n']}, {'input': '[()][([[]])][[[]()]][()[]]()()([[][]][[]][](()))[[[(())]]][]()(([([])(([[[]]()])(()))]((())))([()]([()[[[]([][[[[][(())([[]()])]]][[(())]([])]()][[](())]()[])]()[][]]([[]])[]])[(()[()((()[][()]))][])[]()()([]())](()[][][])()()[]()))[]()[]\\r\\n', 'output': ['61\\r\\n[()][([[]])][[[]()]][()[]]()()([[][]][[]][](()))[[[(())]]][]()(([([])(([[[]]()])(()))]((())))([()]([()[[[]([][[[[][(())([[]()])]]][[(())]([])]()][[](())]()[])]()[][]]([[]])[]])[(()[()((()[][()]))][])[]()()([]())](()[][][])()()[]()))[]()[]\\r\\n']}, {'input': '(][(](][[(][(\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': ')[)][)))((([[)]((]][)[)((]([)[)(([)[)]][([\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '][([))][[))[[((]][([(([[)]]])([)][([([[[[([))]])][[[[[([)]]([[(((]([(](([([[)[(]])(][(((][)[[)][)(][[)[[)])))[)]))]])[([[))(([(]][))([(]]][(])]))))))[[[[[([[([)[[[)[(([)[[(][((([(([([(([))[[[[[[([(](])(][[)[)(](]])]]]((([))(])[[)[))[([[[[(]][)[([(]](([)([[)[[([))[)\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '()]])()()]\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '[([[)[(()[])[()][]()[[[)()[][[[()[]]]()]][\\r\\n', 'output': ['5\\r\\n()[][[[()[]]]()]\\r\\n']}, {'input': '[()][][][][]()[)])))[(]()[]([)(])[)(])()[))][)]()[][][]][][)(((([))))[)[))]]([[[)[())))[(][(()[()[(]())]])([[)[)[[())[()[]()[[[[])][))](()()())()](((((([(()]][[)([)([]]))(()[((]]())[]])][)()(][]][][(([])]]((]])([[][)])(][)][([[[[(][()(][[(\\r\\n', 'output': ['5\\r\\n[()][][][][]()\\r\\n']}, {'input': '(([])\\r\\n', 'output': ['1\\r\\n([])\\r\\n']}, {'input': '()()([]]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '([[[]]))\\r\\n', 'output': ['2\\r\\n[[]]\\r\\n']}, {'input': '[[]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((((([]((((((((((\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '(((((([](((((((\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '[[])\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((()))([]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '([]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '[]())])([)][[[]])))][])([]([]()]]))))())[[([))()(])))]][)[][[])(][()()]]](]][])[[))((]][)[)(]))([])((]([)([])]]]]]]][)[[[]]([[[]]][(][][])()[[([](])(]]((]([[)])]])([)(][([)(([))(]([)[[](([(](][[)()(][\\r\\n', 'output': ['3\\r\\n[[[]]]\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, c[100100];\nint i, l, r, j, k;\nstring s, t;\nint main() {\n  int L = -1, R = -1, MaxL = -1, MaxR = -1, N = 0;\n  cin >> s;\n  n = s.length();\n  t = s;\n  for (int i = n - 1; i > -1; i--) {\n    if (s[i] == '[' && t[i + 1] == '[') {\n      t[i] = ')';\n      N++;\n    }\n    if (s[i] == ']' && t[i - 1] == ')') {\n      t[i] = '[';\n      N++;\n    }\n  }\n  L = 0;\n  R = 0;\n  for (i = 0; i < n; i++) {\n    int lt = 0, rt = 0;\n    for (j = i; j < n; j++) {\n      if (t[j] == '[') lt++;\n      if (t[j] == ')') rt++;\n      if (lt == rt) {\n        if (MaxL == -1 || l < i - j + n - 1) {\n          MaxL = i - j + n - 1;\n          MaxR = j;\n        }\n        if (MaxL == i - j + n - 1 && L == -1 || l > i - j + n - 1) {\n          L = i - j + n - 1;\n          R = j;\n        }\n      }\n    }\n  }\n  cout << MaxL << endl;\n  for (i = 0; i < MaxL + n; i++)\n    if (i < MaxL)\n      cout << t[i];\n    else\n      cout << s[n - 1 - i + MaxR];\n  return 0;\n}\n"}
{"src_uid": "5ce8de80c6953cd1e6e6eefd9ad35f7e", "id": 52, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1700, "testcases": "[{'input': '([])\\r\\n', 'output': ['1\\r\\n([])\\r\\n']}, {'input': '(((\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '(][)\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '(()[))()[]\\r\\n', 'output': ['1\\r\\n()[]\\r\\n']}, {'input': '(][](](][[(][\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((])(]]))(](((()[[()[[[)([]()])[(]][)]])[]]()[()[[[[(([[)\\r\\n', 'output': ['1\\r\\n[]()\\r\\n']}, {'input': '](]][)]()][[])[()(][)]))[)[]()()])[([((([[(([)][(])](][])([([)())))([(([][))[)()]][[])()[)](][[((]](](])]][(][[()(]][[)][])(][]))[])[)[(])[)()()[[))((()]]([([[(]))][(]())))))[[]]][][))[)])])()((((([[](([[()(([[()](([[([[(](]([)]())))[)]([]\\r\\n', 'output': ['2\\r\\n[[]]\\r\\n']}, {'input': '[(()[])]()[()[]]\\r\\n', 'output': ['4\\r\\n[(()[])]()[()[]]\\r\\n']}, {'input': '([])()[()]()()[(([])[]()[()([])()[][]()])]\\r\\n', 'output': ['9\\r\\n([])()[()]()()[(([])[]()[()([])()[][]()])]\\r\\n']}, {'input': '[()][([[]])][[[]()]][()[]]()()([[][]][[]][](()))[[[(())]]][]()(([([])(([[[]]()])(()))]((())))([()]([()[[[]([][[[[][(())([[]()])]]][[(())]([])]()][[](())]()[])]()[][]]([[]])[]])[(()[()((()[][()]))][])[]()()([]())](()[][][])()()[]()))[]()[]\\r\\n', 'output': ['61\\r\\n[()][([[]])][[[]()]][()[]]()()([[][]][[]][](()))[[[(())]]][]()(([([])(([[[]]()])(()))]((())))([()]([()[[[]([][[[[][(())([[]()])]]][[(())]([])]()][[](())]()[])]()[][]]([[]])[]])[(()[()((()[][()]))][])[]()()([]())](()[][][])()()[]()))[]()[]\\r\\n']}, {'input': '(][(](][[(][(\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': ')[)][)))((([[)]((]][)[)((]([)[)(([)[)]][([\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '][([))][[))[[((]][([(([[)]]])([)][([([[[[([))]])][[[[[([)]]([[(((]([(](([([[)[(]])(][(((][)[[)][)(][[)[[)])))[)]))]])[([[))(([(]][))([(]]][(])]))))))[[[[[([[([)[[[)[(([)[[(][((([(([([(([))[[[[[[([(](])(][[)[)(](]])]]]((([))(])[[)[))[([[[[(]][)[([(]](([)([[)[[([))[)\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '()]])()()]\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '[([[)[(()[])[()][]()[[[)()[][[[()[]]]()]][\\r\\n', 'output': ['5\\r\\n()[][[[()[]]]()]\\r\\n']}, {'input': '[()][][][][]()[)])))[(]()[]([)(])[)(])()[))][)]()[][][]][][)(((([))))[)[))]]([[[)[())))[(][(()[()[(]())]])([[)[)[[())[()[]()[[[[])][))](()()())()](((((([(()]][[)([)([]]))(()[((]]())[]])][)()(][]][][(([])]]((]])([[][)])(][)][([[[[(][()(][[(\\r\\n', 'output': ['5\\r\\n[()][][][][]()\\r\\n']}, {'input': '(([])\\r\\n', 'output': ['1\\r\\n([])\\r\\n']}, {'input': '()()([]]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '([[[]]))\\r\\n', 'output': ['2\\r\\n[[]]\\r\\n']}, {'input': '[[]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((((([]((((((((((\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '(((((([](((((((\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '[[])\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((()))([]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '([]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '[]())])([)][[[]])))][])([]([]()]]))))())[[([))()(])))]][)[][[])(][()()]]](]][])[[))((]][)[)(]))([])((]([)([])]]]]]]][)[[[]]([[[]]][(][][])()[[([](])(]]((]([[)])]])([)(][([)(([))(]([)[[](([(](][[)()(][\\r\\n', 'output': ['3\\r\\n[[[]]]\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 100000 + 5;\nchar s[MAXN];\nint open[4], close[4];\nint main() {\n  scanf(\"%s\", s);\n  int n = strlen(s);\n  int i, ans_i = 0, ans_l = 0, ans_r = 0;\n  for (i = 0; i < n; i++) {\n    open[s[i]]++;\n    close[s[i]]++;\n    while (close[s[ans_i]] > open[s[ans_i]]) {\n      close[s[ans_i]]--;\n      ans_i--;\n    }\n    if (close[s[i]] == open[s[i]]) {\n      ans_i++;\n      ans_l = min(ans_l, i - ans_i + 1);\n      ans_r = max(ans_r, i - ans_i + 1);\n    }\n  }\n  if (ans_l >= 0 && ans_l <= ans_r) {\n    printf(\"%d\\n\", close[']'] - close['[']);\n    int j;\n    for (j = ans_i; j <= i; j++) printf(\"%c\", s[j]);\n    printf(\"\\n\");\n  } else {\n    printf(\"%d\\n\", close[']'] - close['[']);\n    printf(\"\");\n  }\n  return 0;\n}\n"}
{"src_uid": "5ce8de80c6953cd1e6e6eefd9ad35f7e", "id": 52, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1700, "testcases": "[{'input': '([])\\r\\n', 'output': ['1\\r\\n([])\\r\\n']}, {'input': '(((\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '(][)\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '(()[))()[]\\r\\n', 'output': ['1\\r\\n()[]\\r\\n']}, {'input': '(][](](][[(][\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((])(]]))(](((()[[()[[[)([]()])[(]][)]])[]]()[()[[[[(([[)\\r\\n', 'output': ['1\\r\\n[]()\\r\\n']}, {'input': '](]][)]()][[])[()(][)]))[)[]()()])[([((([[(([)][(])](][])([([)())))([(([][))[)()]][[])()[)](][[((]](](])]][(][[()(]][[)][])(][]))[])[)[(])[)()()[[))((()]]([([[(]))][(]())))))[[]]][][))[)])])()((((([[](([[()(([[()](([[([[(](]([)]())))[)]([]\\r\\n', 'output': ['2\\r\\n[[]]\\r\\n']}, {'input': '[(()[])]()[()[]]\\r\\n', 'output': ['4\\r\\n[(()[])]()[()[]]\\r\\n']}, {'input': '([])()[()]()()[(([])[]()[()([])()[][]()])]\\r\\n', 'output': ['9\\r\\n([])()[()]()()[(([])[]()[()([])()[][]()])]\\r\\n']}, {'input': '[()][([[]])][[[]()]][()[]]()()([[][]][[]][](()))[[[(())]]][]()(([([])(([[[]]()])(()))]((())))([()]([()[[[]([][[[[][(())([[]()])]]][[(())]([])]()][[](())]()[])]()[][]]([[]])[]])[(()[()((()[][()]))][])[]()()([]())](()[][][])()()[]()))[]()[]\\r\\n', 'output': ['61\\r\\n[()][([[]])][[[]()]][()[]]()()([[][]][[]][](()))[[[(())]]][]()(([([])(([[[]]()])(()))]((())))([()]([()[[[]([][[[[][(())([[]()])]]][[(())]([])]()][[](())]()[])]()[][]]([[]])[]])[(()[()((()[][()]))][])[]()()([]())](()[][][])()()[]()))[]()[]\\r\\n']}, {'input': '(][(](][[(][(\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': ')[)][)))((([[)]((]][)[)((]([)[)(([)[)]][([\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '][([))][[))[[((]][([(([[)]]])([)][([([[[[([))]])][[[[[([)]]([[(((]([(](([([[)[(]])(][(((][)[[)][)(][[)[[)])))[)]))]])[([[))(([(]][))([(]]][(])]))))))[[[[[([[([)[[[)[(([)[[(][((([(([([(([))[[[[[[([(](])(][[)[)(](]])]]]((([))(])[[)[))[([[[[(]][)[([(]](([)([[)[[([))[)\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '()]])()()]\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '[([[)[(()[])[()][]()[[[)()[][[[()[]]]()]][\\r\\n', 'output': ['5\\r\\n()[][[[()[]]]()]\\r\\n']}, {'input': '[()][][][][]()[)])))[(]()[]([)(])[)(])()[))][)]()[][][]][][)(((([))))[)[))]]([[[)[())))[(][(()[()[(]())]])([[)[)[[())[()[]()[[[[])][))](()()())()](((((([(()]][[)([)([]]))(()[((]]())[]])][)()(][]][][(([])]]((]])([[][)])(][)][([[[[(][()(][[(\\r\\n', 'output': ['5\\r\\n[()][][][][]()\\r\\n']}, {'input': '(([])\\r\\n', 'output': ['1\\r\\n([])\\r\\n']}, {'input': '()()([]]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '([[[]]))\\r\\n', 'output': ['2\\r\\n[[]]\\r\\n']}, {'input': '[[]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((((([]((((((((((\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '(((((([](((((((\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '[[])\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((()))([]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '([]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '[]())])([)][[[]])))][])([]([]()]]))))())[[([))()(])))]][)[][[])(][()()]]](]][])[[))((]][)[)(]))([])((]([)([])]]]]]]][)[[[]]([[[]]][(][][])()[[([](])(]]((]([[)])]])([)(][([)(([))(]([)[[](([(](][[)()(][\\r\\n', 'output': ['3\\r\\n[[[]]]\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint s, a, l;\nstring t, r;\nvector<int> v;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  cin >> t;\n  s = int(t.size());\n  for (int i = 0; i < s; i++) {\n    a = 0;\n    for (int j = i; j < s; j++) {\n      r = t.substr(i, j + 1 - i);\n      l = 0;\n      for (int k = 0; k < r.size(); k++) {\n        if (r[k] == '[') l++;\n        if (r[k] == ']') l--;\n      }\n      if (l == 0) {\n        v.push_back(j + 1);\n        break;\n      }\n    }\n  }\n  int u = -1, p = 0;\n  for (int i = 0; i < v.size(); i++) {\n    if (u < v[i]) {\n      u = v[i];\n      p = i;\n    }\n  }\n  cout << v[p] << endl;\n  cout << t.substr(0, v[p]) << endl;\n}\n"}
{"src_uid": "b8b3f75baaef9c4232e7fd7555d4fabb", "id": 53, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '3 1\\r\\n3 10 20 30\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 2\\r\\n1 40\\r\\n4 10 20 30 40\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '5 1\\r\\n5 1 2 3 4 5\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 1 2 3\\r\\n3 4 5 6\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 1 2 3\\r\\n3 1 2 3\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 2 3 1\\r\\n3 5 4 6\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 999999998 999999999 1000000000\\r\\n3 999999998 999999999 1000000000\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 2\\r\\n2 1 2\\r\\n2 1 2\\r\\n', 'output': ['0.250000000\\r\\n']}, {'input': '4 6\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '8 6\\r\\n5 5 4 3 2 1\\r\\n5 5 4 3 2 1\\r\\n3 5 3 1\\r\\n2 3 1\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['0.002500000\\r\\n']}, {'input': '5 10\\r\\n1 10\\r\\n1 9\\r\\n1 8\\r\\n1 7\\r\\n1 6\\r\\n1 5\\r\\n1 4\\r\\n1 3\\r\\n1 2\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '1 1\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 1\\r\\n2 1 2\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 1\\r\\n3 1 2 3\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 3\\r\\n2 2 4\\r\\n1 2\\r\\n1 1\\r\\n', 'output': ['0.750000000\\r\\n']}, {'input': '3 2\\r\\n3 2 3 5\\r\\n2 1 3\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '2 2\\r\\n4 1 3 5 6\\r\\n2 1 2\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '7 2\\r\\n5 1 2 3 4 6\\r\\n2 1 2\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 3\\r\\n5 1 3 4 5 6\\r\\n2 2 4\\r\\n1 1\\r\\n', 'output': ['0.075000000\\r\\n']}, {'input': '8 3\\r\\n4 2 3 5 7\\r\\n4 1 3 5 6\\r\\n1 1\\r\\n', 'output': ['0.625000000\\r\\n']}, {'input': '9 5\\r\\n2 1 3\\r\\n4 2 4 6 7\\r\\n1 2\\r\\n2 2 3\\r\\n1 2\\r\\n', 'output': ['0.500000000\\r\\n']}, {'input': '1 5\\r\\n3 2 3 4\\r\\n3 1 2 3\\r\\n3 2 4 5\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['0.333333333\\r\\n']}, {'input': '11 4\\r\\n3 2 4 6\\r\\n6 1 3 5 7 9 10\\r\\n2 1 2\\r\\n1 1\\r\\n', 'output': ['0.555555556\\r\\n']}, {'input': '10 4\\r\\n2 2 3\\r\\n6 1 3 5 7 8 10\\r\\n4 1 2 4 5\\r\\n1 1\\r\\n', 'output': ['0.041666667\\r\\n']}, {'input': '11 6\\r\\n1 1\\r\\n4 1 2 3 4\\r\\n2 1 2\\r\\n3 2 3 4\\r\\n2 1 2\\r\\n2 1 2\\r\\n', 'output': ['0.143750000\\r\\n']}, {'input': '7 5\\r\\n1 1\\r\\n5 2 4 6 8 10\\r\\n6 1 3 4 5 7 8\\r\\n2 1 3\\r\\n1 2\\r\\n', 'output': ['0.008333333\\r\\n']}, {'input': '1 5\\r\\n6 1 3 5 7 8 10\\r\\n5 1 2 4 6 7\\r\\n1 1\\r\\n3 1 2 3\\r\\n1 1\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '9 5\\r\\n1 2\\r\\n6 1 2 3 5 7 9\\r\\n4 2 3 5 6\\r\\n1 2\\r\\n6 2 4 6 8 9 11\\r\\n', 'output': ['0.000555556\\r\\n']}, {'input': '20 9\\r\\n4 2 3 4 6\\r\\n4 2 4 5 6\\r\\n1 2\\r\\n3 2 4 6\\r\\n2 2 3\\r\\n2 2 3\\r\\n1 2\\r\\n2 2 4\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '21 12\\r\\n7 657 7 6 5 4 2 1\\r\\n8 142 9 7 6 5 4 2 1\\r\\n8 853 9 8 7 6 4 2 1\\r\\n11 708 369 9 8 7 6 5 4 3 2 1\\r\\n8 9 8 7 6 5 4 3 2\\r\\n9 969 867 774 9 8 7 5 4 2\\r\\n9 869 575 527 9 7 5 4 3 2\\r\\n8 839 248 77 9 7 6 3 1\\r\\n9 952 9 7 6 5 4 3 2 1\\r\\n7 380 9 8 7 6 5 4\\r\\n9 511 494 203 9 8 7 6 4 1\\r\\n7 721 8 7 6 5 4 2\\r\\n', 'output': ['0.000000000\\r\\n']}, {'input': '51 9\\r\\n7 483 459 7 6 5 2 1\\r\\n12 953 940 926 792 612 241 7 5 4 3 2 1\\r\\n14 904 633 441 361 324 286 79 8 7 6 5 4 2 1\\r\\n12 928 450 443 426 53 9 8 7 6 5 4 1\\r\\n10 643 415 202 109 106 9 7 6 4 1\\r\\n10 803 582 381 354 216 169 6 5 3 1\\r\\n12 813 701 569 467 328 179 63 8 7 5 3 1\\r\\n12 822 636 573 563 480 370 367 8 7 6 5 1\\r\\n11 910 774 463 175 80 8 7 5 4 2 1\\r\\n', 'output': ['0.000000000\\r\\n']}, {'input': '90 50\\r\\n3 523 254 10\\r\\n2 335 10\\r\\n1 10\\r\\n3 645 293 10\\r\\n3 174 56 10\\r\\n1 10\\r\\n1 10\\r\\n1 10\\r\\n1 10\\r\\n3 384 161 10\\r\\n2 465 10\\r\\n2 582 10\\r\\n1 10\\r\\n1 10\\r\\n2 165 10\\r\\n2 673 10\\r\\n2 638 10\\r\\n4 653 535 192 10\\r\\n2 269 10\\r\\n3 427 134 10\\r\\n2 966 10\\r\\n1 10\\r\\n3 221 21 10\\r\\n2 840 10\\r\\n2 764 10\\r\\n1 10\\r\\n2 747 10\\r\\n2 67 10\\r\\n1 10\\r\\n3 951 13 10\\r\\n3 651 405 10\\r\\n1 10\\r\\n1 10\\r\\n3 729 87 10\\r\\n2 631 10\\r\\n2 376 10\\r\\n2 652 10\\r\\n1 10\\r\\n1 10\\r\\n3 923 233 10\\r\\n2 450 10\\r\\n2 830 10\\r\\n2 271 10\\r\\n3 775 391 10\\r\\n3 850 733 10\\r\\n2 598 10\\r\\n1 10\\r\\n3 797 682 10\\r\\n3 596 508 10\\r\\n1 10\\r\\n', 'output': ['0.005722876\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint dp[1005], a[1005], p[1005], k, n;\nint gao(int x) {\n  memset(dp, 0, sizeof(dp));\n  dp[x] = 1;\n  int res = 0;\n  for (int i = 0; i < k; i++) {\n    for (int j = 0; j < x; j++)\n      if (dp[j]) dp[j] -= a[i], dp[j + a[i]] += a[i];\n    res++;\n  }\n  return res;\n}\nint main() {\n  cin >> n >> k;\n  for (int i = 0; i < k; i++) {\n    cin >> a[i];\n    for (int j = 0; j < a[i]; j++) cin >> p[j];\n    sort(p, p + a[i]);\n  }\n  double ans = 0;\n  int c = 0;\n  for (int i = n; i <= 1000; i++) {\n    ans += (double)dp[1000] / pow(i, n);\n    c++;\n  }\n  ans /= c;\n  cout << fixed << setprecision(9) << ans;\n}\n"}
{"src_uid": "b8b3f75baaef9c4232e7fd7555d4fabb", "id": 53, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '3 1\\r\\n3 10 20 30\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 2\\r\\n1 40\\r\\n4 10 20 30 40\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '5 1\\r\\n5 1 2 3 4 5\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 1 2 3\\r\\n3 4 5 6\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 1 2 3\\r\\n3 1 2 3\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 2 3 1\\r\\n3 5 4 6\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 999999998 999999999 1000000000\\r\\n3 999999998 999999999 1000000000\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 2\\r\\n2 1 2\\r\\n2 1 2\\r\\n', 'output': ['0.250000000\\r\\n']}, {'input': '4 6\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '8 6\\r\\n5 5 4 3 2 1\\r\\n5 5 4 3 2 1\\r\\n3 5 3 1\\r\\n2 3 1\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['0.002500000\\r\\n']}, {'input': '5 10\\r\\n1 10\\r\\n1 9\\r\\n1 8\\r\\n1 7\\r\\n1 6\\r\\n1 5\\r\\n1 4\\r\\n1 3\\r\\n1 2\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '1 1\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 1\\r\\n2 1 2\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 1\\r\\n3 1 2 3\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 3\\r\\n2 2 4\\r\\n1 2\\r\\n1 1\\r\\n', 'output': ['0.750000000\\r\\n']}, {'input': '3 2\\r\\n3 2 3 5\\r\\n2 1 3\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '2 2\\r\\n4 1 3 5 6\\r\\n2 1 2\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '7 2\\r\\n5 1 2 3 4 6\\r\\n2 1 2\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 3\\r\\n5 1 3 4 5 6\\r\\n2 2 4\\r\\n1 1\\r\\n', 'output': ['0.075000000\\r\\n']}, {'input': '8 3\\r\\n4 2 3 5 7\\r\\n4 1 3 5 6\\r\\n1 1\\r\\n', 'output': ['0.625000000\\r\\n']}, {'input': '9 5\\r\\n2 1 3\\r\\n4 2 4 6 7\\r\\n1 2\\r\\n2 2 3\\r\\n1 2\\r\\n', 'output': ['0.500000000\\r\\n']}, {'input': '1 5\\r\\n3 2 3 4\\r\\n3 1 2 3\\r\\n3 2 4 5\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['0.333333333\\r\\n']}, {'input': '11 4\\r\\n3 2 4 6\\r\\n6 1 3 5 7 9 10\\r\\n2 1 2\\r\\n1 1\\r\\n', 'output': ['0.555555556\\r\\n']}, {'input': '10 4\\r\\n2 2 3\\r\\n6 1 3 5 7 8 10\\r\\n4 1 2 4 5\\r\\n1 1\\r\\n', 'output': ['0.041666667\\r\\n']}, {'input': '11 6\\r\\n1 1\\r\\n4 1 2 3 4\\r\\n2 1 2\\r\\n3 2 3 4\\r\\n2 1 2\\r\\n2 1 2\\r\\n', 'output': ['0.143750000\\r\\n']}, {'input': '7 5\\r\\n1 1\\r\\n5 2 4 6 8 10\\r\\n6 1 3 4 5 7 8\\r\\n2 1 3\\r\\n1 2\\r\\n', 'output': ['0.008333333\\r\\n']}, {'input': '1 5\\r\\n6 1 3 5 7 8 10\\r\\n5 1 2 4 6 7\\r\\n1 1\\r\\n3 1 2 3\\r\\n1 1\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '9 5\\r\\n1 2\\r\\n6 1 2 3 5 7 9\\r\\n4 2 3 5 6\\r\\n1 2\\r\\n6 2 4 6 8 9 11\\r\\n', 'output': ['0.000555556\\r\\n']}, {'input': '20 9\\r\\n4 2 3 4 6\\r\\n4 2 4 5 6\\r\\n1 2\\r\\n3 2 4 6\\r\\n2 2 3\\r\\n2 2 3\\r\\n1 2\\r\\n2 2 4\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '21 12\\r\\n7 657 7 6 5 4 2 1\\r\\n8 142 9 7 6 5 4 2 1\\r\\n8 853 9 8 7 6 4 2 1\\r\\n11 708 369 9 8 7 6 5 4 3 2 1\\r\\n8 9 8 7 6 5 4 3 2\\r\\n9 969 867 774 9 8 7 5 4 2\\r\\n9 869 575 527 9 7 5 4 3 2\\r\\n8 839 248 77 9 7 6 3 1\\r\\n9 952 9 7 6 5 4 3 2 1\\r\\n7 380 9 8 7 6 5 4\\r\\n9 511 494 203 9 8 7 6 4 1\\r\\n7 721 8 7 6 5 4 2\\r\\n', 'output': ['0.000000000\\r\\n']}, {'input': '51 9\\r\\n7 483 459 7 6 5 2 1\\r\\n12 953 940 926 792 612 241 7 5 4 3 2 1\\r\\n14 904 633 441 361 324 286 79 8 7 6 5 4 2 1\\r\\n12 928 450 443 426 53 9 8 7 6 5 4 1\\r\\n10 643 415 202 109 106 9 7 6 4 1\\r\\n10 803 582 381 354 216 169 6 5 3 1\\r\\n12 813 701 569 467 328 179 63 8 7 5 3 1\\r\\n12 822 636 573 563 480 370 367 8 7 6 5 1\\r\\n11 910 774 463 175 80 8 7 5 4 2 1\\r\\n', 'output': ['0.000000000\\r\\n']}, {'input': '90 50\\r\\n3 523 254 10\\r\\n2 335 10\\r\\n1 10\\r\\n3 645 293 10\\r\\n3 174 56 10\\r\\n1 10\\r\\n1 10\\r\\n1 10\\r\\n1 10\\r\\n3 384 161 10\\r\\n2 465 10\\r\\n2 582 10\\r\\n1 10\\r\\n1 10\\r\\n2 165 10\\r\\n2 673 10\\r\\n2 638 10\\r\\n4 653 535 192 10\\r\\n2 269 10\\r\\n3 427 134 10\\r\\n2 966 10\\r\\n1 10\\r\\n3 221 21 10\\r\\n2 840 10\\r\\n2 764 10\\r\\n1 10\\r\\n2 747 10\\r\\n2 67 10\\r\\n1 10\\r\\n3 951 13 10\\r\\n3 651 405 10\\r\\n1 10\\r\\n1 10\\r\\n3 729 87 10\\r\\n2 631 10\\r\\n2 376 10\\r\\n2 652 10\\r\\n1 10\\r\\n1 10\\r\\n3 923 233 10\\r\\n2 450 10\\r\\n2 830 10\\r\\n2 271 10\\r\\n3 775 391 10\\r\\n3 850 733 10\\r\\n2 598 10\\r\\n1 10\\r\\n3 797 682 10\\r\\n3 596 508 10\\r\\n1 10\\r\\n', 'output': ['0.005722876\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long dp[1010];\nint c[1005], n, m;\nvoid dfs(int cur, int lim) {\n  if (cur == m) {\n    int maxx = -0x7fffffff;\n    for (int i = 1; i <= lim; ++i) {\n      maxx = max(maxx, dp[i]);\n    }\n    dp[maxx + 1]++;\n    return;\n  }\n  for (int i = 0; i < c[cur]; ++i) {\n    dfs(cur + 1, lim);\n    lim += c[cur] - i;\n  }\n}\nint main() {\n  cin >> n >> m;\n  for (int i = 1; i <= m; ++i) {\n    cin >> c[i];\n    for (int j = 1; j <= c[i]; ++j) {\n      int x;\n      cin >> x;\n      dp[x + 1]++;\n    }\n  }\n  dp[1010]++;\n  dfs(1, 0);\n  long long tmp = 0;\n  for (int i = 1000; i >= 0; --i) {\n    tmp += dp[i];\n    if (tmp >= n) {\n      printf(\"%.9lf\", (double)dp[i] / tmp);\n      break;\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "b8b3f75baaef9c4232e7fd7555d4fabb", "id": 53, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '3 1\\r\\n3 10 20 30\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 2\\r\\n1 40\\r\\n4 10 20 30 40\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '5 1\\r\\n5 1 2 3 4 5\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 1 2 3\\r\\n3 4 5 6\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 1 2 3\\r\\n3 1 2 3\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 2 3 1\\r\\n3 5 4 6\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 999999998 999999999 1000000000\\r\\n3 999999998 999999999 1000000000\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 2\\r\\n2 1 2\\r\\n2 1 2\\r\\n', 'output': ['0.250000000\\r\\n']}, {'input': '4 6\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '8 6\\r\\n5 5 4 3 2 1\\r\\n5 5 4 3 2 1\\r\\n3 5 3 1\\r\\n2 3 1\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['0.002500000\\r\\n']}, {'input': '5 10\\r\\n1 10\\r\\n1 9\\r\\n1 8\\r\\n1 7\\r\\n1 6\\r\\n1 5\\r\\n1 4\\r\\n1 3\\r\\n1 2\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '1 1\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 1\\r\\n2 1 2\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 1\\r\\n3 1 2 3\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 3\\r\\n2 2 4\\r\\n1 2\\r\\n1 1\\r\\n', 'output': ['0.750000000\\r\\n']}, {'input': '3 2\\r\\n3 2 3 5\\r\\n2 1 3\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '2 2\\r\\n4 1 3 5 6\\r\\n2 1 2\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '7 2\\r\\n5 1 2 3 4 6\\r\\n2 1 2\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 3\\r\\n5 1 3 4 5 6\\r\\n2 2 4\\r\\n1 1\\r\\n', 'output': ['0.075000000\\r\\n']}, {'input': '8 3\\r\\n4 2 3 5 7\\r\\n4 1 3 5 6\\r\\n1 1\\r\\n', 'output': ['0.625000000\\r\\n']}, {'input': '9 5\\r\\n2 1 3\\r\\n4 2 4 6 7\\r\\n1 2\\r\\n2 2 3\\r\\n1 2\\r\\n', 'output': ['0.500000000\\r\\n']}, {'input': '1 5\\r\\n3 2 3 4\\r\\n3 1 2 3\\r\\n3 2 4 5\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['0.333333333\\r\\n']}, {'input': '11 4\\r\\n3 2 4 6\\r\\n6 1 3 5 7 9 10\\r\\n2 1 2\\r\\n1 1\\r\\n', 'output': ['0.555555556\\r\\n']}, {'input': '10 4\\r\\n2 2 3\\r\\n6 1 3 5 7 8 10\\r\\n4 1 2 4 5\\r\\n1 1\\r\\n', 'output': ['0.041666667\\r\\n']}, {'input': '11 6\\r\\n1 1\\r\\n4 1 2 3 4\\r\\n2 1 2\\r\\n3 2 3 4\\r\\n2 1 2\\r\\n2 1 2\\r\\n', 'output': ['0.143750000\\r\\n']}, {'input': '7 5\\r\\n1 1\\r\\n5 2 4 6 8 10\\r\\n6 1 3 4 5 7 8\\r\\n2 1 3\\r\\n1 2\\r\\n', 'output': ['0.008333333\\r\\n']}, {'input': '1 5\\r\\n6 1 3 5 7 8 10\\r\\n5 1 2 4 6 7\\r\\n1 1\\r\\n3 1 2 3\\r\\n1 1\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '9 5\\r\\n1 2\\r\\n6 1 2 3 5 7 9\\r\\n4 2 3 5 6\\r\\n1 2\\r\\n6 2 4 6 8 9 11\\r\\n', 'output': ['0.000555556\\r\\n']}, {'input': '20 9\\r\\n4 2 3 4 6\\r\\n4 2 4 5 6\\r\\n1 2\\r\\n3 2 4 6\\r\\n2 2 3\\r\\n2 2 3\\r\\n1 2\\r\\n2 2 4\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '21 12\\r\\n7 657 7 6 5 4 2 1\\r\\n8 142 9 7 6 5 4 2 1\\r\\n8 853 9 8 7 6 4 2 1\\r\\n11 708 369 9 8 7 6 5 4 3 2 1\\r\\n8 9 8 7 6 5 4 3 2\\r\\n9 969 867 774 9 8 7 5 4 2\\r\\n9 869 575 527 9 7 5 4 3 2\\r\\n8 839 248 77 9 7 6 3 1\\r\\n9 952 9 7 6 5 4 3 2 1\\r\\n7 380 9 8 7 6 5 4\\r\\n9 511 494 203 9 8 7 6 4 1\\r\\n7 721 8 7 6 5 4 2\\r\\n', 'output': ['0.000000000\\r\\n']}, {'input': '51 9\\r\\n7 483 459 7 6 5 2 1\\r\\n12 953 940 926 792 612 241 7 5 4 3 2 1\\r\\n14 904 633 441 361 324 286 79 8 7 6 5 4 2 1\\r\\n12 928 450 443 426 53 9 8 7 6 5 4 1\\r\\n10 643 415 202 109 106 9 7 6 4 1\\r\\n10 803 582 381 354 216 169 6 5 3 1\\r\\n12 813 701 569 467 328 179 63 8 7 5 3 1\\r\\n12 822 636 573 563 480 370 367 8 7 6 5 1\\r\\n11 910 774 463 175 80 8 7 5 4 2 1\\r\\n', 'output': ['0.000000000\\r\\n']}, {'input': '90 50\\r\\n3 523 254 10\\r\\n2 335 10\\r\\n1 10\\r\\n3 645 293 10\\r\\n3 174 56 10\\r\\n1 10\\r\\n1 10\\r\\n1 10\\r\\n1 10\\r\\n3 384 161 10\\r\\n2 465 10\\r\\n2 582 10\\r\\n1 10\\r\\n1 10\\r\\n2 165 10\\r\\n2 673 10\\r\\n2 638 10\\r\\n4 653 535 192 10\\r\\n2 269 10\\r\\n3 427 134 10\\r\\n2 966 10\\r\\n1 10\\r\\n3 221 21 10\\r\\n2 840 10\\r\\n2 764 10\\r\\n1 10\\r\\n2 747 10\\r\\n2 67 10\\r\\n1 10\\r\\n3 951 13 10\\r\\n3 651 405 10\\r\\n1 10\\r\\n1 10\\r\\n3 729 87 10\\r\\n2 631 10\\r\\n2 376 10\\r\\n2 652 10\\r\\n1 10\\r\\n1 10\\r\\n3 923 233 10\\r\\n2 450 10\\r\\n2 830 10\\r\\n2 271 10\\r\\n3 775 391 10\\r\\n3 850 733 10\\r\\n2 598 10\\r\\n1 10\\r\\n3 797 682 10\\r\\n3 596 508 10\\r\\n1 10\\r\\n', 'output': ['0.005722876\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m;\nlong long a, p;\nlong long c[1010];\ndouble memo[2][1010];\ndouble dfs(int k, int r) {\n  if (r == 0) return memo[k][r] = 1.0;\n  double &res = memo[k][r];\n  if (res!= -1) return res;\n  res = 0.0;\n  for (int i = 1; i <= p; ++i) {\n    if (k == 0 || c[i] >= r) {\n      res += dfs(k - (c[i] >= r), r - (c[i] >= r)) / p;\n    }\n  }\n  return res;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin >> n >> m;\n  long long sum = 0;\n  memset(memo, -1, sizeof(memo));\n  for (int i = 1; i <= m; ++i) {\n    cin >> p;\n    for (int j = 0; j < p; ++j) {\n      cin >> a;\n      sum += a;\n      c[++c[0]] = a;\n    }\n    p = c[0];\n  }\n  sort(c + 1, c + c[0] + 1);\n  c[0] = 0;\n  double res = dfs(n, sum) - dfs(n, sum - 1e-9);\n  cout << fixed << setprecision(9) << res << '\\n';\n  return 0;\n}\n"}
{"src_uid": "b8b3f75baaef9c4232e7fd7555d4fabb", "id": 53, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '3 1\\r\\n3 10 20 30\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 2\\r\\n1 40\\r\\n4 10 20 30 40\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '5 1\\r\\n5 1 2 3 4 5\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 1 2 3\\r\\n3 4 5 6\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 1 2 3\\r\\n3 1 2 3\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 2 3 1\\r\\n3 5 4 6\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 999999998 999999999 1000000000\\r\\n3 999999998 999999999 1000000000\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 2\\r\\n2 1 2\\r\\n2 1 2\\r\\n', 'output': ['0.250000000\\r\\n']}, {'input': '4 6\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '8 6\\r\\n5 5 4 3 2 1\\r\\n5 5 4 3 2 1\\r\\n3 5 3 1\\r\\n2 3 1\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['0.002500000\\r\\n']}, {'input': '5 10\\r\\n1 10\\r\\n1 9\\r\\n1 8\\r\\n1 7\\r\\n1 6\\r\\n1 5\\r\\n1 4\\r\\n1 3\\r\\n1 2\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '1 1\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 1\\r\\n2 1 2\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 1\\r\\n3 1 2 3\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 3\\r\\n2 2 4\\r\\n1 2\\r\\n1 1\\r\\n', 'output': ['0.750000000\\r\\n']}, {'input': '3 2\\r\\n3 2 3 5\\r\\n2 1 3\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '2 2\\r\\n4 1 3 5 6\\r\\n2 1 2\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '7 2\\r\\n5 1 2 3 4 6\\r\\n2 1 2\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 3\\r\\n5 1 3 4 5 6\\r\\n2 2 4\\r\\n1 1\\r\\n', 'output': ['0.075000000\\r\\n']}, {'input': '8 3\\r\\n4 2 3 5 7\\r\\n4 1 3 5 6\\r\\n1 1\\r\\n', 'output': ['0.625000000\\r\\n']}, {'input': '9 5\\r\\n2 1 3\\r\\n4 2 4 6 7\\r\\n1 2\\r\\n2 2 3\\r\\n1 2\\r\\n', 'output': ['0.500000000\\r\\n']}, {'input': '1 5\\r\\n3 2 3 4\\r\\n3 1 2 3\\r\\n3 2 4 5\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['0.333333333\\r\\n']}, {'input': '11 4\\r\\n3 2 4 6\\r\\n6 1 3 5 7 9 10\\r\\n2 1 2\\r\\n1 1\\r\\n', 'output': ['0.555555556\\r\\n']}, {'input': '10 4\\r\\n2 2 3\\r\\n6 1 3 5 7 8 10\\r\\n4 1 2 4 5\\r\\n1 1\\r\\n', 'output': ['0.041666667\\r\\n']}, {'input': '11 6\\r\\n1 1\\r\\n4 1 2 3 4\\r\\n2 1 2\\r\\n3 2 3 4\\r\\n2 1 2\\r\\n2 1 2\\r\\n', 'output': ['0.143750000\\r\\n']}, {'input': '7 5\\r\\n1 1\\r\\n5 2 4 6 8 10\\r\\n6 1 3 4 5 7 8\\r\\n2 1 3\\r\\n1 2\\r\\n', 'output': ['0.008333333\\r\\n']}, {'input': '1 5\\r\\n6 1 3 5 7 8 10\\r\\n5 1 2 4 6 7\\r\\n1 1\\r\\n3 1 2 3\\r\\n1 1\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '9 5\\r\\n1 2\\r\\n6 1 2 3 5 7 9\\r\\n4 2 3 5 6\\r\\n1 2\\r\\n6 2 4 6 8 9 11\\r\\n', 'output': ['0.000555556\\r\\n']}, {'input': '20 9\\r\\n4 2 3 4 6\\r\\n4 2 4 5 6\\r\\n1 2\\r\\n3 2 4 6\\r\\n2 2 3\\r\\n2 2 3\\r\\n1 2\\r\\n2 2 4\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '21 12\\r\\n7 657 7 6 5 4 2 1\\r\\n8 142 9 7 6 5 4 2 1\\r\\n8 853 9 8 7 6 4 2 1\\r\\n11 708 369 9 8 7 6 5 4 3 2 1\\r\\n8 9 8 7 6 5 4 3 2\\r\\n9 969 867 774 9 8 7 5 4 2\\r\\n9 869 575 527 9 7 5 4 3 2\\r\\n8 839 248 77 9 7 6 3 1\\r\\n9 952 9 7 6 5 4 3 2 1\\r\\n7 380 9 8 7 6 5 4\\r\\n9 511 494 203 9 8 7 6 4 1\\r\\n7 721 8 7 6 5 4 2\\r\\n', 'output': ['0.000000000\\r\\n']}, {'input': '51 9\\r\\n7 483 459 7 6 5 2 1\\r\\n12 953 940 926 792 612 241 7 5 4 3 2 1\\r\\n14 904 633 441 361 324 286 79 8 7 6 5 4 2 1\\r\\n12 928 450 443 426 53 9 8 7 6 5 4 1\\r\\n10 643 415 202 109 106 9 7 6 4 1\\r\\n10 803 582 381 354 216 169 6 5 3 1\\r\\n12 813 701 569 467 328 179 63 8 7 5 3 1\\r\\n12 822 636 573 563 480 370 367 8 7 6 5 1\\r\\n11 910 774 463 175 80 8 7 5 4 2 1\\r\\n', 'output': ['0.000000000\\r\\n']}, {'input': '90 50\\r\\n3 523 254 10\\r\\n2 335 10\\r\\n1 10\\r\\n3 645 293 10\\r\\n3 174 56 10\\r\\n1 10\\r\\n1 10\\r\\n1 10\\r\\n1 10\\r\\n3 384 161 10\\r\\n2 465 10\\r\\n2 582 10\\r\\n1 10\\r\\n1 10\\r\\n2 165 10\\r\\n2 673 10\\r\\n2 638 10\\r\\n4 653 535 192 10\\r\\n2 269 10\\r\\n3 427 134 10\\r\\n2 966 10\\r\\n1 10\\r\\n3 221 21 10\\r\\n2 840 10\\r\\n2 764 10\\r\\n1 10\\r\\n2 747 10\\r\\n2 67 10\\r\\n1 10\\r\\n3 951 13 10\\r\\n3 651 405 10\\r\\n1 10\\r\\n1 10\\r\\n3 729 87 10\\r\\n2 631 10\\r\\n2 376 10\\r\\n2 652 10\\r\\n1 10\\r\\n1 10\\r\\n3 923 233 10\\r\\n2 450 10\\r\\n2 830 10\\r\\n2 271 10\\r\\n3 775 391 10\\r\\n3 850 733 10\\r\\n2 598 10\\r\\n1 10\\r\\n3 797 682 10\\r\\n3 596 508 10\\r\\n1 10\\r\\n', 'output': ['0.005722876\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1100;\nint n, m, k;\nint a[N], dp[N];\nbool f[N][N];\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  while (m--) {\n    scanf(\"%d\", &k);\n    for (int i = 1; i <= k; i++) scanf(\"%d\", &a[i]);\n    sort(a + 1, a + 1 + k, greater<int>());\n    dp[k] = k;\n    f[k][k] = 1;\n    for (int i = k; i > 0; i--) {\n      for (int j = i; j <= k; j++)\n        if (a[j] > a[i]) {\n          dp[i] += dp[j];\n          if (dp[i] > n) break;\n          f[i][j] = 1;\n        } else\n          f[i][j] = f[i][j - 1];\n      if (f[i][j]) break;\n    }\n  }\n  printf(\"%.10lf\", 1.0 / pow(k, n));\n  return 0;\n}\n"}
{"src_uid": "b8b3f75baaef9c4232e7fd7555d4fabb", "id": 53, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '3 1\\r\\n3 10 20 30\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 2\\r\\n1 40\\r\\n4 10 20 30 40\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '5 1\\r\\n5 1 2 3 4 5\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 1 2 3\\r\\n3 4 5 6\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 1 2 3\\r\\n3 1 2 3\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 2 3 1\\r\\n3 5 4 6\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 999999998 999999999 1000000000\\r\\n3 999999998 999999999 1000000000\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 2\\r\\n2 1 2\\r\\n2 1 2\\r\\n', 'output': ['0.250000000\\r\\n']}, {'input': '4 6\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '8 6\\r\\n5 5 4 3 2 1\\r\\n5 5 4 3 2 1\\r\\n3 5 3 1\\r\\n2 3 1\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['0.002500000\\r\\n']}, {'input': '5 10\\r\\n1 10\\r\\n1 9\\r\\n1 8\\r\\n1 7\\r\\n1 6\\r\\n1 5\\r\\n1 4\\r\\n1 3\\r\\n1 2\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '1 1\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 1\\r\\n2 1 2\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 1\\r\\n3 1 2 3\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 3\\r\\n2 2 4\\r\\n1 2\\r\\n1 1\\r\\n', 'output': ['0.750000000\\r\\n']}, {'input': '3 2\\r\\n3 2 3 5\\r\\n2 1 3\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '2 2\\r\\n4 1 3 5 6\\r\\n2 1 2\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '7 2\\r\\n5 1 2 3 4 6\\r\\n2 1 2\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 3\\r\\n5 1 3 4 5 6\\r\\n2 2 4\\r\\n1 1\\r\\n', 'output': ['0.075000000\\r\\n']}, {'input': '8 3\\r\\n4 2 3 5 7\\r\\n4 1 3 5 6\\r\\n1 1\\r\\n', 'output': ['0.625000000\\r\\n']}, {'input': '9 5\\r\\n2 1 3\\r\\n4 2 4 6 7\\r\\n1 2\\r\\n2 2 3\\r\\n1 2\\r\\n', 'output': ['0.500000000\\r\\n']}, {'input': '1 5\\r\\n3 2 3 4\\r\\n3 1 2 3\\r\\n3 2 4 5\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['0.333333333\\r\\n']}, {'input': '11 4\\r\\n3 2 4 6\\r\\n6 1 3 5 7 9 10\\r\\n2 1 2\\r\\n1 1\\r\\n', 'output': ['0.555555556\\r\\n']}, {'input': '10 4\\r\\n2 2 3\\r\\n6 1 3 5 7 8 10\\r\\n4 1 2 4 5\\r\\n1 1\\r\\n', 'output': ['0.041666667\\r\\n']}, {'input': '11 6\\r\\n1 1\\r\\n4 1 2 3 4\\r\\n2 1 2\\r\\n3 2 3 4\\r\\n2 1 2\\r\\n2 1 2\\r\\n', 'output': ['0.143750000\\r\\n']}, {'input': '7 5\\r\\n1 1\\r\\n5 2 4 6 8 10\\r\\n6 1 3 4 5 7 8\\r\\n2 1 3\\r\\n1 2\\r\\n', 'output': ['0.008333333\\r\\n']}, {'input': '1 5\\r\\n6 1 3 5 7 8 10\\r\\n5 1 2 4 6 7\\r\\n1 1\\r\\n3 1 2 3\\r\\n1 1\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '9 5\\r\\n1 2\\r\\n6 1 2 3 5 7 9\\r\\n4 2 3 5 6\\r\\n1 2\\r\\n6 2 4 6 8 9 11\\r\\n', 'output': ['0.000555556\\r\\n']}, {'input': '20 9\\r\\n4 2 3 4 6\\r\\n4 2 4 5 6\\r\\n1 2\\r\\n3 2 4 6\\r\\n2 2 3\\r\\n2 2 3\\r\\n1 2\\r\\n2 2 4\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '21 12\\r\\n7 657 7 6 5 4 2 1\\r\\n8 142 9 7 6 5 4 2 1\\r\\n8 853 9 8 7 6 4 2 1\\r\\n11 708 369 9 8 7 6 5 4 3 2 1\\r\\n8 9 8 7 6 5 4 3 2\\r\\n9 969 867 774 9 8 7 5 4 2\\r\\n9 869 575 527 9 7 5 4 3 2\\r\\n8 839 248 77 9 7 6 3 1\\r\\n9 952 9 7 6 5 4 3 2 1\\r\\n7 380 9 8 7 6 5 4\\r\\n9 511 494 203 9 8 7 6 4 1\\r\\n7 721 8 7 6 5 4 2\\r\\n', 'output': ['0.000000000\\r\\n']}, {'input': '51 9\\r\\n7 483 459 7 6 5 2 1\\r\\n12 953 940 926 792 612 241 7 5 4 3 2 1\\r\\n14 904 633 441 361 324 286 79 8 7 6 5 4 2 1\\r\\n12 928 450 443 426 53 9 8 7 6 5 4 1\\r\\n10 643 415 202 109 106 9 7 6 4 1\\r\\n10 803 582 381 354 216 169 6 5 3 1\\r\\n12 813 701 569 467 328 179 63 8 7 5 3 1\\r\\n12 822 636 573 563 480 370 367 8 7 6 5 1\\r\\n11 910 774 463 175 80 8 7 5 4 2 1\\r\\n', 'output': ['0.000000000\\r\\n']}, {'input': '90 50\\r\\n3 523 254 10\\r\\n2 335 10\\r\\n1 10\\r\\n3 645 293 10\\r\\n3 174 56 10\\r\\n1 10\\r\\n1 10\\r\\n1 10\\r\\n1 10\\r\\n3 384 161 10\\r\\n2 465 10\\r\\n2 582 10\\r\\n1 10\\r\\n1 10\\r\\n2 165 10\\r\\n2 673 10\\r\\n2 638 10\\r\\n4 653 535 192 10\\r\\n2 269 10\\r\\n3 427 134 10\\r\\n2 966 10\\r\\n1 10\\r\\n3 221 21 10\\r\\n2 840 10\\r\\n2 764 10\\r\\n1 10\\r\\n2 747 10\\r\\n2 67 10\\r\\n1 10\\r\\n3 951 13 10\\r\\n3 651 405 10\\r\\n1 10\\r\\n1 10\\r\\n3 729 87 10\\r\\n2 631 10\\r\\n2 376 10\\r\\n2 652 10\\r\\n1 10\\r\\n1 10\\r\\n3 923 233 10\\r\\n2 450 10\\r\\n2 830 10\\r\\n2 271 10\\r\\n3 775 391 10\\r\\n3 850 733 10\\r\\n2 598 10\\r\\n1 10\\r\\n3 797 682 10\\r\\n3 596 508 10\\r\\n1 10\\r\\n', 'output': ['0.005722876\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int N, K, T, C, x;\n  double cnt = 0;\n  double dp[2020];\n  vector<double> arr[2020];\n  cin >> N >> K;\n  for (int i = 1; i <= K; i++) {\n    cin >> T;\n    for (int j = 0; j < T; j++) {\n      cin >> x;\n      arr[x].push_back(dp[x]);\n    }\n    sort((arr[x]).begin(), (arr[x]).end(), greater<double>());\n  }\n  for (int i = 1; i <= N + 1; i++)\n    for (int j = 1; j <= i; j++) {\n      dp[i] += arr[i].back();\n      arr[i].pop_back();\n    }\n  for (int i = 1; i <= N + 1; i++) {\n    cnt += dp[i];\n    if (i == N + 1) break;\n    dp[i] = 0;\n  }\n  double rst = cnt / pow(N + 1, K);\n  printf(\"%.10lf\\n\", rst);\n}\n"}
{"src_uid": "fc133fe6353089a0ebee08dec919f608", "id": 54, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2000, "testcases": "[{'input': '4\\r\\n', 'output': ['2']}, {'input': '5\\r\\n', 'output': ['6']}, {'input': '6\\r\\n', 'output': ['14']}, {'input': '7\\r\\n', 'output': ['25']}, {'input': '1\\r\\n', 'output': ['0']}, {'input': '8\\r\\n', 'output': ['40']}, {'input': '10\\r\\n', 'output': ['82']}, {'input': '15\\r\\n', 'output': ['328']}, {'input': '16\\r\\n', 'output': ['395']}, {'input': '20\\r\\n', 'output': ['801']}, {'input': '50\\r\\n', 'output': ['13439']}, {'input': '100\\r\\n', 'output': ['110267']}, {'input': '127\\r\\n', 'output': ['226374']}, {'input': '202\\r\\n', 'output': ['911772']}, {'input': '333\\r\\n', 'output': ['4100905']}, {'input': '404\\r\\n', 'output': ['7300516']}, {'input': '411\\r\\n', 'output': ['7699373']}, {'input': '571\\r\\n', 'output': ['20657840']}, {'input': '600\\r\\n', 'output': ['23969924']}, {'input': '771\\r\\n', 'output': ['50875182']}, {'input': '10000\\r\\n', 'output': ['111107314481']}, {'input': '20000\\r\\n', 'output': ['888859064010']}, {'input': '30000\\r\\n', 'output': ['2999966359410']}, {'input': '50000\\r\\n', 'output': ['13888610595721']}, {'input': '99999\\r\\n', 'output': ['111107776644397']}, {'input': '200000\\r\\n', 'output': ['888885923513074']}, {'input': '400000\\r\\n', 'output': ['7111099254185938']}, {'input': '600000\\r\\n', 'output': ['23999973325791164']}, {'input': '800000\\r\\n', 'output': ['56888794064261806']}, {'input': '1000000\\r\\n', 'output': ['111111074060178115']}, {'input': '828282\\r\\n', 'output': ['63138169426585853']}, {'input': '729761\\r\\n', 'output': ['43181611460546198']}, {'input': '653451\\r\\n', 'output': ['31002458021265725']}, {'input': '987572\\r\\n', 'output': ['107019643962508968']}, {'input': '167590\\r\\n', 'output': ['522999083675296']}, {'input': '358712\\r\\n', 'output': ['5128538168895562']}, {'input': '498138\\r\\n', 'output': ['13734280958577573']}, {'input': '983242\\r\\n', 'output': ['105618162572849728']}, {'input': '312433\\r\\n', 'output': ['3388650642180089']}, {'input': '783472\\r\\n', 'output': ['53435215015075583']}]", "source_code": "#include <bits/stdc++.h>\nconst long long N = 1e6 + 5;\nlong long powl(long long x, long long n) {\n  long long r = 1;\n  while (n > 0) {\n    if (n % 2 == 1) r = r * x % 9;\n    x = x * x % 9;\n    n /= 2;\n  }\n  return r;\n}\nstd::map<long long, int> mp;\nint main() {\n  std::map<long long, int> mp1;\n  std::set<long long> se;\n  int n, x, ans = 0;\n  scanf(\"%d\", &n);\n  for (int a = 1; a <= n; ++a)\n    for (int b = 1; b <= n; ++b)\n      if (powl(a, b) % 9 == a) se.insert((a * b) % 9);\n  for (int i = 1; i <= n; ++i) {\n    long long d = powl(i, n) % 9;\n    if (se.find(d)!= se.end() && powl(d, i) % 9 == i)\n      ++mp[i];\n  }\n  for (auto x : mp)\n    if (x.second >= 2) ans += x.second * (x.second - 1) / 2;\n  printf(\"%d\\n\", ans);\n}\n"}
{"src_uid": "fc133fe6353089a0ebee08dec919f608", "id": 54, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2000, "testcases": "[{'input': '4\\r\\n', 'output': ['2']}, {'input': '5\\r\\n', 'output': ['6']}, {'input': '6\\r\\n', 'output': ['14']}, {'input': '7\\r\\n', 'output': ['25']}, {'input': '1\\r\\n', 'output': ['0']}, {'input': '8\\r\\n', 'output': ['40']}, {'input': '10\\r\\n', 'output': ['82']}, {'input': '15\\r\\n', 'output': ['328']}, {'input': '16\\r\\n', 'output': ['395']}, {'input': '20\\r\\n', 'output': ['801']}, {'input': '50\\r\\n', 'output': ['13439']}, {'input': '100\\r\\n', 'output': ['110267']}, {'input': '127\\r\\n', 'output': ['226374']}, {'input': '202\\r\\n', 'output': ['911772']}, {'input': '333\\r\\n', 'output': ['4100905']}, {'input': '404\\r\\n', 'output': ['7300516']}, {'input': '411\\r\\n', 'output': ['7699373']}, {'input': '571\\r\\n', 'output': ['20657840']}, {'input': '600\\r\\n', 'output': ['23969924']}, {'input': '771\\r\\n', 'output': ['50875182']}, {'input': '10000\\r\\n', 'output': ['111107314481']}, {'input': '20000\\r\\n', 'output': ['888859064010']}, {'input': '30000\\r\\n', 'output': ['2999966359410']}, {'input': '50000\\r\\n', 'output': ['13888610595721']}, {'input': '99999\\r\\n', 'output': ['111107776644397']}, {'input': '200000\\r\\n', 'output': ['888885923513074']}, {'input': '400000\\r\\n', 'output': ['7111099254185938']}, {'input': '600000\\r\\n', 'output': ['23999973325791164']}, {'input': '800000\\r\\n', 'output': ['56888794064261806']}, {'input': '1000000\\r\\n', 'output': ['111111074060178115']}, {'input': '828282\\r\\n', 'output': ['63138169426585853']}, {'input': '729761\\r\\n', 'output': ['43181611460546198']}, {'input': '653451\\r\\n', 'output': ['31002458021265725']}, {'input': '987572\\r\\n', 'output': ['107019643962508968']}, {'input': '167590\\r\\n', 'output': ['522999083675296']}, {'input': '358712\\r\\n', 'output': ['5128538168895562']}, {'input': '498138\\r\\n', 'output': ['13734280958577573']}, {'input': '983242\\r\\n', 'output': ['105618162572849728']}, {'input': '312433\\r\\n', 'output': ['3388650642180089']}, {'input': '783472\\r\\n', 'output': ['53435215015075583']}]", "source_code": "#include <bits/stdc++.h>\nconst int maxn = 1e6;\nint d[maxn], cnt[11];\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) d[i] = (10 * d[i / 10] + i % 10) % 9 + 1;\n  for (int i = 1; i <= n; i++) cnt[d[i]]++;\n  long long ans = 0;\n  for (int a = 1; a <= n; a++) {\n    int p = d[a];\n    for (int b = 1; b <= n; b++) {\n      if ((p - d[b]) % 9!= 0 && (p - d[b])!= 0 && a * b > n) continue;\n      int x = d[a * b];\n      if (x!= 0 && x!= 9 && x!= p && x!= d[b] && (p - d[b]) % 9 == 0)\n        ans += (1LL * cnt[p] * cnt[x] * cnt[d[b]]) / 6;\n    }\n  }\n  printf(\"%I64d\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "fc133fe6353089a0ebee08dec919f608", "id": 54, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2000, "testcases": "[{'input': '4\\r\\n', 'output': ['2']}, {'input': '5\\r\\n', 'output': ['6']}, {'input': '6\\r\\n', 'output': ['14']}, {'input': '7\\r\\n', 'output': ['25']}, {'input': '1\\r\\n', 'output': ['0']}, {'input': '8\\r\\n', 'output': ['40']}, {'input': '10\\r\\n', 'output': ['82']}, {'input': '15\\r\\n', 'output': ['328']}, {'input': '16\\r\\n', 'output': ['395']}, {'input': '20\\r\\n', 'output': ['801']}, {'input': '50\\r\\n', 'output': ['13439']}, {'input': '100\\r\\n', 'output': ['110267']}, {'input': '127\\r\\n', 'output': ['226374']}, {'input': '202\\r\\n', 'output': ['911772']}, {'input': '333\\r\\n', 'output': ['4100905']}, {'input': '404\\r\\n', 'output': ['7300516']}, {'input': '411\\r\\n', 'output': ['7699373']}, {'input': '571\\r\\n', 'output': ['20657840']}, {'input': '600\\r\\n', 'output': ['23969924']}, {'input': '771\\r\\n', 'output': ['50875182']}, {'input': '10000\\r\\n', 'output': ['111107314481']}, {'input': '20000\\r\\n', 'output': ['888859064010']}, {'input': '30000\\r\\n', 'output': ['2999966359410']}, {'input': '50000\\r\\n', 'output': ['13888610595721']}, {'input': '99999\\r\\n', 'output': ['111107776644397']}, {'input': '200000\\r\\n', 'output': ['888885923513074']}, {'input': '400000\\r\\n', 'output': ['7111099254185938']}, {'input': '600000\\r\\n', 'output': ['23999973325791164']}, {'input': '800000\\r\\n', 'output': ['56888794064261806']}, {'input': '1000000\\r\\n', 'output': ['111111074060178115']}, {'input': '828282\\r\\n', 'output': ['63138169426585853']}, {'input': '729761\\r\\n', 'output': ['43181611460546198']}, {'input': '653451\\r\\n', 'output': ['31002458021265725']}, {'input': '987572\\r\\n', 'output': ['107019643962508968']}, {'input': '167590\\r\\n', 'output': ['522999083675296']}, {'input': '358712\\r\\n', 'output': ['5128538168895562']}, {'input': '498138\\r\\n', 'output': ['13734280958577573']}, {'input': '983242\\r\\n', 'output': ['105618162572849728']}, {'input': '312433\\r\\n', 'output': ['3388650642180089']}, {'input': '783472\\r\\n', 'output': ['53435215015075583']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint x, c, cnt;\nint main() {\n  scanf(\"%d\", &x);\n  for (int a = 1; a <= x; ++a)\n    for (int b = 1; b <= x; ++b) {\n      c = a * b;\n      while (c!= 0) cnt += c % 10, c /= 10;\n      if (a % 9 == b % 9 && a / 9 == b / 9 && c % 9 == a % 9) cnt--;\n    }\n  printf(\"%d\\n\", cnt);\n  return 0;\n}\n"}
{"src_uid": "fc133fe6353089a0ebee08dec919f608", "id": 54, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2000, "testcases": "[{'input': '4\\r\\n', 'output': ['2']}, {'input': '5\\r\\n', 'output': ['6']}, {'input': '6\\r\\n', 'output': ['14']}, {'input': '7\\r\\n', 'output': ['25']}, {'input': '1\\r\\n', 'output': ['0']}, {'input': '8\\r\\n', 'output': ['40']}, {'input': '10\\r\\n', 'output': ['82']}, {'input': '15\\r\\n', 'output': ['328']}, {'input': '16\\r\\n', 'output': ['395']}, {'input': '20\\r\\n', 'output': ['801']}, {'input': '50\\r\\n', 'output': ['13439']}, {'input': '100\\r\\n', 'output': ['110267']}, {'input': '127\\r\\n', 'output': ['226374']}, {'input': '202\\r\\n', 'output': ['911772']}, {'input': '333\\r\\n', 'output': ['4100905']}, {'input': '404\\r\\n', 'output': ['7300516']}, {'input': '411\\r\\n', 'output': ['7699373']}, {'input': '571\\r\\n', 'output': ['20657840']}, {'input': '600\\r\\n', 'output': ['23969924']}, {'input': '771\\r\\n', 'output': ['50875182']}, {'input': '10000\\r\\n', 'output': ['111107314481']}, {'input': '20000\\r\\n', 'output': ['888859064010']}, {'input': '30000\\r\\n', 'output': ['2999966359410']}, {'input': '50000\\r\\n', 'output': ['13888610595721']}, {'input': '99999\\r\\n', 'output': ['111107776644397']}, {'input': '200000\\r\\n', 'output': ['888885923513074']}, {'input': '400000\\r\\n', 'output': ['7111099254185938']}, {'input': '600000\\r\\n', 'output': ['23999973325791164']}, {'input': '800000\\r\\n', 'output': ['56888794064261806']}, {'input': '1000000\\r\\n', 'output': ['111111074060178115']}, {'input': '828282\\r\\n', 'output': ['63138169426585853']}, {'input': '729761\\r\\n', 'output': ['43181611460546198']}, {'input': '653451\\r\\n', 'output': ['31002458021265725']}, {'input': '987572\\r\\n', 'output': ['107019643962508968']}, {'input': '167590\\r\\n', 'output': ['522999083675296']}, {'input': '358712\\r\\n', 'output': ['5128538168895562']}, {'input': '498138\\r\\n', 'output': ['13734280958577573']}, {'input': '983242\\r\\n', 'output': ['105618162572849728']}, {'input': '312433\\r\\n', 'output': ['3388650642180089']}, {'input': '783472\\r\\n', 'output': ['53435215015075583']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1000001;\nint p[N], d[N], cnt[10], ans;\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  if (n < 2) {\n    puts(\"0\");\n    return 0;\n  }\n  for (int i = 2; i <= n; ++i) {\n    if (!p[i]) d[++p[i]] = i;\n    for (int j = 1; d[j] * i <= n; ++j) {\n      p[d[j] * i] = 1;\n      if (i % d[j] == 0) break;\n    }\n  }\n  for (int i = 1; i <= p[n]; ++i) {\n    int k = d[i];\n    memset(cnt, 0, sizeof(cnt));\n    while (k <= n) {\n      ++cnt[k % 10];\n      k *= 10;\n      k %= n;\n    }\n    bool can = 0;\n    for (int j = 1; j < 10; ++j) can |= cnt[j] > 0;\n    if (can) ++ans;\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "fc133fe6353089a0ebee08dec919f608", "id": 54, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2000, "testcases": "[{'input': '4\\r\\n', 'output': ['2']}, {'input': '5\\r\\n', 'output': ['6']}, {'input': '6\\r\\n', 'output': ['14']}, {'input': '7\\r\\n', 'output': ['25']}, {'input': '1\\r\\n', 'output': ['0']}, {'input': '8\\r\\n', 'output': ['40']}, {'input': '10\\r\\n', 'output': ['82']}, {'input': '15\\r\\n', 'output': ['328']}, {'input': '16\\r\\n', 'output': ['395']}, {'input': '20\\r\\n', 'output': ['801']}, {'input': '50\\r\\n', 'output': ['13439']}, {'input': '100\\r\\n', 'output': ['110267']}, {'input': '127\\r\\n', 'output': ['226374']}, {'input': '202\\r\\n', 'output': ['911772']}, {'input': '333\\r\\n', 'output': ['4100905']}, {'input': '404\\r\\n', 'output': ['7300516']}, {'input': '411\\r\\n', 'output': ['7699373']}, {'input': '571\\r\\n', 'output': ['20657840']}, {'input': '600\\r\\n', 'output': ['23969924']}, {'input': '771\\r\\n', 'output': ['50875182']}, {'input': '10000\\r\\n', 'output': ['111107314481']}, {'input': '20000\\r\\n', 'output': ['888859064010']}, {'input': '30000\\r\\n', 'output': ['2999966359410']}, {'input': '50000\\r\\n', 'output': ['13888610595721']}, {'input': '99999\\r\\n', 'output': ['111107776644397']}, {'input': '200000\\r\\n', 'output': ['888885923513074']}, {'input': '400000\\r\\n', 'output': ['7111099254185938']}, {'input': '600000\\r\\n', 'output': ['23999973325791164']}, {'input': '800000\\r\\n', 'output': ['56888794064261806']}, {'input': '1000000\\r\\n', 'output': ['111111074060178115']}, {'input': '828282\\r\\n', 'output': ['63138169426585853']}, {'input': '729761\\r\\n', 'output': ['43181611460546198']}, {'input': '653451\\r\\n', 'output': ['31002458021265725']}, {'input': '987572\\r\\n', 'output': ['107019643962508968']}, {'input': '167590\\r\\n', 'output': ['522999083675296']}, {'input': '358712\\r\\n', 'output': ['5128538168895562']}, {'input': '498138\\r\\n', 'output': ['13734280958577573']}, {'input': '983242\\r\\n', 'output': ['105618162572849728']}, {'input': '312433\\r\\n', 'output': ['3388650642180089']}, {'input': '783472\\r\\n', 'output': ['53435215015075583']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios::sync_with_stdio(0);\n  long long mod = 1e9 + 7;\n  long long n, ans = 0;\n  cin >> n;\n  vector<long long> root, root_r;\n  for (long long i = 0; i <= 9; i++) {\n    long long r = i;\n    while (r > 9) r = (r - 1) % 9 + 1;\n    root.push_back(r);\n  }\n  for (long long i = 1; i <= n; i++) {\n    long long r = i;\n    while (r > 9) r = (r - 1) % 9 + 1;\n    if (root[r]!= r) root_r.push_back(root[r]);\n  }\n  vector<vector<long long>> f(2, vector<long long>(n + 2));\n  for (long long i = 0; i <= n + 1; i++) {\n    f[1][i] = (i? i / 10 : n - i + 1);\n    f[0][i] = 1;\n  }\n  for (long long j = 2; j <= n; j++) {\n    for (long long i = 1; i <= n + 1; i++) {\n      f[0][i] = (f[0][i] + f[1][i - 1] * f[0][i - 1]) % mod;\n      f[1][i] = (f[1][i] + f[0][i - 1] * f[1][i - 1]) % mod;\n    }\n  }\n  for (long long i = 1; i <= n; i++) {\n    ans = (ans + f[0][i]) % mod;\n  }\n  for (long long i = 0; i < root.size(); i++) {\n    ans = (ans + f[0][n / root[i] + 1] * n % mod * f[1][root_r.size()] %\n                   mod * (root_r[i] == root[i]? 1 : 0)) %\n          mod;\n  }\n  for (long long i = 0; i < root.size(); i++) {\n    ans = (ans + f[0][n / root[i] + 1] * n % mod * f[1][root_r.size()] %\n                   mod * (root_r[i]!= root[i]? 1 : 0)) %\n          mod;\n  }\n  cout << ans << \"\\n\";\n}\n"}
{"src_uid": "566adc43d2d6df257c26c5f5495a5745", "id": 55, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '2 3 3\\r\\n', 'output': ['1']}, {'input': '2 3 4\\r\\n', 'output': ['4']}, {'input': '9 1 79\\r\\n', 'output': ['8']}, {'input': '9 1 345\\r\\n', 'output': ['8']}, {'input': '9 9 999982045\\r\\n', 'output': ['344373768']}, {'input': '4 42 44\\r\\n', 'output': ['12']}, {'input': '6 43 659\\r\\n', 'output': ['365']}, {'input': '8 54 999992388\\r\\n', 'output': ['741886148']}, {'input': '861 11 17\\r\\n', 'output': ['14']}, {'input': '89 34 119\\r\\n', 'output': ['80']}, {'input': '84 67 999993310\\r\\n', 'output': ['829809148']}, {'input': '9219 537 98\\r\\n', 'output': ['98']}, {'input': '763 582 510\\r\\n', 'output': ['96']}, {'input': '6355 60160 999982994\\r\\n', 'output': ['904671182']}, {'input': '396882961 9936448 752\\r\\n', 'output': ['528']}, {'input': '394292559875270 34297300532732 28\\r\\n', 'output': ['28']}, {'input': '8523703220091 953421047275844 163\\r\\n', 'output': ['30']}, {'input': '713030357739784847 61197710123555584 999992531\\r\\n', 'output': ['207016405']}, {'input': '75903940600326238527 492179977057716178 954\\r\\n', 'output': ['450']}, {'input': '8085477143815539692925721 57241684823084777591460 968\\r\\n', 'output': ['304']}, {'input': '67609394386924890416446 78162115935271414671181267 999987217\\r\\n', 'output': ['926946271']}, {'input': '3351262437484130462277638791970372162118802730187825044167229944871677684706592699530322737272222086076517455404652584348 147310576952932829345029460612849431175622785231399764423717734155248977073541821053441627535488066058597900989095431439 999998948\\r\\n', 'output': ['930694076']}, {'input': '61063034544457239668509642598956869508193198481915116469015956878854905975766584002919896320353661294612971855029955483257741525207429239630069409321331850413146512850720681578339422084340720535114848966742045420860633093949996367883 965415513080902927493169838825380834798188421277961155726185690857844534367611949025561401481462737822765050755128163519122172969767981851117402342816829930821131453945898813517587656899608854645391515043085723743408226445117376493281975889755859761322184701256801 999998603\\r\\n', 'output': ['60342257']}, {'input': '9 1000000000000000000000000000000000000000000000000000000 345\\r\\n', 'output': ['192']}, {'input': '8053063680000000000000000000000000002 268435456000000000000005 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000025 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000026 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000027 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000028 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000029 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000030 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000031 805306368\\r\\n', 'output': ['268435456']}, {'input': '2271048430505293080737093330373572593316324321603522463486966273671353266974713306925326907468317965879775893196923719457524955744 8990615363653447573832140957083458603886706189959668013719622351914533208654357508127820477597609318856255372184258450991108060161 53727872\\r\\n', 'output': ['26470400']}, {'input': '244741007655429712 1 297825872\\r\\n', 'output': ['297825871']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 10000005;\nconst int M = 1000000007;\nconst int M1 = 1000000009;\nconst double eps = 1e-12;\ninline int read() {\n  int x = 0, s = 1, tp = 1;\n  char c = getchar();\n  while (c < '0' || c > '9') {\n    if (c == '-') s = -1;\n    c = getchar();\n  }\n  while (c >= '0' && c <= '9') {\n    x = x * 10 + (c - '0');\n    c = getchar();\n  }\n  return x * s;\n}\nint n, m, b;\ninline void update(int &x, int y) { x = max(x, y); }\ninline bool check(int x, int y) { return x <= y; }\ninline void upc(char c) {\n  int ret = read() - 1, x;\n  for (x = 0; ret; x++) ret /= b, ret %= m;\n  cout << min(x + 1, m) << endl;\n}\ninline void upc1(char c) {\n  int t = read() - 1;\n  int ret;\n  for (ret = 0; t; t /= b) ret++;\n  cout << min(n - ret + 1, m) << endl;\n}\ninline void solve() {\n  cin >> b >> n >> m;\n  if (b == 2)\n    upc1(0);\n  else\n    upc(0);\n}\nsigned main() {\n  solve();\n  return 0;\n}\n"}
{"src_uid": "566adc43d2d6df257c26c5f5495a5745", "id": 55, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '2 3 3\\r\\n', 'output': ['1']}, {'input': '2 3 4\\r\\n', 'output': ['4']}, {'input': '9 1 79\\r\\n', 'output': ['8']}, {'input': '9 1 345\\r\\n', 'output': ['8']}, {'input': '9 9 999982045\\r\\n', 'output': ['344373768']}, {'input': '4 42 44\\r\\n', 'output': ['12']}, {'input': '6 43 659\\r\\n', 'output': ['365']}, {'input': '8 54 999992388\\r\\n', 'output': ['741886148']}, {'input': '861 11 17\\r\\n', 'output': ['14']}, {'input': '89 34 119\\r\\n', 'output': ['80']}, {'input': '84 67 999993310\\r\\n', 'output': ['829809148']}, {'input': '9219 537 98\\r\\n', 'output': ['98']}, {'input': '763 582 510\\r\\n', 'output': ['96']}, {'input': '6355 60160 999982994\\r\\n', 'output': ['904671182']}, {'input': '396882961 9936448 752\\r\\n', 'output': ['528']}, {'input': '394292559875270 34297300532732 28\\r\\n', 'output': ['28']}, {'input': '8523703220091 953421047275844 163\\r\\n', 'output': ['30']}, {'input': '713030357739784847 61197710123555584 999992531\\r\\n', 'output': ['207016405']}, {'input': '75903940600326238527 492179977057716178 954\\r\\n', 'output': ['450']}, {'input': '8085477143815539692925721 57241684823084777591460 968\\r\\n', 'output': ['304']}, {'input': '67609394386924890416446 78162115935271414671181267 999987217\\r\\n', 'output': ['926946271']}, {'input': '3351262437484130462277638791970372162118802730187825044167229944871677684706592699530322737272222086076517455404652584348 147310576952932829345029460612849431175622785231399764423717734155248977073541821053441627535488066058597900989095431439 999998948\\r\\n', 'output': ['930694076']}, {'input': '61063034544457239668509642598956869508193198481915116469015956878854905975766584002919896320353661294612971855029955483257741525207429239630069409321331850413146512850720681578339422084340720535114848966742045420860633093949996367883 965415513080902927493169838825380834798188421277961155726185690857844534367611949025561401481462737822765050755128163519122172969767981851117402342816829930821131453945898813517587656899608854645391515043085723743408226445117376493281975889755859761322184701256801 999998603\\r\\n', 'output': ['60342257']}, {'input': '9 1000000000000000000000000000000000000000000000000000000 345\\r\\n', 'output': ['192']}, {'input': '8053063680000000000000000000000000002 268435456000000000000005 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000025 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000026 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000027 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000028 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000029 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000030 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000031 805306368\\r\\n', 'output': ['268435456']}, {'input': '2271048430505293080737093330373572593316324321603522463486966273671353266974713306925326907468317965879775893196923719457524955744 8990615363653447573832140957083458603886706189959668013719622351914533208654357508127820477597609318856255372184258450991108060161 53727872\\r\\n', 'output': ['26470400']}, {'input': '244741007655429712 1 297825872\\r\\n', 'output': ['297825871']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long b, n, c;\n  cin >> b >> n >> c;\n  long long tot = 0;\n  while (true) {\n    tot = tot + min(c, (b - 1) * (1LL + tot) % c);\n    tot = (tot % c + c) % c;\n    if (tot == 0) break;\n    c = (c - tot) % c;\n    ++n;\n  }\n  cout << ((n == 1? 1LL : 0LL) + (n > 1? b - 1LL : 0LL)) % c << '\\n';\n}\n"}
{"src_uid": "566adc43d2d6df257c26c5f5495a5745", "id": 55, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '2 3 3\\r\\n', 'output': ['1']}, {'input': '2 3 4\\r\\n', 'output': ['4']}, {'input': '9 1 79\\r\\n', 'output': ['8']}, {'input': '9 1 345\\r\\n', 'output': ['8']}, {'input': '9 9 999982045\\r\\n', 'output': ['344373768']}, {'input': '4 42 44\\r\\n', 'output': ['12']}, {'input': '6 43 659\\r\\n', 'output': ['365']}, {'input': '8 54 999992388\\r\\n', 'output': ['741886148']}, {'input': '861 11 17\\r\\n', 'output': ['14']}, {'input': '89 34 119\\r\\n', 'output': ['80']}, {'input': '84 67 999993310\\r\\n', 'output': ['829809148']}, {'input': '9219 537 98\\r\\n', 'output': ['98']}, {'input': '763 582 510\\r\\n', 'output': ['96']}, {'input': '6355 60160 999982994\\r\\n', 'output': ['904671182']}, {'input': '396882961 9936448 752\\r\\n', 'output': ['528']}, {'input': '394292559875270 34297300532732 28\\r\\n', 'output': ['28']}, {'input': '8523703220091 953421047275844 163\\r\\n', 'output': ['30']}, {'input': '713030357739784847 61197710123555584 999992531\\r\\n', 'output': ['207016405']}, {'input': '75903940600326238527 492179977057716178 954\\r\\n', 'output': ['450']}, {'input': '8085477143815539692925721 57241684823084777591460 968\\r\\n', 'output': ['304']}, {'input': '67609394386924890416446 78162115935271414671181267 999987217\\r\\n', 'output': ['926946271']}, {'input': '3351262437484130462277638791970372162118802730187825044167229944871677684706592699530322737272222086076517455404652584348 147310576952932829345029460612849431175622785231399764423717734155248977073541821053441627535488066058597900989095431439 999998948\\r\\n', 'output': ['930694076']}, {'input': '61063034544457239668509642598956869508193198481915116469015956878854905975766584002919896320353661294612971855029955483257741525207429239630069409321331850413146512850720681578339422084340720535114848966742045420860633093949996367883 965415513080902927493169838825380834798188421277961155726185690857844534367611949025561401481462737822765050755128163519122172969767981851117402342816829930821131453945898813517587656899608854645391515043085723743408226445117376493281975889755859761322184701256801 999998603\\r\\n', 'output': ['60342257']}, {'input': '9 1000000000000000000000000000000000000000000000000000000 345\\r\\n', 'output': ['192']}, {'input': '8053063680000000000000000000000000002 268435456000000000000005 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000025 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000026 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000027 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000028 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000029 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000030 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000031 805306368\\r\\n', 'output': ['268435456']}, {'input': '2271048430505293080737093330373572593316324321603522463486966273671353266974713306925326907468317965879775893196923719457524955744 8990615363653447573832140957083458603886706189959668013719622351914533208654357508127820477597609318856255372184258450991108060161 53727872\\r\\n', 'output': ['26470400']}, {'input': '244741007655429712 1 297825872\\r\\n', 'output': ['297825871']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = 1 << 30;\nint main() {\n  string b, n, c;\n  int b_, n_, c_;\n  cin >> b >> n >> c;\n  b_ = stoi(b);\n  n_ = stoi(n);\n  c_ = stoi(c);\n  vector<int> v;\n  v.push_back(1);\n  for (int i = 1; i < n_; i++) {\n    v.push_back(0);\n  }\n  for (long long i = 0; i < (1 << n_); i++) {\n    for (int k = 0; k < n_; k++) {\n      if ((i & (1 << k)) == 0) {\n        v[k] = 0;\n      } else {\n        v[k] = 1;\n      }\n    }\n    long long cur = 0;\n    for (int k = 0; k < n_; k++) {\n      cur *= b_;\n      cur += v[k];\n    }\n    if (cur!= 1 && v[0] == 1) {\n      c_--;\n      if (c_ == 0) {\n        cout << 1 << endl;\n        return 0;\n      }\n    }\n  }\n  cout << c_ << endl;\n  return 0;\n}\n"}
{"src_uid": "566adc43d2d6df257c26c5f5495a5745", "id": 55, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '2 3 3\\r\\n', 'output': ['1']}, {'input': '2 3 4\\r\\n', 'output': ['4']}, {'input': '9 1 79\\r\\n', 'output': ['8']}, {'input': '9 1 345\\r\\n', 'output': ['8']}, {'input': '9 9 999982045\\r\\n', 'output': ['344373768']}, {'input': '4 42 44\\r\\n', 'output': ['12']}, {'input': '6 43 659\\r\\n', 'output': ['365']}, {'input': '8 54 999992388\\r\\n', 'output': ['741886148']}, {'input': '861 11 17\\r\\n', 'output': ['14']}, {'input': '89 34 119\\r\\n', 'output': ['80']}, {'input': '84 67 999993310\\r\\n', 'output': ['829809148']}, {'input': '9219 537 98\\r\\n', 'output': ['98']}, {'input': '763 582 510\\r\\n', 'output': ['96']}, {'input': '6355 60160 999982994\\r\\n', 'output': ['904671182']}, {'input': '396882961 9936448 752\\r\\n', 'output': ['528']}, {'input': '394292559875270 34297300532732 28\\r\\n', 'output': ['28']}, {'input': '8523703220091 953421047275844 163\\r\\n', 'output': ['30']}, {'input': '713030357739784847 61197710123555584 999992531\\r\\n', 'output': ['207016405']}, {'input': '75903940600326238527 492179977057716178 954\\r\\n', 'output': ['450']}, {'input': '8085477143815539692925721 57241684823084777591460 968\\r\\n', 'output': ['304']}, {'input': '67609394386924890416446 78162115935271414671181267 999987217\\r\\n', 'output': ['926946271']}, {'input': '3351262437484130462277638791970372162118802730187825044167229944871677684706592699530322737272222086076517455404652584348 147310576952932829345029460612849431175622785231399764423717734155248977073541821053441627535488066058597900989095431439 999998948\\r\\n', 'output': ['930694076']}, {'input': '61063034544457239668509642598956869508193198481915116469015956878854905975766584002919896320353661294612971855029955483257741525207429239630069409321331850413146512850720681578339422084340720535114848966742045420860633093949996367883 965415513080902927493169838825380834798188421277961155726185690857844534367611949025561401481462737822765050755128163519122172969767981851117402342816829930821131453945898813517587656899608854645391515043085723743408226445117376493281975889755859761322184701256801 999998603\\r\\n', 'output': ['60342257']}, {'input': '9 1000000000000000000000000000000000000000000000000000000 345\\r\\n', 'output': ['192']}, {'input': '8053063680000000000000000000000000002 268435456000000000000005 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000025 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000026 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000027 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000028 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000029 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000030 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000031 805306368\\r\\n', 'output': ['268435456']}, {'input': '2271048430505293080737093330373572593316324321603522463486966273671353266974713306925326907468317965879775893196923719457524955744 8990615363653447573832140957083458603886706189959668013719622351914533208654357508127820477597609318856255372184258450991108060161 53727872\\r\\n', 'output': ['26470400']}, {'input': '244741007655429712 1 297825872\\r\\n', 'output': ['297825871']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long int b, n, c;\nint main() {\n  cin >> b >> n >> c;\n  if (n == 1) {\n    cout << c;\n    return 0;\n  }\n  long long int res = 0;\n  long long int num = 1;\n  while (num <= n) {\n    if (b > c * num) {\n      num *= b - c + 1;\n      res++;\n    } else {\n      res += c - num + 1;\n      num = 0;\n    }\n  }\n  cout << res + 1;\n  return 0;\n}\n"}
{"src_uid": "566adc43d2d6df257c26c5f5495a5745", "id": 55, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '2 3 3\\r\\n', 'output': ['1']}, {'input': '2 3 4\\r\\n', 'output': ['4']}, {'input': '9 1 79\\r\\n', 'output': ['8']}, {'input': '9 1 345\\r\\n', 'output': ['8']}, {'input': '9 9 999982045\\r\\n', 'output': ['344373768']}, {'input': '4 42 44\\r\\n', 'output': ['12']}, {'input': '6 43 659\\r\\n', 'output': ['365']}, {'input': '8 54 999992388\\r\\n', 'output': ['741886148']}, {'input': '861 11 17\\r\\n', 'output': ['14']}, {'input': '89 34 119\\r\\n', 'output': ['80']}, {'input': '84 67 999993310\\r\\n', 'output': ['829809148']}, {'input': '9219 537 98\\r\\n', 'output': ['98']}, {'input': '763 582 510\\r\\n', 'output': ['96']}, {'input': '6355 60160 999982994\\r\\n', 'output': ['904671182']}, {'input': '396882961 9936448 752\\r\\n', 'output': ['528']}, {'input': '394292559875270 34297300532732 28\\r\\n', 'output': ['28']}, {'input': '8523703220091 953421047275844 163\\r\\n', 'output': ['30']}, {'input': '713030357739784847 61197710123555584 999992531\\r\\n', 'output': ['207016405']}, {'input': '75903940600326238527 492179977057716178 954\\r\\n', 'output': ['450']}, {'input': '8085477143815539692925721 57241684823084777591460 968\\r\\n', 'output': ['304']}, {'input': '67609394386924890416446 78162115935271414671181267 999987217\\r\\n', 'output': ['926946271']}, {'input': '3351262437484130462277638791970372162118802730187825044167229944871677684706592699530322737272222086076517455404652584348 147310576952932829345029460612849431175622785231399764423717734155248977073541821053441627535488066058597900989095431439 999998948\\r\\n', 'output': ['930694076']}, {'input': '61063034544457239668509642598956869508193198481915116469015956878854905975766584002919896320353661294612971855029955483257741525207429239630069409321331850413146512850720681578339422084340720535114848966742045420860633093949996367883 965415513080902927493169838825380834798188421277961155726185690857844534367611949025561401481462737822765050755128163519122172969767981851117402342816829930821131453945898813517587656899608854645391515043085723743408226445117376493281975889755859761322184701256801 999998603\\r\\n', 'output': ['60342257']}, {'input': '9 1000000000000000000000000000000000000000000000000000000 345\\r\\n', 'output': ['192']}, {'input': '8053063680000000000000000000000000002 268435456000000000000005 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000025 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000026 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000027 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000028 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000029 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000030 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000031 805306368\\r\\n', 'output': ['268435456']}, {'input': '2271048430505293080737093330373572593316324321603522463486966273671353266974713306925326907468317965879775893196923719457524955744 8990615363653447573832140957083458603886706189959668013719622351914533208654357508127820477597609318856255372184258450991108060161 53727872\\r\\n', 'output': ['26470400']}, {'input': '244741007655429712 1 297825872\\r\\n', 'output': ['297825871']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long int P = 1e9 + 7;\nconst int inf = 1e9;\nconst int mod = 998244353;\nconst int Maxn = 1e6 + 10;\nint n, k, t, i, j, l, r, x, y, m;\nchar ch;\nlong long int a, b, c, d, e, f, g, h;\nmap<pair<long long int, long long int>, long long int> mp;\nstring s, s1;\npair<long long int, long long int> p;\nvoid task() {\n  cin >> a >> b >> c;\n  cout << (c + a - 1) / a - (c + b - 2) / b + 1 << '\\n';\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  task();\n}\n"}
{"src_uid": "98489fe54488dcfb45f8ae7b5c473d88", "id": 56, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': ['2\\r\\n1234\\r\\n'], 'output': ['HHMM']}, {'input': ['2\\r\\n9911\\r\\n'], 'output': ['HMHM']}, {'input': ['2\\r\\n0153\\r\\n'], 'output': ['HHMM']}, {'input': ['3\\r\\n614615\\r\\n'], 'output': ['HHHMMM']}, {'input': ['4\\r\\n21305374\\r\\n'], 'output': ['HHHHMMMM']}, {'input': ['4\\r\\n00013213\\r\\n'], 'output': ['HHHHMMMM']}, {'input': ['1\\r\\n01\\r\\n'], 'output': ['HM']}, {'input': ['1\\r\\n21\\r\\n'], 'output': ['HM']}, {'input': ['1\\r\\n99\\r\\n'], 'output': ['HM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['10\\r\\n89959999998998796989\\r\\n'], 'output': ['HHHHHHMMMMHMMHHMHMMM']}, {'input': ['10\\r\\n99999988899989998889\\r\\n'], 'output': ['HHHHHHHHHMMMHMMMMMMM']}, {'input': ['7\\r\\n10210320200120\\r\\n'], 'output': ['HHHHHMMHMHMMMM']}, {'input': ['18\\r\\n949787136121830145537930861689777414\\r\\n'], 'output': ['HHMHMHHHHHHHMHHHHHHHHMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n956859579789834858167218778893796384\\r\\n'], 'output': ['HHHHHMHHMHHMMHHMHMHHHHHMHMMMMMMMMMMM']}, {'input': ['18\\r\\n789998768896689887879979878577696879\\r\\n'], 'output': ['HHHHMHHHHHMHHHMHHHHHMMHMMMMMMMMMMMMM']}, {'input': ['18\\r\\n899898999999899789998999898998699998\\r\\n'], 'output': ['HHHHHHHHHHHMHMMHHMMMHMMMHMHMMMHMMMMM']}, {'input': ['18\\r\\n998999899889999999999999999999998999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMHMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n520301003123441003000011410650200262\\r\\n'], 'output': ['HHHHHHHHHHHHMMHHHMHHHMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n003003010010211000120021200200013010\\r\\n'], 'output': ['HHMHHMHHHHHHMHHHHHHMHHMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n101011411002041200101000000000001000\\r\\n'], 'output': ['HHHHHHMHHHHHHMHMHHMHMHHMMMMMMMMMMMMM']}, {'input': ['18\\r\\n010000000000010000000000000101001000\\r\\n'], 'output': ['HHHHHHHHHHHHHMHHHHHMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000001000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999899\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMHMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n998877665544332211998877665544332211\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['9\\r\\n998877665544332211\\r\\n'], 'output': ['HMHMHMHMHMHMHMHMHM']}, {'input': ['18\\r\\n999988887777666655554444333322221111\\r\\n'], 'output': ['HHMMHHMMHHMMHHMMHHMMHHMMHHMMHHMMHHMM']}, {'input': ['18\\r\\n111111111111111111111111111111111111\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['9\\r\\n112233445566778899\\r\\n'], 'output': ['HHHHHHHHHMMMMMMMMM']}, {'input': ['18\\r\\n112233445566778899112233445566778899\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHMMHHMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n111122223333444455556666777788889999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['7\\r\\n98887870656634\\r\\n'], 'output': ['HHHMHMMHMHMMHM']}, {'input': ['6\\r\\n389531391995\\r\\n'], 'output': ['HHMHHHHMMMMM']}, {'input': ['7\\r\\n98887870656634\\r\\n'], 'output': ['HHHMHMMHMHMMHM']}, {'input': ['8\\r\\n6770379299275795\\r\\n'], 'output': ['HHHHHHMHMMHMMMMM']}, {'input': ['9\\r\\n256276354396913650\\r\\n'], 'output': ['HHHHMHHHHHMMMMMMMM']}, {'input': ['17\\r\\n0505221537264872903260121660510735\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHMHMMMMMMMMMMMMMMMM']}, {'input': ['16\\r\\n94037617932892444411587756822347\\r\\n'], 'output': ['HHHHHHHHMHHHMHHHMMHHMMMMMMMMMMMM']}, {'input': ['15\\r\\n051911296923361789993851872792\\r\\n'], 'output': ['HHHHHHHMHMHHHHHHHMMMMMMMMMMMMM']}, {'input': ['14\\r\\n1637752215267288357827332779\\r\\n'], 'output': ['HHHHHHHHHHHHHHMMMMMMMMMMMMMM']}, {'input': ['13\\r\\n04432024633126608067252737\\r\\n'], 'output': ['HHHHHHHHMHHHHMMHMMMMMMMMMM']}, {'input': ['12\\r\\n254163163934611135461589\\r\\n'], 'output': ['HHHHHHHHHMHHMHMMMMMMMMMM']}, {'input': ['11\\r\\n3657071886390583694504\\r\\n'], 'output': ['HHHHHHHHHHHMMMMMMMMMMM']}, {'input': ['10\\r\\n27555210523159542624\\r\\n'], 'output': ['HMHHHHHHMHHHMMMMMMMM']}, {'input': ['6\\r\\n389531391995\\r\\n'], 'output': ['HHMHHHHMMMMM']}, {'input': ['5\\r\\n9823921785\\r\\n'], 'output': ['HHHHMMHMMM']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long powe[30000], ans, n, i;\nstring str, temp;\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cin >> n >> str;\n  powe[0] = 1;\n  for (i = 0; i < n; i++) {\n    temp = str[0];\n    for (int j = 1; j <= i; j++) temp += str[j];\n    ans += (powe[i] * (temp[0] - '0')) % 10 + (temp[0] - '0') * 9;\n    for (int j = 1; j <= i + 1; j++) temp[j - 1] = temp[j];\n    temp.erase(temp.end() - 1);\n    ans = max(ans, (temp[0] - '0') * 10 + powe[i] * (temp[1] - '0') % 10);\n    powe[i + 1] = powe[i] * 10 % 1000000007;\n  }\n  for (i = 0; i < n; i++) cout << \"MH\";\n  return 0;\n}\n"}
{"src_uid": "98489fe54488dcfb45f8ae7b5c473d88", "id": 56, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': ['2\\r\\n1234\\r\\n'], 'output': ['HHMM']}, {'input': ['2\\r\\n9911\\r\\n'], 'output': ['HMHM']}, {'input': ['2\\r\\n0153\\r\\n'], 'output': ['HHMM']}, {'input': ['3\\r\\n614615\\r\\n'], 'output': ['HHHMMM']}, {'input': ['4\\r\\n21305374\\r\\n'], 'output': ['HHHHMMMM']}, {'input': ['4\\r\\n00013213\\r\\n'], 'output': ['HHHHMMMM']}, {'input': ['1\\r\\n01\\r\\n'], 'output': ['HM']}, {'input': ['1\\r\\n21\\r\\n'], 'output': ['HM']}, {'input': ['1\\r\\n99\\r\\n'], 'output': ['HM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['10\\r\\n89959999998998796989\\r\\n'], 'output': ['HHHHHHMMMMHMMHHMHMMM']}, {'input': ['10\\r\\n99999988899989998889\\r\\n'], 'output': ['HHHHHHHHHMMMHMMMMMMM']}, {'input': ['7\\r\\n10210320200120\\r\\n'], 'output': ['HHHHHMMHMHMMMM']}, {'input': ['18\\r\\n949787136121830145537930861689777414\\r\\n'], 'output': ['HHMHMHHHHHHHMHHHHHHHHMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n956859579789834858167218778893796384\\r\\n'], 'output': ['HHHHHMHHMHHMMHHMHMHHHHHMHMMMMMMMMMMM']}, {'input': ['18\\r\\n789998768896689887879979878577696879\\r\\n'], 'output': ['HHHHMHHHHHMHHHMHHHHHMMHMMMMMMMMMMMMM']}, {'input': ['18\\r\\n899898999999899789998999898998699998\\r\\n'], 'output': ['HHHHHHHHHHHMHMMHHMMMHMMMHMHMMMHMMMMM']}, {'input': ['18\\r\\n998999899889999999999999999999998999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMHMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n520301003123441003000011410650200262\\r\\n'], 'output': ['HHHHHHHHHHHHMMHHHMHHHMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n003003010010211000120021200200013010\\r\\n'], 'output': ['HHMHHMHHHHHHMHHHHHHMHHMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n101011411002041200101000000000001000\\r\\n'], 'output': ['HHHHHHMHHHHHHMHMHHMHMHHMMMMMMMMMMMMM']}, {'input': ['18\\r\\n010000000000010000000000000101001000\\r\\n'], 'output': ['HHHHHHHHHHHHHMHHHHHMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000001000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999899\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMHMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n998877665544332211998877665544332211\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['9\\r\\n998877665544332211\\r\\n'], 'output': ['HMHMHMHMHMHMHMHMHM']}, {'input': ['18\\r\\n999988887777666655554444333322221111\\r\\n'], 'output': ['HHMMHHMMHHMMHHMMHHMMHHMMHHMMHHMMHHMM']}, {'input': ['18\\r\\n111111111111111111111111111111111111\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['9\\r\\n112233445566778899\\r\\n'], 'output': ['HHHHHHHHHMMMMMMMMM']}, {'input': ['18\\r\\n112233445566778899112233445566778899\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHMMHHMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n111122223333444455556666777788889999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['7\\r\\n98887870656634\\r\\n'], 'output': ['HHHMHMMHMHMMHM']}, {'input': ['6\\r\\n389531391995\\r\\n'], 'output': ['HHMHHHHMMMMM']}, {'input': ['7\\r\\n98887870656634\\r\\n'], 'output': ['HHHMHMMHMHMMHM']}, {'input': ['8\\r\\n6770379299275795\\r\\n'], 'output': ['HHHHHHMHMMHMMMMM']}, {'input': ['9\\r\\n256276354396913650\\r\\n'], 'output': ['HHHHMHHHHHMMMMMMMM']}, {'input': ['17\\r\\n0505221537264872903260121660510735\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHMHMMMMMMMMMMMMMMMM']}, {'input': ['16\\r\\n94037617932892444411587756822347\\r\\n'], 'output': ['HHHHHHHHMHHHMHHHMMHHMMMMMMMMMMMM']}, {'input': ['15\\r\\n051911296923361789993851872792\\r\\n'], 'output': ['HHHHHHHMHMHHHHHHHMMMMMMMMMMMMM']}, {'input': ['14\\r\\n1637752215267288357827332779\\r\\n'], 'output': ['HHHHHHHHHHHHHHMMMMMMMMMMMMMM']}, {'input': ['13\\r\\n04432024633126608067252737\\r\\n'], 'output': ['HHHHHHHHMHHHHMMHMMMMMMMMMM']}, {'input': ['12\\r\\n254163163934611135461589\\r\\n'], 'output': ['HHHHHHHHHMHHMHMMMMMMMMMM']}, {'input': ['11\\r\\n3657071886390583694504\\r\\n'], 'output': ['HHHHHHHHHHHMMMMMMMMMMM']}, {'input': ['10\\r\\n27555210523159542624\\r\\n'], 'output': ['HMHHHHHHMHHHMMMMMMMM']}, {'input': ['6\\r\\n389531391995\\r\\n'], 'output': ['HHMHHHHMMMMM']}, {'input': ['5\\r\\n9823921785\\r\\n'], 'output': ['HHHHMMHMMM']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a, b, n, m, k, l, i, j, ans1[20], ans2[20];\nchar s[40];\nint dp1[40][20], dp2[40][20];\nint main() {\n  scanf(\"%d\", &n);\n  scanf(\"%s\", s + 1);\n  a = strlen(s + 1);\n  m = a / 2;\n  b = a - m;\n  for (i = 1; i <= m; i++) ans1[i] = ans2[i] = -1;\n  for (i = 1; i <= b; i++) {\n    for (j = 0; j < i; j++) {\n      if (s[i] > s[j]) dp1[i][j] = max(dp1[i][j], dp1[j][j] + 1);\n    }\n  }\n  for (i = b; i > 0; i--) {\n    for (j = 0; j < i; j++) {\n      if (s[i] > s[j]) dp2[i][j] = max(dp2[i][j], dp2[j][j] + 1);\n    }\n  }\n  i = m;\n  while (i!= 0) {\n    k = 1;\n    while (k < b && dp2[k][k] < dp1[i][i]) k++;\n    l = i - k;\n    ans1[i] = ans2[l] = max(dp1[i][i], k);\n    ans1[l] = ans2[i] = max(dp2[k][k], b - k);\n    i = l;\n  }\n  for (i = 1; i <= m; i++)\n    if (ans1[i]!= -1) {\n      for (j = 1; j <= n; j++) putchar(\"HM\"[j <= ans1[i]]);\n      for (j = 1; j <= n; j++) putchar(\"HM\"[j <= ans2[i]]);\n      puts(\"\");\n      return 0;\n    }\n  for (i = 1; i <= m; i++) putchar(\"HH\");\n  for (i = 1; i <= n; i++) putchar(\"MM\");\n  puts(\"\");\n  return 0;\n}\n"}
{"src_uid": "98489fe54488dcfb45f8ae7b5c473d88", "id": 56, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': ['2\\r\\n1234\\r\\n'], 'output': ['HHMM']}, {'input': ['2\\r\\n9911\\r\\n'], 'output': ['HMHM']}, {'input': ['2\\r\\n0153\\r\\n'], 'output': ['HHMM']}, {'input': ['3\\r\\n614615\\r\\n'], 'output': ['HHHMMM']}, {'input': ['4\\r\\n21305374\\r\\n'], 'output': ['HHHHMMMM']}, {'input': ['4\\r\\n00013213\\r\\n'], 'output': ['HHHHMMMM']}, {'input': ['1\\r\\n01\\r\\n'], 'output': ['HM']}, {'input': ['1\\r\\n21\\r\\n'], 'output': ['HM']}, {'input': ['1\\r\\n99\\r\\n'], 'output': ['HM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['10\\r\\n89959999998998796989\\r\\n'], 'output': ['HHHHHHMMMMHMMHHMHMMM']}, {'input': ['10\\r\\n99999988899989998889\\r\\n'], 'output': ['HHHHHHHHHMMMHMMMMMMM']}, {'input': ['7\\r\\n10210320200120\\r\\n'], 'output': ['HHHHHMMHMHMMMM']}, {'input': ['18\\r\\n949787136121830145537930861689777414\\r\\n'], 'output': ['HHMHMHHHHHHHMHHHHHHHHMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n956859579789834858167218778893796384\\r\\n'], 'output': ['HHHHHMHHMHHMMHHMHMHHHHHMHMMMMMMMMMMM']}, {'input': ['18\\r\\n789998768896689887879979878577696879\\r\\n'], 'output': ['HHHHMHHHHHMHHHMHHHHHMMHMMMMMMMMMMMMM']}, {'input': ['18\\r\\n899898999999899789998999898998699998\\r\\n'], 'output': ['HHHHHHHHHHHMHMMHHMMMHMMMHMHMMMHMMMMM']}, {'input': ['18\\r\\n998999899889999999999999999999998999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMHMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n520301003123441003000011410650200262\\r\\n'], 'output': ['HHHHHHHHHHHHMMHHHMHHHMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n003003010010211000120021200200013010\\r\\n'], 'output': ['HHMHHMHHHHHHMHHHHHHMHHMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n101011411002041200101000000000001000\\r\\n'], 'output': ['HHHHHHMHHHHHHMHMHHMHMHHMMMMMMMMMMMMM']}, {'input': ['18\\r\\n010000000000010000000000000101001000\\r\\n'], 'output': ['HHHHHHHHHHHHHMHHHHHMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000001000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999899\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMHMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n998877665544332211998877665544332211\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['9\\r\\n998877665544332211\\r\\n'], 'output': ['HMHMHMHMHMHMHMHMHM']}, {'input': ['18\\r\\n999988887777666655554444333322221111\\r\\n'], 'output': ['HHMMHHMMHHMMHHMMHHMMHHMMHHMMHHMMHHMM']}, {'input': ['18\\r\\n111111111111111111111111111111111111\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['9\\r\\n112233445566778899\\r\\n'], 'output': ['HHHHHHHHHMMMMMMMMM']}, {'input': ['18\\r\\n112233445566778899112233445566778899\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHMMHHMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n111122223333444455556666777788889999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['7\\r\\n98887870656634\\r\\n'], 'output': ['HHHMHMMHMHMMHM']}, {'input': ['6\\r\\n389531391995\\r\\n'], 'output': ['HHMHHHHMMMMM']}, {'input': ['7\\r\\n98887870656634\\r\\n'], 'output': ['HHHMHMMHMHMMHM']}, {'input': ['8\\r\\n6770379299275795\\r\\n'], 'output': ['HHHHHHMHMMHMMMMM']}, {'input': ['9\\r\\n256276354396913650\\r\\n'], 'output': ['HHHHMHHHHHMMMMMMMM']}, {'input': ['17\\r\\n0505221537264872903260121660510735\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHMHMMMMMMMMMMMMMMMM']}, {'input': ['16\\r\\n94037617932892444411587756822347\\r\\n'], 'output': ['HHHHHHHHMHHHMHHHMMHHMMMMMMMMMMMM']}, {'input': ['15\\r\\n051911296923361789993851872792\\r\\n'], 'output': ['HHHHHHHMHMHHHHHHHMMMMMMMMMMMMM']}, {'input': ['14\\r\\n1637752215267288357827332779\\r\\n'], 'output': ['HHHHHHHHHHHHHHMMMMMMMMMMMMMM']}, {'input': ['13\\r\\n04432024633126608067252737\\r\\n'], 'output': ['HHHHHHHHMHHHHMMHMMMMMMMMMM']}, {'input': ['12\\r\\n254163163934611135461589\\r\\n'], 'output': ['HHHHHHHHHMHHMHMMMMMMMMMM']}, {'input': ['11\\r\\n3657071886390583694504\\r\\n'], 'output': ['HHHHHHHHHHHMMMMMMMMMMM']}, {'input': ['10\\r\\n27555210523159542624\\r\\n'], 'output': ['HMHHHHHHMHHHMMMMMMMM']}, {'input': ['6\\r\\n389531391995\\r\\n'], 'output': ['HHMHHHHMMMMM']}, {'input': ['5\\r\\n9823921785\\r\\n'], 'output': ['HHHHMMHMMM']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a[20];\nstring s1, s2;\nchar res[20];\nint n, i;\nvoid dfs(int x, int y, int k, int l) {\n  if (l == n) {\n    for (int i = 0; i < n; i++) {\n      res[2 * i] = (a[x] / l) % 10 + '0';\n      a[x] %= l;\n      res[2 * i + 1] = a[y] / k + '0';\n      a[y] %= k;\n    }\n    if (s1 + res < s2) {\n      s1 = s1 + res;\n      cout << \"H\";\n    } else {\n      s2 = s2 + res;\n      cout << \"M\";\n    }\n    cout << endl;\n    return;\n  }\n  int lx = max(l, a[x]);\n  int rx = a[x] - lx + 1;\n  int ky = max(k, a[y]);\n  int ry = a[y] - ky + 1;\n  for (int i = 0; i < lx; i++) {\n    a[x]--;\n    dfs(x, y, k, l);\n    a[x]++;\n  }\n  for (int i = 0; i < rx; i++) {\n    a[y]--;\n    dfs(x, y, k, l + 1);\n    a[y]++;\n  }\n  for (int i = 0; i < ky; i++) {\n    a[y]--;\n    dfs(x, y, k + 1, l);\n    a[y]++;\n  }\n  for (int i = 0; i < ry; i++) {\n    a[x]--;\n    dfs(x, y, k + 1, l + 1);\n    a[x]++;\n  }\n}\nint main() {\n  cin >> n;\n  cin >> a[1];\n  for (int i = 2; i <= n * 2; i++) cin >> a[i];\n  s1 = \"0\";\n  s2 = \"0\";\n  dfs(1, 2, 1, 1);\n  return 0;\n}\n"}
{"src_uid": "98489fe54488dcfb45f8ae7b5c473d88", "id": 56, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': ['2\\r\\n1234\\r\\n'], 'output': ['HHMM']}, {'input': ['2\\r\\n9911\\r\\n'], 'output': ['HMHM']}, {'input': ['2\\r\\n0153\\r\\n'], 'output': ['HHMM']}, {'input': ['3\\r\\n614615\\r\\n'], 'output': ['HHHMMM']}, {'input': ['4\\r\\n21305374\\r\\n'], 'output': ['HHHHMMMM']}, {'input': ['4\\r\\n00013213\\r\\n'], 'output': ['HHHHMMMM']}, {'input': ['1\\r\\n01\\r\\n'], 'output': ['HM']}, {'input': ['1\\r\\n21\\r\\n'], 'output': ['HM']}, {'input': ['1\\r\\n99\\r\\n'], 'output': ['HM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['10\\r\\n89959999998998796989\\r\\n'], 'output': ['HHHHHHMMMMHMMHHMHMMM']}, {'input': ['10\\r\\n99999988899989998889\\r\\n'], 'output': ['HHHHHHHHHMMMHMMMMMMM']}, {'input': ['7\\r\\n10210320200120\\r\\n'], 'output': ['HHHHHMMHMHMMMM']}, {'input': ['18\\r\\n949787136121830145537930861689777414\\r\\n'], 'output': ['HHMHMHHHHHHHMHHHHHHHHMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n956859579789834858167218778893796384\\r\\n'], 'output': ['HHHHHMHHMHHMMHHMHMHHHHHMHMMMMMMMMMMM']}, {'input': ['18\\r\\n789998768896689887879979878577696879\\r\\n'], 'output': ['HHHHMHHHHHMHHHMHHHHHMMHMMMMMMMMMMMMM']}, {'input': ['18\\r\\n899898999999899789998999898998699998\\r\\n'], 'output': ['HHHHHHHHHHHMHMMHHMMMHMMMHMHMMMHMMMMM']}, {'input': ['18\\r\\n998999899889999999999999999999998999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMHMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n520301003123441003000011410650200262\\r\\n'], 'output': ['HHHHHHHHHHHHMMHHHMHHHMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n003003010010211000120021200200013010\\r\\n'], 'output': ['HHMHHMHHHHHHMHHHHHHMHHMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n101011411002041200101000000000001000\\r\\n'], 'output': ['HHHHHHMHHHHHHMHMHHMHMHHMMMMMMMMMMMMM']}, {'input': ['18\\r\\n010000000000010000000000000101001000\\r\\n'], 'output': ['HHHHHHHHHHHHHMHHHHHMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000001000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999899\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMHMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n998877665544332211998877665544332211\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['9\\r\\n998877665544332211\\r\\n'], 'output': ['HMHMHMHMHMHMHMHMHM']}, {'input': ['18\\r\\n999988887777666655554444333322221111\\r\\n'], 'output': ['HHMMHHMMHHMMHHMMHHMMHHMMHHMMHHMMHHMM']}, {'input': ['18\\r\\n111111111111111111111111111111111111\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['9\\r\\n112233445566778899\\r\\n'], 'output': ['HHHHHHHHHMMMMMMMMM']}, {'input': ['18\\r\\n112233445566778899112233445566778899\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHMMHHMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n111122223333444455556666777788889999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['7\\r\\n98887870656634\\r\\n'], 'output': ['HHHMHMMHMHMMHM']}, {'input': ['6\\r\\n389531391995\\r\\n'], 'output': ['HHMHHHHMMMMM']}, {'input': ['7\\r\\n98887870656634\\r\\n'], 'output': ['HHHMHMMHMHMMHM']}, {'input': ['8\\r\\n6770379299275795\\r\\n'], 'output': ['HHHHHHMHMMHMMMMM']}, {'input': ['9\\r\\n256276354396913650\\r\\n'], 'output': ['HHHHMHHHHHMMMMMMMM']}, {'input': ['17\\r\\n0505221537264872903260121660510735\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHMHMMMMMMMMMMMMMMMM']}, {'input': ['16\\r\\n94037617932892444411587756822347\\r\\n'], 'output': ['HHHHHHHHMHHHMHHHMMHHMMMMMMMMMMMM']}, {'input': ['15\\r\\n051911296923361789993851872792\\r\\n'], 'output': ['HHHHHHHMHMHHHHHHHMMMMMMMMMMMMM']}, {'input': ['14\\r\\n1637752215267288357827332779\\r\\n'], 'output': ['HHHHHHHHHHHHHHMMMMMMMMMMMMMM']}, {'input': ['13\\r\\n04432024633126608067252737\\r\\n'], 'output': ['HHHHHHHHMHHHHMMHMMMMMMMMMM']}, {'input': ['12\\r\\n254163163934611135461589\\r\\n'], 'output': ['HHHHHHHHHMHHMHMMMMMMMMMM']}, {'input': ['11\\r\\n3657071886390583694504\\r\\n'], 'output': ['HHHHHHHHHHHMMMMMMMMMMM']}, {'input': ['10\\r\\n27555210523159542624\\r\\n'], 'output': ['HMHHHHHHMHHHMMMMMMMM']}, {'input': ['6\\r\\n389531391995\\r\\n'], 'output': ['HHMHHHHMMMMM']}, {'input': ['5\\r\\n9823921785\\r\\n'], 'output': ['HHHHMMHMMM']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nstring s;\nint dp[30][5][2];\nchar ans[30][5][2];\nint solve(int x, int k, int v) {\n  if (x == n * 2) return 0;\n  if (k == 5) {\n    dp[x][k][v] = -1;\n    return -1;\n  }\n  if (dp[x][k][v]!= -1) return dp[x][k][v];\n  int mx = -1;\n  for (int i = 0; i < 10; i++) {\n    int h = max(0, (i > 0? i * 10 : 0)) + v * 9;\n    int l = min(9, (i > 0? i * 10 + 9 : 9)) + v * 9;\n    if (s[x] - '0' >= i && s[x] - '0' <= max(0, i + 9) && i * 10 + k <= l)\n      mx = max(mx, solve(x + 1, k + 1, v * (i <= s[x] - '0')) + h);\n  }\n  return dp[x][k][v] = mx;\n}\nchar solve2(int x, int k, int v) {\n  if (x == n * 2) return 0;\n  if (k == 5) return 0;\n  for (int i = 0; i < 10; i++) {\n    int h = max(0, (i > 0? i * 10 : 0)) + v * 9;\n    int l = min(9, (i > 0? i * 10 + 9 : 9)) + v * 9;\n    if (s[x] - '0' >= i && s[x] - '0' <= max(0, i + 9) && i * 10 + k <= l)\n      return ans[x][k][v] = solve2(x + 1, k + 1, v * (i <= s[x] - '0'));\n  }\n  return ans[x][k][v];\n}\nint main() {\n  cin >> n;\n  cin >> s;\n  if (n % 2 == 1) {\n    cout << \"H\";\n    for (int i = 0; i < n - 1; i++) cout << \"HM\";\n    cout << endl;\n    return 0;\n  }\n  memset(dp, -1, sizeof dp);\n  solve(0, 0, 0);\n  for (int i = 0; i < n * 2; i++)\n    for (int j = 0; j < 5; j++)\n      for (int k = 0; k < 2; k++) {\n        int h = max(0, (k? k * 10 : 0)) + dp[i][j][k] * 9;\n        int l = min(9, (k? k * 10 + 9 : 9)) + dp[i][j][k] * 9;\n        for (int v = 1; v <= 9; v++) {\n          if (v * 9 + j <= l && v * 9 + j >= h &&\n              s[i] - '0' >= v && s[i] - '0' <= max(0, v + 9)) {\n            ans[i][j][k] = solve2(i + 1, j, k * (v <= s[i] - '0'));\n            break;\n          }\n        }\n      }\n  cout << \"H\";\n  for (int i = 0; i < n; i++) cout << ans[i * 2][0][0] << ans[i * 2][0][1];\n  cout << endl;\n  for (int i = 0; i < n; i++)\n    cout << ans[i * 2 + 1][0][0] << ans[i * 2 + 1][0][1];\n  return 0;\n}\n"}
{"src_uid": "98489fe54488dcfb45f8ae7b5c473d88", "id": 56, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': ['2\\r\\n1234\\r\\n'], 'output': ['HHMM']}, {'input': ['2\\r\\n9911\\r\\n'], 'output': ['HMHM']}, {'input': ['2\\r\\n0153\\r\\n'], 'output': ['HHMM']}, {'input': ['3\\r\\n614615\\r\\n'], 'output': ['HHHMMM']}, {'input': ['4\\r\\n21305374\\r\\n'], 'output': ['HHHHMMMM']}, {'input': ['4\\r\\n00013213\\r\\n'], 'output': ['HHHHMMMM']}, {'input': ['1\\r\\n01\\r\\n'], 'output': ['HM']}, {'input': ['1\\r\\n21\\r\\n'], 'output': ['HM']}, {'input': ['1\\r\\n99\\r\\n'], 'output': ['HM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['10\\r\\n89959999998998796989\\r\\n'], 'output': ['HHHHHHMMMMHMMHHMHMMM']}, {'input': ['10\\r\\n99999988899989998889\\r\\n'], 'output': ['HHHHHHHHHMMMHMMMMMMM']}, {'input': ['7\\r\\n10210320200120\\r\\n'], 'output': ['HHHHHMMHMHMMMM']}, {'input': ['18\\r\\n949787136121830145537930861689777414\\r\\n'], 'output': ['HHMHMHHHHHHHMHHHHHHHHMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n956859579789834858167218778893796384\\r\\n'], 'output': ['HHHHHMHHMHHMMHHMHMHHHHHMHMMMMMMMMMMM']}, {'input': ['18\\r\\n789998768896689887879979878577696879\\r\\n'], 'output': ['HHHHMHHHHHMHHHMHHHHHMMHMMMMMMMMMMMMM']}, {'input': ['18\\r\\n899898999999899789998999898998699998\\r\\n'], 'output': ['HHHHHHHHHHHMHMMHHMMMHMMMHMHMMMHMMMMM']}, {'input': ['18\\r\\n998999899889999999999999999999998999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMHMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n520301003123441003000011410650200262\\r\\n'], 'output': ['HHHHHHHHHHHHMMHHHMHHHMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n003003010010211000120021200200013010\\r\\n'], 'output': ['HHMHHMHHHHHHMHHHHHHMHHMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n101011411002041200101000000000001000\\r\\n'], 'output': ['HHHHHHMHHHHHHMHMHHMHMHHMMMMMMMMMMMMM']}, {'input': ['18\\r\\n010000000000010000000000000101001000\\r\\n'], 'output': ['HHHHHHHHHHHHHMHHHHHMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000001000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999899\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMHMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n998877665544332211998877665544332211\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['9\\r\\n998877665544332211\\r\\n'], 'output': ['HMHMHMHMHMHMHMHMHM']}, {'input': ['18\\r\\n999988887777666655554444333322221111\\r\\n'], 'output': ['HHMMHHMMHHMMHHMMHHMMHHMMHHMMHHMMHHMM']}, {'input': ['18\\r\\n111111111111111111111111111111111111\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['9\\r\\n112233445566778899\\r\\n'], 'output': ['HHHHHHHHHMMMMMMMMM']}, {'input': ['18\\r\\n112233445566778899112233445566778899\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHMMHHMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n111122223333444455556666777788889999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['7\\r\\n98887870656634\\r\\n'], 'output': ['HHHMHMMHMHMMHM']}, {'input': ['6\\r\\n389531391995\\r\\n'], 'output': ['HHMHHHHMMMMM']}, {'input': ['7\\r\\n98887870656634\\r\\n'], 'output': ['HHHMHMMHMHMMHM']}, {'input': ['8\\r\\n6770379299275795\\r\\n'], 'output': ['HHHHHHMHMMHMMMMM']}, {'input': ['9\\r\\n256276354396913650\\r\\n'], 'output': ['HHHHMHHHHHMMMMMMMM']}, {'input': ['17\\r\\n0505221537264872903260121660510735\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHMHMMMMMMMMMMMMMMMM']}, {'input': ['16\\r\\n94037617932892444411587756822347\\r\\n'], 'output': ['HHHHHHHHMHHHMHHHMMHHMMMMMMMMMMMM']}, {'input': ['15\\r\\n051911296923361789993851872792\\r\\n'], 'output': ['HHHHHHHMHMHHHHHHHMMMMMMMMMMMMM']}, {'input': ['14\\r\\n1637752215267288357827332779\\r\\n'], 'output': ['HHHHHHHHHHHHHHMMMMMMMMMMMMMM']}, {'input': ['13\\r\\n04432024633126608067252737\\r\\n'], 'output': ['HHHHHHHHMHHHHMMHMMMMMMMMMM']}, {'input': ['12\\r\\n254163163934611135461589\\r\\n'], 'output': ['HHHHHHHHHMHHMHMMMMMMMMMM']}, {'input': ['11\\r\\n3657071886390583694504\\r\\n'], 'output': ['HHHHHHHHHHHMMMMMMMMMMM']}, {'input': ['10\\r\\n27555210523159542624\\r\\n'], 'output': ['HMHHHHHHMHHHMMMMMMMM']}, {'input': ['6\\r\\n389531391995\\r\\n'], 'output': ['HHMHHHHMMMMM']}, {'input': ['5\\r\\n9823921785\\r\\n'], 'output': ['HHHHMMHMMM']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nvoid rec(int n, int m, string& a, string& b, char x, char y, string& ans,\n         int p = 1) {\n  if (n == 0) {\n    if (p == 1)\n      ans += y;\n    else\n      ans += x;\n    return;\n  }\n  for (int i = 1; i < m; i++) {\n    if (a[i] >= x) {\n      ans += y;\n      a.erase(a.begin() + i);\n      if (a.size() == 0) a.push_back('0');\n      rec(n - 1, m - i, a, b, x, y, ans, p + 1);\n      ans.pop_back();\n      a.insert(a.begin() + i, x);\n    }\n  }\n}\nint main() {\n  int n;\n  cin >> n;\n  string a, b;\n  cin >> a;\n  b = a;\n  reverse(a.begin(), a.end());\n  string ans;\n  rec(n, a.size(), a, b, '1', '9', ans);\n  reverse(ans.begin(), ans.end());\n  cout << ans;\n}\n"}
{"src_uid": "aad7ebf4fa919fae78bfc878e47e483c", "id": 57, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '3 3\\r\\n', 'output': ['12\\r\\n']}, {'input': '1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2 2\\r\\n', 'output': ['5\\r\\n']}, {'input': '5 2\\r\\n', 'output': ['17\\r\\n']}, {'input': '2 1\\r\\n', 'output': ['3\\r\\n']}, {'input': '2 3\\r\\n', 'output': ['6\\r\\n']}, {'input': '3 2\\r\\n', 'output': ['9\\r\\n']}, {'input': '1 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 1\\r\\n', 'output': ['5\\r\\n']}, {'input': '2 5000000\\r\\n', 'output': ['7\\r\\n']}, {'input': '4 4\\r\\n', 'output': ['23\\r\\n']}, {'input': '5 10\\r\\n', 'output': ['59\\r\\n']}, {'input': '10 5\\r\\n', 'output': ['86\\r\\n']}, {'input': '10 10\\r\\n', 'output': ['159\\r\\n']}, {'input': '6 36\\r\\n', 'output': ['151\\r\\n']}, {'input': '6 35\\r\\n', 'output': ['151\\r\\n']}, {'input': '6 37\\r\\n', 'output': ['151\\r\\n']}, {'input': '50 10\\r\\n', 'output': ['959\\r\\n']}, {'input': '100 17\\r\\n', 'output': ['3305\\r\\n']}, {'input': '56 46\\r\\n', 'output': ['4718\\r\\n']}, {'input': '15 5000000\\r\\n', 'output': ['2269\\r\\n']}, {'input': '5000000 5000000\\r\\n', 'output': ['49985062679840\\r\\n']}, {'input': '2000 4000000\\r\\n', 'output': ['5333335999\\r\\n']}, {'input': '2000 4000010\\r\\n', 'output': ['5333335999\\r\\n']}, {'input': '2000 3999993\\r\\n', 'output': ['5333335991\\r\\n']}, {'input': '5000000 16\\r\\n', 'output': ['159999914\\r\\n']}, {'input': '4991748 4783476\\r\\n', 'output': ['47741835370053\\r\\n']}, {'input': '4799983 5000\\r\\n', 'output': ['47999345584\\r\\n']}, {'input': '4000000 2000\\r\\n', 'output': ['15999876436\\r\\n']}, {'input': '4999993 1\\r\\n', 'output': ['9999985\\r\\n']}, {'input': '4999696 3\\r\\n', 'output': ['29998170\\r\\n']}, {'input': '1 4999696\\r\\n', 'output': ['1\\r\\n']}, {'input': '5 4999697\\r\\n', 'output': ['89\\r\\n']}, {'input': '145675 98345\\r\\n', 'output': ['28611293247\\r\\n']}, {'input': '100 10000\\r\\n', 'output': ['666799\\r\\n']}, {'input': '3957602 4953270\\r\\n', 'output': ['39191413995652\\r\\n']}, {'input': '3829084 1534\\r\\n', 'output': ['11747546512\\r\\n']}, {'input': '8765 4937657\\r\\n', 'output': ['71920277547\\r\\n']}, {'input': '4888521 4888521\\r\\n', 'output': ['47780834303355\\r\\n']}, {'input': '4888522 4888521\\r\\n', 'output': ['47780844080397\\r\\n']}, {'input': '4888521 4888522\\r\\n', 'output': ['47780844075975\\r\\n']}, {'input': '4888520 4888521\\r\\n', 'output': ['47780824526313\\r\\n']}, {'input': '4888521 4888520\\r\\n', 'output': ['47780824530760\\r\\n']}, {'input': '2211 4888521\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '2210 4888521\\r\\n', 'output': ['7195910279\\r\\n']}, {'input': '2212 4888521\\r\\n', 'output': ['7215455655\\r\\n']}, {'input': '2211 4888520\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '2211 4888522\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '3918476 1038587\\r\\n', 'output': ['8137939762176\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nint a[2000006];\nint main() {\n  int n, m;\n  scanf(\"%d%d\", &n, &m);\n  int ans = 0;\n  for (int i = 1; i <= m; ++i) {\n    double r = sqrt(i);\n    if (fabs(r - int(r)) < 1e-10) {\n      int j = int(r);\n      if (j * j == i && j >= 1 && j <= n) ++ans;\n    }\n  }\n  for (int i = 1; i <= m; ++i) {\n    int j = i * i - 1;\n    if (j <= 0) continue;\n    j = int(sqrt(double(j)));\n    if (j * j == i && j >= 1 && j <= n) ++ans;\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "aad7ebf4fa919fae78bfc878e47e483c", "id": 57, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '3 3\\r\\n', 'output': ['12\\r\\n']}, {'input': '1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2 2\\r\\n', 'output': ['5\\r\\n']}, {'input': '5 2\\r\\n', 'output': ['17\\r\\n']}, {'input': '2 1\\r\\n', 'output': ['3\\r\\n']}, {'input': '2 3\\r\\n', 'output': ['6\\r\\n']}, {'input': '3 2\\r\\n', 'output': ['9\\r\\n']}, {'input': '1 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 1\\r\\n', 'output': ['5\\r\\n']}, {'input': '2 5000000\\r\\n', 'output': ['7\\r\\n']}, {'input': '4 4\\r\\n', 'output': ['23\\r\\n']}, {'input': '5 10\\r\\n', 'output': ['59\\r\\n']}, {'input': '10 5\\r\\n', 'output': ['86\\r\\n']}, {'input': '10 10\\r\\n', 'output': ['159\\r\\n']}, {'input': '6 36\\r\\n', 'output': ['151\\r\\n']}, {'input': '6 35\\r\\n', 'output': ['151\\r\\n']}, {'input': '6 37\\r\\n', 'output': ['151\\r\\n']}, {'input': '50 10\\r\\n', 'output': ['959\\r\\n']}, {'input': '100 17\\r\\n', 'output': ['3305\\r\\n']}, {'input': '56 46\\r\\n', 'output': ['4718\\r\\n']}, {'input': '15 5000000\\r\\n', 'output': ['2269\\r\\n']}, {'input': '5000000 5000000\\r\\n', 'output': ['49985062679840\\r\\n']}, {'input': '2000 4000000\\r\\n', 'output': ['5333335999\\r\\n']}, {'input': '2000 4000010\\r\\n', 'output': ['5333335999\\r\\n']}, {'input': '2000 3999993\\r\\n', 'output': ['5333335991\\r\\n']}, {'input': '5000000 16\\r\\n', 'output': ['159999914\\r\\n']}, {'input': '4991748 4783476\\r\\n', 'output': ['47741835370053\\r\\n']}, {'input': '4799983 5000\\r\\n', 'output': ['47999345584\\r\\n']}, {'input': '4000000 2000\\r\\n', 'output': ['15999876436\\r\\n']}, {'input': '4999993 1\\r\\n', 'output': ['9999985\\r\\n']}, {'input': '4999696 3\\r\\n', 'output': ['29998170\\r\\n']}, {'input': '1 4999696\\r\\n', 'output': ['1\\r\\n']}, {'input': '5 4999697\\r\\n', 'output': ['89\\r\\n']}, {'input': '145675 98345\\r\\n', 'output': ['28611293247\\r\\n']}, {'input': '100 10000\\r\\n', 'output': ['666799\\r\\n']}, {'input': '3957602 4953270\\r\\n', 'output': ['39191413995652\\r\\n']}, {'input': '3829084 1534\\r\\n', 'output': ['11747546512\\r\\n']}, {'input': '8765 4937657\\r\\n', 'output': ['71920277547\\r\\n']}, {'input': '4888521 4888521\\r\\n', 'output': ['47780834303355\\r\\n']}, {'input': '4888522 4888521\\r\\n', 'output': ['47780844080397\\r\\n']}, {'input': '4888521 4888522\\r\\n', 'output': ['47780844075975\\r\\n']}, {'input': '4888520 4888521\\r\\n', 'output': ['47780824526313\\r\\n']}, {'input': '4888521 4888520\\r\\n', 'output': ['47780824530760\\r\\n']}, {'input': '2211 4888521\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '2210 4888521\\r\\n', 'output': ['7195910279\\r\\n']}, {'input': '2212 4888521\\r\\n', 'output': ['7215455655\\r\\n']}, {'input': '2211 4888520\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '2211 4888522\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '3918476 1038587\\r\\n', 'output': ['8137939762176\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long cnt(long long x, long long y, long long p) {\n  long long c = x / p;\n  x %= p;\n  if (!x) return 0;\n  if (x & 1) {\n    if (!y) return 0;\n    return c;\n  }\n  if (!y) return c;\n  return (c + 1) / 2;\n}\nint main() {\n  long long m, n, i, j, k;\n  scanf(\"%lld %lld\", &m, &n);\n  m--;\n  n--;\n  long long tot = 0;\n  for (i = 1; i <= n; i++) {\n    for (j = 1; j <= m; j++) {\n      if (i > j) {\n        k = i * i + 2 * i * j - j * j;\n        tot += cnt(k, i, 2);\n      } else if (i < j) {\n        k = i * i + 2 * i * j - j * j;\n        tot += cnt(k, i, 2) + cnt(k, j, 2);\n      }\n    }\n  }\n  printf(\"%lld\\n\", tot);\n  return 0;\n}\n"}
{"src_uid": "aad7ebf4fa919fae78bfc878e47e483c", "id": 57, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '3 3\\r\\n', 'output': ['12\\r\\n']}, {'input': '1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2 2\\r\\n', 'output': ['5\\r\\n']}, {'input': '5 2\\r\\n', 'output': ['17\\r\\n']}, {'input': '2 1\\r\\n', 'output': ['3\\r\\n']}, {'input': '2 3\\r\\n', 'output': ['6\\r\\n']}, {'input': '3 2\\r\\n', 'output': ['9\\r\\n']}, {'input': '1 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 1\\r\\n', 'output': ['5\\r\\n']}, {'input': '2 5000000\\r\\n', 'output': ['7\\r\\n']}, {'input': '4 4\\r\\n', 'output': ['23\\r\\n']}, {'input': '5 10\\r\\n', 'output': ['59\\r\\n']}, {'input': '10 5\\r\\n', 'output': ['86\\r\\n']}, {'input': '10 10\\r\\n', 'output': ['159\\r\\n']}, {'input': '6 36\\r\\n', 'output': ['151\\r\\n']}, {'input': '6 35\\r\\n', 'output': ['151\\r\\n']}, {'input': '6 37\\r\\n', 'output': ['151\\r\\n']}, {'input': '50 10\\r\\n', 'output': ['959\\r\\n']}, {'input': '100 17\\r\\n', 'output': ['3305\\r\\n']}, {'input': '56 46\\r\\n', 'output': ['4718\\r\\n']}, {'input': '15 5000000\\r\\n', 'output': ['2269\\r\\n']}, {'input': '5000000 5000000\\r\\n', 'output': ['49985062679840\\r\\n']}, {'input': '2000 4000000\\r\\n', 'output': ['5333335999\\r\\n']}, {'input': '2000 4000010\\r\\n', 'output': ['5333335999\\r\\n']}, {'input': '2000 3999993\\r\\n', 'output': ['5333335991\\r\\n']}, {'input': '5000000 16\\r\\n', 'output': ['159999914\\r\\n']}, {'input': '4991748 4783476\\r\\n', 'output': ['47741835370053\\r\\n']}, {'input': '4799983 5000\\r\\n', 'output': ['47999345584\\r\\n']}, {'input': '4000000 2000\\r\\n', 'output': ['15999876436\\r\\n']}, {'input': '4999993 1\\r\\n', 'output': ['9999985\\r\\n']}, {'input': '4999696 3\\r\\n', 'output': ['29998170\\r\\n']}, {'input': '1 4999696\\r\\n', 'output': ['1\\r\\n']}, {'input': '5 4999697\\r\\n', 'output': ['89\\r\\n']}, {'input': '145675 98345\\r\\n', 'output': ['28611293247\\r\\n']}, {'input': '100 10000\\r\\n', 'output': ['666799\\r\\n']}, {'input': '3957602 4953270\\r\\n', 'output': ['39191413995652\\r\\n']}, {'input': '3829084 1534\\r\\n', 'output': ['11747546512\\r\\n']}, {'input': '8765 4937657\\r\\n', 'output': ['71920277547\\r\\n']}, {'input': '4888521 4888521\\r\\n', 'output': ['47780834303355\\r\\n']}, {'input': '4888522 4888521\\r\\n', 'output': ['47780844080397\\r\\n']}, {'input': '4888521 4888522\\r\\n', 'output': ['47780844075975\\r\\n']}, {'input': '4888520 4888521\\r\\n', 'output': ['47780824526313\\r\\n']}, {'input': '4888521 4888520\\r\\n', 'output': ['47780824530760\\r\\n']}, {'input': '2211 4888521\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '2210 4888521\\r\\n', 'output': ['7195910279\\r\\n']}, {'input': '2212 4888521\\r\\n', 'output': ['7215455655\\r\\n']}, {'input': '2211 4888520\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '2211 4888522\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '3918476 1038587\\r\\n', 'output': ['8137939762176\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 1e9 + 7;\nconst int mod = 1e9 + 7;\nconst long long linf = 1e18;\nconst int N = 2000005;\nlong long int a[N], b[N], dp[2][N], cnt;\nlong long int kuhnmoo(long long int a, long long int b) {\n  if (!a ||!b) return 0;\n  return a / b;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  long long int n, m;\n  cin >> n >> m;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= m; j++) {\n      if (((i * i) + 2 * i * j + j * j) % 4 == 0) {\n        cnt++;\n      }\n    }\n  cout << cnt;\n  return 0;\n}\n"}
{"src_uid": "aad7ebf4fa919fae78bfc878e47e483c", "id": 57, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '3 3\\r\\n', 'output': ['12\\r\\n']}, {'input': '1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2 2\\r\\n', 'output': ['5\\r\\n']}, {'input': '5 2\\r\\n', 'output': ['17\\r\\n']}, {'input': '2 1\\r\\n', 'output': ['3\\r\\n']}, {'input': '2 3\\r\\n', 'output': ['6\\r\\n']}, {'input': '3 2\\r\\n', 'output': ['9\\r\\n']}, {'input': '1 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 1\\r\\n', 'output': ['5\\r\\n']}, {'input': '2 5000000\\r\\n', 'output': ['7\\r\\n']}, {'input': '4 4\\r\\n', 'output': ['23\\r\\n']}, {'input': '5 10\\r\\n', 'output': ['59\\r\\n']}, {'input': '10 5\\r\\n', 'output': ['86\\r\\n']}, {'input': '10 10\\r\\n', 'output': ['159\\r\\n']}, {'input': '6 36\\r\\n', 'output': ['151\\r\\n']}, {'input': '6 35\\r\\n', 'output': ['151\\r\\n']}, {'input': '6 37\\r\\n', 'output': ['151\\r\\n']}, {'input': '50 10\\r\\n', 'output': ['959\\r\\n']}, {'input': '100 17\\r\\n', 'output': ['3305\\r\\n']}, {'input': '56 46\\r\\n', 'output': ['4718\\r\\n']}, {'input': '15 5000000\\r\\n', 'output': ['2269\\r\\n']}, {'input': '5000000 5000000\\r\\n', 'output': ['49985062679840\\r\\n']}, {'input': '2000 4000000\\r\\n', 'output': ['5333335999\\r\\n']}, {'input': '2000 4000010\\r\\n', 'output': ['5333335999\\r\\n']}, {'input': '2000 3999993\\r\\n', 'output': ['5333335991\\r\\n']}, {'input': '5000000 16\\r\\n', 'output': ['159999914\\r\\n']}, {'input': '4991748 4783476\\r\\n', 'output': ['47741835370053\\r\\n']}, {'input': '4799983 5000\\r\\n', 'output': ['47999345584\\r\\n']}, {'input': '4000000 2000\\r\\n', 'output': ['15999876436\\r\\n']}, {'input': '4999993 1\\r\\n', 'output': ['9999985\\r\\n']}, {'input': '4999696 3\\r\\n', 'output': ['29998170\\r\\n']}, {'input': '1 4999696\\r\\n', 'output': ['1\\r\\n']}, {'input': '5 4999697\\r\\n', 'output': ['89\\r\\n']}, {'input': '145675 98345\\r\\n', 'output': ['28611293247\\r\\n']}, {'input': '100 10000\\r\\n', 'output': ['666799\\r\\n']}, {'input': '3957602 4953270\\r\\n', 'output': ['39191413995652\\r\\n']}, {'input': '3829084 1534\\r\\n', 'output': ['11747546512\\r\\n']}, {'input': '8765 4937657\\r\\n', 'output': ['71920277547\\r\\n']}, {'input': '4888521 4888521\\r\\n', 'output': ['47780834303355\\r\\n']}, {'input': '4888522 4888521\\r\\n', 'output': ['47780844080397\\r\\n']}, {'input': '4888521 4888522\\r\\n', 'output': ['47780844075975\\r\\n']}, {'input': '4888520 4888521\\r\\n', 'output': ['47780824526313\\r\\n']}, {'input': '4888521 4888520\\r\\n', 'output': ['47780824530760\\r\\n']}, {'input': '2211 4888521\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '2210 4888521\\r\\n', 'output': ['7195910279\\r\\n']}, {'input': '2212 4888521\\r\\n', 'output': ['7215455655\\r\\n']}, {'input': '2211 4888520\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '2211 4888522\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '3918476 1038587\\r\\n', 'output': ['8137939762176\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, c = 0, x, p[5000000], q[5000000], y, z, i;\n  cin >> n >> m;\n  for (i = 1; i < n + 1; i++) {\n    if (i * i + 2 * i + 1 > 4 * m) break;\n    c++;\n  }\n  for (i = 1; i < m + 1; i++) {\n    if (1 + 2 * i + i * i > 4 * n) break;\n    c++;\n  }\n  for (i = 1; i < m + 1; i++) {\n    if (i * i + 2 * i + 1 > 4 * n) break;\n    c++;\n  }\n  for (i = 1; i < n + 1; i++) {\n    if (1 + 2 * i + i * i > 4 * m) break;\n    c++;\n  }\n  cout << c << endl;\n  return 0;\n}\n"}
{"src_uid": "aad7ebf4fa919fae78bfc878e47e483c", "id": 57, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '3 3\\r\\n', 'output': ['12\\r\\n']}, {'input': '1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2 2\\r\\n', 'output': ['5\\r\\n']}, {'input': '5 2\\r\\n', 'output': ['17\\r\\n']}, {'input': '2 1\\r\\n', 'output': ['3\\r\\n']}, {'input': '2 3\\r\\n', 'output': ['6\\r\\n']}, {'input': '3 2\\r\\n', 'output': ['9\\r\\n']}, {'input': '1 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 1\\r\\n', 'output': ['5\\r\\n']}, {'input': '2 5000000\\r\\n', 'output': ['7\\r\\n']}, {'input': '4 4\\r\\n', 'output': ['23\\r\\n']}, {'input': '5 10\\r\\n', 'output': ['59\\r\\n']}, {'input': '10 5\\r\\n', 'output': ['86\\r\\n']}, {'input': '10 10\\r\\n', 'output': ['159\\r\\n']}, {'input': '6 36\\r\\n', 'output': ['151\\r\\n']}, {'input': '6 35\\r\\n', 'output': ['151\\r\\n']}, {'input': '6 37\\r\\n', 'output': ['151\\r\\n']}, {'input': '50 10\\r\\n', 'output': ['959\\r\\n']}, {'input': '100 17\\r\\n', 'output': ['3305\\r\\n']}, {'input': '56 46\\r\\n', 'output': ['4718\\r\\n']}, {'input': '15 5000000\\r\\n', 'output': ['2269\\r\\n']}, {'input': '5000000 5000000\\r\\n', 'output': ['49985062679840\\r\\n']}, {'input': '2000 4000000\\r\\n', 'output': ['5333335999\\r\\n']}, {'input': '2000 4000010\\r\\n', 'output': ['5333335999\\r\\n']}, {'input': '2000 3999993\\r\\n', 'output': ['5333335991\\r\\n']}, {'input': '5000000 16\\r\\n', 'output': ['159999914\\r\\n']}, {'input': '4991748 4783476\\r\\n', 'output': ['47741835370053\\r\\n']}, {'input': '4799983 5000\\r\\n', 'output': ['47999345584\\r\\n']}, {'input': '4000000 2000\\r\\n', 'output': ['15999876436\\r\\n']}, {'input': '4999993 1\\r\\n', 'output': ['9999985\\r\\n']}, {'input': '4999696 3\\r\\n', 'output': ['29998170\\r\\n']}, {'input': '1 4999696\\r\\n', 'output': ['1\\r\\n']}, {'input': '5 4999697\\r\\n', 'output': ['89\\r\\n']}, {'input': '145675 98345\\r\\n', 'output': ['28611293247\\r\\n']}, {'input': '100 10000\\r\\n', 'output': ['666799\\r\\n']}, {'input': '3957602 4953270\\r\\n', 'output': ['39191413995652\\r\\n']}, {'input': '3829084 1534\\r\\n', 'output': ['11747546512\\r\\n']}, {'input': '8765 4937657\\r\\n', 'output': ['71920277547\\r\\n']}, {'input': '4888521 4888521\\r\\n', 'output': ['47780834303355\\r\\n']}, {'input': '4888522 4888521\\r\\n', 'output': ['47780844080397\\r\\n']}, {'input': '4888521 4888522\\r\\n', 'output': ['47780844075975\\r\\n']}, {'input': '4888520 4888521\\r\\n', 'output': ['47780824526313\\r\\n']}, {'input': '4888521 4888520\\r\\n', 'output': ['47780824530760\\r\\n']}, {'input': '2211 4888521\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '2210 4888521\\r\\n', 'output': ['7195910279\\r\\n']}, {'input': '2212 4888521\\r\\n', 'output': ['7215455655\\r\\n']}, {'input': '2211 4888520\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '2211 4888522\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '3918476 1038587\\r\\n', 'output': ['8137939762176\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 333333;\nint bit[N];\nint main() {\n  long long n, m;\n  cin >> n >> m;\n  n++;\n  m++;\n  int ret = 0;\n  for (int k = 1; k < 3; k++) {\n    for (int b = 1; b <= n; b++) {\n      for (int c = 1; c <= m; c++) {\n        int z = k * b * b + 2 * b * c;\n        if (z > 0 && (z % 4 == 1 || z % 4 == 3)) {\n          ret++;\n        }\n      }\n    }\n  }\n  cout << ret << endl;\n  return 0;\n}\n"}
{"src_uid": "6e2a8aa58ed8cd308cb482e4c24cbbbb", "id": 58, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2100, "testcases": "[{'input': '4\\r\\n0 0 0\\r\\n0 10 0\\r\\n10 10 0\\r\\n10 0 0\\r\\n0 0 0\\r\\n1 1\\r\\n5 5 25\\r\\n', 'output': ['YES\\r\\n25.5000000000\\r\\n10.0000000000 4.5000000000 0.0000000000\\r\\n']}, {'input': '4\\r\\n0 0 0\\r\\n0 10 0\\r\\n10 10 0\\r\\n10 0 0\\r\\n0 0 0\\r\\n1 1\\r\\n5 5 50\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1\\r\\n1 2 3\\r\\n4 5 6\\r\\n20 10\\r\\n1 2 3\\r\\n', 'output': ['YES\\r\\n0.0000000000\\r\\n1.0000000000 2.0000000000 3.0000000000\\r\\n']}, {'input': '4\\r\\n0 0 0\\r\\n0 1 0\\r\\n1 1 0\\r\\n1 0 0\\r\\n0 0 0\\r\\n10 5\\r\\n0 0 8\\r\\n', 'output': ['YES\\r\\n0.8000000000\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '4\\r\\n1 0 0\\r\\n0 1 0\\r\\n-1 0 0\\r\\n0 -1 0\\r\\n1 0 0\\r\\n10 5\\r\\n9 0 -8\\r\\n', 'output': ['YES\\r\\n1.1313708499\\r\\n1.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '5\\r\\n32 -5 -42\\r\\n-25 -38 -6\\r\\n-13 41 25\\r\\n21 -25 -32\\r\\n43 35 -19\\r\\n-38 -12 -48\\r\\n3 2\\r\\n182 -210 32\\r\\n', 'output': ['YES\\r\\n97.5061769956\\r\\n-0.5611252637 16.8539490414 4.1465923539\\r\\n']}, {'input': '10\\r\\n-20 28 4\\r\\n-12 -34 49\\r\\n3 -11 25\\r\\n-35 -46 25\\r\\n4 29 -15\\r\\n17 16 -10\\r\\n40 -35 16\\r\\n-15 -25 10\\r\\n-2 40 20\\r\\n-26 18 -49\\r\\n14 8 -44\\r\\n3 1\\r\\n-877 450 899\\r\\n', 'output': ['YES\\r\\n437.7804049730\\r\\n-6.8291526407 15.8542367965 16.2852671995\\r\\n']}, {'input': '1\\r\\n5 -22 -3\\r\\n31 -41 -35\\r\\n4 4\\r\\n139 -86 -115\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n-34 37 40\\r\\n24 -28 7\\r\\n-20 -14 -25\\r\\n1 1\\r\\n-69 -28 -70\\r\\n', 'output': ['YES\\r\\n107.2130636667\\r\\n12.9900466281 -24.4968330180 -1.0072388159\\r\\n']}, {'input': '3\\r\\n-38 -39 -19\\r\\n-49 -16 50\\r\\n-3 -7 5\\r\\n28 -15 41\\r\\n1 1\\r\\n-100 -139 -33\\r\\n', 'output': ['NO\\r\\n']}, {'input': '15\\r\\n-17 -8 7\\r\\n-50 -28 8\\r\\n13 -38 -17\\r\\n27 -49 15\\r\\n34 49 17\\r\\n-17 36 25\\r\\n-10 -15 28\\r\\n-15 -36 32\\r\\n-8 47 26\\r\\n-19 18 -25\\r\\n44 36 -16\\r\\n4 -46 49\\r\\n46 20 -13\\r\\n21 -37 -8\\r\\n35 -38 -26\\r\\n-26 46 12\\r\\n4 1\\r\\n-1693 1363 2149\\r\\n', 'output': ['YES\\r\\n768.5953048926\\r\\n37.0198725921 5.8883712161 0.2563785546\\r\\n']}, {'input': '20\\r\\n26 47 23\\r\\n1 -2 17\\r\\n-14 -22 46\\r\\n19 34 -18\\r\\n22 -10 -34\\r\\n15 14 -48\\r\\n-30 -12 -12\\r\\n-23 40 -48\\r\\n-50 -41 -35\\r\\n48 -5 46\\r\\n-2 -11 10\\r\\n-49 47 -15\\r\\n31 6 10\\r\\n-41 35 15\\r\\n28 28 25\\r\\n43 -7 -10\\r\\n-19 -48 49\\r\\n-10 -29 28\\r\\n0 -10 28\\r\\n41 12 -26\\r\\n-14 40 17\\r\\n3 2\\r\\n-115 1407 1434\\r\\n', 'output': ['YES\\r\\n659.9757793192\\r\\n-5.2872973659 35.5644422954 10.1882506679\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n0 0 1\\r\\n10000 10000\\r\\n0 0 1\\r\\n', 'output': ['YES\\r\\n0.0000500000\\r\\n0.0000000000 0.0000000000 0.5000000000\\r\\n']}, {'input': '1\\r\\n10000 -10000 10000\\r\\n-10000 10000 -10000\\r\\n1 1\\r\\n10000 10000 10000\\r\\n', 'output': ['YES\\r\\n17320.5080756888\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '1\\r\\n10000 -10000 10000\\r\\n-10000 10000 -10000\\r\\n10000 1\\r\\n10000 10000 10000\\r\\n', 'output': ['YES\\r\\n1.9998845433\\r\\n9998.8453661206 -9998.8453661206 9998.8453661206\\r\\n']}, {'input': '1\\r\\n0 0 -1\\r\\n0 0 1\\r\\n10000 1\\r\\n0 0 10000\\r\\n', 'output': ['YES\\r\\n1.0000000000\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n-1 0 0\\r\\n10000 1\\r\\n10000 0 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n10000 10000 10000\\r\\n10000 10000 -10000\\r\\n10000 -10000 -10000\\r\\n1 1\\r\\n-10000 -10000 10000\\r\\n', 'output': ['YES\\r\\n30000.0000000000\\r\\n10000.0000000000 0.0000000000 -10000.0000000000\\r\\n']}, {'input': '4\\r\\n10000 9999 10000\\r\\n10000 9999 9999\\r\\n10000 10000 9999\\r\\n10000 10000 10000\\r\\n10000 9999 10000\\r\\n10000 1\\r\\n-10000 -10000 -10000\\r\\n', 'output': ['YES\\r\\n3.4640748220\\r\\n10000.0000000000 9999.5359251780 10000.0000000000\\r\\n']}, {'input': '3\\r\\n10000 9999 10000\\r\\n10000 9999 9999\\r\\n10000 10000 9999\\r\\n10000 10000 10000\\r\\n10000 1\\r\\n-10000 -10000 -10000\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nint n;\nstruct node {\n  double x, y, z;\n} p[10010];\nbool Cmp(node p, node q) {\n  return (sqrt((p.x - q.x) * (p.x - q.x) + (p.y - q.y) * (p.y - q.y) +\n                (p.z - q.z) * (p.z - q.z))) <\n         1e-6;\n}\nint main() {\n  double vp, vs, x, y, z;\n  double vx, vy, vz;\n  scanf(\"%d\", &n);\n  for (int i = 0; i <= n; i++) {\n    scanf(\"%lf%lf%lf\", &p[i].x, &p[i].y, &p[i].z);\n  }\n  scanf(\"%lf%lf%lf\", &vx, &vy, &vz);\n  scanf(\"%lf%lf%lf\", &x, &y, &z);\n  double t, ans;\n  ans = 1e10;\n  for (int i = 0; i < n; i++) {\n    t = ((p[i].x - x) * vx + (p[i].y - y) * vy + (p[i].z - z) * vz) /\n        (vp - vs);\n    if (t >= 0) {\n      double xx = x + vx * t;\n      double yy = y + vy * t;\n      double zz = z + vz * t;\n      if (Cmp(p[i], node{xx, yy, zz}) && Cmp(node{xx, yy, zz}, p[i + 1])) {\n        ans = t;\n      }\n    }\n  }\n  if (ans == 1e10)\n    printf(\"NO\");\n  else {\n    printf(\"YES\\n%.10lf\\n%.10lf %.10lf %.10lf\\n\", ans, x + vx * ans,\n           y + vy * ans, z + vz * ans);\n  }\n  return 0;\n}\n"}
{"src_uid": "6e2a8aa58ed8cd308cb482e4c24cbbbb", "id": 58, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2100, "testcases": "[{'input': '4\\r\\n0 0 0\\r\\n0 10 0\\r\\n10 10 0\\r\\n10 0 0\\r\\n0 0 0\\r\\n1 1\\r\\n5 5 25\\r\\n', 'output': ['YES\\r\\n25.5000000000\\r\\n10.0000000000 4.5000000000 0.0000000000\\r\\n']}, {'input': '4\\r\\n0 0 0\\r\\n0 10 0\\r\\n10 10 0\\r\\n10 0 0\\r\\n0 0 0\\r\\n1 1\\r\\n5 5 50\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1\\r\\n1 2 3\\r\\n4 5 6\\r\\n20 10\\r\\n1 2 3\\r\\n', 'output': ['YES\\r\\n0.0000000000\\r\\n1.0000000000 2.0000000000 3.0000000000\\r\\n']}, {'input': '4\\r\\n0 0 0\\r\\n0 1 0\\r\\n1 1 0\\r\\n1 0 0\\r\\n0 0 0\\r\\n10 5\\r\\n0 0 8\\r\\n', 'output': ['YES\\r\\n0.8000000000\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '4\\r\\n1 0 0\\r\\n0 1 0\\r\\n-1 0 0\\r\\n0 -1 0\\r\\n1 0 0\\r\\n10 5\\r\\n9 0 -8\\r\\n', 'output': ['YES\\r\\n1.1313708499\\r\\n1.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '5\\r\\n32 -5 -42\\r\\n-25 -38 -6\\r\\n-13 41 25\\r\\n21 -25 -32\\r\\n43 35 -19\\r\\n-38 -12 -48\\r\\n3 2\\r\\n182 -210 32\\r\\n', 'output': ['YES\\r\\n97.5061769956\\r\\n-0.5611252637 16.8539490414 4.1465923539\\r\\n']}, {'input': '10\\r\\n-20 28 4\\r\\n-12 -34 49\\r\\n3 -11 25\\r\\n-35 -46 25\\r\\n4 29 -15\\r\\n17 16 -10\\r\\n40 -35 16\\r\\n-15 -25 10\\r\\n-2 40 20\\r\\n-26 18 -49\\r\\n14 8 -44\\r\\n3 1\\r\\n-877 450 899\\r\\n', 'output': ['YES\\r\\n437.7804049730\\r\\n-6.8291526407 15.8542367965 16.2852671995\\r\\n']}, {'input': '1\\r\\n5 -22 -3\\r\\n31 -41 -35\\r\\n4 4\\r\\n139 -86 -115\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n-34 37 40\\r\\n24 -28 7\\r\\n-20 -14 -25\\r\\n1 1\\r\\n-69 -28 -70\\r\\n', 'output': ['YES\\r\\n107.2130636667\\r\\n12.9900466281 -24.4968330180 -1.0072388159\\r\\n']}, {'input': '3\\r\\n-38 -39 -19\\r\\n-49 -16 50\\r\\n-3 -7 5\\r\\n28 -15 41\\r\\n1 1\\r\\n-100 -139 -33\\r\\n', 'output': ['NO\\r\\n']}, {'input': '15\\r\\n-17 -8 7\\r\\n-50 -28 8\\r\\n13 -38 -17\\r\\n27 -49 15\\r\\n34 49 17\\r\\n-17 36 25\\r\\n-10 -15 28\\r\\n-15 -36 32\\r\\n-8 47 26\\r\\n-19 18 -25\\r\\n44 36 -16\\r\\n4 -46 49\\r\\n46 20 -13\\r\\n21 -37 -8\\r\\n35 -38 -26\\r\\n-26 46 12\\r\\n4 1\\r\\n-1693 1363 2149\\r\\n', 'output': ['YES\\r\\n768.5953048926\\r\\n37.0198725921 5.8883712161 0.2563785546\\r\\n']}, {'input': '20\\r\\n26 47 23\\r\\n1 -2 17\\r\\n-14 -22 46\\r\\n19 34 -18\\r\\n22 -10 -34\\r\\n15 14 -48\\r\\n-30 -12 -12\\r\\n-23 40 -48\\r\\n-50 -41 -35\\r\\n48 -5 46\\r\\n-2 -11 10\\r\\n-49 47 -15\\r\\n31 6 10\\r\\n-41 35 15\\r\\n28 28 25\\r\\n43 -7 -10\\r\\n-19 -48 49\\r\\n-10 -29 28\\r\\n0 -10 28\\r\\n41 12 -26\\r\\n-14 40 17\\r\\n3 2\\r\\n-115 1407 1434\\r\\n', 'output': ['YES\\r\\n659.9757793192\\r\\n-5.2872973659 35.5644422954 10.1882506679\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n0 0 1\\r\\n10000 10000\\r\\n0 0 1\\r\\n', 'output': ['YES\\r\\n0.0000500000\\r\\n0.0000000000 0.0000000000 0.5000000000\\r\\n']}, {'input': '1\\r\\n10000 -10000 10000\\r\\n-10000 10000 -10000\\r\\n1 1\\r\\n10000 10000 10000\\r\\n', 'output': ['YES\\r\\n17320.5080756888\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '1\\r\\n10000 -10000 10000\\r\\n-10000 10000 -10000\\r\\n10000 1\\r\\n10000 10000 10000\\r\\n', 'output': ['YES\\r\\n1.9998845433\\r\\n9998.8453661206 -9998.8453661206 9998.8453661206\\r\\n']}, {'input': '1\\r\\n0 0 -1\\r\\n0 0 1\\r\\n10000 1\\r\\n0 0 10000\\r\\n', 'output': ['YES\\r\\n1.0000000000\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n-1 0 0\\r\\n10000 1\\r\\n10000 0 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n10000 10000 10000\\r\\n10000 10000 -10000\\r\\n10000 -10000 -10000\\r\\n1 1\\r\\n-10000 -10000 10000\\r\\n', 'output': ['YES\\r\\n30000.0000000000\\r\\n10000.0000000000 0.0000000000 -10000.0000000000\\r\\n']}, {'input': '4\\r\\n10000 9999 10000\\r\\n10000 9999 9999\\r\\n10000 10000 9999\\r\\n10000 10000 10000\\r\\n10000 9999 10000\\r\\n10000 1\\r\\n-10000 -10000 -10000\\r\\n', 'output': ['YES\\r\\n3.4640748220\\r\\n10000.0000000000 9999.5359251780 10000.0000000000\\r\\n']}, {'input': '3\\r\\n10000 9999 10000\\r\\n10000 9999 9999\\r\\n10000 10000 9999\\r\\n10000 10000 10000\\r\\n10000 1\\r\\n-10000 -10000 -10000\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\ndouble dist(double x1, double y1, double x2, double y2) {\n  return hypot(x1 - x2, y1 - y2);\n}\ndouble x[10010], y[10010], z[10010];\nint main() {\n  int n;\n  double vp, v, px, py, pz, t;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> x[i] >> y[i] >> z[i];\n  cin >> vp >> v;\n  cin >> px >> py >> pz;\n  t = (dist(px, py, x[0], y[0]) + v * dist(x[0], y[0], x[1], y[1])) / vp;\n  for (int i = 0; i < n - 1; i++) {\n    if (fabs(v * (x[i] - x[i + 1]) + vp * (y[i] - y[i + 1])) <\n        0.0000001 * vp) {\n      cout << \"YES\" << endl;\n      cout << t << endl;\n      cout << x[i] << \" \" << y[i] << \" \" << z[i] << endl;\n      return 0;\n    }\n    t += v * dist(x[i], y[i], x[i + 1], y[i + 1]) / vp;\n  }\n  if (fabs(v * (x[n - 1] - px) + vp * (y[n - 1] - py)) < 0.0000001 * vp) {\n    cout << \"YES\" << endl;\n    cout << t << endl;\n    cout << x[n - 1] << \" \" << y[n - 1] << \" \" << z[n - 1] << endl;\n    return 0;\n  }\n  cout << \"NO\" << endl;\n  return 0;\n}\n"}
{"src_uid": "6e2a8aa58ed8cd308cb482e4c24cbbbb", "id": 58, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2100, "testcases": "[{'input': '4\\r\\n0 0 0\\r\\n0 10 0\\r\\n10 10 0\\r\\n10 0 0\\r\\n0 0 0\\r\\n1 1\\r\\n5 5 25\\r\\n', 'output': ['YES\\r\\n25.5000000000\\r\\n10.0000000000 4.5000000000 0.0000000000\\r\\n']}, {'input': '4\\r\\n0 0 0\\r\\n0 10 0\\r\\n10 10 0\\r\\n10 0 0\\r\\n0 0 0\\r\\n1 1\\r\\n5 5 50\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1\\r\\n1 2 3\\r\\n4 5 6\\r\\n20 10\\r\\n1 2 3\\r\\n', 'output': ['YES\\r\\n0.0000000000\\r\\n1.0000000000 2.0000000000 3.0000000000\\r\\n']}, {'input': '4\\r\\n0 0 0\\r\\n0 1 0\\r\\n1 1 0\\r\\n1 0 0\\r\\n0 0 0\\r\\n10 5\\r\\n0 0 8\\r\\n', 'output': ['YES\\r\\n0.8000000000\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '4\\r\\n1 0 0\\r\\n0 1 0\\r\\n-1 0 0\\r\\n0 -1 0\\r\\n1 0 0\\r\\n10 5\\r\\n9 0 -8\\r\\n', 'output': ['YES\\r\\n1.1313708499\\r\\n1.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '5\\r\\n32 -5 -42\\r\\n-25 -38 -6\\r\\n-13 41 25\\r\\n21 -25 -32\\r\\n43 35 -19\\r\\n-38 -12 -48\\r\\n3 2\\r\\n182 -210 32\\r\\n', 'output': ['YES\\r\\n97.5061769956\\r\\n-0.5611252637 16.8539490414 4.1465923539\\r\\n']}, {'input': '10\\r\\n-20 28 4\\r\\n-12 -34 49\\r\\n3 -11 25\\r\\n-35 -46 25\\r\\n4 29 -15\\r\\n17 16 -10\\r\\n40 -35 16\\r\\n-15 -25 10\\r\\n-2 40 20\\r\\n-26 18 -49\\r\\n14 8 -44\\r\\n3 1\\r\\n-877 450 899\\r\\n', 'output': ['YES\\r\\n437.7804049730\\r\\n-6.8291526407 15.8542367965 16.2852671995\\r\\n']}, {'input': '1\\r\\n5 -22 -3\\r\\n31 -41 -35\\r\\n4 4\\r\\n139 -86 -115\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n-34 37 40\\r\\n24 -28 7\\r\\n-20 -14 -25\\r\\n1 1\\r\\n-69 -28 -70\\r\\n', 'output': ['YES\\r\\n107.2130636667\\r\\n12.9900466281 -24.4968330180 -1.0072388159\\r\\n']}, {'input': '3\\r\\n-38 -39 -19\\r\\n-49 -16 50\\r\\n-3 -7 5\\r\\n28 -15 41\\r\\n1 1\\r\\n-100 -139 -33\\r\\n', 'output': ['NO\\r\\n']}, {'input': '15\\r\\n-17 -8 7\\r\\n-50 -28 8\\r\\n13 -38 -17\\r\\n27 -49 15\\r\\n34 49 17\\r\\n-17 36 25\\r\\n-10 -15 28\\r\\n-15 -36 32\\r\\n-8 47 26\\r\\n-19 18 -25\\r\\n44 36 -16\\r\\n4 -46 49\\r\\n46 20 -13\\r\\n21 -37 -8\\r\\n35 -38 -26\\r\\n-26 46 12\\r\\n4 1\\r\\n-1693 1363 2149\\r\\n', 'output': ['YES\\r\\n768.5953048926\\r\\n37.0198725921 5.8883712161 0.2563785546\\r\\n']}, {'input': '20\\r\\n26 47 23\\r\\n1 -2 17\\r\\n-14 -22 46\\r\\n19 34 -18\\r\\n22 -10 -34\\r\\n15 14 -48\\r\\n-30 -12 -12\\r\\n-23 40 -48\\r\\n-50 -41 -35\\r\\n48 -5 46\\r\\n-2 -11 10\\r\\n-49 47 -15\\r\\n31 6 10\\r\\n-41 35 15\\r\\n28 28 25\\r\\n43 -7 -10\\r\\n-19 -48 49\\r\\n-10 -29 28\\r\\n0 -10 28\\r\\n41 12 -26\\r\\n-14 40 17\\r\\n3 2\\r\\n-115 1407 1434\\r\\n', 'output': ['YES\\r\\n659.9757793192\\r\\n-5.2872973659 35.5644422954 10.1882506679\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n0 0 1\\r\\n10000 10000\\r\\n0 0 1\\r\\n', 'output': ['YES\\r\\n0.0000500000\\r\\n0.0000000000 0.0000000000 0.5000000000\\r\\n']}, {'input': '1\\r\\n10000 -10000 10000\\r\\n-10000 10000 -10000\\r\\n1 1\\r\\n10000 10000 10000\\r\\n', 'output': ['YES\\r\\n17320.5080756888\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '1\\r\\n10000 -10000 10000\\r\\n-10000 10000 -10000\\r\\n10000 1\\r\\n10000 10000 10000\\r\\n', 'output': ['YES\\r\\n1.9998845433\\r\\n9998.8453661206 -9998.8453661206 9998.8453661206\\r\\n']}, {'input': '1\\r\\n0 0 -1\\r\\n0 0 1\\r\\n10000 1\\r\\n0 0 10000\\r\\n', 'output': ['YES\\r\\n1.0000000000\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n-1 0 0\\r\\n10000 1\\r\\n10000 0 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n10000 10000 10000\\r\\n10000 10000 -10000\\r\\n10000 -10000 -10000\\r\\n1 1\\r\\n-10000 -10000 10000\\r\\n', 'output': ['YES\\r\\n30000.0000000000\\r\\n10000.0000000000 0.0000000000 -10000.0000000000\\r\\n']}, {'input': '4\\r\\n10000 9999 10000\\r\\n10000 9999 9999\\r\\n10000 10000 9999\\r\\n10000 10000 10000\\r\\n10000 9999 10000\\r\\n10000 1\\r\\n-10000 -10000 -10000\\r\\n', 'output': ['YES\\r\\n3.4640748220\\r\\n10000.0000000000 9999.5359251780 10000.0000000000\\r\\n']}, {'input': '3\\r\\n10000 9999 10000\\r\\n10000 9999 9999\\r\\n10000 10000 9999\\r\\n10000 10000 10000\\r\\n10000 1\\r\\n-10000 -10000 -10000\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\ndouble n, x[10005], y[10005], z[10005], v, w, px, py, pz, dis, t;\nint main() {\n  scanf(\"%lf\", &n);\n  for (int i = 0; i <= n; i++) {\n    scanf(\"%lf%lf%lf\", &x[i], &y[i], &z[i]);\n  }\n  scanf(\"%lf%lf%lf\", &px, &py, &pz);\n  scanf(\"%lf%lf\", &v, &w);\n  t = 0;\n  for (int i = 1; i <= n; i++) {\n    t += dis = sqrt((x[i] - px) * (x[i] - px) + (y[i] - py) * (y[i] - py) +\n                     (z[i] - pz) * (z[i] - pz));\n    if (t * v > dis * w) {\n      printf(\"YES\\n%.10lf\\n%.10lf %.10lf %.10lf\\n\", t, x[i - 1], y[i - 1],\n             z[i - 1]);\n      return 0;\n    }\n  }\n  printf(\"NO\\n\");\n}\n"}
{"src_uid": "6e2a8aa58ed8cd308cb482e4c24cbbbb", "id": 58, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2100, "testcases": "[{'input': '4\\r\\n0 0 0\\r\\n0 10 0\\r\\n10 10 0\\r\\n10 0 0\\r\\n0 0 0\\r\\n1 1\\r\\n5 5 25\\r\\n', 'output': ['YES\\r\\n25.5000000000\\r\\n10.0000000000 4.5000000000 0.0000000000\\r\\n']}, {'input': '4\\r\\n0 0 0\\r\\n0 10 0\\r\\n10 10 0\\r\\n10 0 0\\r\\n0 0 0\\r\\n1 1\\r\\n5 5 50\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1\\r\\n1 2 3\\r\\n4 5 6\\r\\n20 10\\r\\n1 2 3\\r\\n', 'output': ['YES\\r\\n0.0000000000\\r\\n1.0000000000 2.0000000000 3.0000000000\\r\\n']}, {'input': '4\\r\\n0 0 0\\r\\n0 1 0\\r\\n1 1 0\\r\\n1 0 0\\r\\n0 0 0\\r\\n10 5\\r\\n0 0 8\\r\\n', 'output': ['YES\\r\\n0.8000000000\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '4\\r\\n1 0 0\\r\\n0 1 0\\r\\n-1 0 0\\r\\n0 -1 0\\r\\n1 0 0\\r\\n10 5\\r\\n9 0 -8\\r\\n', 'output': ['YES\\r\\n1.1313708499\\r\\n1.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '5\\r\\n32 -5 -42\\r\\n-25 -38 -6\\r\\n-13 41 25\\r\\n21 -25 -32\\r\\n43 35 -19\\r\\n-38 -12 -48\\r\\n3 2\\r\\n182 -210 32\\r\\n', 'output': ['YES\\r\\n97.5061769956\\r\\n-0.5611252637 16.8539490414 4.1465923539\\r\\n']}, {'input': '10\\r\\n-20 28 4\\r\\n-12 -34 49\\r\\n3 -11 25\\r\\n-35 -46 25\\r\\n4 29 -15\\r\\n17 16 -10\\r\\n40 -35 16\\r\\n-15 -25 10\\r\\n-2 40 20\\r\\n-26 18 -49\\r\\n14 8 -44\\r\\n3 1\\r\\n-877 450 899\\r\\n', 'output': ['YES\\r\\n437.7804049730\\r\\n-6.8291526407 15.8542367965 16.2852671995\\r\\n']}, {'input': '1\\r\\n5 -22 -3\\r\\n31 -41 -35\\r\\n4 4\\r\\n139 -86 -115\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n-34 37 40\\r\\n24 -28 7\\r\\n-20 -14 -25\\r\\n1 1\\r\\n-69 -28 -70\\r\\n', 'output': ['YES\\r\\n107.2130636667\\r\\n12.9900466281 -24.4968330180 -1.0072388159\\r\\n']}, {'input': '3\\r\\n-38 -39 -19\\r\\n-49 -16 50\\r\\n-3 -7 5\\r\\n28 -15 41\\r\\n1 1\\r\\n-100 -139 -33\\r\\n', 'output': ['NO\\r\\n']}, {'input': '15\\r\\n-17 -8 7\\r\\n-50 -28 8\\r\\n13 -38 -17\\r\\n27 -49 15\\r\\n34 49 17\\r\\n-17 36 25\\r\\n-10 -15 28\\r\\n-15 -36 32\\r\\n-8 47 26\\r\\n-19 18 -25\\r\\n44 36 -16\\r\\n4 -46 49\\r\\n46 20 -13\\r\\n21 -37 -8\\r\\n35 -38 -26\\r\\n-26 46 12\\r\\n4 1\\r\\n-1693 1363 2149\\r\\n', 'output': ['YES\\r\\n768.5953048926\\r\\n37.0198725921 5.8883712161 0.2563785546\\r\\n']}, {'input': '20\\r\\n26 47 23\\r\\n1 -2 17\\r\\n-14 -22 46\\r\\n19 34 -18\\r\\n22 -10 -34\\r\\n15 14 -48\\r\\n-30 -12 -12\\r\\n-23 40 -48\\r\\n-50 -41 -35\\r\\n48 -5 46\\r\\n-2 -11 10\\r\\n-49 47 -15\\r\\n31 6 10\\r\\n-41 35 15\\r\\n28 28 25\\r\\n43 -7 -10\\r\\n-19 -48 49\\r\\n-10 -29 28\\r\\n0 -10 28\\r\\n41 12 -26\\r\\n-14 40 17\\r\\n3 2\\r\\n-115 1407 1434\\r\\n', 'output': ['YES\\r\\n659.9757793192\\r\\n-5.2872973659 35.5644422954 10.1882506679\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n0 0 1\\r\\n10000 10000\\r\\n0 0 1\\r\\n', 'output': ['YES\\r\\n0.0000500000\\r\\n0.0000000000 0.0000000000 0.5000000000\\r\\n']}, {'input': '1\\r\\n10000 -10000 10000\\r\\n-10000 10000 -10000\\r\\n1 1\\r\\n10000 10000 10000\\r\\n', 'output': ['YES\\r\\n17320.5080756888\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '1\\r\\n10000 -10000 10000\\r\\n-10000 10000 -10000\\r\\n10000 1\\r\\n10000 10000 10000\\r\\n', 'output': ['YES\\r\\n1.9998845433\\r\\n9998.8453661206 -9998.8453661206 9998.8453661206\\r\\n']}, {'input': '1\\r\\n0 0 -1\\r\\n0 0 1\\r\\n10000 1\\r\\n0 0 10000\\r\\n', 'output': ['YES\\r\\n1.0000000000\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n-1 0 0\\r\\n10000 1\\r\\n10000 0 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n10000 10000 10000\\r\\n10000 10000 -10000\\r\\n10000 -10000 -10000\\r\\n1 1\\r\\n-10000 -10000 10000\\r\\n', 'output': ['YES\\r\\n30000.0000000000\\r\\n10000.0000000000 0.0000000000 -10000.0000000000\\r\\n']}, {'input': '4\\r\\n10000 9999 10000\\r\\n10000 9999 9999\\r\\n10000 10000 9999\\r\\n10000 10000 10000\\r\\n10000 9999 10000\\r\\n10000 1\\r\\n-10000 -10000 -10000\\r\\n', 'output': ['YES\\r\\n3.4640748220\\r\\n10000.0000000000 9999.5359251780 10000.0000000000\\r\\n']}, {'input': '3\\r\\n10000 9999 10000\\r\\n10000 9999 9999\\r\\n10000 10000 9999\\r\\n10000 10000 10000\\r\\n10000 1\\r\\n-10000 -10000 -10000\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, x[100000], y[100000], z[100000], sx = 0, sy = 0, sz = 0, px, py,\n      pz, vx, vy, vz, t;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> x[i] >> y[i] >> z[i];\n  cin >> vx >> vy >> vz >> px >> py >> pz;\n  for (int i = 0; i < n; i++) {\n    t = (px - x[i]) * (px - x[i]) + (py - y[i]) * (py - y[i]) +\n        (pz - z[i]) * (pz - z[i]);\n    if (sx + x[i] * vx >= px && sy + y[i] * vy >= py &&\n        sz + z[i] * vz >= pz) {\n      printf(\"YES\\n%.8lf\\n%d.000000 %d.000000 %d.000000\\n\", sqrt(t), x[i],\n             y[i], z[i]);\n      return 0;\n    }\n    sx += x[i] * vx;\n    sy += y[i] * vy;\n    sz += z[i] * vz;\n  }\n  printf(\"NO\\n\");\n  return 0;\n}\n"}
{"src_uid": "6e2a8aa58ed8cd308cb482e4c24cbbbb", "id": 58, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2100, "testcases": "[{'input': '4\\r\\n0 0 0\\r\\n0 10 0\\r\\n10 10 0\\r\\n10 0 0\\r\\n0 0 0\\r\\n1 1\\r\\n5 5 25\\r\\n', 'output': ['YES\\r\\n25.5000000000\\r\\n10.0000000000 4.5000000000 0.0000000000\\r\\n']}, {'input': '4\\r\\n0 0 0\\r\\n0 10 0\\r\\n10 10 0\\r\\n10 0 0\\r\\n0 0 0\\r\\n1 1\\r\\n5 5 50\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1\\r\\n1 2 3\\r\\n4 5 6\\r\\n20 10\\r\\n1 2 3\\r\\n', 'output': ['YES\\r\\n0.0000000000\\r\\n1.0000000000 2.0000000000 3.0000000000\\r\\n']}, {'input': '4\\r\\n0 0 0\\r\\n0 1 0\\r\\n1 1 0\\r\\n1 0 0\\r\\n0 0 0\\r\\n10 5\\r\\n0 0 8\\r\\n', 'output': ['YES\\r\\n0.8000000000\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '4\\r\\n1 0 0\\r\\n0 1 0\\r\\n-1 0 0\\r\\n0 -1 0\\r\\n1 0 0\\r\\n10 5\\r\\n9 0 -8\\r\\n', 'output': ['YES\\r\\n1.1313708499\\r\\n1.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '5\\r\\n32 -5 -42\\r\\n-25 -38 -6\\r\\n-13 41 25\\r\\n21 -25 -32\\r\\n43 35 -19\\r\\n-38 -12 -48\\r\\n3 2\\r\\n182 -210 32\\r\\n', 'output': ['YES\\r\\n97.5061769956\\r\\n-0.5611252637 16.8539490414 4.1465923539\\r\\n']}, {'input': '10\\r\\n-20 28 4\\r\\n-12 -34 49\\r\\n3 -11 25\\r\\n-35 -46 25\\r\\n4 29 -15\\r\\n17 16 -10\\r\\n40 -35 16\\r\\n-15 -25 10\\r\\n-2 40 20\\r\\n-26 18 -49\\r\\n14 8 -44\\r\\n3 1\\r\\n-877 450 899\\r\\n', 'output': ['YES\\r\\n437.7804049730\\r\\n-6.8291526407 15.8542367965 16.2852671995\\r\\n']}, {'input': '1\\r\\n5 -22 -3\\r\\n31 -41 -35\\r\\n4 4\\r\\n139 -86 -115\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n-34 37 40\\r\\n24 -28 7\\r\\n-20 -14 -25\\r\\n1 1\\r\\n-69 -28 -70\\r\\n', 'output': ['YES\\r\\n107.2130636667\\r\\n12.9900466281 -24.4968330180 -1.0072388159\\r\\n']}, {'input': '3\\r\\n-38 -39 -19\\r\\n-49 -16 50\\r\\n-3 -7 5\\r\\n28 -15 41\\r\\n1 1\\r\\n-100 -139 -33\\r\\n', 'output': ['NO\\r\\n']}, {'input': '15\\r\\n-17 -8 7\\r\\n-50 -28 8\\r\\n13 -38 -17\\r\\n27 -49 15\\r\\n34 49 17\\r\\n-17 36 25\\r\\n-10 -15 28\\r\\n-15 -36 32\\r\\n-8 47 26\\r\\n-19 18 -25\\r\\n44 36 -16\\r\\n4 -46 49\\r\\n46 20 -13\\r\\n21 -37 -8\\r\\n35 -38 -26\\r\\n-26 46 12\\r\\n4 1\\r\\n-1693 1363 2149\\r\\n', 'output': ['YES\\r\\n768.5953048926\\r\\n37.0198725921 5.8883712161 0.2563785546\\r\\n']}, {'input': '20\\r\\n26 47 23\\r\\n1 -2 17\\r\\n-14 -22 46\\r\\n19 34 -18\\r\\n22 -10 -34\\r\\n15 14 -48\\r\\n-30 -12 -12\\r\\n-23 40 -48\\r\\n-50 -41 -35\\r\\n48 -5 46\\r\\n-2 -11 10\\r\\n-49 47 -15\\r\\n31 6 10\\r\\n-41 35 15\\r\\n28 28 25\\r\\n43 -7 -10\\r\\n-19 -48 49\\r\\n-10 -29 28\\r\\n0 -10 28\\r\\n41 12 -26\\r\\n-14 40 17\\r\\n3 2\\r\\n-115 1407 1434\\r\\n', 'output': ['YES\\r\\n659.9757793192\\r\\n-5.2872973659 35.5644422954 10.1882506679\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n0 0 1\\r\\n10000 10000\\r\\n0 0 1\\r\\n', 'output': ['YES\\r\\n0.0000500000\\r\\n0.0000000000 0.0000000000 0.5000000000\\r\\n']}, {'input': '1\\r\\n10000 -10000 10000\\r\\n-10000 10000 -10000\\r\\n1 1\\r\\n10000 10000 10000\\r\\n', 'output': ['YES\\r\\n17320.5080756888\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '1\\r\\n10000 -10000 10000\\r\\n-10000 10000 -10000\\r\\n10000 1\\r\\n10000 10000 10000\\r\\n', 'output': ['YES\\r\\n1.9998845433\\r\\n9998.8453661206 -9998.8453661206 9998.8453661206\\r\\n']}, {'input': '1\\r\\n0 0 -1\\r\\n0 0 1\\r\\n10000 1\\r\\n0 0 10000\\r\\n', 'output': ['YES\\r\\n1.0000000000\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n-1 0 0\\r\\n10000 1\\r\\n10000 0 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n10000 10000 10000\\r\\n10000 10000 -10000\\r\\n10000 -10000 -10000\\r\\n1 1\\r\\n-10000 -10000 10000\\r\\n', 'output': ['YES\\r\\n30000.0000000000\\r\\n10000.0000000000 0.0000000000 -10000.0000000000\\r\\n']}, {'input': '4\\r\\n10000 9999 10000\\r\\n10000 9999 9999\\r\\n10000 10000 9999\\r\\n10000 10000 10000\\r\\n10000 9999 10000\\r\\n10000 1\\r\\n-10000 -10000 -10000\\r\\n', 'output': ['YES\\r\\n3.4640748220\\r\\n10000.0000000000 9999.5359251780 10000.0000000000\\r\\n']}, {'input': '3\\r\\n10000 9999 10000\\r\\n10000 9999 9999\\r\\n10000 10000 9999\\r\\n10000 10000 10000\\r\\n10000 1\\r\\n-10000 -10000 -10000\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\ndouble posx, posy, posz, vx, vy, vz, px, py, pz, vp, vs, d;\nint n;\nvoid calc(double t, double x, double y, double z, double vx, double vy,\n          double vz) {\n  d = sqrt((x - px) * (x - px) + (y - py) * (y - py) + (z - pz) * (z - pz));\n  if (d < 1e-8) return;\n  if ((px - x) * vx + (py - y) * vy + (pz - z) * vz < 0) return;\n  if ((px - x) * vx + (py - y) * vy + (pz - z) * vz < vs * t &&\n      (px - x) * vx + (py - y) * vy + (pz - z) * vz >= 0.0 &&\n      (px - x) * vx + (py - y) * vy + (pz - z) * vz < 1e-10) {\n    printf(\"YES\\n%.8lf\\n\", t);\n    printf(\"%.8lf %.8lf %.8lf\", x, y, z);\n    exit(0);\n  }\n}\nint main() {\n  cin >> n;\n  double x, y, z;\n  cin >> x >> y >> z;\n  for (int i = 1; i <= n; i++) {\n    cin >> posx >> posy >> posz;\n    calc(i - 1.0, x, y, z, vx, vy, vz);\n    x = posx;\n    y = posy;\n    z = posz;\n  }\n  cin >> vx >> vy >> vz >> px >> py >> pz >> vp >> vs;\n  vx /= vp;\n  vy /= vp;\n  vz /= vp;\n  calc(n, x, y, z, vx, vy, vz);\n  printf(\"NO\\n\");\n  return 0;\n}\n"}
{"src_uid": "52b13cca189853e6af02bea8d3d85276", "id": 59, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '2 1 2\\r\\n1 2\\r\\nDmitry 1 1 1\\r\\nNatalia 2 0\\r\\nNatalia 1 1 1\\r\\nDmitry 2 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 4 3\\r\\n1 3\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\nArtem 1 1 4\\r\\nDmitry 1 1 2\\r\\nEdvard 4 2 1 3\\r\\nArtem 2 0\\r\\nDmitry 1 0\\r\\nEdvard 4 4 1 2 3 4\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1 1\\r\\n2 1\\r\\nabsgdf 1 1 1\\r\\nabsgdf 1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '2 1 1\\r\\n2 1\\r\\nabsgdf 2 1 1\\r\\nabsgdf 1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\na 1 1 1\\r\\nb 2 1 3\\r\\nc 3 1 2\\r\\na 3 1 3\\r\\nb 1 0\\r\\nc 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\na 1 1 1\\r\\nb 2 1 3\\r\\nc 3 1 2\\r\\nb 1 1 2\\r\\nc 2 1 3\\r\\na 3 1 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\nb 1 1 2\\r\\nc 2 1 3\\r\\na 3 1 1\\r\\na 3 1 3\\r\\nb 1 0\\r\\nc 2 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4 5 3\\r\\n1 2\\r\\n2 3\\r\\n2 4\\r\\n1 3\\r\\n1 3\\r\\na 1 2 4 3\\r\\nb 1 0\\r\\nc 4 3 1 2 5\\r\\na 1 2 4 3\\r\\nb 1 1 5\\r\\nc 4 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 2 2\\r\\n1 2\\r\\n2 1\\r\\nA 1 1 2\\r\\nB 1 1 1\\r\\nA 1 0\\r\\nB 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 2 4\\r\\n2 1\\r\\n4 3\\r\\na 1 1 1\\r\\nb 2 1 2\\r\\nc 3 0\\r\\nd 4 0\\r\\na 2 1 2\\r\\nb 1 1 1\\r\\nc 3 0\\r\\nd 4 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 2 4\\r\\n2 1\\r\\n4 3\\r\\na 1 1 1\\r\\nb 2 1 2\\r\\nc 3 0\\r\\nd 4 0\\r\\na 2 1 2\\r\\nb 1 1 1\\r\\nc 4 0\\r\\nd 3 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6 3 4\\r\\n1 2\\r\\n3 4\\r\\n5 6\\r\\na 1 2 1 3\\r\\nb 3 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\na 2 2 1 3\\r\\nb 4 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '6 3 4\\r\\n1 2\\r\\n3 4\\r\\n5 6\\r\\na 1 2 1 3\\r\\nb 3 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\na 2 1 1\\r\\nb 4 2 2 3\\r\\nc 5 0\\r\\nd 6 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 20 5\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n5 1\\r\\n6 5\\r\\n7 2\\r\\n8 5\\r\\n9 8\\r\\n10 6\\r\\n2 6\\r\\n3 5\\r\\n3 4\\r\\n10 5\\r\\n8 3\\r\\n9 4\\r\\n10 8\\r\\n9 2\\r\\n6 3\\r\\n3 8\\r\\n9 8\\r\\nDKkXdT 10 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\r\\nOzvgPXMzAr 5 0\\r\\nbjac 3 0\\r\\ncBPbJtoND 6 0\\r\\nw 5 0\\r\\nbjac 4 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\r\\nOzvgPXMzAr 2 0\\r\\ncBPbJtoND 5 0\\r\\nw 10 0\\r\\nDKkXdT 4 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 9 10\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\nInCeN 1 0\\r\\nIzHqPceNhj 2 1 9\\r\\neH 3 1 8\\r\\nJvgBsNFi 4 1 7\\r\\nBA 5 1 6\\r\\nRrjSTXJzhL 6 1 5\\r\\nDMx 7 1 4\\r\\nJzt 8 1 3\\r\\nhxBRlDlqwD 9 1 2\\r\\nImWeEPkggZ 10 1 1\\r\\neH 1 0\\r\\nImWeEPkggZ 2 1 9\\r\\nDMx 3 1 8\\r\\nIzHqPceNhj 4 1 7\\r\\nInCeN 5 1 6\\r\\nJvgBsNFi 6 1 5\\r\\nRrjSTXJzhL 7 1 4\\r\\nJzt 8 1 3\\r\\nhxBRlDlqwD 9 1 2\\r\\nBA 10 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '11 10 11\\r\\n1 2\\r\\n2 11\\r\\n3 4\\r\\n4 11\\r\\n5 6\\r\\n6 11\\r\\n7 8\\r\\n8 11\\r\\n9 10\\r\\n10 11\\r\\na 1 1 9\\r\\nb 2 1 10\\r\\nc 3 0\\r\\nd 4 1 1\\r\\ne 5 1 3\\r\\nf 6 1 4\\r\\ng 7 1 5\\r\\nh 8 1 6\\r\\ni 9 1 7\\r\\nj 10 1 8\\r\\nk 11 1 2\\r\\na 1 0\\r\\nb 2 0\\r\\nc 3 0\\r\\nd 4 0\\r\\ne 5 0\\r\\nf 6 0\\r\\ng 7 0\\r\\nh 8 0\\r\\ni 9 0\\r\\nj 10 0\\r\\nk 11 10 1 2 3 4 5 6 7 8 9 10\\r\\n', 'output': ['YES\\r\\n']}, {'input': '11 10 11\\r\\n1 2\\r\\n2 11\\r\\n3 4\\r\\n4 11\\r\\n5 6\\r\\n6 11\\r\\n7 8\\r\\n8 11\\r\\n9 10\\r\\n10 11\\r\\na 1 0\\r\\nb 2 0\\r\\nc 3 0\\r\\nd 4 0\\r\\ne 5 0\\r\\nf 6 0\\r\\ng 7 0\\r\\nh 8 0\\r\\ni 9 0\\r\\nj 10 0\\r\\nk 11 10 1 2 3 4 5 6 7 8 9 10\\r\\na 1 1 9\\r\\nb 2 1 10\\r\\nc 3 0\\r\\nd 4 1 1\\r\\ne 5 1 3\\r\\nf 6 1 4\\r\\ng 7 1 5\\r\\nh 8 1 6\\r\\ni 9 1 7\\r\\nj 10 1 8\\r\\nk 11 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '7 8 2\\r\\n3 7\\r\\n7 6\\r\\n1 2\\r\\n4 5\\r\\n1 3\\r\\n5 6\\r\\n4 6\\r\\n2 3\\r\\na 7 4 3 8 5 2\\r\\nb 7 4 4 6 7 1\\r\\na 1 4 3 8 5 2\\r\\nb 4 4 4 6 7 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 8 2\\r\\n3 7\\r\\n7 6\\r\\n1 2\\r\\n4 5\\r\\n1 3\\r\\n5 6\\r\\n4 6\\r\\n2 3\\r\\na 1 4 3 8 5 2\\r\\nb 4 4 4 6 7 1\\r\\na 3 4 3 8 5 2\\r\\nb 6 4 4 6 7 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '7 7 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\na 1 4 1 3 5 7\\r\\nb 2 3 2 4 6\\r\\na 7 4 1 3 5 7\\r\\nb 4 3 2 4 6\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 7 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\na 1 4 1 3 5 7\\r\\nb 2 3 2 4 6\\r\\na 4 4 1 3 5 7\\r\\nb 4 3 2 4 6\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 20 10\\r\\n1 10\\r\\n5 10\\r\\n2 9\\r\\n2 6\\r\\n9 6\\r\\n3 9\\r\\n7 1\\r\\n10 5\\r\\n7 8\\r\\n8 7\\r\\n2 3\\r\\n9 6\\r\\n1 6\\r\\n5 3\\r\\n4 3\\r\\n3 7\\r\\n8 2\\r\\n6 4\\r\\n2 3\\r\\n4 1\\r\\nTjOMmYPRUY 7 3 1 3 9\\r\\nj 6 2 11 15\\r\\nBanBSrUA 4 2 19 20\\r\\ncSWZxzR 8 1 8\\r\\nzVoRlNgt 10 2 6 7\\r\\nWLGaq 1 3 10 13 17\\r\\nKahHtTDj 1 2 2 14\\r\\nrUFZmkpI 6 1 16\\r\\ni 4 3 4 5 12\\r\\nKLGiua 6 1 18\\r\\nWLGaq 10 0\\r\\ncSWZxzR 3 1 4\\r\\nj 2 3 8 13 17\\r\\nrUFZmkpI 7 2 1 19\\r\\nKahHtTDj 5 1 16\\r\\nKLGiua 6 2 2 12\\r\\nBanBSrUA 2 4 6 7 10 15\\r\\nTjOMmYPRUY 9 3 3 9 18\\r\\nzVoRlNgt 10 2 11 20\\r\\ni 2 2 5 14\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 10 10\\r\\n7 10\\r\\n1 2\\r\\n4 3\\r\\n7 4\\r\\n9 2\\r\\n8 7\\r\\n10 8\\r\\n6 10\\r\\n5 2\\r\\n6 10\\r\\nznkkxCkkxv 9 1 10\\r\\nP 5 1 7\\r\\nKOF 1 2 3 9\\r\\nwYtfFWkb 3 0\\r\\nZPJiebeu 9 1 6\\r\\ndgzAhKY 4 0\\r\\nayqPf 3 0\\r\\nxFSb 9 0\\r\\nreYnbMDm 10 1 1\\r\\nydSIPy 6 4 2 4 5 8\\r\\nKOF 10 1 4\\r\\nayqPf 7 1 7\\r\\nreYnbMDm 4 1 5\\r\\nwYtfFWkb 5 1 6\\r\\nznkkxCkkxv 9 2 1 9\\r\\nydSIPy 10 0\\r\\nP 10 1 8\\r\\ndgzAhKY 7 1 2\\r\\nZPJiebeu 8 1 3\\r\\nxFSb 7 1 10\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 8 5\\r\\n1 3\\r\\n4 2\\r\\n1 3\\r\\n4 2\\r\\n1 5\\r\\n5 3\\r\\n2 5\\r\\n2 5\\r\\nTaMmKIk 1 0\\r\\nvrLryIxio 1 3 1 6 5\\r\\nGFKONi 2 1 4\\r\\nTzRVfh 3 2 3 8\\r\\nqp 4 2 7 2\\r\\nTaMmKIk 1 2 7 4\\r\\nvrLryIxio 1 3 1 6 5\\r\\nTzRVfh 3 1 8\\r\\nqp 4 1 3\\r\\nGFKONi 4 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 9 10\\r\\n4 7\\r\\n4 8\\r\\n8 3\\r\\n9 2\\r\\n8 3\\r\\n8 1\\r\\n6 9\\r\\n4 7\\r\\n7 4\\r\\nznkkxCkkxv 1 2 3 6\\r\\nQlf 3 0\\r\\nKOF 5 2 1 8\\r\\ndgzAhKY 5 0\\r\\nwYtfFWkb 6 2 4 7\\r\\nLbYfZPhWd 9 0\\r\\nP 10 1 9\\r\\nZPJiebeu 10 1 5\\r\\nayqPf 10 0\\r\\nzmZLwuf 10 1 2\\r\\nwYtfFWkb 2 2 7 4\\r\\nQlf 3 1 2\\r\\nznkkxCkkxv 3 3 6 3 9\\r\\nKOF 5 0\\r\\ndgzAhKY 5 0\\r\\nLbYfZPhWd 9 0\\r\\nP 10 1 5\\r\\nZPJiebeu 10 0\\r\\nayqPf 10 0\\r\\nzmZLwuf 10 2 1 8\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nvector<vector<int>> doors(1005);\nint first, second;\nvector<bool> vis(1005);\nvoid DFS(int x) {\n  vis[x] = true;\n  for (int i = 0; i < doors[x].size(); i++) {\n    if (!vis[doors[x][i]]) {\n      DFS(doors[x][i]);\n    }\n  }\n}\nvoid solve() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < m; i++) {\n    int a, b;\n    cin >> a >> b;\n    a--, b--;\n    doors[a].push_back(b);\n    doors[b].push_back(a);\n  }\n  for (int i = 0; i < k; i++) {\n    string s;\n    cin >> s;\n    cin >> first;\n    int keys;\n    cin >> keys;\n    for (int j = 0; j < keys; j++) {\n      int x;\n      cin >> x;\n      doors[first - 1].push_back(x - 1);\n    }\n  }\n  for (int i = 0; i < k; i++) {\n    string s;\n    cin >> s;\n    cin >> second;\n    if (vis[second - 1]) {\n      cout << \"NO\";\n      return;\n    }\n  }\n  cout << \"YES\";\n}\nint main() {\n  ios::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  solve();\n}\n"}
{"src_uid": "52b13cca189853e6af02bea8d3d85276", "id": 59, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '2 1 2\\r\\n1 2\\r\\nDmitry 1 1 1\\r\\nNatalia 2 0\\r\\nNatalia 1 1 1\\r\\nDmitry 2 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 4 3\\r\\n1 3\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\nArtem 1 1 4\\r\\nDmitry 1 1 2\\r\\nEdvard 4 2 1 3\\r\\nArtem 2 0\\r\\nDmitry 1 0\\r\\nEdvard 4 4 1 2 3 4\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1 1\\r\\n2 1\\r\\nabsgdf 1 1 1\\r\\nabsgdf 1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '2 1 1\\r\\n2 1\\r\\nabsgdf 2 1 1\\r\\nabsgdf 1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\na 1 1 1\\r\\nb 2 1 3\\r\\nc 3 1 2\\r\\na 3 1 3\\r\\nb 1 0\\r\\nc 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\na 1 1 1\\r\\nb 2 1 3\\r\\nc 3 1 2\\r\\nb 1 1 2\\r\\nc 2 1 3\\r\\na 3 1 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\nb 1 1 2\\r\\nc 2 1 3\\r\\na 3 1 1\\r\\na 3 1 3\\r\\nb 1 0\\r\\nc 2 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4 5 3\\r\\n1 2\\r\\n2 3\\r\\n2 4\\r\\n1 3\\r\\n1 3\\r\\na 1 2 4 3\\r\\nb 1 0\\r\\nc 4 3 1 2 5\\r\\na 1 2 4 3\\r\\nb 1 1 5\\r\\nc 4 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 2 2\\r\\n1 2\\r\\n2 1\\r\\nA 1 1 2\\r\\nB 1 1 1\\r\\nA 1 0\\r\\nB 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 2 4\\r\\n2 1\\r\\n4 3\\r\\na 1 1 1\\r\\nb 2 1 2\\r\\nc 3 0\\r\\nd 4 0\\r\\na 2 1 2\\r\\nb 1 1 1\\r\\nc 3 0\\r\\nd 4 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 2 4\\r\\n2 1\\r\\n4 3\\r\\na 1 1 1\\r\\nb 2 1 2\\r\\nc 3 0\\r\\nd 4 0\\r\\na 2 1 2\\r\\nb 1 1 1\\r\\nc 4 0\\r\\nd 3 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6 3 4\\r\\n1 2\\r\\n3 4\\r\\n5 6\\r\\na 1 2 1 3\\r\\nb 3 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\na 2 2 1 3\\r\\nb 4 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '6 3 4\\r\\n1 2\\r\\n3 4\\r\\n5 6\\r\\na 1 2 1 3\\r\\nb 3 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\na 2 1 1\\r\\nb 4 2 2 3\\r\\nc 5 0\\r\\nd 6 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 20 5\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n5 1\\r\\n6 5\\r\\n7 2\\r\\n8 5\\r\\n9 8\\r\\n10 6\\r\\n2 6\\r\\n3 5\\r\\n3 4\\r\\n10 5\\r\\n8 3\\r\\n9 4\\r\\n10 8\\r\\n9 2\\r\\n6 3\\r\\n3 8\\r\\n9 8\\r\\nDKkXdT 10 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\r\\nOzvgPXMzAr 5 0\\r\\nbjac 3 0\\r\\ncBPbJtoND 6 0\\r\\nw 5 0\\r\\nbjac 4 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\r\\nOzvgPXMzAr 2 0\\r\\ncBPbJtoND 5 0\\r\\nw 10 0\\r\\nDKkXdT 4 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 9 10\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\nInCeN 1 0\\r\\nIzHqPceNhj 2 1 9\\r\\neH 3 1 8\\r\\nJvgBsNFi 4 1 7\\r\\nBA 5 1 6\\r\\nRrjSTXJzhL 6 1 5\\r\\nDMx 7 1 4\\r\\nJzt 8 1 3\\r\\nhxBRlDlqwD 9 1 2\\r\\nImWeEPkggZ 10 1 1\\r\\neH 1 0\\r\\nImWeEPkggZ 2 1 9\\r\\nDMx 3 1 8\\r\\nIzHqPceNhj 4 1 7\\r\\nInCeN 5 1 6\\r\\nJvgBsNFi 6 1 5\\r\\nRrjSTXJzhL 7 1 4\\r\\nJzt 8 1 3\\r\\nhxBRlDlqwD 9 1 2\\r\\nBA 10 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '11 10 11\\r\\n1 2\\r\\n2 11\\r\\n3 4\\r\\n4 11\\r\\n5 6\\r\\n6 11\\r\\n7 8\\r\\n8 11\\r\\n9 10\\r\\n10 11\\r\\na 1 1 9\\r\\nb 2 1 10\\r\\nc 3 0\\r\\nd 4 1 1\\r\\ne 5 1 3\\r\\nf 6 1 4\\r\\ng 7 1 5\\r\\nh 8 1 6\\r\\ni 9 1 7\\r\\nj 10 1 8\\r\\nk 11 1 2\\r\\na 1 0\\r\\nb 2 0\\r\\nc 3 0\\r\\nd 4 0\\r\\ne 5 0\\r\\nf 6 0\\r\\ng 7 0\\r\\nh 8 0\\r\\ni 9 0\\r\\nj 10 0\\r\\nk 11 10 1 2 3 4 5 6 7 8 9 10\\r\\n', 'output': ['YES\\r\\n']}, {'input': '11 10 11\\r\\n1 2\\r\\n2 11\\r\\n3 4\\r\\n4 11\\r\\n5 6\\r\\n6 11\\r\\n7 8\\r\\n8 11\\r\\n9 10\\r\\n10 11\\r\\na 1 0\\r\\nb 2 0\\r\\nc 3 0\\r\\nd 4 0\\r\\ne 5 0\\r\\nf 6 0\\r\\ng 7 0\\r\\nh 8 0\\r\\ni 9 0\\r\\nj 10 0\\r\\nk 11 10 1 2 3 4 5 6 7 8 9 10\\r\\na 1 1 9\\r\\nb 2 1 10\\r\\nc 3 0\\r\\nd 4 1 1\\r\\ne 5 1 3\\r\\nf 6 1 4\\r\\ng 7 1 5\\r\\nh 8 1 6\\r\\ni 9 1 7\\r\\nj 10 1 8\\r\\nk 11 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '7 8 2\\r\\n3 7\\r\\n7 6\\r\\n1 2\\r\\n4 5\\r\\n1 3\\r\\n5 6\\r\\n4 6\\r\\n2 3\\r\\na 7 4 3 8 5 2\\r\\nb 7 4 4 6 7 1\\r\\na 1 4 3 8 5 2\\r\\nb 4 4 4 6 7 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 8 2\\r\\n3 7\\r\\n7 6\\r\\n1 2\\r\\n4 5\\r\\n1 3\\r\\n5 6\\r\\n4 6\\r\\n2 3\\r\\na 1 4 3 8 5 2\\r\\nb 4 4 4 6 7 1\\r\\na 3 4 3 8 5 2\\r\\nb 6 4 4 6 7 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '7 7 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\na 1 4 1 3 5 7\\r\\nb 2 3 2 4 6\\r\\na 7 4 1 3 5 7\\r\\nb 4 3 2 4 6\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 7 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\na 1 4 1 3 5 7\\r\\nb 2 3 2 4 6\\r\\na 4 4 1 3 5 7\\r\\nb 4 3 2 4 6\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 20 10\\r\\n1 10\\r\\n5 10\\r\\n2 9\\r\\n2 6\\r\\n9 6\\r\\n3 9\\r\\n7 1\\r\\n10 5\\r\\n7 8\\r\\n8 7\\r\\n2 3\\r\\n9 6\\r\\n1 6\\r\\n5 3\\r\\n4 3\\r\\n3 7\\r\\n8 2\\r\\n6 4\\r\\n2 3\\r\\n4 1\\r\\nTjOMmYPRUY 7 3 1 3 9\\r\\nj 6 2 11 15\\r\\nBanBSrUA 4 2 19 20\\r\\ncSWZxzR 8 1 8\\r\\nzVoRlNgt 10 2 6 7\\r\\nWLGaq 1 3 10 13 17\\r\\nKahHtTDj 1 2 2 14\\r\\nrUFZmkpI 6 1 16\\r\\ni 4 3 4 5 12\\r\\nKLGiua 6 1 18\\r\\nWLGaq 10 0\\r\\ncSWZxzR 3 1 4\\r\\nj 2 3 8 13 17\\r\\nrUFZmkpI 7 2 1 19\\r\\nKahHtTDj 5 1 16\\r\\nKLGiua 6 2 2 12\\r\\nBanBSrUA 2 4 6 7 10 15\\r\\nTjOMmYPRUY 9 3 3 9 18\\r\\nzVoRlNgt 10 2 11 20\\r\\ni 2 2 5 14\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 10 10\\r\\n7 10\\r\\n1 2\\r\\n4 3\\r\\n7 4\\r\\n9 2\\r\\n8 7\\r\\n10 8\\r\\n6 10\\r\\n5 2\\r\\n6 10\\r\\nznkkxCkkxv 9 1 10\\r\\nP 5 1 7\\r\\nKOF 1 2 3 9\\r\\nwYtfFWkb 3 0\\r\\nZPJiebeu 9 1 6\\r\\ndgzAhKY 4 0\\r\\nayqPf 3 0\\r\\nxFSb 9 0\\r\\nreYnbMDm 10 1 1\\r\\nydSIPy 6 4 2 4 5 8\\r\\nKOF 10 1 4\\r\\nayqPf 7 1 7\\r\\nreYnbMDm 4 1 5\\r\\nwYtfFWkb 5 1 6\\r\\nznkkxCkkxv 9 2 1 9\\r\\nydSIPy 10 0\\r\\nP 10 1 8\\r\\ndgzAhKY 7 1 2\\r\\nZPJiebeu 8 1 3\\r\\nxFSb 7 1 10\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 8 5\\r\\n1 3\\r\\n4 2\\r\\n1 3\\r\\n4 2\\r\\n1 5\\r\\n5 3\\r\\n2 5\\r\\n2 5\\r\\nTaMmKIk 1 0\\r\\nvrLryIxio 1 3 1 6 5\\r\\nGFKONi 2 1 4\\r\\nTzRVfh 3 2 3 8\\r\\nqp 4 2 7 2\\r\\nTaMmKIk 1 2 7 4\\r\\nvrLryIxio 1 3 1 6 5\\r\\nTzRVfh 3 1 8\\r\\nqp 4 1 3\\r\\nGFKONi 4 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 9 10\\r\\n4 7\\r\\n4 8\\r\\n8 3\\r\\n9 2\\r\\n8 3\\r\\n8 1\\r\\n6 9\\r\\n4 7\\r\\n7 4\\r\\nznkkxCkkxv 1 2 3 6\\r\\nQlf 3 0\\r\\nKOF 5 2 1 8\\r\\ndgzAhKY 5 0\\r\\nwYtfFWkb 6 2 4 7\\r\\nLbYfZPhWd 9 0\\r\\nP 10 1 9\\r\\nZPJiebeu 10 1 5\\r\\nayqPf 10 0\\r\\nzmZLwuf 10 1 2\\r\\nwYtfFWkb 2 2 7 4\\r\\nQlf 3 1 2\\r\\nznkkxCkkxv 3 3 6 3 9\\r\\nKOF 5 0\\r\\ndgzAhKY 5 0\\r\\nLbYfZPhWd 9 0\\r\\nP 10 1 5\\r\\nZPJiebeu 10 0\\r\\nayqPf 10 0\\r\\nzmZLwuf 10 2 1 8\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MOD = 1e9 + 7, MX = 1e6 + 5;\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  vector<map<int, int>> a(m);\n  int x, y, p;\n  for (int i = 0; i < m; i++) {\n    cin >> x >> y;\n    a[i][x]++;\n    a[i][y]++;\n  }\n  string s;\n  int c = 0;\n  while (c < k) {\n    cin >> s >> p;\n    for (int i = 1; i < p + 1; i++) {\n      int x;\n      cin >> x;\n      a[x - 1][s]--;\n    }\n    c++;\n  }\n  for (int i = 0; i < m; i++) {\n    int cnt = 0;\n    for (auto it : a[i]) {\n      if (it.second > 0) cnt++;\n    }\n    if (cnt % 2 == 1) {\n      cout << \"NO\";\n      return 0;\n    }\n  }\n  cout << \"YES\";\n  return 0;\n}\n"}
{"src_uid": "52b13cca189853e6af02bea8d3d85276", "id": 59, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '2 1 2\\r\\n1 2\\r\\nDmitry 1 1 1\\r\\nNatalia 2 0\\r\\nNatalia 1 1 1\\r\\nDmitry 2 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 4 3\\r\\n1 3\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\nArtem 1 1 4\\r\\nDmitry 1 1 2\\r\\nEdvard 4 2 1 3\\r\\nArtem 2 0\\r\\nDmitry 1 0\\r\\nEdvard 4 4 1 2 3 4\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1 1\\r\\n2 1\\r\\nabsgdf 1 1 1\\r\\nabsgdf 1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '2 1 1\\r\\n2 1\\r\\nabsgdf 2 1 1\\r\\nabsgdf 1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\na 1 1 1\\r\\nb 2 1 3\\r\\nc 3 1 2\\r\\na 3 1 3\\r\\nb 1 0\\r\\nc 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\na 1 1 1\\r\\nb 2 1 3\\r\\nc 3 1 2\\r\\nb 1 1 2\\r\\nc 2 1 3\\r\\na 3 1 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\nb 1 1 2\\r\\nc 2 1 3\\r\\na 3 1 1\\r\\na 3 1 3\\r\\nb 1 0\\r\\nc 2 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4 5 3\\r\\n1 2\\r\\n2 3\\r\\n2 4\\r\\n1 3\\r\\n1 3\\r\\na 1 2 4 3\\r\\nb 1 0\\r\\nc 4 3 1 2 5\\r\\na 1 2 4 3\\r\\nb 1 1 5\\r\\nc 4 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 2 2\\r\\n1 2\\r\\n2 1\\r\\nA 1 1 2\\r\\nB 1 1 1\\r\\nA 1 0\\r\\nB 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 2 4\\r\\n2 1\\r\\n4 3\\r\\na 1 1 1\\r\\nb 2 1 2\\r\\nc 3 0\\r\\nd 4 0\\r\\na 2 1 2\\r\\nb 1 1 1\\r\\nc 3 0\\r\\nd 4 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 2 4\\r\\n2 1\\r\\n4 3\\r\\na 1 1 1\\r\\nb 2 1 2\\r\\nc 3 0\\r\\nd 4 0\\r\\na 2 1 2\\r\\nb 1 1 1\\r\\nc 4 0\\r\\nd 3 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6 3 4\\r\\n1 2\\r\\n3 4\\r\\n5 6\\r\\na 1 2 1 3\\r\\nb 3 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\na 2 2 1 3\\r\\nb 4 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '6 3 4\\r\\n1 2\\r\\n3 4\\r\\n5 6\\r\\na 1 2 1 3\\r\\nb 3 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\na 2 1 1\\r\\nb 4 2 2 3\\r\\nc 5 0\\r\\nd 6 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 20 5\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n5 1\\r\\n6 5\\r\\n7 2\\r\\n8 5\\r\\n9 8\\r\\n10 6\\r\\n2 6\\r\\n3 5\\r\\n3 4\\r\\n10 5\\r\\n8 3\\r\\n9 4\\r\\n10 8\\r\\n9 2\\r\\n6 3\\r\\n3 8\\r\\n9 8\\r\\nDKkXdT 10 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\r\\nOzvgPXMzAr 5 0\\r\\nbjac 3 0\\r\\ncBPbJtoND 6 0\\r\\nw 5 0\\r\\nbjac 4 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\r\\nOzvgPXMzAr 2 0\\r\\ncBPbJtoND 5 0\\r\\nw 10 0\\r\\nDKkXdT 4 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 9 10\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\nInCeN 1 0\\r\\nIzHqPceNhj 2 1 9\\r\\neH 3 1 8\\r\\nJvgBsNFi 4 1 7\\r\\nBA 5 1 6\\r\\nRrjSTXJzhL 6 1 5\\r\\nDMx 7 1 4\\r\\nJzt 8 1 3\\r\\nhxBRlDlqwD 9 1 2\\r\\nImWeEPkggZ 10 1 1\\r\\neH 1 0\\r\\nImWeEPkggZ 2 1 9\\r\\nDMx 3 1 8\\r\\nIzHqPceNhj 4 1 7\\r\\nInCeN 5 1 6\\r\\nJvgBsNFi 6 1 5\\r\\nRrjSTXJzhL 7 1 4\\r\\nJzt 8 1 3\\r\\nhxBRlDlqwD 9 1 2\\r\\nBA 10 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '11 10 11\\r\\n1 2\\r\\n2 11\\r\\n3 4\\r\\n4 11\\r\\n5 6\\r\\n6 11\\r\\n7 8\\r\\n8 11\\r\\n9 10\\r\\n10 11\\r\\na 1 1 9\\r\\nb 2 1 10\\r\\nc 3 0\\r\\nd 4 1 1\\r\\ne 5 1 3\\r\\nf 6 1 4\\r\\ng 7 1 5\\r\\nh 8 1 6\\r\\ni 9 1 7\\r\\nj 10 1 8\\r\\nk 11 1 2\\r\\na 1 0\\r\\nb 2 0\\r\\nc 3 0\\r\\nd 4 0\\r\\ne 5 0\\r\\nf 6 0\\r\\ng 7 0\\r\\nh 8 0\\r\\ni 9 0\\r\\nj 10 0\\r\\nk 11 10 1 2 3 4 5 6 7 8 9 10\\r\\n', 'output': ['YES\\r\\n']}, {'input': '11 10 11\\r\\n1 2\\r\\n2 11\\r\\n3 4\\r\\n4 11\\r\\n5 6\\r\\n6 11\\r\\n7 8\\r\\n8 11\\r\\n9 10\\r\\n10 11\\r\\na 1 0\\r\\nb 2 0\\r\\nc 3 0\\r\\nd 4 0\\r\\ne 5 0\\r\\nf 6 0\\r\\ng 7 0\\r\\nh 8 0\\r\\ni 9 0\\r\\nj 10 0\\r\\nk 11 10 1 2 3 4 5 6 7 8 9 10\\r\\na 1 1 9\\r\\nb 2 1 10\\r\\nc 3 0\\r\\nd 4 1 1\\r\\ne 5 1 3\\r\\nf 6 1 4\\r\\ng 7 1 5\\r\\nh 8 1 6\\r\\ni 9 1 7\\r\\nj 10 1 8\\r\\nk 11 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '7 8 2\\r\\n3 7\\r\\n7 6\\r\\n1 2\\r\\n4 5\\r\\n1 3\\r\\n5 6\\r\\n4 6\\r\\n2 3\\r\\na 7 4 3 8 5 2\\r\\nb 7 4 4 6 7 1\\r\\na 1 4 3 8 5 2\\r\\nb 4 4 4 6 7 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 8 2\\r\\n3 7\\r\\n7 6\\r\\n1 2\\r\\n4 5\\r\\n1 3\\r\\n5 6\\r\\n4 6\\r\\n2 3\\r\\na 1 4 3 8 5 2\\r\\nb 4 4 4 6 7 1\\r\\na 3 4 3 8 5 2\\r\\nb 6 4 4 6 7 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '7 7 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\na 1 4 1 3 5 7\\r\\nb 2 3 2 4 6\\r\\na 7 4 1 3 5 7\\r\\nb 4 3 2 4 6\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 7 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\na 1 4 1 3 5 7\\r\\nb 2 3 2 4 6\\r\\na 4 4 1 3 5 7\\r\\nb 4 3 2 4 6\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 20 10\\r\\n1 10\\r\\n5 10\\r\\n2 9\\r\\n2 6\\r\\n9 6\\r\\n3 9\\r\\n7 1\\r\\n10 5\\r\\n7 8\\r\\n8 7\\r\\n2 3\\r\\n9 6\\r\\n1 6\\r\\n5 3\\r\\n4 3\\r\\n3 7\\r\\n8 2\\r\\n6 4\\r\\n2 3\\r\\n4 1\\r\\nTjOMmYPRUY 7 3 1 3 9\\r\\nj 6 2 11 15\\r\\nBanBSrUA 4 2 19 20\\r\\ncSWZxzR 8 1 8\\r\\nzVoRlNgt 10 2 6 7\\r\\nWLGaq 1 3 10 13 17\\r\\nKahHtTDj 1 2 2 14\\r\\nrUFZmkpI 6 1 16\\r\\ni 4 3 4 5 12\\r\\nKLGiua 6 1 18\\r\\nWLGaq 10 0\\r\\ncSWZxzR 3 1 4\\r\\nj 2 3 8 13 17\\r\\nrUFZmkpI 7 2 1 19\\r\\nKahHtTDj 5 1 16\\r\\nKLGiua 6 2 2 12\\r\\nBanBSrUA 2 4 6 7 10 15\\r\\nTjOMmYPRUY 9 3 3 9 18\\r\\nzVoRlNgt 10 2 11 20\\r\\ni 2 2 5 14\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 10 10\\r\\n7 10\\r\\n1 2\\r\\n4 3\\r\\n7 4\\r\\n9 2\\r\\n8 7\\r\\n10 8\\r\\n6 10\\r\\n5 2\\r\\n6 10\\r\\nznkkxCkkxv 9 1 10\\r\\nP 5 1 7\\r\\nKOF 1 2 3 9\\r\\nwYtfFWkb 3 0\\r\\nZPJiebeu 9 1 6\\r\\ndgzAhKY 4 0\\r\\nayqPf 3 0\\r\\nxFSb 9 0\\r\\nreYnbMDm 10 1 1\\r\\nydSIPy 6 4 2 4 5 8\\r\\nKOF 10 1 4\\r\\nayqPf 7 1 7\\r\\nreYnbMDm 4 1 5\\r\\nwYtfFWkb 5 1 6\\r\\nznkkxCkkxv 9 2 1 9\\r\\nydSIPy 10 0\\r\\nP 10 1 8\\r\\ndgzAhKY 7 1 2\\r\\nZPJiebeu 8 1 3\\r\\nxFSb 7 1 10\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 8 5\\r\\n1 3\\r\\n4 2\\r\\n1 3\\r\\n4 2\\r\\n1 5\\r\\n5 3\\r\\n2 5\\r\\n2 5\\r\\nTaMmKIk 1 0\\r\\nvrLryIxio 1 3 1 6 5\\r\\nGFKONi 2 1 4\\r\\nTzRVfh 3 2 3 8\\r\\nqp 4 2 7 2\\r\\nTaMmKIk 1 2 7 4\\r\\nvrLryIxio 1 3 1 6 5\\r\\nTzRVfh 3 1 8\\r\\nqp 4 1 3\\r\\nGFKONi 4 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 9 10\\r\\n4 7\\r\\n4 8\\r\\n8 3\\r\\n9 2\\r\\n8 3\\r\\n8 1\\r\\n6 9\\r\\n4 7\\r\\n7 4\\r\\nznkkxCkkxv 1 2 3 6\\r\\nQlf 3 0\\r\\nKOF 5 2 1 8\\r\\ndgzAhKY 5 0\\r\\nwYtfFWkb 6 2 4 7\\r\\nLbYfZPhWd 9 0\\r\\nP 10 1 9\\r\\nZPJiebeu 10 1 5\\r\\nayqPf 10 0\\r\\nzmZLwuf 10 1 2\\r\\nwYtfFWkb 2 2 7 4\\r\\nQlf 3 1 2\\r\\nznkkxCkkxv 3 3 6 3 9\\r\\nKOF 5 0\\r\\ndgzAhKY 5 0\\r\\nLbYfZPhWd 9 0\\r\\nP 10 1 5\\r\\nZPJiebeu 10 0\\r\\nayqPf 10 0\\r\\nzmZLwuf 10 2 1 8\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int Max = 2000;\nint cnt[Max];\nmap<int, int> c;\nset<int> S;\nint n, m, k;\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  for (int i = 1; i <= m; i++) {\n    int x, y;\n    scanf(\"%d%d\", &x, &y);\n    c[i] = x ^ y;\n  }\n  int key;\n  string s;\n  for (int i = 0; i < k; i++) {\n    cin >> s;\n    cin >> key >> cnt[i];\n    cnt[i]++;\n    for (int j = 0; j < cnt[i]; j++) {\n      int x;\n      scanf(\"%d\", &x);\n      S.insert(x);\n    }\n  }\n  int f = 0;\n  for (auto it : S) {\n    if (c[it]!= c[m]) f = 1;\n  }\n  if (f)\n    cout << \"NO\" << endl;\n  else\n    cout << \"YES\" << endl;\n  return 0;\n}\n"}
{"src_uid": "52b13cca189853e6af02bea8d3d85276", "id": 59, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '2 1 2\\r\\n1 2\\r\\nDmitry 1 1 1\\r\\nNatalia 2 0\\r\\nNatalia 1 1 1\\r\\nDmitry 2 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 4 3\\r\\n1 3\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\nArtem 1 1 4\\r\\nDmitry 1 1 2\\r\\nEdvard 4 2 1 3\\r\\nArtem 2 0\\r\\nDmitry 1 0\\r\\nEdvard 4 4 1 2 3 4\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1 1\\r\\n2 1\\r\\nabsgdf 1 1 1\\r\\nabsgdf 1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '2 1 1\\r\\n2 1\\r\\nabsgdf 2 1 1\\r\\nabsgdf 1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\na 1 1 1\\r\\nb 2 1 3\\r\\nc 3 1 2\\r\\na 3 1 3\\r\\nb 1 0\\r\\nc 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\na 1 1 1\\r\\nb 2 1 3\\r\\nc 3 1 2\\r\\nb 1 1 2\\r\\nc 2 1 3\\r\\na 3 1 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\nb 1 1 2\\r\\nc 2 1 3\\r\\na 3 1 1\\r\\na 3 1 3\\r\\nb 1 0\\r\\nc 2 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4 5 3\\r\\n1 2\\r\\n2 3\\r\\n2 4\\r\\n1 3\\r\\n1 3\\r\\na 1 2 4 3\\r\\nb 1 0\\r\\nc 4 3 1 2 5\\r\\na 1 2 4 3\\r\\nb 1 1 5\\r\\nc 4 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 2 2\\r\\n1 2\\r\\n2 1\\r\\nA 1 1 2\\r\\nB 1 1 1\\r\\nA 1 0\\r\\nB 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 2 4\\r\\n2 1\\r\\n4 3\\r\\na 1 1 1\\r\\nb 2 1 2\\r\\nc 3 0\\r\\nd 4 0\\r\\na 2 1 2\\r\\nb 1 1 1\\r\\nc 3 0\\r\\nd 4 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 2 4\\r\\n2 1\\r\\n4 3\\r\\na 1 1 1\\r\\nb 2 1 2\\r\\nc 3 0\\r\\nd 4 0\\r\\na 2 1 2\\r\\nb 1 1 1\\r\\nc 4 0\\r\\nd 3 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6 3 4\\r\\n1 2\\r\\n3 4\\r\\n5 6\\r\\na 1 2 1 3\\r\\nb 3 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\na 2 2 1 3\\r\\nb 4 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '6 3 4\\r\\n1 2\\r\\n3 4\\r\\n5 6\\r\\na 1 2 1 3\\r\\nb 3 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\na 2 1 1\\r\\nb 4 2 2 3\\r\\nc 5 0\\r\\nd 6 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 20 5\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n5 1\\r\\n6 5\\r\\n7 2\\r\\n8 5\\r\\n9 8\\r\\n10 6\\r\\n2 6\\r\\n3 5\\r\\n3 4\\r\\n10 5\\r\\n8 3\\r\\n9 4\\r\\n10 8\\r\\n9 2\\r\\n6 3\\r\\n3 8\\r\\n9 8\\r\\nDKkXdT 10 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\r\\nOzvgPXMzAr 5 0\\r\\nbjac 3 0\\r\\ncBPbJtoND 6 0\\r\\nw 5 0\\r\\nbjac 4 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\r\\nOzvgPXMzAr 2 0\\r\\ncBPbJtoND 5 0\\r\\nw 10 0\\r\\nDKkXdT 4 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 9 10\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\nInCeN 1 0\\r\\nIzHqPceNhj 2 1 9\\r\\neH 3 1 8\\r\\nJvgBsNFi 4 1 7\\r\\nBA 5 1 6\\r\\nRrjSTXJzhL 6 1 5\\r\\nDMx 7 1 4\\r\\nJzt 8 1 3\\r\\nhxBRlDlqwD 9 1 2\\r\\nImWeEPkggZ 10 1 1\\r\\neH 1 0\\r\\nImWeEPkggZ 2 1 9\\r\\nDMx 3 1 8\\r\\nIzHqPceNhj 4 1 7\\r\\nInCeN 5 1 6\\r\\nJvgBsNFi 6 1 5\\r\\nRrjSTXJzhL 7 1 4\\r\\nJzt 8 1 3\\r\\nhxBRlDlqwD 9 1 2\\r\\nBA 10 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '11 10 11\\r\\n1 2\\r\\n2 11\\r\\n3 4\\r\\n4 11\\r\\n5 6\\r\\n6 11\\r\\n7 8\\r\\n8 11\\r\\n9 10\\r\\n10 11\\r\\na 1 1 9\\r\\nb 2 1 10\\r\\nc 3 0\\r\\nd 4 1 1\\r\\ne 5 1 3\\r\\nf 6 1 4\\r\\ng 7 1 5\\r\\nh 8 1 6\\r\\ni 9 1 7\\r\\nj 10 1 8\\r\\nk 11 1 2\\r\\na 1 0\\r\\nb 2 0\\r\\nc 3 0\\r\\nd 4 0\\r\\ne 5 0\\r\\nf 6 0\\r\\ng 7 0\\r\\nh 8 0\\r\\ni 9 0\\r\\nj 10 0\\r\\nk 11 10 1 2 3 4 5 6 7 8 9 10\\r\\n', 'output': ['YES\\r\\n']}, {'input': '11 10 11\\r\\n1 2\\r\\n2 11\\r\\n3 4\\r\\n4 11\\r\\n5 6\\r\\n6 11\\r\\n7 8\\r\\n8 11\\r\\n9 10\\r\\n10 11\\r\\na 1 0\\r\\nb 2 0\\r\\nc 3 0\\r\\nd 4 0\\r\\ne 5 0\\r\\nf 6 0\\r\\ng 7 0\\r\\nh 8 0\\r\\ni 9 0\\r\\nj 10 0\\r\\nk 11 10 1 2 3 4 5 6 7 8 9 10\\r\\na 1 1 9\\r\\nb 2 1 10\\r\\nc 3 0\\r\\nd 4 1 1\\r\\ne 5 1 3\\r\\nf 6 1 4\\r\\ng 7 1 5\\r\\nh 8 1 6\\r\\ni 9 1 7\\r\\nj 10 1 8\\r\\nk 11 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '7 8 2\\r\\n3 7\\r\\n7 6\\r\\n1 2\\r\\n4 5\\r\\n1 3\\r\\n5 6\\r\\n4 6\\r\\n2 3\\r\\na 7 4 3 8 5 2\\r\\nb 7 4 4 6 7 1\\r\\na 1 4 3 8 5 2\\r\\nb 4 4 4 6 7 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 8 2\\r\\n3 7\\r\\n7 6\\r\\n1 2\\r\\n4 5\\r\\n1 3\\r\\n5 6\\r\\n4 6\\r\\n2 3\\r\\na 1 4 3 8 5 2\\r\\nb 4 4 4 6 7 1\\r\\na 3 4 3 8 5 2\\r\\nb 6 4 4 6 7 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '7 7 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\na 1 4 1 3 5 7\\r\\nb 2 3 2 4 6\\r\\na 7 4 1 3 5 7\\r\\nb 4 3 2 4 6\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 7 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\na 1 4 1 3 5 7\\r\\nb 2 3 2 4 6\\r\\na 4 4 1 3 5 7\\r\\nb 4 3 2 4 6\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 20 10\\r\\n1 10\\r\\n5 10\\r\\n2 9\\r\\n2 6\\r\\n9 6\\r\\n3 9\\r\\n7 1\\r\\n10 5\\r\\n7 8\\r\\n8 7\\r\\n2 3\\r\\n9 6\\r\\n1 6\\r\\n5 3\\r\\n4 3\\r\\n3 7\\r\\n8 2\\r\\n6 4\\r\\n2 3\\r\\n4 1\\r\\nTjOMmYPRUY 7 3 1 3 9\\r\\nj 6 2 11 15\\r\\nBanBSrUA 4 2 19 20\\r\\ncSWZxzR 8 1 8\\r\\nzVoRlNgt 10 2 6 7\\r\\nWLGaq 1 3 10 13 17\\r\\nKahHtTDj 1 2 2 14\\r\\nrUFZmkpI 6 1 16\\r\\ni 4 3 4 5 12\\r\\nKLGiua 6 1 18\\r\\nWLGaq 10 0\\r\\ncSWZxzR 3 1 4\\r\\nj 2 3 8 13 17\\r\\nrUFZmkpI 7 2 1 19\\r\\nKahHtTDj 5 1 16\\r\\nKLGiua 6 2 2 12\\r\\nBanBSrUA 2 4 6 7 10 15\\r\\nTjOMmYPRUY 9 3 3 9 18\\r\\nzVoRlNgt 10 2 11 20\\r\\ni 2 2 5 14\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 10 10\\r\\n7 10\\r\\n1 2\\r\\n4 3\\r\\n7 4\\r\\n9 2\\r\\n8 7\\r\\n10 8\\r\\n6 10\\r\\n5 2\\r\\n6 10\\r\\nznkkxCkkxv 9 1 10\\r\\nP 5 1 7\\r\\nKOF 1 2 3 9\\r\\nwYtfFWkb 3 0\\r\\nZPJiebeu 9 1 6\\r\\ndgzAhKY 4 0\\r\\nayqPf 3 0\\r\\nxFSb 9 0\\r\\nreYnbMDm 10 1 1\\r\\nydSIPy 6 4 2 4 5 8\\r\\nKOF 10 1 4\\r\\nayqPf 7 1 7\\r\\nreYnbMDm 4 1 5\\r\\nwYtfFWkb 5 1 6\\r\\nznkkxCkkxv 9 2 1 9\\r\\nydSIPy 10 0\\r\\nP 10 1 8\\r\\ndgzAhKY 7 1 2\\r\\nZPJiebeu 8 1 3\\r\\nxFSb 7 1 10\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 8 5\\r\\n1 3\\r\\n4 2\\r\\n1 3\\r\\n4 2\\r\\n1 5\\r\\n5 3\\r\\n2 5\\r\\n2 5\\r\\nTaMmKIk 1 0\\r\\nvrLryIxio 1 3 1 6 5\\r\\nGFKONi 2 1 4\\r\\nTzRVfh 3 2 3 8\\r\\nqp 4 2 7 2\\r\\nTaMmKIk 1 2 7 4\\r\\nvrLryIxio 1 3 1 6 5\\r\\nTzRVfh 3 1 8\\r\\nqp 4 1 3\\r\\nGFKONi 4 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 9 10\\r\\n4 7\\r\\n4 8\\r\\n8 3\\r\\n9 2\\r\\n8 3\\r\\n8 1\\r\\n6 9\\r\\n4 7\\r\\n7 4\\r\\nznkkxCkkxv 1 2 3 6\\r\\nQlf 3 0\\r\\nKOF 5 2 1 8\\r\\ndgzAhKY 5 0\\r\\nwYtfFWkb 6 2 4 7\\r\\nLbYfZPhWd 9 0\\r\\nP 10 1 9\\r\\nZPJiebeu 10 1 5\\r\\nayqPf 10 0\\r\\nzmZLwuf 10 1 2\\r\\nwYtfFWkb 2 2 7 4\\r\\nQlf 3 1 2\\r\\nznkkxCkkxv 3 3 6 3 9\\r\\nKOF 5 0\\r\\ndgzAhKY 5 0\\r\\nLbYfZPhWd 9 0\\r\\nP 10 1 5\\r\\nZPJiebeu 10 0\\r\\nayqPf 10 0\\r\\nzmZLwuf 10 2 1 8\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m, k;\nint t[1020];\nstring s[1020];\nvector<vector<int> > g(1020);\nvector<int> vis(1020);\nbool dfs(int u) {\n  vis[u] = 1;\n  for (int i = 0; i < g[u].size(); i++) {\n    int v = g[u][i];\n    if (!vis[v]) {\n      if (dfs(v)) return true;\n    }\n  }\n  if (t[u] == 0) {\n    if (!vis[t[u]]) {\n      if (dfs(t[u])) return true;\n    }\n  } else {\n    for (int i = 0; i < t[u]; i++) {\n      int v = g[u][i];\n      if (t[v] > 0 &&!vis[v]) {\n        if (dfs(v)) return true;\n      }\n    }\n  }\n  return false;\n}\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 1; i <= m; i++) {\n    int a, b;\n    cin >> a >> b;\n    a--;\n    b--;\n    g[a].push_back(b);\n    g[b].push_back(a);\n  }\n  for (int i = 0; i < k; i++) {\n    cin >> s[i] >> t[i] >> t[i + k];\n    t[i + k]--;\n    for (int j = 0; j < t[i + k]; j++) {\n      int x;\n      cin >> x;\n      x--;\n      g[i + k].push_back(x);\n      g[x].push_back(i + k);\n    }\n  }\n  bool flag = false;\n  for (int i = 0; i < k; i++) {\n    if (dfs(i + k)) {\n      flag = true;\n      break;\n    }\n  }\n  if (flag)\n    cout << \"NO\\n\";\n  else\n    cout << \"YES\\n\";\n  return 0;\n}\n"}
{"src_uid": "52b13cca189853e6af02bea8d3d85276", "id": 59, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '2 1 2\\r\\n1 2\\r\\nDmitry 1 1 1\\r\\nNatalia 2 0\\r\\nNatalia 1 1 1\\r\\nDmitry 2 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 4 3\\r\\n1 3\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\nArtem 1 1 4\\r\\nDmitry 1 1 2\\r\\nEdvard 4 2 1 3\\r\\nArtem 2 0\\r\\nDmitry 1 0\\r\\nEdvard 4 4 1 2 3 4\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1 1\\r\\n2 1\\r\\nabsgdf 1 1 1\\r\\nabsgdf 1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '2 1 1\\r\\n2 1\\r\\nabsgdf 2 1 1\\r\\nabsgdf 1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\na 1 1 1\\r\\nb 2 1 3\\r\\nc 3 1 2\\r\\na 3 1 3\\r\\nb 1 0\\r\\nc 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\na 1 1 1\\r\\nb 2 1 3\\r\\nc 3 1 2\\r\\nb 1 1 2\\r\\nc 2 1 3\\r\\na 3 1 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\nb 1 1 2\\r\\nc 2 1 3\\r\\na 3 1 1\\r\\na 3 1 3\\r\\nb 1 0\\r\\nc 2 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4 5 3\\r\\n1 2\\r\\n2 3\\r\\n2 4\\r\\n1 3\\r\\n1 3\\r\\na 1 2 4 3\\r\\nb 1 0\\r\\nc 4 3 1 2 5\\r\\na 1 2 4 3\\r\\nb 1 1 5\\r\\nc 4 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 2 2\\r\\n1 2\\r\\n2 1\\r\\nA 1 1 2\\r\\nB 1 1 1\\r\\nA 1 0\\r\\nB 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 2 4\\r\\n2 1\\r\\n4 3\\r\\na 1 1 1\\r\\nb 2 1 2\\r\\nc 3 0\\r\\nd 4 0\\r\\na 2 1 2\\r\\nb 1 1 1\\r\\nc 3 0\\r\\nd 4 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 2 4\\r\\n2 1\\r\\n4 3\\r\\na 1 1 1\\r\\nb 2 1 2\\r\\nc 3 0\\r\\nd 4 0\\r\\na 2 1 2\\r\\nb 1 1 1\\r\\nc 4 0\\r\\nd 3 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6 3 4\\r\\n1 2\\r\\n3 4\\r\\n5 6\\r\\na 1 2 1 3\\r\\nb 3 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\na 2 2 1 3\\r\\nb 4 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '6 3 4\\r\\n1 2\\r\\n3 4\\r\\n5 6\\r\\na 1 2 1 3\\r\\nb 3 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\na 2 1 1\\r\\nb 4 2 2 3\\r\\nc 5 0\\r\\nd 6 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 20 5\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n5 1\\r\\n6 5\\r\\n7 2\\r\\n8 5\\r\\n9 8\\r\\n10 6\\r\\n2 6\\r\\n3 5\\r\\n3 4\\r\\n10 5\\r\\n8 3\\r\\n9 4\\r\\n10 8\\r\\n9 2\\r\\n6 3\\r\\n3 8\\r\\n9 8\\r\\nDKkXdT 10 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\r\\nOzvgPXMzAr 5 0\\r\\nbjac 3 0\\r\\ncBPbJtoND 6 0\\r\\nw 5 0\\r\\nbjac 4 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\r\\nOzvgPXMzAr 2 0\\r\\ncBPbJtoND 5 0\\r\\nw 10 0\\r\\nDKkXdT 4 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 9 10\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\nInCeN 1 0\\r\\nIzHqPceNhj 2 1 9\\r\\neH 3 1 8\\r\\nJvgBsNFi 4 1 7\\r\\nBA 5 1 6\\r\\nRrjSTXJzhL 6 1 5\\r\\nDMx 7 1 4\\r\\nJzt 8 1 3\\r\\nhxBRlDlqwD 9 1 2\\r\\nImWeEPkggZ 10 1 1\\r\\neH 1 0\\r\\nImWeEPkggZ 2 1 9\\r\\nDMx 3 1 8\\r\\nIzHqPceNhj 4 1 7\\r\\nInCeN 5 1 6\\r\\nJvgBsNFi 6 1 5\\r\\nRrjSTXJzhL 7 1 4\\r\\nJzt 8 1 3\\r\\nhxBRlDlqwD 9 1 2\\r\\nBA 10 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '11 10 11\\r\\n1 2\\r\\n2 11\\r\\n3 4\\r\\n4 11\\r\\n5 6\\r\\n6 11\\r\\n7 8\\r\\n8 11\\r\\n9 10\\r\\n10 11\\r\\na 1 1 9\\r\\nb 2 1 10\\r\\nc 3 0\\r\\nd 4 1 1\\r\\ne 5 1 3\\r\\nf 6 1 4\\r\\ng 7 1 5\\r\\nh 8 1 6\\r\\ni 9 1 7\\r\\nj 10 1 8\\r\\nk 11 1 2\\r\\na 1 0\\r\\nb 2 0\\r\\nc 3 0\\r\\nd 4 0\\r\\ne 5 0\\r\\nf 6 0\\r\\ng 7 0\\r\\nh 8 0\\r\\ni 9 0\\r\\nj 10 0\\r\\nk 11 10 1 2 3 4 5 6 7 8 9 10\\r\\n', 'output': ['YES\\r\\n']}, {'input': '11 10 11\\r\\n1 2\\r\\n2 11\\r\\n3 4\\r\\n4 11\\r\\n5 6\\r\\n6 11\\r\\n7 8\\r\\n8 11\\r\\n9 10\\r\\n10 11\\r\\na 1 0\\r\\nb 2 0\\r\\nc 3 0\\r\\nd 4 0\\r\\ne 5 0\\r\\nf 6 0\\r\\ng 7 0\\r\\nh 8 0\\r\\ni 9 0\\r\\nj 10 0\\r\\nk 11 10 1 2 3 4 5 6 7 8 9 10\\r\\na 1 1 9\\r\\nb 2 1 10\\r\\nc 3 0\\r\\nd 4 1 1\\r\\ne 5 1 3\\r\\nf 6 1 4\\r\\ng 7 1 5\\r\\nh 8 1 6\\r\\ni 9 1 7\\r\\nj 10 1 8\\r\\nk 11 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '7 8 2\\r\\n3 7\\r\\n7 6\\r\\n1 2\\r\\n4 5\\r\\n1 3\\r\\n5 6\\r\\n4 6\\r\\n2 3\\r\\na 7 4 3 8 5 2\\r\\nb 7 4 4 6 7 1\\r\\na 1 4 3 8 5 2\\r\\nb 4 4 4 6 7 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 8 2\\r\\n3 7\\r\\n7 6\\r\\n1 2\\r\\n4 5\\r\\n1 3\\r\\n5 6\\r\\n4 6\\r\\n2 3\\r\\na 1 4 3 8 5 2\\r\\nb 4 4 4 6 7 1\\r\\na 3 4 3 8 5 2\\r\\nb 6 4 4 6 7 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '7 7 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\na 1 4 1 3 5 7\\r\\nb 2 3 2 4 6\\r\\na 7 4 1 3 5 7\\r\\nb 4 3 2 4 6\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 7 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\na 1 4 1 3 5 7\\r\\nb 2 3 2 4 6\\r\\na 4 4 1 3 5 7\\r\\nb 4 3 2 4 6\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 20 10\\r\\n1 10\\r\\n5 10\\r\\n2 9\\r\\n2 6\\r\\n9 6\\r\\n3 9\\r\\n7 1\\r\\n10 5\\r\\n7 8\\r\\n8 7\\r\\n2 3\\r\\n9 6\\r\\n1 6\\r\\n5 3\\r\\n4 3\\r\\n3 7\\r\\n8 2\\r\\n6 4\\r\\n2 3\\r\\n4 1\\r\\nTjOMmYPRUY 7 3 1 3 9\\r\\nj 6 2 11 15\\r\\nBanBSrUA 4 2 19 20\\r\\ncSWZxzR 8 1 8\\r\\nzVoRlNgt 10 2 6 7\\r\\nWLGaq 1 3 10 13 17\\r\\nKahHtTDj 1 2 2 14\\r\\nrUFZmkpI 6 1 16\\r\\ni 4 3 4 5 12\\r\\nKLGiua 6 1 18\\r\\nWLGaq 10 0\\r\\ncSWZxzR 3 1 4\\r\\nj 2 3 8 13 17\\r\\nrUFZmkpI 7 2 1 19\\r\\nKahHtTDj 5 1 16\\r\\nKLGiua 6 2 2 12\\r\\nBanBSrUA 2 4 6 7 10 15\\r\\nTjOMmYPRUY 9 3 3 9 18\\r\\nzVoRlNgt 10 2 11 20\\r\\ni 2 2 5 14\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 10 10\\r\\n7 10\\r\\n1 2\\r\\n4 3\\r\\n7 4\\r\\n9 2\\r\\n8 7\\r\\n10 8\\r\\n6 10\\r\\n5 2\\r\\n6 10\\r\\nznkkxCkkxv 9 1 10\\r\\nP 5 1 7\\r\\nKOF 1 2 3 9\\r\\nwYtfFWkb 3 0\\r\\nZPJiebeu 9 1 6\\r\\ndgzAhKY 4 0\\r\\nayqPf 3 0\\r\\nxFSb 9 0\\r\\nreYnbMDm 10 1 1\\r\\nydSIPy 6 4 2 4 5 8\\r\\nKOF 10 1 4\\r\\nayqPf 7 1 7\\r\\nreYnbMDm 4 1 5\\r\\nwYtfFWkb 5 1 6\\r\\nznkkxCkkxv 9 2 1 9\\r\\nydSIPy 10 0\\r\\nP 10 1 8\\r\\ndgzAhKY 7 1 2\\r\\nZPJiebeu 8 1 3\\r\\nxFSb 7 1 10\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 8 5\\r\\n1 3\\r\\n4 2\\r\\n1 3\\r\\n4 2\\r\\n1 5\\r\\n5 3\\r\\n2 5\\r\\n2 5\\r\\nTaMmKIk 1 0\\r\\nvrLryIxio 1 3 1 6 5\\r\\nGFKONi 2 1 4\\r\\nTzRVfh 3 2 3 8\\r\\nqp 4 2 7 2\\r\\nTaMmKIk 1 2 7 4\\r\\nvrLryIxio 1 3 1 6 5\\r\\nTzRVfh 3 1 8\\r\\nqp 4 1 3\\r\\nGFKONi 4 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 9 10\\r\\n4 7\\r\\n4 8\\r\\n8 3\\r\\n9 2\\r\\n8 3\\r\\n8 1\\r\\n6 9\\r\\n4 7\\r\\n7 4\\r\\nznkkxCkkxv 1 2 3 6\\r\\nQlf 3 0\\r\\nKOF 5 2 1 8\\r\\ndgzAhKY 5 0\\r\\nwYtfFWkb 6 2 4 7\\r\\nLbYfZPhWd 9 0\\r\\nP 10 1 9\\r\\nZPJiebeu 10 1 5\\r\\nayqPf 10 0\\r\\nzmZLwuf 10 1 2\\r\\nwYtfFWkb 2 2 7 4\\r\\nQlf 3 1 2\\r\\nznkkxCkkxv 3 3 6 3 9\\r\\nKOF 5 0\\r\\ndgzAhKY 5 0\\r\\nLbYfZPhWd 9 0\\r\\nP 10 1 5\\r\\nZPJiebeu 10 0\\r\\nayqPf 10 0\\r\\nzmZLwuf 10 2 1 8\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e6 + 500;\nvector<int> edge[1000 + 5];\nmap<string, int> mp;\nint vis[1000 + 5], f[1000 + 5];\nset<int> s;\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 0, u, v; i < m; i++) {\n    cin >> u >> v;\n    edge[u - 1].push_back(v - 1);\n    edge[v - 1].push_back(u - 1);\n  }\n  for (int i = 0, u; i < k; i++) {\n    string str;\n    cin >> str >> u >> f[i];\n    for (int j = 0, k; j < f[i]; j++) {\n      cin >> k;\n      s.insert(k - 1);\n    }\n    mp[str] = i;\n  }\n  for (int i = 0; i < k; i++) {\n    string str;\n    cin >> str;\n    if (mp[str] == i) vis[i] = 1;\n  }\n  for (int i = 0; i < k; i++) {\n    if (vis[i]) {\n      queue<int> q;\n      q.push(i);\n      while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for (auto &x : edge[u]) {\n          if (vis[x]) continue;\n          vis[x] = 1;\n          f[x] ^= f[u];\n          q.push(x);\n        }\n      }\n    }\n  }\n  for (int i = 0; i < k; i++) {\n    if (f[i]) return cout << \"NO\", 0;\n  }\n  cout << \"YES\";\n  return 0;\n}\n"}
{"src_uid": "6220f4058f9325dfb211fb1dd86e9464", "id": 60, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2700, "testcases": "[{'input': '8\\r\\n1 0 0\\r\\n1 2 0\\r\\n1 2 2\\r\\n2 1 0\\r\\n1 0 2\\r\\n2 1 1\\r\\n2 2 1\\r\\n2 20 -1\\r\\n', 'output': ['YES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 0 0\\r\\n1 5 0\\r\\n1 0 5\\r\\n2 1 1\\r\\n2 10 10\\r\\n1 2 10\\r\\n2 1 1\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '5\\r\\n1 2 -2\\r\\n1 -2 2\\r\\n1 1 5\\r\\n2 3 -1\\r\\n2 3 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\n']}, {'input': '5\\r\\n1 -1 0\\r\\n1 1 0\\r\\n1 0 2\\r\\n2 0 1\\r\\n2 0 3\\r\\n', 'output': ['YES\\r\\nNO\\r\\n']}, {'input': '6\\r\\n1 -2 0\\r\\n1 2 0\\r\\n1 0 2\\r\\n2 4 0\\r\\n2 1 0\\r\\n2 2 0\\r\\n', 'output': ['NO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '11\\r\\n1 0 -1\\r\\n1 0 1\\r\\n1 1 -1\\r\\n1 -1 -5\\r\\n1 0 5\\r\\n2 5 1\\r\\n2 5 0\\r\\n2 5 -1\\r\\n2 0 0\\r\\n2 0 10\\r\\n2 0 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -37 889\\r\\n1 771 -764\\r\\n1 -119 938\\r\\n1 599 868\\r\\n1 56 161\\r\\n1 -67 86\\r\\n2 -692 99\\r\\n2 -995 158\\r\\n2 410 116\\r\\n1 -49 -864\\r\\n2 30 -580\\r\\n1 -930 454\\r\\n1 -706 301\\r\\n2 547 -606\\r\\n2 -252 -55\\r\\n2 662 152\\r\\n2 -621 -920\\r\\n1 -128 -595\\r\\n1 -401 -265\\r\\n1 434 388\\r\\n2 299 173\\r\\n1 104 -298\\r\\n1 -693 557\\r\\n2 840 -179\\r\\n2 382 -8\\r\\n1 461 618\\r\\n1 -928 628\\r\\n2 193 -972\\r\\n2 218 945\\r\\n2 490 571\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -619 -234\\r\\n1 -140 -846\\r\\n1 762 -792\\r\\n2 153 29\\r\\n1 -353 627\\r\\n2 -544 -418\\r\\n2 -922 -965\\r\\n1 -620 -692\\r\\n1 -34 295\\r\\n2 -326 -604\\r\\n2 -906 -867\\r\\n2 57 -690\\r\\n1 -87 -822\\r\\n2 -569 739\\r\\n2 -92 -927\\r\\n2 279 806\\r\\n1 -364 19\\r\\n2 -214 -629\\r\\n2 -283 662\\r\\n2 -324 650\\r\\n1 92 -511\\r\\n2 654 -597\\r\\n1 -87 747\\r\\n2 795 46\\r\\n2 870 -157\\r\\n2 -11 520\\r\\n1 -162 -686\\r\\n2 290 -660\\r\\n2 -660 780\\r\\n2 946 910\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '30\\r\\n1 -702 -823\\r\\n1 -330 -896\\r\\n1 -564 90\\r\\n1 559 818\\r\\n2 404 716\\r\\n1 -900 -379\\r\\n2 866 -218\\r\\n2 444 615\\r\\n2 -782 -887\\r\\n2 584 -919\\r\\n2 891 775\\r\\n1 117 887\\r\\n2 598 162\\r\\n2 759 -925\\r\\n2 713 -507\\r\\n1 -329 120\\r\\n2 546 185\\r\\n2 399 500\\r\\n1 -611 763\\r\\n1 -956 187\\r\\n2 82 -26\\r\\n2 -877 -906\\r\\n1 293 -637\\r\\n2 -685 -275\\r\\n2 -725 -927\\r\\n1 -627 777\\r\\n1 -609 -563\\r\\n2 402 54\\r\\n1 -106 -908\\r\\n2 175 808\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -64 -994\\r\\n1 -692 366\\r\\n1 -72 847\\r\\n2 -963 -251\\r\\n1 -651 -994\\r\\n1 -523 -861\\r\\n2 553 -129\\r\\n2 17 785\\r\\n2 -584 -880\\r\\n1 105 657\\r\\n1 649 98\\r\\n2 -572 -492\\r\\n1 -38 -481\\r\\n1 540 463\\r\\n1 -468 -540\\r\\n1 -730 100\\r\\n1 606 -119\\r\\n1 -254 -380\\r\\n1 169 280\\r\\n1 319 62\\r\\n1 452 -556\\r\\n1 -653 887\\r\\n1 407 -786\\r\\n2 -632 181\\r\\n1 925 -967\\r\\n2 996 -709\\r\\n1 568 517\\r\\n2 -478 76\\r\\n1 156 621\\r\\n2 -592 899\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '30\\r\\n1 836 -283\\r\\n1 299 629\\r\\n1 434 -481\\r\\n1 -500 -368\\r\\n2 -105 -216\\r\\n2 -617 443\\r\\n2 -579 811\\r\\n1 411 -242\\r\\n1 -652 41\\r\\n1 962 -483\\r\\n1 -732 579\\r\\n2 554 -147\\r\\n1 39 967\\r\\n1 917 -199\\r\\n2 686 397\\r\\n1 444 780\\r\\n1 278 462\\r\\n1 729 -18\\r\\n1 252 -864\\r\\n1 884 -952\\r\\n1 272 689\\r\\n2 366 -389\\r\\n1 443 924\\r\\n1 791 -249\\r\\n2 692 74\\r\\n2 -412 550\\r\\n2 506 -472\\r\\n2 -626 474\\r\\n1 -895 -42\\r\\n2 -390 -971\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '12\\r\\n1 0 0\\r\\n1 10 0\\r\\n1 8 1\\r\\n2 11 0\\r\\n1 2 0\\r\\n2 7 0\\r\\n2 9 0\\r\\n2 1 0\\r\\n1 1 1\\r\\n2 10 0\\r\\n2 9 0\\r\\n2 11 0\\r\\n', 'output': ['NO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 5000 5000\\r\\n2 3 0\\r\\n2 2 0\\r\\n2 4 0\\r\\n2 -1 0\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '4\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 2 2\\r\\n2 4 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 0 8\\r\\n2 4 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '11\\r\\n1 0 -1\\r\\n1 0 1\\r\\n1 -1 -5\\r\\n1 6 4\\r\\n1 -8 8\\r\\n2 6 -1\\r\\n2 6 1\\r\\n2 1 0\\r\\n2 1 -1\\r\\n2 1 1\\r\\n2 6 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '11\\r\\n1 5 4\\r\\n1 5 6\\r\\n1 4 0\\r\\n1 11 9\\r\\n1 -3 13\\r\\n2 11 4\\r\\n2 11 6\\r\\n2 6 5\\r\\n2 6 4\\r\\n2 6 6\\r\\n2 11 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -2 -1000000\\r\\n1 -1 -1000000\\r\\n1 -1 -999999\\r\\n1 1 1000000\\r\\n1 -231100 1000000\\r\\n2 0 0\\r\\n2 1 999999\\r\\n', 'output': ['YES\\r\\nNO\\r\\n']}, {'input': '10\\r\\n1 -1000000 -1000000\\r\\n1 -999999 -1000000\\r\\n1 999999 1000000\\r\\n1 1000000 1000000\\r\\n2 0 0\\r\\n2 1000000 999999\\r\\n2 999999 1000000\\r\\n2 999999 999999\\r\\n2 999999 999998\\r\\n2 999999 999997\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '9\\r\\n1 -2 -4\\r\\n1 2 4\\r\\n1 -3 3\\r\\n2 -1 -2\\r\\n2 -4 -8\\r\\n2 -3 -6\\r\\n2 1 2\\r\\n2 4 8\\r\\n2 3 6\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '16\\r\\n1 -10000 0\\r\\n1 10000 0\\r\\n1 0 -1\\r\\n2 50000 0\\r\\n2 -50000 0\\r\\n2 49000 0\\r\\n2 -49000 0\\r\\n2 27000 0\\r\\n2 -27000 0\\r\\n1 0 1\\r\\n2 50000 0\\r\\n2 -50000 0\\r\\n2 49000 0\\r\\n2 -49000 0\\r\\n2 27000 0\\r\\n2 -27000 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -7000 -9000\\r\\n1 7000 9000\\r\\n1 7000 -7000\\r\\n2 21 27\\r\\n2 -21 -27\\r\\n2 7007 9009\\r\\n2 -7007 -9009\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -7000 -9000\\r\\n1 7000 9000\\r\\n1 -7000 7000\\r\\n2 21 27\\r\\n2 -21 -27\\r\\n2 7007 9009\\r\\n2 -7007 -9009\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -9000 7000\\r\\n1 9000 -7000\\r\\n1 7000 7000\\r\\n2 -27 21\\r\\n2 27 -21\\r\\n2 -9009 7007\\r\\n2 9009 -7007\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -9000 7000\\r\\n1 9000 -7000\\r\\n1 -7000 -7000\\r\\n2 -27 21\\r\\n2 27 -21\\r\\n2 -9009 7007\\r\\n2 9009 -7007\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 7 6\\r\\n1 0 5\\r\\n1 0 4\\r\\n1 2 5\\r\\n1 8 0\\r\\n1 6 4\\r\\n1 1 1\\r\\n1 8 4\\r\\n2 1 1\\r\\n2 2 7\\r\\n1 2 3\\r\\n1 4 2\\r\\n2 4 3\\r\\n1 3 2\\r\\n1 7 2\\r\\n1 1 0\\r\\n2 3 5\\r\\n1 6 5\\r\\n2 5 7\\r\\n2 1 1\\r\\n2 3 2\\r\\n1 6 2\\r\\n2 6 0\\r\\n2 8 8\\r\\n1 4 6\\r\\n1 3 5\\r\\n2 3 8\\r\\n2 0 5\\r\\n2 1 6\\r\\n1 8 3\\r\\n1 2 2\\r\\n1 8 2\\r\\n1 6 8\\r\\n1 1 3\\r\\n1 3 3\\r\\n1 5 5\\r\\n2 2 0\\r\\n2 6 7\\r\\n2 1 6\\r\\n2 6 4\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 8\\r\\n1 6 7\\r\\n1 7 7\\r\\n2 5 5\\r\\n1 4 0\\r\\n1 0 0\\r\\n2 7 3\\r\\n1 0 2\\r\\n2 8 2\\r\\n2 5 1\\r\\n2 1 2\\r\\n2 1 5\\r\\n1 1 3\\r\\n1 7 1\\r\\n1 8 7\\r\\n1 2 4\\r\\n1 2 8\\r\\n2 8 5\\r\\n2 8 6\\r\\n1 2 1\\r\\n1 5 6\\r\\n1 2 3\\r\\n2 4 3\\r\\n1 8 3\\r\\n1 1 5\\r\\n2 2 2\\r\\n2 8 5\\r\\n1 0 7\\r\\n1 7 2\\r\\n1 5 5\\r\\n1 8 4\\r\\n1 4 1\\r\\n2 3 2\\r\\n2 6 0\\r\\n2 8 7\\r\\n2 5 7\\r\\n1 3 0\\r\\n2 1 0\\r\\n2 0 7\\r\\n2 5 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 8\\r\\n1 3 8\\r\\n1 7 4\\r\\n1 4 5\\r\\n1 4 1\\r\\n2 6 6\\r\\n2 5 8\\r\\n1 5 4\\r\\n1 7 8\\r\\n2 1 3\\r\\n2 6 1\\r\\n2 8 2\\r\\n2 6 8\\r\\n1 4 3\\r\\n2 2 8\\r\\n2 0 6\\r\\n1 0 3\\r\\n2 0 3\\r\\n1 6 6\\r\\n1 5 8\\r\\n1 5 5\\r\\n1 1 2\\r\\n2 6 7\\r\\n1 4 8\\r\\n2 1 2\\r\\n2 2 7\\r\\n2 2 3\\r\\n1 8 4\\r\\n2 8 4\\r\\n2 6 5\\r\\n1 8 2\\r\\n2 7 2\\r\\n2 3 5\\r\\n1 4 0\\r\\n2 6 2\\r\\n2 3 7\\r\\n1 4 6\\r\\n1 8 6\\r\\n1 0 5\\r\\n2 2 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 4 0\\r\\n1 7 1\\r\\n1 8 0\\r\\n1 1 2\\r\\n1 1 8\\r\\n1 6 1\\r\\n2 5 2\\r\\n1 7 7\\r\\n1 6 5\\r\\n2 8 1\\r\\n2 8 7\\r\\n1 7 8\\r\\n2 3 5\\r\\n2 6 6\\r\\n1 4 2\\r\\n1 8 3\\r\\n2 6 8\\r\\n1 4 8\\r\\n2 4 6\\r\\n2 1 7\\r\\n1 4 3\\r\\n2 0 8\\r\\n1 5 2\\r\\n2 5 5\\r\\n2 1 6\\r\\n1 5 5\\r\\n1 1 5\\r\\n2 3 3\\r\\n2 0 1\\r\\n1 1 0\\r\\n2 1 4\\r\\n2 3 6\\r\\n1 4 6\\r\\n2 7 6\\r\\n1 4 4\\r\\n1 7 6\\r\\n1 6 8\\r\\n2 1 1\\r\\n1 0 1\\r\\n2 0 2\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 3 0\\r\\n1 1 4\\r\\n1 2 7\\r\\n2 4 0\\r\\n1 0 5\\r\\n1 7 5\\r\\n2 6 3\\r\\n1 0 7\\r\\n2 5 7\\r\\n1 1 0\\r\\n2 0 6\\r\\n1 6 8\\r\\n1 3 5\\r\\n1 8 5\\r\\n1 0 6\\r\\n2 7 0\\r\\n1 4 6\\r\\n1 5 2\\r\\n2 6 2\\r\\n1 7 0\\r\\n2 6 3\\r\\n1 3 7\\r\\n2 4 2\\r\\n2 1 4\\r\\n1 1 3\\r\\n1 5 0\\r\\n2 0 7\\r\\n2 6 8\\r\\n1 4 0\\r\\n2 5 0\\r\\n2 3 2\\r\\n2 6 7\\r\\n1 7 2\\r\\n1 0 3\\r\\n1 6 6\\r\\n2 4 0\\r\\n2 2 4\\r\\n1 6 5\\r\\n2 0 8\\r\\n2 0 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 0 3\\r\\n1 6 0\\r\\n1 8 7\\r\\n2 2 6\\r\\n2 7 2\\r\\n2 7 5\\r\\n1 4 7\\r\\n1 2 3\\r\\n2 2 7\\r\\n2 3 1\\r\\n1 3 5\\r\\n1 8 5\\r\\n2 6 8\\r\\n1 2 8\\r\\n2 4 6\\r\\n1 7 3\\r\\n1 3 3\\r\\n2 2 4\\r\\n1 5 0\\r\\n1 5 6\\r\\n1 1 7\\r\\n2 3 3\\r\\n1 8 6\\r\\n2 7 4\\r\\n1 7 8\\r\\n1 5 8\\r\\n2 3 8\\r\\n1 6 6\\r\\n2 8 5\\r\\n1 5 1\\r\\n2 4 2\\r\\n1 7 7\\r\\n2 4 8\\r\\n1 6 1\\r\\n1 1 5\\r\\n2 1 8\\r\\n2 4 3\\r\\n1 5 5\\r\\n1 4 0\\r\\n2 0 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 5 2\\r\\n1 5 6\\r\\n1 2 1\\r\\n2 7 2\\r\\n2 6 2\\r\\n2 0 8\\r\\n2 0 6\\r\\n1 6 8\\r\\n1 2 0\\r\\n1 0 5\\r\\n2 3 0\\r\\n1 3 8\\r\\n2 8 6\\r\\n1 0 3\\r\\n1 8 8\\r\\n2 1 1\\r\\n1 1 4\\r\\n1 1 3\\r\\n2 0 0\\r\\n2 5 6\\r\\n1 0 0\\r\\n2 0 0\\r\\n1 2 7\\r\\n2 0 0\\r\\n2 3 6\\r\\n1 3 3\\r\\n1 3 2\\r\\n1 5 3\\r\\n1 7 8\\r\\n1 7 4\\r\\n1 8 7\\r\\n1 7 3\\r\\n2 0 3\\r\\n1 4 4\\r\\n2 5 0\\r\\n1 6 6\\r\\n1 8 0\\r\\n2 6 2\\r\\n2 4 8\\r\\n2 7 2\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 4\\r\\n1 1 5\\r\\n1 3 5\\r\\n2 8 2\\r\\n2 5 2\\r\\n1 7 3\\r\\n1 8 1\\r\\n2 6 5\\r\\n1 4 3\\r\\n1 2 4\\r\\n1 2 3\\r\\n2 8 3\\r\\n2 3 5\\r\\n2 2 0\\r\\n1 6 7\\r\\n2 2 8\\r\\n1 3 0\\r\\n2 5 1\\r\\n2 2 1\\r\\n1 4 5\\r\\n2 1 6\\r\\n1 8 5\\r\\n2 7 4\\r\\n2 2 0\\r\\n1 3 2\\r\\n1 2 2\\r\\n1 8 3\\r\\n2 3 4\\r\\n1 7 6\\r\\n1 3 7\\r\\n1 5 3\\r\\n1 2 0\\r\\n2 5 7\\r\\n2 0 7\\r\\n2 3 2\\r\\n2 1 0\\r\\n1 6 0\\r\\n2 8 5\\r\\n1 3 4\\r\\n2 0 3\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 8 7\\r\\n1 0 6\\r\\n1 5 0\\r\\n2 6 7\\r\\n2 6 8\\r\\n1 3 5\\r\\n1 6 7\\r\\n1 0 0\\r\\n2 1 7\\r\\n1 2 3\\r\\n2 4 3\\r\\n2 5 5\\r\\n1 4 7\\r\\n2 2 0\\r\\n1 2 4\\r\\n1 4 2\\r\\n1 0 8\\r\\n2 0 3\\r\\n1 8 8\\r\\n2 8 1\\r\\n2 8 6\\r\\n2 4 8\\r\\n1 4 0\\r\\n1 6 6\\r\\n2 0 0\\r\\n1 6 2\\r\\n2 5 1\\r\\n1 3 0\\r\\n1 5 6\\r\\n1 8 1\\r\\n1 3 4\\r\\n1 1 3\\r\\n1 5 1\\r\\n1 5 7\\r\\n1 6 8\\r\\n1 1 5\\r\\n1 1 1\\r\\n1 6 1\\r\\n1 1 4\\r\\n2 7 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 8\\r\\n1 4 0\\r\\n1 0 6\\r\\n2 3 8\\r\\n2 4 5\\r\\n1 5 0\\r\\n2 7 6\\r\\n2 6 1\\r\\n2 1 7\\r\\n1 1 2\\r\\n1 5 4\\r\\n1 7 3\\r\\n2 6 4\\r\\n1 3 0\\r\\n2 2 8\\r\\n1 8 2\\r\\n1 8 8\\r\\n1 7 8\\r\\n2 2 5\\r\\n2 2 3\\r\\n2 4 6\\r\\n2 0 2\\r\\n2 6 7\\r\\n2 2 8\\r\\n1 8 3\\r\\n2 5 5\\r\\n1 4 8\\r\\n1 7 1\\r\\n2 7 3\\r\\n2 4 5\\r\\n2 1 1\\r\\n2 4 2\\r\\n1 1 1\\r\\n2 4 0\\r\\n1 2 4\\r\\n2 7 0\\r\\n1 4 1\\r\\n1 7 5\\r\\n1 6 6\\r\\n2 7 8\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 6 3\\r\\n1 5 3\\r\\n1 3 4\\r\\n1 2 3\\r\\n2 2 5\\r\\n1 6 1\\r\\n2 3 7\\r\\n1 0 0\\r\\n1 8 7\\r\\n1 3 8\\r\\n1 0 8\\r\\n1 3 5\\r\\n1 4 5\\r\\n1 0 5\\r\\n2 8 1\\r\\n2 4 7\\r\\n2 3 2\\r\\n1 6 4\\r\\n2 2 3\\r\\n2 6 3\\r\\n1 0 2\\r\\n2 1 2\\r\\n2 6 2\\r\\n1 5 7\\r\\n2 7 0\\r\\n1 4 8\\r\\n1 4 6\\r\\n2 8 7\\r\\n2 0 7\\r\\n1 7 8\\r\\n2 0 3\\r\\n1 5 5\\r\\n1 6 2\\r\\n2 4 5\\r\\n1 2 5\\r\\n2 3 3\\r\\n2 1 1\\r\\n1 8 3\\r\\n1 6 5\\r\\n2 5 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 6 5\\r\\n1 4 8\\r\\n1 5 7\\r\\n1 3 1\\r\\n2 4 2\\r\\n1 4 3\\r\\n1 0 7\\r\\n2 4 6\\r\\n2 4 2\\r\\n1 0 3\\r\\n2 1 5\\r\\n2 5 6\\r\\n1 8 8\\r\\n1 1 7\\r\\n1 3 3\\r\\n2 6 7\\r\\n1 7 4\\r\\n1 0 2\\r\\n1 8 4\\r\\n2 4 5\\r\\n2 0 7\\r\\n1 4 1\\r\\n1 4 4\\r\\n1 5 3\\r\\n1 1 0\\r\\n1 4 5\\r\\n2 1 4\\r\\n1 0 6\\r\\n2 1 0\\r\\n1 5 5\\r\\n2 5 6\\r\\n2 8 2\\r\\n2 1 7\\r\\n2 8 1\\r\\n2 0 5\\r\\n1 0 4\\r\\n1 6 6\\r\\n2 1 1\\r\\n1 8 0\\r\\n2 6 3\\r\\n', 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 7\\r\\n1 3 3\\r\\n1 6 5\\r\\n1 7 3\\r\\n1 2 8\\r\\n1 3 0\\r\\n2 0 0\\r\\n1 7 7\\r\\n2 6 8\\r\\n2 6 0\\r\\n2 4 7\\r\\n1 7 8\\r\\n2 0 7\\r\\n2 0 5\\r\\n1 6 2\\r\\n1 7 1\\r\\n1 1 1\\r\\n2 4 8\\r\\n2 2 1\\r\\n2 7 0\\r\\n2 5 4\\r\\n1 2 4\\r\\n2 1 3\\r\\n2 0 5\\r\\n2 5 5\\r\\n2 1 4\\r\\n2 5 5\\r\\n1 2 6\\r\\n1 4 4\\r\\n2 0 8\\r\\n1 0 6\\r\\n2 0 5\\r\\n2 4 6\\r\\n2 8 1\\r\\n2 2 0\\r\\n2 3 3\\r\\n1 0 4\\r\\n1 3 7\\r\\n2 3 2\\r\\n2 3 7\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 7\\r\\n1 6 5\\r\\n1 2 0\\r\\n2 4 5\\r\\n1 1 0\\r\\n2 3 4\\r\\n1 7 3\\r\\n2 8 1\\r\\n2 0 0\\r\\n2 2 0\\r\\n1 7 4\\r\\n1 6 3\\r\\n2 8 1\\r\\n2 6 0\\r\\n1 4 7\\r\\n2 4 2\\r\\n1 4 5\\r\\n2 3 7\\r\\n2 6 8\\r\\n2 2 6\\r\\n2 7 4\\r\\n1 0 6\\r\\n2 1 7\\r\\n1 4 4\\r\\n2 2 3\\r\\n1 1 3\\r\\n1 8 5\\r\\n1 0 5\\r\\n1 1 1\\r\\n1 4 3\\r\\n2 5 3\\r\\n1 3 6\\r\\n1 7 0\\r\\n2 5 6\\r\\n2 5 6\\r\\n1 0 7\\r\\n2 7 0\\r\\n2 6 4\\r\\n1 3 7\\r\\n2 2 2\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 4 4\\r\\n1 2 6\\r\\n1 8 2\\r\\n2 4 6\\r\\n1 5 4\\r\\n2 5 8\\r\\n2 6 7\\r\\n2 4 8\\r\\n1 1 0\\r\\n1 3 1\\r\\n1 0 3\\r\\n1 8 1\\r\\n1 3 0\\r\\n2 7 4\\r\\n1 2 0\\r\\n1 8 5\\r\\n1 6 2\\r\\n2 2 0\\r\\n1 0 4\\r\\n1 1 1\\r\\n1 4 5\\r\\n2 8 3\\r\\n2 1 0\\r\\n2 5 5\\r\\n1 3 4\\r\\n2 0 7\\r\\n1 4 3\\r\\n1 7 0\\r\\n2 3 8\\r\\n1 0 1\\r\\n1 0 7\\r\\n2 4 1\\r\\n1 0 6\\r\\n2 1 2\\r\\n1 5 7\\r\\n2 7 2\\r\\n2 7 3\\r\\n1 3 6\\r\\n2 7 3\\r\\n2 7 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 0 8\\r\\n1 3 5\\r\\n1 0 2\\r\\n1 8 0\\r\\n1 5 3\\r\\n1 5 2\\r\\n2 8 2\\r\\n2 7 6\\r\\n1 6 1\\r\\n2 2 7\\r\\n2 6 5\\r\\n1 3 7\\r\\n2 7 8\\r\\n1 2 4\\r\\n1 4 2\\r\\n2 5 7\\r\\n2 0 6\\r\\n1 3 1\\r\\n2 2 3\\r\\n1 5 7\\r\\n2 2 8\\r\\n1 7 1\\r\\n1 3 0\\r\\n2 5 5\\r\\n1 7 4\\r\\n2 5 5\\r\\n1 2 0\\r\\n2 4 3\\r\\n2 8 1\\r\\n2 8 0\\r\\n1 2 6\\r\\n1 7 5\\r\\n2 4 8\\r\\n1 2 3\\r\\n2 6 6\\r\\n1 7 8\\r\\n2 7 5\\r\\n2 7 4\\r\\n1 8 1\\r\\n2 5 6\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 3\\r\\n1 7 2\\r\\n1 6 2\\r\\n2 0 8\\r\\n2 3 8\\r\\n2 0 3\\r\\n1 5 8\\r\\n2 7 1\\r\\n1 8 1\\r\\n2 8 7\\r\\n1 5 5\\r\\n2 2 4\\r\\n2 3 3\\r\\n2 2 4\\r\\n1 0 1\\r\\n1 2 0\\r\\n1 7 4\\r\\n2 7 4\\r\\n2 5 5\\r\\n1 1 1\\r\\n2 6 4\\r\\n2 1 7\\r\\n2 5 0\\r\\n1 8 0\\r\\n2 6 2\\r\\n1 7 1\\r\\n2 8 6\\r\\n1 8 7\\r\\n2 2 5\\r\\n1 7 3\\r\\n1 5 6\\r\\n1 4 0\\r\\n2 3 8\\r\\n2 8 6\\r\\n1 7 0\\r\\n2 3 5\\r\\n2 6 1\\r\\n1 2 6\\r\\n1 1 2\\r\\n2 7 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 4 4\\r\\n1 2 6\\r\\n1 7 2\\r\\n2 1 4\\r\\n2 0 2\\r\\n1 5 4\\r\\n2 5 1\\r\\n1 0 8\\r\\n1 1 7\\r\\n2 2 0\\r\\n1 8 4\\r\\n2 6 5\\r\\n2 8 0\\r\\n1 6 5\\r\\n2 8 7\\r\\n2 0 0\\r\\n2 4 0\\r\\n2 7 2\\r\\n2 6 8\\r\\n1 7 8\\r\\n2 8 8\\r\\n2 4 7\\r\\n1 7 1\\r\\n2 8 8\\r\\n1 5 8\\r\\n1 3 6\\r\\n1 4 6\\r\\n1 3 5\\r\\n2 6 1\\r\\n2 1 3\\r\\n2 8 4\\r\\n2 8 5\\r\\n2 1 3\\r\\n2 7 1\\r\\n2 5 8\\r\\n1 8 2\\r\\n2 6 1\\r\\n1 7 4\\r\\n1 8 5\\r\\n2 6 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 1\\r\\n1 4 7\\r\\n1 1 1\\r\\n1 2 4\\r\\n2 4 4\\r\\n1 4 4\\r\\n2 0 6\\r\\n2 7 6\\r\\n1 4 0\\r\\n2 6 5\\r\\n2 5 2\\r\\n1 6 1\\r\\n2 7 0\\r\\n1 6 2\\r\\n2 3 2\\r\\n1 0 6\\r\\n2 7 0\\r\\n1 8 6\\r\\n2 1 3\\r\\n2 0 1\\r\\n1 2 5\\r\\n1 0 2\\r\\n2 4 2\\r\\n2 6 8\\r\\n2 2 0\\r\\n2 5 7\\r\\n2 6 0\\r\\n1 2 2\\r\\n2 0 3\\r\\n1 7 4\\r\\n2 7 3\\r\\n1 4 1\\r\\n2 2 6\\r\\n2 8 2\\r\\n1 8 3\\r\\n1 8 7\\r\\n1 0 3\\r\\n1 7 0\\r\\n2 2 1\\r\\n2 6 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 7\\r\\n1 5 8\\r\\n1 4 4\\r\\n1 8 1\\r\\n1 4 6\\r\\n1 6 6\\r\\n2 5 0\\r\\n2 3 4\\r\\n1 5 3\\r\\n2 0 7\\r\\n2 3 1\\r\\n1 5 4\\r\\n1 3 4\\r\\n2 3 4\\r\\n2 8 2\\r\\n1 0 1\\r\\n1 0 8\\r\\n2 3 8\\r\\n1 0 4\\r\\n2 4 6\\r\\n1 7 3\\r\\n2 4 0\\r\\n1 2 3\\r\\n2 8 1\\r\\n2 8 4\\r\\n1 7 0\\r\\n2 2 6\\r\\n2 2 2\\r\\n1 2 2\\r\\n1 6 5\\r\\n1 7 1\\r\\n2 5 1\\r\\n1 2 4\\r\\n2 3 2\\r\\n1 8 4\\r\\n1 7 4\\r\\n1 1 2\\r\\n1 3 2\\r\\n2 7 3\\r\\n2 4 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 0\\r\\n1 0 7\\r\\n1 8 4\\r\\n2 1 6\\r\\n2 1 2\\r\\n1 0 0\\r\\n1 1 1\\r\\n2 5 2\\r\\n1 8 5\\r\\n1 0 6\\r\\n2 6 8\\r\\n1 4 2\\r\\n1 8 3\\r\\n2 2 3\\r\\n1 6 3\\r\\n2 6 0\\r\\n1 5 3\\r\\n2 0 5\\r\\n1 3 4\\r\\n2 4 4\\r\\n1 8 6\\r\\n1 1 2\\r\\n1 5 7\\r\\n1 5 1\\r\\n1 3 8\\r\\n2 7 0\\r\\n1 7 2\\r\\n1 3 3\\r\\n2 6 5\\r\\n2 5 0\\r\\n2 2 4\\r\\n2 5 5\\r\\n2 4 6\\r\\n1 6 1\\r\\n1 5 2\\r\\n2 7 5\\r\\n1 8 7\\r\\n1 1 6\\r\\n1 4 8\\r\\n2 8 5\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 8 1\\r\\n1 8 6\\r\\n1 1 1\\r\\n2 5 4\\r\\n2 7 8\\r\\n1 6 2\\r\\n1 7 4\\r\\n1 4 4\\r\\n2 3 7\\r\\n1 6 3\\r\\n2 0 1\\r\\n1 8 0\\r\\n2 0 3\\r\\n1 6 0\\r\\n1 3 4\\r\\n1 1 8\\r\\n1 3 3\\r\\n2 3 1\\r\\n2 4 0\\r\\n1 4 3\\r\\n2 1 3\\r\\n2 5 4\\r\\n1 8 5\\r\\n2 1 0\\r\\n1 4 7\\r\\n2 5 3\\r\\n2 4 1\\r\\n1 4 0\\r\\n1 6 8\\r\\n1 5 1\\r\\n2 8 3\\r\\n2 5 7\\r\\n1 3 2\\r\\n1 7 5\\r\\n1 7 3\\r\\n1 0 8\\r\\n1 7 8\\r\\n2 7 3\\r\\n2 6 7\\r\\n2 4 2\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '50\\r\\n1 58 -49\\r\\n1 -77 -90\\r\\n1 32 -52\\r\\n1 -89 -31\\r\\n1 99 -34\\r\\n1 -3 -59\\r\\n2 65 93\\r\\n2 67 -51\\r\\n2 25 -47\\r\\n1 -72 86\\r\\n2 48 -45\\r\\n2 64 -70\\r\\n2 -96 -43\\r\\n2 87 -58\\r\\n2 3 21\\r\\n2 39 -57\\r\\n1 -58 49\\r\\n2 -1 87\\r\\n2 -63 19\\r\\n2 -27 90\\r\\n2 31 3\\r\\n1 55 41\\r\\n1 90 39\\r\\n1 -53 28\\r\\n2 49 -51\\r\\n2 6 42\\r\\n1 50 15\\r\\n2 21 -2\\r\\n2 -6 70\\r\\n1 -13 -61\\r\\n2 -60 -69\\r\\n1 -22 33\\r\\n1 -22 17\\r\\n2 30 -98\\r\\n2 -56 -48\\r\\n2 -84 -77\\r\\n2 49 56\\r\\n1 81 29\\r\\n1 26 29\\r\\n1 -14 20\\r\\n2 -37 83\\r\\n1 -91 96\\r\\n2 57 19\\r\\n1 94 54\\r\\n2 25 -30\\r\\n1 92 5\\r\\n2 -48 51\\r\\n2 81 23\\r\\n1 39 -47\\r\\n2 34 89\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '50\\r\\n1 7 -8\\r\\n1 -30 -28\\r\\n1 -8 2\\r\\n1 -28 -29\\r\\n2 -8 -21\\r\\n2 -23 19\\r\\n2 -23 18\\r\\n1 6 27\\r\\n2 -17 20\\r\\n1 9 -5\\r\\n2 -27 29\\r\\n1 -8 27\\r\\n2 13 12\\r\\n2 -29 13\\r\\n2 -30 8\\r\\n2 -30 -8\\r\\n1 -24 -21\\r\\n1 -14 -15\\r\\n2 -23 14\\r\\n2 -12 -13\\r\\n1 15 -24\\r\\n1 28 6\\r\\n2 -20 -21\\r\\n1 -8 -13\\r\\n1 -15 -15\\r\\n1 11 20\\r\\n2 24 -26\\r\\n1 -30 -11\\r\\n2 -17 18\\r\\n1 -17 6\\r\\n2 5 -9\\r\\n2 -29 8\\r\\n2 -29 1\\r\\n2 10 24\\r\\n2 29 27\\r\\n2 -12 21\\r\\n2 5 -28\\r\\n2 28 27\\r\\n2 -4 -4\\r\\n1 -24 29\\r\\n1 17 -1\\r\\n1 0 17\\r\\n1 -2 -1\\r\\n2 -7 -10\\r\\n1 5 -16\\r\\n2 -3 -26\\r\\n2 -7 17\\r\\n1 -27 -26\\r\\n1 -3 -30\\r\\n2 28 -15\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '10\\r\\n1 0 0\\r\\n1 6 0\\r\\n1 0 6\\r\\n2 0 0\\r\\n2 6 0\\r\\n2 0 6\\r\\n2 3 3\\r\\n2 3 0\\r\\n2 0 3\\r\\n2 2 2\\r\\n', 'output': ['YES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '50\\r\\n1 33 -21\\r\\n1 9 82\\r\\n1 -69 -54\\r\\n2 -3 84\\r\\n1 -9 -28\\r\\n2 -54 87\\r\\n2 26 -64\\r\\n2 8 52\\r\\n2 98 63\\r\\n2 -77 10\\r\\n2 -52 -46\\r\\n1 92 42\\r\\n2 -53 -69\\r\\n2 -48 44\\r\\n1 -52 90\\r\\n2 56 29\\r\\n2 -100 -13\\r\\n2 -23 1\\r\\n2 6 91\\r\\n2 53 -38\\r\\n1 48 -35\\r\\n2 19 -62\\r\\n2 -62 49\\r\\n1 59 78\\r\\n2 85 72\\r\\n2 28 76\\r\\n2 46 -91\\r\\n2 6 32\\r\\n2 -16 -59\\r\\n1 40 -53\\r\\n2 -6 87\\r\\n2 -79 -58\\r\\n2 -12 25\\r\\n2 73 49\\r\\n1 57 -42\\r\\n2 12 19\\r\\n1 -60 -5\\r\\n1 -40 -20\\r\\n1 90 35\\r\\n2 10 3\\r\\n2 63 -49\\r\\n1 50 10\\r\\n1 0 77\\r\\n1 92 24\\r\\n1 71 -7\\r\\n2 46 22\\r\\n1 19 81\\r\\n1 -3 -71\\r\\n2 -44 56\\r\\n2 92 34\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 3\\r\\n1 3 1\\r\\n1 0 1\\r\\n2 3 0\\r\\n2 6 5\\r\\n2 1 5\\r\\n2 8 3\\r\\n2 0 5\\r\\n2 3 4\\r\\n1 7 6\\r\\n1 1 0\\r\\n1 0 8\\r\\n1 3 7\\r\\n2 4 5\\r\\n2 2 5\\r\\n2 2 0\\r\\n1 7 4\\r\\n2 7 3\\r\\n1 5 0\\r\\n1 4 6\\r\\n1 1 5\\r\\n1 7 8\\r\\n2 7 5\\r\\n1 0 4\\r\\n2 3 8\\r\\n1 1 8\\r\\n1 0 5\\r\\n1 4 8\\r\\n2 8 5\\r\\n1 8 5\\r\\n2 3 6\\r\\n1 8 7\\r\\n2 4 3\\r\\n1 5 2\\r\\n2 2 8\\r\\n2 5 3\\r\\n2 4 0\\r\\n1 4 4\\r\\n1 6 5\\r\\n2 2 7\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nstruct node {\n  int x;\n  int y;\n  int flag;\n};\nconst int maxn = 500010;\nnode tri[4];\nint n;\nint check(node A, node B, node C, node D) {\n  int c1, c2;\n  int m1, m2;\n  c1 = (B.x - A.x) * (D.y - A.y) - (B.y - A.y) * (D.x - A.x);\n  c2 = (C.x - A.x) * (D.y - A.y) - (C.y - A.y) * (D.x - A.x);\n  if ((c1 > 0 && c2 < 0) || (c1 < 0 && c2 > 0))\n    return 1;\n  else\n    return 0;\n}\nint main() {\n  int t;\n  int x, y;\n  scanf(\"%d\", &t);\n  n = 3;\n  while (t--) {\n    scanf(\"%d %d %d\", &x, &y, &t);\n    tri[n].x = x;\n    tri[n].y = y;\n    if (t == 1)\n      tri[n].flag = 1;\n    else\n      tri[n].flag = 0;\n    n++;\n    if (n > 3) break;\n  }\n  while (t--) {\n    scanf(\"%d %d\", &x, &y);\n    int flag = 0;\n    for (int i = 1; i < n; i++) {\n      if (tri[i].flag == 1) {\n        m1 = (y - tri[i].y) * (tri[n - 1].x - tri[i].x);\n        m2 = (tri[i].y - tri[n - 1].y) * (x - tri[i].x);\n        if (m1 < 0 && m2 < 0) flag = 1;\n      }\n      flag = check(tri[i], tri[i + 1], tri[n - 1], tri[n]);\n      if (flag) {\n        printf(\"YES\\n\");\n        break;\n      }\n    }\n    if (!flag) printf(\"NO\\n\");\n  }\n  return 0;\n}\n"}
{"src_uid": "6220f4058f9325dfb211fb1dd86e9464", "id": 60, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2700, "testcases": "[{'input': '8\\r\\n1 0 0\\r\\n1 2 0\\r\\n1 2 2\\r\\n2 1 0\\r\\n1 0 2\\r\\n2 1 1\\r\\n2 2 1\\r\\n2 20 -1\\r\\n', 'output': ['YES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 0 0\\r\\n1 5 0\\r\\n1 0 5\\r\\n2 1 1\\r\\n2 10 10\\r\\n1 2 10\\r\\n2 1 1\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '5\\r\\n1 2 -2\\r\\n1 -2 2\\r\\n1 1 5\\r\\n2 3 -1\\r\\n2 3 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\n']}, {'input': '5\\r\\n1 -1 0\\r\\n1 1 0\\r\\n1 0 2\\r\\n2 0 1\\r\\n2 0 3\\r\\n', 'output': ['YES\\r\\nNO\\r\\n']}, {'input': '6\\r\\n1 -2 0\\r\\n1 2 0\\r\\n1 0 2\\r\\n2 4 0\\r\\n2 1 0\\r\\n2 2 0\\r\\n', 'output': ['NO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '11\\r\\n1 0 -1\\r\\n1 0 1\\r\\n1 1 -1\\r\\n1 -1 -5\\r\\n1 0 5\\r\\n2 5 1\\r\\n2 5 0\\r\\n2 5 -1\\r\\n2 0 0\\r\\n2 0 10\\r\\n2 0 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -37 889\\r\\n1 771 -764\\r\\n1 -119 938\\r\\n1 599 868\\r\\n1 56 161\\r\\n1 -67 86\\r\\n2 -692 99\\r\\n2 -995 158\\r\\n2 410 116\\r\\n1 -49 -864\\r\\n2 30 -580\\r\\n1 -930 454\\r\\n1 -706 301\\r\\n2 547 -606\\r\\n2 -252 -55\\r\\n2 662 152\\r\\n2 -621 -920\\r\\n1 -128 -595\\r\\n1 -401 -265\\r\\n1 434 388\\r\\n2 299 173\\r\\n1 104 -298\\r\\n1 -693 557\\r\\n2 840 -179\\r\\n2 382 -8\\r\\n1 461 618\\r\\n1 -928 628\\r\\n2 193 -972\\r\\n2 218 945\\r\\n2 490 571\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -619 -234\\r\\n1 -140 -846\\r\\n1 762 -792\\r\\n2 153 29\\r\\n1 -353 627\\r\\n2 -544 -418\\r\\n2 -922 -965\\r\\n1 -620 -692\\r\\n1 -34 295\\r\\n2 -326 -604\\r\\n2 -906 -867\\r\\n2 57 -690\\r\\n1 -87 -822\\r\\n2 -569 739\\r\\n2 -92 -927\\r\\n2 279 806\\r\\n1 -364 19\\r\\n2 -214 -629\\r\\n2 -283 662\\r\\n2 -324 650\\r\\n1 92 -511\\r\\n2 654 -597\\r\\n1 -87 747\\r\\n2 795 46\\r\\n2 870 -157\\r\\n2 -11 520\\r\\n1 -162 -686\\r\\n2 290 -660\\r\\n2 -660 780\\r\\n2 946 910\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '30\\r\\n1 -702 -823\\r\\n1 -330 -896\\r\\n1 -564 90\\r\\n1 559 818\\r\\n2 404 716\\r\\n1 -900 -379\\r\\n2 866 -218\\r\\n2 444 615\\r\\n2 -782 -887\\r\\n2 584 -919\\r\\n2 891 775\\r\\n1 117 887\\r\\n2 598 162\\r\\n2 759 -925\\r\\n2 713 -507\\r\\n1 -329 120\\r\\n2 546 185\\r\\n2 399 500\\r\\n1 -611 763\\r\\n1 -956 187\\r\\n2 82 -26\\r\\n2 -877 -906\\r\\n1 293 -637\\r\\n2 -685 -275\\r\\n2 -725 -927\\r\\n1 -627 777\\r\\n1 -609 -563\\r\\n2 402 54\\r\\n1 -106 -908\\r\\n2 175 808\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -64 -994\\r\\n1 -692 366\\r\\n1 -72 847\\r\\n2 -963 -251\\r\\n1 -651 -994\\r\\n1 -523 -861\\r\\n2 553 -129\\r\\n2 17 785\\r\\n2 -584 -880\\r\\n1 105 657\\r\\n1 649 98\\r\\n2 -572 -492\\r\\n1 -38 -481\\r\\n1 540 463\\r\\n1 -468 -540\\r\\n1 -730 100\\r\\n1 606 -119\\r\\n1 -254 -380\\r\\n1 169 280\\r\\n1 319 62\\r\\n1 452 -556\\r\\n1 -653 887\\r\\n1 407 -786\\r\\n2 -632 181\\r\\n1 925 -967\\r\\n2 996 -709\\r\\n1 568 517\\r\\n2 -478 76\\r\\n1 156 621\\r\\n2 -592 899\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '30\\r\\n1 836 -283\\r\\n1 299 629\\r\\n1 434 -481\\r\\n1 -500 -368\\r\\n2 -105 -216\\r\\n2 -617 443\\r\\n2 -579 811\\r\\n1 411 -242\\r\\n1 -652 41\\r\\n1 962 -483\\r\\n1 -732 579\\r\\n2 554 -147\\r\\n1 39 967\\r\\n1 917 -199\\r\\n2 686 397\\r\\n1 444 780\\r\\n1 278 462\\r\\n1 729 -18\\r\\n1 252 -864\\r\\n1 884 -952\\r\\n1 272 689\\r\\n2 366 -389\\r\\n1 443 924\\r\\n1 791 -249\\r\\n2 692 74\\r\\n2 -412 550\\r\\n2 506 -472\\r\\n2 -626 474\\r\\n1 -895 -42\\r\\n2 -390 -971\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '12\\r\\n1 0 0\\r\\n1 10 0\\r\\n1 8 1\\r\\n2 11 0\\r\\n1 2 0\\r\\n2 7 0\\r\\n2 9 0\\r\\n2 1 0\\r\\n1 1 1\\r\\n2 10 0\\r\\n2 9 0\\r\\n2 11 0\\r\\n', 'output': ['NO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 5000 5000\\r\\n2 3 0\\r\\n2 2 0\\r\\n2 4 0\\r\\n2 -1 0\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '4\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 2 2\\r\\n2 4 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 0 8\\r\\n2 4 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '11\\r\\n1 0 -1\\r\\n1 0 1\\r\\n1 -1 -5\\r\\n1 6 4\\r\\n1 -8 8\\r\\n2 6 -1\\r\\n2 6 1\\r\\n2 1 0\\r\\n2 1 -1\\r\\n2 1 1\\r\\n2 6 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '11\\r\\n1 5 4\\r\\n1 5 6\\r\\n1 4 0\\r\\n1 11 9\\r\\n1 -3 13\\r\\n2 11 4\\r\\n2 11 6\\r\\n2 6 5\\r\\n2 6 4\\r\\n2 6 6\\r\\n2 11 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -2 -1000000\\r\\n1 -1 -1000000\\r\\n1 -1 -999999\\r\\n1 1 1000000\\r\\n1 -231100 1000000\\r\\n2 0 0\\r\\n2 1 999999\\r\\n', 'output': ['YES\\r\\nNO\\r\\n']}, {'input': '10\\r\\n1 -1000000 -1000000\\r\\n1 -999999 -1000000\\r\\n1 999999 1000000\\r\\n1 1000000 1000000\\r\\n2 0 0\\r\\n2 1000000 999999\\r\\n2 999999 1000000\\r\\n2 999999 999999\\r\\n2 999999 999998\\r\\n2 999999 999997\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '9\\r\\n1 -2 -4\\r\\n1 2 4\\r\\n1 -3 3\\r\\n2 -1 -2\\r\\n2 -4 -8\\r\\n2 -3 -6\\r\\n2 1 2\\r\\n2 4 8\\r\\n2 3 6\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '16\\r\\n1 -10000 0\\r\\n1 10000 0\\r\\n1 0 -1\\r\\n2 50000 0\\r\\n2 -50000 0\\r\\n2 49000 0\\r\\n2 -49000 0\\r\\n2 27000 0\\r\\n2 -27000 0\\r\\n1 0 1\\r\\n2 50000 0\\r\\n2 -50000 0\\r\\n2 49000 0\\r\\n2 -49000 0\\r\\n2 27000 0\\r\\n2 -27000 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -7000 -9000\\r\\n1 7000 9000\\r\\n1 7000 -7000\\r\\n2 21 27\\r\\n2 -21 -27\\r\\n2 7007 9009\\r\\n2 -7007 -9009\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -7000 -9000\\r\\n1 7000 9000\\r\\n1 -7000 7000\\r\\n2 21 27\\r\\n2 -21 -27\\r\\n2 7007 9009\\r\\n2 -7007 -9009\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -9000 7000\\r\\n1 9000 -7000\\r\\n1 7000 7000\\r\\n2 -27 21\\r\\n2 27 -21\\r\\n2 -9009 7007\\r\\n2 9009 -7007\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -9000 7000\\r\\n1 9000 -7000\\r\\n1 -7000 -7000\\r\\n2 -27 21\\r\\n2 27 -21\\r\\n2 -9009 7007\\r\\n2 9009 -7007\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 7 6\\r\\n1 0 5\\r\\n1 0 4\\r\\n1 2 5\\r\\n1 8 0\\r\\n1 6 4\\r\\n1 1 1\\r\\n1 8 4\\r\\n2 1 1\\r\\n2 2 7\\r\\n1 2 3\\r\\n1 4 2\\r\\n2 4 3\\r\\n1 3 2\\r\\n1 7 2\\r\\n1 1 0\\r\\n2 3 5\\r\\n1 6 5\\r\\n2 5 7\\r\\n2 1 1\\r\\n2 3 2\\r\\n1 6 2\\r\\n2 6 0\\r\\n2 8 8\\r\\n1 4 6\\r\\n1 3 5\\r\\n2 3 8\\r\\n2 0 5\\r\\n2 1 6\\r\\n1 8 3\\r\\n1 2 2\\r\\n1 8 2\\r\\n1 6 8\\r\\n1 1 3\\r\\n1 3 3\\r\\n1 5 5\\r\\n2 2 0\\r\\n2 6 7\\r\\n2 1 6\\r\\n2 6 4\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 8\\r\\n1 6 7\\r\\n1 7 7\\r\\n2 5 5\\r\\n1 4 0\\r\\n1 0 0\\r\\n2 7 3\\r\\n1 0 2\\r\\n2 8 2\\r\\n2 5 1\\r\\n2 1 2\\r\\n2 1 5\\r\\n1 1 3\\r\\n1 7 1\\r\\n1 8 7\\r\\n1 2 4\\r\\n1 2 8\\r\\n2 8 5\\r\\n2 8 6\\r\\n1 2 1\\r\\n1 5 6\\r\\n1 2 3\\r\\n2 4 3\\r\\n1 8 3\\r\\n1 1 5\\r\\n2 2 2\\r\\n2 8 5\\r\\n1 0 7\\r\\n1 7 2\\r\\n1 5 5\\r\\n1 8 4\\r\\n1 4 1\\r\\n2 3 2\\r\\n2 6 0\\r\\n2 8 7\\r\\n2 5 7\\r\\n1 3 0\\r\\n2 1 0\\r\\n2 0 7\\r\\n2 5 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 8\\r\\n1 3 8\\r\\n1 7 4\\r\\n1 4 5\\r\\n1 4 1\\r\\n2 6 6\\r\\n2 5 8\\r\\n1 5 4\\r\\n1 7 8\\r\\n2 1 3\\r\\n2 6 1\\r\\n2 8 2\\r\\n2 6 8\\r\\n1 4 3\\r\\n2 2 8\\r\\n2 0 6\\r\\n1 0 3\\r\\n2 0 3\\r\\n1 6 6\\r\\n1 5 8\\r\\n1 5 5\\r\\n1 1 2\\r\\n2 6 7\\r\\n1 4 8\\r\\n2 1 2\\r\\n2 2 7\\r\\n2 2 3\\r\\n1 8 4\\r\\n2 8 4\\r\\n2 6 5\\r\\n1 8 2\\r\\n2 7 2\\r\\n2 3 5\\r\\n1 4 0\\r\\n2 6 2\\r\\n2 3 7\\r\\n1 4 6\\r\\n1 8 6\\r\\n1 0 5\\r\\n2 2 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 4 0\\r\\n1 7 1\\r\\n1 8 0\\r\\n1 1 2\\r\\n1 1 8\\r\\n1 6 1\\r\\n2 5 2\\r\\n1 7 7\\r\\n1 6 5\\r\\n2 8 1\\r\\n2 8 7\\r\\n1 7 8\\r\\n2 3 5\\r\\n2 6 6\\r\\n1 4 2\\r\\n1 8 3\\r\\n2 6 8\\r\\n1 4 8\\r\\n2 4 6\\r\\n2 1 7\\r\\n1 4 3\\r\\n2 0 8\\r\\n1 5 2\\r\\n2 5 5\\r\\n2 1 6\\r\\n1 5 5\\r\\n1 1 5\\r\\n2 3 3\\r\\n2 0 1\\r\\n1 1 0\\r\\n2 1 4\\r\\n2 3 6\\r\\n1 4 6\\r\\n2 7 6\\r\\n1 4 4\\r\\n1 7 6\\r\\n1 6 8\\r\\n2 1 1\\r\\n1 0 1\\r\\n2 0 2\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 3 0\\r\\n1 1 4\\r\\n1 2 7\\r\\n2 4 0\\r\\n1 0 5\\r\\n1 7 5\\r\\n2 6 3\\r\\n1 0 7\\r\\n2 5 7\\r\\n1 1 0\\r\\n2 0 6\\r\\n1 6 8\\r\\n1 3 5\\r\\n1 8 5\\r\\n1 0 6\\r\\n2 7 0\\r\\n1 4 6\\r\\n1 5 2\\r\\n2 6 2\\r\\n1 7 0\\r\\n2 6 3\\r\\n1 3 7\\r\\n2 4 2\\r\\n2 1 4\\r\\n1 1 3\\r\\n1 5 0\\r\\n2 0 7\\r\\n2 6 8\\r\\n1 4 0\\r\\n2 5 0\\r\\n2 3 2\\r\\n2 6 7\\r\\n1 7 2\\r\\n1 0 3\\r\\n1 6 6\\r\\n2 4 0\\r\\n2 2 4\\r\\n1 6 5\\r\\n2 0 8\\r\\n2 0 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 0 3\\r\\n1 6 0\\r\\n1 8 7\\r\\n2 2 6\\r\\n2 7 2\\r\\n2 7 5\\r\\n1 4 7\\r\\n1 2 3\\r\\n2 2 7\\r\\n2 3 1\\r\\n1 3 5\\r\\n1 8 5\\r\\n2 6 8\\r\\n1 2 8\\r\\n2 4 6\\r\\n1 7 3\\r\\n1 3 3\\r\\n2 2 4\\r\\n1 5 0\\r\\n1 5 6\\r\\n1 1 7\\r\\n2 3 3\\r\\n1 8 6\\r\\n2 7 4\\r\\n1 7 8\\r\\n1 5 8\\r\\n2 3 8\\r\\n1 6 6\\r\\n2 8 5\\r\\n1 5 1\\r\\n2 4 2\\r\\n1 7 7\\r\\n2 4 8\\r\\n1 6 1\\r\\n1 1 5\\r\\n2 1 8\\r\\n2 4 3\\r\\n1 5 5\\r\\n1 4 0\\r\\n2 0 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 5 2\\r\\n1 5 6\\r\\n1 2 1\\r\\n2 7 2\\r\\n2 6 2\\r\\n2 0 8\\r\\n2 0 6\\r\\n1 6 8\\r\\n1 2 0\\r\\n1 0 5\\r\\n2 3 0\\r\\n1 3 8\\r\\n2 8 6\\r\\n1 0 3\\r\\n1 8 8\\r\\n2 1 1\\r\\n1 1 4\\r\\n1 1 3\\r\\n2 0 0\\r\\n2 5 6\\r\\n1 0 0\\r\\n2 0 0\\r\\n1 2 7\\r\\n2 0 0\\r\\n2 3 6\\r\\n1 3 3\\r\\n1 3 2\\r\\n1 5 3\\r\\n1 7 8\\r\\n1 7 4\\r\\n1 8 7\\r\\n1 7 3\\r\\n2 0 3\\r\\n1 4 4\\r\\n2 5 0\\r\\n1 6 6\\r\\n1 8 0\\r\\n2 6 2\\r\\n2 4 8\\r\\n2 7 2\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 4\\r\\n1 1 5\\r\\n1 3 5\\r\\n2 8 2\\r\\n2 5 2\\r\\n1 7 3\\r\\n1 8 1\\r\\n2 6 5\\r\\n1 4 3\\r\\n1 2 4\\r\\n1 2 3\\r\\n2 8 3\\r\\n2 3 5\\r\\n2 2 0\\r\\n1 6 7\\r\\n2 2 8\\r\\n1 3 0\\r\\n2 5 1\\r\\n2 2 1\\r\\n1 4 5\\r\\n2 1 6\\r\\n1 8 5\\r\\n2 7 4\\r\\n2 2 0\\r\\n1 3 2\\r\\n1 2 2\\r\\n1 8 3\\r\\n2 3 4\\r\\n1 7 6\\r\\n1 3 7\\r\\n1 5 3\\r\\n1 2 0\\r\\n2 5 7\\r\\n2 0 7\\r\\n2 3 2\\r\\n2 1 0\\r\\n1 6 0\\r\\n2 8 5\\r\\n1 3 4\\r\\n2 0 3\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 8 7\\r\\n1 0 6\\r\\n1 5 0\\r\\n2 6 7\\r\\n2 6 8\\r\\n1 3 5\\r\\n1 6 7\\r\\n1 0 0\\r\\n2 1 7\\r\\n1 2 3\\r\\n2 4 3\\r\\n2 5 5\\r\\n1 4 7\\r\\n2 2 0\\r\\n1 2 4\\r\\n1 4 2\\r\\n1 0 8\\r\\n2 0 3\\r\\n1 8 8\\r\\n2 8 1\\r\\n2 8 6\\r\\n2 4 8\\r\\n1 4 0\\r\\n1 6 6\\r\\n2 0 0\\r\\n1 6 2\\r\\n2 5 1\\r\\n1 3 0\\r\\n1 5 6\\r\\n1 8 1\\r\\n1 3 4\\r\\n1 1 3\\r\\n1 5 1\\r\\n1 5 7\\r\\n1 6 8\\r\\n1 1 5\\r\\n1 1 1\\r\\n1 6 1\\r\\n1 1 4\\r\\n2 7 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 8\\r\\n1 4 0\\r\\n1 0 6\\r\\n2 3 8\\r\\n2 4 5\\r\\n1 5 0\\r\\n2 7 6\\r\\n2 6 1\\r\\n2 1 7\\r\\n1 1 2\\r\\n1 5 4\\r\\n1 7 3\\r\\n2 6 4\\r\\n1 3 0\\r\\n2 2 8\\r\\n1 8 2\\r\\n1 8 8\\r\\n1 7 8\\r\\n2 2 5\\r\\n2 2 3\\r\\n2 4 6\\r\\n2 0 2\\r\\n2 6 7\\r\\n2 2 8\\r\\n1 8 3\\r\\n2 5 5\\r\\n1 4 8\\r\\n1 7 1\\r\\n2 7 3\\r\\n2 4 5\\r\\n2 1 1\\r\\n2 4 2\\r\\n1 1 1\\r\\n2 4 0\\r\\n1 2 4\\r\\n2 7 0\\r\\n1 4 1\\r\\n1 7 5\\r\\n1 6 6\\r\\n2 7 8\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 6 3\\r\\n1 5 3\\r\\n1 3 4\\r\\n1 2 3\\r\\n2 2 5\\r\\n1 6 1\\r\\n2 3 7\\r\\n1 0 0\\r\\n1 8 7\\r\\n1 3 8\\r\\n1 0 8\\r\\n1 3 5\\r\\n1 4 5\\r\\n1 0 5\\r\\n2 8 1\\r\\n2 4 7\\r\\n2 3 2\\r\\n1 6 4\\r\\n2 2 3\\r\\n2 6 3\\r\\n1 0 2\\r\\n2 1 2\\r\\n2 6 2\\r\\n1 5 7\\r\\n2 7 0\\r\\n1 4 8\\r\\n1 4 6\\r\\n2 8 7\\r\\n2 0 7\\r\\n1 7 8\\r\\n2 0 3\\r\\n1 5 5\\r\\n1 6 2\\r\\n2 4 5\\r\\n1 2 5\\r\\n2 3 3\\r\\n2 1 1\\r\\n1 8 3\\r\\n1 6 5\\r\\n2 5 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 6 5\\r\\n1 4 8\\r\\n1 5 7\\r\\n1 3 1\\r\\n2 4 2\\r\\n1 4 3\\r\\n1 0 7\\r\\n2 4 6\\r\\n2 4 2\\r\\n1 0 3\\r\\n2 1 5\\r\\n2 5 6\\r\\n1 8 8\\r\\n1 1 7\\r\\n1 3 3\\r\\n2 6 7\\r\\n1 7 4\\r\\n1 0 2\\r\\n1 8 4\\r\\n2 4 5\\r\\n2 0 7\\r\\n1 4 1\\r\\n1 4 4\\r\\n1 5 3\\r\\n1 1 0\\r\\n1 4 5\\r\\n2 1 4\\r\\n1 0 6\\r\\n2 1 0\\r\\n1 5 5\\r\\n2 5 6\\r\\n2 8 2\\r\\n2 1 7\\r\\n2 8 1\\r\\n2 0 5\\r\\n1 0 4\\r\\n1 6 6\\r\\n2 1 1\\r\\n1 8 0\\r\\n2 6 3\\r\\n', 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 7\\r\\n1 3 3\\r\\n1 6 5\\r\\n1 7 3\\r\\n1 2 8\\r\\n1 3 0\\r\\n2 0 0\\r\\n1 7 7\\r\\n2 6 8\\r\\n2 6 0\\r\\n2 4 7\\r\\n1 7 8\\r\\n2 0 7\\r\\n2 0 5\\r\\n1 6 2\\r\\n1 7 1\\r\\n1 1 1\\r\\n2 4 8\\r\\n2 2 1\\r\\n2 7 0\\r\\n2 5 4\\r\\n1 2 4\\r\\n2 1 3\\r\\n2 0 5\\r\\n2 5 5\\r\\n2 1 4\\r\\n2 5 5\\r\\n1 2 6\\r\\n1 4 4\\r\\n2 0 8\\r\\n1 0 6\\r\\n2 0 5\\r\\n2 4 6\\r\\n2 8 1\\r\\n2 2 0\\r\\n2 3 3\\r\\n1 0 4\\r\\n1 3 7\\r\\n2 3 2\\r\\n2 3 7\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 7\\r\\n1 6 5\\r\\n1 2 0\\r\\n2 4 5\\r\\n1 1 0\\r\\n2 3 4\\r\\n1 7 3\\r\\n2 8 1\\r\\n2 0 0\\r\\n2 2 0\\r\\n1 7 4\\r\\n1 6 3\\r\\n2 8 1\\r\\n2 6 0\\r\\n1 4 7\\r\\n2 4 2\\r\\n1 4 5\\r\\n2 3 7\\r\\n2 6 8\\r\\n2 2 6\\r\\n2 7 4\\r\\n1 0 6\\r\\n2 1 7\\r\\n1 4 4\\r\\n2 2 3\\r\\n1 1 3\\r\\n1 8 5\\r\\n1 0 5\\r\\n1 1 1\\r\\n1 4 3\\r\\n2 5 3\\r\\n1 3 6\\r\\n1 7 0\\r\\n2 5 6\\r\\n2 5 6\\r\\n1 0 7\\r\\n2 7 0\\r\\n2 6 4\\r\\n1 3 7\\r\\n2 2 2\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 4 4\\r\\n1 2 6\\r\\n1 8 2\\r\\n2 4 6\\r\\n1 5 4\\r\\n2 5 8\\r\\n2 6 7\\r\\n2 4 8\\r\\n1 1 0\\r\\n1 3 1\\r\\n1 0 3\\r\\n1 8 1\\r\\n1 3 0\\r\\n2 7 4\\r\\n1 2 0\\r\\n1 8 5\\r\\n1 6 2\\r\\n2 2 0\\r\\n1 0 4\\r\\n1 1 1\\r\\n1 4 5\\r\\n2 8 3\\r\\n2 1 0\\r\\n2 5 5\\r\\n1 3 4\\r\\n2 0 7\\r\\n1 4 3\\r\\n1 7 0\\r\\n2 3 8\\r\\n1 0 1\\r\\n1 0 7\\r\\n2 4 1\\r\\n1 0 6\\r\\n2 1 2\\r\\n1 5 7\\r\\n2 7 2\\r\\n2 7 3\\r\\n1 3 6\\r\\n2 7 3\\r\\n2 7 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 0 8\\r\\n1 3 5\\r\\n1 0 2\\r\\n1 8 0\\r\\n1 5 3\\r\\n1 5 2\\r\\n2 8 2\\r\\n2 7 6\\r\\n1 6 1\\r\\n2 2 7\\r\\n2 6 5\\r\\n1 3 7\\r\\n2 7 8\\r\\n1 2 4\\r\\n1 4 2\\r\\n2 5 7\\r\\n2 0 6\\r\\n1 3 1\\r\\n2 2 3\\r\\n1 5 7\\r\\n2 2 8\\r\\n1 7 1\\r\\n1 3 0\\r\\n2 5 5\\r\\n1 7 4\\r\\n2 5 5\\r\\n1 2 0\\r\\n2 4 3\\r\\n2 8 1\\r\\n2 8 0\\r\\n1 2 6\\r\\n1 7 5\\r\\n2 4 8\\r\\n1 2 3\\r\\n2 6 6\\r\\n1 7 8\\r\\n2 7 5\\r\\n2 7 4\\r\\n1 8 1\\r\\n2 5 6\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 3\\r\\n1 7 2\\r\\n1 6 2\\r\\n2 0 8\\r\\n2 3 8\\r\\n2 0 3\\r\\n1 5 8\\r\\n2 7 1\\r\\n1 8 1\\r\\n2 8 7\\r\\n1 5 5\\r\\n2 2 4\\r\\n2 3 3\\r\\n2 2 4\\r\\n1 0 1\\r\\n1 2 0\\r\\n1 7 4\\r\\n2 7 4\\r\\n2 5 5\\r\\n1 1 1\\r\\n2 6 4\\r\\n2 1 7\\r\\n2 5 0\\r\\n1 8 0\\r\\n2 6 2\\r\\n1 7 1\\r\\n2 8 6\\r\\n1 8 7\\r\\n2 2 5\\r\\n1 7 3\\r\\n1 5 6\\r\\n1 4 0\\r\\n2 3 8\\r\\n2 8 6\\r\\n1 7 0\\r\\n2 3 5\\r\\n2 6 1\\r\\n1 2 6\\r\\n1 1 2\\r\\n2 7 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 4 4\\r\\n1 2 6\\r\\n1 7 2\\r\\n2 1 4\\r\\n2 0 2\\r\\n1 5 4\\r\\n2 5 1\\r\\n1 0 8\\r\\n1 1 7\\r\\n2 2 0\\r\\n1 8 4\\r\\n2 6 5\\r\\n2 8 0\\r\\n1 6 5\\r\\n2 8 7\\r\\n2 0 0\\r\\n2 4 0\\r\\n2 7 2\\r\\n2 6 8\\r\\n1 7 8\\r\\n2 8 8\\r\\n2 4 7\\r\\n1 7 1\\r\\n2 8 8\\r\\n1 5 8\\r\\n1 3 6\\r\\n1 4 6\\r\\n1 3 5\\r\\n2 6 1\\r\\n2 1 3\\r\\n2 8 4\\r\\n2 8 5\\r\\n2 1 3\\r\\n2 7 1\\r\\n2 5 8\\r\\n1 8 2\\r\\n2 6 1\\r\\n1 7 4\\r\\n1 8 5\\r\\n2 6 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 1\\r\\n1 4 7\\r\\n1 1 1\\r\\n1 2 4\\r\\n2 4 4\\r\\n1 4 4\\r\\n2 0 6\\r\\n2 7 6\\r\\n1 4 0\\r\\n2 6 5\\r\\n2 5 2\\r\\n1 6 1\\r\\n2 7 0\\r\\n1 6 2\\r\\n2 3 2\\r\\n1 0 6\\r\\n2 7 0\\r\\n1 8 6\\r\\n2 1 3\\r\\n2 0 1\\r\\n1 2 5\\r\\n1 0 2\\r\\n2 4 2\\r\\n2 6 8\\r\\n2 2 0\\r\\n2 5 7\\r\\n2 6 0\\r\\n1 2 2\\r\\n2 0 3\\r\\n1 7 4\\r\\n2 7 3\\r\\n1 4 1\\r\\n2 2 6\\r\\n2 8 2\\r\\n1 8 3\\r\\n1 8 7\\r\\n1 0 3\\r\\n1 7 0\\r\\n2 2 1\\r\\n2 6 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 7\\r\\n1 5 8\\r\\n1 4 4\\r\\n1 8 1\\r\\n1 4 6\\r\\n1 6 6\\r\\n2 5 0\\r\\n2 3 4\\r\\n1 5 3\\r\\n2 0 7\\r\\n2 3 1\\r\\n1 5 4\\r\\n1 3 4\\r\\n2 3 4\\r\\n2 8 2\\r\\n1 0 1\\r\\n1 0 8\\r\\n2 3 8\\r\\n1 0 4\\r\\n2 4 6\\r\\n1 7 3\\r\\n2 4 0\\r\\n1 2 3\\r\\n2 8 1\\r\\n2 8 4\\r\\n1 7 0\\r\\n2 2 6\\r\\n2 2 2\\r\\n1 2 2\\r\\n1 6 5\\r\\n1 7 1\\r\\n2 5 1\\r\\n1 2 4\\r\\n2 3 2\\r\\n1 8 4\\r\\n1 7 4\\r\\n1 1 2\\r\\n1 3 2\\r\\n2 7 3\\r\\n2 4 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 0\\r\\n1 0 7\\r\\n1 8 4\\r\\n2 1 6\\r\\n2 1 2\\r\\n1 0 0\\r\\n1 1 1\\r\\n2 5 2\\r\\n1 8 5\\r\\n1 0 6\\r\\n2 6 8\\r\\n1 4 2\\r\\n1 8 3\\r\\n2 2 3\\r\\n1 6 3\\r\\n2 6 0\\r\\n1 5 3\\r\\n2 0 5\\r\\n1 3 4\\r\\n2 4 4\\r\\n1 8 6\\r\\n1 1 2\\r\\n1 5 7\\r\\n1 5 1\\r\\n1 3 8\\r\\n2 7 0\\r\\n1 7 2\\r\\n1 3 3\\r\\n2 6 5\\r\\n2 5 0\\r\\n2 2 4\\r\\n2 5 5\\r\\n2 4 6\\r\\n1 6 1\\r\\n1 5 2\\r\\n2 7 5\\r\\n1 8 7\\r\\n1 1 6\\r\\n1 4 8\\r\\n2 8 5\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 8 1\\r\\n1 8 6\\r\\n1 1 1\\r\\n2 5 4\\r\\n2 7 8\\r\\n1 6 2\\r\\n1 7 4\\r\\n1 4 4\\r\\n2 3 7\\r\\n1 6 3\\r\\n2 0 1\\r\\n1 8 0\\r\\n2 0 3\\r\\n1 6 0\\r\\n1 3 4\\r\\n1 1 8\\r\\n1 3 3\\r\\n2 3 1\\r\\n2 4 0\\r\\n1 4 3\\r\\n2 1 3\\r\\n2 5 4\\r\\n1 8 5\\r\\n2 1 0\\r\\n1 4 7\\r\\n2 5 3\\r\\n2 4 1\\r\\n1 4 0\\r\\n1 6 8\\r\\n1 5 1\\r\\n2 8 3\\r\\n2 5 7\\r\\n1 3 2\\r\\n1 7 5\\r\\n1 7 3\\r\\n1 0 8\\r\\n1 7 8\\r\\n2 7 3\\r\\n2 6 7\\r\\n2 4 2\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '50\\r\\n1 58 -49\\r\\n1 -77 -90\\r\\n1 32 -52\\r\\n1 -89 -31\\r\\n1 99 -34\\r\\n1 -3 -59\\r\\n2 65 93\\r\\n2 67 -51\\r\\n2 25 -47\\r\\n1 -72 86\\r\\n2 48 -45\\r\\n2 64 -70\\r\\n2 -96 -43\\r\\n2 87 -58\\r\\n2 3 21\\r\\n2 39 -57\\r\\n1 -58 49\\r\\n2 -1 87\\r\\n2 -63 19\\r\\n2 -27 90\\r\\n2 31 3\\r\\n1 55 41\\r\\n1 90 39\\r\\n1 -53 28\\r\\n2 49 -51\\r\\n2 6 42\\r\\n1 50 15\\r\\n2 21 -2\\r\\n2 -6 70\\r\\n1 -13 -61\\r\\n2 -60 -69\\r\\n1 -22 33\\r\\n1 -22 17\\r\\n2 30 -98\\r\\n2 -56 -48\\r\\n2 -84 -77\\r\\n2 49 56\\r\\n1 81 29\\r\\n1 26 29\\r\\n1 -14 20\\r\\n2 -37 83\\r\\n1 -91 96\\r\\n2 57 19\\r\\n1 94 54\\r\\n2 25 -30\\r\\n1 92 5\\r\\n2 -48 51\\r\\n2 81 23\\r\\n1 39 -47\\r\\n2 34 89\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '50\\r\\n1 7 -8\\r\\n1 -30 -28\\r\\n1 -8 2\\r\\n1 -28 -29\\r\\n2 -8 -21\\r\\n2 -23 19\\r\\n2 -23 18\\r\\n1 6 27\\r\\n2 -17 20\\r\\n1 9 -5\\r\\n2 -27 29\\r\\n1 -8 27\\r\\n2 13 12\\r\\n2 -29 13\\r\\n2 -30 8\\r\\n2 -30 -8\\r\\n1 -24 -21\\r\\n1 -14 -15\\r\\n2 -23 14\\r\\n2 -12 -13\\r\\n1 15 -24\\r\\n1 28 6\\r\\n2 -20 -21\\r\\n1 -8 -13\\r\\n1 -15 -15\\r\\n1 11 20\\r\\n2 24 -26\\r\\n1 -30 -11\\r\\n2 -17 18\\r\\n1 -17 6\\r\\n2 5 -9\\r\\n2 -29 8\\r\\n2 -29 1\\r\\n2 10 24\\r\\n2 29 27\\r\\n2 -12 21\\r\\n2 5 -28\\r\\n2 28 27\\r\\n2 -4 -4\\r\\n1 -24 29\\r\\n1 17 -1\\r\\n1 0 17\\r\\n1 -2 -1\\r\\n2 -7 -10\\r\\n1 5 -16\\r\\n2 -3 -26\\r\\n2 -7 17\\r\\n1 -27 -26\\r\\n1 -3 -30\\r\\n2 28 -15\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '10\\r\\n1 0 0\\r\\n1 6 0\\r\\n1 0 6\\r\\n2 0 0\\r\\n2 6 0\\r\\n2 0 6\\r\\n2 3 3\\r\\n2 3 0\\r\\n2 0 3\\r\\n2 2 2\\r\\n', 'output': ['YES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '50\\r\\n1 33 -21\\r\\n1 9 82\\r\\n1 -69 -54\\r\\n2 -3 84\\r\\n1 -9 -28\\r\\n2 -54 87\\r\\n2 26 -64\\r\\n2 8 52\\r\\n2 98 63\\r\\n2 -77 10\\r\\n2 -52 -46\\r\\n1 92 42\\r\\n2 -53 -69\\r\\n2 -48 44\\r\\n1 -52 90\\r\\n2 56 29\\r\\n2 -100 -13\\r\\n2 -23 1\\r\\n2 6 91\\r\\n2 53 -38\\r\\n1 48 -35\\r\\n2 19 -62\\r\\n2 -62 49\\r\\n1 59 78\\r\\n2 85 72\\r\\n2 28 76\\r\\n2 46 -91\\r\\n2 6 32\\r\\n2 -16 -59\\r\\n1 40 -53\\r\\n2 -6 87\\r\\n2 -79 -58\\r\\n2 -12 25\\r\\n2 73 49\\r\\n1 57 -42\\r\\n2 12 19\\r\\n1 -60 -5\\r\\n1 -40 -20\\r\\n1 90 35\\r\\n2 10 3\\r\\n2 63 -49\\r\\n1 50 10\\r\\n1 0 77\\r\\n1 92 24\\r\\n1 71 -7\\r\\n2 46 22\\r\\n1 19 81\\r\\n1 -3 -71\\r\\n2 -44 56\\r\\n2 92 34\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 3\\r\\n1 3 1\\r\\n1 0 1\\r\\n2 3 0\\r\\n2 6 5\\r\\n2 1 5\\r\\n2 8 3\\r\\n2 0 5\\r\\n2 3 4\\r\\n1 7 6\\r\\n1 1 0\\r\\n1 0 8\\r\\n1 3 7\\r\\n2 4 5\\r\\n2 2 5\\r\\n2 2 0\\r\\n1 7 4\\r\\n2 7 3\\r\\n1 5 0\\r\\n1 4 6\\r\\n1 1 5\\r\\n1 7 8\\r\\n2 7 5\\r\\n1 0 4\\r\\n2 3 8\\r\\n1 1 8\\r\\n1 0 5\\r\\n1 4 8\\r\\n2 8 5\\r\\n1 8 5\\r\\n2 3 6\\r\\n1 8 7\\r\\n2 4 3\\r\\n1 5 2\\r\\n2 2 8\\r\\n2 5 3\\r\\n2 4 0\\r\\n1 4 4\\r\\n1 6 5\\r\\n2 2 7\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e5 + 1;\nconst int MOD = 1e9 + 7;\nconst int INF = 1e9;\nconst long double EPS = 1e-8;\nconst long double PI = 3.141592653589793238462643383279502884L;\nlong double dist(long double x1, long double y1, long double x2,\n                 long double y2) {\n  return hypotl(x2 - x1, y2 - y1);\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  int q;\n  cin >> q;\n  int x0, y0, x1, y1, x2, y2;\n  cin >> x0 >> y0 >> x1 >> y1 >> x2 >> y2;\n  vector<long double> a, b;\n  a.push_back(x0);\n  a.push_back(y0);\n  a.push_back(x1);\n  a.push_back(y1);\n  b.push_back(x0);\n  b.push_back(y0);\n  b.push_back(x2);\n  b.push_back(y2);\n  for (int i = 3; i < q; i++) {\n    long double x, y;\n    cin >> x >> y;\n    vector<long double> c;\n    c.push_back(x);\n    c.push_back(y);\n    long double a0 = dist(x, y, a[0], a[1]);\n    long double a1 = dist(x, y, a[0], a[2]);\n    long double a2 = dist(x, y, a[2], a[1]);\n    long double b0 = dist(x, y, b[0], b[1]);\n    long double b1 = dist(x, y, b[0], b[2]);\n    long double b2 = dist(x, y, b[2], b[1]);\n    if (a0 + a1 > a2 && b0 + b1 > b2 && dist(x, y, a[1], b[1]) >\n                                             dist(a[1], b[1], a[2], b[2]))\n      cout << \"YES\" << '\\n';\n    else\n      cout << \"NO\" << '\\n';\n  }\n  return 0;\n}\n"}
{"src_uid": "6220f4058f9325dfb211fb1dd86e9464", "id": 60, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2700, "testcases": "[{'input': '8\\r\\n1 0 0\\r\\n1 2 0\\r\\n1 2 2\\r\\n2 1 0\\r\\n1 0 2\\r\\n2 1 1\\r\\n2 2 1\\r\\n2 20 -1\\r\\n', 'output': ['YES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 0 0\\r\\n1 5 0\\r\\n1 0 5\\r\\n2 1 1\\r\\n2 10 10\\r\\n1 2 10\\r\\n2 1 1\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '5\\r\\n1 2 -2\\r\\n1 -2 2\\r\\n1 1 5\\r\\n2 3 -1\\r\\n2 3 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\n']}, {'input': '5\\r\\n1 -1 0\\r\\n1 1 0\\r\\n1 0 2\\r\\n2 0 1\\r\\n2 0 3\\r\\n', 'output': ['YES\\r\\nNO\\r\\n']}, {'input': '6\\r\\n1 -2 0\\r\\n1 2 0\\r\\n1 0 2\\r\\n2 4 0\\r\\n2 1 0\\r\\n2 2 0\\r\\n', 'output': ['NO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '11\\r\\n1 0 -1\\r\\n1 0 1\\r\\n1 1 -1\\r\\n1 -1 -5\\r\\n1 0 5\\r\\n2 5 1\\r\\n2 5 0\\r\\n2 5 -1\\r\\n2 0 0\\r\\n2 0 10\\r\\n2 0 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -37 889\\r\\n1 771 -764\\r\\n1 -119 938\\r\\n1 599 868\\r\\n1 56 161\\r\\n1 -67 86\\r\\n2 -692 99\\r\\n2 -995 158\\r\\n2 410 116\\r\\n1 -49 -864\\r\\n2 30 -580\\r\\n1 -930 454\\r\\n1 -706 301\\r\\n2 547 -606\\r\\n2 -252 -55\\r\\n2 662 152\\r\\n2 -621 -920\\r\\n1 -128 -595\\r\\n1 -401 -265\\r\\n1 434 388\\r\\n2 299 173\\r\\n1 104 -298\\r\\n1 -693 557\\r\\n2 840 -179\\r\\n2 382 -8\\r\\n1 461 618\\r\\n1 -928 628\\r\\n2 193 -972\\r\\n2 218 945\\r\\n2 490 571\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -619 -234\\r\\n1 -140 -846\\r\\n1 762 -792\\r\\n2 153 29\\r\\n1 -353 627\\r\\n2 -544 -418\\r\\n2 -922 -965\\r\\n1 -620 -692\\r\\n1 -34 295\\r\\n2 -326 -604\\r\\n2 -906 -867\\r\\n2 57 -690\\r\\n1 -87 -822\\r\\n2 -569 739\\r\\n2 -92 -927\\r\\n2 279 806\\r\\n1 -364 19\\r\\n2 -214 -629\\r\\n2 -283 662\\r\\n2 -324 650\\r\\n1 92 -511\\r\\n2 654 -597\\r\\n1 -87 747\\r\\n2 795 46\\r\\n2 870 -157\\r\\n2 -11 520\\r\\n1 -162 -686\\r\\n2 290 -660\\r\\n2 -660 780\\r\\n2 946 910\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '30\\r\\n1 -702 -823\\r\\n1 -330 -896\\r\\n1 -564 90\\r\\n1 559 818\\r\\n2 404 716\\r\\n1 -900 -379\\r\\n2 866 -218\\r\\n2 444 615\\r\\n2 -782 -887\\r\\n2 584 -919\\r\\n2 891 775\\r\\n1 117 887\\r\\n2 598 162\\r\\n2 759 -925\\r\\n2 713 -507\\r\\n1 -329 120\\r\\n2 546 185\\r\\n2 399 500\\r\\n1 -611 763\\r\\n1 -956 187\\r\\n2 82 -26\\r\\n2 -877 -906\\r\\n1 293 -637\\r\\n2 -685 -275\\r\\n2 -725 -927\\r\\n1 -627 777\\r\\n1 -609 -563\\r\\n2 402 54\\r\\n1 -106 -908\\r\\n2 175 808\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -64 -994\\r\\n1 -692 366\\r\\n1 -72 847\\r\\n2 -963 -251\\r\\n1 -651 -994\\r\\n1 -523 -861\\r\\n2 553 -129\\r\\n2 17 785\\r\\n2 -584 -880\\r\\n1 105 657\\r\\n1 649 98\\r\\n2 -572 -492\\r\\n1 -38 -481\\r\\n1 540 463\\r\\n1 -468 -540\\r\\n1 -730 100\\r\\n1 606 -119\\r\\n1 -254 -380\\r\\n1 169 280\\r\\n1 319 62\\r\\n1 452 -556\\r\\n1 -653 887\\r\\n1 407 -786\\r\\n2 -632 181\\r\\n1 925 -967\\r\\n2 996 -709\\r\\n1 568 517\\r\\n2 -478 76\\r\\n1 156 621\\r\\n2 -592 899\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '30\\r\\n1 836 -283\\r\\n1 299 629\\r\\n1 434 -481\\r\\n1 -500 -368\\r\\n2 -105 -216\\r\\n2 -617 443\\r\\n2 -579 811\\r\\n1 411 -242\\r\\n1 -652 41\\r\\n1 962 -483\\r\\n1 -732 579\\r\\n2 554 -147\\r\\n1 39 967\\r\\n1 917 -199\\r\\n2 686 397\\r\\n1 444 780\\r\\n1 278 462\\r\\n1 729 -18\\r\\n1 252 -864\\r\\n1 884 -952\\r\\n1 272 689\\r\\n2 366 -389\\r\\n1 443 924\\r\\n1 791 -249\\r\\n2 692 74\\r\\n2 -412 550\\r\\n2 506 -472\\r\\n2 -626 474\\r\\n1 -895 -42\\r\\n2 -390 -971\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '12\\r\\n1 0 0\\r\\n1 10 0\\r\\n1 8 1\\r\\n2 11 0\\r\\n1 2 0\\r\\n2 7 0\\r\\n2 9 0\\r\\n2 1 0\\r\\n1 1 1\\r\\n2 10 0\\r\\n2 9 0\\r\\n2 11 0\\r\\n', 'output': ['NO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 5000 5000\\r\\n2 3 0\\r\\n2 2 0\\r\\n2 4 0\\r\\n2 -1 0\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '4\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 2 2\\r\\n2 4 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 0 8\\r\\n2 4 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '11\\r\\n1 0 -1\\r\\n1 0 1\\r\\n1 -1 -5\\r\\n1 6 4\\r\\n1 -8 8\\r\\n2 6 -1\\r\\n2 6 1\\r\\n2 1 0\\r\\n2 1 -1\\r\\n2 1 1\\r\\n2 6 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '11\\r\\n1 5 4\\r\\n1 5 6\\r\\n1 4 0\\r\\n1 11 9\\r\\n1 -3 13\\r\\n2 11 4\\r\\n2 11 6\\r\\n2 6 5\\r\\n2 6 4\\r\\n2 6 6\\r\\n2 11 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -2 -1000000\\r\\n1 -1 -1000000\\r\\n1 -1 -999999\\r\\n1 1 1000000\\r\\n1 -231100 1000000\\r\\n2 0 0\\r\\n2 1 999999\\r\\n', 'output': ['YES\\r\\nNO\\r\\n']}, {'input': '10\\r\\n1 -1000000 -1000000\\r\\n1 -999999 -1000000\\r\\n1 999999 1000000\\r\\n1 1000000 1000000\\r\\n2 0 0\\r\\n2 1000000 999999\\r\\n2 999999 1000000\\r\\n2 999999 999999\\r\\n2 999999 999998\\r\\n2 999999 999997\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '9\\r\\n1 -2 -4\\r\\n1 2 4\\r\\n1 -3 3\\r\\n2 -1 -2\\r\\n2 -4 -8\\r\\n2 -3 -6\\r\\n2 1 2\\r\\n2 4 8\\r\\n2 3 6\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '16\\r\\n1 -10000 0\\r\\n1 10000 0\\r\\n1 0 -1\\r\\n2 50000 0\\r\\n2 -50000 0\\r\\n2 49000 0\\r\\n2 -49000 0\\r\\n2 27000 0\\r\\n2 -27000 0\\r\\n1 0 1\\r\\n2 50000 0\\r\\n2 -50000 0\\r\\n2 49000 0\\r\\n2 -49000 0\\r\\n2 27000 0\\r\\n2 -27000 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -7000 -9000\\r\\n1 7000 9000\\r\\n1 7000 -7000\\r\\n2 21 27\\r\\n2 -21 -27\\r\\n2 7007 9009\\r\\n2 -7007 -9009\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -7000 -9000\\r\\n1 7000 9000\\r\\n1 -7000 7000\\r\\n2 21 27\\r\\n2 -21 -27\\r\\n2 7007 9009\\r\\n2 -7007 -9009\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -9000 7000\\r\\n1 9000 -7000\\r\\n1 7000 7000\\r\\n2 -27 21\\r\\n2 27 -21\\r\\n2 -9009 7007\\r\\n2 9009 -7007\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -9000 7000\\r\\n1 9000 -7000\\r\\n1 -7000 -7000\\r\\n2 -27 21\\r\\n2 27 -21\\r\\n2 -9009 7007\\r\\n2 9009 -7007\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 7 6\\r\\n1 0 5\\r\\n1 0 4\\r\\n1 2 5\\r\\n1 8 0\\r\\n1 6 4\\r\\n1 1 1\\r\\n1 8 4\\r\\n2 1 1\\r\\n2 2 7\\r\\n1 2 3\\r\\n1 4 2\\r\\n2 4 3\\r\\n1 3 2\\r\\n1 7 2\\r\\n1 1 0\\r\\n2 3 5\\r\\n1 6 5\\r\\n2 5 7\\r\\n2 1 1\\r\\n2 3 2\\r\\n1 6 2\\r\\n2 6 0\\r\\n2 8 8\\r\\n1 4 6\\r\\n1 3 5\\r\\n2 3 8\\r\\n2 0 5\\r\\n2 1 6\\r\\n1 8 3\\r\\n1 2 2\\r\\n1 8 2\\r\\n1 6 8\\r\\n1 1 3\\r\\n1 3 3\\r\\n1 5 5\\r\\n2 2 0\\r\\n2 6 7\\r\\n2 1 6\\r\\n2 6 4\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 8\\r\\n1 6 7\\r\\n1 7 7\\r\\n2 5 5\\r\\n1 4 0\\r\\n1 0 0\\r\\n2 7 3\\r\\n1 0 2\\r\\n2 8 2\\r\\n2 5 1\\r\\n2 1 2\\r\\n2 1 5\\r\\n1 1 3\\r\\n1 7 1\\r\\n1 8 7\\r\\n1 2 4\\r\\n1 2 8\\r\\n2 8 5\\r\\n2 8 6\\r\\n1 2 1\\r\\n1 5 6\\r\\n1 2 3\\r\\n2 4 3\\r\\n1 8 3\\r\\n1 1 5\\r\\n2 2 2\\r\\n2 8 5\\r\\n1 0 7\\r\\n1 7 2\\r\\n1 5 5\\r\\n1 8 4\\r\\n1 4 1\\r\\n2 3 2\\r\\n2 6 0\\r\\n2 8 7\\r\\n2 5 7\\r\\n1 3 0\\r\\n2 1 0\\r\\n2 0 7\\r\\n2 5 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 8\\r\\n1 3 8\\r\\n1 7 4\\r\\n1 4 5\\r\\n1 4 1\\r\\n2 6 6\\r\\n2 5 8\\r\\n1 5 4\\r\\n1 7 8\\r\\n2 1 3\\r\\n2 6 1\\r\\n2 8 2\\r\\n2 6 8\\r\\n1 4 3\\r\\n2 2 8\\r\\n2 0 6\\r\\n1 0 3\\r\\n2 0 3\\r\\n1 6 6\\r\\n1 5 8\\r\\n1 5 5\\r\\n1 1 2\\r\\n2 6 7\\r\\n1 4 8\\r\\n2 1 2\\r\\n2 2 7\\r\\n2 2 3\\r\\n1 8 4\\r\\n2 8 4\\r\\n2 6 5\\r\\n1 8 2\\r\\n2 7 2\\r\\n2 3 5\\r\\n1 4 0\\r\\n2 6 2\\r\\n2 3 7\\r\\n1 4 6\\r\\n1 8 6\\r\\n1 0 5\\r\\n2 2 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 4 0\\r\\n1 7 1\\r\\n1 8 0\\r\\n1 1 2\\r\\n1 1 8\\r\\n1 6 1\\r\\n2 5 2\\r\\n1 7 7\\r\\n1 6 5\\r\\n2 8 1\\r\\n2 8 7\\r\\n1 7 8\\r\\n2 3 5\\r\\n2 6 6\\r\\n1 4 2\\r\\n1 8 3\\r\\n2 6 8\\r\\n1 4 8\\r\\n2 4 6\\r\\n2 1 7\\r\\n1 4 3\\r\\n2 0 8\\r\\n1 5 2\\r\\n2 5 5\\r\\n2 1 6\\r\\n1 5 5\\r\\n1 1 5\\r\\n2 3 3\\r\\n2 0 1\\r\\n1 1 0\\r\\n2 1 4\\r\\n2 3 6\\r\\n1 4 6\\r\\n2 7 6\\r\\n1 4 4\\r\\n1 7 6\\r\\n1 6 8\\r\\n2 1 1\\r\\n1 0 1\\r\\n2 0 2\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 3 0\\r\\n1 1 4\\r\\n1 2 7\\r\\n2 4 0\\r\\n1 0 5\\r\\n1 7 5\\r\\n2 6 3\\r\\n1 0 7\\r\\n2 5 7\\r\\n1 1 0\\r\\n2 0 6\\r\\n1 6 8\\r\\n1 3 5\\r\\n1 8 5\\r\\n1 0 6\\r\\n2 7 0\\r\\n1 4 6\\r\\n1 5 2\\r\\n2 6 2\\r\\n1 7 0\\r\\n2 6 3\\r\\n1 3 7\\r\\n2 4 2\\r\\n2 1 4\\r\\n1 1 3\\r\\n1 5 0\\r\\n2 0 7\\r\\n2 6 8\\r\\n1 4 0\\r\\n2 5 0\\r\\n2 3 2\\r\\n2 6 7\\r\\n1 7 2\\r\\n1 0 3\\r\\n1 6 6\\r\\n2 4 0\\r\\n2 2 4\\r\\n1 6 5\\r\\n2 0 8\\r\\n2 0 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 0 3\\r\\n1 6 0\\r\\n1 8 7\\r\\n2 2 6\\r\\n2 7 2\\r\\n2 7 5\\r\\n1 4 7\\r\\n1 2 3\\r\\n2 2 7\\r\\n2 3 1\\r\\n1 3 5\\r\\n1 8 5\\r\\n2 6 8\\r\\n1 2 8\\r\\n2 4 6\\r\\n1 7 3\\r\\n1 3 3\\r\\n2 2 4\\r\\n1 5 0\\r\\n1 5 6\\r\\n1 1 7\\r\\n2 3 3\\r\\n1 8 6\\r\\n2 7 4\\r\\n1 7 8\\r\\n1 5 8\\r\\n2 3 8\\r\\n1 6 6\\r\\n2 8 5\\r\\n1 5 1\\r\\n2 4 2\\r\\n1 7 7\\r\\n2 4 8\\r\\n1 6 1\\r\\n1 1 5\\r\\n2 1 8\\r\\n2 4 3\\r\\n1 5 5\\r\\n1 4 0\\r\\n2 0 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 5 2\\r\\n1 5 6\\r\\n1 2 1\\r\\n2 7 2\\r\\n2 6 2\\r\\n2 0 8\\r\\n2 0 6\\r\\n1 6 8\\r\\n1 2 0\\r\\n1 0 5\\r\\n2 3 0\\r\\n1 3 8\\r\\n2 8 6\\r\\n1 0 3\\r\\n1 8 8\\r\\n2 1 1\\r\\n1 1 4\\r\\n1 1 3\\r\\n2 0 0\\r\\n2 5 6\\r\\n1 0 0\\r\\n2 0 0\\r\\n1 2 7\\r\\n2 0 0\\r\\n2 3 6\\r\\n1 3 3\\r\\n1 3 2\\r\\n1 5 3\\r\\n1 7 8\\r\\n1 7 4\\r\\n1 8 7\\r\\n1 7 3\\r\\n2 0 3\\r\\n1 4 4\\r\\n2 5 0\\r\\n1 6 6\\r\\n1 8 0\\r\\n2 6 2\\r\\n2 4 8\\r\\n2 7 2\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 4\\r\\n1 1 5\\r\\n1 3 5\\r\\n2 8 2\\r\\n2 5 2\\r\\n1 7 3\\r\\n1 8 1\\r\\n2 6 5\\r\\n1 4 3\\r\\n1 2 4\\r\\n1 2 3\\r\\n2 8 3\\r\\n2 3 5\\r\\n2 2 0\\r\\n1 6 7\\r\\n2 2 8\\r\\n1 3 0\\r\\n2 5 1\\r\\n2 2 1\\r\\n1 4 5\\r\\n2 1 6\\r\\n1 8 5\\r\\n2 7 4\\r\\n2 2 0\\r\\n1 3 2\\r\\n1 2 2\\r\\n1 8 3\\r\\n2 3 4\\r\\n1 7 6\\r\\n1 3 7\\r\\n1 5 3\\r\\n1 2 0\\r\\n2 5 7\\r\\n2 0 7\\r\\n2 3 2\\r\\n2 1 0\\r\\n1 6 0\\r\\n2 8 5\\r\\n1 3 4\\r\\n2 0 3\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 8 7\\r\\n1 0 6\\r\\n1 5 0\\r\\n2 6 7\\r\\n2 6 8\\r\\n1 3 5\\r\\n1 6 7\\r\\n1 0 0\\r\\n2 1 7\\r\\n1 2 3\\r\\n2 4 3\\r\\n2 5 5\\r\\n1 4 7\\r\\n2 2 0\\r\\n1 2 4\\r\\n1 4 2\\r\\n1 0 8\\r\\n2 0 3\\r\\n1 8 8\\r\\n2 8 1\\r\\n2 8 6\\r\\n2 4 8\\r\\n1 4 0\\r\\n1 6 6\\r\\n2 0 0\\r\\n1 6 2\\r\\n2 5 1\\r\\n1 3 0\\r\\n1 5 6\\r\\n1 8 1\\r\\n1 3 4\\r\\n1 1 3\\r\\n1 5 1\\r\\n1 5 7\\r\\n1 6 8\\r\\n1 1 5\\r\\n1 1 1\\r\\n1 6 1\\r\\n1 1 4\\r\\n2 7 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 8\\r\\n1 4 0\\r\\n1 0 6\\r\\n2 3 8\\r\\n2 4 5\\r\\n1 5 0\\r\\n2 7 6\\r\\n2 6 1\\r\\n2 1 7\\r\\n1 1 2\\r\\n1 5 4\\r\\n1 7 3\\r\\n2 6 4\\r\\n1 3 0\\r\\n2 2 8\\r\\n1 8 2\\r\\n1 8 8\\r\\n1 7 8\\r\\n2 2 5\\r\\n2 2 3\\r\\n2 4 6\\r\\n2 0 2\\r\\n2 6 7\\r\\n2 2 8\\r\\n1 8 3\\r\\n2 5 5\\r\\n1 4 8\\r\\n1 7 1\\r\\n2 7 3\\r\\n2 4 5\\r\\n2 1 1\\r\\n2 4 2\\r\\n1 1 1\\r\\n2 4 0\\r\\n1 2 4\\r\\n2 7 0\\r\\n1 4 1\\r\\n1 7 5\\r\\n1 6 6\\r\\n2 7 8\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 6 3\\r\\n1 5 3\\r\\n1 3 4\\r\\n1 2 3\\r\\n2 2 5\\r\\n1 6 1\\r\\n2 3 7\\r\\n1 0 0\\r\\n1 8 7\\r\\n1 3 8\\r\\n1 0 8\\r\\n1 3 5\\r\\n1 4 5\\r\\n1 0 5\\r\\n2 8 1\\r\\n2 4 7\\r\\n2 3 2\\r\\n1 6 4\\r\\n2 2 3\\r\\n2 6 3\\r\\n1 0 2\\r\\n2 1 2\\r\\n2 6 2\\r\\n1 5 7\\r\\n2 7 0\\r\\n1 4 8\\r\\n1 4 6\\r\\n2 8 7\\r\\n2 0 7\\r\\n1 7 8\\r\\n2 0 3\\r\\n1 5 5\\r\\n1 6 2\\r\\n2 4 5\\r\\n1 2 5\\r\\n2 3 3\\r\\n2 1 1\\r\\n1 8 3\\r\\n1 6 5\\r\\n2 5 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 6 5\\r\\n1 4 8\\r\\n1 5 7\\r\\n1 3 1\\r\\n2 4 2\\r\\n1 4 3\\r\\n1 0 7\\r\\n2 4 6\\r\\n2 4 2\\r\\n1 0 3\\r\\n2 1 5\\r\\n2 5 6\\r\\n1 8 8\\r\\n1 1 7\\r\\n1 3 3\\r\\n2 6 7\\r\\n1 7 4\\r\\n1 0 2\\r\\n1 8 4\\r\\n2 4 5\\r\\n2 0 7\\r\\n1 4 1\\r\\n1 4 4\\r\\n1 5 3\\r\\n1 1 0\\r\\n1 4 5\\r\\n2 1 4\\r\\n1 0 6\\r\\n2 1 0\\r\\n1 5 5\\r\\n2 5 6\\r\\n2 8 2\\r\\n2 1 7\\r\\n2 8 1\\r\\n2 0 5\\r\\n1 0 4\\r\\n1 6 6\\r\\n2 1 1\\r\\n1 8 0\\r\\n2 6 3\\r\\n', 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 7\\r\\n1 3 3\\r\\n1 6 5\\r\\n1 7 3\\r\\n1 2 8\\r\\n1 3 0\\r\\n2 0 0\\r\\n1 7 7\\r\\n2 6 8\\r\\n2 6 0\\r\\n2 4 7\\r\\n1 7 8\\r\\n2 0 7\\r\\n2 0 5\\r\\n1 6 2\\r\\n1 7 1\\r\\n1 1 1\\r\\n2 4 8\\r\\n2 2 1\\r\\n2 7 0\\r\\n2 5 4\\r\\n1 2 4\\r\\n2 1 3\\r\\n2 0 5\\r\\n2 5 5\\r\\n2 1 4\\r\\n2 5 5\\r\\n1 2 6\\r\\n1 4 4\\r\\n2 0 8\\r\\n1 0 6\\r\\n2 0 5\\r\\n2 4 6\\r\\n2 8 1\\r\\n2 2 0\\r\\n2 3 3\\r\\n1 0 4\\r\\n1 3 7\\r\\n2 3 2\\r\\n2 3 7\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 7\\r\\n1 6 5\\r\\n1 2 0\\r\\n2 4 5\\r\\n1 1 0\\r\\n2 3 4\\r\\n1 7 3\\r\\n2 8 1\\r\\n2 0 0\\r\\n2 2 0\\r\\n1 7 4\\r\\n1 6 3\\r\\n2 8 1\\r\\n2 6 0\\r\\n1 4 7\\r\\n2 4 2\\r\\n1 4 5\\r\\n2 3 7\\r\\n2 6 8\\r\\n2 2 6\\r\\n2 7 4\\r\\n1 0 6\\r\\n2 1 7\\r\\n1 4 4\\r\\n2 2 3\\r\\n1 1 3\\r\\n1 8 5\\r\\n1 0 5\\r\\n1 1 1\\r\\n1 4 3\\r\\n2 5 3\\r\\n1 3 6\\r\\n1 7 0\\r\\n2 5 6\\r\\n2 5 6\\r\\n1 0 7\\r\\n2 7 0\\r\\n2 6 4\\r\\n1 3 7\\r\\n2 2 2\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 4 4\\r\\n1 2 6\\r\\n1 8 2\\r\\n2 4 6\\r\\n1 5 4\\r\\n2 5 8\\r\\n2 6 7\\r\\n2 4 8\\r\\n1 1 0\\r\\n1 3 1\\r\\n1 0 3\\r\\n1 8 1\\r\\n1 3 0\\r\\n2 7 4\\r\\n1 2 0\\r\\n1 8 5\\r\\n1 6 2\\r\\n2 2 0\\r\\n1 0 4\\r\\n1 1 1\\r\\n1 4 5\\r\\n2 8 3\\r\\n2 1 0\\r\\n2 5 5\\r\\n1 3 4\\r\\n2 0 7\\r\\n1 4 3\\r\\n1 7 0\\r\\n2 3 8\\r\\n1 0 1\\r\\n1 0 7\\r\\n2 4 1\\r\\n1 0 6\\r\\n2 1 2\\r\\n1 5 7\\r\\n2 7 2\\r\\n2 7 3\\r\\n1 3 6\\r\\n2 7 3\\r\\n2 7 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 0 8\\r\\n1 3 5\\r\\n1 0 2\\r\\n1 8 0\\r\\n1 5 3\\r\\n1 5 2\\r\\n2 8 2\\r\\n2 7 6\\r\\n1 6 1\\r\\n2 2 7\\r\\n2 6 5\\r\\n1 3 7\\r\\n2 7 8\\r\\n1 2 4\\r\\n1 4 2\\r\\n2 5 7\\r\\n2 0 6\\r\\n1 3 1\\r\\n2 2 3\\r\\n1 5 7\\r\\n2 2 8\\r\\n1 7 1\\r\\n1 3 0\\r\\n2 5 5\\r\\n1 7 4\\r\\n2 5 5\\r\\n1 2 0\\r\\n2 4 3\\r\\n2 8 1\\r\\n2 8 0\\r\\n1 2 6\\r\\n1 7 5\\r\\n2 4 8\\r\\n1 2 3\\r\\n2 6 6\\r\\n1 7 8\\r\\n2 7 5\\r\\n2 7 4\\r\\n1 8 1\\r\\n2 5 6\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 3\\r\\n1 7 2\\r\\n1 6 2\\r\\n2 0 8\\r\\n2 3 8\\r\\n2 0 3\\r\\n1 5 8\\r\\n2 7 1\\r\\n1 8 1\\r\\n2 8 7\\r\\n1 5 5\\r\\n2 2 4\\r\\n2 3 3\\r\\n2 2 4\\r\\n1 0 1\\r\\n1 2 0\\r\\n1 7 4\\r\\n2 7 4\\r\\n2 5 5\\r\\n1 1 1\\r\\n2 6 4\\r\\n2 1 7\\r\\n2 5 0\\r\\n1 8 0\\r\\n2 6 2\\r\\n1 7 1\\r\\n2 8 6\\r\\n1 8 7\\r\\n2 2 5\\r\\n1 7 3\\r\\n1 5 6\\r\\n1 4 0\\r\\n2 3 8\\r\\n2 8 6\\r\\n1 7 0\\r\\n2 3 5\\r\\n2 6 1\\r\\n1 2 6\\r\\n1 1 2\\r\\n2 7 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 4 4\\r\\n1 2 6\\r\\n1 7 2\\r\\n2 1 4\\r\\n2 0 2\\r\\n1 5 4\\r\\n2 5 1\\r\\n1 0 8\\r\\n1 1 7\\r\\n2 2 0\\r\\n1 8 4\\r\\n2 6 5\\r\\n2 8 0\\r\\n1 6 5\\r\\n2 8 7\\r\\n2 0 0\\r\\n2 4 0\\r\\n2 7 2\\r\\n2 6 8\\r\\n1 7 8\\r\\n2 8 8\\r\\n2 4 7\\r\\n1 7 1\\r\\n2 8 8\\r\\n1 5 8\\r\\n1 3 6\\r\\n1 4 6\\r\\n1 3 5\\r\\n2 6 1\\r\\n2 1 3\\r\\n2 8 4\\r\\n2 8 5\\r\\n2 1 3\\r\\n2 7 1\\r\\n2 5 8\\r\\n1 8 2\\r\\n2 6 1\\r\\n1 7 4\\r\\n1 8 5\\r\\n2 6 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 1\\r\\n1 4 7\\r\\n1 1 1\\r\\n1 2 4\\r\\n2 4 4\\r\\n1 4 4\\r\\n2 0 6\\r\\n2 7 6\\r\\n1 4 0\\r\\n2 6 5\\r\\n2 5 2\\r\\n1 6 1\\r\\n2 7 0\\r\\n1 6 2\\r\\n2 3 2\\r\\n1 0 6\\r\\n2 7 0\\r\\n1 8 6\\r\\n2 1 3\\r\\n2 0 1\\r\\n1 2 5\\r\\n1 0 2\\r\\n2 4 2\\r\\n2 6 8\\r\\n2 2 0\\r\\n2 5 7\\r\\n2 6 0\\r\\n1 2 2\\r\\n2 0 3\\r\\n1 7 4\\r\\n2 7 3\\r\\n1 4 1\\r\\n2 2 6\\r\\n2 8 2\\r\\n1 8 3\\r\\n1 8 7\\r\\n1 0 3\\r\\n1 7 0\\r\\n2 2 1\\r\\n2 6 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 7\\r\\n1 5 8\\r\\n1 4 4\\r\\n1 8 1\\r\\n1 4 6\\r\\n1 6 6\\r\\n2 5 0\\r\\n2 3 4\\r\\n1 5 3\\r\\n2 0 7\\r\\n2 3 1\\r\\n1 5 4\\r\\n1 3 4\\r\\n2 3 4\\r\\n2 8 2\\r\\n1 0 1\\r\\n1 0 8\\r\\n2 3 8\\r\\n1 0 4\\r\\n2 4 6\\r\\n1 7 3\\r\\n2 4 0\\r\\n1 2 3\\r\\n2 8 1\\r\\n2 8 4\\r\\n1 7 0\\r\\n2 2 6\\r\\n2 2 2\\r\\n1 2 2\\r\\n1 6 5\\r\\n1 7 1\\r\\n2 5 1\\r\\n1 2 4\\r\\n2 3 2\\r\\n1 8 4\\r\\n1 7 4\\r\\n1 1 2\\r\\n1 3 2\\r\\n2 7 3\\r\\n2 4 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 0\\r\\n1 0 7\\r\\n1 8 4\\r\\n2 1 6\\r\\n2 1 2\\r\\n1 0 0\\r\\n1 1 1\\r\\n2 5 2\\r\\n1 8 5\\r\\n1 0 6\\r\\n2 6 8\\r\\n1 4 2\\r\\n1 8 3\\r\\n2 2 3\\r\\n1 6 3\\r\\n2 6 0\\r\\n1 5 3\\r\\n2 0 5\\r\\n1 3 4\\r\\n2 4 4\\r\\n1 8 6\\r\\n1 1 2\\r\\n1 5 7\\r\\n1 5 1\\r\\n1 3 8\\r\\n2 7 0\\r\\n1 7 2\\r\\n1 3 3\\r\\n2 6 5\\r\\n2 5 0\\r\\n2 2 4\\r\\n2 5 5\\r\\n2 4 6\\r\\n1 6 1\\r\\n1 5 2\\r\\n2 7 5\\r\\n1 8 7\\r\\n1 1 6\\r\\n1 4 8\\r\\n2 8 5\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 8 1\\r\\n1 8 6\\r\\n1 1 1\\r\\n2 5 4\\r\\n2 7 8\\r\\n1 6 2\\r\\n1 7 4\\r\\n1 4 4\\r\\n2 3 7\\r\\n1 6 3\\r\\n2 0 1\\r\\n1 8 0\\r\\n2 0 3\\r\\n1 6 0\\r\\n1 3 4\\r\\n1 1 8\\r\\n1 3 3\\r\\n2 3 1\\r\\n2 4 0\\r\\n1 4 3\\r\\n2 1 3\\r\\n2 5 4\\r\\n1 8 5\\r\\n2 1 0\\r\\n1 4 7\\r\\n2 5 3\\r\\n2 4 1\\r\\n1 4 0\\r\\n1 6 8\\r\\n1 5 1\\r\\n2 8 3\\r\\n2 5 7\\r\\n1 3 2\\r\\n1 7 5\\r\\n1 7 3\\r\\n1 0 8\\r\\n1 7 8\\r\\n2 7 3\\r\\n2 6 7\\r\\n2 4 2\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '50\\r\\n1 58 -49\\r\\n1 -77 -90\\r\\n1 32 -52\\r\\n1 -89 -31\\r\\n1 99 -34\\r\\n1 -3 -59\\r\\n2 65 93\\r\\n2 67 -51\\r\\n2 25 -47\\r\\n1 -72 86\\r\\n2 48 -45\\r\\n2 64 -70\\r\\n2 -96 -43\\r\\n2 87 -58\\r\\n2 3 21\\r\\n2 39 -57\\r\\n1 -58 49\\r\\n2 -1 87\\r\\n2 -63 19\\r\\n2 -27 90\\r\\n2 31 3\\r\\n1 55 41\\r\\n1 90 39\\r\\n1 -53 28\\r\\n2 49 -51\\r\\n2 6 42\\r\\n1 50 15\\r\\n2 21 -2\\r\\n2 -6 70\\r\\n1 -13 -61\\r\\n2 -60 -69\\r\\n1 -22 33\\r\\n1 -22 17\\r\\n2 30 -98\\r\\n2 -56 -48\\r\\n2 -84 -77\\r\\n2 49 56\\r\\n1 81 29\\r\\n1 26 29\\r\\n1 -14 20\\r\\n2 -37 83\\r\\n1 -91 96\\r\\n2 57 19\\r\\n1 94 54\\r\\n2 25 -30\\r\\n1 92 5\\r\\n2 -48 51\\r\\n2 81 23\\r\\n1 39 -47\\r\\n2 34 89\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '50\\r\\n1 7 -8\\r\\n1 -30 -28\\r\\n1 -8 2\\r\\n1 -28 -29\\r\\n2 -8 -21\\r\\n2 -23 19\\r\\n2 -23 18\\r\\n1 6 27\\r\\n2 -17 20\\r\\n1 9 -5\\r\\n2 -27 29\\r\\n1 -8 27\\r\\n2 13 12\\r\\n2 -29 13\\r\\n2 -30 8\\r\\n2 -30 -8\\r\\n1 -24 -21\\r\\n1 -14 -15\\r\\n2 -23 14\\r\\n2 -12 -13\\r\\n1 15 -24\\r\\n1 28 6\\r\\n2 -20 -21\\r\\n1 -8 -13\\r\\n1 -15 -15\\r\\n1 11 20\\r\\n2 24 -26\\r\\n1 -30 -11\\r\\n2 -17 18\\r\\n1 -17 6\\r\\n2 5 -9\\r\\n2 -29 8\\r\\n2 -29 1\\r\\n2 10 24\\r\\n2 29 27\\r\\n2 -12 21\\r\\n2 5 -28\\r\\n2 28 27\\r\\n2 -4 -4\\r\\n1 -24 29\\r\\n1 17 -1\\r\\n1 0 17\\r\\n1 -2 -1\\r\\n2 -7 -10\\r\\n1 5 -16\\r\\n2 -3 -26\\r\\n2 -7 17\\r\\n1 -27 -26\\r\\n1 -3 -30\\r\\n2 28 -15\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '10\\r\\n1 0 0\\r\\n1 6 0\\r\\n1 0 6\\r\\n2 0 0\\r\\n2 6 0\\r\\n2 0 6\\r\\n2 3 3\\r\\n2 3 0\\r\\n2 0 3\\r\\n2 2 2\\r\\n', 'output': ['YES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '50\\r\\n1 33 -21\\r\\n1 9 82\\r\\n1 -69 -54\\r\\n2 -3 84\\r\\n1 -9 -28\\r\\n2 -54 87\\r\\n2 26 -64\\r\\n2 8 52\\r\\n2 98 63\\r\\n2 -77 10\\r\\n2 -52 -46\\r\\n1 92 42\\r\\n2 -53 -69\\r\\n2 -48 44\\r\\n1 -52 90\\r\\n2 56 29\\r\\n2 -100 -13\\r\\n2 -23 1\\r\\n2 6 91\\r\\n2 53 -38\\r\\n1 48 -35\\r\\n2 19 -62\\r\\n2 -62 49\\r\\n1 59 78\\r\\n2 85 72\\r\\n2 28 76\\r\\n2 46 -91\\r\\n2 6 32\\r\\n2 -16 -59\\r\\n1 40 -53\\r\\n2 -6 87\\r\\n2 -79 -58\\r\\n2 -12 25\\r\\n2 73 49\\r\\n1 57 -42\\r\\n2 12 19\\r\\n1 -60 -5\\r\\n1 -40 -20\\r\\n1 90 35\\r\\n2 10 3\\r\\n2 63 -49\\r\\n1 50 10\\r\\n1 0 77\\r\\n1 92 24\\r\\n1 71 -7\\r\\n2 46 22\\r\\n1 19 81\\r\\n1 -3 -71\\r\\n2 -44 56\\r\\n2 92 34\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 3\\r\\n1 3 1\\r\\n1 0 1\\r\\n2 3 0\\r\\n2 6 5\\r\\n2 1 5\\r\\n2 8 3\\r\\n2 0 5\\r\\n2 3 4\\r\\n1 7 6\\r\\n1 1 0\\r\\n1 0 8\\r\\n1 3 7\\r\\n2 4 5\\r\\n2 2 5\\r\\n2 2 0\\r\\n1 7 4\\r\\n2 7 3\\r\\n1 5 0\\r\\n1 4 6\\r\\n1 1 5\\r\\n1 7 8\\r\\n2 7 5\\r\\n1 0 4\\r\\n2 3 8\\r\\n1 1 8\\r\\n1 0 5\\r\\n1 4 8\\r\\n2 8 5\\r\\n1 8 5\\r\\n2 3 6\\r\\n1 8 7\\r\\n2 4 3\\r\\n1 5 2\\r\\n2 2 8\\r\\n2 5 3\\r\\n2 4 0\\r\\n1 4 4\\r\\n1 6 5\\r\\n2 2 7\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pii;\nll x[3], y[3], n, m, k, q, a, b, c, t;\npii p[111111];\ndouble d[111111];\npriority_queue<pii, vector<pii>, greater<pii> > s;\nbool ch(int l, int r) {\n  return (x[l] - x[0]) * (y[r] - y[0]) < (y[l] - y[0]) * (x[r] - x[0]);\n}\nvoid hull() {\n  n = 0;\n  for (int i = 0; i < m; i++) {\n    while (n > 1 &&\n           (s.top().first - p[i].first) * (x[n - 1] - x[0]) <=\n               (y[n - 1] - y[0]) * (s.top().second - x[0]))\n      n--, s.pop();\n    p[i].first = -p[i].first, p[i].second = i;\n    s.push(p[i]);\n  }\n  while (!s.empty()) {\n    n++, x[n] = -s.top().first, y[n] = s.top().second, s.pop();\n  }\n  n++;\n}\nbool is(double X, double Y) {\n  for (int i = 0, j; i < n; i = j)\n    for (j = i + 1; j < n && d[i] + (X - x[i]) * (y[j] - y[i]) /\n                                     (x[j] - x[i]) < Y;\n         j++)\n      ;\n  return (Y - d[i] >= 1e-7 && j == n);\n}\nint main() {\n  scanf(\"%d\", &q);\n  for (int i = 0; i < q; i++) {\n    scanf(\"%d%d%d\", &t, &a, &b);\n    if (t == 1) {\n      x[m] = a, y[m] = b, d[m++] = 0, k = max(k, m);\n      if (m == 3) {\n        for (int i = 2; i >= 0; i--)\n          for (int j = 1; j >= 0; j--)\n            if (ch(i, j)) swap(x[i], x[j]), swap(y[i], y[j]), d[i] -= 1.0;\n        puts(\"YES\");\n      }\n    } else {\n      x[0] = a, y[0] = b, is(x[0], y[0])? puts(\"YES\") : puts(\"NO\");\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "6220f4058f9325dfb211fb1dd86e9464", "id": 60, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2700, "testcases": "[{'input': '8\\r\\n1 0 0\\r\\n1 2 0\\r\\n1 2 2\\r\\n2 1 0\\r\\n1 0 2\\r\\n2 1 1\\r\\n2 2 1\\r\\n2 20 -1\\r\\n', 'output': ['YES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 0 0\\r\\n1 5 0\\r\\n1 0 5\\r\\n2 1 1\\r\\n2 10 10\\r\\n1 2 10\\r\\n2 1 1\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '5\\r\\n1 2 -2\\r\\n1 -2 2\\r\\n1 1 5\\r\\n2 3 -1\\r\\n2 3 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\n']}, {'input': '5\\r\\n1 -1 0\\r\\n1 1 0\\r\\n1 0 2\\r\\n2 0 1\\r\\n2 0 3\\r\\n', 'output': ['YES\\r\\nNO\\r\\n']}, {'input': '6\\r\\n1 -2 0\\r\\n1 2 0\\r\\n1 0 2\\r\\n2 4 0\\r\\n2 1 0\\r\\n2 2 0\\r\\n', 'output': ['NO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '11\\r\\n1 0 -1\\r\\n1 0 1\\r\\n1 1 -1\\r\\n1 -1 -5\\r\\n1 0 5\\r\\n2 5 1\\r\\n2 5 0\\r\\n2 5 -1\\r\\n2 0 0\\r\\n2 0 10\\r\\n2 0 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -37 889\\r\\n1 771 -764\\r\\n1 -119 938\\r\\n1 599 868\\r\\n1 56 161\\r\\n1 -67 86\\r\\n2 -692 99\\r\\n2 -995 158\\r\\n2 410 116\\r\\n1 -49 -864\\r\\n2 30 -580\\r\\n1 -930 454\\r\\n1 -706 301\\r\\n2 547 -606\\r\\n2 -252 -55\\r\\n2 662 152\\r\\n2 -621 -920\\r\\n1 -128 -595\\r\\n1 -401 -265\\r\\n1 434 388\\r\\n2 299 173\\r\\n1 104 -298\\r\\n1 -693 557\\r\\n2 840 -179\\r\\n2 382 -8\\r\\n1 461 618\\r\\n1 -928 628\\r\\n2 193 -972\\r\\n2 218 945\\r\\n2 490 571\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -619 -234\\r\\n1 -140 -846\\r\\n1 762 -792\\r\\n2 153 29\\r\\n1 -353 627\\r\\n2 -544 -418\\r\\n2 -922 -965\\r\\n1 -620 -692\\r\\n1 -34 295\\r\\n2 -326 -604\\r\\n2 -906 -867\\r\\n2 57 -690\\r\\n1 -87 -822\\r\\n2 -569 739\\r\\n2 -92 -927\\r\\n2 279 806\\r\\n1 -364 19\\r\\n2 -214 -629\\r\\n2 -283 662\\r\\n2 -324 650\\r\\n1 92 -511\\r\\n2 654 -597\\r\\n1 -87 747\\r\\n2 795 46\\r\\n2 870 -157\\r\\n2 -11 520\\r\\n1 -162 -686\\r\\n2 290 -660\\r\\n2 -660 780\\r\\n2 946 910\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '30\\r\\n1 -702 -823\\r\\n1 -330 -896\\r\\n1 -564 90\\r\\n1 559 818\\r\\n2 404 716\\r\\n1 -900 -379\\r\\n2 866 -218\\r\\n2 444 615\\r\\n2 -782 -887\\r\\n2 584 -919\\r\\n2 891 775\\r\\n1 117 887\\r\\n2 598 162\\r\\n2 759 -925\\r\\n2 713 -507\\r\\n1 -329 120\\r\\n2 546 185\\r\\n2 399 500\\r\\n1 -611 763\\r\\n1 -956 187\\r\\n2 82 -26\\r\\n2 -877 -906\\r\\n1 293 -637\\r\\n2 -685 -275\\r\\n2 -725 -927\\r\\n1 -627 777\\r\\n1 -609 -563\\r\\n2 402 54\\r\\n1 -106 -908\\r\\n2 175 808\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -64 -994\\r\\n1 -692 366\\r\\n1 -72 847\\r\\n2 -963 -251\\r\\n1 -651 -994\\r\\n1 -523 -861\\r\\n2 553 -129\\r\\n2 17 785\\r\\n2 -584 -880\\r\\n1 105 657\\r\\n1 649 98\\r\\n2 -572 -492\\r\\n1 -38 -481\\r\\n1 540 463\\r\\n1 -468 -540\\r\\n1 -730 100\\r\\n1 606 -119\\r\\n1 -254 -380\\r\\n1 169 280\\r\\n1 319 62\\r\\n1 452 -556\\r\\n1 -653 887\\r\\n1 407 -786\\r\\n2 -632 181\\r\\n1 925 -967\\r\\n2 996 -709\\r\\n1 568 517\\r\\n2 -478 76\\r\\n1 156 621\\r\\n2 -592 899\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '30\\r\\n1 836 -283\\r\\n1 299 629\\r\\n1 434 -481\\r\\n1 -500 -368\\r\\n2 -105 -216\\r\\n2 -617 443\\r\\n2 -579 811\\r\\n1 411 -242\\r\\n1 -652 41\\r\\n1 962 -483\\r\\n1 -732 579\\r\\n2 554 -147\\r\\n1 39 967\\r\\n1 917 -199\\r\\n2 686 397\\r\\n1 444 780\\r\\n1 278 462\\r\\n1 729 -18\\r\\n1 252 -864\\r\\n1 884 -952\\r\\n1 272 689\\r\\n2 366 -389\\r\\n1 443 924\\r\\n1 791 -249\\r\\n2 692 74\\r\\n2 -412 550\\r\\n2 506 -472\\r\\n2 -626 474\\r\\n1 -895 -42\\r\\n2 -390 -971\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '12\\r\\n1 0 0\\r\\n1 10 0\\r\\n1 8 1\\r\\n2 11 0\\r\\n1 2 0\\r\\n2 7 0\\r\\n2 9 0\\r\\n2 1 0\\r\\n1 1 1\\r\\n2 10 0\\r\\n2 9 0\\r\\n2 11 0\\r\\n', 'output': ['NO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 5000 5000\\r\\n2 3 0\\r\\n2 2 0\\r\\n2 4 0\\r\\n2 -1 0\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '4\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 2 2\\r\\n2 4 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 0 8\\r\\n2 4 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '11\\r\\n1 0 -1\\r\\n1 0 1\\r\\n1 -1 -5\\r\\n1 6 4\\r\\n1 -8 8\\r\\n2 6 -1\\r\\n2 6 1\\r\\n2 1 0\\r\\n2 1 -1\\r\\n2 1 1\\r\\n2 6 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '11\\r\\n1 5 4\\r\\n1 5 6\\r\\n1 4 0\\r\\n1 11 9\\r\\n1 -3 13\\r\\n2 11 4\\r\\n2 11 6\\r\\n2 6 5\\r\\n2 6 4\\r\\n2 6 6\\r\\n2 11 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -2 -1000000\\r\\n1 -1 -1000000\\r\\n1 -1 -999999\\r\\n1 1 1000000\\r\\n1 -231100 1000000\\r\\n2 0 0\\r\\n2 1 999999\\r\\n', 'output': ['YES\\r\\nNO\\r\\n']}, {'input': '10\\r\\n1 -1000000 -1000000\\r\\n1 -999999 -1000000\\r\\n1 999999 1000000\\r\\n1 1000000 1000000\\r\\n2 0 0\\r\\n2 1000000 999999\\r\\n2 999999 1000000\\r\\n2 999999 999999\\r\\n2 999999 999998\\r\\n2 999999 999997\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '9\\r\\n1 -2 -4\\r\\n1 2 4\\r\\n1 -3 3\\r\\n2 -1 -2\\r\\n2 -4 -8\\r\\n2 -3 -6\\r\\n2 1 2\\r\\n2 4 8\\r\\n2 3 6\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '16\\r\\n1 -10000 0\\r\\n1 10000 0\\r\\n1 0 -1\\r\\n2 50000 0\\r\\n2 -50000 0\\r\\n2 49000 0\\r\\n2 -49000 0\\r\\n2 27000 0\\r\\n2 -27000 0\\r\\n1 0 1\\r\\n2 50000 0\\r\\n2 -50000 0\\r\\n2 49000 0\\r\\n2 -49000 0\\r\\n2 27000 0\\r\\n2 -27000 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -7000 -9000\\r\\n1 7000 9000\\r\\n1 7000 -7000\\r\\n2 21 27\\r\\n2 -21 -27\\r\\n2 7007 9009\\r\\n2 -7007 -9009\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -7000 -9000\\r\\n1 7000 9000\\r\\n1 -7000 7000\\r\\n2 21 27\\r\\n2 -21 -27\\r\\n2 7007 9009\\r\\n2 -7007 -9009\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -9000 7000\\r\\n1 9000 -7000\\r\\n1 7000 7000\\r\\n2 -27 21\\r\\n2 27 -21\\r\\n2 -9009 7007\\r\\n2 9009 -7007\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -9000 7000\\r\\n1 9000 -7000\\r\\n1 -7000 -7000\\r\\n2 -27 21\\r\\n2 27 -21\\r\\n2 -9009 7007\\r\\n2 9009 -7007\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 7 6\\r\\n1 0 5\\r\\n1 0 4\\r\\n1 2 5\\r\\n1 8 0\\r\\n1 6 4\\r\\n1 1 1\\r\\n1 8 4\\r\\n2 1 1\\r\\n2 2 7\\r\\n1 2 3\\r\\n1 4 2\\r\\n2 4 3\\r\\n1 3 2\\r\\n1 7 2\\r\\n1 1 0\\r\\n2 3 5\\r\\n1 6 5\\r\\n2 5 7\\r\\n2 1 1\\r\\n2 3 2\\r\\n1 6 2\\r\\n2 6 0\\r\\n2 8 8\\r\\n1 4 6\\r\\n1 3 5\\r\\n2 3 8\\r\\n2 0 5\\r\\n2 1 6\\r\\n1 8 3\\r\\n1 2 2\\r\\n1 8 2\\r\\n1 6 8\\r\\n1 1 3\\r\\n1 3 3\\r\\n1 5 5\\r\\n2 2 0\\r\\n2 6 7\\r\\n2 1 6\\r\\n2 6 4\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 8\\r\\n1 6 7\\r\\n1 7 7\\r\\n2 5 5\\r\\n1 4 0\\r\\n1 0 0\\r\\n2 7 3\\r\\n1 0 2\\r\\n2 8 2\\r\\n2 5 1\\r\\n2 1 2\\r\\n2 1 5\\r\\n1 1 3\\r\\n1 7 1\\r\\n1 8 7\\r\\n1 2 4\\r\\n1 2 8\\r\\n2 8 5\\r\\n2 8 6\\r\\n1 2 1\\r\\n1 5 6\\r\\n1 2 3\\r\\n2 4 3\\r\\n1 8 3\\r\\n1 1 5\\r\\n2 2 2\\r\\n2 8 5\\r\\n1 0 7\\r\\n1 7 2\\r\\n1 5 5\\r\\n1 8 4\\r\\n1 4 1\\r\\n2 3 2\\r\\n2 6 0\\r\\n2 8 7\\r\\n2 5 7\\r\\n1 3 0\\r\\n2 1 0\\r\\n2 0 7\\r\\n2 5 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 8\\r\\n1 3 8\\r\\n1 7 4\\r\\n1 4 5\\r\\n1 4 1\\r\\n2 6 6\\r\\n2 5 8\\r\\n1 5 4\\r\\n1 7 8\\r\\n2 1 3\\r\\n2 6 1\\r\\n2 8 2\\r\\n2 6 8\\r\\n1 4 3\\r\\n2 2 8\\r\\n2 0 6\\r\\n1 0 3\\r\\n2 0 3\\r\\n1 6 6\\r\\n1 5 8\\r\\n1 5 5\\r\\n1 1 2\\r\\n2 6 7\\r\\n1 4 8\\r\\n2 1 2\\r\\n2 2 7\\r\\n2 2 3\\r\\n1 8 4\\r\\n2 8 4\\r\\n2 6 5\\r\\n1 8 2\\r\\n2 7 2\\r\\n2 3 5\\r\\n1 4 0\\r\\n2 6 2\\r\\n2 3 7\\r\\n1 4 6\\r\\n1 8 6\\r\\n1 0 5\\r\\n2 2 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 4 0\\r\\n1 7 1\\r\\n1 8 0\\r\\n1 1 2\\r\\n1 1 8\\r\\n1 6 1\\r\\n2 5 2\\r\\n1 7 7\\r\\n1 6 5\\r\\n2 8 1\\r\\n2 8 7\\r\\n1 7 8\\r\\n2 3 5\\r\\n2 6 6\\r\\n1 4 2\\r\\n1 8 3\\r\\n2 6 8\\r\\n1 4 8\\r\\n2 4 6\\r\\n2 1 7\\r\\n1 4 3\\r\\n2 0 8\\r\\n1 5 2\\r\\n2 5 5\\r\\n2 1 6\\r\\n1 5 5\\r\\n1 1 5\\r\\n2 3 3\\r\\n2 0 1\\r\\n1 1 0\\r\\n2 1 4\\r\\n2 3 6\\r\\n1 4 6\\r\\n2 7 6\\r\\n1 4 4\\r\\n1 7 6\\r\\n1 6 8\\r\\n2 1 1\\r\\n1 0 1\\r\\n2 0 2\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 3 0\\r\\n1 1 4\\r\\n1 2 7\\r\\n2 4 0\\r\\n1 0 5\\r\\n1 7 5\\r\\n2 6 3\\r\\n1 0 7\\r\\n2 5 7\\r\\n1 1 0\\r\\n2 0 6\\r\\n1 6 8\\r\\n1 3 5\\r\\n1 8 5\\r\\n1 0 6\\r\\n2 7 0\\r\\n1 4 6\\r\\n1 5 2\\r\\n2 6 2\\r\\n1 7 0\\r\\n2 6 3\\r\\n1 3 7\\r\\n2 4 2\\r\\n2 1 4\\r\\n1 1 3\\r\\n1 5 0\\r\\n2 0 7\\r\\n2 6 8\\r\\n1 4 0\\r\\n2 5 0\\r\\n2 3 2\\r\\n2 6 7\\r\\n1 7 2\\r\\n1 0 3\\r\\n1 6 6\\r\\n2 4 0\\r\\n2 2 4\\r\\n1 6 5\\r\\n2 0 8\\r\\n2 0 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 0 3\\r\\n1 6 0\\r\\n1 8 7\\r\\n2 2 6\\r\\n2 7 2\\r\\n2 7 5\\r\\n1 4 7\\r\\n1 2 3\\r\\n2 2 7\\r\\n2 3 1\\r\\n1 3 5\\r\\n1 8 5\\r\\n2 6 8\\r\\n1 2 8\\r\\n2 4 6\\r\\n1 7 3\\r\\n1 3 3\\r\\n2 2 4\\r\\n1 5 0\\r\\n1 5 6\\r\\n1 1 7\\r\\n2 3 3\\r\\n1 8 6\\r\\n2 7 4\\r\\n1 7 8\\r\\n1 5 8\\r\\n2 3 8\\r\\n1 6 6\\r\\n2 8 5\\r\\n1 5 1\\r\\n2 4 2\\r\\n1 7 7\\r\\n2 4 8\\r\\n1 6 1\\r\\n1 1 5\\r\\n2 1 8\\r\\n2 4 3\\r\\n1 5 5\\r\\n1 4 0\\r\\n2 0 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 5 2\\r\\n1 5 6\\r\\n1 2 1\\r\\n2 7 2\\r\\n2 6 2\\r\\n2 0 8\\r\\n2 0 6\\r\\n1 6 8\\r\\n1 2 0\\r\\n1 0 5\\r\\n2 3 0\\r\\n1 3 8\\r\\n2 8 6\\r\\n1 0 3\\r\\n1 8 8\\r\\n2 1 1\\r\\n1 1 4\\r\\n1 1 3\\r\\n2 0 0\\r\\n2 5 6\\r\\n1 0 0\\r\\n2 0 0\\r\\n1 2 7\\r\\n2 0 0\\r\\n2 3 6\\r\\n1 3 3\\r\\n1 3 2\\r\\n1 5 3\\r\\n1 7 8\\r\\n1 7 4\\r\\n1 8 7\\r\\n1 7 3\\r\\n2 0 3\\r\\n1 4 4\\r\\n2 5 0\\r\\n1 6 6\\r\\n1 8 0\\r\\n2 6 2\\r\\n2 4 8\\r\\n2 7 2\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 4\\r\\n1 1 5\\r\\n1 3 5\\r\\n2 8 2\\r\\n2 5 2\\r\\n1 7 3\\r\\n1 8 1\\r\\n2 6 5\\r\\n1 4 3\\r\\n1 2 4\\r\\n1 2 3\\r\\n2 8 3\\r\\n2 3 5\\r\\n2 2 0\\r\\n1 6 7\\r\\n2 2 8\\r\\n1 3 0\\r\\n2 5 1\\r\\n2 2 1\\r\\n1 4 5\\r\\n2 1 6\\r\\n1 8 5\\r\\n2 7 4\\r\\n2 2 0\\r\\n1 3 2\\r\\n1 2 2\\r\\n1 8 3\\r\\n2 3 4\\r\\n1 7 6\\r\\n1 3 7\\r\\n1 5 3\\r\\n1 2 0\\r\\n2 5 7\\r\\n2 0 7\\r\\n2 3 2\\r\\n2 1 0\\r\\n1 6 0\\r\\n2 8 5\\r\\n1 3 4\\r\\n2 0 3\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 8 7\\r\\n1 0 6\\r\\n1 5 0\\r\\n2 6 7\\r\\n2 6 8\\r\\n1 3 5\\r\\n1 6 7\\r\\n1 0 0\\r\\n2 1 7\\r\\n1 2 3\\r\\n2 4 3\\r\\n2 5 5\\r\\n1 4 7\\r\\n2 2 0\\r\\n1 2 4\\r\\n1 4 2\\r\\n1 0 8\\r\\n2 0 3\\r\\n1 8 8\\r\\n2 8 1\\r\\n2 8 6\\r\\n2 4 8\\r\\n1 4 0\\r\\n1 6 6\\r\\n2 0 0\\r\\n1 6 2\\r\\n2 5 1\\r\\n1 3 0\\r\\n1 5 6\\r\\n1 8 1\\r\\n1 3 4\\r\\n1 1 3\\r\\n1 5 1\\r\\n1 5 7\\r\\n1 6 8\\r\\n1 1 5\\r\\n1 1 1\\r\\n1 6 1\\r\\n1 1 4\\r\\n2 7 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 8\\r\\n1 4 0\\r\\n1 0 6\\r\\n2 3 8\\r\\n2 4 5\\r\\n1 5 0\\r\\n2 7 6\\r\\n2 6 1\\r\\n2 1 7\\r\\n1 1 2\\r\\n1 5 4\\r\\n1 7 3\\r\\n2 6 4\\r\\n1 3 0\\r\\n2 2 8\\r\\n1 8 2\\r\\n1 8 8\\r\\n1 7 8\\r\\n2 2 5\\r\\n2 2 3\\r\\n2 4 6\\r\\n2 0 2\\r\\n2 6 7\\r\\n2 2 8\\r\\n1 8 3\\r\\n2 5 5\\r\\n1 4 8\\r\\n1 7 1\\r\\n2 7 3\\r\\n2 4 5\\r\\n2 1 1\\r\\n2 4 2\\r\\n1 1 1\\r\\n2 4 0\\r\\n1 2 4\\r\\n2 7 0\\r\\n1 4 1\\r\\n1 7 5\\r\\n1 6 6\\r\\n2 7 8\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 6 3\\r\\n1 5 3\\r\\n1 3 4\\r\\n1 2 3\\r\\n2 2 5\\r\\n1 6 1\\r\\n2 3 7\\r\\n1 0 0\\r\\n1 8 7\\r\\n1 3 8\\r\\n1 0 8\\r\\n1 3 5\\r\\n1 4 5\\r\\n1 0 5\\r\\n2 8 1\\r\\n2 4 7\\r\\n2 3 2\\r\\n1 6 4\\r\\n2 2 3\\r\\n2 6 3\\r\\n1 0 2\\r\\n2 1 2\\r\\n2 6 2\\r\\n1 5 7\\r\\n2 7 0\\r\\n1 4 8\\r\\n1 4 6\\r\\n2 8 7\\r\\n2 0 7\\r\\n1 7 8\\r\\n2 0 3\\r\\n1 5 5\\r\\n1 6 2\\r\\n2 4 5\\r\\n1 2 5\\r\\n2 3 3\\r\\n2 1 1\\r\\n1 8 3\\r\\n1 6 5\\r\\n2 5 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 6 5\\r\\n1 4 8\\r\\n1 5 7\\r\\n1 3 1\\r\\n2 4 2\\r\\n1 4 3\\r\\n1 0 7\\r\\n2 4 6\\r\\n2 4 2\\r\\n1 0 3\\r\\n2 1 5\\r\\n2 5 6\\r\\n1 8 8\\r\\n1 1 7\\r\\n1 3 3\\r\\n2 6 7\\r\\n1 7 4\\r\\n1 0 2\\r\\n1 8 4\\r\\n2 4 5\\r\\n2 0 7\\r\\n1 4 1\\r\\n1 4 4\\r\\n1 5 3\\r\\n1 1 0\\r\\n1 4 5\\r\\n2 1 4\\r\\n1 0 6\\r\\n2 1 0\\r\\n1 5 5\\r\\n2 5 6\\r\\n2 8 2\\r\\n2 1 7\\r\\n2 8 1\\r\\n2 0 5\\r\\n1 0 4\\r\\n1 6 6\\r\\n2 1 1\\r\\n1 8 0\\r\\n2 6 3\\r\\n', 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 7\\r\\n1 3 3\\r\\n1 6 5\\r\\n1 7 3\\r\\n1 2 8\\r\\n1 3 0\\r\\n2 0 0\\r\\n1 7 7\\r\\n2 6 8\\r\\n2 6 0\\r\\n2 4 7\\r\\n1 7 8\\r\\n2 0 7\\r\\n2 0 5\\r\\n1 6 2\\r\\n1 7 1\\r\\n1 1 1\\r\\n2 4 8\\r\\n2 2 1\\r\\n2 7 0\\r\\n2 5 4\\r\\n1 2 4\\r\\n2 1 3\\r\\n2 0 5\\r\\n2 5 5\\r\\n2 1 4\\r\\n2 5 5\\r\\n1 2 6\\r\\n1 4 4\\r\\n2 0 8\\r\\n1 0 6\\r\\n2 0 5\\r\\n2 4 6\\r\\n2 8 1\\r\\n2 2 0\\r\\n2 3 3\\r\\n1 0 4\\r\\n1 3 7\\r\\n2 3 2\\r\\n2 3 7\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 7\\r\\n1 6 5\\r\\n1 2 0\\r\\n2 4 5\\r\\n1 1 0\\r\\n2 3 4\\r\\n1 7 3\\r\\n2 8 1\\r\\n2 0 0\\r\\n2 2 0\\r\\n1 7 4\\r\\n1 6 3\\r\\n2 8 1\\r\\n2 6 0\\r\\n1 4 7\\r\\n2 4 2\\r\\n1 4 5\\r\\n2 3 7\\r\\n2 6 8\\r\\n2 2 6\\r\\n2 7 4\\r\\n1 0 6\\r\\n2 1 7\\r\\n1 4 4\\r\\n2 2 3\\r\\n1 1 3\\r\\n1 8 5\\r\\n1 0 5\\r\\n1 1 1\\r\\n1 4 3\\r\\n2 5 3\\r\\n1 3 6\\r\\n1 7 0\\r\\n2 5 6\\r\\n2 5 6\\r\\n1 0 7\\r\\n2 7 0\\r\\n2 6 4\\r\\n1 3 7\\r\\n2 2 2\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 4 4\\r\\n1 2 6\\r\\n1 8 2\\r\\n2 4 6\\r\\n1 5 4\\r\\n2 5 8\\r\\n2 6 7\\r\\n2 4 8\\r\\n1 1 0\\r\\n1 3 1\\r\\n1 0 3\\r\\n1 8 1\\r\\n1 3 0\\r\\n2 7 4\\r\\n1 2 0\\r\\n1 8 5\\r\\n1 6 2\\r\\n2 2 0\\r\\n1 0 4\\r\\n1 1 1\\r\\n1 4 5\\r\\n2 8 3\\r\\n2 1 0\\r\\n2 5 5\\r\\n1 3 4\\r\\n2 0 7\\r\\n1 4 3\\r\\n1 7 0\\r\\n2 3 8\\r\\n1 0 1\\r\\n1 0 7\\r\\n2 4 1\\r\\n1 0 6\\r\\n2 1 2\\r\\n1 5 7\\r\\n2 7 2\\r\\n2 7 3\\r\\n1 3 6\\r\\n2 7 3\\r\\n2 7 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 0 8\\r\\n1 3 5\\r\\n1 0 2\\r\\n1 8 0\\r\\n1 5 3\\r\\n1 5 2\\r\\n2 8 2\\r\\n2 7 6\\r\\n1 6 1\\r\\n2 2 7\\r\\n2 6 5\\r\\n1 3 7\\r\\n2 7 8\\r\\n1 2 4\\r\\n1 4 2\\r\\n2 5 7\\r\\n2 0 6\\r\\n1 3 1\\r\\n2 2 3\\r\\n1 5 7\\r\\n2 2 8\\r\\n1 7 1\\r\\n1 3 0\\r\\n2 5 5\\r\\n1 7 4\\r\\n2 5 5\\r\\n1 2 0\\r\\n2 4 3\\r\\n2 8 1\\r\\n2 8 0\\r\\n1 2 6\\r\\n1 7 5\\r\\n2 4 8\\r\\n1 2 3\\r\\n2 6 6\\r\\n1 7 8\\r\\n2 7 5\\r\\n2 7 4\\r\\n1 8 1\\r\\n2 5 6\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 3\\r\\n1 7 2\\r\\n1 6 2\\r\\n2 0 8\\r\\n2 3 8\\r\\n2 0 3\\r\\n1 5 8\\r\\n2 7 1\\r\\n1 8 1\\r\\n2 8 7\\r\\n1 5 5\\r\\n2 2 4\\r\\n2 3 3\\r\\n2 2 4\\r\\n1 0 1\\r\\n1 2 0\\r\\n1 7 4\\r\\n2 7 4\\r\\n2 5 5\\r\\n1 1 1\\r\\n2 6 4\\r\\n2 1 7\\r\\n2 5 0\\r\\n1 8 0\\r\\n2 6 2\\r\\n1 7 1\\r\\n2 8 6\\r\\n1 8 7\\r\\n2 2 5\\r\\n1 7 3\\r\\n1 5 6\\r\\n1 4 0\\r\\n2 3 8\\r\\n2 8 6\\r\\n1 7 0\\r\\n2 3 5\\r\\n2 6 1\\r\\n1 2 6\\r\\n1 1 2\\r\\n2 7 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 4 4\\r\\n1 2 6\\r\\n1 7 2\\r\\n2 1 4\\r\\n2 0 2\\r\\n1 5 4\\r\\n2 5 1\\r\\n1 0 8\\r\\n1 1 7\\r\\n2 2 0\\r\\n1 8 4\\r\\n2 6 5\\r\\n2 8 0\\r\\n1 6 5\\r\\n2 8 7\\r\\n2 0 0\\r\\n2 4 0\\r\\n2 7 2\\r\\n2 6 8\\r\\n1 7 8\\r\\n2 8 8\\r\\n2 4 7\\r\\n1 7 1\\r\\n2 8 8\\r\\n1 5 8\\r\\n1 3 6\\r\\n1 4 6\\r\\n1 3 5\\r\\n2 6 1\\r\\n2 1 3\\r\\n2 8 4\\r\\n2 8 5\\r\\n2 1 3\\r\\n2 7 1\\r\\n2 5 8\\r\\n1 8 2\\r\\n2 6 1\\r\\n1 7 4\\r\\n1 8 5\\r\\n2 6 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 1\\r\\n1 4 7\\r\\n1 1 1\\r\\n1 2 4\\r\\n2 4 4\\r\\n1 4 4\\r\\n2 0 6\\r\\n2 7 6\\r\\n1 4 0\\r\\n2 6 5\\r\\n2 5 2\\r\\n1 6 1\\r\\n2 7 0\\r\\n1 6 2\\r\\n2 3 2\\r\\n1 0 6\\r\\n2 7 0\\r\\n1 8 6\\r\\n2 1 3\\r\\n2 0 1\\r\\n1 2 5\\r\\n1 0 2\\r\\n2 4 2\\r\\n2 6 8\\r\\n2 2 0\\r\\n2 5 7\\r\\n2 6 0\\r\\n1 2 2\\r\\n2 0 3\\r\\n1 7 4\\r\\n2 7 3\\r\\n1 4 1\\r\\n2 2 6\\r\\n2 8 2\\r\\n1 8 3\\r\\n1 8 7\\r\\n1 0 3\\r\\n1 7 0\\r\\n2 2 1\\r\\n2 6 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 7\\r\\n1 5 8\\r\\n1 4 4\\r\\n1 8 1\\r\\n1 4 6\\r\\n1 6 6\\r\\n2 5 0\\r\\n2 3 4\\r\\n1 5 3\\r\\n2 0 7\\r\\n2 3 1\\r\\n1 5 4\\r\\n1 3 4\\r\\n2 3 4\\r\\n2 8 2\\r\\n1 0 1\\r\\n1 0 8\\r\\n2 3 8\\r\\n1 0 4\\r\\n2 4 6\\r\\n1 7 3\\r\\n2 4 0\\r\\n1 2 3\\r\\n2 8 1\\r\\n2 8 4\\r\\n1 7 0\\r\\n2 2 6\\r\\n2 2 2\\r\\n1 2 2\\r\\n1 6 5\\r\\n1 7 1\\r\\n2 5 1\\r\\n1 2 4\\r\\n2 3 2\\r\\n1 8 4\\r\\n1 7 4\\r\\n1 1 2\\r\\n1 3 2\\r\\n2 7 3\\r\\n2 4 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 0\\r\\n1 0 7\\r\\n1 8 4\\r\\n2 1 6\\r\\n2 1 2\\r\\n1 0 0\\r\\n1 1 1\\r\\n2 5 2\\r\\n1 8 5\\r\\n1 0 6\\r\\n2 6 8\\r\\n1 4 2\\r\\n1 8 3\\r\\n2 2 3\\r\\n1 6 3\\r\\n2 6 0\\r\\n1 5 3\\r\\n2 0 5\\r\\n1 3 4\\r\\n2 4 4\\r\\n1 8 6\\r\\n1 1 2\\r\\n1 5 7\\r\\n1 5 1\\r\\n1 3 8\\r\\n2 7 0\\r\\n1 7 2\\r\\n1 3 3\\r\\n2 6 5\\r\\n2 5 0\\r\\n2 2 4\\r\\n2 5 5\\r\\n2 4 6\\r\\n1 6 1\\r\\n1 5 2\\r\\n2 7 5\\r\\n1 8 7\\r\\n1 1 6\\r\\n1 4 8\\r\\n2 8 5\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 8 1\\r\\n1 8 6\\r\\n1 1 1\\r\\n2 5 4\\r\\n2 7 8\\r\\n1 6 2\\r\\n1 7 4\\r\\n1 4 4\\r\\n2 3 7\\r\\n1 6 3\\r\\n2 0 1\\r\\n1 8 0\\r\\n2 0 3\\r\\n1 6 0\\r\\n1 3 4\\r\\n1 1 8\\r\\n1 3 3\\r\\n2 3 1\\r\\n2 4 0\\r\\n1 4 3\\r\\n2 1 3\\r\\n2 5 4\\r\\n1 8 5\\r\\n2 1 0\\r\\n1 4 7\\r\\n2 5 3\\r\\n2 4 1\\r\\n1 4 0\\r\\n1 6 8\\r\\n1 5 1\\r\\n2 8 3\\r\\n2 5 7\\r\\n1 3 2\\r\\n1 7 5\\r\\n1 7 3\\r\\n1 0 8\\r\\n1 7 8\\r\\n2 7 3\\r\\n2 6 7\\r\\n2 4 2\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '50\\r\\n1 58 -49\\r\\n1 -77 -90\\r\\n1 32 -52\\r\\n1 -89 -31\\r\\n1 99 -34\\r\\n1 -3 -59\\r\\n2 65 93\\r\\n2 67 -51\\r\\n2 25 -47\\r\\n1 -72 86\\r\\n2 48 -45\\r\\n2 64 -70\\r\\n2 -96 -43\\r\\n2 87 -58\\r\\n2 3 21\\r\\n2 39 -57\\r\\n1 -58 49\\r\\n2 -1 87\\r\\n2 -63 19\\r\\n2 -27 90\\r\\n2 31 3\\r\\n1 55 41\\r\\n1 90 39\\r\\n1 -53 28\\r\\n2 49 -51\\r\\n2 6 42\\r\\n1 50 15\\r\\n2 21 -2\\r\\n2 -6 70\\r\\n1 -13 -61\\r\\n2 -60 -69\\r\\n1 -22 33\\r\\n1 -22 17\\r\\n2 30 -98\\r\\n2 -56 -48\\r\\n2 -84 -77\\r\\n2 49 56\\r\\n1 81 29\\r\\n1 26 29\\r\\n1 -14 20\\r\\n2 -37 83\\r\\n1 -91 96\\r\\n2 57 19\\r\\n1 94 54\\r\\n2 25 -30\\r\\n1 92 5\\r\\n2 -48 51\\r\\n2 81 23\\r\\n1 39 -47\\r\\n2 34 89\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '50\\r\\n1 7 -8\\r\\n1 -30 -28\\r\\n1 -8 2\\r\\n1 -28 -29\\r\\n2 -8 -21\\r\\n2 -23 19\\r\\n2 -23 18\\r\\n1 6 27\\r\\n2 -17 20\\r\\n1 9 -5\\r\\n2 -27 29\\r\\n1 -8 27\\r\\n2 13 12\\r\\n2 -29 13\\r\\n2 -30 8\\r\\n2 -30 -8\\r\\n1 -24 -21\\r\\n1 -14 -15\\r\\n2 -23 14\\r\\n2 -12 -13\\r\\n1 15 -24\\r\\n1 28 6\\r\\n2 -20 -21\\r\\n1 -8 -13\\r\\n1 -15 -15\\r\\n1 11 20\\r\\n2 24 -26\\r\\n1 -30 -11\\r\\n2 -17 18\\r\\n1 -17 6\\r\\n2 5 -9\\r\\n2 -29 8\\r\\n2 -29 1\\r\\n2 10 24\\r\\n2 29 27\\r\\n2 -12 21\\r\\n2 5 -28\\r\\n2 28 27\\r\\n2 -4 -4\\r\\n1 -24 29\\r\\n1 17 -1\\r\\n1 0 17\\r\\n1 -2 -1\\r\\n2 -7 -10\\r\\n1 5 -16\\r\\n2 -3 -26\\r\\n2 -7 17\\r\\n1 -27 -26\\r\\n1 -3 -30\\r\\n2 28 -15\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '10\\r\\n1 0 0\\r\\n1 6 0\\r\\n1 0 6\\r\\n2 0 0\\r\\n2 6 0\\r\\n2 0 6\\r\\n2 3 3\\r\\n2 3 0\\r\\n2 0 3\\r\\n2 2 2\\r\\n', 'output': ['YES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '50\\r\\n1 33 -21\\r\\n1 9 82\\r\\n1 -69 -54\\r\\n2 -3 84\\r\\n1 -9 -28\\r\\n2 -54 87\\r\\n2 26 -64\\r\\n2 8 52\\r\\n2 98 63\\r\\n2 -77 10\\r\\n2 -52 -46\\r\\n1 92 42\\r\\n2 -53 -69\\r\\n2 -48 44\\r\\n1 -52 90\\r\\n2 56 29\\r\\n2 -100 -13\\r\\n2 -23 1\\r\\n2 6 91\\r\\n2 53 -38\\r\\n1 48 -35\\r\\n2 19 -62\\r\\n2 -62 49\\r\\n1 59 78\\r\\n2 85 72\\r\\n2 28 76\\r\\n2 46 -91\\r\\n2 6 32\\r\\n2 -16 -59\\r\\n1 40 -53\\r\\n2 -6 87\\r\\n2 -79 -58\\r\\n2 -12 25\\r\\n2 73 49\\r\\n1 57 -42\\r\\n2 12 19\\r\\n1 -60 -5\\r\\n1 -40 -20\\r\\n1 90 35\\r\\n2 10 3\\r\\n2 63 -49\\r\\n1 50 10\\r\\n1 0 77\\r\\n1 92 24\\r\\n1 71 -7\\r\\n2 46 22\\r\\n1 19 81\\r\\n1 -3 -71\\r\\n2 -44 56\\r\\n2 92 34\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 3\\r\\n1 3 1\\r\\n1 0 1\\r\\n2 3 0\\r\\n2 6 5\\r\\n2 1 5\\r\\n2 8 3\\r\\n2 0 5\\r\\n2 3 4\\r\\n1 7 6\\r\\n1 1 0\\r\\n1 0 8\\r\\n1 3 7\\r\\n2 4 5\\r\\n2 2 5\\r\\n2 2 0\\r\\n1 7 4\\r\\n2 7 3\\r\\n1 5 0\\r\\n1 4 6\\r\\n1 1 5\\r\\n1 7 8\\r\\n2 7 5\\r\\n1 0 4\\r\\n2 3 8\\r\\n1 1 8\\r\\n1 0 5\\r\\n1 4 8\\r\\n2 8 5\\r\\n1 8 5\\r\\n2 3 6\\r\\n1 8 7\\r\\n2 4 3\\r\\n1 5 2\\r\\n2 2 8\\r\\n2 5 3\\r\\n2 4 0\\r\\n1 4 4\\r\\n1 6 5\\r\\n2 2 7\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n, q;\nstruct node {\n  long long x, y;\n} s[222222];\nlong long ch(node a, node b, node c) {\n  return b.x - a.x * (b.y - c.y) + a.y * (b.x - c.x) < 0;\n}\nsigned main() {\n  long long i, t;\n  node a, b, c;\n  cin >> n;\n  t = 1;\n  for (i = 1; i <= n; i++)\n    if (t) {\n      cin >> t >> a.x >> a.y;\n      s[t - 1] = a;\n      if (i >= 3)\n        if (ch(s[i - 2], s[i - 1], a)) b = s[i - 1], c = a, a = b;\n    } else\n      cin >> b.x >> b.y, cout << (ch(s[1], s[2], b)? \"YES\" : \"NO\") << endl;\n  return 0;\n}\n"}
{"src_uid": "6220f4058f9325dfb211fb1dd86e9464", "id": 60, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2700, "testcases": "[{'input': '8\\r\\n1 0 0\\r\\n1 2 0\\r\\n1 2 2\\r\\n2 1 0\\r\\n1 0 2\\r\\n2 1 1\\r\\n2 2 1\\r\\n2 20 -1\\r\\n', 'output': ['YES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 0 0\\r\\n1 5 0\\r\\n1 0 5\\r\\n2 1 1\\r\\n2 10 10\\r\\n1 2 10\\r\\n2 1 1\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '5\\r\\n1 2 -2\\r\\n1 -2 2\\r\\n1 1 5\\r\\n2 3 -1\\r\\n2 3 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\n']}, {'input': '5\\r\\n1 -1 0\\r\\n1 1 0\\r\\n1 0 2\\r\\n2 0 1\\r\\n2 0 3\\r\\n', 'output': ['YES\\r\\nNO\\r\\n']}, {'input': '6\\r\\n1 -2 0\\r\\n1 2 0\\r\\n1 0 2\\r\\n2 4 0\\r\\n2 1 0\\r\\n2 2 0\\r\\n', 'output': ['NO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '11\\r\\n1 0 -1\\r\\n1 0 1\\r\\n1 1 -1\\r\\n1 -1 -5\\r\\n1 0 5\\r\\n2 5 1\\r\\n2 5 0\\r\\n2 5 -1\\r\\n2 0 0\\r\\n2 0 10\\r\\n2 0 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -37 889\\r\\n1 771 -764\\r\\n1 -119 938\\r\\n1 599 868\\r\\n1 56 161\\r\\n1 -67 86\\r\\n2 -692 99\\r\\n2 -995 158\\r\\n2 410 116\\r\\n1 -49 -864\\r\\n2 30 -580\\r\\n1 -930 454\\r\\n1 -706 301\\r\\n2 547 -606\\r\\n2 -252 -55\\r\\n2 662 152\\r\\n2 -621 -920\\r\\n1 -128 -595\\r\\n1 -401 -265\\r\\n1 434 388\\r\\n2 299 173\\r\\n1 104 -298\\r\\n1 -693 557\\r\\n2 840 -179\\r\\n2 382 -8\\r\\n1 461 618\\r\\n1 -928 628\\r\\n2 193 -972\\r\\n2 218 945\\r\\n2 490 571\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -619 -234\\r\\n1 -140 -846\\r\\n1 762 -792\\r\\n2 153 29\\r\\n1 -353 627\\r\\n2 -544 -418\\r\\n2 -922 -965\\r\\n1 -620 -692\\r\\n1 -34 295\\r\\n2 -326 -604\\r\\n2 -906 -867\\r\\n2 57 -690\\r\\n1 -87 -822\\r\\n2 -569 739\\r\\n2 -92 -927\\r\\n2 279 806\\r\\n1 -364 19\\r\\n2 -214 -629\\r\\n2 -283 662\\r\\n2 -324 650\\r\\n1 92 -511\\r\\n2 654 -597\\r\\n1 -87 747\\r\\n2 795 46\\r\\n2 870 -157\\r\\n2 -11 520\\r\\n1 -162 -686\\r\\n2 290 -660\\r\\n2 -660 780\\r\\n2 946 910\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '30\\r\\n1 -702 -823\\r\\n1 -330 -896\\r\\n1 -564 90\\r\\n1 559 818\\r\\n2 404 716\\r\\n1 -900 -379\\r\\n2 866 -218\\r\\n2 444 615\\r\\n2 -782 -887\\r\\n2 584 -919\\r\\n2 891 775\\r\\n1 117 887\\r\\n2 598 162\\r\\n2 759 -925\\r\\n2 713 -507\\r\\n1 -329 120\\r\\n2 546 185\\r\\n2 399 500\\r\\n1 -611 763\\r\\n1 -956 187\\r\\n2 82 -26\\r\\n2 -877 -906\\r\\n1 293 -637\\r\\n2 -685 -275\\r\\n2 -725 -927\\r\\n1 -627 777\\r\\n1 -609 -563\\r\\n2 402 54\\r\\n1 -106 -908\\r\\n2 175 808\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -64 -994\\r\\n1 -692 366\\r\\n1 -72 847\\r\\n2 -963 -251\\r\\n1 -651 -994\\r\\n1 -523 -861\\r\\n2 553 -129\\r\\n2 17 785\\r\\n2 -584 -880\\r\\n1 105 657\\r\\n1 649 98\\r\\n2 -572 -492\\r\\n1 -38 -481\\r\\n1 540 463\\r\\n1 -468 -540\\r\\n1 -730 100\\r\\n1 606 -119\\r\\n1 -254 -380\\r\\n1 169 280\\r\\n1 319 62\\r\\n1 452 -556\\r\\n1 -653 887\\r\\n1 407 -786\\r\\n2 -632 181\\r\\n1 925 -967\\r\\n2 996 -709\\r\\n1 568 517\\r\\n2 -478 76\\r\\n1 156 621\\r\\n2 -592 899\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '30\\r\\n1 836 -283\\r\\n1 299 629\\r\\n1 434 -481\\r\\n1 -500 -368\\r\\n2 -105 -216\\r\\n2 -617 443\\r\\n2 -579 811\\r\\n1 411 -242\\r\\n1 -652 41\\r\\n1 962 -483\\r\\n1 -732 579\\r\\n2 554 -147\\r\\n1 39 967\\r\\n1 917 -199\\r\\n2 686 397\\r\\n1 444 780\\r\\n1 278 462\\r\\n1 729 -18\\r\\n1 252 -864\\r\\n1 884 -952\\r\\n1 272 689\\r\\n2 366 -389\\r\\n1 443 924\\r\\n1 791 -249\\r\\n2 692 74\\r\\n2 -412 550\\r\\n2 506 -472\\r\\n2 -626 474\\r\\n1 -895 -42\\r\\n2 -390 -971\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '12\\r\\n1 0 0\\r\\n1 10 0\\r\\n1 8 1\\r\\n2 11 0\\r\\n1 2 0\\r\\n2 7 0\\r\\n2 9 0\\r\\n2 1 0\\r\\n1 1 1\\r\\n2 10 0\\r\\n2 9 0\\r\\n2 11 0\\r\\n', 'output': ['NO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 5000 5000\\r\\n2 3 0\\r\\n2 2 0\\r\\n2 4 0\\r\\n2 -1 0\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '4\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 2 2\\r\\n2 4 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 0 8\\r\\n2 4 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '11\\r\\n1 0 -1\\r\\n1 0 1\\r\\n1 -1 -5\\r\\n1 6 4\\r\\n1 -8 8\\r\\n2 6 -1\\r\\n2 6 1\\r\\n2 1 0\\r\\n2 1 -1\\r\\n2 1 1\\r\\n2 6 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '11\\r\\n1 5 4\\r\\n1 5 6\\r\\n1 4 0\\r\\n1 11 9\\r\\n1 -3 13\\r\\n2 11 4\\r\\n2 11 6\\r\\n2 6 5\\r\\n2 6 4\\r\\n2 6 6\\r\\n2 11 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -2 -1000000\\r\\n1 -1 -1000000\\r\\n1 -1 -999999\\r\\n1 1 1000000\\r\\n1 -231100 1000000\\r\\n2 0 0\\r\\n2 1 999999\\r\\n', 'output': ['YES\\r\\nNO\\r\\n']}, {'input': '10\\r\\n1 -1000000 -1000000\\r\\n1 -999999 -1000000\\r\\n1 999999 1000000\\r\\n1 1000000 1000000\\r\\n2 0 0\\r\\n2 1000000 999999\\r\\n2 999999 1000000\\r\\n2 999999 999999\\r\\n2 999999 999998\\r\\n2 999999 999997\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '9\\r\\n1 -2 -4\\r\\n1 2 4\\r\\n1 -3 3\\r\\n2 -1 -2\\r\\n2 -4 -8\\r\\n2 -3 -6\\r\\n2 1 2\\r\\n2 4 8\\r\\n2 3 6\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '16\\r\\n1 -10000 0\\r\\n1 10000 0\\r\\n1 0 -1\\r\\n2 50000 0\\r\\n2 -50000 0\\r\\n2 49000 0\\r\\n2 -49000 0\\r\\n2 27000 0\\r\\n2 -27000 0\\r\\n1 0 1\\r\\n2 50000 0\\r\\n2 -50000 0\\r\\n2 49000 0\\r\\n2 -49000 0\\r\\n2 27000 0\\r\\n2 -27000 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -7000 -9000\\r\\n1 7000 9000\\r\\n1 7000 -7000\\r\\n2 21 27\\r\\n2 -21 -27\\r\\n2 7007 9009\\r\\n2 -7007 -9009\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -7000 -9000\\r\\n1 7000 9000\\r\\n1 -7000 7000\\r\\n2 21 27\\r\\n2 -21 -27\\r\\n2 7007 9009\\r\\n2 -7007 -9009\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -9000 7000\\r\\n1 9000 -7000\\r\\n1 7000 7000\\r\\n2 -27 21\\r\\n2 27 -21\\r\\n2 -9009 7007\\r\\n2 9009 -7007\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -9000 7000\\r\\n1 9000 -7000\\r\\n1 -7000 -7000\\r\\n2 -27 21\\r\\n2 27 -21\\r\\n2 -9009 7007\\r\\n2 9009 -7007\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 7 6\\r\\n1 0 5\\r\\n1 0 4\\r\\n1 2 5\\r\\n1 8 0\\r\\n1 6 4\\r\\n1 1 1\\r\\n1 8 4\\r\\n2 1 1\\r\\n2 2 7\\r\\n1 2 3\\r\\n1 4 2\\r\\n2 4 3\\r\\n1 3 2\\r\\n1 7 2\\r\\n1 1 0\\r\\n2 3 5\\r\\n1 6 5\\r\\n2 5 7\\r\\n2 1 1\\r\\n2 3 2\\r\\n1 6 2\\r\\n2 6 0\\r\\n2 8 8\\r\\n1 4 6\\r\\n1 3 5\\r\\n2 3 8\\r\\n2 0 5\\r\\n2 1 6\\r\\n1 8 3\\r\\n1 2 2\\r\\n1 8 2\\r\\n1 6 8\\r\\n1 1 3\\r\\n1 3 3\\r\\n1 5 5\\r\\n2 2 0\\r\\n2 6 7\\r\\n2 1 6\\r\\n2 6 4\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 8\\r\\n1 6 7\\r\\n1 7 7\\r\\n2 5 5\\r\\n1 4 0\\r\\n1 0 0\\r\\n2 7 3\\r\\n1 0 2\\r\\n2 8 2\\r\\n2 5 1\\r\\n2 1 2\\r\\n2 1 5\\r\\n1 1 3\\r\\n1 7 1\\r\\n1 8 7\\r\\n1 2 4\\r\\n1 2 8\\r\\n2 8 5\\r\\n2 8 6\\r\\n1 2 1\\r\\n1 5 6\\r\\n1 2 3\\r\\n2 4 3\\r\\n1 8 3\\r\\n1 1 5\\r\\n2 2 2\\r\\n2 8 5\\r\\n1 0 7\\r\\n1 7 2\\r\\n1 5 5\\r\\n1 8 4\\r\\n1 4 1\\r\\n2 3 2\\r\\n2 6 0\\r\\n2 8 7\\r\\n2 5 7\\r\\n1 3 0\\r\\n2 1 0\\r\\n2 0 7\\r\\n2 5 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 8\\r\\n1 3 8\\r\\n1 7 4\\r\\n1 4 5\\r\\n1 4 1\\r\\n2 6 6\\r\\n2 5 8\\r\\n1 5 4\\r\\n1 7 8\\r\\n2 1 3\\r\\n2 6 1\\r\\n2 8 2\\r\\n2 6 8\\r\\n1 4 3\\r\\n2 2 8\\r\\n2 0 6\\r\\n1 0 3\\r\\n2 0 3\\r\\n1 6 6\\r\\n1 5 8\\r\\n1 5 5\\r\\n1 1 2\\r\\n2 6 7\\r\\n1 4 8\\r\\n2 1 2\\r\\n2 2 7\\r\\n2 2 3\\r\\n1 8 4\\r\\n2 8 4\\r\\n2 6 5\\r\\n1 8 2\\r\\n2 7 2\\r\\n2 3 5\\r\\n1 4 0\\r\\n2 6 2\\r\\n2 3 7\\r\\n1 4 6\\r\\n1 8 6\\r\\n1 0 5\\r\\n2 2 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 4 0\\r\\n1 7 1\\r\\n1 8 0\\r\\n1 1 2\\r\\n1 1 8\\r\\n1 6 1\\r\\n2 5 2\\r\\n1 7 7\\r\\n1 6 5\\r\\n2 8 1\\r\\n2 8 7\\r\\n1 7 8\\r\\n2 3 5\\r\\n2 6 6\\r\\n1 4 2\\r\\n1 8 3\\r\\n2 6 8\\r\\n1 4 8\\r\\n2 4 6\\r\\n2 1 7\\r\\n1 4 3\\r\\n2 0 8\\r\\n1 5 2\\r\\n2 5 5\\r\\n2 1 6\\r\\n1 5 5\\r\\n1 1 5\\r\\n2 3 3\\r\\n2 0 1\\r\\n1 1 0\\r\\n2 1 4\\r\\n2 3 6\\r\\n1 4 6\\r\\n2 7 6\\r\\n1 4 4\\r\\n1 7 6\\r\\n1 6 8\\r\\n2 1 1\\r\\n1 0 1\\r\\n2 0 2\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 3 0\\r\\n1 1 4\\r\\n1 2 7\\r\\n2 4 0\\r\\n1 0 5\\r\\n1 7 5\\r\\n2 6 3\\r\\n1 0 7\\r\\n2 5 7\\r\\n1 1 0\\r\\n2 0 6\\r\\n1 6 8\\r\\n1 3 5\\r\\n1 8 5\\r\\n1 0 6\\r\\n2 7 0\\r\\n1 4 6\\r\\n1 5 2\\r\\n2 6 2\\r\\n1 7 0\\r\\n2 6 3\\r\\n1 3 7\\r\\n2 4 2\\r\\n2 1 4\\r\\n1 1 3\\r\\n1 5 0\\r\\n2 0 7\\r\\n2 6 8\\r\\n1 4 0\\r\\n2 5 0\\r\\n2 3 2\\r\\n2 6 7\\r\\n1 7 2\\r\\n1 0 3\\r\\n1 6 6\\r\\n2 4 0\\r\\n2 2 4\\r\\n1 6 5\\r\\n2 0 8\\r\\n2 0 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 0 3\\r\\n1 6 0\\r\\n1 8 7\\r\\n2 2 6\\r\\n2 7 2\\r\\n2 7 5\\r\\n1 4 7\\r\\n1 2 3\\r\\n2 2 7\\r\\n2 3 1\\r\\n1 3 5\\r\\n1 8 5\\r\\n2 6 8\\r\\n1 2 8\\r\\n2 4 6\\r\\n1 7 3\\r\\n1 3 3\\r\\n2 2 4\\r\\n1 5 0\\r\\n1 5 6\\r\\n1 1 7\\r\\n2 3 3\\r\\n1 8 6\\r\\n2 7 4\\r\\n1 7 8\\r\\n1 5 8\\r\\n2 3 8\\r\\n1 6 6\\r\\n2 8 5\\r\\n1 5 1\\r\\n2 4 2\\r\\n1 7 7\\r\\n2 4 8\\r\\n1 6 1\\r\\n1 1 5\\r\\n2 1 8\\r\\n2 4 3\\r\\n1 5 5\\r\\n1 4 0\\r\\n2 0 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 5 2\\r\\n1 5 6\\r\\n1 2 1\\r\\n2 7 2\\r\\n2 6 2\\r\\n2 0 8\\r\\n2 0 6\\r\\n1 6 8\\r\\n1 2 0\\r\\n1 0 5\\r\\n2 3 0\\r\\n1 3 8\\r\\n2 8 6\\r\\n1 0 3\\r\\n1 8 8\\r\\n2 1 1\\r\\n1 1 4\\r\\n1 1 3\\r\\n2 0 0\\r\\n2 5 6\\r\\n1 0 0\\r\\n2 0 0\\r\\n1 2 7\\r\\n2 0 0\\r\\n2 3 6\\r\\n1 3 3\\r\\n1 3 2\\r\\n1 5 3\\r\\n1 7 8\\r\\n1 7 4\\r\\n1 8 7\\r\\n1 7 3\\r\\n2 0 3\\r\\n1 4 4\\r\\n2 5 0\\r\\n1 6 6\\r\\n1 8 0\\r\\n2 6 2\\r\\n2 4 8\\r\\n2 7 2\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 4\\r\\n1 1 5\\r\\n1 3 5\\r\\n2 8 2\\r\\n2 5 2\\r\\n1 7 3\\r\\n1 8 1\\r\\n2 6 5\\r\\n1 4 3\\r\\n1 2 4\\r\\n1 2 3\\r\\n2 8 3\\r\\n2 3 5\\r\\n2 2 0\\r\\n1 6 7\\r\\n2 2 8\\r\\n1 3 0\\r\\n2 5 1\\r\\n2 2 1\\r\\n1 4 5\\r\\n2 1 6\\r\\n1 8 5\\r\\n2 7 4\\r\\n2 2 0\\r\\n1 3 2\\r\\n1 2 2\\r\\n1 8 3\\r\\n2 3 4\\r\\n1 7 6\\r\\n1 3 7\\r\\n1 5 3\\r\\n1 2 0\\r\\n2 5 7\\r\\n2 0 7\\r\\n2 3 2\\r\\n2 1 0\\r\\n1 6 0\\r\\n2 8 5\\r\\n1 3 4\\r\\n2 0 3\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 8 7\\r\\n1 0 6\\r\\n1 5 0\\r\\n2 6 7\\r\\n2 6 8\\r\\n1 3 5\\r\\n1 6 7\\r\\n1 0 0\\r\\n2 1 7\\r\\n1 2 3\\r\\n2 4 3\\r\\n2 5 5\\r\\n1 4 7\\r\\n2 2 0\\r\\n1 2 4\\r\\n1 4 2\\r\\n1 0 8\\r\\n2 0 3\\r\\n1 8 8\\r\\n2 8 1\\r\\n2 8 6\\r\\n2 4 8\\r\\n1 4 0\\r\\n1 6 6\\r\\n2 0 0\\r\\n1 6 2\\r\\n2 5 1\\r\\n1 3 0\\r\\n1 5 6\\r\\n1 8 1\\r\\n1 3 4\\r\\n1 1 3\\r\\n1 5 1\\r\\n1 5 7\\r\\n1 6 8\\r\\n1 1 5\\r\\n1 1 1\\r\\n1 6 1\\r\\n1 1 4\\r\\n2 7 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 8\\r\\n1 4 0\\r\\n1 0 6\\r\\n2 3 8\\r\\n2 4 5\\r\\n1 5 0\\r\\n2 7 6\\r\\n2 6 1\\r\\n2 1 7\\r\\n1 1 2\\r\\n1 5 4\\r\\n1 7 3\\r\\n2 6 4\\r\\n1 3 0\\r\\n2 2 8\\r\\n1 8 2\\r\\n1 8 8\\r\\n1 7 8\\r\\n2 2 5\\r\\n2 2 3\\r\\n2 4 6\\r\\n2 0 2\\r\\n2 6 7\\r\\n2 2 8\\r\\n1 8 3\\r\\n2 5 5\\r\\n1 4 8\\r\\n1 7 1\\r\\n2 7 3\\r\\n2 4 5\\r\\n2 1 1\\r\\n2 4 2\\r\\n1 1 1\\r\\n2 4 0\\r\\n1 2 4\\r\\n2 7 0\\r\\n1 4 1\\r\\n1 7 5\\r\\n1 6 6\\r\\n2 7 8\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 6 3\\r\\n1 5 3\\r\\n1 3 4\\r\\n1 2 3\\r\\n2 2 5\\r\\n1 6 1\\r\\n2 3 7\\r\\n1 0 0\\r\\n1 8 7\\r\\n1 3 8\\r\\n1 0 8\\r\\n1 3 5\\r\\n1 4 5\\r\\n1 0 5\\r\\n2 8 1\\r\\n2 4 7\\r\\n2 3 2\\r\\n1 6 4\\r\\n2 2 3\\r\\n2 6 3\\r\\n1 0 2\\r\\n2 1 2\\r\\n2 6 2\\r\\n1 5 7\\r\\n2 7 0\\r\\n1 4 8\\r\\n1 4 6\\r\\n2 8 7\\r\\n2 0 7\\r\\n1 7 8\\r\\n2 0 3\\r\\n1 5 5\\r\\n1 6 2\\r\\n2 4 5\\r\\n1 2 5\\r\\n2 3 3\\r\\n2 1 1\\r\\n1 8 3\\r\\n1 6 5\\r\\n2 5 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 6 5\\r\\n1 4 8\\r\\n1 5 7\\r\\n1 3 1\\r\\n2 4 2\\r\\n1 4 3\\r\\n1 0 7\\r\\n2 4 6\\r\\n2 4 2\\r\\n1 0 3\\r\\n2 1 5\\r\\n2 5 6\\r\\n1 8 8\\r\\n1 1 7\\r\\n1 3 3\\r\\n2 6 7\\r\\n1 7 4\\r\\n1 0 2\\r\\n1 8 4\\r\\n2 4 5\\r\\n2 0 7\\r\\n1 4 1\\r\\n1 4 4\\r\\n1 5 3\\r\\n1 1 0\\r\\n1 4 5\\r\\n2 1 4\\r\\n1 0 6\\r\\n2 1 0\\r\\n1 5 5\\r\\n2 5 6\\r\\n2 8 2\\r\\n2 1 7\\r\\n2 8 1\\r\\n2 0 5\\r\\n1 0 4\\r\\n1 6 6\\r\\n2 1 1\\r\\n1 8 0\\r\\n2 6 3\\r\\n', 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 7\\r\\n1 3 3\\r\\n1 6 5\\r\\n1 7 3\\r\\n1 2 8\\r\\n1 3 0\\r\\n2 0 0\\r\\n1 7 7\\r\\n2 6 8\\r\\n2 6 0\\r\\n2 4 7\\r\\n1 7 8\\r\\n2 0 7\\r\\n2 0 5\\r\\n1 6 2\\r\\n1 7 1\\r\\n1 1 1\\r\\n2 4 8\\r\\n2 2 1\\r\\n2 7 0\\r\\n2 5 4\\r\\n1 2 4\\r\\n2 1 3\\r\\n2 0 5\\r\\n2 5 5\\r\\n2 1 4\\r\\n2 5 5\\r\\n1 2 6\\r\\n1 4 4\\r\\n2 0 8\\r\\n1 0 6\\r\\n2 0 5\\r\\n2 4 6\\r\\n2 8 1\\r\\n2 2 0\\r\\n2 3 3\\r\\n1 0 4\\r\\n1 3 7\\r\\n2 3 2\\r\\n2 3 7\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 7\\r\\n1 6 5\\r\\n1 2 0\\r\\n2 4 5\\r\\n1 1 0\\r\\n2 3 4\\r\\n1 7 3\\r\\n2 8 1\\r\\n2 0 0\\r\\n2 2 0\\r\\n1 7 4\\r\\n1 6 3\\r\\n2 8 1\\r\\n2 6 0\\r\\n1 4 7\\r\\n2 4 2\\r\\n1 4 5\\r\\n2 3 7\\r\\n2 6 8\\r\\n2 2 6\\r\\n2 7 4\\r\\n1 0 6\\r\\n2 1 7\\r\\n1 4 4\\r\\n2 2 3\\r\\n1 1 3\\r\\n1 8 5\\r\\n1 0 5\\r\\n1 1 1\\r\\n1 4 3\\r\\n2 5 3\\r\\n1 3 6\\r\\n1 7 0\\r\\n2 5 6\\r\\n2 5 6\\r\\n1 0 7\\r\\n2 7 0\\r\\n2 6 4\\r\\n1 3 7\\r\\n2 2 2\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 4 4\\r\\n1 2 6\\r\\n1 8 2\\r\\n2 4 6\\r\\n1 5 4\\r\\n2 5 8\\r\\n2 6 7\\r\\n2 4 8\\r\\n1 1 0\\r\\n1 3 1\\r\\n1 0 3\\r\\n1 8 1\\r\\n1 3 0\\r\\n2 7 4\\r\\n1 2 0\\r\\n1 8 5\\r\\n1 6 2\\r\\n2 2 0\\r\\n1 0 4\\r\\n1 1 1\\r\\n1 4 5\\r\\n2 8 3\\r\\n2 1 0\\r\\n2 5 5\\r\\n1 3 4\\r\\n2 0 7\\r\\n1 4 3\\r\\n1 7 0\\r\\n2 3 8\\r\\n1 0 1\\r\\n1 0 7\\r\\n2 4 1\\r\\n1 0 6\\r\\n2 1 2\\r\\n1 5 7\\r\\n2 7 2\\r\\n2 7 3\\r\\n1 3 6\\r\\n2 7 3\\r\\n2 7 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 0 8\\r\\n1 3 5\\r\\n1 0 2\\r\\n1 8 0\\r\\n1 5 3\\r\\n1 5 2\\r\\n2 8 2\\r\\n2 7 6\\r\\n1 6 1\\r\\n2 2 7\\r\\n2 6 5\\r\\n1 3 7\\r\\n2 7 8\\r\\n1 2 4\\r\\n1 4 2\\r\\n2 5 7\\r\\n2 0 6\\r\\n1 3 1\\r\\n2 2 3\\r\\n1 5 7\\r\\n2 2 8\\r\\n1 7 1\\r\\n1 3 0\\r\\n2 5 5\\r\\n1 7 4\\r\\n2 5 5\\r\\n1 2 0\\r\\n2 4 3\\r\\n2 8 1\\r\\n2 8 0\\r\\n1 2 6\\r\\n1 7 5\\r\\n2 4 8\\r\\n1 2 3\\r\\n2 6 6\\r\\n1 7 8\\r\\n2 7 5\\r\\n2 7 4\\r\\n1 8 1\\r\\n2 5 6\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 3\\r\\n1 7 2\\r\\n1 6 2\\r\\n2 0 8\\r\\n2 3 8\\r\\n2 0 3\\r\\n1 5 8\\r\\n2 7 1\\r\\n1 8 1\\r\\n2 8 7\\r\\n1 5 5\\r\\n2 2 4\\r\\n2 3 3\\r\\n2 2 4\\r\\n1 0 1\\r\\n1 2 0\\r\\n1 7 4\\r\\n2 7 4\\r\\n2 5 5\\r\\n1 1 1\\r\\n2 6 4\\r\\n2 1 7\\r\\n2 5 0\\r\\n1 8 0\\r\\n2 6 2\\r\\n1 7 1\\r\\n2 8 6\\r\\n1 8 7\\r\\n2 2 5\\r\\n1 7 3\\r\\n1 5 6\\r\\n1 4 0\\r\\n2 3 8\\r\\n2 8 6\\r\\n1 7 0\\r\\n2 3 5\\r\\n2 6 1\\r\\n1 2 6\\r\\n1 1 2\\r\\n2 7 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 4 4\\r\\n1 2 6\\r\\n1 7 2\\r\\n2 1 4\\r\\n2 0 2\\r\\n1 5 4\\r\\n2 5 1\\r\\n1 0 8\\r\\n1 1 7\\r\\n2 2 0\\r\\n1 8 4\\r\\n2 6 5\\r\\n2 8 0\\r\\n1 6 5\\r\\n2 8 7\\r\\n2 0 0\\r\\n2 4 0\\r\\n2 7 2\\r\\n2 6 8\\r\\n1 7 8\\r\\n2 8 8\\r\\n2 4 7\\r\\n1 7 1\\r\\n2 8 8\\r\\n1 5 8\\r\\n1 3 6\\r\\n1 4 6\\r\\n1 3 5\\r\\n2 6 1\\r\\n2 1 3\\r\\n2 8 4\\r\\n2 8 5\\r\\n2 1 3\\r\\n2 7 1\\r\\n2 5 8\\r\\n1 8 2\\r\\n2 6 1\\r\\n1 7 4\\r\\n1 8 5\\r\\n2 6 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 1\\r\\n1 4 7\\r\\n1 1 1\\r\\n1 2 4\\r\\n2 4 4\\r\\n1 4 4\\r\\n2 0 6\\r\\n2 7 6\\r\\n1 4 0\\r\\n2 6 5\\r\\n2 5 2\\r\\n1 6 1\\r\\n2 7 0\\r\\n1 6 2\\r\\n2 3 2\\r\\n1 0 6\\r\\n2 7 0\\r\\n1 8 6\\r\\n2 1 3\\r\\n2 0 1\\r\\n1 2 5\\r\\n1 0 2\\r\\n2 4 2\\r\\n2 6 8\\r\\n2 2 0\\r\\n2 5 7\\r\\n2 6 0\\r\\n1 2 2\\r\\n2 0 3\\r\\n1 7 4\\r\\n2 7 3\\r\\n1 4 1\\r\\n2 2 6\\r\\n2 8 2\\r\\n1 8 3\\r\\n1 8 7\\r\\n1 0 3\\r\\n1 7 0\\r\\n2 2 1\\r\\n2 6 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 7\\r\\n1 5 8\\r\\n1 4 4\\r\\n1 8 1\\r\\n1 4 6\\r\\n1 6 6\\r\\n2 5 0\\r\\n2 3 4\\r\\n1 5 3\\r\\n2 0 7\\r\\n2 3 1\\r\\n1 5 4\\r\\n1 3 4\\r\\n2 3 4\\r\\n2 8 2\\r\\n1 0 1\\r\\n1 0 8\\r\\n2 3 8\\r\\n1 0 4\\r\\n2 4 6\\r\\n1 7 3\\r\\n2 4 0\\r\\n1 2 3\\r\\n2 8 1\\r\\n2 8 4\\r\\n1 7 0\\r\\n2 2 6\\r\\n2 2 2\\r\\n1 2 2\\r\\n1 6 5\\r\\n1 7 1\\r\\n2 5 1\\r\\n1 2 4\\r\\n2 3 2\\r\\n1 8 4\\r\\n1 7 4\\r\\n1 1 2\\r\\n1 3 2\\r\\n2 7 3\\r\\n2 4 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 0\\r\\n1 0 7\\r\\n1 8 4\\r\\n2 1 6\\r\\n2 1 2\\r\\n1 0 0\\r\\n1 1 1\\r\\n2 5 2\\r\\n1 8 5\\r\\n1 0 6\\r\\n2 6 8\\r\\n1 4 2\\r\\n1 8 3\\r\\n2 2 3\\r\\n1 6 3\\r\\n2 6 0\\r\\n1 5 3\\r\\n2 0 5\\r\\n1 3 4\\r\\n2 4 4\\r\\n1 8 6\\r\\n1 1 2\\r\\n1 5 7\\r\\n1 5 1\\r\\n1 3 8\\r\\n2 7 0\\r\\n1 7 2\\r\\n1 3 3\\r\\n2 6 5\\r\\n2 5 0\\r\\n2 2 4\\r\\n2 5 5\\r\\n2 4 6\\r\\n1 6 1\\r\\n1 5 2\\r\\n2 7 5\\r\\n1 8 7\\r\\n1 1 6\\r\\n1 4 8\\r\\n2 8 5\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 8 1\\r\\n1 8 6\\r\\n1 1 1\\r\\n2 5 4\\r\\n2 7 8\\r\\n1 6 2\\r\\n1 7 4\\r\\n1 4 4\\r\\n2 3 7\\r\\n1 6 3\\r\\n2 0 1\\r\\n1 8 0\\r\\n2 0 3\\r\\n1 6 0\\r\\n1 3 4\\r\\n1 1 8\\r\\n1 3 3\\r\\n2 3 1\\r\\n2 4 0\\r\\n1 4 3\\r\\n2 1 3\\r\\n2 5 4\\r\\n1 8 5\\r\\n2 1 0\\r\\n1 4 7\\r\\n2 5 3\\r\\n2 4 1\\r\\n1 4 0\\r\\n1 6 8\\r\\n1 5 1\\r\\n2 8 3\\r\\n2 5 7\\r\\n1 3 2\\r\\n1 7 5\\r\\n1 7 3\\r\\n1 0 8\\r\\n1 7 8\\r\\n2 7 3\\r\\n2 6 7\\r\\n2 4 2\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '50\\r\\n1 58 -49\\r\\n1 -77 -90\\r\\n1 32 -52\\r\\n1 -89 -31\\r\\n1 99 -34\\r\\n1 -3 -59\\r\\n2 65 93\\r\\n2 67 -51\\r\\n2 25 -47\\r\\n1 -72 86\\r\\n2 48 -45\\r\\n2 64 -70\\r\\n2 -96 -43\\r\\n2 87 -58\\r\\n2 3 21\\r\\n2 39 -57\\r\\n1 -58 49\\r\\n2 -1 87\\r\\n2 -63 19\\r\\n2 -27 90\\r\\n2 31 3\\r\\n1 55 41\\r\\n1 90 39\\r\\n1 -53 28\\r\\n2 49 -51\\r\\n2 6 42\\r\\n1 50 15\\r\\n2 21 -2\\r\\n2 -6 70\\r\\n1 -13 -61\\r\\n2 -60 -69\\r\\n1 -22 33\\r\\n1 -22 17\\r\\n2 30 -98\\r\\n2 -56 -48\\r\\n2 -84 -77\\r\\n2 49 56\\r\\n1 81 29\\r\\n1 26 29\\r\\n1 -14 20\\r\\n2 -37 83\\r\\n1 -91 96\\r\\n2 57 19\\r\\n1 94 54\\r\\n2 25 -30\\r\\n1 92 5\\r\\n2 -48 51\\r\\n2 81 23\\r\\n1 39 -47\\r\\n2 34 89\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '50\\r\\n1 7 -8\\r\\n1 -30 -28\\r\\n1 -8 2\\r\\n1 -28 -29\\r\\n2 -8 -21\\r\\n2 -23 19\\r\\n2 -23 18\\r\\n1 6 27\\r\\n2 -17 20\\r\\n1 9 -5\\r\\n2 -27 29\\r\\n1 -8 27\\r\\n2 13 12\\r\\n2 -29 13\\r\\n2 -30 8\\r\\n2 -30 -8\\r\\n1 -24 -21\\r\\n1 -14 -15\\r\\n2 -23 14\\r\\n2 -12 -13\\r\\n1 15 -24\\r\\n1 28 6\\r\\n2 -20 -21\\r\\n1 -8 -13\\r\\n1 -15 -15\\r\\n1 11 20\\r\\n2 24 -26\\r\\n1 -30 -11\\r\\n2 -17 18\\r\\n1 -17 6\\r\\n2 5 -9\\r\\n2 -29 8\\r\\n2 -29 1\\r\\n2 10 24\\r\\n2 29 27\\r\\n2 -12 21\\r\\n2 5 -28\\r\\n2 28 27\\r\\n2 -4 -4\\r\\n1 -24 29\\r\\n1 17 -1\\r\\n1 0 17\\r\\n1 -2 -1\\r\\n2 -7 -10\\r\\n1 5 -16\\r\\n2 -3 -26\\r\\n2 -7 17\\r\\n1 -27 -26\\r\\n1 -3 -30\\r\\n2 28 -15\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '10\\r\\n1 0 0\\r\\n1 6 0\\r\\n1 0 6\\r\\n2 0 0\\r\\n2 6 0\\r\\n2 0 6\\r\\n2 3 3\\r\\n2 3 0\\r\\n2 0 3\\r\\n2 2 2\\r\\n', 'output': ['YES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '50\\r\\n1 33 -21\\r\\n1 9 82\\r\\n1 -69 -54\\r\\n2 -3 84\\r\\n1 -9 -28\\r\\n2 -54 87\\r\\n2 26 -64\\r\\n2 8 52\\r\\n2 98 63\\r\\n2 -77 10\\r\\n2 -52 -46\\r\\n1 92 42\\r\\n2 -53 -69\\r\\n2 -48 44\\r\\n1 -52 90\\r\\n2 56 29\\r\\n2 -100 -13\\r\\n2 -23 1\\r\\n2 6 91\\r\\n2 53 -38\\r\\n1 48 -35\\r\\n2 19 -62\\r\\n2 -62 49\\r\\n1 59 78\\r\\n2 85 72\\r\\n2 28 76\\r\\n2 46 -91\\r\\n2 6 32\\r\\n2 -16 -59\\r\\n1 40 -53\\r\\n2 -6 87\\r\\n2 -79 -58\\r\\n2 -12 25\\r\\n2 73 49\\r\\n1 57 -42\\r\\n2 12 19\\r\\n1 -60 -5\\r\\n1 -40 -20\\r\\n1 90 35\\r\\n2 10 3\\r\\n2 63 -49\\r\\n1 50 10\\r\\n1 0 77\\r\\n1 92 24\\r\\n1 71 -7\\r\\n2 46 22\\r\\n1 19 81\\r\\n1 -3 -71\\r\\n2 -44 56\\r\\n2 92 34\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 3\\r\\n1 3 1\\r\\n1 0 1\\r\\n2 3 0\\r\\n2 6 5\\r\\n2 1 5\\r\\n2 8 3\\r\\n2 0 5\\r\\n2 3 4\\r\\n1 7 6\\r\\n1 1 0\\r\\n1 0 8\\r\\n1 3 7\\r\\n2 4 5\\r\\n2 2 5\\r\\n2 2 0\\r\\n1 7 4\\r\\n2 7 3\\r\\n1 5 0\\r\\n1 4 6\\r\\n1 1 5\\r\\n1 7 8\\r\\n2 7 5\\r\\n1 0 4\\r\\n2 3 8\\r\\n1 1 8\\r\\n1 0 5\\r\\n1 4 8\\r\\n2 8 5\\r\\n1 8 5\\r\\n2 3 6\\r\\n1 8 7\\r\\n2 4 3\\r\\n1 5 2\\r\\n2 2 8\\r\\n2 5 3\\r\\n2 4 0\\r\\n1 4 4\\r\\n1 6 5\\r\\n2 2 7\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nconst double INF = 1e14;\nstruct Point {\n  double x, y;\n  Point operator-(const Point& b) const {\n    Point ans;\n    ans.x = x - b.x;\n    ans.y = y - b.y;\n    return ans;\n  }\n  double cross(const Point& b) const { return x * b.y - y * b.x; }\n  double dis(const Point& b) const {\n    return sqrt((x - b.x) * (x - b.x) + (y - b.y) * (y - b.y));\n  }\n};\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    int a, b;\n    scanf(\"%d%d%d\", &a, &b, &b);\n    Point p;\n    p.x = a;\n    p.y = b;\n    Point s[5];\n    s[0] = (Point){INF, -INF};\n    s[1] = (Point){-INF, -INF};\n    s[2] = (Point){INF, INF};\n    s[3] = (Point){-INF, INF};\n    s[4] = p;\n    for (int i = 0; i < 4; i++) {\n      for (int j = 1; j <= 3; j++)\n        if (s[i] > s[j]) std::swap(s[j], s[i]);\n    }\n    int tag = 0;\n    for (int i = 4; i <= 3 + t; i++) {\n      tag += ((s[1] - p) * (s[2] - p) <= 0 && (s[2] - p) * (s[3] - p) <= 0 &&\n              (s[3] - p) * (s[1] - p) <= 0);\n    }\n    if (tag & 1)\n      printf(\"YES\\n\");\n    else\n      printf(\"NO\\n\");\n  }\n  return 0;\n}\n"}
