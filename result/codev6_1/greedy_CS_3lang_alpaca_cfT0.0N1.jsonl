{"src_uid": "bd5912fe2c5c37658f28f6b159b39645", "id": 1, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': 'yandex\\r\\n6\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yahoo\\r\\n5\\r\\n', 'output': ['1\\r\\n']}, {'input': 'google\\r\\n7\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'a\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'z\\r\\n2\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'fwgfrwgkuwghfiruhewgirueguhergiqrbvgrgf\\r\\n26\\r\\n', 'output': ['14\\r\\n']}, {'input': 'nfevghreuoghrueighoqghbnebvnejbvnbgneluqe\\r\\n26\\r\\n', 'output': ['12\\r\\n']}, {'input': 'a\\r\\n3\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'smaxpqplaqqbxuqxalqmbmmgubbpspxhawbxsuqhhegpmmpebqmqpbbeplwaepxmsahuepuhuhwxeqmmlgqubuaxehwuwasgxpqmugbmuawuhwqlswllssueglbxepbmwgs\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'cuguccgcugcugucgggggcgcgucgucugcuuuccccuugccg\\r\\n4\\r\\n', 'output': ['1\\r\\n']}, {'input': 'fcfccfcfccfcfcffcffffffcfccfccfcffccccfcffffccfccfcffcfcccccffcfffcccffcfccfffffcccfccffffffccfccccf\\r\\n20\\r\\n', 'output': ['18\\r\\n']}, {'input': 'swmkwaruyv\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'tnbqpsuhkczmejirvyfdolxwga\\r\\n22\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n3\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abb\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aaaa\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yandex\\r\\n4\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aaabbbccc\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcd\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'asdfgh\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aab\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'mynameissako\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcd\\r\\n3\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcdef\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcdefg\\r\\n4\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abc\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'asdafjsgljdllgjdgkl\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yaay\\r\\n3\\r\\n', 'output': ['1\\r\\n']}, {'input': 'yaay\\r\\n4\\r\\n', 'output': ['2\\r\\n']}, {'input': 'zzzzzz\\r\\n2\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s;\n  int k;\n  cin >> s >> k;\n  int cnt = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\n        s[i] == 'u')\n      cnt++;\n  }\n  if (cnt < k)\n    cout << \"impossible\";\n  else {\n    int ans = 0;\n    for (int i = 0; i < s.size(); i++) {\n      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\n          s[i] == 'u')\n        continue;\n      else\n        ans++;\n    }\n    if (ans < k - cnt)\n      cout << \"impossible\";\n    else\n      cout << ans;\n  }\n  return 0;\n}\n"}
{"src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "id": 2, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1300, "testcases": "[{'input': '6\\r\\n+ 12001\\r\\n- 12001\\r\\n- 1\\r\\n- 1200\\r\\n+ 1\\r\\n+ 7\\r\\n', 'output': ['3']}, {'input': '2\\r\\n- 1\\r\\n- 2\\r\\n', 'output': ['2']}, {'input': '2\\r\\n+ 1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '5\\r\\n+ 1\\r\\n- 1\\r\\n+ 2\\r\\n+ 3\\r\\n- 4\\r\\n', 'output': ['3']}, {'input': '3\\r\\n- 1\\r\\n- 2\\r\\n- 3\\r\\n', 'output': ['3']}, {'input': '4\\r\\n+ 1\\r\\n+ 2\\r\\n- 1\\r\\n+ 3\\r\\n', 'output': ['2']}, {'input': '6\\r\\n+ 1\\r\\n+ 2\\r\\n- 1\\r\\n+ 3\\r\\n- 2\\r\\n+ 4\\r\\n', 'output': ['2']}, {'input': '3\\r\\n+ 1\\r\\n+ 2\\r\\n- 3\\r\\n', 'output': ['3']}, {'input': '3\\r\\n- 1\\r\\n+ 2\\r\\n- 2\\r\\n', 'output': ['1']}, {'input': '4\\r\\n- 1\\r\\n- 2\\r\\n+ 3\\r\\n+ 4\\r\\n', 'output': ['2']}, {'input': '1\\r\\n+ 1\\r\\n', 'output': ['1']}, {'input': '1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '3\\r\\n- 1\\r\\n+ 1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '10\\r\\n+ 1\\r\\n+ 2\\r\\n+ 3\\r\\n+ 4\\r\\n+ 5\\r\\n+ 6\\r\\n+ 7\\r\\n+ 8\\r\\n+ 9\\r\\n+ 10\\r\\n', 'output': ['10']}, {'input': '5\\r\\n+ 5\\r\\n+ 4\\r\\n- 4\\r\\n- 5\\r\\n+ 5\\r\\n', 'output': ['2']}, {'input': '50\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n', 'output': ['1']}, {'input': '10\\r\\n- 8\\r\\n- 4\\r\\n+ 8\\r\\n+ 10\\r\\n+ 6\\r\\n- 8\\r\\n+ 9\\r\\n- 2\\r\\n- 7\\r\\n+ 4\\r\\n', 'output': ['5']}, {'input': '20\\r\\n+ 3\\r\\n- 3\\r\\n- 2\\r\\n+ 2\\r\\n+ 3\\r\\n- 5\\r\\n- 1\\r\\n+ 1\\r\\n- 3\\r\\n+ 4\\r\\n- 1\\r\\n+ 1\\r\\n+ 3\\r\\n- 3\\r\\n+ 5\\r\\n- 2\\r\\n- 1\\r\\n+ 2\\r\\n+ 1\\r\\n- 5\\r\\n', 'output': ['4']}, {'input': '50\\r\\n+ 4\\r\\n+ 5\\r\\n+ 3\\r\\n+ 2\\r\\n- 2\\r\\n- 3\\r\\n- 4\\r\\n+ 3\\r\\n+ 2\\r\\n- 3\\r\\n+ 4\\r\\n- 2\\r\\n- 4\\r\\n+ 2\\r\\n+ 3\\r\\n- 3\\r\\n- 5\\r\\n- 1\\r\\n+ 4\\r\\n+ 5\\r\\n- 5\\r\\n+ 3\\r\\n- 4\\r\\n- 3\\r\\n- 2\\r\\n+ 4\\r\\n+ 3\\r\\n+ 2\\r\\n- 2\\r\\n- 4\\r\\n+ 5\\r\\n+ 1\\r\\n+ 4\\r\\n+ 2\\r\\n- 2\\r\\n+ 2\\r\\n- 3\\r\\n- 5\\r\\n- 4\\r\\n- 1\\r\\n+ 5\\r\\n- 2\\r\\n- 5\\r\\n+ 5\\r\\n+ 3\\r\\n- 3\\r\\n+ 1\\r\\n+ 3\\r\\n+ 2\\r\\n- 1\\r\\n', 'output': ['5']}, {'input': '10\\r\\n- 2\\r\\n+ 1\\r\\n- 1\\r\\n+ 2\\r\\n- 2\\r\\n+ 2\\r\\n+ 1\\r\\n- 1\\r\\n- 2\\r\\n+ 1\\r\\n', 'output': ['2']}, {'input': '50\\r\\n+ 1\\r\\n+ 2\\r\\n+ 3\\r\\n+ 4\\r\\n+ 5\\r\\n+ 6\\r\\n+ 7\\r\\n+ 8\\r\\n+ 9\\r\\n+ 10\\r\\n+ 11\\r\\n+ 12\\r\\n+ 13\\r\\n+ 14\\r\\n+ 15\\r\\n+ 16\\r\\n+ 17\\r\\n+ 18\\r\\n+ 19\\r\\n+ 20\\r\\n+ 21\\r\\n+ 22\\r\\n+ 23\\r\\n+ 24\\r\\n+ 25\\r\\n+ 26\\r\\n+ 27\\r\\n+ 28\\r\\n+ 29\\r\\n+ 30\\r\\n+ 31\\r\\n+ 32\\r\\n+ 33\\r\\n+ 34\\r\\n+ 35\\r\\n+ 36\\r\\n+ 37\\r\\n+ 38\\r\\n+ 39\\r\\n+ 40\\r\\n+ 41\\r\\n+ 42\\r\\n+ 43\\r\\n+ 44\\r\\n+ 45\\r\\n+ 46\\r\\n+ 47\\r\\n+ 48\\r\\n+ 49\\r\\n+ 50\\r\\n', 'output': ['50']}, {'input': '50\\r\\n- 1\\r\\n- 2\\r\\n- 3\\r\\n- 4\\r\\n- 5\\r\\n- 6\\r\\n- 7\\r\\n- 8\\r\\n- 9\\r\\n- 10\\r\\n- 11\\r\\n- 12\\r\\n- 13\\r\\n- 14\\r\\n- 15\\r\\n- 16\\r\\n- 17\\r\\n- 18\\r\\n- 19\\r\\n- 20\\r\\n- 21\\r\\n- 22\\r\\n- 23\\r\\n- 24\\r\\n- 25\\r\\n- 26\\r\\n- 27\\r\\n- 28\\r\\n- 29\\r\\n- 30\\r\\n- 31\\r\\n- 32\\r\\n- 33\\r\\n- 34\\r\\n- 35\\r\\n- 36\\r\\n- 37\\r\\n- 38\\r\\n- 39\\r\\n- 40\\r\\n- 41\\r\\n- 42\\r\\n- 43\\r\\n- 44\\r\\n- 45\\r\\n- 46\\r\\n- 47\\r\\n- 48\\r\\n- 49\\r\\n- 50\\r\\n', 'output': ['50']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, ans = 0;\n  cin >> n;\n  map<int, int> m;\n  for (int i = 0; i < n; i++) {\n    char c;\n    int x;\n    cin >> c >> x;\n    if (c == '+')\n      m[x]++;\n    else\n      m[x]--;\n    ans = max(ans, (int)m.size());\n  }\n  cout << ans << endl;\n  return 0;\n}\n"}
{"src_uid": "a6e9405bc3d4847fe962446bc1c457b4", "id": 3, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '0 0\\r\\n4 5\\r\\n', 'output': ['5']}, {'input': '3 4\\r\\n6 1\\r\\n', 'output': ['3']}, {'input': '0 0\\r\\n4 6\\r\\n', 'output': ['6']}, {'input': '1 1\\r\\n-3 -5\\r\\n', 'output': ['6']}, {'input': '-1 -1\\r\\n-10 100\\r\\n', 'output': ['101']}, {'input': '1 -1\\r\\n100 -100\\r\\n', 'output': ['99']}, {'input': '-1000000000 -1000000000\\r\\n1000000000 1000000000\\r\\n', 'output': ['2000000000']}, {'input': '-1000000000 -1000000000\\r\\n0 999999999\\r\\n', 'output': ['1999999999']}, {'input': '0 0\\r\\n2 1\\r\\n', 'output': ['2']}, {'input': '10 0\\r\\n100 0\\r\\n', 'output': ['90']}, {'input': '1 5\\r\\n6 4\\r\\n', 'output': ['5']}, {'input': '0 0\\r\\n5 4\\r\\n', 'output': ['5']}, {'input': '10 1\\r\\n20 1\\r\\n', 'output': ['10']}, {'input': '1 1\\r\\n-3 4\\r\\n', 'output': ['4']}, {'input': '-863407280 504312726\\r\\n786535210 -661703810\\r\\n', 'output': ['1649942490']}, {'input': '-588306085 -741137832\\r\\n341385643 152943311\\r\\n', 'output': ['929691728']}, {'input': '0 0\\r\\n4 0\\r\\n', 'output': ['4']}, {'input': '93097194 -48405232\\r\\n-716984003 -428596062\\r\\n', 'output': ['810081197']}, {'input': '9 1\\r\\n1 1\\r\\n', 'output': ['8']}, {'input': '4 6\\r\\n0 4\\r\\n', 'output': ['4']}, {'input': '2 4\\r\\n5 2\\r\\n', 'output': ['3']}, {'input': '-100000000 -100000000\\r\\n100000000 100000123\\r\\n', 'output': ['200000123']}, {'input': '5 6\\r\\n5 7\\r\\n', 'output': ['1']}, {'input': '12 16\\r\\n12 1\\r\\n', 'output': ['15']}, {'input': '0 0\\r\\n5 1\\r\\n', 'output': ['5']}, {'input': '0 1\\r\\n1 1\\r\\n', 'output': ['1']}, {'input': '-44602634 913365223\\r\\n-572368780 933284951\\r\\n', 'output': ['527766146']}, {'input': '-2 0\\r\\n2 -2\\r\\n', 'output': ['4']}, {'input': '0 0\\r\\n3 1\\r\\n', 'output': ['3']}, {'input': '-458 2\\r\\n1255 4548\\r\\n', 'output': ['4546']}, {'input': '-5 -4\\r\\n-3 -3\\r\\n', 'output': ['2']}, {'input': '4 5\\r\\n7 3\\r\\n', 'output': ['3']}, {'input': '-1000000000 -999999999\\r\\n1000000000 999999998\\r\\n', 'output': ['2000000000']}, {'input': '-1000000000 -1000000000\\r\\n1000000000 -1000000000\\r\\n', 'output': ['2000000000']}, {'input': '-464122675 -898521847\\r\\n656107323 -625340409\\r\\n', 'output': ['1120229998']}, {'input': '-463154699 -654742385\\r\\n-699179052 -789004997\\r\\n', 'output': ['236024353']}, {'input': '982747270 -593488945\\r\\n342286841 -593604186\\r\\n', 'output': ['640460429']}, {'input': '-80625246 708958515\\r\\n468950878 574646184\\r\\n', 'output': ['549576124']}, {'input': '0 0\\r\\n1 0\\r\\n', 'output': ['1']}, {'input': '109810 1\\r\\n2 3\\r\\n', 'output': ['109808']}, {'input': '-9 0\\r\\n9 9\\r\\n', 'output': ['18']}, {'input': '9 9\\r\\n9 9\\r\\n', 'output': ['0']}, {'input': '1 1\\r\\n4 3\\r\\n', 'output': ['3']}, {'input': '1 2\\r\\n45 1\\r\\n', 'output': ['44']}, {'input': '207558188 -313753260\\r\\n-211535387 -721675423\\r\\n', 'output': ['419093575']}, {'input': '-11 0\\r\\n0 0\\r\\n', 'output': ['11']}, {'input': '-1000000000 1000000000\\r\\n1000000000 -1000000000\\r\\n', 'output': ['2000000000']}, {'input': '0 0\\r\\n1 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n0 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 0\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n-1 -1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n0 -1\\r\\n', 'output': ['1']}, {'input': '0 0\\r\\n1 -1\\r\\n', 'output': ['1']}, {'input': '10 90\\r\\n90 10\\r\\n', 'output': ['80']}, {'input': '851016864 573579544\\r\\n-761410925 -380746263\\r\\n', 'output': ['1612427789']}, {'input': '1 9\\r\\n9 9\\r\\n', 'output': ['8']}, {'input': '1000 1000\\r\\n1000 1000\\r\\n', 'output': ['0']}, {'input': '1 9\\r\\n9 1\\r\\n', 'output': ['8']}, {'input': '1 90\\r\\n90 90\\r\\n', 'output': ['89']}, {'input': '100 100\\r\\n1000 1000\\r\\n', 'output': ['900']}, {'input': '-1 0\\r\\n0 0\\r\\n', 'output': ['1']}, {'input': '-750595959 -2984043\\r\\n649569876 -749608783\\r\\n', 'output': ['1400165835']}, {'input': '958048496 712083589\\r\\n423286949 810566863\\r\\n', 'output': ['534761547']}, {'input': '146316710 53945094\\r\\n-523054748 147499505\\r\\n', 'output': ['669371458']}, {'input': '50383856 -596516251\\r\\n-802950224 -557916272\\r\\n', 'output': ['853334080']}, {'input': '-637204864 -280290367\\r\\n-119020929 153679771\\r\\n', 'output': ['518183935']}, {'input': '-100 -100\\r\\n-60 -91\\r\\n', 'output': ['40']}, {'input': '337537326 74909428\\r\\n-765558776 167951547\\r\\n', 'output': ['1103096102']}, {'input': '0 81\\r\\n18 90\\r\\n', 'output': ['18']}, {'input': '283722202 -902633305\\r\\n-831696497 -160868946\\r\\n', 'output': ['1115418699']}, {'input': '1000 1000\\r\\n-1000 1000\\r\\n', 'output': ['2000']}, {'input': '5 6\\r\\n4 8\\r\\n', 'output': ['2']}, {'input': '40572000 597493595\\r\\n-935051731 368493185\\r\\n', 'output': ['975623731']}, {'input': '-5 5\\r\\n5 5\\r\\n', 'output': ['10']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long x1, y1, x2, y2;\n  cin >> x1 >> y1 >> x2 >> y2;\n  cout << max(abs(x1 - x2), abs(y1 - y2)) << endl;\n  return 0;\n}\n"}
{"src_uid": "6e0dafeaf85e92f959c388c72e158f68", "id": 4, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '3 2 2\\r\\n', 'output': ['1 2 \\r\\n0 3 \\r\\n']}, {'input': '8 4 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 0 \\r\\n0 0 0 \\r\\n']}, {'input': '10 2 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1\\r\\n', 'output': ['1 \\r\\n']}, {'input': '8 3 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 0 \\r\\n']}, {'input': '1 1 100\\r\\n', 'output': ['1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\r\\n']}, {'input': '1 100 1\\r\\n', 'output': ['1 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n0 \\r\\n']}, {'input': '12 4 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 9 \\r\\n10 11 12 \\r\\n']}, {'input': '64 8 9\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 \\r\\n10 11 12 13 14 15 16 17 18 \\r\\n19 20 21 22 23 24 25 26 27 \\r\\n28 29 30 31 32 33 34 35 36 \\r\\n37 38 39 40 41 42 43 44 45 \\r\\n46 47 48 49 50 51 52 53 54 \\r\\n55 56 57 58 59 60 61 62 63 \\r\\n64 0 0 0 0 0 0 0 0 \\r\\n']}, {'input': '13 2 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '41 6 7\\r\\n', 'output': ['1 2 3 4 5 6 7 \\r\\n8 9 10 11 12 13 14 \\r\\n15 16 17 18 19 20 21 \\r\\n22 23 24 25 26 27 28 \\r\\n29 30 31 32 33 34 35 \\r\\n36 37 38 39 40 41 0 \\r\\n']}, {'input': '10000 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '26 1 33\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 0 0 0 0 0 0 0 \\r\\n']}, {'input': '3 1 6\\r\\n', 'output': ['1 2 3 0 0 0 \\r\\n']}, {'input': '109 37 3\\r\\n', 'output': ['1 2 3 \\r\\n4 5 6 \\r\\n7 8 9 \\r\\n10 11 12 \\r\\n13 14 15 \\r\\n16 17 18 \\r\\n19 20 21 \\r\\n22 23 24 \\r\\n25 26 27 \\r\\n28 29 30 \\r\\n31 32 33 \\r\\n34 35 36 \\r\\n37 38 39 \\r\\n40 41 42 \\r\\n43 44 45 \\r\\n46 47 48 \\r\\n49 50 51 \\r\\n52 53 54 \\r\\n55 56 57 \\r\\n58 59 60 \\r\\n61 62 63 \\r\\n64 65 66 \\r\\n67 68 69 \\r\\n70 71 72 \\r\\n73 74 75 \\r\\n76 77 78 \\r\\n79 80 81 \\r\\n82 83 84 \\r\\n85 86 87 \\r\\n88 89 90 \\r\\n91 92 93 \\r\\n94 95 96 \\r\\n97 98 99 \\r\\n100 101 102 \\r\\n103 104 105 \\r\\n106 107 108 \\r\\n109 0 0 \\r\\n']}, {'input': '15 2 8\\r\\n', 'output': ['1 2 3 4 5 6 7 8 \\r\\n10 9 12 11 14 13 0 15 \\r\\n']}, {'input': '29 3 11\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 \\r\\n12 13 14 15 16 17 18 19 20 21 22 \\r\\n23 24 25 26 27 28 29 0 0 0 0 \\r\\n']}, {'input': '16 18 1\\r\\n', 'output': ['1 \\r\\n2 \\r\\n3 \\r\\n4 \\r\\n5 \\r\\n6 \\r\\n7 \\r\\n8 \\r\\n9 \\r\\n10 \\r\\n11 \\r\\n12 \\r\\n13 \\r\\n14 \\r\\n15 \\r\\n16 \\r\\n0 \\r\\n0 \\r\\n']}, {'input': '46 3 16\\r\\n', 'output': ['1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \\r\\n18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 \\r\\n33 34 35 36 37 38 39 40 41 42 43 44 45 46 0 0 \\r\\n']}, {'input': '4206 86 12\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2358 14 56\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5420 35 96\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7758 63 41\\r\\n', 'output': ['-1\\r\\n']}, {'input': '9806 87 93\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99 1 97\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1053 25 42\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4217 49 86\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2312 77 30\\r\\n', 'output': ['-1\\r\\n']}, {'input': '74 1 71\\r\\n', 'output': ['-1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a, b;\n  cin >> n >> a >> b;\n  if (n > a * b) {\n    cout << -1 << endl;\n    return 0;\n  }\n  int cnt = 0;\n  int x = 0, y = 0;\n  int arr[a][b];\n  for (int i = 0; i < a; i++) {\n    for (int j = 0; j < b; j++) {\n      if (cnt < n) {\n        if (i % 2 == 0) {\n          arr[i][j] = cnt + 1;\n          cnt++;\n        } else {\n          arr[i][j] = cnt + 1;\n          cnt++;\n        }\n      } else {\n        arr[i][j] = 0;\n      }\n    }\n  }\n  for (int i = 0; i < a; i++) {\n    for (int j = 0; j < b; j++) {\n      cout << arr[i][j] << \" \";\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"}
{"src_uid": "a35a27754c9c095c6f1b2d4adccbfe93", "id": 5, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '4 2 3\\r\\n1 2\\r\\n2 3 4\\r\\n', 'output': ['1 1 2 2', '1  1  2  2', '1 2 2 2']}, {'input': '5 5 2\\r\\n3 4 1 2 5\\r\\n2 3\\r\\n', 'output': ['1 1 1 1 1', '1  1  1  1  1', '1 2 2 1 1']}, {'input': '100 69 31\\r\\n1 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 24 26 27 29 31 37 38 39 40 44 46 48 49 50 51 53 55 56 57 58 59 60 61 63 64 65 66 67 68 69 70 71 72 74 76 77 78 79 80 81 82 83 89 92 94 95 97 98 99 100\\r\\n2 13 22 23 25 28 30 32 33 34 35 36 41 42 43 45 47 52 54 62 73 75 84 85 86 87 88 90 91 93 96\\r\\n', 'output': ['1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 2 1 1 2 1 2 1 2 2 2 2 2 1 1 1 1 2 2 2 1 2 1 2 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 2 2 2 2 1 2 2 1 2 1 1 2 1 1 1 1', '1  2  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  2  1  2  1  1  2  1  2  1  2  2  2  2  2  1  1  1  1  2  2  2  1  2  1  2  1  1  1  1  2  1  2  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  2  1  2  1  1  1  1  1  1  1  1  2  2  2  2  2  1  2  2  1  2  1  1  2  1  1  1  1']}, {'input': '100 56 44\\r\\n1 2 5 8 14 15 17 18 20 21 23 24 25 27 30 33 34 35 36 38 41 42 44 45 46 47 48 49 50 53 56 58 59 60 62 63 64 65 68 69 71 75 76 80 81 84 87 88 90 91 92 94 95 96 98 100\\r\\n3 4 6 7 9 10 11 12 13 16 19 22 26 28 29 31 32 37 39 40 43 51 52 54 55 57 61 66 67 70 72 73 74 77 78 79 82 83 85 86 89 93 97 99\\r\\n', 'output': ['1  1  2  2  1  2  2  1  2  2  2  2  2  1  1  2  1  1  2  1  1  2  1  1  1  2  1  2  2  1  2  2  1  1  1  1  2  1  2  2  1  1  2  1  1  1  1  1  1  1  2  2  1  2  2  1  2  1  1  1  2  1  1  1  1  2  2  1  1  2  1  2  2  2  1  1  2  2  2  1  1  2  2  1  2  2  1  1  2  1  1  1  2  1  1  1  2  1  2  1', '1 1 2 2 1 2 2 1 2 2 2 2 2 1 1 2 1 1 2 1 1 2 1 1 1 2 1 2 2 1 2 2 1 1 1 1 2 1 2 2 1 1 2 1 1 1 1 1 1 1 2 2 1 2 2 1 2 1 1 1 2 1 1 1 1 2 2 1 1 2 1 2 2 2 1 1 2 2 2 1 1 2 2 1 2 2 1 1 2 1 1 1 2 1 1 1 2 1 2 1']}, {'input': '100 82 18\\r\\n1 2 3 4 5 6 7 8 9 10 11 13 14 15 16 17 18 19 20 22 23 25 27 29 30 31 32 33 34 35 36 37 38 42 43 44 45 46 47 48 49 50 51 53 54 55 57 58 59 60 61 62 63 64 65 66 67 68 69 71 72 73 74 75 77 78 79 80 82 83 86 88 90 91 92 93 94 96 97 98 99 100\\r\\n12 21 24 26 28 39 40 41 52 56 70 76 81 84 85 87 89 95\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 2 2 1 2 1 2 1 1 1 1 1 2 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  2  1  2  1  2  1  1  1  1  1  1  1  1  1  1  2  2  2  1  1  1  1  1  1  1  1  1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  2  1  1  1  1  2  1  1  2  2  1  2  1  2  1  1  1  1  1  2  1  1  1  1  1']}, {'input': '99 72 27\\r\\n1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 17 20 23 25 26 28 29 30 32 33 34 35 36 39 41 42 43 44 45 46 47 50 51 52 54 55 56 58 59 60 61 62 67 70 71 72 74 75 76 77 80 81 82 84 85 86 88 90 91 92 93 94 95 96 97 98 99\\r\\n9 18 19 21 22 24 27 31 37 38 40 48 49 53 57 63 64 65 66 68 69 73 78 79 83 87 89\\r\\n', 'output': ['1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 2 2 1 2 1 1 2 1 1 1 2 1 1 1 1 1 2 2 1 2 1 1 1 1 1 1 1 2 2 1 1 1 2 1 1 1 2 1 1 1 1 1 2 2 2 2 1 2 2 1 1 1 2 1 1 1 1 2 2 1 1 1 2 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  2  1  2  2  1  2  1  1  2  1  1  1  2  1  1  1  1  1  2  2  1  2  1  1  1  1  1  1  1  2  2  1  1  1  2  1  1  1  2  1  1  1  1  1  2  2  2  2  1  2  2  1  1  1  2  1  1  1  1  2  2  1  1  1  2  1  1  1  2  1  2  1  1  1  1  1  1  1  1  1  1']}, {'input': '99 38 61\\r\\n1 3 10 15 16 22 23 28 31 34 35 36 37 38 39 43 44 49 50 53 56 60 63 68 69 70 72 74 75 77 80 81 83 85 96 97 98 99\\r\\n2 4 5 6 7 8 9 11 12 13 14 17 18 19 20 21 24 25 26 27 29 30 32 33 40 41 42 45 46 47 48 51 52 54 55 57 58 59 61 62 64 65 66 67 71 73 76 78 79 82 84 86 87 88 89 90 91 92 93 94 95\\r\\n', 'output': ['1  2  1  2  2  2  2  2  2  1  2  2  2  2  1  1  2  2  2  2  2  1  1  2  2  2  2  1  2  2  1  2  2  1  1  1  1  1  1  2  2  2  1  1  2  2  2  2  1  1  2  2  1  2  2  1  2  2  2  1  2  2  1  2  2  2  2  1  1  1  2  1  2  1  1  2  1  2  2  1  1  2  1  2  1  2  2  2  2  2  2  2  2  2  2  1  1  1  1', '1 2 1 2 2 2 2 2 2 1 2 2 2 2 1 1 2 2 2 2 2 1 1 2 2 2 2 1 2 2 1 2 2 1 1 1 1 1 1 2 2 2 1 1 2 2 2 2 1 1 2 2 1 2 2 1 2 2 2 1 2 2 1 2 2 2 2 1 1 1 2 1 2 1 1 2 1 2 2 1 1 2 1 2 1 2 2 2 2 2 2 2 2 2 2 1 1 1 1']}, {'input': '99 84 15\\r\\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 38 39 40 41 42 43 44 47 48 50 51 52 53 55 56 58 59 60 61 62 63 64 65 68 69 70 71 72 73 74 75 77 79 80 81 82 83 84 85 86 87 89 90 91 92 93 94 97 98 99\\r\\n4 18 33 45 46 49 54 57 66 67 76 78 88 95 96\\r\\n', 'output': ['1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  2  2  1  1  2  1  1  1  1  2  1  1  2  1  1  1  1  1  1  1  1  2  2  1  1  1  1  1  1  1  1  2  1  2  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  2  2  1  1  1', '1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 2 1 1 1']}, {'input': '4 3 1\\r\\n1 3 4\\r\\n2\\r\\n', 'output': ['1  2  1  1', '1 2 1 1']}, {'input': '4 3 1\\r\\n1 2 4\\r\\n3\\r\\n', 'output': ['1 1 2 1', '1  1  2  1']}, {'input': '4 2 2\\r\\n2 3\\r\\n1 4\\r\\n', 'output': ['2  1  1  2', '2 1 1 2']}, {'input': '4 3 1\\r\\n2 3 4\\r\\n1\\r\\n', 'output': ['2 1 1 1', '2  1  1  1']}, {'input': '1 1 1\\r\\n1\\r\\n1\\r\\n', 'output': ['1', '2']}, {'input': '2 1 1\\r\\n2\\r\\n1\\r\\n', 'output': ['2 1', '2  1']}, {'input': '2 1 1\\r\\n1\\r\\n2\\r\\n', 'output': ['1 2', '1  2']}, {'input': '3 3 1\\r\\n1 2 3\\r\\n1\\r\\n', 'output': ['2 1 1', '1 1 1', '1  1  1']}, {'input': '3 3 1\\r\\n1 2 3\\r\\n3\\r\\n', 'output': ['1 1 2', '1 1 1', '1  1  1']}, {'input': '3 2 1\\r\\n1 3\\r\\n2\\r\\n', 'output': ['1 2 1', '1  2  1']}, {'input': '100 1 100\\r\\n84\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n', 'output': ['2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2', '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2', '2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2']}, {'input': '100 100 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n17\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}, {'input': '98 51 47\\r\\n1 2 3 4 6 7 8 10 13 15 16 18 19 21 22 23 25 26 27 29 31 32 36 37 39 40 41 43 44 48 49 50 51 52 54 56 58 59 65 66 68 79 80 84 86 88 89 90 94 95 97\\r\\n5 9 11 12 14 17 20 24 28 30 33 34 35 38 42 45 46 47 53 55 57 60 61 62 63 64 67 69 70 71 72 73 74 75 76 77 78 81 82 83 85 87 91 92 93 96 98\\r\\n', 'output': ['1 1 1 1 2 1 1 1 2 1 2 2 1 2 1 1 2 1 1 2 1 1 1 2 1 1 1 2 1 2 1 1 2 2 2 1 1 2 1 1 1 2 1 1 2 2 2 1 1 1 1 1 2 1 2 1 2 1 1 2 2 2 2 2 1 1 2 1 2 2 2 2 2 2 2 2 2 2 1 1 2 2 2 1 2 1 2 1 1 1 2 2 2 1 1 2 1 2', '1  1  1  1  2  1  1  1  2  1  2  2  1  2  1  1  2  1  1  2  1  1  1  2  1  1  1  2  1  2  1  1  2  2  2  1  1  2  1  1  1  2  1  1  2  2  2  1  1  1  1  1  2  1  2  1  2  1  1  2  2  2  2  2  1  1  2  1  2  2  2  2  2  2  2  2  2  2  1  1  2  2  2  1  2  1  2  1  1  1  2  2  2  1  1  2  1  2']}, {'input': '98 28 70\\r\\n1 13 15 16 19 27 28 40 42 43 46 53 54 57 61 63 67 68 69 71 75 76 78 80 88 93 97 98\\r\\n2 3 4 5 6 7 8 9 10 11 12 14 17 18 20 21 22 23 24 25 26 29 30 31 32 33 34 35 36 37 38 39 41 44 45 47 48 49 50 51 52 55 56 58 59 60 62 64 65 66 70 72 73 74 77 79 81 82 83 84 85 86 87 89 90 91 92 94 95 96\\r\\n', 'output': ['1  2  2  2  2  2  2  2  2  2  2  2  1  2  1  1  2  2  1  2  2  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  2  1  2  1  1  2  2  1  2  2  2  2  2  2  1  1  2  2  1  2  2  2  1  2  1  2  2  2  1  1  1  2  1  2  2  2  1  1  2  1  2  1  2  2  2  2  2  2  2  1  2  2  2  2  1  2  2  2  1  1', '1 2 2 2 2 2 2 2 2 2 2 2 1 2 1 1 2 2 1 2 2 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 2 1 2 1 1 2 2 1 2 2 2 2 2 2 1 1 2 2 1 2 2 2 1 2 1 2 2 2 1 1 1 2 1 2 2 2 1 1 2 1 2 1 2 2 2 2 2 2 2 1 2 2 2 2 1 2 2 2 1 1']}, {'input': '97 21 76\\r\\n7 10 16 17 26 30 34 39 40 42 44 46 53 54 56 64 67 72 78 79 94\\r\\n1 2 3 4 5 6 8 9 11 12 13 14 15 18 19 20 21 22 23 24 25 27 28 29 31 32 33 35 36 37 38 41 43 45 47 48 49 50 51 52 55 57 58 59 60 61 62 63 65 66 68 69 70 71 73 74 75 76 77 80 81 82 83 84 85 86 87 88 89 90 91 92 93 95 96 97\\r\\n', 'output': ['2 2 2 2 2 2 1 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 1 2 2 2 1 2 2 2 1 2 2 2 2 1 1 2 1 2 1 2 1 2 2 2 2 2 2 1 1 2 1 2 2 2 2 2 2 2 1 2 2 1 2 2 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2', '2  2  2  2  2  2  1  2  2  1  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  1  2  2  2  1  2  2  2  1  2  2  2  2  1  1  2  1  2  1  2  1  2  2  2  2  2  2  1  1  2  1  2  2  2  2  2  2  2  1  2  2  1  2  2  2  2  1  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2']}, {'input': '97 21 76\\r\\n1 10 12 13 17 18 22 25 31 48 50 54 61 64 67 74 78 81 86 88 94\\r\\n2 3 4 5 6 7 8 9 11 14 15 16 19 20 21 23 24 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 49 51 52 53 55 56 57 58 59 60 62 63 65 66 68 69 70 71 72 73 75 76 77 79 80 82 83 84 85 87 89 90 91 92 93 95 96 97\\r\\n', 'output': ['1  2  2  2  2  2  2  2  2  1  2  1  1  2  2  2  1  1  2  2  2  1  2  2  1  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  1  2  2  2  1  2  2  2  2  2  2  1  2  2  1  2  2  1  2  2  2  2  2  2  1  2  2  2  1  2  2  1  2  2  2  2  1  2  1  2  2  2  2  2  1  2  2  2', '1 2 2 2 2 2 2 2 2 1 2 1 1 2 2 2 1 1 2 2 2 1 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 1 2 2 2 1 2 2 2 2 2 2 1 2 2 1 2 2 1 2 2 2 2 2 2 1 2 2 2 1 2 2 1 2 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2']}, {'input': '96 10 86\\r\\n2 5 31 37 68 69 80 82 90 91\\r\\n1 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 36 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 70 71 72 73 74 75 76 77 78 79 81 83 84 85 86 87 88 89 92 93 94 95 96\\r\\n', 'output': ['2 1 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 2 2 2 2 2 2 2 2 2 2 1 2 1 2 2 2 2 2 2 2 1 1 2 2 2 2 2', '2  1  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  1  2  2  2  2  2  2  2  2  2  2  1  2  1  2  2  2  2  2  2  2  1  1  2  2  2  2  2']}, {'input': '95 4 91\\r\\n58 65 70 93\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 59 60 61 62 63 64 66 67 68 69 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 94 95\\r\\n', 'output': ['2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2  2  2  2  2  1  2  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  2  2', '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 1 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2']}, {'input': '98 88 10\\r\\n1 2 4 5 6 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 62 63 64 65 66 67 68 69 71 72 73 74 75 76 77 79 80 81 83 84 85 86 87 88 89 90 92 93 94 95 96 97 98\\r\\n3 7 32 37 42 61 70 78 82 91\\r\\n', 'output': ['1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1', '1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  2  1  1  1  1  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1  2  1  1  1  2  1  1  1  1  1  1  1  1  2  1  1  1  1  1  1  1']}, {'input': '98 96 2\\r\\n1 2 3 4 5 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98\\r\\n6 7\\r\\n', 'output': ['1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  2  2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '97 97 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97\\r\\n94\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '97 97 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97\\r\\n20\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1']}, {'input': '96 96 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96\\r\\n48\\r\\n', 'output': ['1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}, {'input': '95 95 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95\\r\\n55\\r\\n', 'output': ['1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a, b;\n  cin >> n >> a >> b;\n  int ar[a], al[b];\n  for (int i = 0; i < a; i++) cin >> ar[i];\n  for (int i = 0; i < b; i++) cin >> al[i];\n  for (int i = 0; i < n; i++) {\n    if (find(ar, ar + a, i + 1)!= ar + a)\n      cout << 1 << \" \";\n    else\n      cout << 2 << \" \";\n  }\n  return 0;\n}\n"}
{"src_uid": "bdd86c8bc54bbac6e2bb5a9d68b6eb1c", "id": 6, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '3\\r\\n3 1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n2 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n5 3 3 3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '5\\r\\n6 6 6 6 6\\r\\n', 'output': ['5\\r\\n']}, {'input': '10\\r\\n1 1 2 2 8 8 7 7 9 9\\r\\n', 'output': ['5\\r\\n']}, {'input': '8\\r\\n9 8 7 6 5 4 3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '15\\r\\n1 2 3 4 5 5 4 3 2 1 1 2 3 4 5\\r\\n', 'output': ['10\\r\\n']}, {'input': '1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '1\\r\\n5000\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n5000 5000 5000 5000\\r\\n', 'output': ['4\\r\\n']}, {'input': '5\\r\\n3366 3461 4 5 4370\\r\\n', 'output': ['3\\r\\n']}, {'input': '10\\r\\n8 2 10 3 4 6 1 7 9 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '10\\r\\n551 3192 3213 2846 3068 1224 3447 1 10 9\\r\\n', 'output': ['7\\r\\n']}, {'input': '15\\r\\n4 1459 12 4281 3241 2748 10 3590 14 845 3518 1721 2 2880 1974\\r\\n', 'output': ['10\\r\\n']}, {'input': '15\\r\\n15 1 8 2 13 11 12 7 3 14 6 10 9 4 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '15\\r\\n2436 2354 4259 1210 2037 2665 700 3578 2880 973 1317 1024 24 3621 4142\\r\\n', 'output': ['15\\r\\n']}, {'input': '30\\r\\n28 1 3449 9 3242 4735 26 3472 15 21 2698 7 4073 3190 10 3 29 1301 4526 22 345 3876 19 12 4562 2535 2 630 18 27\\r\\n', 'output': ['14\\r\\n']}, {'input': '100\\r\\n50 39 95 30 66 78 2169 4326 81 31 74 34 80 40 19 48 97 63 82 6 88 16 21 57 92 77 10 1213 17 93 32 91 38 4375 29 75 44 22 4 45 14 2395 3254 59 3379 2 85 96 8 83 27 94 1512 2960 100 9 73 79 7 25 55 69 90 99 51 87 98 62 18 35 43 4376 4668 28 72 56 4070 61 65 36 54 4106 11 24 15 86 70 71 4087 23 13 76 20 4694 26 4962 4726 37 14 64\\r\\n', 'output': ['18\\r\\n']}, {'input': '100\\r\\n340 14 3275 2283 2673 1107 817 2243 1226 32 2382 3638 4652 418 68 4962 387 764 4647 159 1846 225 2760 4904 3150 403 3 2439 91 4428 92 4705 75 348 1566 1465 69 6 49 4 62 4643 564 1090 3447 1871 2255 139 24 99 2669 969 86 61 4550 158 4537 3993 1589 872 2907 1888 401 80 1825 1483 63 1 2264 4068 4113 2548 41 885 4806 36 67 167 4447 34 1248 2593 82 202 81 1783 1284 4973 16 43 95 7 865 2091 3008 1793 20 947 4912 3604\\r\\n', 'output': ['70\\r\\n']}, {'input': '1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n5000 5000\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n1 2 3 4 5 6 7 1000 10 10\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  int c = 0;\n  for (int i = 1; i <= n; i++) {\n    int f = 0;\n    for (int j = 0; j < n; j++) {\n      if (a[j] == i) {\n        f = 1;\n        break;\n      }\n    }\n    if (f == 0) {\n      c++;\n    }\n  }\n  cout << c << endl;\n  return 0;\n}\n"}
{"src_uid": "46bfdec9bfc1e91bd2f5022f3d3c8ce7", "id": 7, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1\\r\\n2\\r\\n3\\r\\n4\\r\\n12\\r\\n', 'output': ['12']}, {'input': '2\\r\\n3\\r\\n4\\r\\n5\\r\\n24\\r\\n', 'output': ['17']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n100000\\r\\n', 'output': ['100000']}, {'input': '10\\r\\n9\\r\\n8\\r\\n7\\r\\n6\\r\\n', 'output': ['0']}, {'input': '8\\r\\n4\\r\\n4\\r\\n3\\r\\n65437\\r\\n', 'output': ['32718']}, {'input': '8\\r\\n4\\r\\n1\\r\\n10\\r\\n59392\\r\\n', 'output': ['59392']}, {'input': '4\\r\\n1\\r\\n8\\r\\n7\\r\\n44835\\r\\n', 'output': ['44835']}, {'input': '6\\r\\n1\\r\\n7\\r\\n2\\r\\n62982\\r\\n', 'output': ['62982']}, {'input': '2\\r\\n7\\r\\n4\\r\\n9\\r\\n56937\\r\\n', 'output': ['35246']}, {'input': '2\\r\\n9\\r\\n8\\r\\n1\\r\\n75083\\r\\n', 'output': ['75083']}, {'input': '8\\r\\n7\\r\\n7\\r\\n6\\r\\n69038\\r\\n', 'output': ['24656']}, {'input': '4\\r\\n4\\r\\n2\\r\\n3\\r\\n54481\\r\\n', 'output': ['36320']}, {'input': '6\\r\\n4\\r\\n9\\r\\n8\\r\\n72628\\r\\n', 'output': ['28244']}, {'input': '9\\r\\n7\\r\\n8\\r\\n10\\r\\n42357\\r\\n', 'output': ['16540']}, {'input': '5\\r\\n6\\r\\n4\\r\\n3\\r\\n60504\\r\\n', 'output': ['36302']}, {'input': '7\\r\\n2\\r\\n3\\r\\n8\\r\\n21754\\r\\n', 'output': ['15539']}, {'input': '1\\r\\n2\\r\\n10\\r\\n4\\r\\n39901\\r\\n', 'output': ['39901']}, {'input': '3\\r\\n4\\r\\n7\\r\\n1\\r\\n58048\\r\\n', 'output': ['58048']}, {'input': '9\\r\\n10\\r\\n4\\r\\n6\\r\\n52003\\r\\n', 'output': ['21956']}, {'input': '5\\r\\n10\\r\\n9\\r\\n3\\r\\n70149\\r\\n', 'output': ['32736']}, {'input': '5\\r\\n5\\r\\n5\\r\\n10\\r\\n55592\\r\\n', 'output': ['11118']}, {'input': '1\\r\\n5\\r\\n2\\r\\n6\\r\\n49547\\r\\n', 'output': ['49547']}, {'input': '3\\r\\n7\\r\\n7\\r\\n7\\r\\n84046\\r\\n', 'output': ['36019']}, {'input': '10\\r\\n2\\r\\n1\\r\\n8\\r\\n63537\\r\\n', 'output': ['63537']}, {'input': '7\\r\\n2\\r\\n10\\r\\n5\\r\\n81684\\r\\n', 'output': ['53678']}, {'input': '7\\r\\n1\\r\\n6\\r\\n8\\r\\n99831\\r\\n', 'output': ['99831']}, {'input': '3\\r\\n9\\r\\n3\\r\\n3\\r\\n61082\\r\\n', 'output': ['20360']}, {'input': '5\\r\\n5\\r\\n8\\r\\n9\\r\\n79228\\r\\n', 'output': ['29931']}, {'input': '1\\r\\n5\\r\\n5\\r\\n6\\r\\n89535\\r\\n', 'output': ['89535']}, {'input': '5\\r\\n5\\r\\n2\\r\\n1\\r\\n7682\\r\\n', 'output': ['7682']}, {'input': '7\\r\\n4\\r\\n8\\r\\n8\\r\\n25829\\r\\n', 'output': ['9224']}, {'input': '3\\r\\n4\\r\\n3\\r\\n3\\r\\n87079\\r\\n', 'output': ['43539']}, {'input': '5\\r\\n8\\r\\n4\\r\\n9\\r\\n5226\\r\\n', 'output': ['2438']}, {'input': '4\\r\\n9\\r\\n6\\r\\n6\\r\\n1070\\r\\n', 'output': ['415']}, {'input': '10\\r\\n10\\r\\n10\\r\\n10\\r\\n100000\\r\\n', 'output': ['10000']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'output': ['1']}, {'input': '10\\r\\n10\\r\\n10\\r\\n10\\r\\n1\\r\\n', 'output': ['0']}, {'input': '10\\r\\n10\\r\\n1\\r\\n10\\r\\n10\\r\\n', 'output': ['10']}, {'input': '10\\r\\n10\\r\\n1\\r\\n10\\r\\n100\\r\\n', 'output': ['100']}, {'input': '2\\r\\n2\\r\\n2\\r\\n2\\r\\n1\\r\\n', 'output': ['0']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int k, l, m, n, d;\n  cin >> k >> l >> m >> n >> d;\n  int ans = d;\n  for (int i = 1; i <= d; i++) {\n    if (i % k == 0 || i % l == 0 || i % m == 0 || i % n == 0) {\n      ans--;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"}
{"src_uid": "9c90974a0bb860a5e180760042fd5045", "id": 8, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '3 3\\r\\ncba\\r\\nbcd\\r\\ncbc\\r\\n', 'output': ['abcd']}, {'input': '5 5\\r\\nfcofd\\r\\nooedo\\r\\nafaoa\\r\\nrdcdf\\r\\neofsf\\r\\n', 'output': ['codeforces']}, {'input': '4 4\\r\\nusah\\r\\nusha\\r\\nhasu\\r\\nsuha\\r\\n', 'output': ['ahhasusu']}, {'input': '7 5\\r\\naabcd\\r\\neffgh\\r\\niijkk\\r\\nlmnoo\\r\\npqqrs\\r\\nttuvw\\r\\nxxyyz\\r\\n', 'output': ['bcdeghjlmnprsuvwz']}, {'input': '10 10\\r\\naaaaaaaaaa\\r\\nbccceeeeee\\r\\ncdfffffffe\\r\\ncdfiiiiile\\r\\ncdfjjjjile\\r\\ndddddddile\\r\\nedfkkkkile\\r\\nedddddddde\\r\\ngggggggggg\\r\\nhhhhhhhhhe\\r\\n', 'output': ['b']}, {'input': '15 3\\r\\njhg\\r\\njkn\\r\\njui\\r\\nfth\\r\\noij\\r\\nyuf\\r\\nyfb\\r\\nugd\\r\\nhgd\\r\\noih\\r\\nhvc\\r\\nugg\\r\\nyvv\\r\\ntdg\\r\\nhgf\\r\\n', 'output': ['hkniftjfbctd']}, {'input': '17 19\\r\\nbmzbmweyydiadtlcoue\\r\\ngmdbyfwurpwbpuvhifn\\r\\nuapwyndmhtqvkgkbhty\\r\\ntszotwflegsjzzszfwt\\r\\nzfpnscguemwrczqxyci\\r\\nvdqnkypnxnnpmuduhzn\\r\\noaquudhavrncwfwujpc\\r\\nmiggjmcmkkbnjfeodxk\\r\\ngjgwxtrxingiqquhuwq\\r\\nhdswxxrxuzzfhkplwun\\r\\nfagppcoildagktgdarv\\r\\neusjuqfistulgbglwmf\\r\\ngzrnyxryetwzhlnfewc\\r\\nzmnoozlqatugmdjwgzc\\r\\nfabbkoxyjxkatjmpprs\\r\\nwkdkobdagwdwxsufees\\r\\nrvncbszcepigpbzuzoo\\r\\n', 'output': ['lcorviunqvgblgjfsgmrqxyivyxodhvrjpicbneodxjtfkpolvejqmllqadjwotmbgxrvs']}, {'input': '1 1\\r\\na\\r\\n', 'output': ['a']}, {'input': '2 2\\r\\nzx\\r\\nxz\\r\\n', 'output': ['zxxz']}, {'input': '1 2\\r\\nfg\\r\\n', 'output': ['fg']}, {'input': '2 1\\r\\nh\\r\\nj\\r\\n', 'output': ['hj']}, {'input': '1 3\\r\\niji\\r\\n', 'output': ['j']}, {'input': '3 1\\r\\nk\\r\\np\\r\\nk\\r\\n', 'output': ['p']}, {'input': '2 3\\r\\nmhw\\r\\nbfq\\r\\n', 'output': ['mhwbfq']}, {'input': '3 2\\r\\nxe\\r\\ner\\r\\nwb\\r\\n', 'output': ['xeerwb']}, {'input': '3 7\\r\\nnutuvjg\\r\\ntgqutfn\\r\\nyfjeiot\\r\\n', 'output': ['ntvjggqfnyfjeiot']}, {'input': '5 4\\r\\nuzvs\\r\\namfz\\r\\nwypl\\r\\nxizp\\r\\nfhmf\\r\\n', 'output': ['uzvsamfzwyplxizphm']}, {'input': '8 9\\r\\ntjqrtgrem\\r\\nrwjcfuoey\\r\\nywrjgpzca\\r\\nwabzggojv\\r\\najqmmcclh\\r\\nozilebskd\\r\\nqmgnbmtcq\\r\\nwakptzkjr\\r\\n', 'output': ['mrjcfuyyrjpzabzvalhozilebskdgnbtpzr']}, {'input': '9 3\\r\\njel\\r\\njws\\r\\ntab\\r\\nvyo\\r\\nkgm\\r\\npls\\r\\nabq\\r\\nbjx\\r\\nljt\\r\\n', 'output': ['elwtabvyokgmplabqbxlt']}, {'input': '7 6\\r\\neklgxi\\r\\nxmpzgf\\r\\nxvwcmr\\r\\nrqssed\\r\\nouiqpt\\r\\ndueiok\\r\\nbbuorv\\r\\n', 'output': ['eklgximpzgfvwcmrrqedoiqptdeiokuorv']}, {'input': '14 27\\r\\npzoshpvvjdpmwfoeojapmkxjrnk\\r\\nitoojpcorxjdxrwyewtmmlhjxhx\\r\\ndoyopbwusgsmephixzcilxpskxh\\r\\nygpvepeuxjbnezdrnjfwdhjwjka\\r\\nrfjlbypoalbtjwrpjxzenmeipfg\\r\\nkhjhrtktcnajrnbefhpavxxfnlx\\r\\nvwlwumqpfegjgvoezevqsolaqhh\\r\\npdrvrtzqsoujqfeitkqgtxwckrl\\r\\nxtepjflcxcrfomhqimhimnzfxzg\\r\\nwhkfkfvvjwkmwhfgeovwowshyhw\\r\\nolchgmhiehumivswgtfyhqfagbp\\r\\ntdudrkttpkryvaiepsijuejqvmq\\r\\nmuratfqqdbfpefmhjzercortroh\\r\\nwxkebkzchupxumfizftgqvuwgau\\r\\n', 'output': ['zshdanicdyldybwgclygzrhkayatwxznmicbpvlupfsoewcleploqngsyolceswtyqbpyasmuadbpcehqva']}, {'input': '1 100\\r\\nysijllpanprcrrtvokqmmupuptvawhvnekeybdkzqaduotmkfwybqvytkbjfzyqztmxckizheorvkhtyoohbswcmhknyzlgxordu\\r\\n', 'output': ['g']}, {'input': '2 100\\r\\ngplwoaggwuxzutpwnmxhotbexntzmitmcvnvmuxknwvcrnsagvdojdgaccfbheqojgcqievijxapvepwqolmnjqsbejtnkaifstp\\r\\noictcmphxbrylaarcwpruiastazvmfhlcgticvwhpxyiiqokxcjgwlnfykkqdsfmrfaedzchrfzlwdclqjxvidhomhxqnlmuoowg\\r\\n', 'output': ['rbe']}, {'input': '3 100\\r\\nonmhsoxoexfwavmamoecptondioxdjsoxfuqxkjviqnjukwqjwfadnohueaxrkreycicgxpmogijgejxsprwiweyvwembluwwqhj\\r\\nuofldyjyuhzgmkeurawgsrburovdppzjiyddpzxslhyesvmuwlgdjvzjqqcpubfgxliulyvxxloqyhxspoxvhllbrajlommpghlv\\r\\nvdohhghjlvihrzmwskxfatoodupmnouwyyfarhihxpdnbwrvrysrpxxptdidpqabwbfnxhiziiiqtozqjtnitgepxjxosspsjldo\\r\\n', 'output': ['blkck']}, {'input': '100 1\\r\\na\\r\\nm\\r\\nn\\r\\nh\\r\\na\\r\\nx\\r\\nt\\r\\na\\r\\no\\r\\np\\r\\nj\\r\\nz\\r\\nr\\r\\nk\\r\\nq\\r\\nl\\r\\nb\\r\\nr\\r\\no\\r\\ni\\r\\ny\\r\\ni\\r\\np\\r\\ni\\r\\nt\\r\\nn\\r\\nd\\r\\nc\\r\\nz\\r\\np\\r\\nu\\r\\nn\\r\\nw\\r\\ny\\r\\ng\\r\\ns\\r\\nt\\r\\nm\\r\\nz\\r\\ne\\r\\nv\\r\\ng\\r\\ny\\r\\nj\\r\\nd\\r\\nz\\r\\ny\\r\\na\\r\\nn\\r\\nx\\r\\nk\\r\\nd\\r\\nq\\r\\nn\\r\\nv\\r\\ng\\r\\nk\\r\\ni\\r\\nk\\r\\nf\\r\\na\\r\\nb\\r\\nw\\r\\no\\r\\nu\\r\\nw\\r\\nk\\r\\nk\\r\\nb\\r\\nz\\r\\nu\\r\\ni\\r\\nu\\r\\nv\\r\\ng\\r\\nv\\r\\nx\\r\\ng\\r\\np\\r\\ni\\r\\nz\\r\\ns\\r\\nv\\r\\nq\\r\\ns\\r\\nb\\r\\nw\\r\\ne\\r\\np\\r\\nk\\r\\nt\\r\\np\\r\\nd\\r\\nr\\r\\ng\\r\\nd\\r\\nk\\r\\nm\\r\\nf\\r\\nd\\r\\n', 'output': ['hlc']}, {'input': '100 2\\r\\nhd\\r\\ngx\\r\\nmz\\r\\nbq\\r\\nof\\r\\nst\\r\\nzc\\r\\ndg\\r\\nth\\r\\nba\\r\\new\\r\\nbw\\r\\noc\\r\\now\\r\\nvh\\r\\nqp\\r\\nin\\r\\neh\\r\\npj\\r\\nat\\r\\nnn\\r\\nbr\\r\\nij\\r\\nco\\r\\nlv\\r\\nsa\\r\\ntb\\r\\nbl\\r\\nsr\\r\\nxa\\r\\nbz\\r\\nrp\\r\\nsz\\r\\noi\\r\\nec\\r\\npw\\r\\nhf\\r\\njm\\r\\nwu\\r\\nhq\\r\\nra\\r\\npv\\r\\ntc\\r\\ngv\\r\\nik\\r\\nux\\r\\ntz\\r\\nbf\\r\\nty\\r\\ndk\\r\\nwo\\r\\nor\\r\\nza\\r\\nkv\\r\\nqt\\r\\nfa\\r\\njy\\r\\nbk\\r\\nuv\\r\\ngk\\r\\ncz\\r\\nds\\r\\nie\\r\\noq\\r\\nmf\\r\\nxn\\r\\nql\\r\\nxs\\r\\nfb\\r\\niv\\r\\ncj\\r\\nkn\\r\\nns\\r\\nlg\\r\\nji\\r\\nha\\r\\naj\\r\\ndg\\r\\nfj\\r\\nut\\r\\nsg\\r\\nju\\r\\noc\\r\\nov\\r\\nhe\\r\\nnw\\r\\nbl\\r\\nlp\\r\\nbx\\r\\nnm\\r\\nyq\\r\\ncw\\r\\nov\\r\\nxk\\r\\npg\\r\\noh\\r\\npl\\r\\nuo\\r\\ngf\\r\\nul\\r\\n', 'output': ['dvy']}, {'input': '100 3\\r\\nruy\\r\\nmye\\r\\njgp\\r\\nscn\\r\\nktq\\r\\nalx\\r\\nmvk\\r\\nlpm\\r\\nkry\\r\\norb\\r\\nmpu\\r\\nzcv\\r\\nlge\\r\\nkft\\r\\ndzp\\r\\ntfb\\r\\nhqz\\r\\nuur\\r\\nhry\\r\\nzjx\\r\\ncuo\\r\\nqqc\\r\\ntih\\r\\nenj\\r\\nvnp\\r\\nbwi\\r\\nzzh\\r\\nhkc\\r\\nwdr\\r\\nldh\\r\\nvel\\r\\nizj\\r\\nfhb\\r\\nqrn\\r\\nqpp\\r\\nvzs\\r\\nlhg\\r\\nkee\\r\\nlbq\\r\\nzhy\\r\\nwcl\\r\\nyaa\\r\\nton\\r\\nfly\\r\\nkyw\\r\\nept\\r\\ngwq\\r\\ncoe\\r\\nopd\\r\\neez\\r\\nnmx\\r\\nnjg\\r\\nwhy\\r\\nvel\\r\\nafq\\r\\nnbq\\r\\nulx\\r\\noxs\\r\\nbbo\\r\\nyhx\\r\\nfmz\\r\\nnrg\\r\\nnfm\\r\\njek\\r\\nbeu\\r\\ntya\\r\\nxgs\\r\\nsgg\\r\\nnkq\\r\\nbbv\\r\\nwkd\\r\\ntns\\r\\nfdt\\r\\neox\\r\\nobc\\r\\neab\\r\\nkkj\\r\\noub\\r\\ngji\\r\\nrht\\r\\nozv\\r\\nysk\\r\\nsbt\\r\\nflf\\r\\npbu\\r\\nlxb\\r\\npzs\\r\\nrzh\\r\\ncea\\r\\nkmi\\r\\nuea\\r\\nncc\\r\\nzng\\r\\nvkn\\r\\njhn\\r\\njqw\\r\\nlqc\\r\\nmbt\\r\\nlov\\r\\ngam\\r\\n', 'output': ['tvdiixs']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m;\n  cin >> n >> m;\n  vector<string> s(n);\n  for (int i = 0; i < n; i++) cin >> s[i];\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      bool flag = true;\n      for (int k = 0; k < n; k++) {\n        if (i!= k && s[i][j] == s[k][j]) flag = false;\n      }\n      if (flag) cout << s[i][j];\n    }\n  }\n  cout << endl;\n  return 0;\n}\n"}
{"src_uid": "d90da1e932a6aa546bec4e1bd4b1fbec", "id": 9, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '3 3\\r\\n1 2 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['6\\r\\n']}, {'input': '3 2\\r\\n2 3 4\\r\\n2 3\\r\\n2 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 4\\r\\n1 1 1 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n10 10 5 1\\r\\n2 1\\r\\n3 1\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 0\\r\\n9 8 2 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 5 9 6\\r\\n3 2\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 1 10 1\\r\\n2 1\\r\\n3 2\\r\\n1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n1 2 8 6\\r\\n1 3\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['15\\r\\n']}, {'input': '4 4\\r\\n9 3 3 1\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n4 3\\r\\n', 'output': ['15\\r\\n']}, {'input': '4 3\\r\\n6 8 10 1\\r\\n2 3\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 5\\r\\n4 10 3 9\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n2 4\\r\\n4 3\\r\\n', 'output': ['17\\r\\n']}, {'input': '4 2\\r\\n2 9 8 4\\r\\n1 3\\r\\n4 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 3 4 4\\r\\n2 1\\r\\n4 1\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 6\\r\\n39 15 73 82 37 40\\r\\n2 1\\r\\n5 1\\r\\n1 6\\r\\n2 6\\r\\n6 3\\r\\n4 6\\r\\n', 'output': ['94\\r\\n']}, {'input': '6 7\\r\\n85 2 34 6 83 61\\r\\n1 2\\r\\n2 3\\r\\n4 2\\r\\n4 3\\r\\n1 5\\r\\n4 5\\r\\n6 3\\r\\n', 'output': ['42\\r\\n']}, {'input': '6 8\\r\\n64 44 5 31 14 16\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n2 5\\r\\n3 5\\r\\n6 1\\r\\n6 3\\r\\n6 4\\r\\n', 'output': ['85\\r\\n']}, {'input': '6 8\\r\\n36 19 99 8 52 77\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n4 3\\r\\n1 5\\r\\n5 4\\r\\n1 6\\r\\n6 2\\r\\n', 'output': ['132\\r\\n']}, {'input': '6 5\\r\\n59 69 52 38 93 53\\r\\n4 2\\r\\n1 5\\r\\n6 1\\r\\n4 6\\r\\n5 6\\r\\n', 'output': ['205\\r\\n']}, {'input': '6 11\\r\\n95 81 74 94 60 69\\r\\n3 2\\r\\n1 4\\r\\n4 2\\r\\n3 4\\r\\n1 5\\r\\n5 2\\r\\n5 3\\r\\n1 6\\r\\n2 6\\r\\n3 6\\r\\n4 6\\r\\n', 'output': ['215\\r\\n']}, {'input': '6 8\\r\\n69 36 41 23 91 35\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n1 4\\r\\n3 4\\r\\n3 5\\r\\n5 4\\r\\n4 6\\r\\n', 'output': ['133\\r\\n']}, {'input': '6 6\\r\\n33 76 98 59 4 69\\r\\n1 2\\r\\n3 2\\r\\n5 1\\r\\n2 5\\r\\n4 5\\r\\n6 5\\r\\n', 'output': ['113\\r\\n']}, {'input': '6 6\\r\\n92 56 15 83 30 28\\r\\n3 1\\r\\n4 1\\r\\n2 5\\r\\n5 4\\r\\n2 6\\r\\n6 3\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 10\\r\\n17 5 55 24 55 74\\r\\n1 3\\r\\n2 3\\r\\n3 4\\r\\n5 1\\r\\n5 2\\r\\n5 3\\r\\n4 5\\r\\n6 2\\r\\n6 3\\r\\n6 5\\r\\n', 'output': ['115\\r\\n']}, {'input': '3 3\\r\\n1000000 1000000 1000000\\r\\n2 1\\r\\n1 3\\r\\n3 2\\r\\n', 'output': ['3000000\\r\\n']}, {'input': '3 0\\r\\n1 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n100000 100000 100001\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['300001\\r\\n']}, {'input': '3 3\\r\\n1 1 999999\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['1000001\\r\\n']}, {'input': '3 3\\r\\n999999 1 1\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['1000001\\r\\n']}, {'input': '3 3\\r\\n1000000 1000000 1000000\\r\\n1 2\\r\\n2 3\\r\\n1 3\\r\\n', 'output': ['3000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m;\n  cin >> n >> m;\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) cin >> a[i];\n  vector<vector<int> > b(n);\n  for (int i = 0; i < m; i++) {\n    int x, y;\n    cin >> x >> y;\n    x--;\n    y--;\n    b[x].push_back(y);\n    b[y].push_back(x);\n  }\n  int ans = -1;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      if (i == j) continue;\n      for (int k = 0; k < n; k++) {\n        if (i == k || j == k) continue;\n        if (binary_search(b[i].begin(), b[i].end(), k)) {\n          ans = max(ans, a[i] + a[j] + a[k]);\n        }\n      }\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"}
{"src_uid": "138fd96bf5a677a6d59c20f88fd612f1", "id": 10, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1400, "testcases": "[{'input': '5 15 15\\r\\n', 'output': ['11\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '2 3 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 99 11\\r\\n', 'output': ['11\\r\\n']}, {'input': '3 254 18\\r\\n', 'output': ['16\\r\\n1\\r\\n1\\r\\n']}, {'input': '4 324 77\\r\\n', 'output': ['74\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '5 315 90\\r\\n', 'output': ['86\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '6 225 59\\r\\n', 'output': ['54\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '7 351 29\\r\\n', 'output': ['23\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '100 913723780421 955988\\r\\n', 'output': ['-1\\r\\n']}, {'input': '200 894176381082 945808\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1000 824905348050 909242\\r\\n', 'output': ['-1\\r\\n']}, {'input': '31000 819461299082 936240\\r\\n', 'output': ['-1\\r\\n']}, {'input': '44000 772772899626 923074\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99999 681508136225 925533\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99976 664640815001 915230\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100000 729199960625 953931\\r\\n', 'output': ['-1\\r\\n']}, {'input': '50 890543266647 943735\\r\\n', 'output': ['-1\\r\\n']}, {'input': '60 817630084499 904288\\r\\n', 'output': ['904229\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '99999 716046078026 946193\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10000 950051796437 984705\\r\\n', 'output': ['-1\\r\\n']}, {'input': '999 992972391401 997478\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 983300308227 991615\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 912219830404 955103\\r\\n', 'output': ['955102\\r\\n1\\r\\n']}, {'input': '3 934371623645 966631\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 857839030421 926199\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7 897398130730 947317\\r\\n', 'output': ['-1\\r\\n']}, {'input': '60 833021290059 912759\\r\\n', 'output': ['912700\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '1 860113420929 927423\\r\\n', 'output': ['927423\\r\\n']}, {'input': '2 933669982757 966267\\r\\n', 'output': ['966266\\r\\n1\\r\\n']}, {'input': '3 933157932003 966003\\r\\n', 'output': ['966001\\r\\n1\\r\\n1\\r\\n']}, {'input': '4 944626542564 971922\\r\\n', 'output': ['971919\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '7 937519681542 968262\\r\\n', 'output': ['968256\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '100000 1000000000000 1000000\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99999 999999999999 999999\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '11 10 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 5 10\\r\\n', 'output': ['10\\r\\n']}, {'input': '10 3 8\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 37 10\\r\\n', 'output': ['6\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '5 1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 1000000000000 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1000000\\r\\n', 'output': ['1000000\\r\\n']}, {'input': '100000 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100000 1000000000000 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1000000000000 1000000\\r\\n', 'output': ['1000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n, x, y;\n  cin >> n >> x >> y;\n  if (n == 1) {\n    if (y >= x)\n      cout << y << endl;\n    else\n      cout << -1 << endl;\n    return 0;\n  }\n  if (y < n) {\n    cout << -1 << endl;\n    return 0;\n  }\n  if (x == 1) {\n    for (int i = 0; i < n; i++) cout << 1 << endl;\n    return 0;\n  }\n  if (x == 2) {\n    if (y >= 2 * n) {\n      for (int i = 0; i < n; i++) cout << 1 << endl;\n      for (int i = 0; i < n; i++) cout << 2 << endl;\n    } else {\n      cout << -1 << endl;\n    }\n    return 0;\n  }\n  if (x == 3) {\n    if (y >= 3 * n) {\n      for (int i = 0; i < n; i++) cout << 1 << endl;\n      for (int i = 0; i < n; i++) cout << 2 << endl;\n      for (int i = 0; i < n; i++) cout << 3 << endl;\n    } else {\n      cout << -1 << endl;\n    }\n    return 0;\n  }\n  if (x == 4) {\n    if (y >= 4 * n) {\n      for (int i = 0; i < n; i++) cout << 1 << endl;\n      for (int i = 0; i < n; i++) cout << 2 << endl;\n      for (int i = 0; i < n; i++) cout << 3 << endl;\n      for (int i = 0; i < n; i++) cout << 4 << endl;\n    } else {\n      cout << -1 << endl;\n    }\n    return 0;\n  }\n  if (x == 5) {\n    if (y >= 5 * n) {\n      for (int i = 0; i < n; i++) cout << 1 << endl;\n      for (int i = 0; i < n; i++) cout << 2 << endl;\n      for (int i = 0; i < n; i++) cout << 3 << endl;\n      for (int i = 0; i < n; i++) cout << 4 << endl;\n      for (int i = 0; i < n; i++) cout << 5 << endl;\n    } else {\n      cout << -1 << endl;\n    }\n    return 0;\n  }\n  if (x == 6) {\n    if (y >= 6 * n) {\n      for (int i = 0; i < n; i++) cout << 1 << endl;\n      for (int i = 0; i < n; i++) cout << 2 << endl;\n      for (int i = 0; i < n; i++) cout << 3 << endl;\n      for (int i = 0; i < n; i++) cout << 4 << endl;\n      for (int i = 0; i < n; i++) cout << 5 << endl;\n      for (int i = 0; i < n; i++) cout << 6 << endl;\n    } else {\n      cout << -1 << endl;\n    }\n    return 0;\n  }\n  if (x == 7) {\n    if (y >= 7 * n) {\n      for (int i = 0; i < n; i++) cout << 1 << endl;\n      for (int i = 0; i < n; i++) cout << 2 << endl;\n      for (int i = 0; i < n; i++) cout << 3 << endl;\n      for (int i = 0; i < n; i++) cout << 4 << endl;\n      for (int i = 0; i < n; i++) cout << 5 << endl;\n      for (int i = 0; i < n; i++) cout << 6 << endl;\n      for (int i = 0; i < n; i++) cout << 7 << endl;\n    } else {\n      cout << -1 << endl;\n    }\n    return 0;\n  }\n  if (x == 8) {\n    if (y >= 8 * n) {\n      for (int i = 0; i < n; i++) cout << 1 << endl;\n      for (int i = 0; i < n; i++) cout << 2 << endl;\n      for (int i = 0; i < n; i++) cout << 3 << endl;\n      for (int i = 0; i < n; i++) cout << 4 << endl;\n      for (int i = 0; i < n; i++) cout << 5 << endl;\n      for (int i = 0; i < n; i++) cout << 6 << endl;\n      for (int i = 0; i < n; i++) cout << 7 << endl;\n      for (int i = 0; i < n; i++) cout << 8 << endl;\n    } else {\n      cout << -1 << endl;\n    }\n    return 0;\n  }\n  if (x == 9) {\n    if (y >= 9 * n) {\n      for (int i = 0; i < n; i++) cout << 1 << endl;\n      for (int i = 0; i < n; i++) cout << 2 << endl;\n      for (int i = 0; i < n; i++) cout << 3 << endl;\n      for (int i = 0; i < n; i++) cout << 4 << endl;\n      for (int i = 0; i < n; i++) cout << 5 << endl;\n      for (int i = 0; i < n; i++) cout << 6 << endl;\n      for (int i = 0; i < n; i++) cout << 7 << endl;\n      for (int i = 0; i < n; i++) cout << 8 << endl;\n      for (int i = 0; i < n; i++) cout << 9 << endl;\n    } else {\n      cout << -1 << endl;\n    }\n    return 0;\n  }\n  if (x == 10) {\n    if (y >= 10 * n) {\n      for (int i = 0; i < n; i++) cout << 1 << endl;\n      for (int i = 0; i < n; i++) cout << 2 << endl;\n      for (int i = 0; i < n; i++) cout << 3 << endl;\n      for (int i = 0; i < n; i++) cout << 4 << endl;\n      for (int i = 0; i < n; i++) cout << 5 << endl;\n      for (int i = 0; i < n; i++) cout << 6 << endl;\n      for (int i = 0; i < n; i++) cout << 7 << endl;\n      for (int i = 0; i < n; i++) cout << 8 << endl;\n      for (int i = 0; i < n; i++) cout << 9 << endl;\n      for (int i = 0; i < n; i++) cout << 10 << endl;\n    } else {\n      cout << -1 << endl;\n    }\n    return 0;\n  }\n  if (x == 11) {\n    if (y >= 11 * n) {\n      for (int i = 0; i < n; i++) cout << 1 << endl;\n      for (int i = 0; i < n; i++) cout << 2 << endl;\n      for (int i = 0; i < n; i++) cout << 3 << endl;\n      for (int i = 0; i < n; i++) cout << 4 << endl;\n      for (int i = 0; i < n; i++) cout << 5 << endl;\n      for (int i = 0; i < n; i++) cout << 6 << endl;\n      for (int i = 0; i < n; i++) cout << 7 << endl;\n      for (int i = 0; i < n; i++) cout << 8 << endl;\n      for (int i"}
{"src_uid": "639b8b8d0dc42df46b139f0aeb3a7a0a", "id": 11, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '047\\r\\n', 'output': ['4']}, {'input': '16\\r\\n', 'output': ['-1']}, {'input': '472747\\r\\n', 'output': ['7']}, {'input': '1925\\r\\n', 'output': ['-1']}, {'input': '5486846414848445484\\r\\n', 'output': ['4']}, {'input': '516160414\\r\\n', 'output': ['4']}, {'input': '9458569865994896\\r\\n', 'output': ['4']}, {'input': '94894948577777777884888\\r\\n', 'output': ['7']}, {'input': '00000\\r\\n', 'output': ['-1']}, {'input': '9589\\r\\n', 'output': ['-1']}, {'input': '7665711\\r\\n', 'output': ['7']}, {'input': '538772857\\r\\n', 'output': ['7']}, {'input': '8679647744\\r\\n', 'output': ['4']}, {'input': '23607019991994\\r\\n', 'output': ['4']}, {'input': '86145305734278927901987281894864719533015270066521\\r\\n', 'output': ['7']}, {'input': '22438808523154336905543301642540261833729318191\\r\\n', 'output': ['4']}, {'input': '290732082244359495795943967215788554387079\\r\\n', 'output': ['7']}, {'input': '6363333480463521971676988087733137609715\\r\\n', 'output': ['7']}, {'input': '637789221789855555993957058\\r\\n', 'output': ['7']}, {'input': '11536708648794535307468278326553811\\r\\n', 'output': ['7']}, {'input': '619433861636130069773\\r\\n', 'output': ['7']}, {'input': '7\\r\\n', 'output': ['7']}, {'input': '00000000000000000000000000000000000000000000000000\\r\\n', 'output': ['-1']}, {'input': '0000000000000000000000000000000000000047\\r\\n', 'output': ['4']}, {'input': '8175012266795100056032281135654854227489558885698\\r\\n', 'output': ['4']}, {'input': '8862708665262955384044574268728167940741129\\r\\n', 'output': ['4']}, {'input': '538772857\\r\\n', 'output': ['7']}, {'input': '94872076199824813574576121510803\\r\\n', 'output': ['7']}, {'input': '44101164480392494025995467\\r\\n', 'output': ['4']}, {'input': '0445460407410702955646485\\r\\n', 'output': ['4']}, {'input': '91076008557028243309\\r\\n', 'output': ['7']}, {'input': '33120039\\r\\n', 'output': ['-1']}, {'input': '4\\r\\n', 'output': ['4']}, {'input': '74747474747474747474747474747474747474747474747474\\r\\n', 'output': ['4']}, {'input': '74747474747474747474747774747474747474747474747474\\r\\n', 'output': ['7']}, {'input': '74747474747474747474747474747474744474747474747474\\r\\n', 'output': ['4']}, {'input': '47474747474747474747474747474747474747474747474747\\r\\n', 'output': ['4']}, {'input': '40\\r\\n', 'output': ['4']}, {'input': '07\\r\\n', 'output': ['7']}, {'input': '007\\r\\n', 'output': ['7']}, {'input': '44\\r\\n', 'output': ['4']}, {'input': '74\\r\\n', 'output': ['4']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s;\n  cin >> s;\n  int n = s.size();\n  int dp[n + 1][n + 1];\n  for (int i = 0; i <= n; i++) {\n    for (int j = 0; j <= n; j++) {\n      dp[i][j] = 0;\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (s[i] == '4' || s[i] == '7') {\n      dp[i][i] = 1;\n    }\n  }\n  for (int i = 1; i < n; i++) {\n    for (int j = 0; j < n - i; j++) {\n      if (s[j] == '4' || s[j] == '7') {\n        if (s[j + 1] == '4' || s[j + 1] == '7') {\n          dp[j][j + i] = dp[j + 1][j + i] + 1;\n        }\n      }\n    }\n  }\n  int max = 0;\n  int maxi = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = i; j < n; j++) {\n      if (dp[i][j] > max) {\n        max = dp[i][j];\n        maxi = j - i + 1;\n      }\n    }\n  }\n  if (max == 0) {\n    cout << -1 << endl;\n  } else {\n    for (int i = 0; i < n - maxi + 1; i++) {\n      if (s[i] == '4' || s[i] == '7') {\n        cout << s[i];\n        break;\n      }\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "41dfc86d341082dd96e089ac5433dc04", "id": 12, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': ['7 2\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['59 9\\r\\n'], 'output': ['54\\r\\n']}, {'input': ['1 9\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['11 2\\r\\n'], 'output': ['7\\r\\n']}, {'input': ['747 2\\r\\n'], 'output': ['376\\r\\n']}, {'input': ['6578 2\\r\\n'], 'output': ['3293\\r\\n']}, {'input': ['37212 2\\r\\n'], 'output': ['18609\\r\\n']}, {'input': ['12357 2\\r\\n'], 'output': ['6181\\r\\n']}, {'input': ['7998332 2\\r\\n'], 'output': ['3999172\\r\\n']}, {'input': ['86275251 2\\r\\n'], 'output': ['43137632\\r\\n']}, {'input': ['75584551 2\\r\\n'], 'output': ['37792280\\r\\n']}, {'input': ['6 3\\r\\n'], 'output': ['5\\r\\n']}, {'input': ['43 4\\r\\n'], 'output': ['33\\r\\n']}, {'input': ['811 3\\r\\n'], 'output': ['543\\r\\n']}, {'input': ['3410 4\\r\\n'], 'output': ['2560\\r\\n']}, {'input': ['21341 4\\r\\n'], 'output': ['16009\\r\\n']}, {'input': ['696485 4\\r\\n'], 'output': ['522368\\r\\n']}, {'input': ['8856748 3\\r\\n'], 'output': ['5904504\\r\\n']}, {'input': ['2959379 4\\r\\n'], 'output': ['2219538\\r\\n']}, {'input': ['831410263 3\\r\\n'], 'output': ['554273516\\r\\n']}, {'input': ['2 5\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['19 6\\r\\n'], 'output': ['17\\r\\n']}, {'input': ['715 7\\r\\n'], 'output': ['615\\r\\n']}, {'input': ['9122 5\\r\\n'], 'output': ['7300\\r\\n']}, {'input': ['89117 6\\r\\n'], 'output': ['74268\\r\\n']}, {'input': ['689973 7\\r\\n'], 'output': ['591408\\r\\n']}, {'input': ['3024524 5\\r\\n'], 'output': ['2419624\\r\\n']}, {'input': ['67127156 6\\r\\n'], 'output': ['55939302\\r\\n']}, {'input': ['412262167 7\\r\\n'], 'output': ['353367574\\r\\n']}, {'input': ['6 8\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['59 9\\r\\n'], 'output': ['54\\r\\n']}, {'input': ['246 10\\r\\n'], 'output': ['222\\r\\n']}, {'input': ['5314 8\\r\\n'], 'output': ['4651\\r\\n']}, {'input': ['15309 9\\r\\n'], 'output': ['13609\\r\\n']}, {'input': ['35648 10\\r\\n'], 'output': ['32085\\r\\n']}, {'input': ['3018012 8\\r\\n'], 'output': ['2640764\\r\\n']}, {'input': ['92153348 9\\r\\n'], 'output': ['81914089\\r\\n']}, {'input': ['177583558 10\\r\\n'], 'output': ['159825206\\r\\n']}, {'input': ['1000000000 2\\r\\n'], 'output': ['500000008\\r\\n']}, {'input': ['1000000000 3\\r\\n'], 'output': ['666666672\\r\\n']}, {'input': ['1000000000 4\\r\\n'], 'output': ['750000005\\r\\n']}, {'input': ['1000000000 5\\r\\n'], 'output': ['800000003\\r\\n']}, {'input': ['1000000000 6\\r\\n'], 'output': ['833333338\\r\\n']}, {'input': ['1000000000 7\\r\\n'], 'output': ['857142861\\r\\n']}, {'input': ['1000000000 8\\r\\n'], 'output': ['875000004\\r\\n']}, {'input': ['1000000000 9\\r\\n'], 'output': ['888888894\\r\\n']}, {'input': ['1000000000 10\\r\\n'], 'output': ['900000001\\r\\n']}, {'input': ['1 4\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['2 10\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1 2\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['6 8\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['987862820 9\\r\\n'], 'output': ['878100288\\r\\n']}, {'input': ['979591791 9\\r\\n'], 'output': ['870748262\\r\\n']}, {'input': ['948889213 9\\r\\n'], 'output': ['843457081\\r\\n']}, {'input': ['8 9\\r\\n'], 'output': ['8\\r\\n']}, {'input': ['999999999 10\\r\\n'], 'output': ['900000000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long n, k, i, j, sum = 0, ans = 0;\n  cin >> n >> k;\n  for (i = 1; i <= 1000000000; i *= k) {\n    sum += i;\n    if (sum >= n) {\n      ans = i;\n      break;\n    }\n  }\n  cout << ans;\n  return 0;\n}\n"}
{"src_uid": "65fea461d3caa5a932d1e2c13e99a59e", "id": 13, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '5 50\\r\\n1 2 3 4 5\\r\\n', 'output': ['12.000000\\r\\n11.000000\\r\\n10.000000\\r\\n9.000000\\r\\n8.000000\\r\\n']}, {'input': '2 2\\r\\n1 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 2\\r\\n1 1\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n']}, {'input': '3 2\\r\\n1 2 1\\r\\n', 'output': ['1.000000\\r\\n0.000000\\r\\n1.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 1\\r\\n', 'output': ['2.000000\\r\\n1.000000\\r\\n2.000000\\r\\n']}, {'input': '10 95\\r\\n0 0 0 0 0 1 1 1 1 1\\r\\n', 'output': ['10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 3\\r\\n', 'output': ['2.666667\\r\\n1.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n1 3 2\\r\\n', 'output': ['2.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n2 1 3\\r\\n', 'output': ['1.666667\\r\\n2.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n2 3 1\\r\\n', 'output': ['1.666667\\r\\n0.666667\\r\\n2.666667\\r\\n']}, {'input': '3 5\\r\\n3 1 2\\r\\n', 'output': ['0.666667\\r\\n2.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n3 2 1\\r\\n', 'output': ['0.666667\\r\\n1.666667\\r\\n2.666667\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '2 1\\r\\n2 2\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '3 2\\r\\n2 1 2\\r\\n', 'output': ['0.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '3 3\\r\\n2 2 1\\r\\n', 'output': ['0.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 3\\r\\n3 1 2\\r\\n', 'output': ['0.000000\\r\\n2.000000\\r\\n1.000000\\r\\n']}, {'input': '100 100\\r\\n37 97 75 52 33 29 51 22 33 37 45 96 96 60 82 58 86 71 28 73 38 50 6 6 90 17 26 76 13 41 100 47 17 93 4 1 56 16 41 74 25 17 69 61 39 37 96 73 49 93 52 14 62 24 91 30 9 97 52 100 6 16 85 8 12 26 10 3 94 63 80 27 29 78 9 48 79 64 60 18 98 75 81 35 24 81 2 100 23 70 21 60 98 38 29 29 58 37 49 72\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 100\\r\\n1 3 7 7 9 5 9 3 7 8 10 1 3 10 10 6 1 3 10 4 3 9 4 9 5 4 9 2 8 7 4 3 3 3 5 10 8 9 10 1 9 2 4 8 3 10 9 2 3 9 8 2 4 4 4 7 1 1 7 3 7 8 9 5 1 2 6 7 1 10 9 10 5 10 1 10 5 2 4 3 10 1 6 5 6 7 8 9 3 8 6 10 8 7 2 3 8 6 3 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 61\\r\\n81 80 83 72 87 76 91 92 77 93 77 94 76 73 71 88 88 76 87 73 89 73 85 81 79 90 76 73 82 93 79 93 71 75 72 71 78 85 92 89 88 93 74 87 71 94 74 87 85 89 90 93 86 94 92 87 90 91 75 73 90 84 92 94 92 79 74 85 74 74 89 76 84 84 84 83 86 84 82 71 76 74 83 81 89 73 73 74 71 77 90 94 73 94 73 75 93 89 84 92\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10 100\\r\\n52 52 51 52 52 52 51 51 52 52\\r\\n', 'output': ['9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n']}, {'input': '10 100\\r\\n13 13 13 13 12 13 12 13 12 12\\r\\n', 'output': ['9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n10.600000\\r\\n']}, {'input': '10 100\\r\\n50 51 47 51 48 46 49 51 46 51\\r\\n', 'output': ['9.000000\\r\\n8.000000\\r\\n12.000000\\r\\n8.000000\\r\\n11.000000\\r\\n13.000000\\r\\n10.000000\\r\\n8.000000\\r\\n13.000000\\r\\n8.000000\\r\\n']}, {'input': '10 100\\r\\n13 13 9 12 12 11 13 8 10 13\\r\\n', 'output': ['8.400000\\r\\n8.400000\\r\\n12.400000\\r\\n9.400000\\r\\n9.400000\\r\\n10.400000\\r\\n8.400000\\r\\n13.400000\\r\\n11.400000\\r\\n8.400000\\r\\n']}, {'input': '13 97\\r\\n52 52 51 51 52 52 51 52 51 51 52 52 52\\r\\n', 'output': ['7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n7.076923\\r\\n']}, {'input': '17 99\\r\\n13 13 12 13 11 12 12 12 13 13 11 13 13 13 13 12 13\\r\\n', 'output': ['5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n7.294118\\r\\n6.294118\\r\\n6.294118\\r\\n6.294118\\r\\n5.294118\\r\\n5.294118\\r\\n7.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n']}, {'input': '9 91\\r\\n52 51 50 52 52 51 50 48 51\\r\\n', 'output': ['8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n8.888889\\r\\n8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n12.888889\\r\\n9.888889\\r\\n']}, {'input': '17 91\\r\\n13 13 13 13 12 12 13 13 12 13 12 13 10 12 13 13 12\\r\\n', 'output': ['4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n7.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n']}, {'input': '2 3\\r\\n1 1\\r\\n', 'output': ['1.500000\\r\\n1.500000\\r\\n']}, {'input': '2 90\\r\\n0 89\\r\\n', 'output': ['89.500000\\r\\n0.500000\\r\\n']}, {'input': '4 17\\r\\n3 4 8 1\\r\\n', 'output': ['5.250000\\r\\n4.250000\\r\\n0.250000\\r\\n7.250000\\r\\n']}, {'input': '2 9\\r\\n5 5\\r\\n', 'output': ['4.500000\\r\\n4.500000\\r\\n']}, {'input': '7 28\\r\\n1 3 9 10 9 6 10\\r\\n', 'output': ['9.857143\\r\\n7.857143\\r\\n1.857143\\r\\n0.857143\\r\\n1.857143\\r\\n4.857143\\r\\n0.857143\\r\\n']}, {'input': '5 11\\r\\n1 2 3 4 5\\r\\n', 'output': ['4.200000\\r\\n3.200000\\r\\n2.200000\\r\\n1.200000\\r\\n0.200000\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '5 3\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n']}, {'input': '3 1\\r\\n100 100 100\\r\\n', 'output': ['0.333333\\r\\n0.333333\\r\\n0.333333\\r\\n']}, {'input': '5 50\\r\\n2 2 3 2 2\\r\\n', 'output': ['10.200000\\r\\n10.200000\\r\\n9.200000\\r\\n10.200000\\r\\n10.200000\\r\\n']}, {'input': '3 3\\r\\n2 2 3\\r\\n', 'output': ['1.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '2 52\\r\\n2 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 2\\r\\n2 2 3\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n0.000000\\r\\n']}, {'input': '5 1\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n']}, {'input': '2 4\\r\\n1 2\\r\\n', 'output': ['2.500000\\r\\n1.500000\\r\\n']}, {'input': '5 49\\r\\n1 2 3 4 5\\r\\n', 'output': ['11.800000\\r\\n10.800000\\r\\n9.800000\\r\\n8.800000\\r\\n7.800000\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, b;\n  cin >> n >> b;\n  int a[n];\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int sum = 0;\n  for (int i = 0; i < n; i++) sum += a[i];\n  if (sum > b) {\n    cout << -1;\n    return 0;\n  }\n  int diff = b - sum;\n  int avg = diff / n;\n  int rem = diff % n;\n  for (int i = 0; i < n; i++) {\n    cout << fixed << setprecision(6) << (a[i] + avg + (rem > 0? 1 : 0))\n         << endl;\n    rem--;\n  }\n  return 0;\n}\n"}
{"src_uid": "062a171cc3ea717ea95ede9d7a1c3a43", "id": 14, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1300, "testcases": "[{'input': '5 5 3 2\\r\\n', 'output': ['2']}, {'input': '7 5 5 2\\r\\n', 'output': ['2']}, {'input': '4 4 4 4\\r\\n', 'output': ['1']}, {'input': '1 1 1 1\\r\\n', 'output': ['1']}, {'input': '4000 1 2 3\\r\\n', 'output': ['4000']}, {'input': '4000 3 4 5\\r\\n', 'output': ['1333']}, {'input': '10 3 4 5\\r\\n', 'output': ['3']}, {'input': '100 23 15 50\\r\\n', 'output': ['2']}, {'input': '3119 3515 1021 7\\r\\n', 'output': ['11']}, {'input': '918 102 1327 1733\\r\\n', 'output': ['9']}, {'input': '3164 42 430 1309\\r\\n', 'output': ['15']}, {'input': '3043 317 1141 2438\\r\\n', 'output': ['7']}, {'input': '26 1 772 2683\\r\\n', 'output': ['26']}, {'input': '370 2 1 15\\r\\n', 'output': ['370']}, {'input': '734 12 6 2\\r\\n', 'output': ['367']}, {'input': '418 18 14 17\\r\\n', 'output': ['29']}, {'input': '18 16 28 9\\r\\n', 'output': ['2']}, {'input': '14 6 2 17\\r\\n', 'output': ['7']}, {'input': '29 27 18 2\\r\\n', 'output': ['2']}, {'input': '29 12 7 10\\r\\n', 'output': ['3']}, {'input': '27 23 4 3\\r\\n', 'output': ['9']}, {'input': '5 14 5 2\\r\\n', 'output': ['1']}, {'input': '5 17 26 5\\r\\n', 'output': ['1']}, {'input': '9 1 10 3\\r\\n', 'output': ['9']}, {'input': '2 19 15 1\\r\\n', 'output': ['2']}, {'input': '4 6 4 9\\r\\n', 'output': ['1']}, {'input': '10 6 2 9\\r\\n', 'output': ['5']}, {'input': '2 2 9 6\\r\\n', 'output': ['1']}, {'input': '6 2 4 1\\r\\n', 'output': ['6']}, {'input': '27 24 5 27\\r\\n', 'output': ['1']}, {'input': '2683 83 26 2709\\r\\n', 'output': ['101']}, {'input': '728 412 789 158\\r\\n', 'output': ['3']}, {'input': '3964 4 2916 176\\r\\n', 'output': ['991']}, {'input': '3399 2035 2 3334\\r\\n', 'output': ['683']}, {'input': '3455 244 3301 3\\r\\n', 'output': ['991']}, {'input': '595 2263 3625 1\\r\\n', 'output': ['595']}, {'input': '4000 1 1 1\\r\\n', 'output': ['4000']}, {'input': '3999 2 2 3999\\r\\n', 'output': ['1']}, {'input': '25 6 8 11\\r\\n', 'output': ['3']}, {'input': '4000 500 1000 2000\\r\\n', 'output': ['8']}, {'input': '53 10 11 23\\r\\n', 'output': ['5']}, {'input': '100 100 1 1\\r\\n', 'output': ['100']}, {'input': '17 3 4 10\\r\\n', 'output': ['5']}, {'input': '413 101 102 105\\r\\n', 'output': ['4']}, {'input': '490 4 49 50\\r\\n', 'output': ['111']}, {'input': '3999 2 3 3\\r\\n', 'output': ['1999']}, {'input': '8 3 8 4\\r\\n', 'output': ['2']}, {'input': '5 1 3 3\\r\\n', 'output': ['5']}, {'input': '100 3 17 22\\r\\n', 'output': ['27']}, {'input': '4000 2 3 4\\r\\n', 'output': ['2000']}, {'input': '4000 3 3 5\\r\\n', 'output': ['1332']}, {'input': '13 4 6 7\\r\\n', 'output': ['2']}, {'input': '4000 5 2 2\\r\\n', 'output': ['2000']}, {'input': '3999 2 2 3\\r\\n', 'output': ['1999']}, {'input': '4000 33 7 3333\\r\\n', 'output': ['564']}, {'input': '60 33 20 9\\r\\n', 'output': ['4']}, {'input': '100 9 11 99\\r\\n', 'output': ['10']}, {'input': '2009 6 8 9\\r\\n', 'output': ['334']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a, b, c;\n  cin >> n >> a >> b >> c;\n  int ans = 0;\n  for (int i = 0; i <= n; i++) {\n    if (i % a == 0) {\n      ans++;\n      continue;\n    }\n    if (i % b == 0) {\n      ans++;\n      continue;\n    }\n    if (i % c == 0) {\n      ans++;\n      continue;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"}
{"src_uid": "102667eaa3aee012fef70f4192464674", "id": 15, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 900, "testcases": "[{'input': '2\\r\\n4 5\\r\\n3\\r\\n12 13 15\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n1 2 3 4\\r\\n5\\r\\n10 11 12 13 14\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 7 11 13\\r\\n4\\r\\n51 119 187 221\\r\\n', 'output': ['4\\r\\n']}, {'input': '4\\r\\n2 3 4 5\\r\\n3\\r\\n1 2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n6 12 13 20 48 53 74 92 96 97\\r\\n10\\r\\n1 21 32 36 47 54 69 75 95 97\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 9 10 14 15 17 19 22 24 26\\r\\n10\\r\\n2 11 17 19 21 22 24 25 27 28\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n24 53 56 126 354 432 442 740 795 856\\r\\n10\\r\\n273 438 494 619 689 711 894 947 954 958\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n3 4 6 7 8 10 14 16 19 20\\r\\n10\\r\\n3 4 5 7 8 10 15 16 18 20\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n1 6 8 14 15 17 25 27 34 39\\r\\n10\\r\\n1 8 16 17 19 22 32 39 44 50\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 21 22 23 25 32 35 36 38 39\\r\\n10\\r\\n3 7 8 9 18 21 23 24 36 38\\r\\n', 'output': ['4\\r\\n']}, {'input': '50\\r\\n5 8 13 16 19 20 21 22 24 27 28 29 30 32 33 34 35 43 45 48 50 51 54 55 58 59 60 61 62 65 70 71 72 76 78 79 80 81 83 84 85 87 89 91 92 94 97 98 99 100\\r\\n50\\r\\n2 3 5 6 7 10 15 16 17 20 23 28 29 30 31 34 36 37 40 42 45 46 48 54 55 56 58 59 61 62 69 70 71 72 75 76 78 82 84 85 86 87 88 89 90 91 92 97 99 100\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n3 5 6 8 9 11 13 19 21 23 24 32 34 35 42 50 51 52 56 58 59 69 70 72 73 75 76 77 78 80 83 88 90 95 96 100 101 102 108 109 113 119 124 135 138 141 142 143 145 150\\r\\n50\\r\\n5 8 10 11 18 19 23 30 35 43 51 53 55 58 63 68 69 71 77 78 79 82 83 86 88 89 91 92 93 94 96 102 103 105 109 110 113 114 116 123 124 126 127 132 133 135 136 137 142 149\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 16 24 25 27 33 36 40 51 60 62 65 71 72 75 77 85 87 91 93 98 102 103 106 117 118 120 121 122 123 125 131 134 136 143 148 155 157 160 161 164 166 170 178 184 187 188 192 194 197\\r\\n50\\r\\n5 9 17 23 27 34 40 44 47 59 62 70 81 82 87 88 89 90 98 101 102 110 113 114 115 116 119 122 124 128 130 137 138 140 144 150 152 155 159 164 166 169 171 175 185 186 187 189 190 193\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 22 23 31 32 35 48 63 76 79 88 97 101 102 103 104 106 113 114 115 116 126 136 138 145 152 155 156 162 170 172 173 179 180 182 203 208 210 212 222 226 229 231 232 235 237 245 246 247 248\\r\\n50\\r\\n2 5 6 16 28 44 45 46 54 55 56 63 72 80 87 93 94 96 97 100 101 103 132 135 140 160 164 165 167 168 173 180 182 185 186 192 194 198 199 202 203 211 213 216 217 227 232 233 236 245\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 19 33 35 38 41 51 54 69 70 71 73 76 80 84 94 102 104 105 106 107 113 121 128 131 168 180 181 187 191 195 201 205 207 210 216 220 238 249 251 263 271 272 275 281 283 285 286 291 294\\r\\n50\\r\\n2 3 5 20 21 35 38 40 43 48 49 52 55 64 73 77 82 97 109 113 119 121 125 132 137 139 145 146 149 180 182 197 203 229 234 241 244 251 264 271 274 281 284 285 287 291 292 293 294 298\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n2 4 5 16 18 19 22 23 25 26 34 44 48 54 67 79 80 84 92 110 116 133 138 154 163 171 174 202 205 218 228 229 234 245 247 249 250 263 270 272 274 275 277 283 289 310 312 334 339 342\\r\\n50\\r\\n1 5 17 18 25 37 46 47 48 59 67 75 80 83 84 107 115 122 137 141 159 162 175 180 184 204 221 224 240 243 247 248 249 258 259 260 264 266 269 271 274 293 294 306 329 330 334 335 342 350\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 9 11 21 28 39 42 56 60 63 81 88 91 95 105 110 117 125 149 165 174 176 185 189 193 196 205 231 233 268 278 279 281 286 289 292 298 303 305 306 334 342 350 353 361 371 372 375 376 378\\r\\n50\\r\\n6 17 20 43 45 52 58 59 82 83 88 102 111 118 121 131 145 173 190 191 200 216 224 225 232 235 243 256 260 271 290 291 321 322 323 329 331 333 334 341 343 348 351 354 356 360 366 379 387 388\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n17 239 443 467 661 1069 1823 2333 3767 4201\\r\\n20\\r\\n51 83 97 457 593 717 997 1329 1401 1459 1471 1983 2371 2539 3207 3251 3329 5469 6637 6999\\r\\n', 'output': ['8\\r\\n']}, {'input': '20\\r\\n179 359 401 467 521 601 919 941 1103 1279 1709 1913 1949 2003 2099 2143 2179 2213 2399 4673\\r\\n20\\r\\n151 181 191 251 421 967 1109 1181 1249 1447 1471 1553 1619 2327 2551 2791 3049 3727 6071 7813\\r\\n', 'output': ['3\\r\\n']}, {'input': '20\\r\\n79 113 151 709 809 983 1291 1399 1409 1429 2377 2659 2671 2897 3217 3511 3557 3797 3823 4363\\r\\n10\\r\\n19 101 659 797 1027 1963 2129 2971 3299 9217\\r\\n', 'output': ['3\\r\\n']}, {'input': '30\\r\\n19 47 109 179 307 331 389 401 461 509 547 569 617 853 883 1249 1361 1381 1511 1723 1741 1783 2459 2531 2621 3533 3821 4091 5557 6217\\r\\n20\\r\\n401 443 563 941 967 997 1535 1567 1655 1747 1787 1945 1999 2251 2305 2543 2735 4415 6245 7555\\r\\n', 'output': ['8\\r\\n']}, {'input': '30\\r\\n3 43 97 179 257 313 353 359 367 389 397 457 547 599 601 647 1013 1021 1063 1433 1481 1531 1669 3181 3373 3559 3769 4157 4549 5197\\r\\n50\\r\\n13 15 17 19 29 79 113 193 197 199 215 223 271 293 359 485 487 569 601 683 895 919 941 967 1283 1285 1289 1549 1565 1765 1795 1835 1907 1931 1945 1985 1993 2285 2731 2735 2995 3257 4049 4139 5105 5315 7165 7405 7655 8345\\r\\n', 'output': ['20\\r\\n']}, {'input': '50\\r\\n11 17 23 53 59 109 137 149 173 251 353 379 419 421 439 503 593 607 661 773 821 877 941 997 1061 1117 1153 1229 1289 1297 1321 1609 1747 2311 2389 2543 2693 3041 3083 3137 3181 3209 3331 3373 3617 3767 4201 4409 4931 6379\\r\\n50\\r\\n55 59 67 73 85 89 101 115 211 263 295 353 545 599 607 685 739 745 997 1031 1255 1493 1523 1667 1709 1895 1949 2161 2195 2965 3019 3035 3305 3361 3373 3673 3739 3865 3881 4231 4253 4385 4985 5305 5585 5765 6145 6445 8045 8735\\r\\n', 'output': ['23\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'output': ['24\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'output': ['24\\r\\n']}, {'input': '47\\r\\n66 262 357 457 513 530 538 540 592 691 707 979 1015 1242 1246 1667 1823 1886 1963 2133 2649 2679 2916 2949 3413 3523 3699 3958 4393 4922 5233 5306 5799 6036 6302 6629 7208 7282 7315 7822 7833 7927 8068 8150 8870 8962 9987\\r\\n39\\r\\n167 199 360 528 1515 1643 1986 1988 2154 2397 2856 3552 3656 3784 3980 4096 4104 4240 4320 4736 4951 5266 5656 5849 5850 6169 6517 6875 7244 7339 7689 7832 8120 8716 9503 9509 9933 9936 9968\\r\\n', 'output': ['12\\r\\n']}, {'input': '1\\r\\n94\\r\\n50\\r\\n423 446 485 1214 1468 1507 1853 1930 1999 2258 2271 2285 2425 2543 2715 2743 2992 3196 4074 4108 4448 4475 4652 5057 5250 5312 5356 5375 5731 5986 6298 6501 6521 7146 7255 7276 7332 7481 7998 8141 8413 8665 8908 9221 9336 9491 9504 9677 9693 9706\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n51 67 75 186 194 355 512 561 720 876 1077 1221 1503 1820 2153 2385 2568 2608 2937 2969 3271 3311 3481 4081 4093 4171 4255 4256 4829 5020 5192 5636 5817 6156 6712 6717 7153 7436 7608 7612 7866 7988 8264 8293 8867 9311 9879 9882 9889 9908\\r\\n1\\r\\n5394\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n26 367 495 585 675 789 855 1185 1312 1606 2037 2241 2587 2612 2628 2807 2873 2924 3774 4067 4376 4668 4902 5001 5082 5100 5104 5209 5345 5515 5661 5777 5902 5907 6155 6323 6675 6791 7503 8159 8207 8254 8740 8848 8855 8933 9069 9164 9171 9586\\r\\n5\\r\\n1557 6246 7545 8074 8284\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n25 58 91 110 2658\\r\\n50\\r\\n21 372 909 1172 1517 1554 1797 1802 1843 1977 2006 2025 2137 2225 2317 2507 2645 2754 2919 3024 3202 3212 3267 3852 4374 4487 4553 4668 4883 4911 4916 5016 5021 5068 5104 5162 5683 5856 6374 6871 7333 7531 8099 8135 8173 8215 8462 8776 9433 9790\\r\\n', 'output': ['4\\r\\n']}, {'input': '45\\r\\n37 48 56 59 69 70 79 83 85 86 99 114 131 134 135 145 156 250 1739 1947 2116 2315 2449 3104 3666 4008 4406 4723 4829 5345 5836 6262 6296 6870 7065 7110 7130 7510 7595 8092 8442 8574 9032 9091 9355\\r\\n50\\r\\n343 846 893 1110 1651 1837 2162 2331 2596 3012 3024 3131 3294 3394 3528 3717 3997 4125 4347 4410 4581 4977 5030 5070 5119 5229 5355 5413 5418 5474 5763 5940 6151 6161 6164 6237 6506 6519 6783 7182 7413 7534 8069 8253 8442 8505 9135 9308 9828 9902\\r\\n', 'output': ['17\\r\\n']}, {'input': '50\\r\\n17 20 22 28 36 38 46 47 48 50 52 57 58 62 63 69 70 74 75 78 79 81 82 86 87 90 93 95 103 202 292 442 1756 1769 2208 2311 2799 2957 3483 4280 4324 4932 5109 5204 6225 6354 6561 7136 8754 9670\\r\\n40\\r\\n68 214 957 1649 1940 2078 2134 2716 3492 3686 4462 4559 4656 4756 4850 5044 5490 5529 5592 5626 6014 6111 6693 6790 7178 7275 7566 7663 7702 7857 7954 8342 8511 8730 8957 9021 9215 9377 9445 9991\\r\\n', 'output': ['28\\r\\n']}, {'input': '39\\r\\n10 13 21 25 36 38 47 48 58 64 68 69 73 79 86 972 2012 2215 2267 2503 3717 3945 4197 4800 5266 6169 6612 6824 7023 7322 7582 7766 8381 8626 8879 9079 9088 9838 9968\\r\\n50\\r\\n432 877 970 1152 1202 1223 1261 1435 1454 1578 1843 1907 2003 2037 2183 2195 2215 2425 3065 3492 3615 3637 3686 3946 4189 4415 4559 4656 4665 4707 4886 4887 5626 5703 5955 6208 6521 6581 6596 6693 6985 7013 7081 7343 7663 8332 8342 8637 9207 9862\\r\\n', 'output': ['15\\r\\n']}, {'input': '50\\r\\n7 144 269 339 395 505 625 688 709 950 1102 1152 1350 1381 1641 1830 1977 1999 2093 2180 2718 3308 3574 4168 4232 4259 4393 4689 4982 5154 5476 5581 5635 5721 6159 6302 6741 7010 7152 7315 7417 7482 8116 8239 8640 9347 9395 9614 9661 9822\\r\\n20\\r\\n84 162 292 1728 1866 2088 3228 3470 4068 5318 5470 6060 6380 6929 7500 8256 8399 8467 8508 9691\\r\\n', 'output': ['8\\r\\n']}, {'input': '50\\r\\n159 880 1070 1139 1358 1608 1691 1841 2073 2171 2213 2597 2692 2759 2879 2931 3173 3217 3441 4201 4878 5106 5129 5253 5395 5647 5968 6019 6130 6276 6286 6330 6409 6728 7488 7713 7765 7828 7899 8064 8264 8457 8483 8685 8900 8946 8965 9133 9187 9638\\r\\n45\\r\\n57 159 1070 1139 1391 1608 1691 1841 2171 2213 2692 2759 2931 3173 3217 3441 4201 4878 5106 5129 5253 5647 5968 6130 6276 6286 6409 7488 7694 7713 7765 7828 7899 8003 8064 8081 8244 8264 8685 8900 8946 8965 9133 9638 9673\\r\\n', 'output': ['38\\r\\n']}, {'input': '3\\r\\n3 4 5\\r\\n3\\r\\n6 20 25\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n2 3 5 8\\r\\n4\\r\\n2 6 8 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 5 7 11\\r\\n4\\r\\n3 5 7 22\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n3\\r\\n20 30 50\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n4\\r\\n2 4 6 49\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n4 5\\r\\n3\\r\\n12 15 20\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n2 5 7\\r\\n3\\r\\n4 5 7\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n3 5 8\\r\\n3\\r\\n6 8 10\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 9 33\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 21 40\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n4 9 10\\r\\n3\\r\\n8 9 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n1 5 6 9 51\\r\\n5\\r\\n5 12 18 27 10000\\r\\n', 'output': ['1\\r\\n']}, {'input': '13\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\r\\n1\\r\\n14\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, a[50], b[50], i, j, k, l, ans = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) cin >> a[i];\n  cin >> m;\n  for (i = 0; i < m; i++) cin >> b[i];\n  for (i = 0; i < n; i++)\n    for (j = 0; j < m; j++)\n      if (a[i] % b[j] == 0) {\n        k = a[i] / b[j];\n        for (l = 0; l < m; l++)\n          if (b[l] % k == 0) ans++;\n      }\n  cout << ans;\n  return 0;\n}\n"}
{"src_uid": "38c4864937e57b35d3cce272f655e20f", "id": 16, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1 7 3 3\\r\\n', 'output': ['1']}, {'input': '7 7 7 7\\r\\n', 'output': ['3']}, {'input': '81170865 673572653 756938629 995577259\\r\\n', 'output': ['0']}, {'input': '3491663 217797045 522540872 715355328\\r\\n', 'output': ['0']}, {'input': '251590420 586975278 916631563 586975278\\r\\n', 'output': ['1']}, {'input': '259504825 377489979 588153796 377489979\\r\\n', 'output': ['1']}, {'input': '652588203 931100304 931100304 652588203\\r\\n', 'output': ['2']}, {'input': '391958720 651507265 391958720 651507265\\r\\n', 'output': ['2']}, {'input': '90793237 90793237 90793237 90793237\\r\\n', 'output': ['3']}, {'input': '551651653 551651653 551651653 551651653\\r\\n', 'output': ['3']}, {'input': '156630260 609654355 668943582 973622757\\r\\n', 'output': ['0']}, {'input': '17061017 110313588 434481173 796661222\\r\\n', 'output': ['0']}, {'input': '24975422 256716298 337790533 690960249\\r\\n', 'output': ['0']}, {'input': '255635360 732742923 798648949 883146723\\r\\n', 'output': ['0']}, {'input': '133315691 265159773 734556507 265159773\\r\\n', 'output': ['1']}, {'input': '28442865 741657755 978106882 978106882\\r\\n', 'output': ['1']}, {'input': '131245479 174845575 497483467 131245479\\r\\n', 'output': ['1']}, {'input': '139159884 616215581 958341883 616215581\\r\\n', 'output': ['1']}, {'input': '147784432 947653080 947653080 947653080\\r\\n', 'output': ['2']}, {'input': '94055790 756126496 756126496 94055790\\r\\n', 'output': ['2']}, {'input': '240458500 511952208 240458500 511952208\\r\\n', 'output': ['2']}, {'input': '681828506 972810624 972810624 681828506\\r\\n', 'output': ['2']}, {'input': '454961014 454961014 454961014 454961014\\r\\n', 'output': ['3']}, {'input': '915819430 915819430 915819430 915819430\\r\\n', 'output': ['3']}, {'input': '671645142 671645142 671645142 671645142\\r\\n', 'output': ['3']}, {'input': '132503558 132503558 132503558 132503558\\r\\n', 'output': ['3']}, {'input': '5 5 999999 6\\r\\n', 'output': ['1']}, {'input': '1 1 2 5\\r\\n', 'output': ['1']}, {'input': '2 1 2 3\\r\\n', 'output': ['1']}, {'input': '1 1 3 5\\r\\n', 'output': ['1']}, {'input': '1 1 3 3\\r\\n', 'output': ['2']}, {'input': '2 2 2 1\\r\\n', 'output': ['2']}, {'input': '3 1 1 1\\r\\n', 'output': ['2']}, {'input': '1 2 2 2\\r\\n', 'output': ['2']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a[4];\n  for (int i = 0; i < 4; i++) cin >> a[i];\n  sort(a, a + 4);\n  cout << (a[3] == a[2]? 1 : 0) + (a[3] == a[1]? 1 : 0) +\n              (a[3] == a[0]? 1 : 0)\n       << endl;\n  return 0;\n}\n"}
{"src_uid": "230a3c4d7090401e5fa3c6b9d994cdf2", "id": 17, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '8\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '5\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '4\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '3\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '2\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '1\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '7\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '6\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '10\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '9\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '53\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '77\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '32\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '44\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '98\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '99\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '90\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '67\\r\\n', 'output': ['No', 'NO', 'no']}, {'input': '100\\r\\n', 'output': ['YES', 'Yes', 'yes']}, {'input': '88\\r\\n', 'output': ['YES', 'Yes', 'yes']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  if (n % 2 == 0)\n    cout << \"YES\";\n  else\n    cout << \"NO\";\n  return 0;\n}\n"}
{"src_uid": "8b6ae2190413b23f47e2958a7d4e7bc0", "id": 18, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': 'WWWBWWBW\\r\\nBBBBBBBB\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\nWWWBWWBW\\r\\n', 'output': ['3']}, {'input': 'WWWWWWWW\\r\\nBBBBBBBB\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\n', 'output': ['1']}, {'input': 'WWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\nWWWWWWWW\\r\\n', 'output': ['0']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBW\\r\\n', 'output': ['14']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['14']}, {'input': 'BBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBWWWBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'BBBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\nBBBBBWWB\\r\\n', 'output': ['8']}, {'input': 'WWWWBBBB\\r\\nWWWWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWWWBBBB\\r\\nWWWWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'BBBBBBBB\\r\\nWBWWBBBW\\r\\nBBBBBBBB\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}, {'input': 'WBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBWWBBBW\\r\\nWBWWBBBW\\r\\n', 'output': ['9']}, {'input': 'BBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBWWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['11']}, {'input': 'WWBWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\nWWBWBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWWBWBBBB\\r\\n', 'output': ['10']}, {'input': 'WBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\nBBBBBBBB\\r\\nWBBWBBBW\\r\\nWBBWBBBW\\r\\n', 'output': ['6']}, {'input': 'BBBWBBBW\\r\\nBBBWBBBW\\r\\nBBBWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBWBBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBBBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\nBBBWBBBB\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nWWWBBBBB\\r\\nWWWBBBBB\\r\\nBBBBBBBB\\r\\nWWWBBBBB\\r\\nWWWBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'WBBBBBWB\\r\\nBBBBBBBB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nWBBBBBWB\\r\\nBBBBBBBB\\r\\n', 'output': ['8']}, {'input': 'WBBBWWBW\\r\\nWBBBWWBW\\r\\nBBBBBBBB\\r\\nWBBBWWBW\\r\\nBBBBBBBB\\r\\nWBBBWWBW\\r\\nWBBBWWBW\\r\\nWBBBWWBW\\r\\n', 'output': ['6']}, {'input': 'WBBBBWBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBBWBB\\r\\nWBBBBWBB\\r\\nBBBBBBBB\\r\\nWBBBBWBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWBBW\\r\\nBBBBBBBB\\r\\n', 'output': ['11']}, {'input': 'BBBBBBBB\\r\\nBWBBBBBW\\r\\nBWBBBBBW\\r\\nBBBBBBBB\\r\\nBWBBBBBW\\r\\nBWBBBBBW\\r\\nBBBBBBBB\\r\\nBWBBBBBW\\r\\n', 'output': ['9']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['9']}, {'input': 'BWBBBWWB\\r\\nBWBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBBWWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\n', 'output': ['10']}, {'input': 'BBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBWBWB\\r\\n', 'output': ['12']}, {'input': 'BWBBBBWW\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBBBBBBBB\\r\\nBWBBBBWW\\r\\nBWBBBBWW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}, {'input': 'WWBBWWBB\\r\\nBBBBBBBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\nBBBBBBBB\\r\\nWWBBWWBB\\r\\nWWBBWWBB\\r\\n', 'output': ['6']}, {'input': 'BWBBWWWW\\r\\nBWBBWWWW\\r\\nBWBBWWWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBWWWW\\r\\nBBBBBBBB\\r\\n', 'output': ['7']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int a[8][8];\n  for (int i = 0; i < 8; i++) {\n    string s;\n    cin >> s;\n    for (int j = 0; j < 8; j++) {\n      if (s[j] == 'W')\n        a[i][j] = 0;\n      else\n        a[i][j] = 1;\n    }\n  }\n  int ans = 8;\n  for (int i = 0; i < 8; i++) {\n    int cnt = 0;\n    for (int j = 0; j < 8; j++) {\n      cnt += a[i][j];\n    }\n    ans = min(ans, cnt);\n  }\n  for (int i = 0; i < 8; i++) {\n    int cnt = 0;\n    for (int j = 0; j < 8; j++) {\n      cnt += a[j][i];\n    }\n    ans = min(ans, cnt);\n  }\n  cout << ans << endl;\n  return 0;\n}\n"}
{"src_uid": "c3244e952830643938d51ce14f043d7d", "id": 19, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': 'atob\\r\\na\\r\\nb\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aaacaaa\\r\\naca\\r\\naa\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aaa\\r\\naa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'astalavista\\r\\nastla\\r\\nlavista\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'abacabadabacaba\\r\\nabacaba\\r\\nabacaba\\r\\n', 'output': ['both\\r\\n']}, {'input': 'a\\r\\na\\r\\na\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'ab\\r\\nb\\r\\na\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaa\\r\\naaaa\\r\\naaaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'bbabbbbababbaabaabaa\\r\\nabb\\r\\nbaab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'babaabababaaaababaabababaabababababababbababbbabbaabababaababbaabbababaababaaabababaabbaababaaababaa\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aababaaababaabbaabababaaababaabababbaabbabaabababaabbabbbababbababababababaabababaababaaaabababaabab\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaaa\\r\\naaa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzzzz\\r\\nzzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzz\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aabaa\\r\\naab\\r\\nbaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'aabaab\\r\\naba\\r\\nab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aab\\r\\nb\\r\\naa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'abacaba\\r\\naca\\r\\nba\\r\\n', 'output': ['both\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, a, b;\n  cin >> s >> a >> b;\n  int i = 0, j = 0;\n  while (i < s.size() && j < a.size()) {\n    if (s[i] == a[j]) {\n      i++;\n      j++;\n    } else\n      i++;\n  }\n  if (j == a.size()) {\n    j = 0;\n    while (i < s.size() && j < b.size()) {\n      if (s[i] == b[j]) {\n        i++;\n        j++;\n      } else\n        i++;\n    }\n    if (j == b.size())\n      cout << \"forward\";\n    else\n      cout << \"fantasy\";\n  } else {\n    j = 0;\n    while (i < s.size() && j < b.size()) {\n      if (s[i] == b[j]) {\n        i++;\n        j++;\n      } else\n        i++;\n    }\n    if (j == b.size())\n      cout << \"backward\";\n    else\n      cout << \"fantasy\";\n  }\n  return 0;\n}\n"}
{"src_uid": "15fa49860e978d3b3fb7a20bf9f8aa86", "id": 20, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '4 5 2\\r\\n0 2 4 6\\r\\n4 1\\r\\n', 'output': ['3']}, {'input': '2 1 1\\r\\n0 100000\\r\\n100000 100000\\r\\n', 'output': ['2']}, {'input': '6 5 1\\r\\n0 1 2 3 4 5\\r\\n0 0\\r\\n', 'output': ['2']}, {'input': '4 100 10\\r\\n0 118 121 178\\r\\n220 220\\r\\n', 'output': ['4']}, {'input': '4 3 3\\r\\n0 6 8 10\\r\\n7 -4\\r\\n', 'output': ['2']}, {'input': '5 900 1\\r\\n0 37474 80030 85359 97616\\r\\n-1 -1\\r\\n', 'output': ['2']}, {'input': '5 200 400\\r\\n0 8068 28563 51720 66113\\r\\n5423 -34\\r\\n', 'output': ['2']}, {'input': '6 10 3\\r\\n0 12 14 16 19 20\\r\\n14 0\\r\\n', 'output': ['3']}, {'input': '6 13 11\\r\\n0 16 27 31 39 42\\r\\n54 3\\r\\n', 'output': ['6']}, {'input': '11 853 721\\r\\n0 134 1971 2369 3381 3997 4452 6875 8983 9360 9399\\r\\n7345 333\\r\\n', 'output': ['8']}, {'input': '35 35 12\\r\\n0 90486 90543 90763 91127 91310 92047 92405 93654 93814 94633 94752 94969 94994 95287 96349 96362 96723 96855 96883 97470 97482 97683 97844 97926 98437 98724 98899 98921 99230 99253 99328 99444 99691 99947\\r\\n96233 -7777\\r\\n', 'output': ['9']}, {'input': '55 11 44\\r\\n0 3343 3387 3470 3825 3832 3971 4026 4043 4389 4492 4886 5015 5084 5161 5436 5595 5616 5677 5987 6251 6312 6369 6469 6487 6493 6507 6641 6928 7067 7159 7280 7303 7385 7387 7465 7536 7572 7664 7895 7921 7955 8110 8191 8243 8280 8523 8525 8581 8877 9221 9462 9505 9594 9596\\r\\n8000 0\\r\\n', 'output': ['2']}, {'input': '72 1000 777\\r\\n0 215 2814 5104 5226 5925 6734 9213 11697 13739 14015 16101 17234 19013 19566 19683 20283 20837 21332 21432 25490 26284 27728 29911 30112 30133 31494 31595 32499 32932 33289 36611 37736 43548 44440 44537 47656 47699 48327 50942 52178 53759 56925 57671 62024 65441 67958 70346 71606 75235 75466 75553 75905 76173 76512 77784 78183 80425 81339 81543 84537 88384 89953 90214 92107 92274 93328 93550 93987 97546 99459 99532\\r\\n63421 35\\r\\n', 'output': ['45']}, {'input': '76 1 1\\r\\n0 1000 1754 2749 3687 4983 8121 10299 11043 12986 14125 15910 17070 17189 17551 17953 17973 20816 25436 26150 27446 27788 28466 28941 29537 33965 37566 40845 40930 41304 41614 41615 43042 45098 45844 49878 50453 50936 55480 58410 59258 59287 62789 64127 64333 64450 64862 65404 66451 67626 69294 69804 71988 72165 74196 74560 75407 76611 77055 77344 79470 83566 84550 87458 87627 88205 89880 90255 90586 91970 93795 95308 99032 99442 99547 99549\\r\\n0 0\\r\\n', 'output': ['2']}, {'input': '94 2 1\\r\\n0 5000 5001 5002 5003 5004 5005 5006 5007 5008 5009 5010 5011 5012 5013 5014 5015 5016 5017 5018 5019 5020 5021 5022 5023 5024 5025 5026 5027 5028 5029 5030 5031 5032 5033 5034 5035 5036 5037 5038 5040 5041 5042 5043 5044 5045 5046 5047 5048 5049 5050 5051 5052 5053 5054 5055 5056 5057 5058 5059 5060 5061 5062 5063 5064 5065 5066 5067 5068 5069 5070 5071 5072 5073 5074 5075 5076 5077 5078 5079 5080 5081 5082 5083 5084 5085 5086 5087 5088 5089 5090 5091 5092 5093\\r\\n5050 -100000\\r\\n', 'output': ['2']}, {'input': '100 1 2\\r\\n0 1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n100 0\\r\\n', 'output': ['2']}, {'input': '100 1000 1\\r\\n0 505 506 514 515 520 523 527 529 530 538 547 550 554 559 562 566 568 569 580 582 584 588 597 609 621 624 629 630 631 634 641 646 653 657 666 673 678 680 683 685 690 695 698 699 700 705 709 716 731 734 735 736 738 756 761 762 765 769 772 776 779 784 790 794 812 814 816 833 837 842 845 850 854 855 863 868 872 882 892 893 898 899 900 901 902 915 916 917 932 936 954 962 968 975 978 983 992 996 998\\r\\n600 7778\\r\\n', 'output': ['23']}, {'input': '2 1 1\\r\\n0 100000\\r\\n-100000 -100000\\r\\n', 'output': ['2']}, {'input': '2 1000 1000\\r\\n0 1\\r\\n1 0\\r\\n', 'output': ['2']}, {'input': '3 1 1\\r\\n0 1 2\\r\\n2 0\\r\\n', 'output': ['3']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, vb, vs, x[100], u, v, i, j, k, l, m, nn, mm, ans = 0, t, tt;\n  double d, dd, ddd;\n  scanf(\"%d%d%d\", &n, &vb, &vs);\n  for (i = 0; i < n; i++) scanf(\"%d\", &x[i]);\n  scanf(\"%d%d\", &u, &v);\n  d = sqrt((double)(u * u + v * v));\n  dd = d / vb;\n  ddd = d / vs;\n  for (i = 1; i < n; i++) {\n    t = x[i] - x[i - 1];\n    tt = t / vb;\n    if (ddd * tt > dd) {\n      dd = ddd * tt;\n      ans = i;\n    }\n  }\n  printf(\"%d\\n\", ans + 1);\n  return 0;\n}\n"}
{"src_uid": "d1e381b72a6c09a0723cfe72c0917372", "id": 21, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '3310\\r\\n1033\\r\\n', 'output': ['OK']}, {'input': '4\\r\\n5\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '40\\r\\n04\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '12\\r\\n12\\r\\n', 'output': ['OK']}, {'input': '432\\r\\n234\\r\\n', 'output': ['OK']}, {'input': '17109\\r\\n01179\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '888\\r\\n888\\r\\n', 'output': ['OK']}, {'input': '912\\r\\n9123\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '0\\r\\n00\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '11110\\r\\n1111\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '7391\\r\\n1397\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '201\\r\\n102\\r\\n', 'output': ['OK']}, {'input': '111111111\\r\\n111111111\\r\\n', 'output': ['OK']}, {'input': '32352320\\r\\n22203335\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '1000000000\\r\\n1\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '994321\\r\\n123499\\r\\n', 'output': ['OK']}, {'input': '10101\\r\\n10101\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '666\\r\\n0666\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '2\\r\\n02\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '313\\r\\n133\\r\\n', 'output': ['OK']}, {'input': '987235645\\r\\n234556789\\r\\n', 'output': ['OK']}, {'input': '90812\\r\\n010289\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '123\\r\\n321\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '707\\r\\n770\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '77774444\\r\\n47474747\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '1270\\r\\n1027\\r\\n', 'output': ['OK']}, {'input': '320\\r\\n23\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '123456789\\r\\n123456789\\r\\n', 'output': ['OK']}, {'input': '918273645\\r\\n546372819\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '300000003\\r\\n30000003\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '0\\r\\n0\\r\\n', 'output': ['OK']}, {'input': '0\\r\\n7\\r\\n', 'output': ['WRONG_ANSWER']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s, t;\n  cin >> s >> t;\n  sort(s.begin(), s.end());\n  if (s == t)\n    cout << \"OK\";\n  else\n    cout << \"WRONG_ANSWER\";\n  return 0;\n}\n"}
{"src_uid": "6f6859aabc1c9cbb9ee0d910064d87c2", "id": 22, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1100, "testcases": "[{'input': '6\\r\\n549871\\r\\n', 'output': ['54-98-71']}, {'input': '7\\r\\n1198733\\r\\n', 'output': ['119-87-33']}, {'input': '2\\r\\n74\\r\\n', 'output': ['74']}, {'input': '2\\r\\n33\\r\\n', 'output': ['33']}, {'input': '3\\r\\n074\\r\\n', 'output': ['074']}, {'input': '3\\r\\n081\\r\\n', 'output': ['081']}, {'input': '4\\r\\n3811\\r\\n', 'output': ['38-11']}, {'input': '5\\r\\n21583\\r\\n', 'output': ['215-83']}, {'input': '8\\r\\n33408349\\r\\n', 'output': ['33-40-83-49']}, {'input': '9\\r\\n988808426\\r\\n', 'output': ['988-80-84-26']}, {'input': '10\\r\\n0180990956\\r\\n', 'output': ['01-80-99-09-56']}, {'input': '15\\r\\n433488906230138\\r\\n', 'output': ['433-48-89-06-23-01-38']}, {'input': '22\\r\\n7135498415686025907059\\r\\n', 'output': ['71-35-49-84-15-68-60-25-90-70-59']}, {'input': '49\\r\\n2429965524999668169991253653390090510755018570235\\r\\n', 'output': ['242-99-65-52-49-99-66-81-69-99-12-53-65-33-90-09-05-10-75-50-18-57-02-35']}, {'input': '72\\r\\n491925337784111770500147619881727525570039735507439360627744863794794290\\r\\n', 'output': ['49-19-25-33-77-84-11-17-70-50-01-47-61-98-81-72-75-25-57-00-39-73-55-07-43-93-60-62-77-44-86-37-94-79-42-90']}, {'input': '95\\r\\n32543414456047900690980198395035321172843693417425457554204776648220562494524275489599199209210\\r\\n', 'output': ['325-43-41-44-56-04-79-00-69-09-80-19-83-95-03-53-21-17-28-43-69-34-17-42-54-57-55-42-04-77-66-48-22-05-62-49-45-24-27-54-89-59-91-99-20-92-10']}, {'input': '97\\r\\n9362344595153688016434451101547661156123505108492010669557671355055642365998461003851354321478898\\r\\n', 'output': ['936-23-44-59-51-53-68-80-16-43-44-51-10-15-47-66-11-56-12-35-05-10-84-92-01-06-69-55-76-71-35-50-55-64-23-65-99-84-61-00-38-51-35-43-21-47-88-98']}, {'input': '98\\r\\n65521815795893886057122984634320900545031770769333931308009346017867969790810907868670369236928568\\r\\n', 'output': ['65-52-18-15-79-58-93-88-60-57-12-29-84-63-43-20-90-05-45-03-17-70-76-93-33-93-13-08-00-93-46-01-78-67-96-97-90-81-09-07-86-86-70-36-92-36-92-85-68']}, {'input': '99\\r\\n455213856470326729480192345541970106407563996625458559297407682539801838244443866898560852503660390\\r\\n', 'output': ['455-21-38-56-47-03-26-72-94-80-19-23-45-54-19-70-10-64-07-56-39-96-62-54-58-55-92-97-40-76-82-53-98-01-83-82-44-44-38-66-89-85-60-85-25-03-66-03-90']}, {'input': '100\\r\\n4004223124942730640235383244438257614581534320356060987241659784249551110165034719443327659510644224\\r\\n', 'output': ['40-04-22-31-24-94-27-30-64-02-35-38-32-44-43-82-57-61-45-81-53-43-20-35-60-60-98-72-41-65-97-84-24-95-51-11-01-65-03-47-19-44-33-27-65-95-10-64-42-24']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  string s;\n  cin >> s;\n  if (n % 2 == 0) {\n    for (int i = 0; i < n; i += 2) {\n      cout << s[i] << s[i + 1] << \"-\";\n    }\n    cout << s[n - 1];\n  } else {\n    for (int i = 0; i < n; i += 2) {\n      cout << s[i] << s[i + 1] << \"-\";\n    }\n    cout << s[n - 2] << s[n - 1];\n  }\n  return 0;\n}\n"}
{"src_uid": "94a38067fc8dd8619fa6e5873ca60220", "id": 23, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1200, "testcases": "[{'input': '5\\r\\n1 2 3 5 7\\r\\n', 'output': ['3 2 1\\r\\n']}, {'input': '5\\r\\n1 8 1 5 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6\\r\\n86 402 133 524 405 610\\r\\n', 'output': ['6 4 1\\r\\n']}, {'input': '8\\r\\n217 779 418 895 996 473 3 22\\r\\n', 'output': ['5 2 1\\r\\n']}, {'input': '10\\r\\n858 972 670 15 662 114 33 273 53 310\\r\\n', 'output': ['2 6 1\\r\\n']}, {'input': '100\\r\\n611 697 572 770 603 870 128 245 49 904 468 982 788 943 549 288 668 796 803 515 999 735 912 49 298 80 412 841 494 434 543 298 17 571 271 105 70 313 178 755 194 279 585 766 412 164 907 841 776 556 731 268 735 880 176 267 287 65 239 588 155 658 821 47 783 595 585 69 226 906 429 161 999 148 7 484 362 585 952 365 92 749 904 525 307 626 883 367 450 755 564 950 728 724 69 106 119 157 96 290\\r\\n', 'output': ['1 38 25\\r\\n']}, {'input': '100\\r\\n713 572 318 890 577 657 646 146 373 783 392 229 455 871 20 593 573 336 26 381 280 916 907 732 820 713 111 840 570 446 184 711 481 399 788 647 492 15 40 530 549 506 719 782 126 20 778 996 712 761 9 74 812 418 488 175 103 585 900 3 604 521 109 513 145 708 990 361 682 827 791 22 596 780 596 385 450 643 158 496 876 975 319 783 654 895 891 361 397 81 682 899 347 623 809 557 435 279 513 438\\r\\n', 'output': ['1 63 61\\r\\n']}, {'input': '100\\r\\n156 822 179 298 981 82 610 345 373 378 895 734 768 15 78 335 764 608 932 297 717 553 916 367 425 447 361 195 66 70 901 236 905 744 919 564 296 610 963 628 840 52 100 750 345 308 37 687 192 704 101 815 10 990 216 358 823 546 578 821 706 148 182 582 421 482 829 425 121 337 500 301 402 868 66 935 625 527 746 585 308 523 488 914 608 709 875 252 151 781 447 2 756 176 976 302 450 35 680 791\\r\\n', 'output': ['1 98 69\\r\\n']}, {'input': '100\\r\\n54 947 785 838 359 647 92 445 48 465 323 486 101 86 607 31 860 420 709 432 435 372 272 37 903 814 309 197 638 58 259 822 793 564 309 22 522 907 101 853 486 824 614 734 630 452 166 532 256 499 470 9 933 452 256 450 7 26 916 406 257 285 895 117 59 369 424 133 16 417 352 440 806 236 478 34 889 469 540 806 172 296 73 655 261 792 868 380 204 454 330 53 136 629 236 850 134 560 264 291\\r\\n', 'output': ['2 29 27\\r\\n']}, {'input': '99\\r\\n175 269 828 129 499 890 127 263 995 807 508 289 996 226 437 320 365 642 757 22 190 8 345 499 834 713 962 889 336 171 608 492 320 257 472 801 176 325 301 306 198 729 933 4 640 322 226 317 567 586 249 237 202 633 287 128 911 654 719 988 420 855 361 574 716 899 317 356 581 440 284 982 541 111 439 29 37 560 961 224 478 906 319 416 736 603 808 87 762 697 392 713 19 459 262 238 239 599 997\\r\\n', 'output': ['1 44 30\\r\\n']}, {'input': '98\\r\\n443 719 559 672 16 69 529 632 953 999 725 431 54 22 346 968 558 696 48 669 963 129 257 712 39 870 498 595 45 821 344 925 179 388 792 346 755 213 423 365 344 659 824 356 773 637 628 897 841 155 243 536 951 361 192 105 418 431 635 596 150 162 145 548 473 531 750 306 377 354 450 975 79 743 656 733 440 940 19 139 237 346 276 227 64 799 479 633 199 17 796 362 517 234 729 62 995 535\\r\\n', 'output': ['2 70 40\\r\\n']}, {'input': '97\\r\\n359 522 938 862 181 600 283 1000 910 191 590 220 761 818 903 264 751 751 987 316 737 898 168 925 244 674 34 950 754 472 81 6 37 520 112 891 981 454 897 424 489 238 363 709 906 951 677 828 114 373 589 835 52 89 97 435 277 560 551 204 879 469 928 523 231 163 183 609 821 915 615 969 616 23 874 437 844 321 78 53 643 786 585 38 744 347 150 179 988 985 200 11 15 9 547 886 752\\r\\n', 'output': ['1 23 10\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100\\r\\n328 397 235 453 188 254 879 225 423 36 384 296 486 592 231 849 856 255 213 898 234 800 701 529 951 693 507 326 15 905 618 348 967 927 28 979 752 850 343 35 84 302 36 390 482 826 249 918 91 289 973 457 557 348 365 239 709 565 320 560 153 130 647 708 483 469 788 473 322 844 830 562 611 961 397 673 69 960 74 703 369 968 382 451 328 160 211 230 566 208 7 545 293 73 806 375 157 410 303 58\\r\\n', 'output': ['1 79 6\\r\\n']}, {'input': '33\\r\\n52 145 137 734 180 847 178 286 716 134 181 630 358 764 593 762 785 28 1 468 189 540 764 485 165 656 114 58 628 108 605 584 257\\r\\n', 'output': ['8 30 7\\r\\n']}, {'input': '57\\r\\n75 291 309 68 444 654 985 158 514 204 116 918 374 806 176 31 49 455 269 66 722 713 164 818 317 295 546 564 134 641 28 13 987 478 146 219 213 940 289 173 157 666 168 391 392 71 870 477 446 988 414 568 964 684 409 671 454\\r\\n', 'output': ['2 41 29\\r\\n']}, {'input': '88\\r\\n327 644 942 738 84 118 981 686 530 404 137 197 434 16 693 183 423 325 410 345 941 329 7 106 79 867 584 358 533 675 192 718 641 329 900 768 404 301 101 538 954 590 401 954 447 14 559 337 756 586 934 367 538 928 945 936 770 641 488 579 206 869 902 139 216 446 723 150 829 205 373 578 357 368 960 40 121 206 503 385 521 161 501 694 138 370 709 308\\r\\n', 'output': ['1 77 61\\r\\n']}, {'input': '100\\r\\n804 510 266 304 788 625 862 888 408 82 414 470 777 991 729 229 933 406 601 1 596 720 608 706 432 361 527 548 59 548 474 515 4 991 263 568 681 24 117 563 576 587 281 643 904 521 891 106 842 884 943 54 605 815 504 757 311 374 335 192 447 652 633 410 455 402 382 150 432 836 413 819 669 875 638 925 217 805 632 520 605 266 728 795 162 222 603 159 284 790 914 443 775 97 789 606 859 13 851 47\\r\\n', 'output': ['1 77 42\\r\\n']}, {'input': '100\\r\\n449 649 615 713 64 385 927 466 138 126 143 886 80 199 208 43 196 694 92 89 264 180 617 970 191 196 910 150 275 89 693 190 191 99 542 342 45 592 114 56 451 170 64 589 176 102 308 92 402 153 414 675 352 157 69 150 91 288 163 121 816 184 20 234 836 12 593 150 793 439 540 93 99 663 186 125 349 247 476 106 77 523 215 7 363 278 441 745 337 25 148 384 15 915 108 211 240 58 23 408\\r\\n', 'output': ['1 6 5\\r\\n']}, {'input': '90\\r\\n881 436 52 308 97 261 153 931 670 538 702 156 114 445 154 685 452 76 966 790 93 42 547 65 736 364 136 489 719 322 239 628 696 735 55 703 622 375 100 188 804 341 546 474 484 446 729 290 974 301 602 225 996 244 488 983 882 460 962 754 395 617 61 640 534 292 158 375 632 902 420 979 379 38 100 67 963 928 190 456 545 571 45 716 153 68 844 2 102 116\\r\\n', 'output': ['1 14 2\\r\\n']}, {'input': '80\\r\\n313 674 262 240 697 146 391 221 793 504 896 818 92 899 86 370 341 339 306 887 937 570 830 683 729 519 240 833 656 847 427 958 435 704 853 230 758 347 660 575 843 293 649 396 437 787 654 599 35 103 779 783 447 379 444 585 902 713 791 150 851 228 306 721 996 471 617 403 102 168 197 741 877 481 968 545 331 715 236 654\\r\\n', 'output': ['1 13 8\\r\\n']}, {'input': '70\\r\\n745 264 471 171 946 32 277 511 269 469 89 831 69 2 369 407 583 602 646 633 429 747 113 302 722 321 344 824 241 372 263 287 822 24 652 758 246 967 219 313 882 597 752 965 389 775 227 556 95 904 308 340 899 514 400 187 275 318 621 546 659 488 199 154 811 1 725 79 925 82\\r\\n', 'output': ['1 63 60\\r\\n']}, {'input': '60\\r\\n176 502 680 102 546 917 516 801 392 435 635 492 398 456 653 444 472 513 634 378 273 276 44 920 68 124 800 167 825 250 452 264 561 344 98 933 381 939 426 51 568 548 206 887 342 763 151 514 156 354 486 546 998 649 356 438 295 570 450 589\\r\\n', 'output': ['2 26 20\\r\\n']}, {'input': '50\\r\\n608 92 889 33 146 803 402 91 868 400 828 505 375 558 584 129 361 776 974 123 765 804 326 186 61 927 904 511 762 775 640 593 300 664 897 461 869 911 986 789 607 500 309 457 294 104 724 471 216 155\\r\\n', 'output': ['3 25 11\\r\\n']}, {'input': '40\\r\\n40 330 98 612 747 336 640 381 991 366 22 167 352 12 868 166 603 40 313 869 609 981 609 804 54 729 8 854 347 300 828 922 39 633 695 988 4 530 545 176\\r\\n', 'output': ['5 10 8\\r\\n']}, {'input': '30\\r\\n471 920 308 544 347 222 878 671 467 332 215 180 681 114 151 203 492 951 653 614 453 510 540 422 399 532 113 198 932 825\\r\\n', 'output': ['2 21 9\\r\\n']}, {'input': '20\\r\\n551 158 517 475 595 108 764 961 590 297 761 841 659 568 82 888 733 214 993 359\\r\\n', 'output': ['3 20 2\\r\\n']}, {'input': '10\\r\\n983 748 726 406 196 993 2 251 66 263\\r\\n', 'output': ['-1\\r\\n']}, {'input': '9\\r\\n933 266 457 863 768 257 594 136 145\\r\\n', 'output': ['-1\\r\\n']}, {'input': '8\\r\\n537 198 48 771 944 868 700 163\\r\\n', 'output': ['7 8 1\\r\\n']}, {'input': '7\\r\\n140 779 639 679 768 479 158\\r\\n', 'output': ['2 3 1\\r\\n']}, {'input': '6\\r\\n744 359 230 586 944 442\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5\\r\\n700 939 173 494 120\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3\\r\\n907 452 355\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3\\r\\n963 630 333\\r\\n', 'output': ['1 3 2\\r\\n']}, {'input': '3\\r\\n2 2 4\\r\\n', 'output': ['3 2 1\\r\\n']}, {'input': '3\\r\\n2 4 100\\r\\n', 'output': ['-1\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a[100], i, j, k;\n  cin >> n;\n  for (i = 0; i < n; i++) cin >> a[i];\n  for (i = 0; i < n; i++)\n    for (j = 0; j < n; j++)\n      for (k = 0; k < n; k++)\n        if (a[i] == a[j] + a[k] && i!= j && i!= k && j!= k) {\n          cout << i + 1 << \" \" << j + 1 << \" \" << k + 1 << endl;\n          return 0;\n        }\n  cout << -1 << endl;\n  return 0;\n}\n"}
{"src_uid": "b432dfa66bae2b542342f0b42c0a2598", "id": 24, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': 'HoUse\\r\\n', 'output': ['house']}, {'input': 'ViP\\r\\n', 'output': ['VIP']}, {'input': 'maTRIx\\r\\n', 'output': ['matrix']}, {'input': 'BNHWpnpawg\\r\\n', 'output': ['bnhwpnpawg']}, {'input': 'VTYGP\\r\\n', 'output': ['VTYGP']}, {'input': 'CHNenu\\r\\n', 'output': ['chnenu']}, {'input': 'ERPZGrodyu\\r\\n', 'output': ['erpzgrodyu']}, {'input': 'KSXBXWpebh\\r\\n', 'output': ['KSXBXWPEBH']}, {'input': 'qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv\\r\\n', 'output': ['qvxpqullmcbegsdskddortcvxyqlbvxmmkhevovnezubvpvnrcajpxraeaxizgaowtfkzywvhnbgzsxbhkaipcmoumtikkiyyaiv']}, {'input': 'Amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd\\r\\n', 'output': ['amnhaxtaopjzrkqlbroiyipitndczpunwygstmzevgyjdzyanxkdqnvgkikfabwouwkkbzuiuvgvxgpizsvqsbwepktpdrgdkmfd']}, {'input': 'ISAGFJFARYFBLOPQDSHWGMCNKMFTLVFUGNJEWGWNBLXUIATXEkqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv\\r\\n', 'output': ['isagfjfaryfblopqdshwgmcnkmftlvfugnjewgwnblxuiatxekqiettmmjgydwcpafqrppdsrrrtguinqbgmzzfqwonkpgpcwenv']}, {'input': 'XHRPXZEGHSOCJPICUIXSKFUZUPYTSGJSDIYBCMNMNBPNDBXLXBzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg\\r\\n', 'output': ['xhrpxzeghsocjpicuixskfuzupytsgjsdiybcmnmnbpndbxlxbzhbfnqvwcffvrdhtickyqhupmcehlsyvncqmfhautvxudqdhgg']}, {'input': 'RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGAdkcetqjljtmttlonpekcovdzebzdkzggwfsxhapmjkdbuceak\\r\\n', 'output': ['RJIQZMJCIMSNDBOHBRAWIENODSALETAKGKPYUFGVEFGCBRENZGADKCETQJLJTMTTLONPEKCOVDZEBZDKZGGWFSXHAPMJKDBUCEAK']}, {'input': 'DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFw\\r\\n', 'output': ['DWLWOBHNMMGTFOLFAECKBRNNGLYLYDXTGTVRLMEESZOIUATZZZXUFUZDLSJXMEVRTESSFBWLNZZCLCQWEVNNUCXYVHNGNXHCBDFW']}, {'input': 'NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB\\r\\n', 'output': ['NYCNHJWGBOCOTSPETKKHVWFGAQYNHOVJWJHCIEFOUQZXOYUIEQDZALFKTEHTVDBVJMEUBJUBCMNVPWGDPNCHQHZJRCHYRFPVIGUB']}, {'input': 'igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge\\r\\n', 'output': ['igxoixiecetohtgjgbqzvlaobkhstejxdklghowtvwunnnvauriohuspsdmpzckprwajyxldoyckgjivjpmbfqtszmtocovxwge']}, {'input': 'Ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw\\r\\n', 'output': ['ykkekrsqolzryiwsmdlnbmfautxxxauoojrddvwklgnlyrfcvhorrzbmtcrvpaypqhcffdqhwziipyyskcmztjprjqvmzzqhqnw']}, {'input': 'YQOMLKYAORUQQUCQZCDYMIVDHGWZFFRMUVTAWCHERFPMNRYRIkgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks\\r\\n', 'output': ['yqomlkyaoruqqucqzcdymivdhgwzffrmuvtawcherfpmnryrikgqrciokgajamehmcxgerpudvsqyonjonsxgbnefftzmygncks']}, {'input': 'CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJcuusigdqfkumewjtdyitveeiaybwrhomrwmpdipjwiuxfnwuz\\r\\n', 'output': ['CDOZDPBVVVHNBJVBYHEOXWFLJKRWJCAJMIFCOZWWYFKVWOGTVJCUUSIGDQFKUMEWJTDYITVEEIAYBWRHOMRWMPDIPJWIUXFNWUZ']}, {'input': 'WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWuckzcpxosodcjaaakvlxpbiigsiauviilylnnqlyucziihqg\\r\\n', 'output': ['WHIUVEXHVOOIJIDVJVPQUBJMEVPMPDKQWJKFBZSGSKUXMIPPMJWUCKZCPXOSODCJAAAKVLXPBIIGSIAUVIILYLNNQLYUCZIIHQG']}, {'input': 'VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO\\r\\n', 'output': ['VGHUNFOXKETUYMZDJNGTAOIOANYXSGYNFOGOFFLDAWEUKYFOZXCJTCAFXZYLQZERYZLRSQXYQGAPCSUDPMEYTNCTTTMFAGVDWBO']}, {'input': 'EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDd\\r\\n', 'output': ['EDUANHCQDOCJHFONTTSWBUJSTTIXBIXMAIUFSGFLXWAYIURTVAVZPYQDLAWIGCLMPHXCEFCJPFAAHXVNGQUFNHADAIUAZIDMHDD']}, {'input': 'EBWOVSNLYTWWXrnovgugogtjahnmatomubebyxakas\\r\\n', 'output': ['ebwovsnlytwwxrnovgugogtjahnmatomubebyxakas']}, {'input': 'AORNNDKTRLRVGDPXJKXFTPFpopuzrlqumrxssskvbm\\r\\n', 'output': ['AORNNDKTRLRVGDPXJKXFTPFPOPUZRLQUMRXSSSKVBM']}, {'input': 'DBBZJCWQEVGYHEEUHJAWRHBDPsnplijbwtdibqrrheebfxqcvn\\r\\n', 'output': ['dbbzjcwqevgyheeuhjawrhbdpsnplijbwtdibqrrheebfxqcvn']}, {'input': 't\\r\\n', 'output': ['t']}, {'input': 'N\\r\\n', 'output': ['N']}, {'input': 'kv\\r\\n', 'output': ['kv']}, {'input': 'Ur\\r\\n', 'output': ['ur']}, {'input': 'CN\\r\\n', 'output': ['CN']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s;\n  cin >> s;\n  int a = 0, b = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] >= 'A' && s[i] <= 'Z')\n      a++;\n    else\n      b++;\n  }\n  if (a > b) {\n    for (int i = 0; i < s.size(); i++) {\n      if (s[i] >= 'a' && s[i] <= 'z')\n        s[i] = s[i] - 32;\n    }\n  } else {\n    for (int i = 0; i < s.size(); i++) {\n      if (s[i] >= 'A' && s[i] <= 'Z')\n        s[i] = s[i] + 32;\n    }\n  }\n  cout << s;\n  return 0;\n}\n"}
{"src_uid": "3714b7596a6b48ca5b7a346f60d90549", "id": 25, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '1010100\\r\\n0100101\\r\\n', 'output': ['1110001']}, {'input': '000\\r\\n111\\r\\n', 'output': ['111']}, {'input': '1110\\r\\n1010\\r\\n', 'output': ['0100']}, {'input': '01110\\r\\n01100\\r\\n', 'output': ['00010']}, {'input': '011101\\r\\n000001\\r\\n', 'output': ['011100']}, {'input': '10\\r\\n01\\r\\n', 'output': ['11']}, {'input': '00111111\\r\\n11011101\\r\\n', 'output': ['11100010']}, {'input': '011001100\\r\\n101001010\\r\\n', 'output': ['110000110']}, {'input': '1100100001\\r\\n0110101100\\r\\n', 'output': ['1010001101']}, {'input': '00011101010\\r\\n10010100101\\r\\n', 'output': ['10001001111']}, {'input': '100000101101\\r\\n111010100011\\r\\n', 'output': ['011010001110']}, {'input': '1000001111010\\r\\n1101100110001\\r\\n', 'output': ['0101101001011']}, {'input': '01011111010111\\r\\n10001110111010\\r\\n', 'output': ['11010001101101']}, {'input': '110010000111100\\r\\n001100101011010\\r\\n', 'output': ['111110101100110']}, {'input': '0010010111110000\\r\\n0000000011010110\\r\\n', 'output': ['0010010100100110']}, {'input': '00111110111110000\\r\\n01111100001100000\\r\\n', 'output': ['01000010110010000']}, {'input': '101010101111010001\\r\\n001001111101111101\\r\\n', 'output': ['100011010010101100']}, {'input': '0110010101111100000\\r\\n0011000101000000110\\r\\n', 'output': ['0101010000111100110']}, {'input': '11110100011101010111\\r\\n00001000011011000000\\r\\n', 'output': ['11111100000110010111']}, {'input': '101010101111101101001\\r\\n111010010010000011111\\r\\n', 'output': ['010000111101101110110']}, {'input': '0000111111100011000010\\r\\n1110110110110000001010\\r\\n', 'output': ['1110001001010011001000']}, {'input': '10010010101000110111000\\r\\n00101110100110111000111\\r\\n', 'output': ['10111100001110001111111']}, {'input': '010010010010111100000111\\r\\n100100111111100011001110\\r\\n', 'output': ['110110101101011111001001']}, {'input': '0101110100100111011010010\\r\\n0101100011010111001010001\\r\\n', 'output': ['0000010111110000010000011']}, {'input': '10010010100011110111111011\\r\\n10000110101100000001000100\\r\\n', 'output': ['00010100001111110110111111']}, {'input': '000001111000000100001000000\\r\\n011100111101111001110110001\\r\\n', 'output': ['011101000101111101111110001']}, {'input': '0011110010001001011001011100\\r\\n0000101101000011101011001010\\r\\n', 'output': ['0011011111001010110010010110']}, {'input': '11111000000000010011001101111\\r\\n11101110011001010100010000000\\r\\n', 'output': ['00010110011001000111011101111']}, {'input': '011001110000110100001100101100\\r\\n001010000011110000001000101001\\r\\n', 'output': ['010011110011000100000100000101']}, {'input': '1011111010001100011010110101111\\r\\n1011001110010000000101100010101\\r\\n', 'output': ['0000110100011100011111010111010']}, {'input': '10111000100001000001010110000001\\r\\n10111000001100101011011001011000\\r\\n', 'output': ['00000000101101101010001111011001']}, {'input': '000001010000100001000000011011100\\r\\n111111111001010100100001100000111\\r\\n', 'output': ['111110101001110101100001111011011']}, {'input': '1101000000000010011011101100000110\\r\\n1110000001100010011010000011011110\\r\\n', 'output': ['0011000001100000000001101111011000']}, {'input': '01011011000010100001100100011110001\\r\\n01011010111000001010010100001110000\\r\\n', 'output': ['00000001111010101011110000010000001']}, {'input': '000011111000011001000110111100000100\\r\\n011011000110000111101011100111000111\\r\\n', 'output': ['011000111110011110101101011011000011']}, {'input': '1001000010101110001000000011111110010\\r\\n0010001011010111000011101001010110000\\r\\n', 'output': ['1011001001111001001011101010101000010']}, {'input': '00011101011001100101111111000000010101\\r\\n10010011011011001011111000000011101011\\r\\n', 'output': ['10001110000010101110000111000011111110']}, {'input': '111011100110001001101111110010111001010\\r\\n111111101101111001110010000101101000100\\r\\n', 'output': ['000100001011110000011101110111010001110']}, {'input': '1111001001101000001000000010010101001010\\r\\n0010111100111110001011000010111110111001\\r\\n', 'output': ['1101110101010110000011000000101011110011']}, {'input': '00100101111000000101011111110010100011010\\r\\n11101110001010010101001000111110101010100\\r\\n', 'output': ['11001011110010010000010111001100001001110']}, {'input': '101011001110110100101001000111010101101111\\r\\n100111100110101011010100111100111111010110\\r\\n', 'output': ['001100101000011111111101111011101010111001']}, {'input': '1111100001100101000111101001001010011100001\\r\\n1000110011000011110010001011001110001000001\\r\\n', 'output': ['0111010010100110110101100010000100010100000']}, {'input': '01100111011111010101000001101110000001110101\\r\\n10011001011111110000000101011001001101101100\\r\\n', 'output': ['11111110000000100101000100110111001100011001']}, {'input': '110010100111000100100101100000011100000011001\\r\\n011001111011100110000110111001110110100111011\\r\\n', 'output': ['101011011100100010100011011001101010100100010']}, {'input': '0001100111111011010110100100111000000111000110\\r\\n1100101011000000000001010010010111001100110001\\r\\n', 'output': ['1101001100111011010111110110101111001011110111']}, {'input': '00000101110110110001110010100001110100000100000\\r\\n10010000110011110001101000111111101010011010001\\r\\n', 'output': ['10010101000101000000011010011110011110011110001']}, {'input': '110000100101011100100011001111110011111110010001\\r\\n101011111001011100110110111101110011010110101100\\r\\n', 'output': ['011011011100000000010101110010000000101000111101']}, {'input': '0101111101011111010101011101000011101100000000111\\r\\n0000101010110110001110101011011110111001010100100\\r\\n', 'output': ['0101010111101001011011110110011101010101010100011']}, {'input': '11000100010101110011101000011111001010110111111100\\r\\n00001111000111001011111110000010101110111001000011\\r\\n', 'output': ['11001011010010111000010110011101100100001110111111']}, {'input': '101000001101111101101111111000001110110010101101010\\r\\n010011100111100001100000010001100101000000111011011\\r\\n', 'output': ['111011101010011100001111101001101011110010010110001']}, {'input': '0011111110010001010100010110111000110011001101010100\\r\\n0111000000100010101010000100101000000100101000111001\\r\\n', 'output': ['0100111110110011111110010010010000110111100101101101']}, {'input': '11101010000110000011011010000001111101000111011111100\\r\\n10110011110001010100010110010010101001010111100100100\\r\\n', 'output': ['01011001110111010111001100010011010100010000111011000']}, {'input': '011000100001000001101000010110100110011110100111111011\\r\\n111011001000001001110011001111011110111110110011011111\\r\\n', 'output': ['100011101001001000011011011001111000100000010100100100']}, {'input': '0111010110010100000110111011010110100000000111110110000\\r\\n1011100100010001101100000100111111101001110010000100110\\r\\n', 'output': ['1100110010000101101010111111101001001001110101110010110']}, {'input': '10101000100111000111010001011011011011110100110101100011\\r\\n11101111000000001100100011111000100100000110011001101110\\r\\n', 'output': ['01000111100111001011110010100011111111110010101100001101']}, {'input': '000000111001010001000000110001001011100010011101010011011\\r\\n110001101000010010000101000100001111101001100100001010010\\r\\n', 'output': ['110001010001000011000101110101000100001011111001011001001']}, {'input': '0101011100111010000111110010101101111111000000111100011100\\r\\n1011111110000010101110111001000011100000100111111111000111\\r\\n', 'output': ['1110100010111000101001001011101110011111100111000011011011']}, {'input': '11001000001100100111100111100100101011000101001111001001101\\r\\n10111110100010000011010100110100100011101001100000001110110\\r\\n', 'output': ['01110110101110100100110011010000001000101100101111000111011']}, {'input': '010111011011101000000110000110100110001110100001110110111011\\r\\n101011110011101011101101011111010100100001100111100100111011\\r\\n', 'output': ['111100101000000011101011011001110010101111000110010010000000']}, {'input': '1001011110110110000100011001010110000100011010010111010101110\\r\\n1101111100001000010111110011010101111010010100000001000010111\\r\\n', 'output': ['0100100010111110010011101010000011111110001110010110010111001']}, {'input': '10000010101111100111110101111000010100110111101101111111111010\\r\\n10110110101100101010011001011010100110111011101100011001100111\\r\\n', 'output': ['00110100000011001101101100100010110010001100000001100110011101']}, {'input': '011111010011111000001010101001101001000010100010111110010100001\\r\\n011111001011000011111001000001111001010110001010111101000010011\\r\\n', 'output': ['000000011000111011110011101000010000010100101000000011010110010']}, {'input': '1111000000110001011101000100100100001111011100001111001100011111\\r\\n1101100110000101100001100000001001011011111011010101000101001010\\r\\n', 'output': ['0010100110110100111100100100101101010100100111011010001001010101']}, {'input': '01100000101010010011001110100110110010000110010011011001100100011\\r\\n10110110010110111100100111000111000110010000000101101110000010111\\r\\n', 'output': ['11010110111100101111101001100001110100010110010110110111100110100']}, {'input': '001111111010000100001100001010011001111110011110010111110001100111\\r\\n110000101001011000100010101100100110000111100000001101001110010111\\r\\n', 'output': ['111111010011011100101110100110111111111001111110011010111111110000']}, {'input': '1011101011101101011110101101011101011000010011100101010101000100110\\r\\n0001000001001111010111100100111101100000000001110001000110000000110\\r\\n', 'output': ['1010101010100010001001001001100000111000010010010100010011000100000']}, {'input': '01000001011001010011011100010000100100110101111011011011110000001110\\r\\n01011110000110011011000000000011000111100001010000000011111001110000\\r\\n', 'output': ['00011111011111001000011100010011100011010100101011011000001001111110']}, {'input': '110101010100110101000001111110110100010010000100111110010100110011100\\r\\n111010010111111011100110101011001011001110110111110100000110110100111\\r\\n', 'output': ['001111000011001110100111010101111111011100110011001010010010000111011']}, {'input': '1001101011000001011111100110010010000011010001001111011100010100110001\\r\\n1111100111110101001111010001010000011001001001010110001111000000100101\\r\\n', 'output': ['0110001100110100010000110111000010011010011000011001010011010100010100']}, {'input': '00000111110010110001110110001010010101000111011001111111100110011110010\\r\\n00010111110100000100110101000010010001100001100011100000001100010100010\\r\\n', 'output': ['00010000000110110101000011001000000100100110111010011111101010001010000']}, {'input': '100101011100101101000011010001011001101110101110001100010001010111001110\\r\\n100001111100101011011111110000001111000111001011111110000010101110111001\\r\\n', 'output': ['000100100000000110011100100001010110101001100101110010010011111001110111']}, {'input': '1101100001000111001101001011101000111000011110000001001101101001111011010\\r\\n0101011101010100011011010110101000010010110010011110101100000110110001000\\r\\n', 'output': ['1000111100010011010110011101000000101010101100011111100001101111001010010']}, {'input': '01101101010011110101100001110101111011100010000010001101111000011110111111\\r\\n00101111001101001100111010000101110000100101101111100111101110010100011011\\r\\n', 'output': ['01000010011110111001011011110000001011000111101101101010010110001010100100']}, {'input': '101100101100011001101111110110110010100110110010100001110010110011001101011\\r\\n000001011010101011110011111101001110000111000010001101000010010000010001101\\r\\n', 'output': ['101101110110110010011100001011111100100001110000101100110000100011011100110']}, {'input': '0010001011001010001100000010010011110110011000100000000100110000101111001110\\r\\n1100110100111000110100001110111001011101001100001010100001010011100110110001\\r\\n', 'output': ['1110111111110010111000001100101010101011010100101010100101100011001001111111']}, {'input': '00101101010000000101011001101011001100010001100000101011101110000001111001000\\r\\n10010110010111000000101101000011101011001010000011011101101011010000000011111\\r\\n', 'output': ['10111011000111000101110100101000100111011011100011110110000101010001111010111']}, {'input': '111100000100100000101001100001001111001010001000001000000111010000010101101011\\r\\n001000100010100101111011111011010110101100001111011000010011011011100010010110\\r\\n', 'output': ['110100100110000101010010011010011001100110000111010000010100001011110111111101']}, {'input': '0110001101100100001111110101101000100101010010101010011001101001001101110000000\\r\\n0111011000000010010111011110010000000001000110001000011001101000000001110100111\\r\\n', 'output': ['0001010101100110011000101011111000100100010100100010000000000001001100000100111']}, {'input': '10001111111001000101001011110101111010100001011010101100111001010001010010001000\\r\\n10000111010010011110111000111010101100000011110001101111001000111010100000000001\\r\\n', 'output': ['00001000101011011011110011001111010110100010101011000011110001101011110010001001']}, {'input': '100110001110110000100101001110000011110110000110000000100011110100110110011001101\\r\\n110001110101110000000100101001101011111100100100001001000110000001111100011110110\\r\\n', 'output': ['010111111011000000100001100111101000001010100010001001100101110101001010000111011']}, {'input': '0000010100100000010110111100011111111010011101000000100000011001001101101100111010\\r\\n0100111110011101010110101011110110010111001111000110101100101110111100101000111111\\r\\n', 'output': ['0100101010111101000000010111101001101101010010000110001100110111110001000100000101']}, {'input': '11000111001010100001110000001001011010010010110000001110100101000001010101100110111\\r\\n11001100100100100001101010110100000111100011101110011010110100001001000011011011010\\r\\n', 'output': ['00001011101110000000011010111101011101110001011110010100010001001000010110111101101']}, {'input': '010110100010001000100010101001101010011010111110100001000100101000111011100010100001\\r\\n110000011111101101010011111000101010111010100001001100001001100101000000111000000000\\r\\n', 'output': ['100110111101100101110001010001000000100000011111101101001101001101111011011010100001']}, {'input': '0000011110101110010101110110110101100001011001101010101001000010000010000000101001101\\r\\n1100111111011100000110000111101110011111100111110001011001000010011111100001001100011\\r\\n', 'output': ['1100100001110010010011110001011011111110111110011011110000000000011101100001100101110']}, {'input': '10100000101101110001100010010010100101100011010010101000110011100000101010110010000000\\r\\n10001110011011010010111011011101101111000111110000111000011010010101001100000001010011\\r\\n', 'output': ['00101110110110100011011001001111001010100100100010010000101001110101100110110011010011']}, {'input': '001110000011111101101010011111000101010111010100001001100001001100101000000111000000000\\r\\n111010000000000000101001110011001000111011001100101010011001000011101001001011110000011\\r\\n', 'output': ['110100000011111101000011101100001101101100011000100011111000001111000001001100110000011']}, {'input': '1110111100111011010101011011001110001010010010110011110010011111000010011111010101100001\\r\\n1001010101011001001010100010101100000110111101011000100010101111111010111100001110010010\\r\\n', 'output': ['0111101001100010011111111001100010001100101111101011010000110000111000100011011011110011']}, {'input': '11100010001100010011001100001100010011010001101110011110100101110010101101011101000111111\\r\\n01110000000110111010110100001010000101011110100101010011000110101110101101110111011110001\\r\\n', 'output': ['10010010001010101001111000000110010110001111001011001101100011011100000000101010011001110']}, {'input': '001101011001100101101100110000111000101011001001100100000100101000100000110100010111111101\\r\\n101001111110000010111101111110001001111001111101111010000110111000100100110010010001011111\\r\\n', 'output': ['100100100111100111010001001110110001010010110100011110000010010000000100000110000110100010']}, {'input': '1010110110010101000110010010110101011101010100011001101011000110000000100011100100011000000\\r\\n0011011111100010001111101101000111001011101110100000110111100100101111010110101111011100011\\r\\n', 'output': ['1001101001110111001001111111110010010110111010111001011100100010101111110101001011000100011']}, {'input': '10010010000111010111011111110010100101100000001100011100111011100010000010010001011100001100\\r\\n00111010100010110010000100010111010001111110100100100011101000101111111111001101101100100100\\r\\n', 'output': ['10101000100101100101011011100101110100011110101000111111010011001101111101011100110000101000']}, {'input': '010101110001010101100000010111010000000111110011001101100011001000000011001111110000000010100\\r\\n010010111011100101010101111110110000000111000100001101101001001000001100101110001010000100001\\r\\n', 'output': ['000111001010110000110101101001100000000000110111000000001010000000001111100001111010000110101']}, {'input': '1100111110011001000111101001001011000110011010111111100010111111001100111111011101100111101011\\r\\n1100000011001000110100110111000001011001010111101000010010100011000001100100111101101000010110\\r\\n', 'output': ['0000111101010001110011011110001010011111001101010111110000011100001101011011100000001111111101']}, {'input': '00011000100100110111100101100100000000010011110111110010101110110011100001010111010011110100101\\r\\n00011011111011111011100101100111100101001110010111000010000111000100100100000001110101111011011\\r\\n', 'output': ['00000011011111001100000000000011100101011101100000110000101001110111000101010110100110001111110']}, {'input': '000101011001001100000111100010110101111011110101111101000110001101011010111110110011100100000001\\r\\n011000101010011111011000111000100000000011011000000001111110001000001111101010110000011100001111\\r\\n', 'output': ['011101110011010011011111011010010101111000101101111100111000000101010101010100000011111000001110']}, {'input': '1000101001011010000100100100010010011101011001110101111011101111111110010101001101010001010101001\\r\\n0110110010011100011111011111110111000000010001110100001010111110101011010011111011111110000110000\\r\\n', 'output': ['1110011011000110011011111011100101011101001000000001110001010001010101000110110110101111010011001']}, {'input': '01111010010101100111110111111011011010100001011101010000111100101101101110111011001100101011100111\\r\\n00001100110110100001111011000010001001001100000010111101000001111011100000010111010010000011000010\\r\\n', 'output': ['01110110100011000110001100111001010011101101011111101101111101010110001110101100011110101000100101']}, {'input': '111101011101111000001011001101111010110111001101110100100011111011011101001101010101011010111000110\\r\\n101111100101101101001100110011000001111010011101110111110110101110011011110011111100001001110101101\\r\\n', 'output': ['010010111000010101000111111110111011001101010000000011010101010101000110111110101001010011001101011']}, {'input': '1010000011010110011101001101110001110010000111011101110010110110111111001001110100101100010101010001\\r\\n0111101000111100101100000101111010100100001000011101010100110011100011010011010101000100101011100011\\r\\n', 'output': ['1101101011101010110001001000001011010110001111000000100110000101011100011010100001101000111110110010']}, {'input': '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\\r\\n1111111010111111101011111110101111111010111111101011111110101111111010111111101011111110101111111010\\r\\n', 'output': ['1111111010111111101011111110101111111010111111101011111110101111111010111111101011111110101111111011']}, {'input': '0\\r\\n0\\r\\n', 'output': ['0']}, {'input': '0\\r\\n1\\r\\n', 'output': ['1']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string a, b;\n  cin >> a >> b;\n  for (int i = 0; i < a.size(); i++) {\n    if (a[i]!= b[i]) {\n      cout << 1;\n    } else {\n      cout << 0;\n    }\n  }\n  return 0;\n}\n"}
{"src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "id": 26, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '5\\r\\n10 12 13 15 10\\r\\n', 'output': ['5 1\\r\\n']}, {'input': '4\\r\\n10 20 30 40\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '6\\r\\n744 359 230 586 944 442\\r\\n', 'output': ['2 3\\r\\n']}, {'input': '5\\r\\n826 747 849 687 437\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '5\\r\\n999 999 993 969 999\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '5\\r\\n4 24 6 1 15\\r\\n', 'output': ['3 4\\r\\n']}, {'input': '2\\r\\n511 32\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '3\\r\\n907 452 355\\r\\n', 'output': ['2 3\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['4 1\\r\\n']}, {'input': '10\\r\\n684 698 429 694 956 812 594 170 937 764\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '20\\r\\n646 840 437 946 640 564 936 917 487 752 844 734 468 969 674 646 728 642 514 695\\r\\n', 'output': ['7 8\\r\\n']}, {'input': '30\\r\\n996 999 998 984 989 1000 996 993 1000 983 992 999 999 1000 979 992 987 1000 996 1000 1000 989 981 996 995 999 999 989 999 1000\\r\\n', 'output': ['12 13\\r\\n']}, {'input': '50\\r\\n93 27 28 4 5 78 59 24 19 134 31 128 118 36 90 32 32 1 44 32 33 13 31 10 12 25 38 50 25 12 4 22 28 53 48 83 4 25 57 31 71 24 8 7 28 86 23 80 101 58\\r\\n', 'output': ['16 17\\r\\n']}, {'input': '88\\r\\n1000 1000 1000 1000 1000 998 998 1000 1000 1000 1000 999 999 1000 1000 1000 999 1000 997 999 997 1000 999 998 1000 999 1000 1000 1000 999 1000 999 999 1000 1000 999 1000 999 1000 1000 998 1000 1000 1000 998 998 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 999 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 998 1000 1000 998 1000 999 1000 1000 1000 1000\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '99\\r\\n4 4 21 6 5 3 13 2 6 1 3 4 1 3 1 9 11 1 6 17 4 5 20 4 1 9 5 11 3 4 14 1 3 3 1 4 3 5 27 1 1 2 10 7 11 4 19 7 11 6 11 13 3 1 10 7 2 1 16 1 9 4 29 13 2 12 14 2 21 1 9 8 26 12 12 5 2 14 7 8 8 8 9 4 12 2 6 6 7 16 8 14 2 10 20 15 3 7 4\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '100\\r\\n713 572 318 890 577 657 646 146 373 783 392 229 455 871 20 593 573 336 26 381 280 916 907 732 820 713 111 840 570 446 184 711 481 399 788 647 492 15 40 530 549 506 719 782 126 20 778 996 712 761 9 74 812 418 488 175 103 585 900 3 604 521 109 513 145 708 990 361 682 827 791 22 596 780 596 385 450 643 158 496 876 975 319 783 654 895 891 361 397 81 682 899 347 623 809 557 435 279 513 438\\r\\n', 'output': ['86 87\\r\\n']}, {'input': '100\\r\\n31 75 86 68 111 27 22 22 26 30 54 163 107 75 160 122 14 23 17 26 27 20 43 58 59 71 21 148 9 32 43 91 133 286 132 70 90 156 84 14 77 93 23 18 13 72 18 131 33 28 72 175 30 86 249 20 14 208 28 57 63 199 6 10 24 30 62 267 43 479 60 28 138 1 45 3 19 47 7 166 116 117 50 140 28 14 95 85 93 43 61 15 2 70 10 51 7 95 9 25\\r\\n', 'output': ['7 8\\r\\n']}, {'input': '100\\r\\n896 898 967 979 973 709 961 968 806 967 896 967 826 975 936 903 986 856 851 931 852 971 786 837 949 978 686 936 952 909 965 749 908 916 943 973 983 975 939 886 964 928 960 976 907 788 994 773 949 871 947 980 945 985 726 981 887 943 907 990 931 874 840 867 948 951 961 904 888 901 976 967 994 921 828 970 972 722 755 970 860 855 914 869 714 899 969 978 898 862 642 939 904 936 819 934 884 983 955 964\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '100\\r\\n994 927 872 970 815 986 952 996 965 1000 877 986 978 999 950 990 936 997 993 960 921 860 895 869 943 998 983 968 973 953 999 990 995 871 853 979 973 963 953 938 997 989 993 964 960 973 946 975 1000 962 920 746 989 957 904 965 920 979 966 961 1000 993 975 952 846 971 991 979 985 969 984 973 956 1000 952 778 983 974 956 927 995 997 980 997 1000 970 960 970 988 983 947 904 935 972 1000 863 992 996 932 967\\r\\n', 'output': ['81 82\\r\\n']}, {'input': '100\\r\\n48 108 63 21 27 8 49 21 75 8 24 42 149 18 8 28 21 18 25 35 59 70 59 33 40 1 67 34 120 82 4 115 72 87 3 15 15 63 37 12 40 27 83 14 38 20 14 58 93 10 31 3 39 6 197 77 54 16 31 146 9 49 14 8 77 82 5 11 80 116 8 61 50 24 7 103 29 11 3 3 1 12 46 24 21 131 39 29 36 2 107 40 16 99 31 41 29 48 17 17\\r\\n', 'output': ['36 37\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a[10000], b[10000], i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x,\n      y, z, min, min1, min2, min3, min4, min5, min6, min7, min8, min9,\n      min10, min11, min12, min13, min14, min15, min16, min17, min18, min19,\n      min20, min21, min22, min23, min24, min25, min26, min27, min28, min29,\n      min30, min31, min32, min33, min34, min35, min36, min37, min38, min39,\n      min40, min41, min42, min43, min44, min45, min46, min47, min48, min49,\n      min50, min51, min52, min53, min54, min55, min56, min57, min58, min59,\n      min60, min61, min62, min63, min64, min65, min66, min67, min68, min69,\n      min70, min71, min72, min73, min74, min75, min76, min77, min78, min79,\n      min80, min81, min82, min83, min84, min85, min86, min87, min88, min89,\n      min90, min91, min92, min93, min94, min95, min96, min97, min98, min99,\n      min100, min101, min102, min103, min104, min105, min106, min107, min108,\n      min109, min110, min111, min112, min113, min114, min115, min116, min117,\n      min118, min119, min120, min121, min122, min123, min124, min125, min126,\n      min127, min128, min129, min130, min131, min132, min133, min134, min135,\n      min136, min137, min138, min139, min140, min141, min142, min143, min144,\n      min145, min146, min147, min148, min149, min150, min151, min152, min153,\n      min154, min155, min156, min157, min158, min159, min160, min161, min162,\n      min163, min164, min165, min166, min167, min168, min169, min170, min171,\n      min172, min173, min174, min175, min176, min177, min178, min179, min180,\n      min181, min182, min183, min184, min185, min186, min187, min188, min189,\n      min190, min191, min192, min193, min194, min195, min196, min197, min198,\n      min199, min200, min201, min202, min203, min204, min205, min206, min207,\n      min208, min209, min210, min211, min212, min213, min214, min215, min216,\n      min217, min218, min219, min220, min221, min222, min223, min224, min225,\n      min226, min227, min228, min229, min230, min231, min232, min233, min234,\n      min235, min236, min237, min238, min239, min240, min241, min242, min243,\n      min244, min245, min246, min247, min248, min249, min250, min251, min252,\n      min253, min254, min255, min256, min257, min258, min259, min260, min261,\n      min262, min263, min264, min265, min266, min267, min268, min269, min270,\n      min271, min272, min273, min274, min275, min276, min277, min278, min279,\n      min280, min281, min282, min283, min284, min285, min286, min287, min288,\n      min289, min290, min291, min292, min293, min294, min295, min296, min297,\n      min298, min299, min300, min301, min302, min303, min304, min305, min306,\n      min307, min308, min309, min310, min311, min312, min313, min314, min315,\n      min316, min317, min318, min319, min320, min321, min322, min323, min324,\n      min325, min326, min327, min328, min329, min330, min331, min332, min333,\n      min334, min335, min336, min337, min338, min339, min340, min341, min342,\n      min343, min344, min345, min346, min347, min348, min349, min350, min351,\n      min352, min353, min354, min355, min356, min357, min358, min359, min360,\n      min361, min362, min363, min364, min365, min366, min367, min368, min369,\n      min370, min371, min372, min373, min374, min375, min376, min377, min378,\n      min379, min380, min381, min382, min383, min384, min385, min386, min387,\n      min388, min389, min390, min391, min392, min393, min394, min395, min396,\n      min397, min39"}
{"src_uid": "1a740b0ad2ec3ed208f01fc7b64e00d4", "id": 27, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': '3 3\\r\\n1\\r\\n2 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '3 3\\r\\n1\\r\\n1 1\\r\\n', 'output': ['3 3\\r\\n']}, {'input': '3 3\\r\\n2\\r\\n1 1 3 3\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n1 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '2 2\\r\\n1\\r\\n2 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '2 2\\r\\n2\\r\\n1 1 2 1\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '2 2\\r\\n3\\r\\n1 2 2 1 1 1\\r\\n', 'output': ['2 2\\r\\n']}, {'input': '2 2\\r\\n4\\r\\n2 1 2 2 1 1 1 2\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n1\\r\\n5 5\\r\\n', 'output': ['10 10\\r\\n']}, {'input': '10 10\\r\\n2\\r\\n7 8 1 9\\r\\n', 'output': ['3 1\\r\\n']}, {'input': '10 10\\r\\n3\\r\\n3 9 6 3 3 5\\r\\n', 'output': ['10 7\\r\\n']}, {'input': '10 10\\r\\n4\\r\\n5 3 4 7 7 5 8 5\\r\\n', 'output': ['10 10\\r\\n']}, {'input': '10 10\\r\\n5\\r\\n2 7 10 6 5 3 9 5 2 9\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n6\\r\\n5 1 4 6 3 9 9 9 5 7 7 2\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '10 10\\r\\n7\\r\\n5 8 4 6 4 1 6 2 1 10 3 2 7 10\\r\\n', 'output': ['10 5\\r\\n']}, {'input': '10 10\\r\\n8\\r\\n9 4 9 10 5 8 6 5 1 3 2 5 10 6 2 1\\r\\n', 'output': ['1 10\\r\\n']}, {'input': '10 10\\r\\n9\\r\\n10 1 10 4 8 4 6 6 1 9 10 10 7 7 6 5 7 10\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '10 10\\r\\n10\\r\\n7 2 1 9 5 8 6 10 9 4 10 8 6 8 8 7 4 1 9 5\\r\\n', 'output': ['1 3\\r\\n']}, {'input': '100 100\\r\\n1\\r\\n44 3\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n2\\r\\n79 84 76 63\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '100 100\\r\\n3\\r\\n89 93 99 32 32 82\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '100 100\\r\\n4\\r\\n72 12 1 66 57 67 25 67\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n5\\r\\n22 41 82 16 6 3 20 6 69 78\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n6\\r\\n92 32 90 80 32 40 24 19 36 37 39 13\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n7\\r\\n30 32 29 63 86 78 88 2 86 50 41 60 54 28\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n8\\r\\n40 43 96 8 17 63 61 59 16 69 4 95 30 62 12 91\\r\\n', 'output': ['100 100\\r\\n']}, {'input': '100 100\\r\\n9\\r\\n18 16 41 71 25 1 43 38 78 92 77 70 99 8 33 54 76 78\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 100\\r\\n10\\r\\n58 98 33 62 75 13 94 86 81 42 14 53 12 66 7 14 3 63 87 37\\r\\n', 'output': ['40 1\\r\\n']}, {'input': '2000 2000\\r\\n1\\r\\n407 594\\r\\n', 'output': ['2000 2000\\r\\n']}, {'input': '2000 2000\\r\\n2\\r\\n1884 43 1235 1111\\r\\n', 'output': ['1 2000\\r\\n']}, {'input': '2000 2000\\r\\n3\\r\\n1740 1797 1279 1552 329 756\\r\\n', 'output': ['2000 1\\r\\n']}, {'input': '2000 2000\\r\\n4\\r\\n1844 1342 171 1810 1558 1141 1917 1999\\r\\n', 'output': ['530 1\\r\\n']}, {'input': '2000 2000\\r\\n5\\r\\n1846 327 1911 1534 134 1615 1664 682 1982 1112\\r\\n', 'output': ['346 1\\r\\n']}, {'input': '2000 2000\\r\\n6\\r\\n1744 1102 852 723 409 179 89 1085 997 1433 1082 1680\\r\\n', 'output': ['2000 1\\r\\n']}, {'input': '2000 2000\\r\\n7\\r\\n1890 22 288 1729 383 831 1192 1206 721 1376 969 492 510 1699\\r\\n', 'output': ['2000 2000\\r\\n']}, {'input': '2000 2000\\r\\n8\\r\\n286 381 572 1849 1703 1574 622 1047 1507 941 871 663 1930 120 1084 1830\\r\\n', 'output': ['1 1423\\r\\n']}, {'input': '2000 2000\\r\\n9\\r\\n226 531 56 138 722 405 1082 608 1355 1426 83 544 275 1268 683 412 1880 1049\\r\\n', 'output': ['1701 1\\r\\n']}, {'input': '2000 2000\\r\\n10\\r\\n763 851 1182 571 1758 389 247 1907 730 881 531 1970 1430 667 169 765 1729 120 129 967\\r\\n', 'output': ['2000 1793\\r\\n']}, {'input': '2000 2000\\r\\n10\\r\\n655 95 1640 1656 1344 79 666 1677 968 1180 522 1394 1850 1568 336 130 412 920 29 1664\\r\\n', 'output': ['2000 570\\r\\n']}, {'input': '10 1\\r\\n10\\r\\n4 1 6 1 10 1 9 1 1 1 7 1 5 1 2 1 8 1 3 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 10\\r\\n10\\r\\n1 10 1 4 1 3 1 7 1 6 1 1 1 8 1 2 1 9 1 5\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 100\\r\\n10\\r\\n1 68 1 18 1 43 1 12 1 64 1 34 1 23 1 70 1 46 1 33\\r\\n', 'output': ['1 100\\r\\n']}, {'input': '100 1\\r\\n10\\r\\n62 1 63 1 57 1 76 1 35 1 69 1 73 1 95 1 96 1 21 1\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 2000\\r\\n10\\r\\n1 1730 1 1374 1 831 1 1076 1 580 1 914 1 123 1 668 1 1288 1 160\\r\\n', 'output': ['1 2000\\r\\n']}, {'input': '2000 1\\r\\n10\\r\\n1058 1 1779 1 1995 1 1398 1 96 1 1599 1 1496 1 1659 1 385 1 1485 1\\r\\n', 'output': ['721 1\\r\\n']}, {'input': '5 5\\r\\n1\\r\\n1 1\\r\\n', 'output': ['5 5\\r\\n']}, {'input': '2 5\\r\\n10\\r\\n1 1 1 2 1 3 1 4 1 5 2 1 2 2 2 3 2 4 2 5\\r\\n', 'output': ['1 1\\r\\n']}, {'input': '1 10\\r\\n9\\r\\n1 1 1 2 1 3 1 4 1 6 1 7 1 8 1 9 1 10\\r\\n', 'output': ['1 5\\r\\n']}, {'input': '3 3\\r\\n5\\r\\n1 1 1 3 2 2 3 1 3 3\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '999 999\\r\\n4\\r\\n1 499 499 1 499 999 999 499\\r\\n', 'output': ['500 500\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  int a[n][m];\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      a[i][j] = 0;\n    }\n  }\n  for (int i = 0; i < k; i++) {\n    int x, y;\n    cin >> x >> y;\n    a[x - 1][y - 1] = 1;\n  }\n  int x = 0, y = 0;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      if (a[i][j] == 0) {\n        x = i;\n        y = j;\n      }\n    }\n  }\n  cout << x + 1 << \" \" << y + 1 << endl;\n  return 0;\n}\n"}
{"src_uid": "88e6651e1b0481d711e89c8071be1edf", "id": 28, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1000, "testcases": "[{'input': '1\\r\\n1 2\\r\\n2 1\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n2 1\\r\\n3 1\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 1\\r\\n2 1\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n1 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 2\\r\\n3 1\\r\\n3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n2 1\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 1\\r\\n2 3\\r\\n3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 3\\r\\n1 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n3 2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1 3\\r\\n1 3\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n2 3\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n1 3\\r\\n3 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n1 2\\r\\n2 1\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n2 3\\r\\n1 3\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '2\\r\\n3 1\\r\\n3 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 3\\r\\n3 1\\r\\n3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n3 2\\r\\n1 3\\r\\n3 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 3\\r\\n1 2\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n3 2\\r\\n3 1\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['3\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v,\n      w, x, y, z, ans;\n  cin >> n;\n  cin >> a >> b;\n  cin >> c >> d;\n  cin >> e >> f;\n  cin >> g >> h;\n  cin >> i >> j;\n  cin >> k >> l;\n  cin >> m >> n;\n "}
{"src_uid": "0df064fd0288c2ac4832efa227107a0e", "id": 29, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1500, "testcases": "[{'input': 'abdrakadabra\\r\\nabrakadabra\\r\\n', 'output': ['1\\r\\n3 ']}, {'input': 'aa\\r\\na\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'competition\\r\\ncodeforces\\r\\n', 'output': ['0\\r\\n']}, {'input': 'ab\\r\\na\\r\\n', 'output': ['1\\r\\n2 ']}, {'input': 'bb\\r\\nb\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'aab\\r\\nab\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'aabb\\r\\nabb\\r\\n', 'output': ['2\\r\\n1 2 ']}, {'input': 'babaacaacaa\\r\\nbbaacaacaa\\r\\n', 'output': ['1\\r\\n2 ']}, {'input': 'bccaabbcccc\\r\\nbccaabcccc\\r\\n', 'output': ['2\\r\\n6 7 ']}, {'input': 'ababcaabaaa\\r\\nabacaabaaa\\r\\n', 'output': ['1\\r\\n4 ']}, {'input': 'cccacaccacb\\r\\ncccacaccac\\r\\n', 'output': ['1\\r\\n11 ']}, {'input': 'aaaaaaaaaaa\\r\\naaaaaaaaaa\\r\\n', 'output': ['11\\r\\n1 2 3 4 5 6 7 8 9 10 11 ']}, {'input': 'lcaaxcbcjca\\r\\nccaaacccca\\r\\n', 'output': ['0\\r\\n']}, {'input': 'babbbtaamba\\r\\nbabbbaabba\\r\\n', 'output': ['0\\r\\n']}, {'input': 'xdfxmcnzpch\\r\\nazvotghvtk\\r\\n', 'output': ['0\\r\\n']}, {'input': 'ki\\r\\nb\\r\\n', 'output': ['0\\r\\n']}, {'input': 'vct\\r\\nie\\r\\n', 'output': ['0\\r\\n']}, {'input': 'feee\\r\\nsnl\\r\\n', 'output': ['0\\r\\n']}, {'input': 'cbxxxxzvks\\r\\ncbxxxzvks\\r\\n', 'output': ['4\\r\\n3 4 5 6 ']}, {'input': 'qybldcgfhdhhhhhhhhhhopqkhuczzytzluiahwbqjltgafvvoecititchjwdoljiehubngmtjckqymldhoncgtqhxnqvoagnrmur\\r\\nqybldcgfhdhhhhhhhhhopqkhuczzytzluiahwbqjltgafvvoecititchjwdoljiehubngmtjckqymldhoncgtqhxnqvoagnrmur\\r\\n', 'output': ['10\\r\\n11 12 13 14 15 16 17 18 19 20 ']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  int n = s1.size();\n  int m = s2.size();\n  int i, j;\n  int cnt = 0;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < m; j++) {\n      if (s1[i] == s2[j]) {\n        cnt++;\n        break;\n      }\n    }\n  }\n  if (cnt == n - 1) {\n    cout << n - 1 << endl;\n    for (i = 0; i < n - 1; i++) {\n      if (s1[i]!= s2[i]) {\n        cout << i + 1 << \" \";\n      }\n    }\n  } else {\n    cout << 0 << endl;\n  }\n  return 0;\n}\n"}
{"src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "id": 30, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 800, "testcases": "[{'input': '10\\r\\n', 'output': ['2 4 7 1 6 2 9 7 6\\r\\n']}, {'input': '3\\r\\n', 'output': ['2 1\\r\\n']}, {'input': '4\\r\\n', 'output': ['2 4 3\\r\\n']}, {'input': '5\\r\\n', 'output': ['2 4 2 1\\r\\n']}, {'input': '6\\r\\n', 'output': ['2 4 1 5 4\\r\\n']}, {'input': '7\\r\\n', 'output': ['2 4 7 4 2 1\\r\\n']}, {'input': '8\\r\\n', 'output': ['2 4 7 3 8 6 5\\r\\n']}, {'input': '9\\r\\n', 'output': ['2 4 7 2 7 4 2 1\\r\\n']}, {'input': '2\\r\\n', 'output': ['2\\r\\n']}, {'input': '11\\r\\n', 'output': ['2 4 7 11 5 11 7 4 2 1\\r\\n']}, {'input': '12\\r\\n', 'output': ['2 4 7 11 4 10 5 1 10 8 7\\r\\n']}, {'input': '13\\r\\n', 'output': ['2 4 7 11 3 9 3 11 7 4 2 1\\r\\n']}, {'input': '20\\r\\n', 'output': ['2 4 7 11 16 2 9 17 6 16 7 19 12 6 1 17 14 12 11\\r\\n']}, {'input': '25\\r\\n', 'output': ['2 4 7 11 16 22 4 12 21 6 17 4 17 6 21 12 4 22 16 11 7 4 2 1\\r\\n']}, {'input': '30\\r\\n', 'output': ['2 4 7 11 16 22 29 7 16 26 7 19 2 16 1 17 4 22 11 1 22 14 7 1 26 22 19 17 16\\r\\n']}, {'input': '35\\r\\n', 'output': ['2 4 7 11 16 22 29 2 11 21 32 9 22 1 16 32 14 32 16 1 22 9 32 21 11 2 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '40\\r\\n', 'output': ['2 4 7 11 16 22 29 37 6 16 27 39 12 26 1 17 34 12 31 11 32 14 37 21 6 32 19 7 36 26 17 9 2 36 31 27 24 22 21\\r\\n']}, {'input': '45\\r\\n', 'output': ['2 4 7 11 16 22 29 37 1 11 22 34 2 16 31 2 19 37 11 31 7 29 7 31 11 37 19 2 31 16 2 34 22 11 1 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '50\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 6 17 29 42 6 21 37 4 22 41 11 32 4 27 1 26 2 29 7 36 16 47 29 12 46 31 17 4 42 31 21 12 4 47 41 36 32 29 27 26\\r\\n']}, {'input': '55\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 1 12 24 37 51 11 27 44 7 26 46 12 34 2 26 51 22 49 22 51 26 2 34 12 46 26 7 44 27 11 51 37 24 12 1 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '60\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 7 19 32 46 1 17 34 52 11 31 52 14 37 1 26 52 19 47 16 46 17 49 22 56 31 7 44 22 1 41 22 4 47 31 16 2 49 37 26 16 7 59 52 46 41 37 34 32 31\\r\\n']}, {'input': '65\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 2 14 27 41 56 7 24 42 61 16 37 59 17 41 1 27 54 17 46 11 42 9 42 11 46 17 54 27 1 41 17 59 37 16 61 42 24 7 56 41 27 14 2 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '70\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 9 22 36 51 67 14 32 51 1 22 44 67 21 46 2 29 57 16 46 7 39 2 36 1 37 4 42 11 51 22 64 37 11 56 32 9 57 36 16 67 49 32 16 1 57 44 32 21 11 2 64 57 51 46 42 39 37 36\\r\\n']}, {'input': '75\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 4 17 31 46 62 4 22 41 61 7 29 52 1 26 52 4 32 61 16 47 4 37 71 31 67 29 67 31 71 37 4 47 16 61 32 4 52 26 1 52 29 7 61 41 22 4 62 46 31 17 4 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '80\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 12 26 41 57 74 12 31 51 72 14 37 61 6 32 59 7 36 66 17 49 2 36 71 27 64 22 61 21 62 24 67 31 76 42 9 57 26 76 47 19 72 46 21 77 54 32 11 71 52 34 17 1 66 52 39 27 16 6 77 69 62 56 51 47 44 42 41\\r\\n']}, {'input': '85\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 7 21 36 52 69 2 21 41 62 84 22 46 71 12 39 67 11 41 72 19 52 1 36 72 24 62 16 56 12 54 12 56 16 62 24 72 36 1 52 19 72 41 11 67 39 12 71 46 22 84 62 41 21 2 69 52 36 21 7 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '90\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 2 16 31 47 64 82 11 31 52 74 7 31 56 82 19 47 76 16 47 79 22 56 1 37 74 22 61 11 52 4 47 1 46 2 49 7 56 16 67 29 82 46 11 67 34 2 61 31 2 64 37 11 76 52 29 7 76 56 37 19 2 76 61 47 34 22 11 1 82 74 67 61 56 52 49 47 46\\r\\n']}, {'input': '95\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 11 26 42 59 77 1 21 42 64 87 16 41 67 94 27 56 86 22 54 87 26 61 2 39 77 21 61 7 49 92 41 86 37 84 37 86 41 92 49 7 61 21 77 39 2 61 26 87 54 22 86 56 27 94 67 41 16 87 64 42 21 1 77 59 42 26 11 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '96\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 10 25 41 58 76 95 19 40 62 85 13 38 64 91 23 52 82 17 49 82 20 55 91 32 70 13 53 94 40 83 31 76 26 73 25 74 28 79 35 88 46 5 61 22 80 43 7 68 34 1 65 34 4 71 43 16 86 61 37 14 88 67 47 28 10 89 73 58 44 31 19 8 94 85 77 70 64 59 55 52 50 49\\r\\n']}, {'input': '97\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 9 24 40 57 75 94 17 38 60 83 10 35 61 88 19 48 78 12 44 77 14 49 85 25 63 5 45 86 31 74 21 66 15 62 13 62 15 66 21 74 31 86 45 5 63 25 85 49 14 77 44 12 78 48 19 88 61 35 10 83 60 38 17 94 75 57 40 24 9 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '98\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 8 23 39 56 74 93 15 36 58 81 7 32 58 85 15 44 74 7 39 72 8 43 79 18 56 95 37 78 22 65 11 56 4 51 1 50 2 53 7 60 16 71 29 86 46 7 67 30 92 57 23 88 56 25 93 64 36 9 81 56 32 9 85 64 44 25 7 88 72 57 43 30 18 7 95 86 78 71 65 60 56 53 51 50\\r\\n']}, {'input': '99\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 7 22 38 55 73 92 13 34 56 79 4 29 55 82 11 40 70 2 34 67 2 37 73 11 49 88 29 70 13 56 1 46 92 40 88 38 88 40 92 46 1 56 13 70 29 88 49 11 73 37 2 67 34 2 70 40 11 82 55 29 4 79 56 34 13 92 73 55 38 22 7 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '100\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 6 21 37 54 72 91 11 32 54 77 1 26 52 79 7 36 66 97 29 62 96 31 67 4 42 81 21 62 4 47 91 36 82 29 77 26 76 27 79 32 86 41 97 54 12 71 31 92 54 17 81 46 12 79 47 16 86 57 29 2 76 51 27 4 82 61 41 22 4 87 71 56 42 29 17 6 96 87 79 72 66 61 57 54 52 51\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int i = 1;\n  int j = 2;\n  int k = 1;\n  for (int l = 1; l < n; l++) {\n    cout << j << \" \";\n    k = k + i;\n    j = j + k;\n    i++;\n  }\n  return 0;\n}\n"}
{"src_uid": "ba9c136f84375cd317f0f8b53e3939c7", "id": 31, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '2 1\\r\\n0 1\\r\\n2 1\\r\\n', 'output': ['332748119\\r\\n332748119']}, {'input': '1 2\\r\\n1\\r\\n1\\r\\n', 'output': ['3']}, {'input': '3 3\\r\\n0 1 1\\r\\n4 3 5\\r\\n', 'output': ['160955686\\r\\n185138929\\r\\n974061117']}, {'input': '5 5\\r\\n0 1 0 0 1\\r\\n9 8 3 8 8\\r\\n', 'output': ['45170585\\r\\n105647559\\r\\n680553097\\r\\n483815788\\r\\n105647559']}, {'input': '10 10\\r\\n0 1 0 0 1 1 1 1 1 1\\r\\n12 18 6 18 7 2 9 18 1 9\\r\\n', 'output': ['199115375\\r\\n823101465\\r\\n598679864\\r\\n797795239\\r\\n486469073\\r\\n424203836\\r\\n910672909\\r\\n823101465\\r\\n212101918\\r\\n910672909']}, {'input': '20 20\\r\\n1 1 1 1 0 1 1 1 0 1 0 1 0 0 1 0 1 1 0 1\\r\\n1 13 7 11 17 15 19 18 14 11 15 1 12 4 5 16 14 11 18 9\\r\\n', 'output': ['688505688\\r\\n964619120\\r\\n826562404\\r\\n585852097\\r\\n851622699\\r\\n345141790\\r\\n104431483\\r\\n414170148\\r\\n349014804\\r\\n585852097\\r\\n516550769\\r\\n688505688\\r\\n13942874\\r\\n670143860\\r\\n447795381\\r\\n684086734\\r\\n654880455\\r\\n585852097\\r\\n20914311\\r\\n207085074']}, {'input': '30 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0\\r\\n1 2 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 2 2 1 1 2 2 2\\r\\n', 'output': ['346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n542025302\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n693292404\\r\\n693292404']}, {'input': '40 40\\r\\n1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n28 13 22 35 22 13 23 35 14 36 30 10 10 15 3 9 35 35 9 29 14 28 8 29 22 30 4 31 39 24 4 19 37 4 20 7 11 17 3 25\\r\\n', 'output': ['368107101\\r\\n848286965\\r\\n360530176\\r\\n210572788\\r\\n199380339\\r\\n848286965\\r\\n195418938\\r\\n210572788\\r\\n683175727\\r\\n45461550\\r\\n37884625\\r\\n544374860\\r\\n345376326\\r\\n518064489\\r\\n502910639\\r\\n510487564\\r\\n210572788\\r\\n210572788\\r\\n510487564\\r\\n202995863\\r\\n683175727\\r\\n526005255\\r\\n675598802\\r\\n202995863\\r\\n360530176\\r\\n37884625\\r\\n337799401\\r\\n871017740\\r\\n548372189\\r\\n30307700\\r\\n337799401\\r\\n855863890\\r\\n878594665\\r\\n337799401\\r\\n690752652\\r\\n840710040\\r\\n180265088\\r\\n187842013\\r\\n502910639\\r\\n863440815']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n13 18 27 40 3 1 20 11 25 11 2 31 22 15 36 12 11 24 8 39 31 36 19 24 10 39 27 4 10 22 14 3 25 5 24 19 20 33 17 19 30 15 37 33 3 27 26 29 37 34\\r\\n', 'output': ['30685719\\r\\n733580163\\r\\n601248068\\r\\n631933787\\r\\n621385537\\r\\n539876630\\r\\n815089070\\r\\n947421165\\r\\n519739161\\r\\n947421165\\r\\n81508907\\r\\n764265882\\r\\n896597977\\r\\n112194626\\r\\n468915973\\r\\n489053442\\r\\n947421165\\r\\n978106884\\r\\n326035628\\r\\n92057157\\r\\n764265882\\r\\n468915973\\r\\n275212440\\r\\n978106884\\r\\n407544535\\r\\n92057157\\r\\n601248068\\r\\n163017814\\r\\n407544535\\r\\n896597977\\r\\n570562349\\r\\n621385537\\r\\n519739161\\r\\n702894444\\r\\n978106884\\r\\n275212440\\r\\n815089070\\r\\n845774789\\r\\n193703533\\r\\n275212440\\r\\n224389252\\r\\n112194626\\r\\n10548250\\r\\n845774789\\r\\n621385537\\r\\n601248068\\r\\n61371438\\r\\n...']}, {'input': '50 50\\r\\n0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0\\r\\n2 50 37 21 21 2 26 49 15 44 8 27 30 28 26 40 26 45 41 37 27 34 8 35 2 23 2 49 13 1 39 37 12 42 7 11 4 50 42 21 27 50 28 31 17 22 10 43 46 13\\r\\n', 'output': ['380563607\\r\\n529890998\\r\\n551838435\\r\\n502062638\\r\\n635094670\\r\\n380563607\\r\\n954349479\\r\\n816391328\\r\\n358616170\\r\\n386444530\\r\\n907437062\\r\\n645509106\\r\\n717232340\\r\\n336668733\\r\\n954349479\\r\\n623561669\\r\\n954349479\\r\\n77604157\\r\\n314721296\\r\\n453480088\\r\\n645509106\\r\\n480115201\\r\\n907437062\\r\\n725742999\\r\\n380563607\\r\\n362831759\\r\\n725981442\\r\\n838731371\\r\\n976296916\\r\\n362990721\\r\\n932402042\\r\\n551838435\\r\\n286892936\\r\\n5880923\\r\\n832850448\\r\\n998164872\\r\\n761127214\\r\\n529890998\\r\\n5880923\\r\\n502062638\\r\\n645509106\\r\\n181137696\\r\\n181296658\\r\\n408391967\\r\\n739179777\\r\\n193222265\\r\\n904573682\\r...']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 1 2 2 2 1 1 1\\r\\n', 'output': ['665496237\\r\\n332748121\\r\\n332748121\\r\\n665496237\\r\\n332748121\\r\\n332748121\\r\\n332748121\\r\\n665496237\\r\\n665496237\\r\\n665496237']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 0 1 1\\r\\n2 1 2 2 1 1 1 1 1 1\\r\\n', 'output': ['771370640\\r\\n385685320\\r\\n771370640\\r\\n771370640\\r\\n385685320\\r\\n385685320\\r\\n385685320\\r\\n635246407\\r\\n385685320\\r\\n385685320']}, {'input': '10 10\\r\\n0 0 0 1 0 0 0 0 0 0\\r\\n2 2 2 2 2 2 2 1 2 2\\r\\n', 'output': ['973938381\\r\\n973938381\\r\\n973938381\\r\\n791643586\\r\\n973938381\\r\\n973938381\\r\\n973938381\\r\\n986091367\\r\\n973938381\\r\\n973938381']}, {'input': '10 10\\r\\n0 0 1 0 0 0 1 0 0 0\\r\\n2 1 2 1 1 2 1 1 1 1\\r\\n', 'output': ['44896189\\r\\n521570271\\r\\n482402083\\r\\n521570271\\r\\n521570271\\r\\n44896189\\r\\n740323218\\r\\n521570271\\r\\n521570271\\r\\n521570271']}, {'input': '10 10\\r\\n1 0 0 0 1 1 1 0 1 0\\r\\n1 2 1 2 1 1 2 2 2 1\\r\\n', 'output': ['910950063\\r\\n595918255\\r\\n797081304\\r\\n595918255\\r\\n910950063\\r\\n910950063\\r\\n823655773\\r\\n595918255\\r\\n823655773\\r\\n797081304']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n17 10 8 34 5 4 3 44 20 14\\r\\n', 'output': ['709444118\\r\\n6278277\\r\\n803618104\\r\\n420643883\\r\\n502261315\\r\\n401809052\\r\\n301356789\\r\\n426922160\\r\\n12556554\\r\\n408087329']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 0 1\\r\\n40 36 29 4 36 35 9 38 40 18\\r\\n', 'output': ['59109317\\r\\n951618303\\r\\n17898146\\r\\n105735367\\r\\n951618303\\r\\n675623373\\r\\n487465664\\r\\n505363810\\r\\n736385984\\r\\n974931328']}, {'input': '10 10\\r\\n0 0 0 0 0 0 0 1 0 0\\r\\n8 33 37 18 30 48 45 34 25 48\\r\\n', 'output': ['211347083\\r\\n497465085\\r\\n104016450\\r\\n725092025\\r\\n542990473\\r\\n269838145\\r\\n315363533\\r\\n227335634\\r\\n286118002\\r\\n269838145']}, {'input': '10 10\\r\\n0 0 1 0 0 0 0 0 1 0\\r\\n47 34 36 9 3 16 17 46 47 1\\r\\n', 'output': ['167709201\\r\\n57603825\\r\\n597597985\\r\\n690531016\\r\\n562925123\\r\\n673030499\\r\\n527924089\\r\\n312815611\\r\\n253346183\\r\\n853137943']}, {'input': '10 10\\r\\n1 0 0 1 1 0 1 0 0 1\\r\\n24 7 10 9 6 13 27 17 6 39\\r\\n', 'output': ['976715988\\r\\n573793375\\r\\n391885813\\r\\n865390672\\r\\n244178997\\r\\n209978251\\r\\n599683310\\r\\n965679188\\r\\n634429229\\r\\n89796951']}, {'input': '10 10\\r\\n0 0 0 0 0 1 0 0 0 0\\r\\n34 34 34 34 34 34 34 34 34 34\\r\\n', 'output': ['971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n754874965\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n43 43 43 43 43 43 43 43 43 43\\r\\n', 'output': ['44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 2 1 1 2 1 1 1 2 1 1 2 1 2 1 2 1 2 1 2 2 2 1 2 2 2 2 1\\r\\n', 'output': ['260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1\\r\\n2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 2 2 2 2 1 2 1 2 1 1 1 1 2 1\\r\\n', 'output': ['720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n720162001\\r\\n720162001\\r\\n720162001\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n720162001\\r\\n427819009\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177']}, {'input': '30 30\\r\\n0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n2 1 1 2 1 2 2 2 2 2 1 1 2 2 2 1 2 2 2 1 2 1 1 1 1 1 2 1 1 1\\r\\n', 'output': ['188114875\\r\\n593179614\\r\\n593179614\\r\\n550614566\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n593179614']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 1 1 1 2 1 2 2 1 2 1 2 1 1 2 2 1 2 1 2 1 2 2 2 1 1 2 1 2 2\\r\\n', 'output': ['593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n275307283\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n275307283\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875']}, {'input': '30 30\\r\\n1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 1 1 0 1 0 1 0 0 1 1 0 1 0 1 0\\r\\n1 1 1 2 2 1 2 1 2 1 1 2 2 2 1 2 1 1 1 1 1 2 1 2 1 2 1 2 1 1\\r\\n', 'output': ['297674502\\r\\n297674502\\r\\n297674502\\r\\n101192689\\r\\n595349004\\r\\n549718521\\r\\n101192689\\r\\n297674502\\r\\n595349004\\r\\n297674502\\r\\n549718521\\r\\n101192689\\r\\n101192689\\r\\n101192689\\r\\n549718521\\r\\n595349004\\r\\n297674502\\r\\n549718521\\r\\n297674502\\r\\n549718521\\r\\n297674502\\r\\n101192689\\r\\n549718521\\r\\n595349004\\r\\n297674502\\r\\n101192689\\r\\n297674502\\r\\n101192689\\r\\n297674502\\r\\n549718521']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n23 45 44 49 17 36 32 26 40 8 36 11 5 19 41 16 7 38 23 40 13 16 24 44 22 13 1 2 32 31\\r\\n', 'output': ['42365832\\r\\n603712812\\r\\n124449607\\r\\n524276926\\r\\n161519661\\r\\n283321379\\r\\n362757265\\r\\n481911094\\r\\n203885493\\r\\n839372581\\r\\n283321379\\r\\n280673490\\r\\n399827319\\r\\n121801718\\r\\n683148698\\r\\n680500809\\r\\n360109376\\r\\n243603436\\r\\n42365832\\r\\n203885493\\r\\n240955547\\r\\n680500809\\r\\n521629037\\r\\n124449607\\r\\n561346980\\r\\n240955547\\r\\n479263205\\r\\n958526410\\r\\n362757265\\r\\n881738413']}, {'input': '30 30\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n41 39 15 34 45 27 18 7 48 33 46 11 24 16 35 43 7 31 26 17 30 15 5 9 29 20 21 37 3 7\\r\\n', 'output': ['61128841\\r\\n655563720\\r\\n98563838\\r\\n955457225\\r\\n295691514\\r\\n377063779\\r\\n916872088\\r\\n578393446\\r\\n115755411\\r\\n17191573\\r\\n235712813\\r\\n338478642\\r\\n556999882\\r\\n38585137\\r\\n895478524\\r\\n415648916\\r\\n578393446\\r\\n137148975\\r\\n437042480\\r\\n976850789\\r\\n197127676\\r\\n98563838\\r\\n698350848\\r\\n458436044\\r\\n257106377\\r\\n796914686\\r\\n736935985\\r\\n775521122\\r\\n818308250\\r\\n578393446']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n29 38 18 19 46 28 12 5 46 17 31 20 24 33 9 6 47 2 2 41 34 2 50 5 47 10 40 21 49 28\\r\\n', 'output': ['528451192\\r\\n658031067\\r\\n259159750\\r\\n828137710\\r\\n218632982\\r\\n957717585\\r\\n838269402\\r\\n848401094\\r\\n218632982\\r\\n688426143\\r\\n942792071\\r\\n398871317\\r\\n678294451\\r\\n807874326\\r\\n129579875\\r\\n419134701\\r\\n787610942\\r\\n139711567\\r\\n139711567\\r\\n368476241\\r\\n378607933\\r\\n139711567\\r\\n498056116\\r\\n848401094\\r\\n787610942\\r\\n698557835\\r\\n797742634\\r\\n967849277\\r\\n927322509\\r\\n957717585']}, {'input': '30 30\\r\\n0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 12 9 1 5 32 38 25 34 31 27 43 13 38 48 40 5 42 20 45 1 4 35 38 1 44 31 42 8 37\\r\\n', 'output': ['399967190\\r\\n806628868\\r\\n604971651\\r\\n399967190\\r\\n3347244\\r\\n800038448\\r\\n225087925\\r\\n16736220\\r\\n621707871\\r\\n420050654\\r\\n816670600\\r\\n228435169\\r\\n208351705\\r\\n225087925\\r\\n231782413\\r\\n26777952\\r\\n3347244\\r\\n51806110\\r\\n13388976\\r\\n30125196\\r\\n399967190\\r\\n601624407\\r\\n23430708\\r\\n225087925\\r\\n399967190\\r\\n628402359\\r\\n420050654\\r\\n826712332\\r\\n205004461\\r\\n823365088']}, {'input': '30 30\\r\\n0 1 1 0 0 1 1 1 1 0 0 1 0 0 1 0 0 0 1 0 1 1 0 0 0 1 1 1 1 0\\r\\n5 20 47 27 17 5 18 30 43 23 44 6 47 8 23 41 2 46 49 33 45 27 33 16 36 2 42 36 8 23\\r\\n', 'output': ['114252107\\r\\n760713694\\r\\n489959522\\r\\n18014766\\r\\n787754905\\r\\n689300600\\r\\n484993454\\r\\n142826188\\r\\n936763395\\r\\n126261951\\r\\n805769671\\r\\n827160720\\r\\n475023194\\r\\n781749983\\r\\n176049701\\r\\n138271795\\r\\n444998584\\r\\n252523902\\r\\n765679762\\r\\n354766165\\r\\n214239282\\r\\n727490181\\r\\n354766165\\r\\n565255613\\r\\n24019688\\r\\n275720240\\r\\n798903275\\r\\n969986908\\r\\n104636607\\r\\n126261951']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\r\\n39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39\\r\\n', 'output': ['417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n142843895']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22\\r\\n', 'output': ['23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n2 1 1 2 2 1 2 1 1 2 2 2 1 2 2 1 1 1 2 1 2 1 2 2 2 1 2 1 1 2 2 2 2 2 1 2 2 2 2 2 2 1 2 1 2 2 2 1 1 2\\r\\n', 'output': ['714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n71479...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 1 2 1 1 1 1 1 2 1 1 1 2 2 2 1 1 1 1 2 2 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 2 2 2 1\\r\\n', 'output': ['964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n824636640\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n93147...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\\r\\n1 2 2 2 2 2 2 1 1 2 2 1 1 2 1 2 2 1 2 1 2 2 1 2 2 2 1 1 1 1 2 2 2 1 2 2 1 2 2 1 1 2 2 2 2 2 1 2 2 1\\r\\n', 'output': ['512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n96131098\\r\\n27359387\\r\\n27359387\\r\\n5128...']}, {'input': '50 50\\r\\n0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\r\\n2 1 1 1 1 2 2 2 1 1 2 2 2 1 2 1 2 2 2 1 1 1 1 2 2 1 1 1 1 2 1 2 2 2 2 1 1 1 2 1 2 1 1 2 2 1 1 2 2 1\\r\\n', 'output': ['303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n480354901\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n15198...']}, {'input': '50 50\\r\\n0 0 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0\\r\\n1 1 1 1 1 2 2 1 1 2 2 2 1 1 1 2 2 2 1 1 1 1 2 1 1 1 2 2 1 1 1 2 2 1 1 2 1 1 2 2 2 2 2 2 2 2 2 1 2 1\\r\\n', 'output': ['525100120\\r\\n525100120\\r\\n392384920\\r\\n525100120\\r\\n525100120\\r\\n51955887\\r\\n784769840\\r\\n525100120\\r\\n392384920\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n392384920\\r\\n392384920\\r\\n525100120\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n392384920\\r\\n392384920\\r\\n392384920\\r\\n392384920\\r\\n784769840\\r\\n392384920\\r\\n525100120\\r\\n392384920\\r\\n51955887\\r\\n784769840\\r\\n525100120\\r\\n392384920\\r\\n525100120\\r\\n51955887\\r\\n51955887\\r\\n525100120\\r\\n392384920\\r\\n784769840\\r\\n525100120\\r\\n525100120\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n51955887\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n784769840\\r\\n51955887\\r\\n5251...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n32 22 24 45 22 17 10 5 27 1 48 15 14 43 11 16 38 31 24 19 5 28 2 4 34 29 18 32 47 11 2 34 39 29 36 11 39 24 23 16 41 45 17 39 30 15 16 3 3 8\\r\\n', 'output': ['118672439\\r\\n268758118\\r\\n837687594\\r\\n821980974\\r\\n268758118\\r\\n842923134\\r\\n848158674\\r\\n424079337\\r\\n692837455\\r\\n284464738\\r\\n677130835\\r\\n273993658\\r\\n987773273\\r\\n253051498\\r\\n134379059\\r\\n558458396\\r\\n827216514\\r\\n832452054\\r\\n837687594\\r\\n413608257\\r\\n424079337\\r\\n977302193\\r\\n568929476\\r\\n139614599\\r\\n687601915\\r\\n263522578\\r\\n129143519\\r\\n118672439\\r\\n392666097\\r\\n134379059\\r\\n568929476\\r\\n687601915\\r\\n113436899\\r\\n263522578\\r\\n258287038\\r\\n134379059\\r\\n113436899\\r\\n837687594\\r\\n553222856\\r\\n558458396\\r\\n682366375\\r\\n821980974\\r\\n842923134\\r\\n113436899\\r\\n547987316\\r\\n273993658\\r\\n55845...']}, {'input': '50 50\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n49 34 4 15 32 20 22 35 3 28 15 46 4 46 16 11 45 42 11 4 15 36 29 10 27 32 1 1 23 11 6 34 35 19 11 5 2 37 9 20 39 33 27 4 21 33 6 23 37 50\\r\\n', 'output': ['41887747\\r\\n858571128\\r\\n101008368\\r\\n378781380\\r\\n808066944\\r\\n505041840\\r\\n555546024\\r\\n883823220\\r\\n75756276\\r\\n707058576\\r\\n378781380\\r\\n163351879\\r\\n101008368\\r\\n163351879\\r\\n404033472\\r\\n277773012\\r\\n138099787\\r\\n62343511\\r\\n277773012\\r\\n101008368\\r\\n378781380\\r\\n909075312\\r\\n732310668\\r\\n252520920\\r\\n681806484\\r\\n808066944\\r\\n25252092\\r\\n25252092\\r\\n580798116\\r\\n277773012\\r\\n151512552\\r\\n858571128\\r\\n883823220\\r\\n479789748\\r\\n277773012\\r\\n126260460\\r\\n50504184\\r\\n934327404\\r\\n227268828\\r\\n505041840\\r\\n984831588\\r\\n833319036\\r\\n681806484\\r\\n101008368\\r\\n530293932\\r\\n833319036\\r\\n151512552\\r\\n...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n12 29 36 24 44 22 38 43 30 19 15 2 39 8 13 50 29 18 37 19 32 39 42 41 20 11 14 25 4 35 14 23 17 29 1 19 3 6 8 31 26 46 9 31 36 49 21 38 17 27\\r\\n', 'output': ['820896192\\r\\n985588111\\r\\n466199870\\r\\n643548031\\r\\n15219645\\r\\n506731999\\r\\n603015902\\r\\n945055982\\r\\n986069299\\r\\n301507951\\r\\n27875887\\r\\n136816032\\r\\n671423918\\r\\n547264128\\r\\n889304208\\r\\n425667741\\r\\n985588111\\r\\n233099935\\r\\n534607886\\r\\n301507951\\r\\n192567806\\r\\n671423918\\r\\n876647966\\r\\n808239950\\r\\n369915967\\r\\n752488176\\r\\n957712224\\r\\n711956047\\r\\n273632064\\r\\n397791854\\r\\n957712224\\r\\n575140015\\r\\n164691919\\r\\n985588111\\r\\n68408016\\r\\n301507951\\r\\n205224048\\r\\n410448096\\r\\n547264128\\r\\n124159790\\r\\n780364063\\r\\n152035677\\r\\n615672144\\r\\n124159790\\r\\n466199870\\r\\n357259725\\r\\n43832398...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n25 31 26 45 2 6 25 14 35 23 31 16 24 36 44 8 18 41 36 3 27 21 15 44 45 45 25 8 3 43 7 25 48 45 44 33 25 49 8 46 14 12 12 46 45 43 29 40 1 47\\r\\n', 'output': ['26673909\\r\\n312584066\\r\\n906195896\\r\\n646959648\\r\\n760799621\\r\\n285910157\\r\\n26673909\\r\\n334375582\\r\\n835938955\\r\\n264118641\\r\\n312584066\\r\\n96930850\\r\\n145396275\\r\\n717216589\\r\\n765682014\\r\\n48465425\\r\\n857730471\\r\\n123604759\\r\\n717216589\\r\\n642077255\\r\\n787473530\\r\\n501563373\\r\\n215653216\\r\\n765682014\\r\\n646959648\\r\\n108381283\\r\\n26673909\\r\\n48465425\\r\\n642077255\\r\\n884404380\\r\\n167187791\\r\\n26673909\\r\\n290792550\\r\\n646959648\\r\\n765682014\\r\\n75139334\\r\\n614792020\\r\\n172070184\\r\\n48465425\\r\\n528237282\\r\\n334375582\\r\\n571820314\\r\\n571820314\\r\\n528237282\\r\\n646959648\\r\\n884404380\\r\\n550028798\\r\\n242...']}, {'input': '50 50\\r\\n0 0 0 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 0 0\\r\\n45 49 17 22 28 34 24 38 5 46 22 36 11 12 43 21 47 39 38 38 38 27 10 49 19 46 23 7 46 35 11 38 25 16 7 32 12 13 44 14 41 36 7 31 4 46 40 28 28 46\\r\\n', 'output': ['644620779\\r\\n102973792\\r\\n443172276\\r\\n267699221\\r\\n201448503\\r\\n886344552\\r\\n745782947\\r\\n99391617\\r\\n196964962\\r\\n259647944\\r\\n267699221\\r\\n619552244\\r\\n632971787\\r\\n371547745\\r\\n416322096\\r\\n28657358\\r\\n254279678\\r\\n338433480\\r\\n344697565\\r\\n344697565\\r\\n99391617\\r\\n464664183\\r\\n143249062\\r\\n102973792\\r\\n548817985\\r\\n15237815\\r\\n129823972\\r\\n675048688\\r\\n259647944\\r\\n380510381\\r\\n756520580\\r\\n344697565\\r\\n984824810\\r\\n829936749\\r\\n675048688\\r\\n658045869\\r\\n371547745\\r\\n112811160\\r\\n535398442\\r\\n599846428\\r\\n188023413\\r\\n619552244\\r\\n299923214\\r\\n44774351\\r\\n956167452\\r\\n259647944\\r\\n577475343\\r...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47\\r\\n', 'output': ['529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n988406960\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n52947...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\\r\\n', 'output': ['9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9']}, {'input': '5 50\\r\\n1 1 1 1 1\\r\\n1 1 4 2 3\\r\\n', 'output': ['635246412\\r\\n635246412\\r\\n544496942\\r\\n272248471\\r\\n907494883']}, {'input': '10 50\\r\\n0 0 0 0 0 0 0 0 1 0\\r\\n3 1 3 3 1 3 1 2 2 1\\r\\n', 'output': ['187134581\\r\\n727874429\\r\\n187134581\\r\\n187134581\\r\\n727874429\\r\\n187134581\\r\\n727874429\\r\\n457504505\\r\\n124563167\\r\\n727874429']}, {'input': '20 50\\r\\n1 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1\\r\\n1 2 2 1 2 2 2 2 2 2 1 1 2 2 2 1 1 1 2 2\\r\\n', 'output': ['853605709\\r\\n708967065\\r\\n708967065\\r\\n853605709\\r\\n708967065\\r\\n708967065\\r\\n708967065\\r\\n922030188\\r\\n708967065\\r\\n922030188\\r\\n853605709\\r\\n853605709\\r\\n708967065\\r\\n922030188\\r\\n708967065\\r\\n461015094\\r\\n853605709\\r\\n853605709\\r\\n708967065\\r\\n708967065']}, {'input': '20 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 2 2 2 2 1 2 1 2 1 2 1 1 2 1 2 2 1\\r\\n', 'output': ['436731907\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n873463814\\r\\n436731907']}, {'input': '40 50\\r\\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0\\r\\n33 26 4 19 42 43 19 32 13 23 19 1 18 43 43 43 19 31 4 25 28 23 33 37 36 23 5 12 18 32 34 1 21 22 34 35 37 16 41 39\\r\\n', 'output': ['729284231\\r\\n60340485\\r\\n239647233\\r\\n389641092\\r\\n20685064\\r\\n829280137\\r\\n389641092\\r\\n918933511\\r\\n529292419\\r\\n629288325\\r\\n366487398\\r\\n808595073\\r\\n579290372\\r\\n829280137\\r\\n829280137\\r\\n41331201\\r\\n389641092\\r\\n110338438\\r\\n239647233\\r\\n249989765\\r\\n679286278\\r\\n629288325\\r\\n426374038\\r\\n968931464\\r\\n160336391\\r\\n629288325\\r\\n49997953\\r\\n718941699\\r\\n579290372\\r\\n918933511\\r\\n539634951\\r\\n808595073\\r\\n89829960\\r\\n818937605\\r\\n539634951\\r\\n349985671\\r\\n968931464\\r\\n958588932\\r\\n210334344\\r\\n589632904']}, {'input': '41 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 2 4 2 3 2 4 3 1 1 3 1 3 2 5 3 3 5 4 4 1 1 2 3 2 1 5 5 5 4 2 2 2 1 2 4 4 5 2 1 4\\r\\n', 'output': ['394710173\\r\\n789420346\\r\\n580596339\\r\\n789420346\\r\\n185886166\\r\\n789420346\\r\\n580596339\\r\\n185886166\\r\\n394710173\\r\\n394710173\\r\\n185886166\\r\\n394710173\\r\\n581788048\\r\\n789420346\\r\\n636898629\\r\\n185886166\\r\\n185886166\\r\\n975306512\\r\\n580596339\\r\\n580596339\\r\\n394710173\\r\\n394710173\\r\\n55110581\\r\\n185886166\\r\\n55110581\\r\\n394710173\\r\\n975306512\\r\\n975306512\\r\\n975306512\\r\\n580596339\\r\\n789420346\\r\\n789420346\\r\\n789420346\\r\\n394710173\\r\\n789420346\\r\\n580596339\\r\\n580596339\\r\\n975306512\\r\\n789420346\\r\\n394710173\\r\\n580596339']}, {'input': '42 50\\r\\n0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0\\r\\n2 4 6 8 1 3 6 1 4 1 3 4 3 7 6 6 8 7 4 1 7 4 6 9 3 1 9 7 1 2 9 3 1 6 1 5 1 8 2 6 8 8\\r\\n', 'output': ['11284873\\r\\n329090227\\r\\n33854619\\r\\n45139492\\r\\n504764613\\r\\n995500935\\r\\n33854619\\r\\n504764613\\r\\n22569746\\r\\n504764613\\r\\n516049486\\r\\n22569746\\r\\n516049486\\r\\n538619232\\r\\n33854619\\r\\n33854619\\r\\n45139492\\r\\n538619232\\r\\n22569746\\r\\n504764613\\r\\n538619232\\r\\n22569746\\r\\n33854619\\r\\n549904105\\r\\n516049486\\r\\n504764613\\r\\n549904105\\r\\n538619232\\r\\n504764613\\r\\n11284873\\r\\n990014099\\r\\n516049486\\r\\n504764613\\r\\n33854619\\r\\n504764613\\r\\n527334359\\r\\n504764613\\r\\n45139492\\r\\n663667290\\r\\n33854619\\r\\n45139492\\r\\n45139492']}, {'input': '43 50\\r\\n1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n13 7 13 15 8 9 11 1 15 9 3 7 3 15 4 7 7 16 9 13 12 16 16 1 5 5 14 5 17 2 1 13 4 13 10 17 17 6 11 15 14 3 6\\r\\n', 'output': ['175780254\\r\\n94650906\\r\\n163530008\\r\\n802992688\\r\\n561362014\\r\\n881093354\\r\\n522311681\\r\\n319731340\\r\\n802992688\\r\\n881093354\\r\\n959194020\\r\\n241630674\\r\\n959194020\\r\\n802992688\\r\\n280681007\\r\\n241630674\\r\\n241630674\\r\\n124479675\\r\\n881093354\\r\\n163530008\\r\\n842043021\\r\\n124479675\\r\\n124479675\\r\\n13521558\\r\\n600412347\\r\\n600412347\\r\\n483261348\\r\\n67607790\\r\\n444211015\\r\\n639462680\\r\\n319731340\\r\\n163530008\\r\\n280681007\\r\\n163530008\\r\\n202580341\\r\\n444211015\\r\\n444211015\\r\\n920143687\\r\\n522311681\\r\\n802992688\\r\\n483261348\\r\\n959194020\\r\\n920143687']}, {'input': '44 50\\r\\n0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\r\\n2 6 6 11 2 4 11 10 5 15 15 20 20 7 9 8 17 4 16 19 12 16 12 13 2 11 20 2 6 10 2 18 7 5 18 10 15 6 11 9 7 5 17 11\\r\\n', 'output': ['327775237\\r\\n983325711\\r\\n983325711\\r\\n305397274\\r\\n327775237\\r\\n853173373\\r\\n305397274\\r\\n640631832\\r\\n320315916\\r\\n960947748\\r\\n960947748\\r\\n272889453\\r\\n283019311\\r\\n648091153\\r\\n975866390\\r\\n312856595\\r\\n290478632\\r\\n655550474\\r\\n625713190\\r\\n618253869\\r\\n968407069\\r\\n625713190\\r\\n968407069\\r\\n633172511\\r\\n327775237\\r\\n305397274\\r\\n283019311\\r\\n327775237\\r\\n983325711\\r\\n640631832\\r\\n327775237\\r\\n953488427\\r\\n648091153\\r\\n816905628\\r\\n953488427\\r\\n640631832\\r\\n960947748\\r\\n983325711\\r\\n305397274\\r\\n975866390\\r\\n648091153\\r\\n320315916\\r\\n290478632\\r\\n305397274']}, {'input': '45 50\\r\\n0 1 0 1 0 1 0 1 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 1 0\\r\\n4 4 23 23 13 23 9 16 4 18 20 15 21 24 22 20 22 1 15 7 10 17 20 6 15 7 4 10 16 7 14 9 13 17 10 14 22 23 3 5 20 11 4 24 24\\r\\n', 'output': ['630266647\\r\\n555616275\\r\\n379739073\\r\\n948743787\\r\\n301438985\\r\\n948743787\\r\\n669416691\\r\\n225976394\\r\\n555616275\\r\\n340589029\\r\\n156600176\\r\\n835755590\\r\\n563727926\\r\\n786866823\\r\\n560278630\\r\\n781592669\\r\\n970855676\\r\\n388465157\\r\\n835755590\\r\\n853405544\\r\\n889918511\\r\\n614441551\\r\\n156600176\\r\\n446277794\\r\\n117450132\\r\\n853405544\\r\\n630266647\\r\\n78300088\\r\\n225976394\\r\\n722767393\\r\\n708566735\\r\\n669416691\\r\\n58825276\\r\\n931705632\\r\\n78300088\\r\\n708566735\\r\\n970855676\\r\\n948743787\\r\\n223138897\\r\\n39150044\\r\\n781592669\\r\\n280139315\\r\\n555616275\\r\\n338964591\\r\\n786866823']}, {'input': '46 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n29 22 30 33 13 31 19 11 12 21 5 4 24 21 20 6 28 16 27 18 21 11 3 24 21 8 8 33 24 7 34 12 13 32 26 33 33 22 18 2 3 7 24 17 9 30\\r\\n', 'output': ['265429165\\r\\n98093399\\r\\n859759619\\r\\n646262275\\r\\n738585431\\r\\n455845720\\r\\n311590743\\r\\n548168876\\r\\n144254977\\r\\n502007298\\r\\n975163564\\r\\n380833110\\r\\n288509954\\r\\n502007298\\r\\n905921197\\r\\n571249665\\r\\n669343064\\r\\n525088087\\r\\n75012610\\r\\n715504642\\r\\n502007298\\r\\n548168876\\r\\n784747009\\r\\n288509954\\r\\n502007298\\r\\n761666220\\r\\n761666220\\r\\n646262275\\r\\n288509954\\r\\n167335766\\r\\n242348376\\r\\n144254977\\r\\n738585431\\r\\n51931821\\r\\n478926509\\r\\n646262275\\r\\n646262275\\r\\n98093399\\r\\n715504642\\r\\n190416555\\r\\n784747009\\r\\n167335766\\r\\n288509954\\r\\n121174188\\r\\n357752321\\r\\n859759619']}, {'input': '47 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n30 32 21 7 15 4 39 36 23 17 13 4 8 18 38 24 13 27 37 27 32 16 8 12 7 23 28 38 11 36 19 33 10 34 4 8 5 22 3 29 21 30 7 32 35 26 23\\r\\n', 'output': ['243227082\\r\\n658739962\\r\\n369907828\\r\\n456050727\\r\\n121613541\\r\\n831025760\\r\\n116546336\\r\\n491521369\\r\\n785420708\\r\\n537126421\\r\\n704345014\\r\\n831025760\\r\\n663807167\\r\\n744882861\\r\\n907034249\\r\\n993177148\\r\\n704345014\\r\\n618202115\\r\\n699277809\\r\\n618202115\\r\\n658739962\\r\\n329369981\\r\\n663807167\\r\\n496588574\\r\\n456050727\\r\\n785420708\\r\\n825958555\\r\\n907034249\\r\\n288832134\\r\\n491521369\\r\\n952639301\\r\\n866496402\\r\\n81075694\\r\\n76008489\\r\\n831025760\\r\\n663807167\\r\\n40537847\\r\\n577664268\\r\\n623269320\\r\\n35470642\\r\\n369907828\\r\\n243227082\\r\\n456050727\\r\\n658739962\\r\\n283764929\\r\\n410445675\\r\\n785420708...']}, {'input': '48 50\\r\\n1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 1\\r\\n9 42 15 12 2 9 41 13 23 14 17 42 25 10 10 2 38 36 41 31 9 20 31 41 20 41 40 28 7 37 14 25 23 38 27 17 6 40 2 19 19 3 8 32 13 22 41 20\\r\\n', 'output': ['386033769\\r\\n373559702\\r\\n643389615\\r\\n677156688\\r\\n85785282\\r\\n507867516\\r\\n317129978\\r\\n557604333\\r\\n299639299\\r\\n790016136\\r\\n959305308\\r\\n803246569\\r\\n74071672\\r\\n564297240\\r\\n564297240\\r\\n112859448\\r\\n631676005\\r\\n34981358\\r\\n760353928\\r\\n751077091\\r\\n386033769\\r\\n130350127\\r\\n751077091\\r\\n760353928\\r\\n130350127\\r\\n760353928\\r\\n717461287\\r\\n581787919\\r\\n395008068\\r\\n91411082\\r\\n790016136\\r\\n412498747\\r\\n299639299\\r\\n631676005\\r\\n159856954\\r\\n959305308\\r\\n338578344\\r\\n717461287\\r\\n112859448\\r\\n814960179\\r\\n73920403\\r\\n169289172\\r\\n451437792\\r\\n807506815\\r\\n733586412\\r\\n243209575\\r\\n317129978\\r...']}, {'input': '49 50\\r\\n0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0\\r\\n2 3 2 3 4 2 1 1 1 1 1 1 3 1 2 3 2 4 1 2 2 1 1 2 4 3 2 4 1 2 1 1 2 3 1 3 3 2 2 1 4 3 4 1 3 3 4 1 3\\r\\n', 'output': ['136570933\\r\\n703978576\\r\\n136570933\\r\\n703978576\\r\\n273141866\\r\\n136570933\\r\\n567407643\\r\\n478951804\\r\\n567407643\\r\\n567407643\\r\\n478951804\\r\\n478951804\\r\\n703978576\\r\\n567407643\\r\\n136570933\\r\\n703978576\\r\\n136570933\\r\\n273141866\\r\\n567407643\\r\\n136570933\\r\\n136570933\\r\\n567407643\\r\\n567407643\\r\\n136570933\\r\\n273141866\\r\\n703978576\\r\\n957903608\\r\\n273141866\\r\\n567407643\\r\\n136570933\\r\\n567407643\\r\\n567407643\\r\\n136570933\\r\\n703978576\\r\\n567407643\\r\\n438611059\\r\\n438611059\\r\\n136570933\\r\\n136570933\\r\\n478951804\\r\\n273141866\\r\\n703978576\\r\\n917562863\\r\\n478951804\\r\\n703978576\\r\\n703978576\\r\\n27314...']}, {'input': '50 50\\r\\n0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\\r\\n1 9 24 8 8 11 21 11 8 5 16 32 31 15 29 14 16 20 5 18 5 10 31 23 21 4 4 20 20 11 1 4 4 15 9 14 5 30 13 16 32 27 19 10 19 24 21 1 21 15\\r\\n', 'output': ['475420905\\r\\n285810733\\r\\n429413837\\r\\n935878068\\r\\n808634181\\r\\n787710167\\r\\n1395475\\r\\n787710167\\r\\n808634181\\r\\n85801616\\r\\n619024009\\r\\n748779213\\r\\n762627113\\r\\n143603104\\r\\n896947114\\r\\n666426552\\r\\n619024009\\r\\n343206464\\r\\n380615819\\r\\n571621466\\r\\n380615819\\r\\n171603232\\r\\n132672278\\r\\n952237285\\r\\n1395475\\r\\n467939034\\r\\n467939034\\r\\n524218923\\r\\n343206464\\r\\n238408190\\r\\n616106935\\r\\n467939034\\r\\n467939034\\r\\n143603104\\r\\n285810733\\r\\n639542266\\r\\n85801616\\r\\n514809696\\r\\n23435331\\r\\n619024009\\r\\n748779213\\r\\n662977597\\r\\n725343882\\r\\n761231638\\r\\n48798018\\r\\n429413837\\r\\n959313399\\r\\n61...']}, {'input': '47 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39\\r\\n', 'output': ['573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n57345...']}, {'input': '48 50\\r\\n1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 1\\r\\n42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42\\r\\n', 'output': ['612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n27123...']}, {'input': '49 50\\r\\n0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0\\r\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\\r\\n', 'output': ['371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n37100...']}, {'input': '50 50\\r\\n0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\\r\\n33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33\\r\\n', 'output': ['677141055\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141055\\r\\n67714...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n982795629\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n83495...']}, {'input': '50 50\\r\\n1 0 1 0 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 1 0 1 0 1 0 1 1 0 0 1 1 0 0 1 0 0 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n99630...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n70582...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\r\\n', 'output': ['382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n798399400\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n38299...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\r\\n', 'output': ['459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n533798960\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n45908...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n273616393\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n31116...']}, {'input': '50 50\\r\\n0 0 0 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 0 0\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['123180764\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n12318...']}, {'input': '50 50\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['80661140\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51']}, {'input': '5 5\\r\\n0 1 0 0 1\\r\\n2 4 1 2 1\\r\\n', 'output': ['665717847\\r\\n333191345\\r\\n831981100\\r\\n665717847\\r\\n831981101']}, {'input': '20 20\\r\\n0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 0\\r\\n109 1 24 122 136 42 25 112 110 15 26 48 35 10 86 13 41 6 24 15\\r\\n', 'output': ['217595927\\r\\n149660176\\r\\n322657182\\r\\n290143118\\r\\n388896876\\r\\n296261274\\r\\n86540143\\r\\n507489163\\r\\n979723241\\r\\n248413934\\r\\n896431517\\r\\n195977977\\r\\n246884395\\r\\n633562669\\r\\n891842900\\r\\n947337935\\r\\n146601098\\r\\n897961056\\r\\n597111165\\r\\n451221827']}, {'input': '100 100\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n2360379 9167688 488710 6896065 5243867 11762954 673012 1669264 265550 10921726 9383074 9523863 13429215 3223202 5372988 8197773 13052301 6045370 18630475 23534272 14923100 17181531 1112172 24623774 16991041 2363652 10720874 7171147 1261895 13127315 454592 1510882 12229327 15445105 15722482 5467131 92...', 'output': ['19790585\\r\\n929149870\\r\\n158142558\\r\\n415179791\\r\\n770973301\\r\\n197788614\\r\\n662208363\\r\\n968610058\\r\\n711622366\\r\\n89060603\\r\\n49510939\\r\\n593110743\\r\\n227455934\\r\\n197704062\\r\\n89005665\\r\\n237287745\\r\\n266986632\\r\\n365753331\\r\\n365877936\\r\\n464762563\\r\\n879788817\\r\\n148424226\\r\\n355820880\\r\\n830466826\\r\\n583301068\\r\\n553505420\\r\\n59407792\\r\\n988431747\\r\\n889537165\\r\\n425125094\\r\\n978481639\\r\\n494195332\\r\\n98957157\\r\\n850143163\\r\\n474568826\\r\\n889578801\\r\\n691943729\\r\\n751249179\\r\\n29723781\\r\\n385464681\\r\\n494219413\\r\\n968727719\\r\\n622687463\\r\\n929103141\\r\\n89090024\\r\\n563393484\\r\\n29714966\\r\\n484...']}, {'input': '1000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['652684471\\r\\n652684471\\r\\n959809060\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n652684471\\r\\n614249178\\r\\n307124589\\r\\n307124589\\r\\n307124589\\r\\n959809060\\r\\n652684471\\r\\n652684471\\r\\n959809060\\r\\n307124589\\r\\n307124589\\r\\n614249178\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n307124589\\r\\n307124589\\r\\n652684471\\r\\n268689296\\r\\n307124589\\r\\n959809060\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n614249178\\r\\n959809060\\r\\n652684471\\r\\n652684471\\r\\n307124589\\r\\n614249178\\r\\n307124589\\r\\n652684471\\r\\n652684471\\r\\n959809060\\r\\n307124589\\r\\n959809060\\r\\n307124589\\r\\n307124589\\r\\n959809060\\r\\n307124589\\r\\n95980...']}, {'input': '50000 1000\\r\\n1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 1 0 0 0 1 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 0 0 1 1 1 0 0 1 0 0 0 0 1 0 1 0 0 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 1 1 1 1 0 1 0 1 1 0 0 1 0 1 0 0 1 0 0 1 0 1 1 0 1 0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0...', 'output': ['512182090\\r\\n641172382\\r\\n697325018\\r\\n818311552\\r\\n590906119\\r\\n461103680\\r\\n370418391\\r\\n653972733\\r\\n766040380\\r\\n237657896\\r\\n893425807\\r\\n807372188\\r\\n964959592\\r\\n319396135\\r\\n111079234\\r\\n137994713\\r\\n9663504\\r\\n92358638\\r\\n965938119\\r\\n98687680\\r\\n675026792\\r\\n279244742\\r\\n15543727\\r\\n479206408\\r\\n519670811\\r\\n684652624\\r\\n777078382\\r\\n554151828\\r\\n865485075\\r\\n937290032\\r\\n565154228\\r\\n221807985\\r\\n218937300\\r\\n112386612\\r\\n310142313\\r\\n986922988\\r\\n267227503\\r\\n40988675\\r\\n369434552\\r\\n763776107\\r\\n694666611\\r\\n182771968\\r\\n494768207\\r\\n633944759\\r\\n635638470\\r\\n761724538\\r\\n162219074\\r\\n...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['967977965\\r\\n983111159\\r\\n952844771\\r\\n937711577\\r\\n937711577\\r\\n771246443\\r\\n483715757\\r\\n892311995\\r\\n967977965\\r\\n801512831\\r\\n846912413\\r\\n831779219\\r\\n967977965\\r\\n786379637\\r\\n892311995\\r\\n604781309\\r\\n710713667\\r\\n952844771\\r\\n952844771\\r\\n937711577\\r\\n874943312\\r\\n120519101\\r\\n892311995\\r\\n589648115\\r\\n619914503\\r\\n665314085\\r\\n374637533\\r\\n892311995\\r\\n937711577\\r\\n892311995\\r\\n650180891\\r\\n771246443\\r\\n922578383\\r\\n877178801\\r\\n483715757\\r\\n892311995\\r\\n952844771\\r\\n619914503\\r\\n574514921\\r\\n62834123\\r\\n907445189\\r\\n816646025\\r\\n846912413\\r\\n816646025\\r\\n937711577\\r\\n756113249\\r\\n846912...']}, {'input': '200000 3000\\r\\n0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 0 1 0 0 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 1 1 0 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 ...', 'output': ['568390992\\r\\n182388528\\r\\n352385861\\r\\n315979953\\r\\n743372559\\r\\n632628120\\r\\n995395434\\r\\n506334569\\r\\n667771666\\r\\n453192833\\r\\n680429762\\r\\n407446046\\r\\n471154985\\r\\n147648615\\r\\n936047905\\r\\n830053040\\r\\n251214636\\r\\n602162072\\r\\n263562703\\r\\n990790012\\r\\n150217484\\r\\n82075059\\r\\n932318671\\r\\n687474214\\r\\n345881774\\r\\n771937952\\r\\n356541287\\r\\n15233024\\r\\n811478946\\r\\n737405100\\r\\n892805310\\r\\n176354033\\r\\n997083988\\r\\n281716722\\r\\n628262667\\r\\n556117647\\r\\n359954433\\r\\n926451677\\r\\n992018326\\r\\n134736321\\r\\n139309832\\r\\n510415929\\r\\n125029199\\r\\n222157092\\r\\n859462710\\r\\n16077301\\r\\n83159806...']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 3 2 1 3 2 1 1 2 1 1 2 2 4 2 1 5 2 3\\r\\n', 'output': ['249561090\\r\\n249561090\\r\\n748683270\\r\\n499122180\\r\\n249561090\\r\\n748683270\\r\\n499122180\\r\\n249561090\\r\\n249561090\\r\\n499122180\\r\\n249561090\\r\\n249561090\\r\\n499122180\\r\\n499122180\\r\\n7\\r\\n499122180\\r\\n249561090\\r\\n249561097\\r\\n499122180\\r\\n748683270']}, {'input': '20 30\\r\\n1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 1 3 1 4 1 5 1 1 2 3 1 1 3 3 2 2 1 2\\r\\n', 'output': ['902255482\\r\\n806266611\\r\\n902255482\\r\\n710277740\\r\\n902255482\\r\\n537377994\\r\\n902255482\\r\\n518299998\\r\\n902255482\\r\\n902255482\\r\\n806266611\\r\\n710277740\\r\\n902255482\\r\\n902255482\\r\\n710277740\\r\\n710277740\\r\\n806266611\\r\\n806266611\\r\\n902255482\\r\\n806266611']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\r\\n3 4 1 2 1 1 1 2 5 2 1 2 3 1 1 2 3 2 1 2\\r\\n', 'output': ['441078046\\r\\n920852179\\r\\n479774133\\r\\n959548266\\r\\n479774133\\r\\n479774133\\r\\n479774133\\r\\n959548266\\r\\n402381959\\r\\n263018694\\r\\n479774133\\r\\n959548266\\r\\n441078046\\r\\n479774133\\r\\n479774133\\r\\n959548266\\r\\n441078046\\r\\n959548266\\r\\n479774133\\r\\n959548266']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0\\r\\n1 1 3 2 3 1 2 2 3 2 2 2 2 2 2 3 3 1 1 2\\r\\n', 'output': ['550803098\\r\\n550803098\\r\\n654164941\\r\\n103361843\\r\\n654164941\\r\\n550803098\\r\\n103361843\\r\\n103361843\\r\\n654164941\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n276551708\\r\\n654164941\\r\\n654164941\\r\\n138275854\\r\\n550803098\\r\\n103361843']}, {'input': '20 30\\r\\n0 0 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1\\r\\n1 2 2 2 2 2 1 1 2 1 4 1 2 5 3 4 1 1 2 1\\r\\n', 'output': ['297511613\\r\\n595023226\\r\\n756311680\\r\\n756311680\\r\\n756311680\\r\\n595023226\\r\\n297511613\\r\\n378155840\\r\\n595023226\\r\\n297511613\\r\\n514379007\\r\\n297511613\\r\\n595023226\\r\\n892534847\\r\\n136223167\\r\\n514379007\\r\\n378155840\\r\\n297511613\\r\\n595023226\\r\\n378155840']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n765 451 7275 385 1686 78 554 114 1980 394 776 232 627 760 782 7 486 32 1100 1516\\r\\n', 'output': ['491636110\\r\\n498623506\\r\\n486651408\\r\\n182179980\\r\\n6989399\\r\\n10980766\\r\\n871467875\\r\\n92836839\\r\\n509106603\\r\\n951327263\\r\\n211628580\\r\\n83852758\\r\\n11480438\\r\\n618912260\\r\\n58897200\\r\\n820057743\\r\\n605934809\\r\\n183676993\\r\\n948333237\\r\\n341401087']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1\\r\\n779 1317 1275 234 857 1531 785 265 679 767 1994 11 918 1146 1807 71 813 245 3926 580\\r\\n', 'output': ['552990868\\r\\n90431251\\r\\n712871250\\r\\n952916426\\r\\n537881559\\r\\n151361542\\r\\n321464532\\r\\n89445141\\r\\n86037605\\r\\n17799187\\r\\n586392419\\r\\n241031286\\r\\n40642277\\r\\n699465709\\r\\n481837969\\r\\n920500985\\r\\n572000768\\r\\n195703359\\r\\n903238702\\r\\n911489090']}, {'input': '20 30\\r\\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n128 574 205 490 611 1294 283 1690 1466 1896 272 19 1020 5032 357 1500 36 1749 1202 176\\r\\n', 'output': ['389864218\\r\\n157345415\\r\\n537589523\\r\\n962131647\\r\\n753565149\\r\\n104281847\\r\\n378440811\\r\\n873692367\\r\\n690552162\\r\\n658861420\\r\\n578900375\\r\\n198248582\\r\\n923070965\\r\\n228091231\\r\\n572635926\\r\\n887695253\\r\\n795942304\\r\\n70748620\\r\\n510359933\\r\\n785624388']}, {'input': '20 30\\r\\n1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0\\r\\n61 849 320 1007 624 441 1332 3939 1176 718 419 634 657 914 858 882 1019 1567 62 2521\\r\\n', 'output': ['514012356\\r\\n393871659\\r\\n166092575\\r\\n569465276\\r\\n74319433\\r\\n306884170\\r\\n254628439\\r\\n656312237\\r\\n485609669\\r\\n216694535\\r\\n825782618\\r\\n110704962\\r\\n294216114\\r\\n131255421\\r\\n733108087\\r\\n613768340\\r\\n14181299\\r\\n610566194\\r\\n624888021\\r\\n887363731']}, {'input': '20 30\\r\\n0 1 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 0 0\\r\\n244 1901 938 1350 1010 763 318 2158 1645 534 1356 563 295 1449 2306 224 1302 195 639 810\\r\\n', 'output': ['300071414\\r\\n595185476\\r\\n40756239\\r\\n113904636\\r\\n440148868\\r\\n947268885\\r\\n456535325\\r\\n542868956\\r\\n183161324\\r\\n427608407\\r\\n61171180\\r\\n375813928\\r\\n43680359\\r\\n55509680\\r\\n30410255\\r\\n360521133\\r\\n535772284\\r\\n722568686\\r\\n663107799\\r\\n390646234']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n126679203 179924771 16639504 67055540 14134870 36407782 15024189 39367944 121531542 5400023 5834434 8539193 3686913 11287136 36370086 71808281 138206490 59846864 19052959 21446598\\r\\n', 'output': ['615913610\\r\\n488825486\\r\\n773371096\\r\\n742795989\\r\\n193664548\\r\\n323188752\\r\\n32686082\\r\\n709701410\\r\\n293733249\\r\\n161181348\\r\\n193396792\\r\\n354491196\\r\\n708550409\\r\\n644392716\\r\\n323187536\\r\\n646345011\\r\\n487479735\\r\\n1930544\\r\\n322628919\\r\\n966734748']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\\r\\n144831196 28660251 62050800 52660762 23189000 12771861 73096012 25119113 119648684 16011144 51600638 74708999 6312006 26945863 68746869 58112898 5070 19157938 74351320 60263898\\r\\n', 'output': ['132556548\\r\\n711988928\\r\\n6999755\\r\\n208709864\\r\\n320161276\\r\\n865416376\\r\\n320896979\\r\\n458941660\\r\\n671806481\\r\\n158009043\\r\\n351362956\\r\\n78248147\\r\\n927871852\\r\\n882014191\\r\\n988190329\\r\\n830735503\\r\\n1958329\\r\\n787106839\\r\\n942059547\\r\\n341315444']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0\\r\\n34095514 37349809 60555988 40280455 19504485 77297461 41415742 66290058 20631093 185280391 7151718 64927972 15611855 4317891 24600598 24588269 60808977 9108470 13217752 191209824\\r\\n', 'output': ['313283482\\r\\n21804622\\r\\n682197550\\r\\n361027027\\r\\n756362680\\r\\n151917509\\r\\n716108102\\r\\n131732975\\r\\n237068086\\r\\n731869119\\r\\n190595295\\r\\n847684643\\r\\n847454143\\r\\n501579235\\r\\n129856516\\r\\n246699402\\r\\n205385635\\r\\n639100445\\r\\n614421017\\r\\n227076269']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0\\r\\n9380933 34450681 12329733 7732927 73910078 16165679 149467043 56914401 21809098 36934833 71019254 168559440 12033996 40465391 7156881 3312348 37150678 130625432 42709585 66115911\\r\\n', 'output': ['813231583\\r\\n458087744\\r\\n445793615\\r\\n651101155\\r\\n484645642\\r\\n506668954\\r\\n896602699\\r\\n556862659\\r\\n145127201\\r\\n302005399\\r\\n558418033\\r\\n213871822\\r\\n57299634\\r\\n564466143\\r\\n767349204\\r\\n290138481\\r\\n12657688\\r\\n925337836\\r\\n827843024\\r\\n119362169']}, {'input': '20 30\\r\\n0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 0 1 0 1\\r\\n66166717 200301718 6725634 95379617 42880832 48874211 64912554 36809296 13248978 58406666 53142218 45080678 19902257 58554006 23570140 14484661 7589423 78746789 11072716 52395211\\r\\n', 'output': ['823107880\\r\\n742699237\\r\\n987770596\\r\\n549924308\\r\\n730188349\\r\\n913535291\\r\\n936423447\\r\\n122869154\\r\\n581668441\\r\\n749452306\\r\\n615454312\\r\\n176148736\\r\\n874336841\\r\\n897418997\\r\\n235568492\\r\\n24727530\\r\\n143875067\\r\\n15270097\\r\\n200154604\\r\\n356406452']}, {'input': '20 30\\r\\n0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661\\r\\n', 'output': ['76898501\\r\\n989279651\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803\\r\\n', 'output': ['504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981']}, {'input': '2000 300\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1...', 'output': ['527557309\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n819771096\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n762900831\\r\\n762900831\\r\\n292213787\\r\\n762900831\\r\\n527557309\\r\\n292213787\\r\\n762900831\\r\\n292213787\\r\\n527557309\\r\\n762900831\\r\\n292213787\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n819771096\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n292213787\\r\\n762900831\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n762900831\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n76290...', '126026410\\r\\n26532090\\r\\n89545496\\r\\n348227668\\r\\n407921745\\r\\n822476105\\r\\n815841057\\r\\n129343473\\r\\n683184486\\r\\n182403525\\r\\n971714643\\r\\n669922973\\r\\n195669656\\r\\n643389211\\r\\n596958847\\r\\n991612114\\r\\n26531426\\r\\n494147799\\r\\n587007825\\r\\n646703323\\r\\n192353616\\r\\n198987665\\r\\n116075186\\r\\n208935334\\r\\n451035127\\r\\n991612774\\r\\n630129722\\r\\n673238446\\r\\n965081504\\r\\n404604334\\r\\n762781111\\r\\n945182265\\r\\n613540647\\r\\n855640163\\r\\n540577710\\r\\n739563385\\r\\n185720640\\r\\n13265829\\r\\n460984258\\r\\n182404969\\r\\n988297561\\r\\n726301539\\r\\n301795019\\r\\n46434122\\r\\n882170987\\r\\n533948601\\r\\n729615799\\r...', '257947573\\r\\n350833899\\r\\n998147431\\r\\n282054341\\r\\n689337877\\r\\n802790225\\r\\n636332064\\r\\n611526839\\r\\n405886622\\r\\n295781176\\r\\n577883978\\r\\n211877869\\r\\n476761551\\r\\n471920813\\r\\n313000296\\r\\n8886097\\r\\n165109708\\r\\n231143899\\r\\n91489412\\r\\n972042214\\r\\n584771626\\r\\n771892731\\r\\n841370746\\r\\n736106038\\r\\n702414716\\r\\n368751476\\r\\n510452873\\r\\n253155296\\r\\n619859862\\r\\n14376831\\r\\n37833603\\r\\n94933236\\r\\n485696109\\r\\n96233228\\r\\n33691322\\r\\n403791251\\r\\n233190809\\r\\n447164049\\r\\n173248887\\r\\n549683390\\r\\n863382143\\r\\n717538465\\r\\n704413165\\r\\n210480955\\r\\n414122723\\r\\n922528686\\r\\n131321464\\r\\n40...', '723727157\\r\\n723727157\\r\\n898419922\\r\\n449209961\\r\\n898419922\\r\\n174692765\\r\\n723727157\\r\\n723727157\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n174692765\\r\\n723727157\\r\\n174692765\\r\\n723727157\\r\\n723727157\\r\\n623902726\\r\\n723727157\\r\\n723727157\\r\\n449209961\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n174692765\\r\\n723727157\\r\\n449209961\\r\\n349385530\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n623902726\\r\\n449209961\\r\\n449209961\\r\\n898419922\\r\\n898419922\\r\\n723727157\\r\\n449209961\\r\\n723727157\\r\\n723727157\\r\\n723727157\\r\\n174692765\\r\\n17469...', '449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n44954...', '228892698\\r\\n323233274\\r\\n31331450\\r\\n583630535\\r\\n530020844\\r\\n200867506\\r\\n762566026\\r\\n461091654\\r\\n900597519\\r\\n687197433\\r\\n232025843\\r\\n294169404\\r\\n557699810\\r\\n988325579\\r\\n966739790\\r\\n633933968\\r\\n156657250\\r\\n762046687\\r\\n338898999\\r\\n134379009\\r\\n458304735\\r\\n975792999\\r\\n343970609\\r\\n589896825\\r\\n188161813\\r\\n733675269\\r\\n708610109\\r\\n303222613\\r\\n919742615\\r\\n718701996\\r\\n235158988\\r\\n5746951\\r\\n831841442\\r\\n194601216\\r\\n389029319\\r\\n946729129\\r\\n65449819\\r\\n768486090\\r\\n213226973\\r\\n847160941\\r\\n853773457\\r\\n913476325\\r\\n847334054\\r\\n435334042\\r\\n997551901\\r\\n781018670\\r\\n847334054...', '280562572\\r\\n27981324\\r\\n930424996\\r\\n580126064\\r\\n653672085\\r\\n638998124\\r\\n192370181\\r\\n304975360\\r\\n268606553\\r\\n887998181\\r\\n902057157\\r\\n419880164\\r\\n965999027\\r\\n37849969\\r\\n655704617\\r\\n915939588\\r\\n290316653\\r\\n133632797\\r\\n916310849\\r\\n291352554\\r\\n315435621\\r\\n753760137\\r\\n617080324\\r\\n863678858\\r\\n719694519\\r\\n658038314\\r\\n750307459\\r\\n915589744\\r\\n530437886\\r\\n512060713\\r\\n157922588\\r\\n178644172\\r\\n5715303\\r\\n194942404\\r\\n852097346\\r\\n696406228\\r\\n891303846\\r\\n489183600\\r\\n892182349\\r\\n437838373\\r\\n390449491\\r\\n931412865\\r\\n520118475\\r\\n724052962\\r\\n624309238\\r\\n315358057\\r\\n157108994...']}, {'input': '2000 300\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...', 'output': ['510770111\\r\\n586552453\\r\\n521518610\\r\\n729496815\\r\\n925336870\\r\\n218501419\\r\\n210003823\\r\\n721775463\\r\\n410294316\\r\\n59753754\\r\\n445916833\\r\\n149785626\\r\\n397166471\\r\\n850878761\\r\\n322612228\\r\\n400512598\\r\\n962933991\\r\\n238352988\\r\\n481795882\\r\\n312429269\\r\\n230724223\\r\\n668360989\\r\\n538774766\\r\\n7521020\\r\\n782227455\\r\\n932947153\\r\\n766620629\\r\\n621895347\\r\\n948462500\\r\\n49828435\\r\\n465611859\\r\\n508795684\\r\\n965408363\\r\\n876217222\\r\\n27461852\\r\\n849541586\\r\\n889517699\\r\\n887546242\\r\\n347913548\\r\\n274305965\\r\\n434804057\\r\\n916014055\\r\\n822187302\\r\\n339400794\\r\\n604867800\\r\\n368133826\\r\\n799958426\\r...', '738045334\\r\\n159282105\\r\\n578763229\\r\\n578763229\\r\\n477846315\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n578763229\\r\\n738045334\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n578763229\\r\\n578763229\\r\\n578763229\\r\\n159282105\\r\\n578763229\\r\\n318564210\\r\\n578763229\\r\\n578763229\\r\\n159282105\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n159282105\\r\\n578763229\\r\\n159282105\\r\\n738045334\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n578763229\\r\\n738045334\\r\\n159282105\\r\\n738045334\\r\\n318564210\\r\\n73804...', '536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n53653...', '544865927\\r\\n362689553\\r\\n554047941\\r\\n662901553\\r\\n528631083\\r\\n623245685\\r\\n408599623\\r\\n383515404\\r\\n454842332\\r\\n96411147\\r\\n49835799\\r\\n979215047\\r\\n123957189\\r\\n241194187\\r\\n232012173\\r\\n930510515\\r\\n682596137\\r\\n940690446\\r\\n985602599\\r\\n592905181\\r\\n837226469\\r\\n463026429\\r\\n366947921\\r\\n259890854\\r\\n259558215\\r\\n423037922\\r\\n336940056\\r\\n739152127\\r\\n906091574\\r\\n273663875\\r\\n103463977\\r\\n218239152\\r\\n323832313\\r\\n988397061\\r\\n861312771\\r\\n369742383\\r\\n261687399\\r\\n997579075\\r\\n494364850\\r\\n668490477\\r\\n306599552\\r\\n268740229\\r\\n776878100\\r\\n482521724\\r\\n140192033\\r\\n252172746\\r\\n5279658...', '156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n52020618\\r\\n104041236\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n156061854\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n208082472\\r\\n208082472\\r\\n104041236\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n156061854\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n156061854\\r\\n52020618\\r...', '696015721\\r\\n931773777\\r\\n559486112\\r\\n847360916\\r\\n520999237\\r\\n330674091\\r\\n901387332\\r\\n817005789\\r\\n311776972\\r\\n19589756\\r\\n894472615\\r\\n644360731\\r\\n540588993\\r\\n761762342\\r\\n387103251\\r\\n712279217\\r\\n24626123\\r\\n870308250\\r\\n487286532\\r\\n403104550\\r\\n728773592\\r\\n564260282\\r\\n775161336\\r\\n604919022\\r\\n382066884\\r\\n133895986\\r\\n14584707\\r\\n323728056\\r\\n371794589\\r\\n189832070\\r\\n664212684\\r\\n375120849\\r\\n841631912\\r\\n277833388\\r\\n899970740\\r\\n674023221\\r\\n550168651\\r\\n205864687\\r\\n292155898\\r\\n484652909\\r\\n899246785\\r\\n641496229\\r\\n604195067\\r\\n520275282\\r\\n140579824\\r\\n200828320\\r\\n88943624...', '381761597\\r\\n749914123\\r\\n734966985\\r\\n451112838\\r\\n254375974\\r\\n408043495\\r\\n50147455\\r\\n317426730\\r\\n691474180\\r\\n297424671\\r\\n16576556\\r\\n950550287\\r\\n615062290\\r\\n508772409\\r\\n574097914\\r\\n755479957\\r\\n504073337\\r\\n232598914\\r\\n376960541\\r\\n704800943\\r\\n722703963\\r\\n943084953\\r\\n852281936\\r\\n604167024\\r\\n430991955\\r\\n691776511\\r\\n979477939\\r\\n916779041\\r\\n928976757\\r\\n9004809\\r\\n66623088\\r\\n160364271\\r\\n569831785\\r\\n753768578\\r\\n10158931\\r\\n829943628\\r\\n860984852\\r\\n599688760\\r\\n746963293\\r\\n90503616\\r\\n665117495\\r\\n843614199\\r\\n773004798\\r\\n52464119\\r\\n40225734\\r\\n193061049\\r\\n476979003\\r\\n451...']}, {'input': '2000 300\\r\\n1 1 1 0 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 1 0...', 'output': ['520991218\\r\\n260495609\\r\\n781486827\\r\\n281527765\\r\\n460706912\\r\\n260495609\\r\\n43738083\\r\\n819065206\\r\\n639886059\\r\\n260495609\\r\\n639886059\\r\\n520991218\\r\\n520991218\\r\\n639886059\\r\\n819065206\\r\\n520991218\\r\\n639886059\\r\\n819065206\\r\\n639886059\\r\\n43738083\\r\\n781486827\\r\\n260495609\\r\\n520991218\\r\\n781486827\\r\\n819065206\\r\\n639886059\\r\\n281527765\\r\\n819065206\\r\\n460706912\\r\\n260495609\\r\\n639886059\\r\\n260495609\\r\\n304233692\\r\\n781486827\\r\\n260495609\\r\\n260495609\\r\\n43738083\\r\\n260495609\\r\\n639886059\\r\\n260495609\\r\\n819065206\\r\\n520991218\\r\\n520991218\\r\\n639886059\\r\\n639886059\\r\\n460706912\\r\\n26049560...']}, {'input': '2000 300\\r\\n1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 1 1 0 1 0 1 0 0 0 1 1 0 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 1 0 0 1 0 1 0 1 0 1 0 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 1 1 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1...', 'output': ['967309723\\r\\n488979754\\r\\n894231131\\r\\n227079250\\r\\n800673042\\r\\n803173636\\r\\n302660701\\r\\n49359452\\r\\n361182334\\r\\n613837368\\r\\n903714465\\r\\n783149148\\r\\n772569418\\r\\n153771444\\r\\n347053203\\r\\n383800081\\r\\n305903959\\r\\n591371347\\r\\n504143617\\r\\n554819601\\r\\n711091639\\r\\n993123371\\r\\n662636534\\r\\n799549517\\r\\n755795853\\r\\n257472564\\r\\n749178682\\r\\n44165553\\r\\n754769201\\r\\n677121173\\r\\n77251408\\r\\n825363165\\r\\n94378162\\r\\n905743915\\r\\n555723948\\r\\n401067893\\r\\n365827394\\r\\n778249947\\r\\n641361749\\r\\n657808321\\r\\n76885722\\r\\n205390090\\r\\n357248290\\r\\n762413024\\r\\n471855369\\r\\n953559875\\r\\n452364595\\r...']}, {'input': '2000 300\\r\\n1 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 0 1 0 0 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 1 0 1 0 1 0 0 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 0 0 1 0 0 0 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 0 0 1 1 0 1...', 'output': ['353668818\\r\\n180952778\\r\\n350267066\\r\\n85276305\\r\\n498935339\\r\\n570367769\\r\\n947922902\\r\\n520199571\\r\\n977020824\\r\\n311854081\\r\\n369942273\\r\\n709342799\\r\\n241020253\\r\\n306637091\\r\\n574362410\\r\\n924893301\\r\\n259050261\\r\\n881412462\\r\\n505397126\\r\\n426307000\\r\\n368001455\\r\\n187561592\\r\\n507502858\\r\\n422600821\\r\\n840032307\\r\\n570586935\\r\\n847077944\\r\\n633577890\\r\\n21924242\\r\\n429617104\\r\\n40169532\\r\\n200231692\\r\\n301247265\\r\\n526536756\\r\\n236599712\\r\\n449404280\\r\\n482154139\\r\\n74891321\\r\\n744845075\\r\\n202529472\\r\\n497487224\\r\\n750227627\\r\\n791509388\\r\\n365064757\\r\\n435991351\\r\\n911452637\\r\\n230155510...']}, {'input': '200000 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n83030...', '746090912\\r\\n987874942\\r\\n493937471\\r\\n493937471\\r\\n241784030\\r\\n493937471\\r\\n746090912\\r\\n241784030\\r\\n746090912\\r\\n987874942\\r\\n493937471\\r\\n241784030\\r\\n493937471\\r\\n493937471\\r\\n987874942\\r\\n493937471\\r\\n987874942\\r\\n746090912\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n493937471\\r\\n493937471\\r\\n483568060\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n241784030\\r\\n746090912\\r\\n746090912\\r\\n987874942\\r\\n493937471\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n746090912\\r\\n241784030\\r\\n493937471\\r\\n746090912\\r\\n241784030\\r\\n493937471\\r\\n49393...', '249477932\\r\\n163324885\\r\\n619370540\\r\\n591761649\\r\\n381202278\\r\\n400495236\\r\\n181619933\\r\\n483987183\\r\\n768059384\\r\\n853879792\\r\\n648642618\\r\\n525566838\\r\\n955999425\\r\\n754753895\\r\\n409143808\\r\\n470016419\\r\\n322658124\\r\\n100123809\\r\\n150684670\\r\\n101454359\\r\\n634006577\\r\\n229187060\\r\\n466357410\\r\\n35592186\\r\\n769389935\\r\\n547853534\\r\\n85820409\\r\\n289061762\\r\\n201245531\\r\\n244821008\\r\\n910095485\\r\\n40581744\\r\\n910760760\\r\\n733797749\\r\\n450390828\\r\\n440079067\\r\\n811634863\\r\\n573799237\\r\\n619703176\\r\\n460037301\\r\\n90144696\\r\\n512261348\\r\\n656958547\\r\\n636002401\\r\\n271099351\\r\\n573799237\\r\\n748766427...', '337242164\\r\\n175981139\\r\\n705993748\\r\\n951319188\\r\\n208728534\\r\\n926966446\\r\\n894219051\\r\\n142402527\\r\\n394342301\\r\\n747271382\\r\\n832167014\\r\\n925728471\\r\\n915824671\\r\\n371227534\\r\\n265828671\\r\\n404110515\\r\\n737503168\\r\\n526705442\\r\\n275596885\\r\\n225789012\\r\\n140757794\\r\\n548311062\\r\\n834642964\\r\\n960680644\\r\\n982693022\\r\\n298440480\\r\\n97139796\\r\\n357880981\\r\\n649164783\\r\\n74025029\\r\\n270644985\\r\\n37970467\\r\\n945129313\\r\\n422137796\\r\\n739979118\\r\\n389390401\\r\\n815106536\\r\\n311922619\\r\\n858860120\\r\\n411267193\\r\\n976503147\\r\\n835880939\\r\\n13346553\\r\\n661137775\\r\\n978979097\\r\\n527943417\\r\\n707231723...', '895547075\\r\\n50488475\\r\\n972784199\\r\\n737802803\\r\\n134349212\\r\\n579628449\\r\\n120501272\\r\\n588315405\\r\\n599840552\\r\\n714837825\\r\\n262849659\\r\\n448375127\\r\\n596572279\\r\\n172710075\\r\\n108458976\\r\\n317466571\\r\\n845058600\\r\\n348860806\\r\\n506174996\\r\\n501269960\\r\\n76979425\\r\\n561049607\\r\\n754144168\\r\\n500496863\\r\\n56852638\\r\\n736253107\\r\\n323142953\\r\\n631062404\\r\\n987492303\\r\\n864152840\\r\\n155163780\\r\\n16686131\\r\\n341291713\\r\\n213479047\\r\\n623578627\\r\\n815212310\\r\\n74571316\\r\\n580316230\\r\\n11782846\\r\\n9977202\\r\\n56164857\\r\\n453363728\\r\\n283577160\\r\\n112674480\\r\\n770828548\\r\\n441236116\\r\\n475210843\\r\\n997...', '743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n74369...', '743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n74369...', '34499784\\r\\n374247743\\r\\n362747815\\r\\n297560637\\r\\n574121750\\r\\n869682055\\r\\n449997441\\r\\n458622387\\r\\n930182193\\r\\n940681955\\r\\n376622642\\r\\n28249737\\r\\n622933686\\r\\n969931858\\r\\n400622664\\r\\n671871138\\r\\n811807848\\r\\n331623096\\r\\n223311188\\r\\n305748258\\r\\n203623639\\r\\n439935004\\r\\n185436339\\r\\n481622243\\r\\n517559518\\r\\n585621678\\r\\n66124586\\r\\n679996001\\r\\n894244918\\r\\n45999712\\r\\n243436062\\r\\n887057463\\r\\n525184298\\r\\n990056732\\r\\n154311620\\r\\n198873841\\r\\n227623661\\r\\n430809975\\r\\n12937419\\r\\n194561368\\r\\n140374035\\r\\n610059025\\r\\n715495951\\r\\n677058261\\r\\n731308352\\r\\n710120554\\r\\n143749100\\r...', '743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n74369...', '563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n56365...', '948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n94886...', '616415891\\r\\n743692045\\r\\n743692045\\r\\n616415891\\r\\n489139737\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n870968199\\r\\n616415891\\r\\n743692045\\r\\n616415891\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n489139737\\r\\n870968199\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n616415891\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n361863583\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n870968199\\r\\n616415891\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n107311275\\r\\n743692045\\r\\n870968199\\r\\n870968199\\r\\n87096...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['534464893\\r\\n70685433\\r\\n141370866\\r\\n605150326\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n605150326\\r\\n605150326\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n141370866\\r\\n70685433\\r\\n534464893\\r\\n141370866\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n605150326\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n...', '434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n43434...', '479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n47934...', '983882738\\r\\n723119688\\r\\n459823065\\r\\n556901314\\r\\n70724963\\r\\n266615302\\r\\n669551615\\r\\n128160584\\r\\n374823721\\r\\n636048406\\r\\n410086236\\r\\n880577836\\r\\n119251355\\r\\n80183061\\r\\n594759171\\r\\n13376576\\r\\n422252375\\r\\n548479185\\r\\n235532967\\r\\n555429175\\r\\n697576973\\r\\n194705367\\r\\n244991065\\r\\n696417466\\r\\n575930209\\r\\n911572937\\r\\n690252582\\r\\n173917166\\r\\n286156762\\r\\n203240195\\r\\n371392343\\r\\n232850391\\r\\n10955702\\r\\n65159878\\r\\n81942367\\r\\n928468125\\r\\n286592932\\r\\n499727395\\r\\n803102816\\r\\n81855133\\r\\n235158566\\r\\n824901521\\r\\n295851097\\r\\n716980269\\r\\n913157775\\r\\n996485047\\r\\n807919099\\r\\n4...', '535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n53563...', '483259721\\r\\n483259721\\r\\n451534810\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n709027126\\r\\n483259721\\r\\n966519442\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n740752037\\r\\n225767405\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n451534810\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n966519442\\r\\n225767405\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n225767405\\r\\n740752037\\r\\n483259721\\r\\n225767405\\r\\n740752037\\r\\n74075...', '365182673\\r\\n453133330\\r\\n646237559\\r\\n383557795\\r\\n419033749\\r\\n340436101\\r\\n116418016\\r\\n678527788\\r\\n945667567\\r\\n79030627\\r\\n870994872\\r\\n815130278\\r\\n370916978\\r\\n677151415\\r\\n467150520\\r\\n882361399\\r\\n890542201\\r\\n249936864\\r\\n39196741\\r\\n947579002\\r\\n636680384\\r\\n295607138\\r\\n675342063\\r\\n808325849\\r\\n29104504\\r\\n25918779\\r\\n103037971\\r\\n291784268\\r\\n445589673\\r\\n215200138\\r\\n658241231\\r\\n704446567\\r\\n478414964\\r\\n374535682\\r\\n193639291\\r\\n871632017\\r\\n186732779\\r\\n291784268\\r\\n138616008\\r\\n491795009\\r\\n475331322\\r\\n689894315\\r\\n243667497\\r\\n853256895\\r\\n714003742\\r\\n774124185\\r\\n363271238...', '985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n98542...', '155925765\\r\\n487818429\\r\\n547205425\\r\\n780737503\\r\\n891037610\\r\\n578930143\\r\\n825301017\\r\\n138861660\\r\\n552655747\\r\\n896394864\\r\\n881431780\\r\\n167493014\\r\\n480546290\\r\\n147428613\\r\\n697960072\\r\\n762448385\\r\\n870903408\\r\\n251332589\\r\\n614973238\\r\\n898519152\\r\\n581333635\\r\\n223833180\\r\\n271513325\\r\\n829479792\\r\\n130457576\\r\\n488950374\\r\\n631091534\\r\\n259853008\\r\\n403102846\\r\\n643511524\\r\\n491144463\\r\\n683066789\\r\\n279987210\\r\\n916459265\\r\\n497517327\\r\\n461078693\\r\\n513286618\\r\\n11055375\\r\\n943036132\\r\\n453946156\\r\\n770116063\\r\\n285321197\\r\\n954649915\\r\\n686299755\\r\\n305432132\\r\\n314991428\\r\\n917591...', '979248391\\r\\n467909552\\r\\n175190733\\r\\n498757573\\r\\n436634896\\r\\n282945489\\r\\n831422982\\r\\n525572199\\r\\n608769567\\r\\n291190788\\r\\n623553625\\r\\n907228321\\r\\n19120025\\r\\n908756352\\r\\n635157558\\r\\n367120190\\r\\n895500325\\r\\n121864053\\r\\n271093430\\r\\n805461626\\r\\n799170993\\r\\n621048261\\r\\n209948086\\r\\n214834751\\r\\n291190788\\r\\n88084033\\r\\n941559039\\r\\n256433435\\r\\n462472189\\r\\n261870798\\r\\n718354926\\r\\n62673375\\r\\n599120300\\r\\n207566785\\r\\n71042737\\r\\n669914911\\r\\n844128311\\r\\n594233635\\r\\n758976277\\r\\n186492094\\r\\n238841441\\r\\n949377703\\r\\n280013490\\r\\n621474896\\r\\n309333480\\r\\n356245464\\r\\n817740320...']}, {'input': '200000 3000\\r\\n0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 1 1 1 0 1 1 0 0 1 0 0 0 1 1 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 1 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 1 0 0 1 0 0 0 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 0 0 1 0 0 0 1 1 0 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 ...', 'output': ['684128648\\r\\n534537704\\r\\n70831055\\r\\n605368759\\r\\n605368759\\r\\n534537704\\r\\n55897238\\r\\n70831055\\r\\n534537704\\r\\n534537704\\r\\n605368759\\r\\n684128648\\r\\n55897238\\r\\n740025886\\r\\n534537704\\r\\n70831055\\r\\n70831055\\r\\n684128648\\r\\n70831055\\r\\n684128648\\r\\n425910181\\r\\n70831055\\r\\n605368759\\r\\n534537704\\r\\n534537704\\r\\n605368759\\r\\n684128648\\r\\n70831055\\r\\n684128648\\r\\n605368759\\r\\n70831055\\r\\n370012943\\r\\n370012943\\r\\n370012943\\r\\n605368759\\r\\n70831055\\r\\n534537704\\r\\n70831055\\r\\n370012943\\r\\n141662110\\r\\n534537704\\r\\n370012943\\r\\n370012943\\r\\n70831055\\r\\n684128648\\r\\n370012943\\r\\n684128648\\r\\n5345377...']}, {'input': '200000 3000\\r\\n1 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 1 1 0 1 1 1 1 0 0 1 0 1 0 0 1 0 1 1 0 1 0 1 1 0 0 1 1 0 0 1 0 1 0 1 1 0 0 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 1 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 0 1 0 0 0 1 1 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ...', 'output': ['331265679\\r\\n248932636\\r\\n609274319\\r\\n474255977\\r\\n102055814\\r\\n485644908\\r\\n626044190\\r\\n431097835\\r\\n319780031\\r\\n47044666\\r\\n687413158\\r\\n404806427\\r\\n125126455\\r\\n282606731\\r\\n307585492\\r\\n584577913\\r\\n604465119\\r\\n366599088\\r\\n490459582\\r\\n11853006\\r\\n753101524\\r\\n749114305\\r\\n816668970\\r\\n25465595\\r\\n942396724\\r\\n387086401\\r\\n558715961\\r\\n470999022\\r\\n908318742\\r\\n535377307\\r\\n712631115\\r\\n501708418\\r\\n465458062\\r\\n906281962\\r\\n309027298\\r\\n466289495\\r\\n88346508\\r\\n21689911\\r\\n46580591\\r\\n650678352\\r\\n435081076\\r\\n202663995\\r\\n554027989\\r\\n280201535\\r\\n865380747\\r\\n516485969\\r\\n226759102\\r\\n...']}, {'input': '200000 3000\\r\\n0 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 ...', 'output': ['702758762\\r\\n222668721\\r\\n663197048\\r\\n675792950\\r\\n759259581\\r\\n332486741\\r\\n171127920\\r\\n414458191\\r\\n349087590\\r\\n847918503\\r\\n522872021\\r\\n540727038\\r\\n813504457\\r\\n278812310\\r\\n949679696\\r\\n784095578\\r\\n918470307\\r\\n482110597\\r\\n535952792\\r\\n109088580\\r\\n967478176\\r\\n268019403\\r\\n523209396\\r\\n80286422\\r\\n566422901\\r\\n182974112\\r\\n166764579\\r\\n716767192\\r\\n203579125\\r\\n975507557\\r\\n770975186\\r\\n884777286\\r\\n433828625\\r\\n891459014\\r\\n519109900\\r\\n907459392\\r\\n591988953\\r\\n479131884\\r\\n989822907\\r\\n846824242\\r\\n304414023\\r\\n13755521\\r\\n6710438\\r\\n355497544\\r\\n718926904\\r\\n912736930\\r\\n173287893...']}, {'input': '10 3000\\r\\n1 1 1 1 1 0 0 0 1 1\\r\\n6 22 5 2 4 15 4 7 31 4\\r\\n', 'output': ['561258918\\r\\n61460660\\r\\n467715765\\r\\n187086306\\r\\n374172612\\r\\n538110090\\r\\n143496024\\r\\n251118042\\r\\n903349037\\r\\n374172612']}, {'input': '100 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n10 8 1 9 7 5 12 9 15 7 16 5 17 5 17 21 11 3 4 4 30 17 3 84 12 30 2 8 2 2 22 24 15 11 15 13 7 17 1 12 8 4 3 6 5 15 1 3 4 2 27 3 11 11 3 3 3 5 14 2 5 13 6 2 6 5 6 19 3 16 4 12 11 2 2 3 25 14 6 11 22 4 10 32 9 19 14 2 2 3 4 3 2 5 18 14 2 7 3 8\\r\\n', 'output': ['23677346\\r\\n418239618\\r\\n800963217\\r\\n220958482\\r\\n615520754\\r\\n11838673\\r\\n627359427\\r\\n220958482\\r\\n35516019\\r\\n615520754\\r\\n836479236\\r\\n11838673\\r\\n639198100\\r\\n11838673\\r\\n639198100\\r\\n848317909\\r\\n824640563\\r\\n406400945\\r\\n209119809\\r\\n209119809\\r\\n71032038\\r\\n639198100\\r\\n406400945\\r\\n398538577\\r\\n627359427\\r\\n71032038\\r\\n603682081\\r\\n418239618\\r\\n19778681\\r\\n603682081\\r\\n651036773\\r\\n256474501\\r\\n35516019\\r\\n824640563\\r\\n35516019\\r\\n430078291\\r\\n615520754\\r\\n639198100\\r\\n800963217\\r\\n627359427\\r\\n418239618\\r\\n209119809\\r\\n406400945\\r\\n812801890\\r\\n11838673\\r\\n35516019\\r\\n800963217\\r\\n406400...']}, {'input': '1000 3000\\r\\n0 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 ...', 'output': ['984664827\\r\\n971085301\\r\\n837724678\\r\\n984664827\\r\\n225735001\\r\\n971085301\\r\\n984664827\\r\\n611989677\\r\\n65215326\\r\\n611989677\\r\\n837724678\\r\\n984664827\\r\\n225735001\\r\\n984664827\\r\\n971085301\\r\\n225735001\\r\\n225735001\\r\\n984664827\\r\\n971085301\\r\\n957505775\\r\\n971085301\\r\\n984664827\\r\\n943926249\\r\\n225735001\\r\\n971085301\\r\\n611989677\\r\\n837724678\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n984664827\\r\\n971085301\\r\\n943926249\\r\\n943926249\\r\\n611989677\\r\\n971085301\\r\\n984664827\\r\\n957505775\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n971085301\\r\\n225735001\\r\\n837724678\\r\\n611989...']}, {'input': '1000 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n5\\r\\n5\\r\\n499122184\\r\\n10\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122184\\r\\n5\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122184\\r\\n5...']}, {'input': '199990 3000\\r\\n1 0 0 1 0 1 1 0 0 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 0 1 1 0 0 1 0 0 1 1 0 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 0 0 1 0 1 0 ...', 'output': ['646452156\\r\\n960868656\\r\\n118518242\\r\\n184272685\\r\\n747024268\\r\\n964037469\\r\\n951101180\\r\\n377347150\\r\\n254993892\\r\\n11139421\\r\\n70322210\\r\\n525571057\\r\\n926475930\\r\\n63428346\\r\\n756018063\\r\\n626131891\\r\\n466781454\\r\\n656042659\\r\\n69698706\\r\\n359694160\\r\\n226813875\\r\\n191435355\\r\\n897230167\\r\\n851910875\\r\\n872964055\\r\\n741910138\\r\\n963242791\\r\\n859073545\\r\\n501205753\\r\\n252469038\\r\\n77916365\\r\\n622358084\\r\\n867246600\\r\\n381481659\\r\\n57646031\\r\\n326439010\\r\\n37314488\\r\\n267966014\\r\\n386173645\\r\\n224253188\\r\\n693822089\\r\\n652063749\\r\\n209704954\\r\\n936775840\\r\\n675102836\\r\\n581756207\\r\\n18809453\\r\\n84...']}, {'input': '199991 3000\\r\\n1 0 1 0 0 1 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 ...', 'output': ['576788803\\r\\n851579816\\r\\n464431389\\r\\n925910539\\r\\n240339104\\r\\n317886519\\r\\n67707478\\r\\n262772669\\r\\n221595177\\r\\n612937974\\r\\n736137684\\r\\n268724388\\r\\n68361383\\r\\n847191682\\r\\n557301933\\r\\n913346054\\r\\n648280739\\r\\n171995554\\r\\n235269506\\r\\n530242292\\r\\n148650394\\r\\n908499525\\r\\n304200830\\r\\n721371958\\r\\n474031015\\r\\n817280262\\r\\n825707282\\r\\n465373250\\r\\n245622892\\r\\n341231679\\r\\n845696111\\r\\n853007293\\r\\n68361383\\r\\n915771149\\r\\n987480726\\r\\n726171771\\r\\n707992711\\r\\n478931968\\r\\n847890178\\r\\n687514833\\r\\n732279394\\r\\n927044872\\r\\n856499296\\r\\n862463110\\r\\n77307104\\r\\n484794642\\r\\n615409785...']}, {'input': '199992 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 ...', 'output': ['944579271\\r\\n815447430\\r\\n121435610\\r\\n89385736\\r\\n85360285\\r\\n56962924\\r\\n289585947\\r\\n344015172\\r\\n223771444\\r\\n652123221\\r\\n591303048\\r\\n4248454\\r\\n306743823\\r\\n968709911\\r\\n670850059\\r\\n672191876\\r\\n417953645\\r\\n24521845\\r\\n946915719\\r\\n777789018\\r\\n60838440\\r\\n839186865\\r\\n79733480\\r\\n134590444\\r\\n755625163\\r\\n504520550\\r\\n752912502\\r\\n172585260\\r\\n452314215\\r\\n812559060\\r\\n865646468\\r\\n584772439\\r\\n717751255\\r\\n344015172\\r\\n217454686\\r\\n551825\\r\\n985330789\\r\\n733776192\\r\\n951920831\\r\\n371680341\\r\\n447096882\\r\\n332238689\\r\\n688429333\\r\\n390729899\\r\\n623930596\\r\\n453096625\\r\\n858100172\\r\\n14638...']}, {'input': '199993 3000\\r\\n1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['189220773\\r\\n219328456\\r\\n767760662\\r\\n806220888\\r\\n797979411\\r\\n545740580\\r\\n219383989\\r\\n75297991\\r\\n40929720\\r\\n935115229\\r\\n532004785\\r\\n529257626\\r\\n49282263\\r\\n789793467\\r\\n545740580\\r\\n962586819\\r\\n485358615\\r\\n471678353\\r\\n907699172\\r\\n803473729\\r\\n408604762\\r\\n963918788\\r\\n35602001\\r\\n847372740\\r\\n611561330\\r\\n216636830\\r\\n729467035\\r\\n298885001\\r\\n73784562\\r\\n95928433\\r\\n405857603\\r\\n312620796\\r\\n126147182\\r\\n518268990\\r\\n353717115\\r\\n501841569\\r\\n512830205\\r\\n685568024\\r\\n252294364\\r\\n962586819\\r\\n477172671\\r\\n252637898\\r\\n246744513\\r\\n434391811\\r\\n52084955\\r\\n807039242\\r\\n414043547\\r\\n2...']}, {'input': '199994 3000\\r\\n0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 1 0 0 1 1 0 0 1 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 0 1 0 1 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 ...', 'output': ['336654971\\r\\n732535\\r\\n815250185\\r\\n326444659\\r\\n729180253\\r\\n129624924\\r\\n358796707\\r\\n444866639\\r\\n754810869\\r\\n843551608\\r\\n256744726\\r\\n70820418\\r\\n164515107\\r\\n207034102\\r\\n575220043\\r\\n87535002\\r\\n682699176\\r\\n43984065\\r\\n797070531\\r\\n806189316\\r\\n815982720\\r\\n704840912\\r\\n900587582\\r\\n585042405\\r\\n921264248\\r\\n459213067\\r\\n352526818\\r\\n883140463\\r\\n815669240\\r\\n511377385\\r\\n785483692\\r\\n225259507\\r\\n505565288\\r\\n832271475\\r\\n46481077\\r\\n860266192\\r\\n560703064\\r\\n99613410\\r\\n150730663\\r\\n410704936\\r\\n704840912\\r\\n915837096\\r\\n953960881\\r\\n968477860\\r\\n589004487\\r\\n187389378\\r\\n517884662\\r\\n93...']}, {'input': '199995 3000\\r\\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 ...', 'output': ['662762303\\r\\n929872487\\r\\n874878479\\r\\n456275271\\r\\n715183658\\r\\n400437516\\r\\n521458497\\r\\n76578537\\r\\n927594887\\r\\n897280874\\r\\n185062970\\r\\n530346011\\r\\n941267798\\r\\n71793140\\r\\n377419134\\r\\n675559304\\r\\n591654880\\r\\n719511098\\r\\n599406031\\r\\n622421976\\r\\n250476393\\r\\n605557988\\r\\n772627865\\r\\n133099572\\r\\n594620634\\r\\n848508553\\r\\n404542070\\r\\n193952921\\r\\n255031593\\r\\n40568087\\r\\n771704693\\r\\n756662785\\r\\n869935052\\r\\n847369753\\r\\n36238210\\r\\n358730629\\r\\n164552385\\r\\n938076721\\r\\n767600139\\r\\n458579571\\r\\n693757159\\r\\n843723156\\r\\n975014694\\r\\n858992824\\r\\n955398666\\r\\n756432588\\r\\n585958443...']}, {'input': '199996 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 ...', 'output': ['670876956\\r\\n282683795\\r\\n377011834\\r\\n803395587\\r\\n676385588\\r\\n935914218\\r\\n718622147\\r\\n536417373\\r\\n403228588\\r\\n282205508\\r\\n715874782\\r\\n593703261\\r\\n180906172\\r\\n125082949\\r\\n159213672\\r\\n79114647\\r\\n828013417\\r\\n919922217\\r\\n269261194\\r\\n677998414\\r\\n539957249\\r\\n116020539\\r\\n719578721\\r\\n947915860\\r\\n933837007\\r\\n911830283\\r\\n475864127\\r\\n320232037\\r\\n207122926\\r\\n915004383\\r\\n801796663\\r\\n301300804\\r\\n489000308\\r\\n929955103\\r\\n208735752\\r\\n169096397\\r\\n431236133\\r\\n485282467\\r\\n675865595\\r\\n711172563\\r\\n31711484\\r\\n780760415\\r\\n330893371\\r\\n339149368\\r\\n107928605\\r\\n630648538\\r\\n1150500...']}, {'input': '199997 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['509540793\\r\\n120976575\\r\\n549866318\\r\\n103886913\\r\\n46471726\\r\\n486304930\\r\\n356783524\\r\\n889560180\\r\\n199228995\\r\\n889560180\\r\\n825998792\\r\\n728258080\\r\\n40325525\\r\\n723460820\\r\\n584045642\\r\\n849234655\\r\\n398457990\\r\\n44073096\\r\\n355733835\\r\\n753892573\\r\\n259042812\\r\\n526630455\\r\\n218717287\\r\\n69707589\\r\\n445979405\\r\\n843088454\\r\\n549866318\\r\\n900503641\\r\\n915194673\\r\\n110033114\\r\\n233408319\\r\\n632915998\\r\\n443580775\\r\\n883413979\\r\\n356783524\\r\\n63561388\\r\\n314059369\\r\\n628118738\\r\\n543720117\\r\\n420344912\\r\\n705022217\\r\\n89195881\\r\\n535175286\\r\\n987300892\\r\\n72106219\\r\\n543720117\\r\\n785673267\\r\\n2...', '791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n79153...']}, {'input': '199998 3000\\r\\n1 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 1 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 1 1 1 0 0 1 0 1 0 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 1 0 0 1 0 0 1 1 1 1 0 0 1 1 0 0 ...', 'output': ['728321596\\r\\n638956912\\r\\n987568459\\r\\n799092377\\r\\n597086927\\r\\n782772546\\r\\n770287170\\r\\n255784080\\r\\n699516389\\r\\n256762390\\r\\n656812813\\r\\n513524780\\r\\n416026596\\r\\n285567597\\r\\n279669471\\r\\n136357125\\r\\n790734343\\r\\n479381626\\r\\n898668365\\r\\n822581531\\r\\n870855601\\r\\n827897584\\r\\n408064799\\r\\n759611276\\r\\n235779603\\r\\n990282556\\r\\n571135194\\r\\n279669471\\r\\n311516659\\r\\n287631268\\r\\n607109724\\r\\n822559637\\r\\n639460200\\r\\n369129744\\r\\n111968446\\r\\n157186402\\r\\n495141278\\r\\n652212868\\r\\n143815634\\r\\n367752526\\r\\n165008822\\r\\n592117981\\r\\n400788425\\r\\n793754430\\r\\n966900453\\r\\n2484473\\r\\n9089752...', '964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n96492...']}, {'input': '199999 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 ...', 'output': ['659992102\\r\\n43534688\\r\\n613251861\\r\\n688791385\\r\\n969096633\\r\\n244584877\\r\\n407865304\\r\\n186960964\\r\\n243317864\\r\\n549539932\\r\\n991833247\\r\\n262687380\\r\\n543128826\\r\\n494636937\\r\\n223625258\\r\\n610530943\\r\\n823731817\\r\\n148706567\\r\\n321255216\\r\\n793342431\\r\\n574351284\\r\\n666241663\\r\\n731705240\\r\\n759075965\\r\\n574351284\\r\\n267483036\\r\\n533214424\\r\\n650213898\\r\\n38254397\\r\\n748651581\\r\\n341432457\\r\\n458755021\\r\\n851102542\\r\\n458618823\\r\\n777016923\\r\\n879306339\\r\\n831596828\\r\\n223948348\\r\\n334458632\\r\\n214654779\\r\\n250672893\\r\\n599162636\\r\\n601914362\\r\\n888897651\\r\\n620419998\\r\\n546470577\\r\\n2155987...', '959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n550771238\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n550771238\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n95962...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 ...', 'output': ['893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n917300718\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n89340...', '777798569\\r\\n231173131\\r\\n230887037\\r\\n573284389\\r\\n184819702\\r\\n389069614\\r\\n336642733\\r\\n374568480\\r\\n855432105\\r\\n25206655\\r\\n4356888\\r\\n605147597\\r\\n575616793\\r\\n296362756\\r\\n407873071\\r\\n112177054\\r\\n213967495\\r\\n814007752\\r\\n159623960\\r\\n280717246\\r\\n614422648\\r\\n758973286\\r\\n52239134\\r\\n765343745\\r\\n464084652\\r\\n192059356\\r\\n447272940\\r\\n617899428\\r\\n590679202\\r\\n570104616\\r\\n874554395\\r\\n774321789\\r\\n991301706\\r\\n991873894\\r\\n397156637\\r\\n113523353\\r\\n617052059\\r\\n46639523\\r\\n446403745\\r\\n35361814\\r\\n921640272\\r\\n891146426\\r\\n273084002\\r\\n58808253\\r\\n533015325\\r\\n30707919\\r\\n154980978\\r\\n71...']}, {'input': '200000 3000\\r\\n1 0 0 0 0 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 1 0 1 0 0 1 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 1 0 ...', 'output': ['203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n71266...']}, {'input': '200000 3000\\r\\n0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 1 0 1 0 1 1 1 0 0 0 1 0 1 1 0 1 1 0 0 0 1 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 0 1 1 0 1 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 0 1 1 1 1 1 1 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 0 1 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 ...', 'output': ['532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n53...']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5;\nconst int M = 3e3 + 5;\nconst int mod = 998244353;\nint n, m, a[N], w[N], p[N], q[N], ans[N];\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &w[i]);\n  for (int i = 1; i <= n; i++)\n    if (a[i])\n      p[++p[0]] = w[i];\n    else\n      q[++q[0]] = w[i];\n  for (int i = 1; i <= p[0]; i++) p[i] += p[i - 1];\n  for (int i = 1; i <= q[0]; i++) q[i] += q[i - 1];\n  for (int i = 1; i <= n; i++)\n    if (a[i])\n      ans[i] = (p[p[0]] - p[p[0] - (w[i] + m - 1) / m] + mod) % mod;\n    else\n      ans[i] = (q[q[0]] - q[q[0] - (w[i] + m - 1) / m] + mod) % mod;\n  for (int i = 1; i <= n; i++) printf(\"%d\\n\", ans[i]);\n  return 0;\n}\n"}
{"src_uid": "d37dde5841116352c9b37538631d0b15", "id": 32, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 2 1 2\\r\\n', 'output': ['2']}, {'input': '1 12 1 12\\r\\n', 'output': ['4']}, {'input': '50 100 3 30\\r\\n', 'output': ['0']}, {'input': '1 1000000000 1 1000000000\\r\\n', 'output': ['4']}, {'input': '1 1000000000 158260522 200224287\\r\\n', 'output': ['0']}, {'input': '1 1000000000 2 755829150\\r\\n', 'output': ['8']}, {'input': '1 1000000000 158260522 158260522\\r\\n', 'output': ['1']}, {'input': '1 1000000000 877914575 877914575\\r\\n', 'output': ['1']}, {'input': '232 380232688 116 760465376\\r\\n', 'output': ['30']}, {'input': '47259 3393570 267 600661890\\r\\n', 'output': ['30']}, {'input': '1 1000000000 1 672672000\\r\\n', 'output': ['64']}, {'input': '1000000000 1000000000 1000000000 1000000000\\r\\n', 'output': ['1']}, {'input': '1 1000000000 1 649209600\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 682290000\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 228614400\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 800280000\\r\\n', 'output': ['32']}, {'input': '1 1000000000 1 919987200\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 456537870\\r\\n', 'output': ['64']}, {'input': '1 1000000000 1 7198102\\r\\n', 'output': ['8']}, {'input': '1 1000000000 1 58986263\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 316465536\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 9558312\\r\\n', 'output': ['16']}, {'input': '1 1000000000 1 5461344\\r\\n', 'output': ['16']}, {'input': '58 308939059 29 617878118\\r\\n', 'output': ['62']}, {'input': '837 16262937 27 504151047\\r\\n', 'output': ['28']}, {'input': '47275 402550 25 761222050\\r\\n', 'output': ['12']}, {'input': '22 944623394 22 944623394\\r\\n', 'output': ['32']}, {'input': '1032 8756124 12 753026664\\r\\n', 'output': ['18']}, {'input': '7238 939389 11 618117962\\r\\n', 'output': ['10']}, {'input': '58351 322621 23 818489477\\r\\n', 'output': ['6']}, {'input': '3450 7068875 25 975504750\\r\\n', 'output': ['86']}, {'input': '13266 1606792 22 968895576\\r\\n', 'output': ['14']}, {'input': '21930 632925 15 925336350\\r\\n', 'output': ['42']}, {'input': '2193 4224517 17 544962693\\r\\n', 'output': ['42']}, {'input': '526792 39807152 22904 915564496\\r\\n', 'output': ['8']}, {'input': '67728 122875524 16932 491502096\\r\\n', 'output': ['12']}, {'input': '319813 63298373 24601 822878849\\r\\n', 'output': ['6']}, {'input': '572464 23409136 15472 866138032\\r\\n', 'output': ['4']}, {'input': '39443 809059020 19716 777638472\\r\\n', 'output': ['12']}, {'input': '2544768 8906688 27072 837228672\\r\\n', 'output': ['0']}, {'input': '413592 46975344 21768 892531536\\r\\n', 'output': ['10']}, {'input': '11349 816231429 11349 816231429\\r\\n', 'output': ['8']}, {'input': '16578 939956022 16578 939956022\\r\\n', 'output': ['4']}, {'input': '2783175 6882425 21575 887832825\\r\\n', 'output': ['2']}, {'input': '2862252 7077972 22188 913058388\\r\\n', 'output': ['2']}, {'input': '1856828 13124976 25436 958123248\\r\\n', 'output': ['6']}, {'input': '100 1000000000 158260522 158260522\\r\\n', 'output': ['1']}, {'input': '100 1000000000 877914575 877914575\\r\\n', 'output': ['1']}, {'input': '100 1000000000 602436426 602436426\\r\\n', 'output': ['1']}, {'input': '100 1000000000 24979445 24979445\\r\\n', 'output': ['1']}, {'input': '1 1000000000 18470 112519240\\r\\n', 'output': ['4']}, {'input': '1 1000000000 22692 2201124\\r\\n', 'output': ['2']}, {'input': '1 1000000000 24190 400949250\\r\\n', 'output': ['16']}, {'input': '1 1000000000 33409 694005157\\r\\n', 'output': ['2']}, {'input': '1 1000000000 24967 470827686\\r\\n', 'output': ['16']}, {'input': '1 1000000000 35461 152517761\\r\\n', 'output': ['8']}, {'input': '2 1000000000 158260522 200224287\\r\\n', 'output': ['0']}, {'input': '2 1000000000 602436426 611751520\\r\\n', 'output': ['0']}, {'input': '2 1000000000 861648772 942726551\\r\\n', 'output': ['0']}, {'input': '2 1000000000 433933447 485982495\\r\\n', 'output': ['0']}, {'input': '2 1000000000 262703497 480832794\\r\\n', 'output': ['0']}, {'input': '2672374 422235092 1336187 844470184\\r\\n', 'output': ['2']}, {'input': '1321815 935845020 1321815 935845020\\r\\n', 'output': ['8']}, {'input': '29259607 69772909 2250739 907047817\\r\\n', 'output': ['2']}, {'input': '11678540 172842392 2335708 864211960\\r\\n', 'output': ['4']}, {'input': '297 173688298 2876112 851329152\\r\\n', 'output': ['2']}, {'input': '7249 55497026 659 610467286\\r\\n', 'output': ['28']}, {'input': '398520 1481490 810 728893080\\r\\n', 'output': ['4']}, {'input': '2354 369467362 1177 738934724\\r\\n', 'output': ['14']}, {'input': '407264 2497352 1144 889057312\\r\\n', 'output': ['2']}, {'input': '321399 1651014 603 879990462\\r\\n', 'output': ['4']}, {'input': '475640 486640 440 526057840\\r\\n', 'output': ['2']}, {'input': '631714 179724831 1136 717625968\\r\\n', 'output': ['0']}, {'input': '280476 1595832 588 761211864\\r\\n', 'output': ['8']}, {'input': '10455 39598005 615 673166085\\r\\n', 'output': ['6']}, {'input': '24725 19759875 575 849674625\\r\\n', 'output': ['22']}, {'input': '22 158 2 1738\\r\\n', 'output': ['2']}, {'input': '1 2623 1 2623\\r\\n', 'output': ['4']}, {'input': '7 163677675 3 18\\r\\n', 'output': ['0']}, {'input': '159 20749927 1 158\\r\\n', 'output': ['0']}, {'input': '5252 477594071 1 5251\\r\\n', 'output': ['0']}, {'input': '2202 449433679 3 6603\\r\\n', 'output': ['0']}, {'input': '6 111 3 222\\r\\n', 'output': ['2']}, {'input': '26 46 2 598\\r\\n', 'output': ['2']}, {'input': '26 82 2 1066\\r\\n', 'output': ['2']}, {'input': '1 2993 1 2993\\r\\n', 'output': ['4']}, {'input': '17 17 1 289\\r\\n', 'output': ['0']}, {'input': '177 267 3 15753\\r\\n', 'output': ['2']}, {'input': '7388 22705183 1 7387\\r\\n', 'output': ['0']}, {'input': '1 100 3 100\\r\\n', 'output': ['0']}, {'input': '1 1000 6 1024\\r\\n', 'output': ['0']}, {'input': '1 100 2 4\\r\\n', 'output': ['2']}, {'input': '1 10000 2 455\\r\\n', 'output': ['0']}, {'input': '1 1000000000 250000000 1000000000\\r\\n', 'output': ['2']}, {'input': '3 3 1 1\\r\\n', 'output': ['0']}, {'input': '1 1000000000 100000000 1000000000\\r\\n', 'output': ['4']}, {'input': '5 10 3 3\\r\\n', 'output': ['0']}, {'input': '1 1000 5 13\\r\\n', 'output': ['0']}, {'input': '2 2 3 3\\r\\n', 'output': ['0']}, {'input': '1 1000000000 499999993 999999986\\r\\n', 'output': ['2']}, {'input': '1 1 1 10\\r\\n', 'output': ['0']}, {'input': '1 10 10 100\\r\\n', 'output': ['0']}, {'input': '1 1000 4 36\\r\\n', 'output': ['2']}, {'input': '1 1000000000 10000000 20000000\\r\\n', 'output': ['2']}, {'input': '100 100 5 5\\r\\n', 'output': ['0']}, {'input': '3 3 3 9\\r\\n', 'output': ['0']}, {'input': '36 200 24 144\\r\\n', 'output': ['2']}, {'input': '1 100 3 10\\r\\n', 'output': ['0']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long l, r, x, y;\n  cin >> l >> r >> x >> y;\n  long long ans = 0;\n  for (long long i = 1; i * i <= y; i++) {\n    if (y % i == 0) {\n      if (i *"}
{"src_uid": "fbfc333ad4b0a750f654a00be84aea67", "id": 33, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '4 2\\r\\n1 3\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 6\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n2 3\\r\\n2 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 5\\r\\n4 2\\r\\n3 5\\r\\n4 5\\r\\n5 1\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '5 4\\r\\n1 2\\r\\n3 2\\r\\n3 4\\r\\n5 4\\r\\n', 'output': ['4\\r\\n']}, {'input': '3 1\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 1\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '20 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '381 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 1\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 1\\r\\n1 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 5\\r\\n1 3\\r\\n2 1\\r\\n3 4\\r\\n4 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '20 1\\r\\n20 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '21 1\\r\\n21 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '100 1\\r\\n100 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '400 1\\r\\n1 400\\r\\n', 'output': ['2\\r\\n']}, {'input': '5 5\\r\\n2 5\\r\\n1 2\\r\\n1 4\\r\\n1 3\\r\\n3 2\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 405;\nint n, m, d[N], vis[N], ans;\nvector<int> g[N];\nvoid dfs(int u, int p) {\n  vis[u] = 1;\n  for (int i = 0; i < g[u].size(); i++) {\n    int v = g[u][i];\n    if (v == p) continue;\n    if (vis[v]) {\n      ans = -1;\n      return;\n    }\n    dfs(v, u);\n  }\n}\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  for (int i = 1; i <= m; i++) {\n    int u, v;\n    scanf(\"%d%d\", &u, &v);\n    g[u].push_back(v);\n    g[v].push_back(u);\n  }\n  dfs(1, 0);\n  if (ans == -1)\n    printf(\"-1\\n\");\n  else {\n    for (int i = 1; i <= n; i++) d[i] = 1e9;\n    d[1] = 0;\n    for (int i = 1; i <= n; i++) {\n      int u = -1;\n      for (int j = 1; j <= n; j++)\n        if (d[j] < d[u] || u == -1) u = j;\n      for (int j = 0; j < g[u].size(); j++) {\n        int v = g[u][j];\n        if (d[v] > d[u] + 1) d[v] = d[u] + 1;\n      }\n    }\n    printf(\"%d\\n\", d[n]);\n  }\n  return 0;\n}\n"}
{"src_uid": "ecda878d924325789dc05035e4f4bbe0", "id": 34, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '4\\r\\n1 2 3 12\\r\\n', 'output': ['3\\r\\n1 2 12 \\r\\n']}, {'input': '4\\r\\n1 1 2 2\\r\\n', 'output': ['3\\r\\n1 1 2 \\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['2\\r\\n1 2\\r\\n']}, {'input': '1\\r\\n1000000\\r\\n', 'output': ['1\\r\\n1000000 \\r\\n']}, {'input': '20\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712\\r\\n', 'output': ['1\\r\\n475712 \\r\\n']}, {'input': '21\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712 1000000\\r\\n', 'output': ['1\\r\\n475712 \\r\\n']}, {'input': '40\\r\\n999999 999999 999998 999998 999996 999996 999992 999992 999984 999984 999968 999968 999936 999936 999872 999872 999744 999744 999488 999488 998976 998976 997952 997952 995904 995904 991808 991808 983616 983616 967232 967232 934464 934464 868928 868928 737856 737856 475712 0\\r\\n', 'output': ['3\\r\\n737856 737856 999999 \\r\\n']}, {'input': '1\\r\\n534166\\r\\n', 'output': ['1\\r\\n534166 \\r\\n']}, {'input': '1\\r\\n412237\\r\\n', 'output': ['1\\r\\n412237 \\r\\n']}, {'input': '1\\r\\n253309\\r\\n', 'output': ['1\\r\\n253309 \\r\\n']}, {'input': '1\\r\\n94381\\r\\n', 'output': ['1\\r\\n94381 \\r\\n']}, {'input': '1\\r\\n935454\\r\\n', 'output': ['1\\r\\n935454 \\r\\n']}, {'input': '2\\r\\n847420 569122\\r\\n', 'output': ['2\\r\\n847420 569122\\r\\n']}, {'input': '2\\r\\n725491 635622\\r\\n', 'output': ['2\\r\\n725491 635622\\r\\n']}, {'input': '2\\r\\n566563 590441\\r\\n', 'output': ['2\\r\\n566563 590441\\r\\n']}, {'input': '2\\r\\n407635 619942\\r\\n', 'output': ['2\\r\\n407635 619942\\r\\n']}, {'input': '2\\r\\n248707 649443\\r\\n', 'output': ['2\\r\\n248707 649443\\r\\n']}, {'input': '3\\r\\n198356 154895 894059\\r\\n', 'output': ['3\\r\\n154895 198356 894059 \\r\\n']}, {'input': '3\\r\\n76427 184396 963319\\r\\n', 'output': ['3\\r\\n76427 184396 963319 \\r\\n']}, {'input': '3\\r\\n880502 176898 958582\\r\\n', 'output': ['1\\r\\n176898 \\r\\n']}, {'input': '3\\r\\n758573 206400 991528\\r\\n', 'output': ['1\\r\\n206400 \\r\\n']}, {'input': '3\\r\\n599645 198217 986791\\r\\n', 'output': ['1\\r\\n198217 \\r\\n']}, {'input': '4\\r\\n549294 703669 96824 126683\\r\\n', 'output': ['3\\r\\n96824 126683 703669 \\r\\n']}, {'input': '4\\r\\n390366 733171 92086 595244\\r\\n', 'output': ['3\\r\\n92086 390366 733171 \\r\\n']}, {'input': '4\\r\\n231438 762672 125033 26806\\r\\n', 'output': ['3\\r\\n26806 125033 762672 \\r\\n']}, {'input': '4\\r\\n109509 792173 120296 495368\\r\\n', 'output': ['3\\r\\n109509 120296 792173 \\r\\n']}, {'input': '4\\r\\n950582 784676 190241 964614\\r\\n', 'output': ['1\\r\\n190241 \\r\\n']}, {'input': '5\\r\\n900232 289442 225592 622868 113587\\r\\n', 'output': ['3\\r\\n113587 225592 900232 \\r\\n']}, {'input': '5\\r\\n741304 281944 258539 54430 284591\\r\\n', 'output': ['3\\r\\n281944 284591 741304 \\r\\n']}, {'input': '5\\r\\n582376 311446 253801 560676 530279\\r\\n', 'output': ['3\\r\\n253801 311446 582376 \\r\\n']}, {'input': '5\\r\\n460447 303948 286063 992238 738282\\r\\n', 'output': ['3\\r\\n286063 303948 992238 \\r\\n']}, {'input': '5\\r\\n301519 370449 319010 460799 983970\\r\\n', 'output': ['3\\r\\n301519 319010 983970 \\r\\n']}, {'input': '21\\r\\n999999 999998 999996 999992 999984 999968 999936 999872 999744 999488 998976 997952 995904 991808 983616 967232 934464 868928 737856 475712 999998\\r\\n', 'output': ['3\\r\\n999998 999998 999999 \\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5;\nint n, a[N], b[N], c[N], d[N], e[N], f[N], g[N], h[N], i[N], j[N], k[N],\n    l[N], m[N], nn, mx, mx1, mx2, mx3, mx4, mx5, mx6, mx7, mx8, mx9, mx10,\n    mx11, mx12, mx13, mx14, mx15, mx16, mx17, mx18, mx19, mx20, mx21, mx22,\n    mx23, mx24, mx25, mx26, mx27, mx28, mx29, mx30, mx31, mx32, mx33, mx34,\n    mx35, mx36, mx37, mx38, mx39, mx40, mx41, mx42, mx43, mx44, mx45, mx46,\n    mx47, mx48, mx49, mx50, mx51, mx52, mx53, mx54, mx55, mx56, mx57, mx58,\n    mx59, mx60, mx61, mx62, mx63, mx64, mx65, mx66, mx67, mx68, mx69, mx70,\n    mx71, mx72, mx73, mx74, mx75, mx76, mx77, mx78, mx79, mx80, mx81, mx82,\n    mx83, mx84, mx85, mx86, mx87, mx88, mx89, mx90, mx91, mx92, mx93, mx94,\n    mx95, mx96, mx97, mx98, mx99, mx100, mx101, mx102, mx103, mx104, mx105,\n    mx106, mx107, mx108, mx109, mx110, mx111, mx112, mx113, mx114, mx115,\n    mx116, mx117, mx118, mx119, mx120, mx121, mx122, mx123, mx124, mx125,\n    mx126, mx127, mx128, mx129, mx130, mx131, mx132, mx133, mx134, mx135,\n    mx136, mx137, mx138, mx139, mx140, mx141, mx142, mx143, mx144, mx145,\n    mx146, mx147, mx148, mx149, mx150, mx151, mx152, mx153, mx154, mx155,\n    mx156, mx157, mx158, mx159, mx160, mx161, mx162, mx163, mx164, mx165,\n    mx166, mx167, mx168, mx169, mx170, mx171, mx172, mx173, mx174, mx175,\n    mx176, mx177, mx178, mx179, mx180, mx181, mx182, mx183, mx184, mx185,\n    mx186, mx187, mx188, mx189, mx190, mx191, mx192, mx193, mx194, mx195,\n    mx196, mx197, mx198, mx199, mx200, mx201, mx202, mx203, mx204, mx205,\n    mx206, mx207, mx208, mx209, mx210, mx211, mx212, mx213, mx214, mx215,\n    mx216, mx217, mx218, mx219, mx220, mx221, mx222, mx223, mx224, mx225,\n    mx226, mx227, mx228, mx229, mx230, mx231, mx232, mx233, mx234, mx235,\n    mx236, mx237, mx238, mx239, mx240, mx241, mx242, mx243, mx244, mx245,\n    mx246, mx247, mx248, mx249, mx250, mx251, mx252, mx253, mx254, mx255,\n    mx256, mx257, mx258, mx259, mx260, mx261, mx262, mx263, mx264, mx265,\n    mx266, mx267, mx268, mx269, mx270, mx271, mx272, mx273, mx274, mx275,\n    mx276, mx277, mx278, mx279, mx280, mx281, mx282, mx283, mx284, mx285,\n    mx286, mx287, mx288, mx289, mx290, mx291, mx292, mx293, mx294, mx295,\n    mx296, mx297, mx298, mx299, mx300, mx301, mx302, mx303, mx304, mx305,\n    mx306, mx307, mx308, mx309, mx310, mx311, mx312, mx313, mx314, mx315,\n    mx316, mx317, mx318, mx319, mx320, mx321, mx322, mx323, mx324, mx325,\n    mx326, mx327, mx328, mx329, mx330, mx331, mx332, mx333, mx3"}
{"src_uid": "788cb3da98fd4a56720f800588061b79", "id": 35, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '3 2\\r\\n2 4 5\\r\\n', 'output': ['3\\r\\n']}, {'input': '4 3\\r\\n7 8 9 10\\r\\n', 'output': ['13\\r\\n']}, {'input': '4 0\\r\\n5 10 20 21\\r\\n', 'output': ['1\\r\\n']}, {'input': '20 1000\\r\\n50 50 100 100 150 150 200 200 250 250 300 300 350 350 400 400 450 450 500 500\\r\\n', 'output': ['97456952\\r\\n']}, {'input': '5 222\\r\\n58 369 477 58 90\\r\\n', 'output': ['10\\r\\n']}, {'input': '9 222\\r\\n304 142 38 334 73 122 252 381 438\\r\\n', 'output': ['423\\r\\n']}, {'input': '9 247\\r\\n359 350 140 26 293 488 57 481 71\\r\\n', 'output': ['414\\r\\n']}, {'input': '5 341\\r\\n412 32 189 303 172\\r\\n', 'output': ['26\\r\\n']}, {'input': '200 0\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['380668983\\r\\n']}, {'input': '121 19\\r\\n1 1 1 1 2 1 1 2 2 1 1 2 2 2 2 1 1 2 1 1 1 1 2 2 2 2 1 1 2 1 1 2 1 1 1 1 1 2 2 1 2 2 1 2 1 1 2 2 2 1 2 1 1 1 1 2 1 1 2 2 1 1 2 1 2 1 2 1 2 2 2 1 1 1 1 2 1 1 2 1 2 2 2 2 2 1 1 2 2 1 2 2 2 1 2 1 1 1 1 2 2 2 2 2 1 1 2 2 2 2 2 1 1 1 1 1 2 2 1 2 1\\r\\n', 'output': ['378568711\\r\\n']}, {'input': '3 4\\r\\n10 7 10\\r\\n', 'output': ['5\\r\\n']}, {'input': '1 5\\r\\n3\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 5\\r\\n9\\r\\n', 'output': ['1\\r\\n']}, {'input': '5 2\\r\\n3 10 5 6 5\\r\\n', 'output': ['8\\r\\n']}, {'input': '1 2\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '166 7\\r\\n9 8 7 2 9 9 7 7 3 1 9 9 9 7 1 5 5 6 6 2 3 2 10 9 3 5 8 8 6 3 10 3 4 8 6 5 1 7 2 9 1 4 9 10 6 8 6 7 8 3 2 1 10 5 6 6 3 7 4 9 10 3 1 10 9 9 2 10 3 2 4 8 9 6 1 9 10 10 10 9 5 8 9 7 9 6 7 5 4 7 8 9 8 5 10 5 4 10 8 5 10 10 10 8 7 3 2 6 3 1 7 5 7 10 7 8 8 8 5 5 8 10 2 10 2 4 10 2 3 1 1 4 5 8 7 9 4 10 2 9 8 1 1 5 9 5 2 1 7 7 9 10 2 2 10 10 6 8 5 5 9 4 3 1 10 5\\r\\n', 'output': ['194851520\\r\\n']}, {'input': '94 17\\r\\n9 10 10 5 2 7 10 9 5 5 7 7 6 10 4 10 3 7 4 9 2 5 1 5 4 2 9 8 4 3 9 5 7 10 10 6 3 1 9 9 2 8 8 8 7 2 4 5 2 5 7 7 4 9 4 9 4 10 5 10 9 7 3 6 10 3 1 10 6 4 8 9 4 10 7 2 9 8 7 10 2 2 4 1 4 6 10 7 2 4 9 4 8 5\\r\\n', 'output': ['650765262\\r\\n']}, {'input': '14 26\\r\\n3 7 8 4 7 5 10 8 4 4 1 6 7 7\\r\\n', 'output': ['190894282\\r\\n']}, {'input': '142 24\\r\\n8 1 10 6 5 3 9 4 4 8 2 7 4 4 1 2 7 4 7 3 3 9 9 6 6 10 8 5 3 2 3 4 7 9 9 8 4 7 8 6 9 1 7 9 10 2 6 1 9 9 1 10 2 10 6 5 10 2 3 8 3 7 1 8 9 10 1 8 10 7 2 5 1 1 4 6 5 7 6 10 4 4 7 4 10 5 10 9 8 7 4 10 4 4 3 4 10 6 1 4 8 5 10 6 3 8 8 4 2 3 2 1 7 5 2 4 2 3 10 7 8 3 10 9 1 7 7 5 5 5 10 8 8 2 6 9 7 2 4 7 7 3\\r\\n', 'output': ['287439553\\r\\n']}, {'input': '166 34\\r\\n6 5 3 3 4 5 4 6 4 6 2 6 5 1 7 4 5 5 6 1 2 2 6 4 3 7 4 5 1 7 3 1 6 5 1 3 6 4 9 7 6 6 6 5 8 6 2 4 5 6 10 10 4 8 3 6 1 4 7 9 8 5 2 9 8 10 2 2 6 1 3 6 6 9 10 8 10 5 8 10 5 9 2 4 8 2 9 2 1 9 5 9 3 8 1 10 4 1 1 4 9 6 10 6 2 1 4 5 5 8 10 10 5 6 3 10 1 8 5 10 3 3 10 9 7 4 1 9 9 10 8 3 4 2 8 10 6 3 10 10 4 6 8 7 9 7 10 3 1 10 4 10 5 2 7 9 4 10 6 2 6 3 9 10 9 10\\r\\n', 'output': ['772974256\\r\\n']}, {'input': '171 302\\r\\n64 51 53 35 36 42 67 27 55 85 97 23 47 8 59 69 50 15 28 36 22 12 49 99 54 11 10 91 91 78 59 65 68 5 20 77 42 59 85 65 69 35 59 86 45 96 41 82 89 93 80 25 16 22 68 8 23 57 48 53 16 21 50 44 70 75 33 32 43 32 77 40 8 41 23 82 61 51 26 88 58 23 6 69 11 95 89 41 70 95 81 50 99 81 48 36 62 85 64 58 25 30 23 27 30 87 45 42 67 47 1 1 86 33 43 78 41 57 72 86 55 25 69 36 77 97 48 24 9 20 50 5 2 84 80 62 7 5 49 2 16 3 62 8 40 24 94 60 9 95 22 27 58 20 22 95 16 53 6 8 74 54 94 65 62 90 95 17 77 32 99\\r\\n', 'output': ['49555477\\r\\n']}, {'input': '158 396\\r\\n10 33 14 7 23 30 23 9 99 41 88 56 70 25 85 27 68 60 73 14 32 87 6 16 71 64 22 66 9 48 46 93 81 9 50 48 80 70 78 76 49 89 56 74 56 40 67 45 3 41 77 49 8 56 55 29 78 69 52 70 55 99 85 6 59 99 24 66 4 23 4 51 84 67 79 65 6 67 80 36 85 47 45 37 75 38 39 59 7 11 81 7 12 79 56 87 9 97 30 32 27 21 42 85 17 50 69 13 51 12 73 60 14 94 93 31 10 9 70 67 52 63 45 38 37 13 46 50 53 29 50 57 49 81 71 79 58 74 19 47 19 14 16 82 18 11 71 90 28 21 48 16 41 52 24 6 4 23\\r\\n', 'output': ['757778575\\r\\n']}, {'input': '169 129\\r\\n66 70 83 26 65 94 1 56 17 64 58 68 23 73 45 93 30 94 22 55 68 29 73 44 35 39 71 76 76 76 19 98 99 26 43 73 96 6 72 23 8 56 34 17 91 64 17 33 56 92 41 22 92 59 23 96 35 94 82 1 61 41 75 89 10 74 13 64 50 78 49 83 6 62 43 22 61 95 28 4 76 14 54 41 83 81 83 23 13 57 10 2 44 54 89 41 27 58 57 47 26 82 97 82 5 35 27 31 89 6 73 36 94 89 29 96 3 88 82 27 50 56 73 24 17 56 25 9 2 47 71 86 96 79 35 42 31 73 13 89 52 30 88 96 46 91 23 60 79 2 19 7 73 40 6 29 61 29 67 85 75 11 8 34 60 19 87 23 55\\r\\n', 'output': ['538924707\\r\\n']}, {'input': '195 110\\r\\n3 4 5 1 3 5 4 1 2 4 3 2 4 4 3 2 5 5 5 3 3 3 5 3 5 4 2 5 1 1 2 3 4 5 5 2 2 4 3 4 2 4 4 3 4 2 3 3 3 5 2 1 3 2 5 5 2 2 1 2 2 5 4 2 4 2 4 1 4 2 4 4 4 4 3 5 3 1 2 2 3 4 3 4 4 1 2 1 2 4 5 2 4 3 4 1 4 4 4 5 1 2 4 5 3 5 3 4 2 4 5 2 5 2 5 4 1 5 1 4 2 5 1 2 4 1 3 3 5 5 4 2 3 4 5 4 4 5 2 3 4 2 5 3 2 1 5 3 5 3 5 2 3 2 5 3 5 4 5 1 5 3 3 2 2 5 4 3 3 2 5 5 5 5 2 1 2 3 1 3 5 2 4 5 3 2 2 5 5 2 3 1 3 4 5\\r\\n', 'output': ['21311661\\r\\n']}, {'input': '196 17\\r\\n4 4 2 2 4 2 2 4 4 3 4 1 5 4 4 5 4 1 1 1 5 1 1 4 3 4 4 1 1 1 5 3 2 4 2 1 5 3 4 2 4 2 5 4 1 4 1 2 3 5 3 5 3 2 5 5 5 2 2 1 1 2 2 2 5 4 5 2 5 5 3 1 5 3 5 5 1 3 3 2 3 2 2 1 5 1 2 5 4 5 4 3 4 4 4 1 5 5 2 2 2 5 3 4 5 3 3 2 4 4 4 3 1 1 1 5 2 5 1 5 1 2 3 3 4 4 5 4 2 5 4 2 3 3 4 5 2 2 4 5 5 2 2 1 3 3 4 3 2 3 4 4 5 2 5 1 4 5 2 3 2 4 4 3 4 4 2 5 5 5 5 4 1 3 2 1 4 5 3 2 3 3 5 4 3 1 4 4 5 2 5 2 2 1 4 3\\r\\n', 'output': ['140496580\\r\\n']}, {'input': '200 558\\r\\n1 1 1 3 2 1 1 5 1 2 1 1 2 2 1 5 2 5 2 5 3 2 4 1 5 2 3 2 3 1 2 2 1 4 4 2 5 1 4 3 2 2 4 5 4 5 2 5 5 4 3 5 4 5 5 2 3 4 3 1 5 4 3 3 3 3 2 2 3 4 1 3 1 4 5 2 3 4 1 5 2 3 3 5 5 3 3 1 2 5 3 4 2 5 2 3 3 1 3 2 3 5 1 2 1 1 3 4 1 3 2 1 1 4 2 5 1 2 1 2 2 2 2 2 3 4 2 2 4 4 2 1 3 3 2 4 1 3 5 4 5 1 5 2 1 4 2 3 4 1 4 5 1 1 5 2 4 5 5 4 4 5 3 1 1 5 4 2 2 5 1 3 3 3 4 1 1 2 3 4 1 5 2 2 3 1 4 3 5 1 5 3 2 1 3 2 1 1 3 2\\r\\n', 'output': ['380668983\\r\\n']}, {'input': '190 152\\r\\n2 2 4 4 4 2 2 1 2 3 5 5 4 3 5 1 2 2 2 2 3 3 5 2 1 1 3 4 3 2 2 4 2 3 1 4 2 2 3 2 3 5 3 2 4 1 4 1 2 4 1 3 4 4 3 4 4 4 4 5 2 4 5 3 3 5 4 4 3 4 1 4 1 4 3 3 5 5 2 3 2 2 2 5 4 4 2 4 3 4 2 2 1 4 1 2 3 3 3 5 1 5 5 1 4 3 2 5 2 5 5 5 2 3 3 4 1 1 3 2 5 5 2 5 2 3 5 1 1 5 4 1 1 3 5 2 3 4 3 4 2 1 4 3 5 2 1 1 1 5 2 5 3 4 5 5 2 3 5 5 5 5 1 5 2 5 5 2 4 4 4 3 1 1 2 1 4 4 3 4 2 5 5 3 4 5 5 2 1 4\\r\\n', 'output': ['3475416\\r\\n']}, {'input': '191 640\\r\\n20 10 14 20 13 9 16 5 14 1 11 18 16 17 7 4 15 18 17 3 3 15 14 20 18 2 4 14 20 17 7 2 3 9 5 10 7 6 7 17 3 5 10 1 18 13 15 4 15 7 19 1 17 6 15 12 4 19 1 9 18 18 9 13 3 15 9 3 17 14 18 4 9 3 9 19 20 15 18 11 3 1 12 8 11 10 20 14 14 6 2 14 16 1 7 2 11 15 1 9 20 4 1 1 3 20 20 4 11 7 19 3 3 6 15 10 18 9 13 14 16 12 3 1 15 10 5 14 19 17 9 10 10 15 12 12 5 2 11 6 5 6 7 14 7 6 5 10 13 10 18 20 18 20 12 7 6 10 4 4 3 13 14 5 9 10 4 6 11 11 15 15 12 19 4 7 20 3 12 4 16 6 4 9 17 10 18 11 13 12 18\\r\\n', 'output': ['66598866\\r\\n']}, {'input': '197 344\\r\\n5 11 3 17 16 1 12 7 13 5 9 11 15 14 13 7 13 11 5 9 20 11 11 9 19 3 20 4 6 15 2 14 16 5 19 5 5 5 12 12 12 19 18 1 5 17 13 7 17 14 4 5 9 20 14 13 15 3 8 2 13 16 20 10 20 14 8 17 14 4 9 16 8 13 5 2 13 11 9 7 9 5 11 20 3 17 9 12 12 3 9 19 6 3 15 9 5 11 2 3 13 14 15 7 9 19 16 11 6 8 11 18 11 11 16 18 3 5 10 19 10 6 3 19 3 18 16 16 7 3 10 13 13 16 19 13 4 7 1 7 12 9 6 8 6 1 6 20 7 12 9 13 13 12 10 10 10 16 9 6 11 14 14 7 2 1 16 15 12 7 15 18 8 4 6 18 2 17 6 5 13 19 12 7 1 9 15 9 18 5 8 3 7 8 4 15 8\\r\\n', 'output': ['132934747\\r\\n']}, {'input': '200 0\\r\\n2 5 2 7 6 10 10 4 7 9 1 5 7 1 8 5 9 8 5 2 6 4 9 10 5 4 4 4 8 7 7 5 9 7 7 4 9 8 5 8 10 5 1 2 8 4 3 7 9 6 9 3 9 2 1 9 2 7 4 10 4 7 10 6 1 6 7 4 4 9 10 3 5 5 1 2 8 6 6 2 2 8 6 3 6 1 4 6 10 6 4 8 3 9 6 7 7 8 5 2 10 9 2 7 3 6 10 6 8 9 6 6 8 4 6 9 2 10 9 4 2 3 4 1 3 9 4 2 4 10 10 1 2 3 9 8 2 1 10 7 8 3 10 5 3 10 9 1 9 2 6 7 2 1 10 4 4 9 9 1 8 1 10 9 8 9 9 7 4 3 6 7 10 9 2 7 8 10 2 7 7 6 9 5 9 7 3 1 7 1 5 9 7 3 10 3 10 8 5 7\\r\\n', 'output': ['563633437\\r\\n']}, {'input': '107 59\\r\\n416 332 455 497 251 13 496 46 176 382 357 268 441 302 305 11 274 61 412 18 225 332 173 371 54 179 378 85 471 176 439 36 81 275 452 212 261 488 166 274 89 183 478 337 313 196 130 87 14 223 341 46 45 306 175 488 113 354 107 411 469 122 436 293 311 60 453 245 184 13 425 360 302 205 151 89 433 285 119 301 274 64 127 496 350 354 262 2 148 232 117 28 11 398 237 460 421 347 142 76 391 317 164 484 35 310 453\\r\\n', 'output': ['955755252\\r\\n']}, {'input': '27 383\\r\\n161 2 16 478 438 205 151 229 116 230 447 497 456 219 28 57 200 6 161 400 338 11 426 283 275 40 190\\r\\n', 'output': ['258971846\\r\\n']}, {'input': '107 497\\r\\n218 342 381 296 272 169 321 275 435 461 422 209 413 366 295 332 458 253 302 245 70 353 405 420 439 314 232 466 364 374 4 469 116 291 75 500 212 127 157 440 429 396 53 68 151 264 2 134 73 31 494 148 426 459 27 175 225 287 241 60 14 437 457 446 51 350 233 177 88 455 497 303 107 130 76 125 441 229 325 318 187 459 178 172 226 236 465 289 491 494 146 280 456 475 286 457 277 224 435 365 100 77 145 448 118 454 431\\r\\n', 'output': ['480907144\\r\\n']}, {'input': '27 209\\r\\n272 116 134 369 255 453 477 162 78 1 12 142 236 283 209 390 476 493 51 23 387 32 262 128 160 71 56\\r\\n', 'output': ['415376034\\r\\n']}, {'input': '85 655\\r\\n411 473 456 4 14 135 49 240 191 230 60 375 373 115 301 20 421 187 267 347 207 428 81 318 10 370 428 272 247 322 294 477 274 110 238 244 72 399 146 392 207 83 164 87 257 341 97 94 286 375 25 271 177 270 169 149 279 105 387 92 352 342 274 247 236 344 35 336 419 465 169 371 62 112 490 48 36 343 248 428 241 223 369 296 86\\r\\n', 'output': ['275193712\\r\\n']}, {'input': '107 19\\r\\n2 5 2 5 4 4 1 5 3 3 4 3 2 5 3 1 4 1 4 1 3 1 4 4 1 5 4 1 2 3 3 3 4 2 5 2 3 4 5 2 1 5 3 1 5 5 1 5 3 3 3 5 5 2 4 3 3 4 5 4 2 5 2 4 3 5 2 5 2 1 1 1 1 2 1 4 2 3 4 3 2 4 4 2 2 3 5 5 1 4 1 2 4 4 1 3 3 5 2 3 4 1 2 3 1 5 2\\r\\n', 'output': ['114012476\\r\\n']}, {'input': '186 35\\r\\n4 4 3 2 4 3 1 2 2 2 4 2 5 3 1 3 1 1 2 4 2 5 5 5 1 3 4 1 5 3 5 5 2 4 5 3 1 1 2 1 2 4 2 3 3 4 4 3 3 5 3 1 4 5 5 4 5 2 3 1 2 2 2 4 3 4 1 4 1 2 1 1 1 5 1 1 4 5 3 5 3 3 4 1 5 1 1 4 5 3 3 2 5 3 5 1 5 2 5 1 4 2 4 5 4 4 4 5 4 4 2 5 2 4 4 5 3 2 5 4 1 1 5 5 5 5 1 3 2 5 5 4 3 2 2 5 5 3 1 4 3 4 3 1 2 5 4 4 2 2 5 3 2 1 2 1 1 3 1 4 1 2 3 2 1 5 5 2 2 1 2 1 5 2 4 4 3 2 5 5 2 3 4 5 5 3\\r\\n', 'output': ['273232004\\r\\n']}, {'input': '150 978\\r\\n34 20 7 39 15 14 39 49 36 13 12 12 30 40 4 17 8 2 48 10 16 2 33 36 41 30 4 35 32 35 12 14 28 3 7 3 36 46 43 19 7 38 48 24 19 21 9 31 3 3 8 23 21 49 44 29 15 6 11 40 39 12 44 40 41 37 7 39 40 17 34 21 22 19 30 21 14 3 16 50 38 38 27 7 4 33 20 23 27 32 14 50 33 36 38 22 27 27 14 2 27 37 33 6 21 44 25 17 28 22 43 10 33 21 42 4 7 42 10 20 22 49 14 18 26 19 43 4 31 18 13 17 5 46 19 35 31 14 28 29 48 9 9 4 10 15 30 5 9 23\\r\\n', 'output': ['338032038\\r\\n']}, {'input': '115 588\\r\\n39 133 47 175 120 1 183 148 115 9 196 101 18 156 156 74 43 149 95 56 72 84 32 104 16 188 88 168 164 18 36 105 131 60 26 151 46 160 16 45 76 16 157 190 120 37 102 29 190 57 178 38 89 75 143 2 80 7 11 31 101 28 171 46 93 100 23 163 146 135 12 73 140 144 177 43 19 158 26 20 39 173 97 8 169 139 23 105 7 171 79 11 156 77 164 63 165 124 126 108 125 118 58 129 146 152 31 133 5 160 89 136 174 121 185\\r\\n', 'output': ['27195433\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 205, K = 1005, MOD = 1e9 + 7;\nint n, k, a[N], dp[N][K];\nint main() {\n  scanf(\"%d%d\", &n, &k);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n  sort(a + 1, a + n + 1);\n  dp[0][0] = 1;\n  for (int i = 1; i <= n; i++)\n    for (int j = 0; j <= k; j++) {\n      dp[i][j] = dp[i - 1][j];\n      if (j >= a[i] - a[1]) dp[i][j] = (dp[i][j] + dp[i - 1][j - a[i] + a[1]]) % MOD;\n    }\n  int ans = 0;\n  for (int i = 1; i <= n; i++)\n    for (int j = 0; j <= k; j++) ans = (ans + dp[i][j]) % MOD;\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "c9274249c26b1a85c19ab70d91c1c3e0", "id": 36, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '1 1 50\\r\\n', 'output': ['1.0', '1.000000000000', '1.0000000', '1.0000000000']}, {'input': '5 3 0\\r\\n', 'output': ['3.0000000', '3.0', '3.0000000000', '3.000000000000']}, {'input': '5 3 25\\r\\n', 'output': ['1.921875', '1.9218750000', '1.921875000000', '1.9218750']}, {'input': '1132123 200 0\\r\\n', 'output': ['0.0000000000', '0.0000000', '0.000000000000', '0.0']}, {'input': '1213112 200 100\\r\\n', 'output': ['203.0', '203.000000000000', '203.0000000000', '203.0000000']}, {'input': '490879136 12 75\\r\\n', 'output': ['3.3114133477', '3.3114133', '3.3114133477211', '3.311413347721']}, {'input': '114566801 2 55\\r\\n', 'output': ['1.1000000', '1.100000000000', '1.1', '1.1000000000']}, {'input': '331870050 6 98\\r\\n', 'output': ['6.481856704703999', '6.481856704704', '6.4818567047', '6.4818567']}, {'input': '252615193 9 45\\r\\n', 'output': ['1.435549366563', '1.4355493665625', '1.4355493666', '1.4355494']}, {'input': '224314221 19 51\\r\\n', 'output': ['1.589995156825', '1.5899951568248025', '1.5899952', '1.5899951568']}, {'input': '510823354 20 18\\r\\n', 'output': ['1.1217824', '1.121782425995', '1.1217824260', '1.1217824259945295']}, {'input': '573292218 200 77\\r\\n', 'output': ['3.587188416054713', '3.587188416055', '3.5871884161', '3.5871884']}, {'input': '465672965 100 95\\r\\n', 'output': ['18.937629608706', '18.9376296087', '18.93762960870614', '18.9376296']}, {'input': '853095531 50 72\\r\\n', 'output': ['2.867205276789', '2.8672052768', '2.8672053', '2.8672052767888307']}, {'input': '254290166 200 95\\r\\n', 'output': ['19.049486152130235', '19.0494862', '19.049486152130', '19.0494861521']}, {'input': '206910020 200 4\\r\\n', 'output': ['1.0210765', '1.0210764589', '1.0210764588936487', '1.021076458894']}, {'input': '680841078 112 48\\r\\n', 'output': ['1.5078322', '1.507832159264', '1.5078321592644364', '1.5078321593']}, {'input': '92021679 54 25\\r\\n', 'output': ['1.1664654574', '1.166465457383', '1.1664655', '1.1664654573827085']}, {'input': '244974370 130 30\\r\\n', 'output': ['1.215038500068', '1.2150385000680655', '1.2150385001', '1.2150385']}, {'input': '870669648 101 37\\r\\n', 'output': ['1.3005166437', '1.3005166', '1.300516643727', '1.3005166437271045']}, {'input': '647275659 22 54\\r\\n', 'output': ['1.6854437', '1.6854437312', '1.685443731177', '1.6854437311767543']}, {'input': '366067081 15 70\\r\\n', 'output': ['2.641095593742', '2.6410955937', '2.641095593742326', '2.6410956']}, {'input': '31708573 22 99\\r\\n', 'output': ['19.6485751297', '19.6485751', '19.648575129692', '19.64857512969186']}, {'input': '38299352 98 68\\r\\n', 'output': ['2.467202941536', '2.4672029', '2.467202941535746', '2.4672029415']}, {'input': '106105555 25 2\\r\\n', 'output': ['1.6204473867', '1.620447386683957', '1.620447386684', '1.6204474']}, {'input': '536870912 200 50\\r\\n', 'output': ['1.5604085', '1.5604085205095495', '1.5604085205', '1.560408520510']}, {'input': '536870912 100 100\\r\\n', 'output': ['129.000000000000', '129.0', '129.0000000', '129.0000000000']}, {'input': '536870912 100 0\\r\\n', 'output': ['2.000000000000', '2.0000000', '2.0', '2.0000000000']}, {'input': '536870912 1 50\\r\\n', 'output': ['15.000000000000', '15.0000000000', '15.0', '15.0000000']}, {'input': '536870912 1 100\\r\\n', 'output': ['30.0000000000', '30.0000000', '30.000000000000', '30.0']}, {'input': '536870912 1 0\\r\\n', 'output': ['0.0000000000', '0.0000000', '0.000000000000', '0.0']}, {'input': '536870912 200 100\\r\\n', 'output': ['229.000000000000', '229.0', '229.0000000', '229.0000000000']}, {'input': '1000000000 200 50\\r\\n', 'output': ['1.5604085', '1.5604085205095497', '1.5604085205', '1.560408520510']}, {'input': '1000000000 200 100\\r\\n', 'output': ['209.000000000000', '209.0000000', '209.0000000000', '209.0']}, {'input': '1000000000 200 0\\r\\n', 'output': ['3.0000000', '3.0', '3.0000000000', '3.000000000000']}, {'input': '1000000000 100 50\\r\\n', 'output': ['1.560408520509521', '1.5604085', '1.5604085205', '1.560408520510']}, {'input': '1000000000 24 20\\r\\n', 'output': ['1.126259429920', '1.1262594299', '1.1262594299197548', '1.1262594']}, {'input': '1000000000 12 4\\r\\n', 'output': ['1.592792771794895', '1.592792771795', '1.5927927718', '1.5927928']}, {'input': '31 1 0\\r\\n', 'output': ['5.0', '5.000000000000', '5.0000000000', '5.0000000']}, {'input': '536870911 200 50\\r\\n', 'output': ['1.5604085', '1.560408520509547', '1.5604085205', '1.560408520510']}, {'input': '536870911 100 25\\r\\n', 'output': ['1.1664988', '1.1664988131', '1.166498813096', '1.1664988130956901']}, {'input': '536870911 100 75\\r\\n', 'output': ['3.261706808161', '3.261706808160573', '3.2617068082', '3.2617068']}, {'input': '536870911 100 77\\r\\n', 'output': ['3.5871884160952434', '3.5871884161', '3.587188416095', '3.5871884']}, {'input': '536870911 100 11\\r\\n', 'output': ['1.061658807084', '1.0616588070835198', '1.0616588071', '1.0616588']}, {'input': '536870911 100 1\\r\\n', 'output': ['0.6327462477114627', '0.632746247711', '0.6327462', '0.6327462477']}, {'input': '536870912 200 1\\r\\n', 'output': ['1.270235462156', '1.2702355', '1.2702354622', '1.2702354621556398']}, {'input': '536870912 200 99\\r\\n', 'output': ['89.6300701437', '89.6300701', '89.630070143689', '89.63007014368752']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int x, k, p;\n  cin >> x >> k >> p;\n  double ans = 0;\n  for (int i = 1; i <= k; i++) {\n    double r = rand() % 100 + 1;\n    if (r <= p)\n      x *= 2;\n    else\n      x++;\n    int cnt = 0;\n    while (x % 2 == 0) {\n      x /= 2;\n      cnt++;\n    }\n    ans += cnt;\n  }\n  cout << fixed << setprecision(10) << ans / k << endl;\n  return 0;\n}\n"}
{"src_uid": "ab410c6513a26ec3a41c63318dc38b78", "id": 37, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2700, "testcases": "[{'input': '2 1 1 2\\r\\n1 2\\r\\n0.5\\r\\n0.5\\r\\n', 'output': ['0.5000000000 0.5000000000 ']}, {'input': '4 4 1 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 1\\r\\n0.5\\r\\n0.5\\r\\n0.5\\r\\n0.5\\r\\n', 'output': ['0.3333333333 0.3333333333 0.1666666667 0.1666666667 ']}, {'input': '5 4 2 5\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n0.99\\r\\n0.6\\r\\n0.66\\r\\n0.23\\r\\n0.51\\r\\n', 'output': ['0.9976393323 0.0015805859 0.0000137404 0.0000015403 0.0007648011 ']}, {'input': '16 15 1 16\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n0.01\\r\\n', 'output': ['0.0019644887 0.0325808635 0.0503829756 0.0645522937 0.0762658799 0.0856950294 0.0924815917 0.0960768773 0.0960768773 0.0924815917 0.0856950294 0.0762658799 0.0645522937 0.0503829756 0.0325808635 0.0019644887 ']}, {'input': '6 6 1 4\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 1\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.1535695632 0.1732152184 0.1732152184 0.1535695632 0.1732152184 0.1732152184 ']}, {'input': '2 1 1 2\\r\\n1 2\\r\\n0.142\\r\\n0.2\\r\\n', 'output': ['0.3983169705 0.6016830295 ']}, {'input': '6 5 2 1\\r\\n1 6\\r\\n3 2\\r\\n3 6\\r\\n5 4\\r\\n4 6\\r\\n0.7506\\r\\n0.5129\\r\\n0.7965\\r\\n0.1712\\r\\n0.3321\\r\\n0.7033\\r\\n', 'output': ['0.0490630865 0.0083870955 0.3822667748 0.0174328057 0.0030541480 0.5397960896 ']}, {'input': '10 9 2 10\\r\\n1 2\\r\\n5 1\\r\\n7 1\\r\\n6 2\\r\\n3 5\\r\\n4 9\\r\\n5 10\\r\\n6 9\\r\\n10 8\\r\\n0.5376\\r\\n0.5747\\r\\n0.8019\\r\\n0.6922\\r\\n0.2890\\r\\n0.9193\\r\\n0.7521\\r\\n0.4436\\r\\n0.5970\\r\\n0.3173\\r\\n', 'output': ['0.2817412543 0.0959570556 0.0542629235 0.0025685657 0.1569610917 0.3021480932 0.0339864114 0.0084406954 0.0137071015 0.0502268077 ']}, {'input': '15 21 5 15\\r\\n6 1\\r\\n1 10\\r\\n11 1\\r\\n2 3\\r\\n2 8\\r\\n11 2\\r\\n2 14\\r\\n3 11\\r\\n15 3\\r\\n4 9\\r\\n10 4\\r\\n11 4\\r\\n4 12\\r\\n5 8\\r\\n5 12\\r\\n13 5\\r\\n8 7\\r\\n8 13\\r\\n14 8\\r\\n9 12\\r\\n13 9\\r\\n0.0984\\r\\n0.9472\\r\\n0.0555\\r\\n0.1818\\r\\n0.6887\\r\\n0.2633\\r\\n0.6266\\r\\n0.7277\\r\\n0.4906\\r\\n0.5204\\r\\n0.3271\\r\\n0.8406\\r\\n0.1905\\r\\n0.8913\\r\\n0.1490\\r\\n', 'output': ['0.0077226021 0.5303336625 0.0054411451 0.0303793551 0.0404230994 0.0005350284 0.0013754254 0.1413320042 0.0265814303 0.0120371707 0.0322545543 0.1066358507 0.0104058084 0.0543251267 0.0002177368 ']}, {'input': '16 16 11 1\\r\\n15 1\\r\\n5 2\\r\\n10 2\\r\\n15 2\\r\\n4 3\\r\\n3 10\\r\\n3 11\\r\\n6 10\\r\\n9 7\\r\\n7 15\\r\\n12 8\\r\\n8 16\\r\\n13 9\\r\\n13 10\\r\\n16 11\\r\\n15 14\\r\\n0.7912\\r\\n0.2716\\r\\n0.2423\\r\\n0.7215\\r\\n0.3998\\r\\n0.3062\\r\\n0.0161\\r\\n0.9557\\r\\n0.8075\\r\\n0.0797\\r\\n0.8873\\r\\n0.1631\\r\\n0.8815\\r\\n0.8284\\r\\n0.4164\\r\\n0.0509\\r\\n', 'output': ['0.0153633854 0.0582037768 0.0644798137 0.0179019027 0.0038888919 0.0036876616 0.0067662879 0.1649462155 0.0713890711 0.0806917881 0.2077252654 0.0000190454 0.1796086267 0.0191451875 0.0980830806 0.0080999998 ']}, {'input': '22 21 1 22\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0012434856 0.0099719410 0.0199076715 0.0297915885 0.0395249019 0.0489267177 0.0577200158 0.0655362954 0.0719467411 0.0765217103 0.0789089312 0.0789089312 0.0765217103 0.0719467411 0.0655362954 0.0577200158 0.0489267177 0.0395249019 0.0297915885 0.0199076715 0.0099719410 0.0012434856 ']}, {'input': '22 23 5 16\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n22 1\\r\\n1 11\\r\\n0.01\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0009049944 0.0654619724 0.0448599020 0.0342094033 0.0283295356 0.0266503813 0.0288053138 0.0342798044 0.0427189992 0.0557007096 0.1605214977 0.0643520452 0.0514169497 0.0415243077 0.0342155622 0.0300098388 0.0291162176 0.0313210001 0.0360195732 0.0424281241 0.0505451222 0.0666087455 ']}, {'input': '22 22 1 13\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n11 12\\r\\n12 13\\r\\n13 14\\r\\n14 15\\r\\n15 16\\r\\n16 17\\r\\n17 18\\r\\n18 19\\r\\n19 20\\r\\n20 21\\r\\n21 22\\r\\n22 1\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0387342340 0.0376245603 0.0385434630 0.0409311653 0.0438884638 0.0463138950 0.0472507131 0.0463138950 0.0438884638 0.0409311653 0.0385434630 0.0376245603 0.0387342340 0.0420477574 0.0472178012 0.0531433058 0.0579906815 0.0598786325 0.0579906815 0.0531433058 0.0472178012 0.0420477574 ']}, {'input': '10 45 1 10\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n1 8\\r\\n1 9\\r\\n1 10\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n2 8\\r\\n2 9\\r\\n2 10\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n3 8\\r\\n3 9\\r\\n3 10\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n4 8\\r\\n4 9\\r\\n4 10\\r\\n5 6\\r\\n5 7\\r\\n5 8\\r\\n5 9\\r\\n5 10\\r\\n6 7\\r\\n6 8\\r\\n6 9\\r\\n6 10\\r\\n7 8\\r\\n7 9\\r\\n7 10\\r\\n8 9\\r\\n8 10\\r\\n9 10\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n0.1\\r\\n', 'output': ['0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 0.1000000000 ']}, {'input': '1 0 1 1\\r\\n0.99\\r\\n', 'output': ['1.0000000000 ']}, {'input': '22 21 1 22\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n11 1\\r\\n12 1\\r\\n13 1\\r\\n14 1\\r\\n15 1\\r\\n16 1\\r\\n17 1\\r\\n18 1\\r\\n19 1\\r\\n20 1\\r\\n21 1\\r\\n22 2\\r\\n0.01\\r\\n0.02\\r\\n0.03\\r\\n0.04\\r\\n0.05\\r\\n0.06\\r\\n0.07\\r\\n0.08\\r\\n0.09\\r\\n0.10\\r\\n0.11\\r\\n0.12\\r\\n0.13\\r\\n0.14\\r\\n0.15\\r\\n0.16\\r\\n0.17\\r\\n0.18\\r\\n0.19\\r\\n0.20\\r\\n0.21\\r\\n0.22\\r\\n', 'output': ['0.9035493892 0.0711125603 0.0002295956 0.0003073428 0.0003857694 0.0004649204 0.0005448425 0.0006255834 0.0007071929 0.0007897222 0.0008732245 0.0009577547 0.0010433701 0.0011301299 0.0012180959 0.0013073322 0.0013979057 0.0014898861 0.0015833460 0.0016783614 0.0017750116 0.0068286632 ']}, {'input': '15 14 1 8\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.1687647168 0.0613502671 0.0232964298 0.0159426870 0.0100709787 0.0077507094 0.0071633056 0.0059104630 0.1744057974 0.0870855985 0.0630100398 0.0623589182 0.1454718455 0.1071447000 0.0602735434 ']}, {'input': '15 14 13 13\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 0.0000000000 ']}, {'input': '15 14 15 15\\r\\n1 9\\r\\n2 9\\r\\n3 10\\r\\n4 10\\r\\n5 11\\r\\n6 11\\r\\n7 12\\r\\n8 12\\r\\n9 13\\r\\n10 13\\r\\n11 14\\r\\n12 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.98\\r\\n0.97\\r\\n0.96\\r\\n0.95\\r\\n0.94\\r\\n0.93\\r\\n0.92\\r\\n0.91\\r\\n0.90\\r\\n0.89\\r\\n0.88\\r\\n0.87\\r\\n0.86\\r\\n0.85\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '14 43 1 14\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n5 6\\r\\n5 7\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n8 12\\r\\n8 13\\r\\n8 14\\r\\n9 10\\r\\n9 11\\r\\n9 12\\r\\n9 13\\r\\n9 14\\r\\n10 11\\r\\n10 12\\r\\n10 13\\r\\n10 14\\r\\n11 12\\r\\n11 13\\r\\n11 14\\r\\n12 13\\r\\n12 14\\r\\n13 14\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n0.99\\r\\n', 'output': ['0.0526959074 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.1878457103 0.1878457103 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0518916765 0.0526959074 ']}, {'input': '16 57 1 16\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n1 16\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n2 6\\r\\n2 7\\r\\n2 16\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n3 16\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n4 16\\r\\n5 6\\r\\n5 7\\r\\n5 16\\r\\n6 7\\r\\n6 16\\r\\n7 16\\r\\n7 8\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n8 12\\r\\n8 13\\r\\n8 14\\r\\n8 15\\r\\n9 10\\r\\n9 11\\r\\n9 12\\r\\n9 13\\r\\n9 14\\r\\n9 15\\r\\n10 11\\r\\n10 12\\r\\n10 13\\r\\n10 14\\r\\n10 15\\r\\n11 12\\r\\n11 13\\r\\n11 14\\r\\n11 15\\r\\n12 13\\r\\n12 14\\r\\n12 15\\r\\n13 14\\r\\n13 15\\r\\n14 15\\r\\n0.99\\r\\n0.89\\r\\n0.79\\r\\n0.69\\r\\n0.59\\r\\n0.49\\r\\n0.39\\r\\n0.29\\r\\n0.19\\r\\n0.19\\r\\n0.29\\r\\n0.39\\r\\n0.49\\r\\n0.59\\r\\n0.69\\r\\n0.79\\r\\n', 'output': ['0.8601065040 0.0421912132 0.0216044923 0.0139824673 0.0099982535 0.0075466288 0.0077197332 0.0018809771 0.0005077937 0.0005077937 0.0006335685 0.0007997585 0.0010295784 0.0013684205 0.0019187930 0.0282040246 ']}, {'input': '2 1 2 2\\r\\n1 2\\r\\n0.4651\\r\\n0.4541\\r\\n', 'output': ['0.0000000000 1.0000000000 ']}, {'input': '3 3 3 3\\r\\n1 2\\r\\n1 3\\r\\n2 3\\r\\n0.7518\\r\\n0.3684\\r\\n0.0278\\r\\n', 'output': ['0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '4 6 4 2\\r\\n1 2\\r\\n3 1\\r\\n4 1\\r\\n2 3\\r\\n4 2\\r\\n3 4\\r\\n0.8837\\r\\n0.8531\\r\\n0.1495\\r\\n0.1412\\r\\n', 'output': ['0.3201347837 0.6091104909 0.0388222283 0.0319324970 ']}, {'input': '5 10 4 1\\r\\n1 2\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n3 2\\r\\n2 4\\r\\n2 5\\r\\n4 3\\r\\n3 5\\r\\n5 4\\r\\n0.1234\\r\\n0.3871\\r\\n0.0253\\r\\n0.4658\\r\\n0.4364\\r\\n', 'output': ['0.1115667934 0.2114914579 0.1016822203 0.3398765632 0.2353829653 ']}, {'input': '6 15 3 6\\r\\n2 1\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n2 3\\r\\n4 2\\r\\n2 5\\r\\n6 2\\r\\n3 4\\r\\n5 3\\r\\n3 6\\r\\n4 5\\r\\n6 4\\r\\n5 6\\r\\n0.0884\\r\\n0.3825\\r\\n0.1591\\r\\n0.5495\\r\\n0.6195\\r\\n0.0398\\r\\n', 'output': ['0.0999455609 0.1735578254 0.1116896620 0.2498342178 0.2972772337 0.0676955002 ']}, {'input': '7 21 4 6\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n2 3\\r\\n4 2\\r\\n2 5\\r\\n2 6\\r\\n7 2\\r\\n3 4\\r\\n5 3\\r\\n3 6\\r\\n7 3\\r\\n4 5\\r\\n6 4\\r\\n7 4\\r\\n5 6\\r\\n5 7\\r\\n7 6\\r\\n0.5239\\r\\n0.3794\\r\\n0.2269\\r\\n0.2762\\r\\n0.4424\\r\\n0.9740\\r\\n0.3075\\r\\n', 'output': ['0.0232614097 0.0162516730 0.0115838868 0.0137365998 0.0188847358 0.9024755860 0.0138061087 ']}, {'input': '8 28 8 3\\r\\n1 2\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n8 1\\r\\n3 2\\r\\n4 2\\r\\n5 2\\r\\n6 2\\r\\n7 2\\r\\n2 8\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n3 7\\r\\n8 3\\r\\n4 5\\r\\n4 6\\r\\n7 4\\r\\n8 4\\r\\n5 6\\r\\n7 5\\r\\n8 5\\r\\n7 6\\r\\n8 6\\r\\n7 8\\r\\n0.8613\\r\\n0.8282\\r\\n0.8938\\r\\n0.7578\\r\\n0.9470\\r\\n0.2132\\r\\n0.4324\\r\\n0.6849\\r\\n', 'output': ['0.1176195220 0.0958396019 0.3325863571 0.0677110954 0.2663958661 0.0152787192 0.0248059593 0.0797628790 ']}, {'input': '9 36 9 2\\r\\n1 2\\r\\n3 1\\r\\n1 4\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n8 1\\r\\n1 9\\r\\n3 2\\r\\n2 4\\r\\n5 2\\r\\n6 2\\r\\n2 7\\r\\n8 2\\r\\n9 2\\r\\n4 3\\r\\n5 3\\r\\n6 3\\r\\n7 3\\r\\n8 3\\r\\n9 3\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n6 5\\r\\n7 5\\r\\n8 5\\r\\n5 9\\r\\n6 7\\r\\n6 8\\r\\n9 6\\r\\n8 7\\r\\n9 7\\r\\n8 9\\r\\n0.7668\\r\\n0.8405\\r\\n0.4250\\r\\n0.1929\\r\\n0.7617\\r\\n0.4558\\r\\n0.6702\\r\\n0.0859\\r\\n0.7827\\r\\n', 'output': ['0.1268098579 0.3129505364 0.0439299233 0.0262315144 0.1240254438 0.0473553980 0.0874473192 0.0210113664 0.2102386406 ']}, {'input': '10 45 1 2\\r\\n1 2\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n1 6\\r\\n1 7\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n6 2\\r\\n7 2\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n3 4\\r\\n3 5\\r\\n3 6\\r\\n7 3\\r\\n8 3\\r\\n9 3\\r\\n3 10\\r\\n4 5\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n10 4\\r\\n6 5\\r\\n5 7\\r\\n8 5\\r\\n5 9\\r\\n10 5\\r\\n7 6\\r\\n8 6\\r\\n9 6\\r\\n10 6\\r\\n7 8\\r\\n9 7\\r\\n10 7\\r\\n8 9\\r\\n10 8\\r\\n9 10\\r\\n0.7632\\r\\n0.4462\\r\\n0.4321\\r\\n0.8036\\r\\n0.9500\\r\\n0.7438\\r\\n0.5196\\r\\n0.8022\\r\\n0.7419\\r\\n0.5806\\r\\n', 'output': ['0.1839204542 0.0471943915 0.0301277939 0.0985509080 0.3103919787 0.0755959621 0.0373307588 0.0978749428 0.0750231155 0.0439896946 ']}, {'input': '11 55 8 6\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n5 1\\r\\n6 1\\r\\n7 1\\r\\n1 8\\r\\n1 9\\r\\n10 1\\r\\n11 1\\r\\n2 3\\r\\n4 2\\r\\n5 2\\r\\n2 6\\r\\n2 7\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n11 2\\r\\n3 4\\r\\n3 5\\r\\n6 3\\r\\n3 7\\r\\n8 3\\r\\n9 3\\r\\n10 3\\r\\n11 3\\r\\n5 4\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n4 9\\r\\n4 10\\r\\n4 11\\r\\n6 5\\r\\n5 7\\r\\n8 5\\r\\n9 5\\r\\n5 10\\r\\n11 5\\r\\n6 7\\r\\n6 8\\r\\n9 6\\r\\n10 6\\r\\n6 11\\r\\n8 7\\r\\n9 7\\r\\n10 7\\r\\n7 11\\r\\n8 9\\r\\n8 10\\r\\n8 11\\r\\n10 9\\r\\n9 11\\r\\n10 11\\r\\n0.1858\\r\\n0.1694\\r\\n0.0945\\r\\n0.2580\\r\\n0.7910\\r\\n0.7729\\r\\n0.4302\\r\\n0.8449\\r\\n0.6270\\r\\n0.4962\\r\\n0.8791\\r\\n', 'output': ['0.0217350602 0.0210042612 0.0179935711 0.0253227842 0.1194283296 0.1697890394 0.0373767031 0.2793005386 0.0638189548 0.0440643844 0.2001663735 ']}, {'input': '12 66 2 3\\r\\n2 1\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 1\\r\\n1 7\\r\\n8 1\\r\\n9 1\\r\\n10 1\\r\\n11 1\\r\\n1 12\\r\\n3 2\\r\\n4 2\\r\\n5 2\\r\\n6 2\\r\\n2 7\\r\\n2 8\\r\\n2 9\\r\\n10 2\\r\\n2 11\\r\\n2 12\\r\\n4 3\\r\\n5 3\\r\\n3 6\\r\\n7 3\\r\\n3 8\\r\\n9 3\\r\\n10 3\\r\\n3 11\\r\\n12 3\\r\\n5 4\\r\\n6 4\\r\\n4 7\\r\\n8 4\\r\\n9 4\\r\\n4 10\\r\\n4 11\\r\\n12 4\\r\\n5 6\\r\\n5 7\\r\\n8 5\\r\\n5 9\\r\\n10 5\\r\\n5 11\\r\\n5 12\\r\\n6 7\\r\\n8 6\\r\\n6 9\\r\\n6 10\\r\\n11 6\\r\\n6 12\\r\\n7 8\\r\\n9 7\\r\\n7 10\\r\\n7 11\\r\\n7 12\\r\\n8 9\\r\\n10 8\\r\\n11 8\\r\\n12 8\\r\\n9 10\\r\\n11 9\\r\\n12 9\\r\\n11 10\\r\\n12 10\\r\\n12 11\\r\\n0.1181\\r\\n0.1559\\r\\n0.6868\\r\\n0.4488\\r\\n0.9508\\r\\n0.7239\\r\\n0.4596\\r\\n0.1090\\r\\n0.8877\\r\\n0.7477\\r\\n0.6342\\r\\n0.4051\\r\\n', 'output': ['0.0167334785 0.0204621778 0.1507680976 0.0333634903 0.3205611704 0.0733633598 0.0342214963 0.0164411081 0.1691474546 0.0803859443 0.0543657157 0.0301865067 ']}, {'input': '2 1 2 2\\r\\n1 2\\r\\n0.4651\\r\\n0.4541\\r\\n', 'output': ['0.0000000000 1.0000000000 ']}, {'input': '3 2 2 3\\r\\n2 1\\r\\n3 1\\r\\n0.8433\\r\\n0.3166\\r\\n0.0498\\r\\n', 'output': ['0.9882627746 0.0114733647 0.0002638607 ']}, {'input': '4 3 3 2\\r\\n1 2\\r\\n2 3\\r\\n4 3\\r\\n0.6321\\r\\n0.1541\\r\\n0.8633\\r\\n0.4309\\r\\n', 'output': ['0.0530829653 0.0844848606 0.8583062902 0.0041258840 ']}, {'input': '5 4 1 1\\r\\n1 4\\r\\n2 3\\r\\n2 4\\r\\n5 2\\r\\n0.3986\\r\\n0.2139\\r\\n0.0845\\r\\n0.4852\\r\\n0.5779\\r\\n', 'output': ['1.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 ']}, {'input': '6 5 2 1\\r\\n1 6\\r\\n3 2\\r\\n3 6\\r\\n5 4\\r\\n4 6\\r\\n0.7506\\r\\n0.5129\\r\\n0.7965\\r\\n0.1712\\r\\n0.3321\\r\\n0.7033\\r\\n', 'output': ['0.0490630865 0.0083870955 0.3822667748 0.0174328057 0.0030541480 0.5397960896 ']}, {'input': '7 6 7 7\\r\\n1 3\\r\\n3 2\\r\\n7 3\\r\\n5 4\\r\\n6 4\\r\\n7 6\\r\\n0.1063\\r\\n0.5142\\r\\n0.8086\\r\\n0.2764\\r\\n0.1017\\r\\n0.2610\\r\\n0.6153\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 ']}, {'input': '8 7 8 3\\r\\n3 1\\r\\n1 5\\r\\n2 6\\r\\n8 4\\r\\n5 6\\r\\n7 5\\r\\n5 8\\r\\n0.3036\\r\\n0.6397\\r\\n0.3751\\r\\n0.0160\\r\\n0.9384\\r\\n0.5140\\r\\n0.6922\\r\\n0.4464\\r\\n', 'output': ['0.0231073078 0.0004437071 0.0029737165 0.0000301038 0.9535554896 0.0022717175 0.0009690501 0.0166489075 ']}, {'input': '9 8 5 8\\r\\n1 2\\r\\n6 2\\r\\n2 7\\r\\n4 3\\r\\n5 3\\r\\n3 6\\r\\n6 8\\r\\n9 7\\r\\n0.5756\\r\\n0.9312\\r\\n0.4846\\r\\n0.7096\\r\\n0.9055\\r\\n0.5987\\r\\n0.6841\\r\\n0.6011\\r\\n0.5861\\r\\n', 'output': ['0.0004994782 0.3270344183 0.2258377173 0.0248431214 0.1829303180 0.2193026406 0.0065763617 0.0125278946 0.0004480498 ']}, {'input': '10 9 2 10\\r\\n1 2\\r\\n5 1\\r\\n7 1\\r\\n6 2\\r\\n3 5\\r\\n4 9\\r\\n5 10\\r\\n6 9\\r\\n10 8\\r\\n0.5376\\r\\n0.5747\\r\\n0.8019\\r\\n0.6922\\r\\n0.2890\\r\\n0.9193\\r\\n0.7521\\r\\n0.4436\\r\\n0.5970\\r\\n0.3173\\r\\n', 'output': ['0.2817412543 0.0959570556 0.0542629235 0.0025685657 0.1569610917 0.3021480932 0.0339864114 0.0084406954 0.0137071015 0.0502268077 ']}, {'input': '11 10 5 2\\r\\n11 1\\r\\n2 8\\r\\n2 10\\r\\n3 4\\r\\n9 4\\r\\n5 9\\r\\n6 9\\r\\n9 7\\r\\n11 9\\r\\n11 10\\r\\n0.0796\\r\\n0.0474\\r\\n0.2508\\r\\n0.6083\\r\\n0.7689\\r\\n0.1261\\r\\n0.2609\\r\\n0.4307\\r\\n0.8868\\r\\n0.3772\\r\\n0.6045\\r\\n', 'output': ['0.0003181172 0.0101075940 0.0001381672 0.0073377358 0.0067862223 0.0000641408 0.0001786077 0.0042257688 0.7637302105 0.0364209545 0.1706924813 ']}, {'input': '12 11 11 11\\r\\n3 1\\r\\n1 11\\r\\n3 2\\r\\n9 2\\r\\n2 10\\r\\n12 2\\r\\n3 5\\r\\n5 4\\r\\n8 5\\r\\n8 6\\r\\n12 7\\r\\n0.3563\\r\\n0.0931\\r\\n0.6741\\r\\n0.4162\\r\\n0.1307\\r\\n0.9049\\r\\n0.9435\\r\\n0.6656\\r\\n0.6276\\r\\n0.8688\\r\\n0.8109\\r\\n0.4977\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 ']}, {'input': '13 12 7 1\\r\\n2 1\\r\\n3 1\\r\\n6 1\\r\\n1 11\\r\\n2 9\\r\\n13 2\\r\\n3 10\\r\\n5 4\\r\\n4 11\\r\\n7 8\\r\\n7 13\\r\\n12 11\\r\\n0.1570\\r\\n0.0712\\r\\n0.0328\\r\\n0.5742\\r\\n0.0795\\r\\n0.6250\\r\\n0.7232\\r\\n0.8010\\r\\n0.8360\\r\\n0.1494\\r\\n0.3539\\r\\n0.8447\\r\\n0.9272\\r\\n', 'output': ['0.1034207245 0.0628088395 0.0093958837 0.0215220481 0.0001167809 0.0136922900 0.0642313143 0.0131051340 0.0511044118 0.0013590810 0.0568672232 0.0259479413 0.5764283278 ']}, {'input': '14 13 12 4\\r\\n1 6\\r\\n1 9\\r\\n9 2\\r\\n3 11\\r\\n4 12\\r\\n8 5\\r\\n5 11\\r\\n5 14\\r\\n10 7\\r\\n8 9\\r\\n13 9\\r\\n10 11\\r\\n12 11\\r\\n0.3228\\r\\n0.6911\\r\\n0.1498\\r\\n0.3435\\r\\n0.1763\\r\\n0.3718\\r\\n0.6798\\r\\n0.6485\\r\\n0.7299\\r\\n0.7418\\r\\n0.8041\\r\\n0.4249\\r\\n0.3820\\r\\n0.1464\\r\\n', 'output': ['0.0002725681 0.0001884812 0.0001796185 0.1521823863 0.0058382432 0.0000327578 0.0010923984 0.0053644997 0.0087619362 0.0145733462 0.3402217997 0.4711118932 0.0000364063 0.0001436652 ']}, {'input': '15 14 15 13\\r\\n4 1\\r\\n10 2\\r\\n3 12\\r\\n4 8\\r\\n12 4\\r\\n4 14\\r\\n7 5\\r\\n15 6\\r\\n7 9\\r\\n13 7\\r\\n14 7\\r\\n15 8\\r\\n12 10\\r\\n11 15\\r\\n0.5888\\r\\n0.1792\\r\\n0.7597\\r\\n0.6293\\r\\n0.3744\\r\\n0.3342\\r\\n0.8474\\r\\n0.8651\\r\\n0.1230\\r\\n0.4826\\r\\n0.0309\\r\\n0.3129\\r\\n0.9697\\r\\n0.4049\\r\\n0.0164\\r\\n', 'output': ['0.0045127683 0.0002130703 0.0079200770 0.2133409405 0.0005156567 0.0006969778 0.3990475462 0.1131589275 0.0000943589 0.0094364927 0.0000505592 0.0270366798 0.1760491983 0.0426472827 0.0052794640 ']}, {'input': '16 15 16 1\\r\\n1 3\\r\\n10 2\\r\\n9 3\\r\\n15 3\\r\\n4 10\\r\\n5 12\\r\\n16 5\\r\\n6 7\\r\\n6 15\\r\\n11 8\\r\\n11 9\\r\\n9 12\\r\\n14 9\\r\\n10 12\\r\\n10 13\\r\\n0.1478\\r\\n0.9068\\r\\n0.5458\\r\\n0.3318\\r\\n0.2632\\r\\n0.3624\\r\\n0.3189\\r\\n0.7264\\r\\n0.9796\\r\\n0.1311\\r\\n0.2947\\r\\n0.5834\\r\\n0.2095\\r\\n0.4419\\r\\n0.6588\\r\\n0.5525\\r\\n', 'output': ['0.0000811338 0.0093966712 0.0152177971 0.0004547303 0.0043006907 0.0013801376 0.0001128014 0.0001990500 0.9126720566 0.0104961528 0.0003134206 0.0369484070 0.0002490821 0.0000315496 0.0068014036 0.0013449155 ']}, {'input': '17 16 11 13\\r\\n3 1\\r\\n1 15\\r\\n2 15\\r\\n4 16\\r\\n5 8\\r\\n15 5\\r\\n8 6\\r\\n9 7\\r\\n10 7\\r\\n7 11\\r\\n17 7\\r\\n9 8\\r\\n12 8\\r\\n13 8\\r\\n10 16\\r\\n15 14\\r\\n0.7683\\r\\n0.9048\\r\\n0.1346\\r\\n0.4468\\r\\n0.1993\\r\\n0.7759\\r\\n0.8125\\r\\n0.2274\\r\\n0.1478\\r\\n0.8479\\r\\n0.9515\\r\\n0.7715\\r\\n0.3667\\r\\n0.0480\\r\\n0.0821\\r\\n0.6263\\r\\n0.2708\\r\\n', 'output': ['0.0258225311 0.0284330836 0.0000679627 0.0003573966 0.0152739625 0.0196276330 0.4722515893 0.1343480151 0.0275442145 0.0628400220 0.1521560220 0.0191064818 0.0031481221 0.0001752273 0.0307574428 0.0075784077 0.0005118859 ']}, {'input': '18 17 14 12\\r\\n1 2\\r\\n3 1\\r\\n18 1\\r\\n8 2\\r\\n9 2\\r\\n2 12\\r\\n2 17\\r\\n4 6\\r\\n15 4\\r\\n5 7\\r\\n7 6\\r\\n14 9\\r\\n12 10\\r\\n13 11\\r\\n11 16\\r\\n13 17\\r\\n14 15\\r\\n0.4024\\r\\n0.5565\\r\\n0.7870\\r\\n0.2691\\r\\n0.6727\\r\\n0.9621\\r\\n0.6842\\r\\n0.0271\\r\\n0.1097\\r\\n0.1747\\r\\n0.0784\\r\\n0.9550\\r\\n0.7523\\r\\n0.4284\\r\\n0.5238\\r\\n0.2709\\r\\n0.1595\\r\\n0.4590\\r\\n', 'output': ['0.0281574957 0.2581814330 0.0076272067 0.0107746580 0.0003467009 0.1714587133 0.0031642368 0.0000709113 0.0166962221 0.0000539712 0.0014416406 0.4106759112 0.0257975192 0.0287578136 0.0269904984 0.0002646607 0.0080077089 0.0015326985 ']}, {'input': '19 18 10 6\\r\\n5 1\\r\\n12 1\\r\\n7 2\\r\\n2 18\\r\\n15 3\\r\\n3 16\\r\\n4 6\\r\\n4 10\\r\\n6 9\\r\\n8 11\\r\\n13 9\\r\\n9 14\\r\\n10 11\\r\\n10 16\\r\\n18 11\\r\\n12 16\\r\\n17 16\\r\\n17 19\\r\\n0.6093\\r\\n0.4153\\r\\n0.2931\\r\\n0.6880\\r\\n0.0979\\r\\n0.9545\\r\\n0.2846\\r\\n0.5257\\r\\n0.5168\\r\\n0.2795\\r\\n0.4887\\r\\n0.3822\\r\\n0.2863\\r\\n0.5194\\r\\n0.3924\\r\\n0.8028\\r\\n0.8415\\r\\n0.2838\\r\\n0.9046\\r\\n', 'output': ['0.0054757481 0.0062808098 0.0031941783 0.1082773399 0.0000307445 0.5100921861 0.0003567821 0.0025634213 0.0108163903 0.0520824767 0.0484805903 0.0056216539 0.0001632695 0.0004991833 0.0004654536 0.1938285472 0.0350879002 0.0079000523 0.0087832726 ']}, {'input': '20 19 16 10\\r\\n2 1\\r\\n1 9\\r\\n1 10\\r\\n2 11\\r\\n2 16\\r\\n3 8\\r\\n15 3\\r\\n4 7\\r\\n4 14\\r\\n19 5\\r\\n6 16\\r\\n12 8\\r\\n15 13\\r\\n15 14\\r\\n15 19\\r\\n20 15\\r\\n19 16\\r\\n20 17\\r\\n18 20\\r\\n0.9546\\r\\n0.8460\\r\\n0.3530\\r\\n0.1547\\r\\n0.1812\\r\\n0.3792\\r\\n0.8502\\r\\n0.0898\\r\\n0.6804\\r\\n0.0465\\r\\n0.6699\\r\\n0.1623\\r\\n0.4908\\r\\n0.7436\\r\\n0.9748\\r\\n0.2965\\r\\n0.8528\\r\\n0.6024\\r\\n0.2343\\r\\n0.9496\\r\\n', 'output': ['0.4470817637 0.1925429406 0.0001522967 0.0001272041 0.0002374526 0.0009539965 0.0002531055 0.0000477577 0.0005965772 0.0000053211 0.0022254991 0.0000051402 0.0000145893 0.0010192506 0.3120036469 0.0168639725 0.0001460780 0.0000163715 0.0093450398 0.0163619965 ']}, {'input': '21 20 10 15\\r\\n1 4\\r\\n1 7\\r\\n1 13\\r\\n3 2\\r\\n3 13\\r\\n3 20\\r\\n14 4\\r\\n20 5\\r\\n6 17\\r\\n11 8\\r\\n13 9\\r\\n21 10\\r\\n11 14\\r\\n16 11\\r\\n12 14\\r\\n18 13\\r\\n21 14\\r\\n18 15\\r\\n17 16\\r\\n19 21\\r\\n0.5511\\r\\n0.4174\\r\\n0.1974\\r\\n0.1756\\r\\n0.4806\\r\\n0.7202\\r\\n0.0261\\r\\n0.1533\\r\\n0.5109\\r\\n0.9091\\r\\n0.1702\\r\\n0.0274\\r\\n0.6287\\r\\n0.4452\\r\\n0.8881\\r\\n0.4081\\r\\n0.2318\\r\\n0.9270\\r\\n0.3270\\r\\n0.5124\\r\\n0.6402\\r\\n', 'output': ['0.1274165708 0.0020068482 0.0221441417 0.0273841255 0.0011326856 0.0044150190 0.0000989026 0.0007239413 0.0032940960 0.0373926594 0.0268760758 0.0001121418 0.2255090088 0.1477723696 0.0142089213 0.0152217984 0.0061489761 0.2354718191 0.0009022427 0.0122643704 0.0895032861 ']}, {'input': '22 21 7 3\\r\\n1 16\\r\\n8 2\\r\\n3 17\\r\\n20 4\\r\\n12 5\\r\\n5 22\\r\\n13 6\\r\\n13 7\\r\\n14 7\\r\\n8 12\\r\\n9 10\\r\\n12 9\\r\\n9 13\\r\\n20 11\\r\\n13 20\\r\\n14 16\\r\\n14 17\\r\\n19 14\\r\\n22 15\\r\\n18 19\\r\\n21 18\\r\\n0.6643\\r\\n0.0936\\r\\n0.5519\\r\\n0.8542\\r\\n0.6411\\r\\n0.9560\\r\\n0.2451\\r\\n0.5841\\r\\n0.3590\\r\\n0.1352\\r\\n0.5336\\r\\n0.3901\\r\\n0.7602\\r\\n0.8653\\r\\n0.5635\\r\\n0.3840\\r\\n0.8625\\r\\n0.7766\\r\\n0.6941\\r\\n0.8028\\r\\n0.7482\\r\\n0.8431\\r\\n', 'output': ['0.0020725026 0.0000229554 0.0023344134 0.0034044638 0.0065601793 0.0429445422 0.0126807206 0.0037257267 0.0126648147 0.0001399510 0.0003551323 0.0103862706 0.1426738764 0.5077168905 0.0001223623 0.0058931744 0.1645677033 0.0138897777 0.0191701371 0.0396907000 0.0013049419 0.0076787635 ']}, {'input': '5 8 2 4\\r\\n1 2\\r\\n1 3\\r\\n5 1\\r\\n2 3\\r\\n2 4\\r\\n5 2\\r\\n4 3\\r\\n3 5\\r\\n0.2642\\r\\n0.6145\\r\\n0.1714\\r\\n0.5156\\r\\n0.7771\\r\\n', 'output': ['0.0469766543 0.4930268360 0.1177339858 0.1318957885 0.2103667354 ']}, {'input': '15 46 4 11\\r\\n1 3\\r\\n1 5\\r\\n6 1\\r\\n7 1\\r\\n1 8\\r\\n2 6\\r\\n8 2\\r\\n2 9\\r\\n12 2\\r\\n2 15\\r\\n3 4\\r\\n6 3\\r\\n3 12\\r\\n3 13\\r\\n3 14\\r\\n4 7\\r\\n9 4\\r\\n4 10\\r\\n4 14\\r\\n6 5\\r\\n5 7\\r\\n10 5\\r\\n12 5\\r\\n13 5\\r\\n5 14\\r\\n7 6\\r\\n9 6\\r\\n10 6\\r\\n6 13\\r\\n8 7\\r\\n7 13\\r\\n10 8\\r\\n8 13\\r\\n9 10\\r\\n9 13\\r\\n9 14\\r\\n11 10\\r\\n10 13\\r\\n10 15\\r\\n12 11\\r\\n11 15\\r\\n12 13\\r\\n15 12\\r\\n14 13\\r\\n15 13\\r\\n15 14\\r\\n0.2660\\r\\n0.9315\\r\\n0.7185\\r\\n0.9642\\r\\n0.1587\\r\\n0.2494\\r\\n0.3372\\r\\n0.0928\\r\\n0.3500\\r\\n0.0196\\r\\n0.2396\\r\\n0.8611\\r\\n0.5787\\r\\n0.4279\\r\\n0.0221\\r\\n', 'output': ['0.0079249483 0.1315277498 0.0526707222 0.5053657470 0.0138346726 0.0216010978 0.0163209733 0.0054495713 0.0182973209 0.0187149289 0.0026732816 0.0956673121 0.0798423781 0.0227469261 0.0073623701 ']}, {'input': '17 43 3 16\\r\\n8 1\\r\\n1 10\\r\\n1 12\\r\\n1 13\\r\\n6 2\\r\\n10 2\\r\\n12 2\\r\\n2 14\\r\\n15 2\\r\\n2 17\\r\\n6 3\\r\\n8 3\\r\\n12 3\\r\\n3 16\\r\\n4 5\\r\\n6 4\\r\\n4 7\\r\\n4 9\\r\\n13 4\\r\\n17 4\\r\\n6 5\\r\\n5 17\\r\\n6 11\\r\\n6 12\\r\\n6 17\\r\\n7 10\\r\\n7 12\\r\\n17 7\\r\\n9 8\\r\\n13 8\\r\\n8 15\\r\\n8 16\\r\\n17 8\\r\\n13 9\\r\\n9 16\\r\\n9 17\\r\\n10 15\\r\\n16 10\\r\\n17 11\\r\\n13 12\\r\\n16 12\\r\\n15 13\\r\\n15 14\\r\\n0.1613\\r\\n0.4247\\r\\n0.4271\\r\\n0.5636\\r\\n0.0214\\r\\n0.3172\\r\\n0.8156\\r\\n0.7663\\r\\n0.1132\\r\\n0.4127\\r\\n0.5416\\r\\n0.5220\\r\\n0.9366\\r\\n0.4426\\r\\n0.5884\\r\\n0.4569\\r\\n0.9613\\r\\n', 'output': ['0.0048722451 0.0160301298 0.0812776965 0.0169053414 0.0007186872 0.0187250770 0.0243168580 0.1375215020 0.0057046011 0.0143632541 0.0010119715 0.0786732010 0.1575241299 0.0011546527 0.0158649639 0.1204518537 0.3048838351 ']}, {'input': '6 6 6 3\\r\\n2 1\\r\\n5 1\\r\\n6 2\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n0.3429\\r\\n0.7018\\r\\n0.0699\\r\\n0.9602\\r\\n0.9585\\r\\n0.5070\\r\\n', 'output': ['0.0032904304 0.0076304590 0.0000112081 0.3439315417 0.6399603309 0.0051760299 ']}, {'input': '10 15 7 8\\r\\n3 1\\r\\n1 7\\r\\n2 4\\r\\n2 5\\r\\n9 2\\r\\n3 5\\r\\n7 3\\r\\n8 3\\r\\n4 7\\r\\n8 4\\r\\n5 7\\r\\n10 5\\r\\n6 8\\r\\n6 9\\r\\n9 8\\r\\n0.4654\\r\\n0.8489\\r\\n0.7851\\r\\n0.9790\\r\\n0.8126\\r\\n0.1443\\r\\n0.8385\\r\\n0.1355\\r\\n0.2672\\r\\n0.0631\\r\\n', 'output': ['0.0086717445 0.0591108269 0.1502231556 0.5026507699 0.0926399948 0.0018832329 0.1642324438 0.0138497445 0.0067226391 0.0000154479 ']}, {'input': '10 16 9 2\\r\\n3 1\\r\\n5 1\\r\\n9 1\\r\\n2 5\\r\\n8 2\\r\\n9 2\\r\\n10 2\\r\\n3 5\\r\\n6 3\\r\\n10 3\\r\\n4 6\\r\\n4 10\\r\\n5 10\\r\\n6 7\\r\\n8 7\\r\\n10 7\\r\\n0.8151\\r\\n0.2117\\r\\n0.5832\\r\\n0.0244\\r\\n0.1781\\r\\n0.5401\\r\\n0.4576\\r\\n0.1453\\r\\n0.3072\\r\\n0.2282\\r\\n', 'output': ['0.2858990309 0.1917730962 0.1409268921 0.0046323044 0.0671166968 0.0504929902 0.0497075403 0.0134447894 0.0942164861 0.1017901736 ']}, {'input': '22 30 9 17\\r\\n1 18\\r\\n1 20\\r\\n2 3\\r\\n5 2\\r\\n6 2\\r\\n2 11\\r\\n2 19\\r\\n6 4\\r\\n21 4\\r\\n22 4\\r\\n5 6\\r\\n8 5\\r\\n14 5\\r\\n10 6\\r\\n21 6\\r\\n22 7\\r\\n16 8\\r\\n9 12\\r\\n16 9\\r\\n18 10\\r\\n11 18\\r\\n11 22\\r\\n14 12\\r\\n13 22\\r\\n15 17\\r\\n21 15\\r\\n16 22\\r\\n22 17\\r\\n21 18\\r\\n20 22\\r\\n0.3290\\r\\n0.6966\\r\\n0.3952\\r\\n0.4713\\r\\n0.2462\\r\\n0.6482\\r\\n0.3471\\r\\n0.6729\\r\\n0.8845\\r\\n0.8581\\r\\n0.6991\\r\\n0.7279\\r\\n0.9751\\r\\n0.4603\\r\\n0.9591\\r\\n0.9890\\r\\n0.0230\\r\\n0.1388\\r\\n0.8745\\r\\n0.3635\\r\\n0.9655\\r\\n0.6980\\r\\n', 'output': ['0.0012630922 0.0302925914 0.0001113046 0.0058223640 0.0084588979 0.0305910518 0.0001130212 0.0050014407 0.0135265144 0.0105166645 0.0126985994 0.0054538897 0.0233929192 0.0031581259 0.0393763424 0.5293925504 0.0008728982 0.0041399002 0.0022100491 0.0013950475 0.1941228326 0.0780899026 ']}, {'input': '22 32 5 7\\r\\n1 3\\r\\n9 1\\r\\n16 2\\r\\n2 18\\r\\n3 5\\r\\n3 6\\r\\n3 10\\r\\n11 3\\r\\n13 3\\r\\n3 22\\r\\n22 4\\r\\n5 6\\r\\n5 8\\r\\n14 5\\r\\n5 15\\r\\n5 18\\r\\n19 6\\r\\n6 20\\r\\n6 21\\r\\n21 7\\r\\n8 18\\r\\n22 9\\r\\n10 13\\r\\n22 10\\r\\n15 11\\r\\n17 12\\r\\n12 20\\r\\n17 14\\r\\n16 22\\r\\n17 18\\r\\n17 21\\r\\n18 20\\r\\n0.9511\\r\\n0.6830\\r\\n0.2035\\r\\n0.9142\\r\\n0.6807\\r\\n0.6502\\r\\n0.3221\\r\\n0.0903\\r\\n0.1790\\r\\n0.2234\\r\\n0.9788\\r\\n0.6005\\r\\n0.3179\\r\\n0.2115\\r\\n0.8035\\r\\n0.8730\\r\\n0.0342\\r\\n0.2599\\r\\n0.7508\\r\\n0.1815\\r\\n0.6454\\r\\n0.7619\\r\\n', 'output': ['0.0547241979 0.0127153084 0.0441350190 0.0054767347 0.2027512578 0.1785779328 0.0009181368 0.0030386274 0.0012253232 0.0047658952 0.1614826534 0.0200979142 0.0024921791 0.0089124294 0.0185716675 0.0233837366 0.0345272095 0.0510312272 0.0049608897 0.0146416997 0.0870608962 0.0645090644 ']}, {'input': '21 23 21 17\\r\\n3 1\\r\\n3 2\\r\\n15 2\\r\\n2 20\\r\\n21 2\\r\\n16 3\\r\\n3 19\\r\\n4 8\\r\\n11 4\\r\\n17 4\\r\\n5 8\\r\\n5 9\\r\\n5 13\\r\\n6 16\\r\\n12 7\\r\\n16 7\\r\\n12 9\\r\\n10 17\\r\\n21 11\\r\\n12 18\\r\\n21 14\\r\\n15 17\\r\\n20 16\\r\\n0.0190\\r\\n0.5764\\r\\n0.1426\\r\\n0.4577\\r\\n0.7596\\r\\n0.5794\\r\\n0.5531\\r\\n0.9095\\r\\n0.6558\\r\\n0.8086\\r\\n0.2032\\r\\n0.4600\\r\\n0.9388\\r\\n0.1243\\r\\n0.2195\\r\\n0.7691\\r\\n0.1250\\r\\n0.1658\\r\\n0.4437\\r\\n0.7445\\r\\n0.0782\\r\\n', 'output': ['0.0000449260 0.2344991918 0.0251976569 0.1319548171 0.0505050501 0.0009015861 0.0110788625 0.1360612739 0.0147837889 0.0419721572 0.0374092349 0.0159331361 0.0176432803 0.0015421188 0.0322649361 0.1040211064 0.0579773602 0.0001476576 0.0017154120 0.0398347629 0.0445116844 ']}, {'input': '21 24 10 10\\r\\n11 1\\r\\n14 1\\r\\n4 2\\r\\n2 10\\r\\n3 5\\r\\n3 8\\r\\n3 9\\r\\n3 13\\r\\n3 17\\r\\n21 3\\r\\n4 9\\r\\n20 5\\r\\n6 12\\r\\n17 6\\r\\n9 7\\r\\n15 7\\r\\n7 19\\r\\n12 13\\r\\n12 15\\r\\n15 14\\r\\n21 14\\r\\n16 19\\r\\n18 20\\r\\n19 21\\r\\n0.4227\\r\\n0.9018\\r\\n0.8446\\r\\n0.0334\\r\\n0.8707\\r\\n0.5558\\r\\n0.4513\\r\\n0.1537\\r\\n0.9028\\r\\n0.2106\\r\\n0.0863\\r\\n0.4888\\r\\n0.3508\\r\\n0.3819\\r\\n0.2980\\r\\n0.6791\\r\\n0.6029\\r\\n0.0931\\r\\n0.8012\\r\\n0.9531\\r\\n0.0343\\r\\n', 'output': ['0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 1.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 ']}, {'input': '21 25 20 3\\r\\n18 1\\r\\n12 2\\r\\n20 2\\r\\n11 3\\r\\n9 4\\r\\n12 4\\r\\n4 15\\r\\n4 20\\r\\n5 8\\r\\n5 15\\r\\n5 18\\r\\n5 20\\r\\n6 16\\r\\n20 7\\r\\n8 11\\r\\n13 8\\r\\n16 10\\r\\n10 19\\r\\n17 11\\r\\n12 15\\r\\n12 16\\r\\n12 21\\r\\n17 13\\r\\n14 18\\r\\n16 20\\r\\n0.3609\\r\\n0.9580\\r\\n0.3737\\r\\n0.7107\\r\\n0.6199\\r\\n0.4418\\r\\n0.0874\\r\\n0.5309\\r\\n0.3103\\r\\n0.9377\\r\\n0.8430\\r\\n0.9569\\r\\n0.5227\\r\\n0.6203\\r\\n0.4745\\r\\n0.4190\\r\\n0.6055\\r\\n0.8480\\r\\n0.8791\\r\\n0.4012\\r\\n0.3441\\r\\n', 'output': ['0.0001115124 0.0980714461 0.0002416850 0.0433302884 0.1021821003 0.0004704958 0.0000866423 0.0539373770 0.0001486904 0.0329442386 0.0940435447 0.4179895790 0.0123317109 0.0004663481 0.0186175265 0.0173859990 0.0115346705 0.0516017594 0.0012743943 0.0432054878 0.0000245034 ']}, {'input': '22 23 5 16\\r\\n20 1\\r\\n1 22\\r\\n2 3\\r\\n2 4\\r\\n3 13\\r\\n16 3\\r\\n4 6\\r\\n9 5\\r\\n5 22\\r\\n16 7\\r\\n9 8\\r\\n8 13\\r\\n10 16\\r\\n10 22\\r\\n11 17\\r\\n22 12\\r\\n14 15\\r\\n16 14\\r\\n14 18\\r\\n15 19\\r\\n16 21\\r\\n19 17\\r\\n22 17\\r\\n0.7393\\r\\n0.5325\\r\\n0.7522\\r\\n0.0343\\r\\n0.4628\\r\\n0.4713\\r\\n0.0749\\r\\n0.2350\\r\\n0.1396\\r\\n0.4916\\r\\n0.9203\\r\\n0.3179\\r\\n0.3378\\r\\n0.5174\\r\\n0.6705\\r\\n0.9649\\r\\n0.0823\\r\\n0.6370\\r\\n0.3185\\r\\n0.8381\\r\\n0.6475\\r\\n0.8173\\r\\n', 'output': ['0.0088399457 0.0037821738 0.0429781208 0.0005983597 0.0060422088 0.0002929921 0.0000030894 0.0040866917 0.0027909053 0.0135153898 0.0117585651 0.0001331749 0.0058057805 0.0119937930 0.0107339787 0.7106384041 0.0059716200 0.0009389289 0.0043356417 0.0022053815 0.0001722543 0.1523826002 ']}, {'input': '22 26 22 13\\r\\n1 2\\r\\n3 1\\r\\n1 21\\r\\n1 22\\r\\n9 2\\r\\n13 2\\r\\n2 17\\r\\n3 16\\r\\n11 4\\r\\n7 5\\r\\n12 5\\r\\n5 21\\r\\n6 12\\r\\n6 18\\r\\n11 7\\r\\n18 8\\r\\n9 11\\r\\n9 20\\r\\n10 13\\r\\n11 14\\r\\n11 18\\r\\n19 12\\r\\n15 22\\r\\n17 16\\r\\n18 22\\r\\n22 21\\r\\n0.1724\\r\\n0.6546\\r\\n0.1197\\r\\n0.5874\\r\\n0.2667\\r\\n0.1593\\r\\n0.5054\\r\\n0.1572\\r\\n0.1620\\r\\n0.2524\\r\\n0.6551\\r\\n0.5020\\r\\n0.1909\\r\\n0.2257\\r\\n0.7479\\r\\n0.6343\\r\\n0.6408\\r\\n0.7443\\r\\n0.3852\\r\\n0.8838\\r\\n0.2693\\r\\n0.3504\\r\\n', 'output': ['0.0845150088 0.2599909733 0.0097983608 0.0018923031 0.0239189914 0.0048992078 0.0160198485 0.0001406067 0.0247058927 0.0013355496 0.1609619578 0.0266705055 0.0121400170 0.0002951678 0.0125662798 0.0330821904 0.0360913305 0.1467042455 0.0007214805 0.0257426840 0.0360195050 0.0817878936 ']}, {'input': '22 25 2 7\\r\\n17 1\\r\\n2 16\\r\\n2 22\\r\\n14 3\\r\\n3 15\\r\\n20 3\\r\\n4 8\\r\\n4 12\\r\\n4 13\\r\\n13 5\\r\\n5 16\\r\\n16 6\\r\\n11 7\\r\\n17 7\\r\\n7 21\\r\\n9 15\\r\\n9 22\\r\\n14 10\\r\\n10 15\\r\\n10 17\\r\\n20 10\\r\\n16 12\\r\\n18 13\\r\\n18 16\\r\\n19 22\\r\\n0.9622\\r\\n0.8251\\r\\n0.9681\\r\\n0.2488\\r\\n0.3662\\r\\n0.5921\\r\\n0.5852\\r\\n0.0411\\r\\n0.2418\\r\\n0.0125\\r\\n0.2109\\r\\n0.8481\\r\\n0.3958\\r\\n0.1604\\r\\n0.8006\\r\\n0.9077\\r\\n0.7900\\r\\n0.7867\\r\\n0.8533\\r\\n0.6754\\r\\n0.7537\\r\\n0.1636\\r\\n', 'output': ['0.0397606434 0.0600590881 0.3808962043 0.0014000167 0.0011392632 0.0002081290 0.0143391730 0.0000065896 0.0122923376 0.0194932708 0.0001001379 0.0082802798 0.0024780234 0.0030637724 0.1211126468 0.1962584577 0.0804543597 0.0051630869 0.0166074944 0.0140209327 0.0017717043 0.0210943884 ']}, {'input': '20 23 17 3\\r\\n18 1\\r\\n2 6\\r\\n10 2\\r\\n3 8\\r\\n12 4\\r\\n8 5\\r\\n9 5\\r\\n17 5\\r\\n7 8\\r\\n15 7\\r\\n7 16\\r\\n9 18\\r\\n9 20\\r\\n10 15\\r\\n17 10\\r\\n11 14\\r\\n11 18\\r\\n13 12\\r\\n12 14\\r\\n14 13\\r\\n20 15\\r\\n16 19\\r\\n20 16\\r\\n0.3546\\r\\n0.6179\\r\\n0.2477\\r\\n0.4236\\r\\n0.8433\\r\\n0.0304\\r\\n0.5569\\r\\n0.4558\\r\\n0.8289\\r\\n0.1959\\r\\n0.2156\\r\\n0.3993\\r\\n0.0429\\r\\n0.9185\\r\\n0.1945\\r\\n0.8919\\r\\n0.8929\\r\\n0.3044\\r\\n0.2973\\r\\n0.1637\\r\\n', 'output': ['0.0003638881 0.0163339067 0.0008806850 0.0000274159 0.3262188951 0.0000246366 0.0536909073 0.0520393925 0.1051082156 0.0261569273 0.0020883748 0.0005216032 0.0000848720 0.0268220987 0.0257688220 0.1285525498 0.2126000150 0.0073895213 0.0000994338 0.0152278393 ']}, {'input': '20 21 5 14\\r\\n1 10\\r\\n13 1\\r\\n19 1\\r\\n2 11\\r\\n14 2\\r\\n2 17\\r\\n7 3\\r\\n13 3\\r\\n4 15\\r\\n14 5\\r\\n19 5\\r\\n6 16\\r\\n13 8\\r\\n16 9\\r\\n15 11\\r\\n11 19\\r\\n15 12\\r\\n16 12\\r\\n18 12\\r\\n15 20\\r\\n17 16\\r\\n0.5805\\r\\n0.3342\\r\\n0.7705\\r\\n0.7345\\r\\n0.1304\\r\\n0.3862\\r\\n0.6920\\r\\n0.6597\\r\\n0.6223\\r\\n0.0125\\r\\n0.4646\\r\\n0.9876\\r\\n0.7291\\r\\n0.3720\\r\\n0.2529\\r\\n0.1635\\r\\n0.5579\\r\\n0.4736\\r\\n0.6798\\r\\n0.1940\\r\\n', 'output': ['0.0290729509 0.0774707737 0.0048407220 0.0022268940 0.0840499631 0.0003440094 0.0003284870 0.0006200526 0.0008986063 0.0000093558 0.0641414110 0.2073528076 0.0194228289 0.2619733510 0.0124627336 0.0066013691 0.0179828402 0.0000059094 0.2100074063 0.0001875280 ']}, {'input': '20 25 1 12\\r\\n1 11\\r\\n12 1\\r\\n18 1\\r\\n4 2\\r\\n3 5\\r\\n3 7\\r\\n3 11\\r\\n14 3\\r\\n3 16\\r\\n17 3\\r\\n11 4\\r\\n4 16\\r\\n18 4\\r\\n5 6\\r\\n5 9\\r\\n10 5\\r\\n5 14\\r\\n5 20\\r\\n9 6\\r\\n17 6\\r\\n8 17\\r\\n12 10\\r\\n16 13\\r\\n14 19\\r\\n15 19\\r\\n0.5533\\r\\n0.6775\\r\\n0.4103\\r\\n0.7882\\r\\n0.9682\\r\\n0.0157\\r\\n0.8149\\r\\n0.2403\\r\\n0.4483\\r\\n0.1045\\r\\n0.7979\\r\\n0.0113\\r\\n0.9501\\r\\n0.7438\\r\\n0.6028\\r\\n0.8786\\r\\n0.8645\\r\\n0.8427\\r\\n0.2974\\r\\n0.2234\\r\\n', 'output': ['0.3836337810 0.0005834345 0.0229041026 0.0461902969 0.3196862695 0.0007593053 0.0018549199 0.0000123965 0.0005294816 0.0079362295 0.0669374470 0.0290126728 0.0053233321 0.0091036233 0.0001539764 0.0320034925 0.0145047810 0.0584237926 0.0004433762 0.0000032889 ']}, {'input': '16 17 7 1\\r\\n3 1\\r\\n1 8\\r\\n10 1\\r\\n1 11\\r\\n15 1\\r\\n15 2\\r\\n2 16\\r\\n3 9\\r\\n4 13\\r\\n15 5\\r\\n16 6\\r\\n11 7\\r\\n8 12\\r\\n9 10\\r\\n14 9\\r\\n10 11\\r\\n13 16\\r\\n0.4938\\r\\n0.1780\\r\\n0.5063\\r\\n0.2975\\r\\n0.0828\\r\\n0.7123\\r\\n0.6365\\r\\n0.3149\\r\\n0.1640\\r\\n0.2521\\r\\n0.8296\\r\\n0.9536\\r\\n0.2263\\r\\n0.1757\\r\\n0.7787\\r\\n0.4786\\r\\n', 'output': ['0.2282703609 0.0041908237 0.0240980923 0.0001797951 0.0000528785 0.0016021604 0.0137910440 0.0127072600 0.0229547593 0.0461207439 0.4817791924 0.0589129374 0.0014384188 0.0007747441 0.0911572626 0.0119695266 ']}, {'input': '18 19 4 11\\r\\n1 9\\r\\n2 8\\r\\n3 5\\r\\n3 6\\r\\n4 14\\r\\n9 5\\r\\n15 5\\r\\n8 6\\r\\n14 6\\r\\n12 7\\r\\n7 14\\r\\n7 17\\r\\n7 18\\r\\n8 18\\r\\n12 9\\r\\n14 10\\r\\n18 11\\r\\n14 13\\r\\n16 17\\r\\n0.3249\\r\\n0.3531\\r\\n0.3056\\r\\n0.4843\\r\\n0.7970\\r\\n0.5842\\r\\n0.5472\\r\\n0.4521\\r\\n0.2028\\r\\n0.7950\\r\\n0.1425\\r\\n0.4595\\r\\n0.1226\\r\\n0.0513\\r\\n0.5915\\r\\n0.2733\\r\\n0.7116\\r\\n0.0974\\r\\n', 'output': ['0.0011964236 0.0027831999 0.0140945800 0.0099145200 0.0983898473 0.1586288138 0.2962532703 0.0986994249 0.0196928959 0.0361972940 0.0015096894 0.0240101362 0.0015026996 0.1439159142 0.0012566904 0.0004912934 0.0439254039 0.0475379030 ']}, {'input': '19 20 7 13\\r\\n1 8\\r\\n10 1\\r\\n12 1\\r\\n1 13\\r\\n2 3\\r\\n2 13\\r\\n5 4\\r\\n11 4\\r\\n16 4\\r\\n5 7\\r\\n5 12\\r\\n5 13\\r\\n12 6\\r\\n9 10\\r\\n18 9\\r\\n15 10\\r\\n17 14\\r\\n14 19\\r\\n17 15\\r\\n16 17\\r\\n0.2124\\r\\n0.4090\\r\\n0.6285\\r\\n0.8759\\r\\n0.6790\\r\\n0.3161\\r\\n0.7681\\r\\n0.0730\\r\\n0.9793\\r\\n0.9753\\r\\n0.6491\\r\\n0.3349\\r\\n0.5286\\r\\n0.9760\\r\\n0.0743\\r\\n0.3295\\r\\n0.4276\\r\\n0.5759\\r\\n0.9666\\r\\n', 'output': ['0.0307369775 0.0185380486 0.0049762965 0.0801258012 0.4016568896 0.0012615177 0.0458257790 0.0001732439 0.0262190397 0.2072028585 0.0005878688 0.0347646012 0.1014805103 0.0361157326 0.0009321471 0.0019251201 0.0051159376 0.0000088276 0.0023528026 ']}, {'input': '19 45 4 19\\r\\n3 1\\r\\n4 1\\r\\n8 1\\r\\n9 1\\r\\n1 15\\r\\n4 2\\r\\n2 7\\r\\n8 2\\r\\n10 2\\r\\n12 2\\r\\n14 2\\r\\n6 4\\r\\n12 4\\r\\n4 14\\r\\n18 4\\r\\n8 5\\r\\n5 16\\r\\n17 5\\r\\n5 18\\r\\n6 15\\r\\n6 16\\r\\n6 17\\r\\n11 7\\r\\n7 12\\r\\n16 7\\r\\n19 7\\r\\n15 8\\r\\n9 10\\r\\n12 9\\r\\n9 14\\r\\n18 9\\r\\n19 9\\r\\n10 12\\r\\n14 10\\r\\n19 10\\r\\n11 13\\r\\n11 14\\r\\n15 11\\r\\n17 11\\r\\n11 19\\r\\n12 16\\r\\n15 13\\r\\n15 14\\r\\n14 17\\r\\n18 19\\r\\n0.4821\\r\\n0.4961\\r\\n0.0784\\r\\n0.4492\\r\\n0.7542\\r\\n0.2541\\r\\n0.9007\\r\\n0.3242\\r\\n0.3859\\r\\n0.2849\\r\\n0.4588\\r\\n0.9274\\r\\n0.1538\\r\\n0.4482\\r\\n0.6068\\r\\n0.9144\\r\\n0.8487\\r\\n0.1854\\r\\n0.4288\\r\\n', 'output': ['0.0266883400 0.0401292756 0.0000341093 0.0443828404 0.0331957500 0.0072730898 0.1489809719 0.0096326688 0.0407018303 0.0188112037 0.0334055826 0.2872048781 0.0010750781 0.0556489717 0.0481176365 0.0894552396 0.0587582081 0.0258448651 0.0306594604 ']}, {'input': '6 9 2 5\\r\\n1 2\\r\\n3 1\\r\\n6 1\\r\\n2 4\\r\\n5 2\\r\\n3 6\\r\\n5 4\\r\\n6 4\\r\\n6 5\\r\\n0.9796\\r\\n0.7061\\r\\n0.6636\\r\\n0.9200\\r\\n0.4454\\r\\n0.5302\\r\\n', 'output': ['0.3356041533 0.2464765303 0.0058143943 0.2843884681 0.0929849670 0.0347314871 ']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 22;\nint n, m, a, b;\ndouble p[N], dp[N][N][N][N];\nvector<int> g[N];\nint main() {\n  scanf(\"%d%d%d%d\", &n, &m, &a, &b);\n  for (int i = 0; i < m; i++) {\n    int u, v;\n    scanf(\"%d%d\", &u, &v);\n    g[u].push_back(v);\n    g[v].push_back(u);\n  }\n  for (int i = 1; i <= n; i++) scanf(\"%lf\", &p[i]);\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++)\n      for (int k = 1; k <= n; k++)\n        for (int l = 1; l <= n; l++) dp[i][j][k][l] = 1;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++)\n      for (int k = 1; k <= n; k++)\n        for (int l = 1; l <= n; l++)\n          if (i!= j && i!= k && i!= l && j!= k && j!= l && k!= l)\n            dp[i][j][k][l] =\n                (1 - p[i]) * (1 - p[j]) * (1 - p[k]) * (1 - p[l]);\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++)\n      for (int k = 1; k <= n; k++)\n        for (int l = 1; l <= n; l++)\n          for (int u = 1; u <= n; u++)\n            for (int v = 1; v <= n; v++)\n              dp[i][j][k][l] =\n                  min(dp[i][j][k][l],\n                      dp[i][u][v][j] * dp[u][k][l][v] * dp[k][i][u][l]);\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++)\n      for (int k = 1; k <= n; k++)\n        for (int l = 1; l <= n; l++)\n          if (i!= j && i!= k && i!= l && j!= k && j!= l && k!= l)\n            dp[i][j][k][l] = 1;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++)\n      for (int k = 1; k <= n; k++)\n        for (int l = 1; l <= n; l++)\n          if (i!= j && i!= k && i!= l && j!= k && j!= l && k!= l)\n            dp[i][j][k][l] =\n                min(dp[i][j][k][l],\n                    dp[i][a][b][j] * dp[a][k][l][b] * dp[k][i][a][l]);\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++)\n      for (int k = 1; k <= n; k++)\n        for (int l = 1; l <= n; l++)\n          if (i!= j && i!= k && i!= l && j!= k && j!= l && k!= l)\n            dp[i][j][k][l] = 1;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++)\n      for (int k = 1; k <= n; k++)\n        for (int l = 1; l <= n; l++)\n          if (i!= j && i!= k && i!= l && j!= k && j!= l && k!= l)\n            dp[i][j][k][l] =\n                min(dp[i][j][k][l],\n                    dp[i][a][b][j] * dp[a]["}
{"src_uid": "34b67958a37865e1ca0529bbf528dd9a", "id": 38, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '198\\r\\n', 'output': ['981\\r\\n819']}, {'input': '500\\r\\n', 'output': ['500\\r\\n500']}, {'input': '1061\\r\\n', 'output': ['1160\\r\\n1160', '6110\\r\\n6110']}, {'input': '1099\\r\\n', 'output': ['9901\\r\\n1099']}, {'input': '4877\\r\\n', 'output': ['4778\\r\\n4778', '8774\\r\\n8774']}, {'input': '787027\\r\\n', 'output': ['877720\\r\\n777280']}, {'input': '7665711\\r\\n', 'output': ['7766115\\r\\n7766115']}, {'input': '670042\\r\\n', 'output': ['672400\\r\\n427600']}, {'input': '87417\\r\\n', 'output': ['77481\\r\\n77418', '87741\\r\\n87741', '14778\\r\\n14778']}, {'input': '27183007\\r\\n', 'output': ['78721300\\r\\n31278700']}, {'input': '2603340571199714716025114079373828413509944752618962350632892540710372640383149198328312562980217104434880337288055817064\\r\\n', 'output': ['9444433333332219999999998888888888888777777777776666666655555555544444444433333333222222222221111111111111000000000100000\\r\\n4444333333322110000000001111111111111222222222223333333344444444455555555566666666777777777778888888888888999999999900000', '4444333333322109999999999888888888888877777777777666666665555555554444444443333333322222222222111111111111100000000010000\\r\\n4444333333322110000000000111111111111122222222222333333334444444445555555556666666677777777777888888888888899999999990000']}, {'input': '8679647744\\r\\n', 'output': ['9877766444\\r\\n9877764446']}, {'input': '220737406285\\r\\n', 'output': ['877654322200\\r\\n222345677800']}, {'input': '993522733475817\\r\\n', 'output': ['997533877542213\\r\\n995333122457787']}, {'input': '5057017252180797906185\\r\\n', 'output': ['7765551998877221100500\\r\\n7765551001122778899500']}, {'input': '12414711447744142772\\r\\n', 'output': ['11111222444444477777\\r\\n11111222444444477777', '77444444411111777222\\r\\n77444444411111222777', '77777444444422211111\\r\\n77777444444422211111']}, {'input': '3037225037514100860827276704\\r\\n', 'output': ['7887777665544332222113000000\\r\\n3112222334455667777887000000']}, {'input': '346762409573609367635944363650432097309\\r\\n', 'output': ['774499999776666666555444333333322000003\\r\\n744300000223333333444555666666677999997']}, {'input': '21504009080570645002760268009722803470954749000131\\r\\n', 'output': ['69999888777776655554444332222211100004000000000000\\r\\n40000111222223344445555667777788899996000000000000']}, {'input': '3311314413231141411421432122343321141133112122342341334443214\\r\\n', 'output': ['4444444444444433333333333333332222222222211111111111111111111\\r\\n4444444444444433333333333333332222222222211111111111111111111', '1111111111111111111122222222222333333333333333344444444444444\\r\\n1111111111111111111122222222222333333333333333344444444444444']}, {'input': '9070901003919040000887091134838800004472724709967020097067025050205000220352709096100405900207957128\\r\\n', 'output': ['7999999999999888888777777777766655555544444433322222222221111110000000000003000000000000000000000000\\r\\n3000000000000111111222222222233344444455555566677777777778888889999999999997000000000000000000000000']}, {'input': '41818138314831348134448848318148131818813388313344833114141141184383813143343448843131343384181384844431384114113314313144848133488818418384818848341344811441811141313448341888341118488811314338434488\\r\\n', 'output': ['88888888888888888888888888888888888888888888888888844444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111\\r\\n88888888888888888888888888888888888888888888888888844444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111', '11111111111111111111111111111111111111111111111111111133333333333333333333333333333333333333333333344444444444444444444444444444444444444444444444444888888888888888888888888888888888888888888888888888\\r\\n11111111111111111111111111111111111111111111111111111...', '44444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111888888888888888888888888888888888888888888888888888111111111111111111111111111111111111111111111111111\\r\\n44444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111888888888888888888888888888888888888888888888888888']}, {'input': '73552900025351606679224588872327647961330089042655630665222580520508672870102563487600132539752481214659858863022476410484266570139810532470714984092503934751571221521306943121997450187110428026190962582430971693370613087381790614697689671767000004095232276975952292053272119035138483846537407714434012224979098527763281110363860729062927455745190194649\\r\\n', 'output': ['66655222222221111111199999999999999999999999999999999988888888888888888888888888877777777777777777777777777777777777776666666666666666666666666666666555555555555555555555555555555544444444444444444444444444444443333333333333333333333333333333222222222222222222222222222222222222211111111111111111111111111100000000000000000000000000000000050000000000000\\r\\n666552222222211111111000000000000000000000000000000000111111111111111111111111111222222222222222222222222222222222222233333333333333333333333333333334444444...']}, {'input': '3660060360865606405406648718470765048005409506710925001850101061700007022407913434780234609002664580600302035550131007145010003815754853838580300966004029000300434981894159106340481587649046330570701648116012056320463003313141680800500509429100191307403765300801130020535489060555504004005803272823494700970010952879008030098004480465890588039380501581078422931611654908930340540303783403661632050700948101050151020160623940430284004280902060684751066629489507855752580027410505650019760020009138500203642800308...', 'output': ['8999999999999999999999999999999999888888888888888888888888888888888888888888888888888777777777777777777777777777777777666666666666666666666666666666666666666666666666666665555555555555555555555555555555555555555555555555555555554444444444444444444444444444444444444444444444444444444443333333333333333333333333333333333333333333333333333322222222222222222222222222222222211111111111111111111111111111111111111111111111111100000000000000000000000000000000020000000000000000000000000000000000000000000000000000000...']}, {'input': '3988405032201869838583516133943649897563464963199720203573666195109254972807095125585153139107836315540802254503122202208671231062969287785325745149827780975637820846694844717512181082423246460831153198676512327424647704185170864814344819230405434252307112870463387306341417126663194715993207482864102823774828380347931676663905538788367741598351252166769604140992179418820043419699163449596439979329298654494702555801641339987965927031928141345579024032222443566448480995335779507500358684011237604341216194860...', 'output}, {'input': '5562193853810918945620627929172131555837473643554362967763887812413927487628705169826152884386226149418373951049986250969308862515359891001338285242920050910490906828048000561263856034031835539717283086698037020184346364592477218030068494838985393388772969774556866175869082513319040937289891361048143148841837267534830052901494206187747905771299059141380597767985198813756458221849136120811572042106826621666519843756406853641666119992871613251441378811527654575794639431472815236597945545443592839760099142175...', 'output}, {'input': '1730422676082588834860375440897683748061653034160089035356410303853087273043400007064082808873506818021832173796672909286031070430706710420988411005000807994008004024283001700960690091562564065800969314020467274006854259128883092106143502490180340506154995307707013371796800069059205904006180070480509165819304195087071960902368005201049042530842923912727019572672086010287001109827122078050756623098907147400115030307257820452003056013088910107770590352130772036869022135230000406249627027600081343058909708407...', 'output}, {'input': '1188618183388611381111868863636138313333318818183316831361113811386318881168331361688618161613168636818383186336633113388318838136613388313111138111638188133138611181663863163386311813118638838866886113361631311686863836336863366813363683838881686613163833833813818131863311861368333636631363361331668363336363133666111611188181133381186813313311188138316336861381168838138611618113313831613331631133161186833631636661616388613133631666888311386383811818886633183161338681333381366386313631818363861111388386336...', 'output': ['3333333333333333333333333333333333333333111188888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666...', '8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666333333333333333333333333333333333...']}, {'input': '4243694432732244021095331595848137532367241195639191582163152600248271436184171538206044964067675106064159822875846011534297438582909683899088886549812421326048203391195680776887732457754143569028983164195293260537822023061273285507094731086855967279325960871356767018241344379707565856468765648033087664400397093527921657664579022705211823347324199918200113662278819911280201671779336001809547757878558876551737537928583698853638809689051510513192892880892879923602951533842587693618320930509403954665244464014...', 'output}, {'input': '5437214130838098132393123187069383986299021704931433096622499682915037838279737829812626065978576360754157333866084773073470536769353978446234788082062466105585127249713791721276273253638073234535447123880003542275055023902223874569552201863700202729293434430147174682302760783914011412039339697895841967107362265388874914846141521997037412954401235418335972353607055044874973461347888021255272429429744517830123078766552437060613565467908259410563840960055743267873948181932990399762986852911078878324107938917...', 'output}, {'input': '4944847984484499897477888998874784884474797788999888498989748984997797774478988749487787787944998784444748977844777488984798748984848479947894989998987487879949447848848898888479487898778984788988844874979497894779489449989797494497448984798494794487487499897944798844794498988947898787974874948989778778787978779999884994978894997949747744747987949784774894974798444899479997779484979789977489799448894478894447988489844888844979484789849479784487487984494474787484798944879774787979844984474989994948844498848...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '7688754930503622624249376302050721830065980218099156664541044701341628003496939103577693880283583449467297533469375121979331361424629165453875685841427085813980899970901793449283121463702841677303321796810682892574801165017961242552369171251649136915268463307740719648716991029731139504104601780245826323470355102044393062687794743810560411082474390672510942974815216433066730925915777989481449608904036597675354340429734413866576289385161415247796862427872213476834038054015404274700559772991390769430573604588...', 'output': ['7777777777777777777777777777777777777777777777777777744444333333333333333333333333333333333333311111111111111111111111111111199999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6185037014707879384301592707009200430885687987529770162683115103088000085680865822274850080279809974072320607292351515828318654276346545329009080458123889570600021478058963049335300526437402130814087220633083010320092359393947423676191603547547874099010090263715163042641015092023212068194008006284379105933507405589730536098173006808291862017372694644277904949390565867842170703665006250410053210368067399451324395605280164900094231101070015087506700869427482073857397072913460003007919234200185280014042400788...', 'output': ['0999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...', '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '9965675082563929077799639762147786621291924398160624989369600320192031503878569896057485302667512360792029743474568614205998702183738012739853871916032407255123289056032335037954093166786819460498686316030169623643193583487898113843927174667792205951098904610616262292296460934603477941718344667867924960280476601880750505510840781238530728533026536005269229659829632892079936763214347808150429912908943447565716781168693866762946019658346001623995714859531084238467607308795481083815672444891116656361208045970...', 'output}, {'input': '9399099847230403397608550745456155491158833773727348957376326513008223271678368456249540347230059416611594526577303833136258789778891864775273632464015119183546285134805758447349338707895134660480829159525233548918538910475304570679493939658220667016376015440024476591414811967116176614232543688298600080829981632901950723372865951651419680198089502103871677882895994538059569016616295154550051663786468623844991852957332803481973612908697320851672235286727280608094255910265465949153761572434331191352427728064...', 'output}, {'input': '8677967897698796789869977698966986766668767667877789687666777969877868866999778969776786886687667966666886998976666676977779778769966697999998779777897676767686769769786987879887997776899999678878889896989896786778987668667889996989798796789766787977696988889666979897677886999868886976889987967696786768799888977677869978788766888766766967966876677799699997999866877688987986667899667687969687976867888778966777679767976979686899989799966976677796988888678867987797979987688869998677678689766966799667798866777...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '9169971377710854296307256878741743698904124875448188271438951731205465267096367879254423883111502855461268175261428259841277349539147022226480518218151857953676017222027859200956811168178482461083232476828773371751606247028165410567693365659977753752229668485142842096080257823565015585554974200804379221344492030870542627558563729072598095907764908903382419976933178549658032518931968565924190202313496291962510432634753675507873015068004621111683336737250908340689201372884809217551652679954580369879266423996...', 'output': ['6999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6402786117688907443629724676831861533380180662220326080501780992805834946738488906845349427183566546511120382042723532624475030689025499486454271766674879981315283125798751257569414757976374038693161455471776288448466249042222232425875808224403027744003704733955856398480964728375104262593788637777991997226599166814909071700171931478113019658198262741949705020331053974720755616818262843218961549805697021892940521399666343560867144526146538816131915538024059710094503485967378568082586947837283236875658146083...', 'output}, {'input': '2070584715958145931421943242877190736958188253532149113773257317774198852654268041861390688937915459566813326558023375873717875659623285221404908938186814771148690466010226989170254197736185741906851849474335844294393346935985196002604635838488633689366270270816465659353721056863151769188355135996953267698927714458440941550608272933473999407843409218797782406542610740951897694088643421505259321077956931953401390506157198305673803989694229999834828559332611372520954127118391729272331426793792414035235978292...', 'output}, {'input': '8830861889084051137643095774667654091986146869638648806288355834264695705797997204636152837277104079861551043640411014476918595066178670622283784697836347266655410475651455424263984398400662652738282678568304261152268090472444853374162421538590461473160139331604155280883012526754572269223633721300073239964775068679107842867167988931514560036166077584920827099541095153530279147684552577281385808157457305366848324391930843148351467387609038643560823897910018058987387476315080167238324082347653316905346938679...', 'output}, {'input': '8305353302042045132812713478589540940020097002309955880051290302345538886542504324100015141590915418707137647116069301978829579921838244596449533937725450722688600320224550552507030093558787751655874747352271037965806257211323568094024519907197752098052106271348046013549239460290417613713576981256525956964865075252410470149725070078486001965401206111081063737511835054192700776299150006487937152257808653940563700849221029782962584151954350056927572215246004027016540143697744783917148900624067210069508161787...', 'output': ['8999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6704583818391588725469181550354102907239957098358358841717401300766278881560400090038110916014289948657235584423606594158621824161523469830236380607965385255791396338932174225438170797034425037147862456636103346837327265294351641494623753674273621107344771242622310334986605935646991773638608552637622046669634226820615541845784212711291886281633637512336684846321599254977042239750805332860293274970565739990902560439745089146186062321750856522530810958656665834465619613523446131577586425662419972532205004271...', 'output': ['4444444444444444444444444444444444444444444444444444443333333333333333333333333333333333333333333333333333333333333333333333333333332222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111099999999999999999999999999999999999999999...', '9444444444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333333333333333333333333333333333333222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111199999999999999999999999999999999999999999...']}, {'input': '9689938698889663898863839636966699683986893699339386968338899966338869996936888869663833336868866886386686639839963333996866369633899638368886998389968998699366836388883663893393688389893963669968369396688338969698386338398836839988388898698688996366986968989699663989989698666833338689688393939988989389688683933989888969993363986386998399368636639933366866638686886936996998988399363868338933366966866996963866669896888669699698386869968968863868939688838383896969669866999369969399938388639699888886838393936...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6023899695120557896013140711187680503448138679874588624050077803801854865697769353263222770960826861606106727886113310607069728272963227255389496899919068931344113537068309946879921059042444576366749994436144274847702102456819164989911861327124734838196173853563309843214631874712516961632171049329502507717957033924841978867659693226643101620967990111518453074600938886866941984226547980772170089838147109088768785941748600078140887848218226465026331411736734765922485300427498987217333097493592537246554457873...', 'output}, {'input': '404\\r\\n', 'output': ['440\\r\\n440']}, {'input': '545\\r\\n', 'output': ['545\\r\\n455']}, {'inputoutput': ['5999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '1486913458965407214474383051348880508797108309397132594608042047940314727604051381139181936657952113296264075630972575614980513092531236791260521858939901778974029659858701463047070106689549279462422735787009718900006205995325189656713599230841667711463676680976775990350526357505751432136802865972492235528750512640736169514063847705640465671951212885515298612577866350659145039585877518710392780320811778565480073883045746578885361310463306158402059382132691444825799882582584615455011180820034013186375611788...', 'output}, {'input': '735529000253516066792245888723276479613300890426556306652225805205086728701025634876001325397524812146598588630224764104842665701398105324707149840925039347515712215213069431219974501871104280261909625824309716933706130873817906146976896717670000040952322...', 'output': ['666552222222211111111999999999999999999999999999999999888888888888888888888888888777777777777777777777777777777777777766666666666666666666666666666665555555555555555555555555555555444444444444444444444444444444433333333333333333333333333333332222222222222...']}, {'input': '366006036086560640540664871847076504800540950671092500185010106170000702240791343478023460900266458060030203555013100714501000381575485383858030096600402900030043498189415910634048158764904633057070164811601205632046300331314168080050050942910019130740376...', 'output': ['899999999999999999999999999999999988888888888888888888888888888888888888888888888888877777777777777777777777777777777766666666666666666666666666666666666666666666666666666555555555555555555555555555555555555555555555555555555555444444444444444444444444444...']}, {'input': '398840503220186983858351613394364989756346496319972020357366619510925497280709512558515313910783631554080225450312220220867123106296928778532574514982778097563782084669484471751218108242324646083115319867651232742464770418517086481434481923040543425230711...', 'output': ['999999999999964444444444444444442221111111111199999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777...']}, {'input': '556219385381091894562062792917213155583747364355436296776388781241392748762870516982615288438622614941837395104998625096930886251535989100133828524292005091049090682804800056126385603403183553971728308669803702018434636459247721803006849483898539338877296...', 'output': ['999999999999999999999997777777777777755555599999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777766...']}, {'input': '173042267608258883486037544089768374806165303416008903535641030385308727304340000706408280887350681802183217379667290928603107043070671042098841100500080799400800402428300170096069009156256406580096931402046727400685425912888309210614350249018034050615499...', 'output': ['799999999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666...']}, {'input': '118861818338861138111186886363613831333331881818331683136111381138631888116833136168861816161316863681838318633663311338831883813661338831311113811163818813313861118166386316338631181311863883886688611336163131168686383633686336681336368383888168661316383...', 'output': ['111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111...']}, {'input': '424369443273224402109533159584813753236724119563919158216315260024827143618417153820604496406767510606415982287584601153429743858290968389908888654981242132604820339119568077688773245775414356902898316419529326053782202306127328550709473108685596727932596...', 'output': ['998888888443322999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888877777777777777777777777777777777777777777...']}, {'input': '543721413083809813239312318706938398629902170493143309662249968291503783827973782981262606597857636075415733386608477307347053676935397844623478808206246610558512724971379172127627325363807323453544712388000354227505502390222387456955220186370020272929343...', 'output': ['888888888888888888888888888666666666666664444444444444444444444444444444444444444444444999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '494484798448449989747788899887478488447479778899988849898974898499779777447898874948778778794499878444474897784477748898479874898484847994789498999898748787994944784884889888847948789877898478898884487497949789477948944998979749449744898479849479448748749...', 'output': ['444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444...']}, {'input': '768875493050362262424937630205072183006598021809915666454104470134162800349693910357769388028358344946729753346937512197933136142462916545387568584142708581398089997090179344928312146370284167730332179681068289257480116501796124255236917125164913691526846...', 'output': ['777777777777777777777777777777777777777777777777777774444433333333333333333333333333333333333331111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '618503701470787938430159270700920043088568798752977016268311510308800008568086582227485008027980997407232060729235151582831865427634654532900908045812388957060002147805896304933530052643740213081408722063308301032009235939394742367619160354754787409901009...', 'output': ['099999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '996567508256392907779963976214778662129192439816062498936960032019203150387856989605748530266751236079202974347456861420599870218373801273985387191603240725512328905603233503795409316678681946049868631603016962364319358348789811384392717466779220595109890...', 'output': ['777777777777777777777776666666666666666666666666666666666666666666666666666666444411111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '939909984723040339760855074545615549115883377372734895737632651300822327167836845624954034723005941661159452657730383313625878977889186477527363246401511918354628513480575844734933870789513466048082915952523354891853891047530457067949393965822066701637601...', 'output': ['777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666644444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444111111111111111111111111111111111...']}, {'input': '867796789769879678986997769896698676666876766787778968766677796987786886699977896977678688668766796666688699897666667697777977876996669799999877977789767676768676976978698787988799777689999967887888989698989678677898766866788999698979879678976678797769698...', 'output': ['666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666...']}, {'input': '916997137771085429630725687874174369890412487544818827143895173120546526709636787925442388311150285546126817526142825984127734953914702222648051821815185795367601722202785920095681116817848246108323247682877337175160624702816541056769336565997775375222966...', 'output': ['699999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '640278611768890744362972467683186153338018066222032608050178099280583494673848890684534942718356654651112038204272353262447503068902549948645427176667487998131528312579875125756941475797637403869316145547177628844846624904222223242587580822440302774400370...', 'output': ['666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666444444444444444444444444444444444444444444444444444444444444444444444444442222222222222222222222222222222222...']}, {'input': '207058471595814593142194324287719073695818825353214911377325731777419885265426804186139068893791545956681332655802337587371787565962328522140490893818681477114869046601022698917025419773618574190685184947433584429439334693598519600260463583848863368936627...', 'output': ['666664444444444444444444444422222222222222222222222222111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '883086188908405113764309577466765409198614686963864880628835583426469570579799720463615283727710407986155104364041101447691859506617867062228378469783634726665541047565145542426398439840066265273828267856830426115226809047244485337416242153859046147316013...', 'output': ['999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666666666666666666666666666666666666666666666666666666...']}, {'input': '830535330204204513281271347858954094002009700230995588005129030234553888654250432410001514159091541870713764711606930197882957992183824459644953393772545072268860032022455055250703009355878775165587474735227103796580625721132356809402451990719775209805210...', 'output': ['899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '670458381839158872546918155035410290723995709835835884171740130076627888156040009003811091601428994865723558442360659415862182416152346983023638060796538525579139633893217422543817079703442503714786245663610334683732726529435164149462375367427362110734477...', 'output': ['444444444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333333333333333333333333333333333333222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222211...']}, {'input': '968993869888966389886383963696669968398689369933938696833889996633886999693688886966383333686886688638668663983996333399686636963389963836888699838996899869936683638888366389339368838989396366996836939668833896969838633839883683998838889869868899636698696...', 'output': ['333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333...']}, {'input': '602389969512055789601314071118768050344813867987458862405007780380185486569776935326322277096082686160610672788611331060706972827296322725538949689991906893134411353706830994687992105904244457636674999443614427484770210245681916498991186132712473483819617...', 'output': ['999999999999999999999988888888888888888888888888888888888888888888888888888888888888888884444444444444444444444444444444444444444444444444444444444444444444444444433333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333...']}, {'input': '909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909...', 'output': ['599999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '126254092095959027850416433832655426981078106611255074552648515499659121878087190358961591096171231715312122879634738062251247629492483043125748065235158236635181790420183641430917548189219521011748435487445986824532619160561716073648857875108255827252014...', 'output': ['888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888884444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444...']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  string s;\n  cin >> s;\n  int n = s.size();\n  int cnt[10] = {0};\n  for (int i = 0; i < n; i++) cnt[s[i] - '0']++;\n  int mx = 0;\n  for (int i = 0; i < 10; i++) mx = max(mx, cnt[i]);\n  int cnt1[10] = {0};\n  for (int i = 0; i < 10; i++) cnt1[i] = cnt[i];\n  int cnt2[10] = {0};\n  for (int i = 0; i < 10; i++) cnt2[i] = cnt[i];\n  for (int i = 0; i < n; i++) {\n    if (cnt1[s[i] - '0'] == mx) {\n      cnt1[s[i] - '0']--;\n      cnt2[s[i] - '0']++;\n    }\n  }\n  for (int i = 0; i < 10; i++) {\n    for (int j = 0; j < cnt1[i]; j++) cout << i;\n  }\n  cout << endl;\n  for (int i = 0; i < 10; i++) {\n    for (int j = 0; j < cnt2[i]; j++) cout << i;\n  }\n  cout << endl;\n  return 0;\n}\n"}
{"src_uid": "a17bac596b1f060209534cbffdf0f40e", "id": 39, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 1\\r\\nday\\r\\nmay\\r\\nsun\\r\\nfun\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\nday\\r\\nmay\\r\\ngray\\r\\nway\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '2 1\\r\\nday\\r\\nmay\\r\\nsun\\r\\nfun\\r\\ntest\\r\\nhill\\r\\nfest\\r\\nthrill\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 5\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nrezwbgy\\r\\nxakgmv\\r\\njogezwbgy\\r\\napezwbgy\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\nnuqfxwrb\\r\\napqfkw\\r\\nuqfxwrb\\r\\nnhcuqfxwrb\\r\\nogkznwncmt\\r\\nevf\\r\\nogkznwncmt\\r\\nogkznwncmt\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\naawjvkxx\\r\\nawjvkxx\\r\\nxawjvkxx\\r\\nawjvkxx\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '2 2\\r\\nrhcujgxabk\\r\\nnjgdqpurul\\r\\nueoedt\\r\\ncpcfhbyvo\\r\\nzmfwnieog\\r\\npkpylassbf\\r\\nhrfeod\\r\\ncdwuil\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\nol\\r\\nol\\r\\nol\\r\\nzol\\r\\nek\\r\\nek\\r\\nek\\r\\nqek\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '3 2\\r\\nexdaoao\\r\\nrdwunurp\\r\\ndunurp\\r\\ntyqzuxao\\r\\ndupocgsps\\r\\nzsiravcm\\r\\nnqiravcm\\r\\nlnupocgsps\\r\\niwashk\\r\\neepkqcykbv\\r\\nyviwashk\\r\\neepkqcykbv\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\ndaihacbnhgfts\\r\\nsqihpntjvczkw\\r\\nmihpntjvczkw\\r\\nvyacbnhgfts\\r\\ntsvovdpqajmgvcj\\r\\ncexqkwrvctomb\\r\\njxbomb\\r\\ngnpajmgvcj\\r\\n', 'output': ['abba\\r\\n']}, {'input': '3 2\\r\\netba\\r\\ntfecetba\\r\\nzkitbgcuuy\\r\\nuuy\\r\\nbuxeoi\\r\\nmekxoi\\r\\nblviwoehy\\r\\niwoehy\\r\\njyfpaqntiz\\r\\nqvaqntiz\\r\\nhciak\\r\\niak\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '4 3\\r\\niixxiojrrdytjcbkvymw\\r\\nbjqixxiojrrdytjcbkvymw\\r\\nogjixxiojrrdytjcbkvymw\\r\\nevixxpfxpgicpg\\r\\njkotitixiughfhphliuurx\\r\\ngyubkqtonejprfjzvqxbdpn\\r\\ndpudxfoqnhekjytbwiuurx\\r\\noubkqtonejprfjzvqxbdpn\\r\\npgzaendrxjhsfzjmijv\\r\\npomuaendrxjhsfzjmijv\\r\\nafyuyxueaendrxjhsfzjmijv\\r\\naendrxjhsfzjmijv\\r\\nyubweicj\\r\\ntbnsuxqigmxdfnmbipubweicj\\r\\nfuftydlmoo\\r\\nmdkuftydlmoo\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 2\\r\\nqurcmcbxyoddgyyccsmb\\r\\nlsdzsqoa\\r\\neurcmcbxyoddgyyccsmb\\r\\noa\\r\\nutyxmdhcvaclynmstwsx\\r\\nmkyycelbmkmdrilmbvr\\r\\nutyxmdhcvaclynmstwsx\\r\\nrduyelbmkmdrilmbvr\\r\\nhmguhvqswwciowwgu\\r\\nnoe\\r\\nzmyncuwrowwgu\\r\\nqrhymghavvbmigzsjoe\\r\\nbvofhknbzusykztlxwms\\r\\nbpbfmvjaimkdeddy\\r\\neofhknbzusykztlxwms\\r\\nmhivpkxkpazimkdeddy\\r\\negvywnhmfngllaknmn\\r\\nmblkvhenlggoftwjgk\\r\\nzegvywnhmfngllaknmn\\r\\ngrdenlggoftwjgk\\r\\n', 'output': ['abab\\r\\n']}, {'input': '7 3\\r\\nferwljzwakxedlgwl\\r\\noerwljzwakxedlgwl\\r\\nhyqombizhuhxedprb\\r\\netptjrizhuhxedprb\\r\\nurtuckar\\r\\ndkartmwramklcmi\\r\\nrurtuckar\\r\\nnurartmwramklcmi\\r\\niraziomsv\\r\\nsaziomsv\\r\\nbprapiqpayzurgij\\r\\nusyemayzurgij\\r\\nztstmeecvmkvuu\\r\\nquexlecvmkvuu\\r\\nrlhwecvmkvuu\\r\\nzecvmkvuu\\r\\niikymgbncljtub\\r\\nqiikymgbncljtub\\r\\nbcavhexqamyszgfya\\r\\nojexqamyszgfya\\r\\nieyxqinjinjv\\r\\nxtiudieyxqinjinjv\\r\\nthtceyxqinjinjv\\r\\nmuneyxqinjinjv\\r\\nwreae\\r\\nqylcjhjzfhteae\\r\\nozcjthgyuchqo\\r\\nfcjozcjthgyuchqo\\r\\n', 'output': ['NO\\r\\n']}, {'input': '16 1\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\nu\\r\\ni\\r\\ni\\r\\no\\r\\na\\r\\na\\r\\no\\r\\na\\r\\ni\\r\\na\\r\\na\\r\\ni\\r\\ni\\r\\no\\r\\no\\r\\ni\\r\\ni\\r\\ni\\r\\ni\\r\\nu\\r\\nu\\r\\nu\\r\\nu\\r\\no\\r\\ne\\r\\ne\\r\\ne\\r\\no\\r\\ni\\r\\no\\r\\ni\\r\\na\\r\\na\\r\\na\\r\\na\\r\\nu\\r\\no\\r\\no\\r\\nu\\r\\ni\\r\\no\\r\\no\\r\\ni\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\no\\r\\na\\r\\na\\r\\nu\\r\\na\\r\\nu\\r\\nu\\r\\n', 'output': ['NO\\r\\n']}, {'input': '16 1\\r\\neb\\r\\neb\\r\\nfe\\r\\nce\\r\\ner\\r\\ner\\r\\new\\r\\new\\r\\nu\\r\\ncu\\r\\nu\\r\\nu\\r\\nud\\r\\nik\\r\\nud\\r\\nik\\r\\nve\\r\\niw\\r\\niw\\r\\nne\\r\\nel\\r\\nob\\r\\nel\\r\\nob\\r\\no\\r\\neo\\r\\no\\r\\nyo\\r\\nav\\r\\nav\\r\\nei\\r\\nmi\\r\\nu\\r\\noh\\r\\noh\\r\\nzu\\r\\niw\\r\\niw\\r\\na\\r\\nma\\r\\ni\\r\\nu\\r\\nku\\r\\ngi\\r\\nac\\r\\no\\r\\no\\r\\nac\\r\\ni\\r\\ner\\r\\nai\\r\\ner\\r\\nyu\\r\\nuf\\r\\nuf\\r\\nhu\\r\\nef\\r\\nef\\r\\nef\\r\\nef\\r\\nmu\\r\\nu\\r\\nqe\\r\\nie\\r\\n', 'output': ['NO\\r\\n']}, {'input': '25 1\\r\\nw\\r\\ni\\r\\nv\\r\\nx\\r\\nh\\r\\ns\\r\\nz\\r\\ny\\r\\no\\r\\nn\\r\\nh\\r\\ni\\r\\nf\\r\\nf\\r\\ny\\r\\nr\\r\\nb\\r\\nu\\r\\no\\r\\np\\r\\nz\\r\\nh\\r\\nt\\r\\no\\r\\nw\\r\\nx\\r\\nh\\r\\no\\r\\nj\\r\\ny\\r\\nw\\r\\nj\\r\\ny\\r\\nh\\r\\nh\\r\\nr\\r\\ns\\r\\nb\\r\\ny\\r\\nr\\r\\nw\\r\\no\\r\\nl\\r\\nl\\r\\nh\\r\\nh\\r\\nw\\r\\nu\\r\\na\\r\\nv\\r\\no\\r\\nx\\r\\nd\\r\\nw\\r\\nc\\r\\nf\\r\\ni\\r\\ne\\r\\nj\\r\\nq\\r\\nk\\r\\na\\r\\ne\\r\\nl\\r\\nw\\r\\nm\\r\\nf\\r\\na\\r\\nc\\r\\na\\r\\nb\\r\\nf\\r\\nj\\r\\nb\\r\\nx\\r\\ni\\r\\nx\\r\\ne\\r\\nu\\r\\nh\\r\\nm\\r\\no\\r\\ni\\r\\nq\\r\\nm\\r\\nk\\r\\nn\\r\\nd\\r\\nl\\r\\np\\r\\nc\\r\\nw\\r\\nu\\r\\nz\\r\\nc\\r\\nk\\r\\ng\\r\\ny\\r\\nj\\r\\ny\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\ne\\r\\ne\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\na\\r\\ne\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\na\\r\\ne\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\ne\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\ne\\r\\na\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\ne\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['aaaa\\r\\n']}, {'input': '1 2\\r\\neraub\\r\\nbee\\r\\naab\\r\\nttbee\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\ny\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 2\\r\\neeereaatktb\\r\\nbee\\r\\niaattb\\r\\nottbee\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nab\\r\\nac\\r\\nad\\r\\naf\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nar\\r\\nat\\r\\nay\\r\\naw\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ni\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\na\\r\\ne\\r\\na\\r\\ne\\r\\n', 'output': ['abab\\r\\n']}, {'input': '1 1\\r\\nabbbbbbbbbbbbbbbbcbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbfbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbxbbbbbbbbbbbbbbbb\\r\\nabbbbbbbbbbbbbbbbdbbbbbbbbbbbbbbbb\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['abba\\r\\n']}, {'input': '1 1\\r\\nbug\\r\\nsuy\\r\\nluh\\r\\ngut\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nam\\r\\nat\\r\\nan\\r\\nag\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\ne\\r\\ne\\r\\na\\r\\na\\r\\na\\r\\na\\r\\n', 'output': ['aabb\\r\\n']}, {'input': '1 4\\r\\naieoabcd\\r\\naeioabcd\\r\\naoeiabcd\\r\\naoieabcd\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 2\\r\\naec\\r\\naed\\r\\naek\\r\\naem\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1 1\\r\\nar\\r\\nab\\r\\nak\\r\\naz\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1\\r\\na\\r\\na\\r\\na\\r\\na\\r\\na\\r\\nb\\r\\nb\\r\\nb\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, k;\nstring s[4];\nint cnt[4];\nint main() {\n  cin >> n >> k;\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < 4; j++) {\n      cin >> s[j];\n      cnt[j] = 0;\n      for (int l = s[j].size() - 1; l >= 0; l--) {\n        if (s[j][l] == 'a' || s[j][l] == 'e' || s[j][l] == 'i' ||\n            s[j][l] == 'o' || s[j][l] == 'u') {\n          cnt[j]++;\n          if (cnt[j] == k) break;\n        }\n      }\n    }\n    if (cnt[0]!= cnt[1] || cnt[0]!= cnt[2] || cnt[0]!= cnt[3]) {\n      cout << \"NO\" << endl;\n      return 0;\n    }\n    if (s[0].substr(s[0].size() - cnt[0], cnt[0]) ==\n        s[1].substr(s[1].size() - cnt[1], cnt[1]) &&\n        s[0].substr(s[0].size() - cnt[0], cnt[0]) ==\n            s[2].substr(s[2].size() - cnt[2], cnt[2]) &&\n        s[0].substr(s[0].size() - cnt[0], cnt[0]) ==\n            s[3].substr(s[3].size() - cnt[3], cnt[3])) {\n      if (cnt[0] == s[0].size()) {\n        cout << \"aaaa\" << endl;\n        return 0;\n      }\n      if (s[0].substr(s[0].size() - cnt[0], cnt[0]) ==\n          s[1].substr(s[1].size() - cnt[1], cnt[1])) {\n        cout << \"aabb\" << endl;\n        return 0;\n      }\n      if (s[0].substr(s[0].size() - cnt[0], cnt[0]) ==\n          s[2].substr(s[2].size() - cnt[2], cnt[2])) {\n        cout << \"abab\" << endl;\n        return 0;\n      }\n      if (s[0].substr(s[0].size() - cnt[0], cnt[0]) ==\n          s[3].substr(s[3].size() - cnt[3], cnt[3])) {\n        cout << \"abba\" << endl;\n        return 0;\n      }\n    }\n  }\n  cout << \"NO\" << endl;\n  return 0;\n}\n"}
{"src_uid": "7adb8bf6879925955bf187c3d05fde8c", "id": 40, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1800, "testcases": "[{'input': '1 3\\r\\n', 'output': ['0.50000000000000000', '0.500000000', '0.5', '0.5000000000']}, {'input': '5 5\\r\\n', 'output': ['0.65873015873015872', '0.65873015873', '0.6587301587301587', '0.658730159', '0.6587301587']}, {'input': '100 100\\r\\n', 'output': ['0.666295063', '0.66629506318483356', '0.666295063185', '0.6662950632', '0.6662950631848336']}, {'input': '100 1\\r\\n', 'output': ['0.990099010', '0.99009900990099009', '0.990099009901', '0.9900990099', '0.9900990099009901']}, {'input': '1 100\\r\\n', 'output': ['0.3366336634', '0.336633663', '0.336633663366', '0.33663366336633649', '0.3366336633663366', '0.3366336633663367']}, {'input': '67 420\\r\\n', 'output': ['0.5368972272908603', '0.5368972272908604', '0.5368972273', '0.536897227291', '0.53689722729086042', '0.536897227']}, {'input': '0 1000\\r\\n', 'output': ['0.0000000000', '0', '0.00000000000000000', '0.0', '0.000000000']}, {'input': '1000 0\\r\\n', 'output': ['1.00000000000000000', '1', '1.000000000', '1.0', '1.0000000000']}, {'input': '0 0\\r\\n', 'output': ['0.0000000000', '0', '0.00000000000000000', '0.0', '0.000000000']}, {'input': '1000 1000\\r\\n', 'output': ['0.666629617285', '0.66662961728533077', '0.6666296173', '0.666629617', '0.6666296172853308']}, {'input': '32 1000\\r\\n', 'output': ['0.5078702016771944', '0.507870202', '0.507870201677', '0.5078702017', '0.5078702016771942', '0.50787020167719410']}, {'input': '581 406\\r\\n', 'output': ['0.7084553684', '0.7084553684006947', '0.708455368401', '0.7084553684006948', '0.708455368', '0.70845536840069478']}, {'input': '459 52\\r\\n', 'output': ['0.907503321894', '0.907503322', '0.90750332189447191', '0.9075033218944719', '0.9075033219']}, {'input': '900 853\\r\\n', 'output': ['0.6726350392594106', '0.672635039259', '0.672635039', '0.6726350393', '0.67263503925941059']}, {'input': '778 218\\r\\n', 'output': ['0.8203333918681067', '0.8203333919', '0.820333391868', '0.82033339186810672', '0.820333392']}, {'input': '219 20\\r\\n', 'output': ['0.9225253192', '0.922525319170874', '0.922525319', '0.922525319171', '0.92252531917087399']}, {'input': '815 665\\r\\n', 'output': ['0.689921744986', '0.6899217450', '0.689921745', '0.6899217449860069', '0.68992174498600689']}, {'input': '773 467\\r\\n', 'output': ['0.726347986720404', '0.72634798672', '0.726347987', '0.7263479867', '0.72634798672040402']}, {'input': '215 269\\r\\n', 'output': ['0.6426266719', '0.642626671934', '0.642626672', '0.6426266719343681', '0.64262667193436807']}, {'input': '93 633\\r\\n', 'output': ['0.534192877', '0.5341928774', '0.534192877408', '0.53419287740827071', '0.5341928774082707']}, {'input': '267 270\\r\\n', 'output': ['0.665290172151', '0.665290172', '0.66529017215098862', '0.6652901721509885', '0.6652901722']}, {'input': '226 72\\r\\n', 'output': ['0.8050825614', '0.805082561415', '0.805082561', '0.80508256141467871', '0.8050825614146787']}, {'input': '666 436\\r\\n', 'output': ['0.71643507071908719', '0.716435071', '0.716435070719', '0.7164350707', '0.7164350707190872']}, {'input': '544 519\\r\\n', 'output': ['0.67186290453', '0.6718629045300779', '0.67186290453007791', '0.6718629045300778', '0.6718629045', '0.671862905']}, {'input': '141 883\\r\\n', 'output': ['0.536951106658', '0.53695110665839563', '0.5369511066583957', '0.536951107', '0.5369511067', '0.5369511066583955']}, {'input': '581 685\\r\\n', 'output': ['0.6488443851199316', '0.648844385', '0.64884438511993159', '0.6488443851', '0.6488443851199317', '0.64884438512']}, {'input': '459 487\\r\\n', 'output': ['0.660077509985', '0.660077509985014', '0.660077510', '0.66007750998501402', '0.6600775100']}, {'input': '980 133\\r\\n', 'output': ['0.89319092020478941', '0.8931909202', '0.8931909202047894', '0.893190920', '0.893190920205']}, {'input': '858 934\\r\\n', 'output': ['0.65733386720916775', '0.6573338672', '0.657333867209', '0.657333867', '0.6573338672091678']}, {'input': '455 299\\r\\n', 'output': ['0.7159327199974443', '0.7159327200', '0.715932720', '0.7159327199974445', '0.71593271999744446', '0.715932719997']}, {'input': '962 35\\r\\n', 'output': ['0.966054554', '0.96605455396450646', '0.9660545539645065', '0.966054553965', '0.9660545540']}, {'input': '840 837\\r\\n', 'output': ['0.6670201719', '0.6670201719431644', '0.667020172', '0.66702017194316443', '0.667020171943', '0.6670201719431645']}, {'input': '1000 483\\r\\n', 'output': ['0.75425988826697099', '0.7542598882669711', '0.754259888267', '0.754259888266971', '0.7542598883', '0.754259888']}, {'input': '958 285\\r\\n', 'output': ['0.81340504954416115', '0.813405050', '0.8134050495', '0.813405049544', '0.8134050495441612']}, {'input': '399 649\\r\\n', 'output': ['0.617507391', '0.617507391371', '0.61750739137083666', '0.6175073914', '0.6175073913708367']}, {'input': '277 451\\r\\n', 'output': ['0.61739616069488457', '0.617396161', '0.6173961607', '0.617396160695', '0.6173961606948846']}, {'input': '155 534\\r\\n', 'output': ['0.563323504', '0.5633235039', '0.56332350392237707', '0.5633235039223771', '0.563323503922', '0.563323503922377']}, {'input': '315 898\\r\\n', 'output': ['0.57457911437025666', '0.574579114', '0.5745791144', '0.57457911437', '0.5745791143702565']}, {'input': '193 700\\r\\n', 'output': ['0.5605440989561413', '0.5605440989561412', '0.560544099', '0.56054409895614132', '0.560544098956', '0.5605440990']}, {'input': '713 65\\r\\n', 'output': ['0.9228168302093307', '0.922816830209', '0.9228168302', '0.922816830', '0.92281683020933070']}, {'input': '377 720\\r\\n', 'output': ['0.60369716809047824', '0.603697168', '0.6036971681', '0.6036971680904782', '0.60369716809', '0.6036971680904784']}, {'input': '817 522\\r\\n', 'output': ['0.7194394264554227', '0.719439426', '0.7194394265', '0.71943942645542269', '0.719439426455']}, {'input': '695 168\\r\\n', 'output': ['0.8369446556', '0.836944655612', '0.836944656', '0.8369446556124126', '0.83694465561241260']}, {'input': '574 969\\r\\n', 'output': ['0.61421649332134520', '0.6142164933213452', '0.6142164933', '0.614216493321', '0.614216493']}, {'input': '95 334\\r\\n', 'output': ['0.5621827921', '0.562182792', '0.56218279214960909', '0.562182792149609', '0.56218279215']}, {'input': '691 417\\r\\n', 'output': ['0.726476058', '0.726476058107', '0.72647605810741833', '0.7264760581', '0.7264760581074183']}, {'input': '132 781\\r\\n', 'output': ['0.53893982877953017', '0.53893982878', '0.538939829', '0.5389398287795302', '0.5389398288']}, {'input': '10 583\\r\\n', 'output': ['0.5042409294514335', '0.504240929', '0.504240929451434', '0.504240929451', '0.5042409295', '0.50424092945143373']}, {'input': '888 385\\r\\n', 'output': ['0.767717438', '0.7677174382', '0.767717438191', '0.76771743819087279', '0.7677174381908728']}, {'input': '329 31\\r\\n', 'output': ['0.9205443823', '0.92054438231593871', '0.920544382', '0.9205443823159387', '0.920544382316']}, {'input': '73 405\\r\\n', 'output': ['0.541293398', '0.5412933980482019', '0.541293398048', '0.5412933980', '0.54129339804820187', '0.541293398048202']}, {'input': '513 488\\r\\n', 'output': ['0.6721873792029164', '0.672187379203', '0.67218737920291638', '0.672187379', '0.6721873792', '0.6721873792029165']}, {'input': '391 852\\r\\n', 'output': ['0.593281183103', '0.593281183', '0.59328118310294298', '0.593281183102943', '0.5932811831', '0.5932811831029428']}, {'input': '551 654\\r\\n', 'output': ['0.6481418383312834', '0.6481418383', '0.648141838', '0.64814183833128336', '0.648141838331']}, {'input': '429 19\\r\\n', 'output': ['0.95923426755053587', '0.959234268', '0.959234267551', '0.9592342675505359', '0.9592342676']}, {'input': '387 102\\r\\n', 'output': ['0.8272193027', '0.827219302673', '0.82721930267281030', '0.8272193026728103', '0.827219303']}, {'input': '827 466\\r\\n', 'output': ['0.73500588145506107', '0.735005881', '0.735005881455', '0.7350058814550611', '0.7350058815']}, {'input': '705 268\\r\\n', 'output': ['0.78394613169627603', '0.783946131696276', '0.7839461317', '0.783946132', '0.783946131696']}, {'input': '864 70\\r\\n', 'output': ['0.930218970', '0.9302189702459666', '0.9302189702', '0.93021897024596656', '0.930218970246']}, {'input': '743 715\\r\\n', 'output': ['0.670910005048', '0.670910005', '0.6709100050', '0.67091000504834808', '0.6709100050483481']}, {'input': '50 372\\r\\n', 'output': ['0.5314489794456663', '0.53144897944566638', '0.5314489794456665', '0.5314489794', '0.531448979446', '0.531448979']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int w, b;\n  cin >> w >> b;\n  double ans = 0;\n  for (int i = 0; i <= w; i++) {\n    double p = 1;\n    for (int j = 0; j < i; j++) {\n      p *= b;\n      b--;\n    }\n    for (int j = 0; j < w - i; j++) {\n      p *= (b + 1);\n      b--;\n    }\n    ans += p;\n  }\n  cout << fixed << setprecision(10) << ans / (w + 1) << endl;\n  return 0;\n}\n"}
{"src_uid": "c761bb69cf1b5a3dbe38d9f5c46e9007", "id": 41, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '1 1\\r\\n+1\\r\\n', 'output': ['Truth\\r\\n']}, {'input': '3 2\\r\\n-1\\r\\n-2\\r\\n-3\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '4 1\\r\\n+2\\r\\n-3\\r\\n+4\\r\\n-1\\r\\n', 'output': ['Lie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\n']}, {'input': '1 0\\r\\n-1\\r\\n', 'output': ['Lie\\r\\n']}, {'input': '2 2\\r\\n+1\\r\\n+1\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\n']}, {'input': '2 1\\r\\n+2\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\n']}, {'input': '2 0\\r\\n-2\\r\\n-2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\n']}, {'input': '3 1\\r\\n+2\\r\\n+3\\r\\n+3\\r\\n', 'output': ['Truth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '6 3\\r\\n+5\\r\\n+5\\r\\n+5\\r\\n+1\\r\\n+1\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '4 3\\r\\n-4\\r\\n-3\\r\\n-1\\r\\n-3\\r\\n', 'output': ['Not defined\\r\\nTruth\\r\\nNot defined\\r\\nTruth\\r\\n']}, {'input': '10 4\\r\\n-8\\r\\n+1\\r\\n-6\\r\\n-10\\r\\n+5\\r\\n-6\\r\\n-8\\r\\n-8\\r\\n-4\\r\\n-8\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-4\\r\\n+4\\r\\n+4\\r\\n-9\\r\\n-9\\r\\n-4\\r\\n-4\\r\\n+2\\r\\n-9\\r\\n-4\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '7 2\\r\\n+5\\r\\n+5\\r\\n+5\\r\\n-2\\r\\n+1\\r\\n-5\\r\\n-6\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\n']}, {'input': '7 4\\r\\n+7\\r\\n-3\\r\\n-3\\r\\n-4\\r\\n+3\\r\\n+3\\r\\n+3\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '6 3\\r\\n-6\\r\\n-1\\r\\n+5\\r\\n+1\\r\\n+6\\r\\n+1\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\n']}, {'input': '5 3\\r\\n-2\\r\\n+2\\r\\n+2\\r\\n-3\\r\\n+5\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\n']}, {'input': '3 0\\r\\n-2\\r\\n-2\\r\\n-2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '5 3\\r\\n-1\\r\\n-1\\r\\n-4\\r\\n+1\\r\\n-4\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '9 6\\r\\n+2\\r\\n+7\\r\\n+7\\r\\n-1\\r\\n-4\\r\\n+7\\r\\n-7\\r\\n+7\\r\\n+5\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '43 18\\r\\n-14\\r\\n-28\\r\\n+16\\r\\n+10\\r\\n+25\\r\\n-30\\r\\n+25\\r\\n+30\\r\\n+25\\r\\n+25\\r\\n+25\\r\\n+25\\r\\n-25\\r\\n+22\\r\\n+3\\r\\n-17\\r\\n+16\\r\\n-25\\r\\n+10\\r\\n+14\\r\\n+41\\r\\n+25\\r\\n-25\\r\\n+33\\r\\n+24\\r\\n-23\\r\\n-25\\r\\n+25\\r\\n-22\\r\\n+29\\r\\n+28\\r\\n-25\\r\\n-25\\r\\n-29\\r\\n+11\\r\\n+26\\r\\n-25\\r\\n+25\\r\\n+10\\r\\n+1\\r\\n-20\\r\\n-17\\r\\n+23\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '28 12\\r\\n+10\\r\\n-7\\r\\n+17\\r\\n-20\\r\\n+7\\r\\n-7\\r\\n+13\\r\\n-21\\r\\n-7\\r\\n-7\\r\\n-18\\r\\n+7\\r\\n+7\\r\\n+3\\r\\n+6\\r\\n+14\\r\\n+7\\r\\n-24\\r\\n-21\\r\\n-7\\r\\n-7\\r\\n+4\\r\\n+7\\r\\n-7\\r\\n+21\\r\\n-7\\r\\n-26\\r\\n+7\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '17 9\\r\\n-6\\r\\n+16\\r\\n+5\\r\\n+16\\r\\n-17\\r\\n+17\\r\\n-11\\r\\n+5\\r\\n+14\\r\\n+5\\r\\n-8\\r\\n-5\\r\\n+6\\r\\n-2\\r\\n-11\\r\\n+4\\r\\n+17\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '14 3\\r\\n+14\\r\\n+12\\r\\n-9\\r\\n+9\\r\\n-9\\r\\n-9\\r\\n+8\\r\\n+9\\r\\n+2\\r\\n+1\\r\\n-13\\r\\n-9\\r\\n+13\\r\\n+3\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n-9\\r\\n-8\\r\\n-5\\r\\n-9\\r\\n-7\\r\\n-9\\r\\n-9\\r\\n-9\\r\\n-4\\r\\n-9\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-5\\r\\n-1\\r\\n+10\\r\\n-3\\r\\n-10\\r\\n-9\\r\\n-10\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-2\\r\\n-2\\r\\n-6\\r\\n-7\\r\\n-3\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 6\\r\\n-9\\r\\n-7\\r\\n-5\\r\\n-5\\r\\n-4\\r\\n-2\\r\\n-8\\r\\n-5\\r\\n-5\\r\\n-9\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 4\\r\\n-8\\r\\n-2\\r\\n-8\\r\\n+1\\r\\n-4\\r\\n-8\\r\\n-2\\r\\n-8\\r\\n-8\\r\\n-1\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 2\\r\\n-8\\r\\n+10\\r\\n+1\\r\\n+8\\r\\n+4\\r\\n+8\\r\\n+6\\r\\n-8\\r\\n+10\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 3\\r\\n+9\\r\\n+3\\r\\n+8\\r\\n+3\\r\\n+6\\r\\n-3\\r\\n+6\\r\\n+8\\r\\n+3\\r\\n+7\\r\\n', 'output': ['Lie\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\n']}, {'input': '10 8\\r\\n-2\\r\\n+9\\r\\n+9\\r\\n-4\\r\\n+9\\r\\n+9\\r\\n+4\\r\\n-9\\r\\n-3\\r\\n+9\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 7\\r\\n-4\\r\\n+6\\r\\n+4\\r\\n+9\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n+3\\r\\n+5\\r\\n+6\\r\\n+10\\r\\n+5\\r\\n+5\\r\\n+6\\r\\n+8\\r\\n+5\\r\\n+6\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 7\\r\\n-6\\r\\n-10\\r\\n-3\\r\\n-1\\r\\n-3\\r\\n-7\\r\\n-2\\r\\n-7\\r\\n-7\\r\\n-3\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '10 5\\r\\n-4\\r\\n-4\\r\\n-1\\r\\n-5\\r\\n-7\\r\\n-4\\r\\n-4\\r\\n-4\\r\\n-1\\r\\n-7\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 5\\r\\n-9\\r\\n-7\\r\\n-6\\r\\n-3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-8\\r\\n-4\\r\\n-10\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-8\\r\\n-8\\r\\n-4\\r\\n-9\\r\\n-10\\r\\n-2\\r\\n-9\\r\\n-8\\r\\n-8\\r\\n-8\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n+7\\r\\n+8\\r\\n+9\\r\\n+1\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+6\\r\\n+6\\r\\n+7\\r\\n', 'output': ['Truth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 5\\r\\n+2\\r\\n+2\\r\\n+2\\r\\n+2\\r\\n+9\\r\\n+10\\r\\n+8\\r\\n+7\\r\\n+4\\r\\n+2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 9\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+5\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 3\\r\\n+10\\r\\n+2\\r\\n+10\\r\\n+9\\r\\n+1\\r\\n+9\\r\\n+4\\r\\n+9\\r\\n+3\\r\\n+2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 6\\r\\n+10\\r\\n+10\\r\\n+10\\r\\n+3\\r\\n+10\\r\\n+10\\r\\n+6\\r\\n+6\\r\\n+10\\r\\n+8\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '3 2\\r\\n-1\\r\\n+2\\r\\n+3\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m;\nint a[100005];\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  for (int i = 1; i <= n; i++) {\n    char c;\n    int x;\n    scanf(\" %c%d\", &c, &x);\n    if (c == '+')\n      a[x]++;\n    else\n      a[x]--;\n  }\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == m)\n      printf(\"Truth\\n\");\n    else if (a[i] == n - m)\n      printf(\"Lie\\n\");\n    else\n      printf(\"Not defined\\n\");\n  }\n  return 0;\n}\n"}
{"src_uid": "f71d1ffcea72f5b72ead3c0bcfa323f2", "id": 42, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': '41\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '2\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + eax]\\r\\n']}, {'input': '4\\r\\n', 'output': ['1\\r\\nlea ebx, [4*eax]\\r\\n']}, {'input': '6\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\n']}, {'input': '5\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 4*eax]\\r\\n']}, {'input': '14\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '15\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\n']}, {'input': '17\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\n']}, {'input': '7\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\n']}, {'input': '3\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 2*eax]\\r\\n']}, {'input': '16\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '58\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '1\\r\\n', 'output': ['0\\r\\n']}, {'input': '8\\r\\n', 'output': ['1\\r\\nlea ebx, [8*eax]\\r\\n']}, {'input': '9\\r\\n', 'output': ['1\\r\\nlea ebx, [eax + 8*eax]\\r\\n']}, {'input': '10\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\n']}, {'input': '11\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\n']}, {'input': '12\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '13\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\n']}, {'input': '254\\r\\n', 'output': ['5\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\nlea efx, [eex + 2*eax]\\r\\n']}, {'input': '197\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '210\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '109\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '233\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '220\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '167\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '63\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\n']}, {'input': '171\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '126\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '223\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '46\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '207\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '202\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '216\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '138\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '106\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '74\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '129\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '191\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '67\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '42\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '104\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '235\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '240\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '116\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '57\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '200\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '28\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '54\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\n']}, {'input': '51\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '44\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '147\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '82\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '113\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '176\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '66\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '118\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '158\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [eax + 4*ebx]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '184\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '172\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '94\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '221\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 4*edx]\\r\\n']}, {'input': '100\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '139\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '187\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '192\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '130\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '244\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '115\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '59\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '183\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '120\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '251\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '189\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '47\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '204\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '194\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '135\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '70\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '69\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '144\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '141\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '159\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '149\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '173\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '90\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\n']}, {'input': '253\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '125\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '174\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 8*ebx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '26\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '157\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '179\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '84\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '188\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '24\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '205\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '49\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '136\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '225\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '215\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '153\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*ebx]\\r\\n']}, {'input': '143\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '248\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '219\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '226\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '80\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '255\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '25\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\n']}, {'input': '228\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '148\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '134\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '98\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '114\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '91\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '218\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '55\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '214\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '237\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 2*ebx]\\r\\n']}, {'input': '152\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '155\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '166\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '201\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '193\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '36\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '185\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '86\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '230\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '208\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '145\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '209\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 8*edx]\\r\\n']}, {'input': '83\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '40\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '76\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '31\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '87\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '50\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '79\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '92\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '236\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '30\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '96\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '56\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '45\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\n']}, {'input': '60\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '127\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '48\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '65\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '112\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '61\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '75\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '101\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '232\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '224\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [8*edx]\\r\\n']}, {'input': '213\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [eax + 4*edx]\\r\\n']}, {'input': '131\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '119\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '107\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '62\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '128\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '196\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '234\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 8*ebx]\\r\\n']}, {'input': '18\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\n']}, {'input': '217\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '32\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '175\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [ebx + 2*edx]\\r\\n']}, {'input': '198\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 4*ebx]\\r\\n']}, {'input': '77\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '35\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '29\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\n']}, {'input': '19\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\n']}, {'input': '39\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '85\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '111\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '247\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '161\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '68\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '117\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 4*ebx]\\r\\n']}, {'input': '239\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '156\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '199\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '78\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '227\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '160\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '180\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '142\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '181\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '103\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '95\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\n']}, {'input': '99\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\n']}, {'input': '34\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '250\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 4*edx]\\r\\n']}, {'input': '89\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '137\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '252\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + ebx]\\r\\n']}, {'input': '168\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '110\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '52\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '246\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '178\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [edx + edx]\\r\\n']}, {'input': '211\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\nlea eex, [eax + 2*edx]\\r\\n']}, {'input': '27\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\n']}, {'input': '105\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*eax]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '43\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\n']}, {'input': '73\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\n']}, {'input': '124\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '121\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [eax + 8*ecx]\\r\\n']}, {'input': '133\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '162\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '20\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [4*ebx]\\r\\n']}, {'input': '102\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + ecx]\\r\\n']}, {'input': '154\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 8*ebx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '165\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\n']}, {'input': '72\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '33\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '238\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '182\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [eax + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '140\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '242\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 2*ecx]\\r\\nlea eex, [ecx + 8*edx]\\r\\n']}, {'input': '212\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [4*edx]\\r\\n']}, {'input': '245\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\nlea eex, [edx + 2*eax]\\r\\n']}, {'input': '164\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '195\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '241\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '108\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}, {'input': '81\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\n']}, {'input': '21\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '186\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '243\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '22\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\n']}, {'input': '53\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\n']}, {'input': '151\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ecx + 2*edx]\\r\\n']}, {'input': '122\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 8*eax]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '71\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 2*ebx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '222\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '231\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '23\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '37\\r\\n', 'output': ['2\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\n']}, {'input': '206\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [ecx + 4*edx]\\r\\n']}, {'input': '163\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [eax + 2*ecx]\\r\\n']}, {'input': '229\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 4*eax]\\r\\n']}, {'input': '203\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 2*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '150\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + eax]\\r\\nlea edx, [ecx + 4*ecx]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '190\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 4*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\nlea eex, [edx + eax]\\r\\n']}, {'input': '64\\r\\n', 'output': ['2\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [8*ebx]\\r\\n']}, {'input': '93\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 2*ebx]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '123\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + 2*ecx]\\r\\n']}, {'input': '97\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [ebx + 8*ecx]\\r\\n']}, {'input': '169\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 4*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ebx + 4*ecx]\\r\\n']}, {'input': '249\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + 2*eax]\\r\\nlea eex, [edx + 2*edx]\\r\\n']}, {'input': '38\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [ecx + eax]\\r\\n']}, {'input': '88\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 2*eax]\\r\\nlea edx, [8*ecx]\\r\\n']}, {'input': '146\\r\\n', 'output': ['3\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [eax + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\n']}, {'input': '170\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + 8*ebx]\\r\\nlea edx, [ecx + ecx]\\r\\nlea eex, [edx + 8*eax]\\r\\n']}, {'input': '177\\r\\n', 'output': ['4\\r\\nlea ebx, [eax + 8*eax]\\r\\nlea ecx, [ebx + ebx]\\r\\nlea edx, [ecx + 4*eax]\\r\\nlea eex, [eax + 8*edx]\\r\\n']}, {'input': '132\\r\\n', 'output': ['3\\r\\nlea ebx, [8*eax]\\r\\nlea ecx, [eax + 4*ebx]\\r\\nlea edx, [4*ecx]\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint main() {\n  cin >> n;\n  int cnt = 0;\n  while (n!= 1) {\n    cnt++;\n    if (n % 2 == 0) {\n      n /= 2;\n      cout << \"lea eax, [eax + eax]\" << endl;\n    } else {\n      n--;\n      cout << \"lea eax, [eax + 1*eax]\" << endl;\n    }\n  }\n  cout << cnt << endl;\n  return 0;\n}\n"}
{"src_uid": "cec0f6c267fa76191a3784b08e39acd6", "id": 43, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '20 3\\r\\n2 3 5\\r\\n', 'output': ['6\\r\\n']}, {'input': '50 2\\r\\n15 8\\r\\n', 'output': ['41\\r\\n']}, {'input': '100 5\\r\\n10 9 7 11 19\\r\\n', 'output': ['56\\r\\n']}, {'input': '1 10\\r\\n2 3 5 7 11 13 17 19 23 29\\r\\n', 'output': ['1\\r\\n']}, {'input': '1000 10\\r\\n2 3 5 7 11 13 17 19 23 29\\r\\n', 'output': ['160\\r\\n']}, {'input': '666 5\\r\\n877 881 997 883 887\\r\\n', 'output': ['666\\r\\n']}, {'input': '4 2\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '2 1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '211 4\\r\\n7 3 2 5\\r\\n', 'output': ['49\\r\\n']}, {'input': '2008 3\\r\\n7 9 11\\r\\n', 'output': ['1392\\r\\n']}, {'input': '1000 11\\r\\n29 23 19 17 13 1 11 7 5 3 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '1 6\\r\\n4 27 125 11 13 29\\r\\n', 'output': ['1\\r\\n']}, {'input': '50 5\\r\\n2 7 5 51 19\\r\\n', 'output': ['16\\r\\n']}, {'input': '997 11\\r\\n13 17 19 23 29 997 121 49 25 9 4\\r\\n', 'output': ['474\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '308 4\\r\\n5 2 7 3\\r\\n', 'output': ['70\\r\\n']}, {'input': '980 8\\r\\n17 2 3 11 5 13 19 7\\r\\n', 'output': ['166\\r\\n']}, {'input': '770 4\\r\\n3 5 2 7\\r\\n', 'output': ['176\\r\\n']}, {'input': '877 5\\r\\n7 2 11 3 5\\r\\n', 'output': ['182\\r\\n']}, {'input': '289 8\\r\\n19 13 5 7 11 3 23 17\\r\\n', 'output': ['99\\r\\n']}, {'input': '4943 38\\r\\n419 127 5 281 509 839 593 409 577 463 421 617 587 739 397 743 401 179 343 31 599 349 647 89 293 521 797 431 487 881 761 43 877 643 149 353 467 909\\r\\n', 'output': ['3375\\r\\n']}, {'input': '9619 35\\r\\n131 13 677 43 243 389 577 59 857 71 199 227 841 257 719 601 349 181 73 8 463 311 439 761 449 167 569 191 683 283 379 263 499 571 277\\r\\n', 'output': ['6578\\r\\n']}, {'input': '2852 62\\r\\n401 919 643 367 283 127 593 251 443 389 683 157 227 361 547 997 439 113 239 727 197 947 37 761 929 167 67 431 577 673 625 49 83 11 409 27 769 967 449 199 241 491 571 487 733 653 281 73 107 887 101 827 103 751 787 89 256 607 229 971 463 211\\r\\n', 'output': ['1826\\r\\n']}, {'input': '1138 12\\r\\n31 169 389 337 937 763 251 443 199 661 577 487\\r\\n', 'output': ['1074\\r\\n']}, {'input': '8849 56\\r\\n619 401 733 251 107 37 829 719 479 751 419 523 617 947 809 53 47 313 577 709 71 277 256 547 683 769 269 701 127 863 409 331 19 443 149 841 877 67 521 929 919 773 883 421 17 601 937 61 263 109 103 41 859 197 293 983\\r\\n', 'output': ['5875\\r\\n']}, {'input': '718 3\\r\\n770 337 743\\r\\n', 'output': ['716\\r\\n']}, {'input': '1785 69\\r\\n547 281 347 11 139 883 863 169 643 83 709 719 397 809 157 349 887 523 757 41 181 499 479 619 197 691 971 773 125 569 647 61 101 839 19 359 29 167 331 353 947 379 53 631 109 853 193 23 421 107 911 269 289 71 977 241 761 677 739 263 659 823 229 764 373 509 661 857 961\\r\\n', 'output': ['1020\\r\\n']}, {'input': '7990 37\\r\\n547 541 449 47 463 929 983 647 113 877 683 41 79 961 625 283 349 641 841 729 811 701 619 293 281 859 199 229 607 941 467 809 109 773 443 919 911\\r\\n', 'output': ['6922\\r\\n']}, {'input': '9566 91\\r\\n353 401 349 479 233 367 563 311 643 769 521 173 457 59 523 257 317 659 857 743 619 277 83 181 109 131 359 211 139 841 761 929 61 271 827 719 499 289 677 449 877 389 71 53 223 263 571 199 727 163 31 2 373 463 431 613 809 947 467 797 547 883 409 911 41 79 821 881 503 739 433 251 823 701 991 193 997 19 241 607 487 509 729 569 179 151 229 673 691 443 859\\r\\n', 'output': ['2982\\r\\n']}, {'input': '6254 91\\r\\n421 379 47 683 953 97 311 439 233 271 797 71 991 131 109 829 419 499 857 827 313 841 73 571 4 389 631 103 83 587 911 43 643 89 743 593 541 243 503 251 863 61 157 349 223 647 853 467 443 173 617 577 947 25 739 599 751 653 281 811 163 397 409 919 463 79 971 727 113 53 7 787 641 701 883 307 137 293 241 229 269 487 239 107 67 479 191 823 121 367 449\\r\\n', 'output': ['2399\\r\\n']}, {'input': '815442 99\\r\\n131 227 503 269 61 107 103 47 263 3 239 167 401 67 13 359 431 137 523 37 53 379 79 461 421 127 313 173 109 31 433 317 193 149 373 19 521 241 251 43 151 397 7 307 11 409 139 443 439 449 281 479 113 293 557 97 41 2 353 487 383 23 29 509 547 191 163 467 349 491 5 463 541 17 73 499 101 347 257 277 197 367 283 59 199 457 157 229 83 311 233 223 181 89 337 179 211 419 331\\r\\n', 'output': ['70035\\r\\n']}, {'input': '642382 96\\r\\n487 89 71 251 163 337 3 83 157 313 389 149 409 277 5 73 97 167 103 211 193 223 101 503 41 467 317 79 139 311 347 431 107 179 23 191 233 443 433 7 2 131 173 521 61 499 11 457 331 307 383 397 523 53 449 137 67 239 367 479 263 461 269 31 281 181 359 199 227 373 439 43 421 229 151 37 353 419 509 271 283 463 401 47 349 13 59 293 491 241 109 257 197 17 29 127\\r\\n', 'output': ['58572\\r\\n']}, {'input': '600972 66\\r\\n79 163 73 211 223 7 37 239 65 43 173 31 263 67 179 283 277 193 131 229 97 151 167 293 17 337 191 137 103 109 307 311 149 349 23 181 61 281 241 257 251 53 47 19 269 317 71 127 353 197 89 157 11 113 347 313 227 29 2 83 271 3 107 199 59 233\\r\\n', 'output': ['78012\\r\\n']}, {'input': '363161 80\\r\\n337 127 71 53 73 293 283 401 439 97 61 101 367 131 373 19 233 163 13 229 379 59 263 389 227 41 271 347 419 5 167 107 89 179 223 151 433 431 359 193 269 139 257 31 191 157 43 47 137 383 173 277 281 239 449 109 37 181 331 199 421 23 443 7 103 317 79 113 3 83 313 29 311 307 2 251 197 149 353 11\\r\\n', 'output': ['35160\\r\\n']}, {'input': '693133 76\\r\\n397 181 313 61 389 107 191 97 149 193 179 23 197 139 71 349 251 199 127 13 109 83 211 47 311 113 19 31 7 3 53 229 59 409 331 137 337 277 2 41 233 173 227 131 307 281 79 73 163 101 103 347 379 239 89 37 269 11 167 241 43 283 367 257 29 271 293 373 401 151 67 157 223 353 383 17\\r\\n', 'output': ['78449\\r\\n']}, {'input': '842450 58\\r\\n37 283 89 241 131 83 271 3 179 109 167 79 2 19 173 53 269 31 113 59 263 97 181 233 41 5 71 67 199 107 257 43 151 197 11 101 211 17 229 149 73 13 193 157 61 47 277 227 223 139 29 23 281 137 103 127 163 191\\r\\n', 'output': ['94467\\r\\n']}, {'input': '120713 99\\r\\n59 283 419 509 431 19 443 241 101 491 157 257 17 31 71 127 173 191 37 73 2 367 251 463 227 271 311 557 293 47 547 521 11 397 67 163 541 347 43 523 181 389 103 503 487 113 233 97 139 211 107 29 131 421 317 223 193 3 331 439 5 457 197 461 109 89 409 277 353 401 349 151 379 467 449 61 13 433 479 359 167 137 229 79 53 23 313 263 41 83 269 281 179 373 337 7 307 499 199\\r\\n', 'output': ['11305\\r\\n']}, {'input': '944214 61\\r\\n157 89 23 101 13 17 59 193 199 79 47 151 61 97 163 257 7 83 5 67 41 29 293 229 211 307 271 298 179 227 263 131 113 109 107 313 43 233 181 53 19 103 173 127 283 71 3 137 197 241 281 139 311 31 37 277 11 223 167 239 269\\r\\n', 'output': ['182663\\r\\n']}, {'input': '688274 81\\r\\n401 71 257 163 293 2 89 239 241 11 433 307 67 227 313 353 283 439 41 113 7 229 59 3 47 179 19 251 331 347 173 167 431 421 157 373 311 277 317 389 349 263 397 181 269 191 367 197 79 107 149 359 211 271 29 53 101 419 97 137 409 13 73 5 127 383 131 61 151 199 223 31 43 17 233 337 37 83 139 109 23\\r\\n', 'output': ['61497\\r\\n']}, {'input': '623511 55\\r\\n229 257 17 193 101 103 59 191 53 107 71 113 299 269 211 41 173 2 263 5 197 199 163 149 223 181 167 31 239 97 139 79 233 157 37 3 11 7 131 89 29 83 227 109 19 47 61 271 127 241 73 137 67 151 251\\r\\n', 'output': ['70330\\r\\n']}, {'input': '34202350 95\\r\\n991 181 541 361 659 271 563 577 163 751 961 81 719 43 383 491 101 535 67 389 191 619 709 587 353 529 179 73 121 13 127 607 431 853 569 797 347 79 251 17 409 401 41 193 839 199 211 811 487 601 881 733 241 883 599 239 197 229 49 521 461 787 677 311 503 421 757 613 841 349 821 59 857 727 379 47 151 877 419 643 83 337 103 4 467 443 167 977 439 773 109 479 373 683 97\\r\\n', 'output': ['14676536\\r\\n']}, {'input': '56124673 91\\r\\n181 67 307 409 71 29 89 31 97 659 709 19 241 503 727 823 859 691 971 37 599 227 313 587 967 883 149 937 773 49 379 557 787 11 827 331 367 839 929 757 863 619 257 509 223 947 593 173 487 761 401 25 563 199 661 547 953 983 821 479 461 293 569 311 103 577 433 601 353 271 169 59 733 463 919 419 151 289 449 643 877 43 829 9 467 349 769 631 431 337 457\\r\\n', 'output': ['27823308\\r\\n']}, {'input': '66663476 87\\r\\n81 37 347 227 41 359 25 859 163 809 727 541 829 841 463 919 23 593 599 361 211 839 797 151 343 373 773 907 677 821 13 199 853 571 739 577 367 877 491 379 277 289 257 157 941 883 121 173 769 761 499 233 421 419 961 107 229 709 523 337 461 293 569 857 197 443 433 241 397 479 137 997 179 887 281 127 619 953 823 643 977 317 743 191 467 64 67\\r\\n', 'output': ['41298098\\r\\n']}, {'input': '85912508 97\\r\\n193 971 647 373 757 433 263 283 223 361 101 229 829 379 181 419 239 941 431 523 211 947 107 967 457 47 827 103 131 577 811 911 617 641 709 691 61 53 683 797 751 467 761 163 787 289 2 401 661 257 463 233 739 191 607 853 863 769 281 307 563 487 109 491 631 79 149 241 919 961 977 13 179 983 479 37 331 719 613 353 625 337 701 541 349 121 311 673 277 173 347 83 89 991 73 7 383\\r\\n', 'output': ['23087838\\r\\n']}, {'input': '17439127 97\\r\\n653 563 383 971 529 607 431 113 401 625 101 587 683 29 281 421 223 857 37 263 367 53 107 61 457 283 571 103 331 557 521 911 449 17 593 863 443 307 71 929 31 227 761 947 257 701 277 163 887 751 79 733 757 409 229 797 361 773 659 419 541 487 149 359 577 769 353 233 239 631 3 131 739 613 7 193 139 137 179 953 256 997 271 199 197 983 293 673 463 499 617 241 907 647 461 479 977\\r\\n', 'output': ['6201590\\r\\n']}, {'input': '11541416 76\\r\\n653 563 419 337 243 73 809 787 509 487 271 587 521 647 289 461 197 257 863 263 31 103 107 397 677 659 997 431 839 953 701 379 919 239 661 127 443 191 743 389 821 227 281 71 571 293 89 881 523 857 331 109 977 971 911 167 343 241 199 83 883 547 499 853 641 43 137 617 601 829 125 823 151 613 947 121\\r\\n', 'output': ['8441427\\r\\n']}, {'input': '90742323 78\\r\\n491 443 419 121 283 347 577 601 307 149 733 73 683 137 739 23 691 179 53 863 467 239 827 947 139 569 173 829 383 353 919 887 701 853 47 127 659 697 653 251 571 953 269 13 839 719 359 233 101 463 331 457 71 971 421 773 67 431 593 479 809 317 243 4 257 563 107 907 37 125 751 157 151 911 619 841 499 677\\r\\n', 'output': ['43807233\\r\\n']}, {'input': '72884678 90\\r\\n491 157 419 593 673 307 211 601 313 613 953 617 853 709 811 311 41 757 347 859 283 607 229 941 503 269 463 983 107 379 449 83 523 67 739 59 719 653 797 81 433 883 101 431 113 461 587 971 293 557 251 907 769 71 89 139 263 277 197 547 227 317 959 127 809 43 439 947 37 353 359 73 599 961 701 167 373 911 509 223 17 397 64 929 683 521 421 29 13 19\\r\\n', 'output': ['39115199\\r\\n']}, {'input': '97550157 77\\r\\n577 157 761 367 79 331 547 101 757 243 503 139 839 863 811 457 47 647 977 419 61 739 229 773 971 947 449 467 619 491 16 641 991 401 409 677 431 179 797 887 37 433 113 701 599 523 853 487 397 443 83 997 137 673 907 227 41 683 197 199 73 71 89 169 17 617 809 421 239 751 271 53 719 827 769 787 509\\r\\n', 'output': ['61195229\\r\\n']}, {'input': '10169176 79\\r\\n613 121 967 251 743 653 43 499 419 167 49 139 383 827 277 541 529 961 59 739 61 89 397 227 179 169 601 467 127 883 919 401 947 263 193 16 593 661 757 523 269 211 313 557 647 163 389 577 83 443 337 607 719 911 271 311 881 157 181 19 131 81 491 773 433 811 67 137 281 751 353 431 821 439 359 487 853 457 727\\r\\n', 'output': ['6512164\\r\\n']}, {'input': '9976698153840 97\\r\\n491 257 227 467 101 17 163 521 337 313 181 211 61 349 503 367 107 3 233 103 239 433 401 73 113 47 139 43 331 389 499 197 479 463 431 359 487 353 223 251 283 83 421 109 281 317 11 79 157 443 269 461 277 293 23 97 397 199 419 229 457 41 547 173 509 59 149 5 31 7 89 179 449 151 37 19 137 71 167 131 439 379 2 311 29 263 523 53 409 13 271 241 347 193 373 191 307\\r\\n', 'output': ['908388043912\\r\\n']}, {'input': '9678048567267 95\\r\\n367 419 397 229 443 59 461 43 457 467 373 431 509 409 239 223 163 41 563 107 263 47 281 73 221 311 241 547 191 463 197 181 19 211 149 103 89 5 331 557 353 109 233 101 131 337 113 199 151 439 541 307 347 349 293 157 33 449 271 421 139 83 37 193 383 71 29 23 137 469 569 179 523 167 479 359 521 227 61 257 79 106 433 503 491 97 127 401 379 389 251 277 269 173 317\\r\\n', 'output': ['3897162195455\\r\\n']}, {'input': '9968915049080 100\\r\\n257 353 521 449 127 157 433 457 499 409 269 89 563 181 439 149 523 349 17 173 281 109 137 43 421 443 367 463 467 2 131 461 37 101 331 23 199 97 337 491 401 557 431 61 53 3 29 67 373 547 107 479 139 397 229 103 71 113 79 271 241 239 283 83 263 313 197 227 359 31 179 419 277 211 293 503 251 383 347 223 487 233 5 541 13 59 167 7 41 311 509 191 389 73 151 163 317 47 569 19\\r\\n', 'output': ['977074843979\\r\\n']}, {'input': '9768565482772 100\\r\\n317 229 421 251 203 101 509 383 311 107 199 293 541 409 487 397 257 5 149 193 223 163 439 67 347 83 569 103 109 137 479 179 593 503 271 191 227 41 349 331 547 419 353 337 313 13 281 577 557 139 461 571 367 173 431 181 233 269 43 389 521 113 263 449 523 97 61 3 151 211 443 31 241 373 457 467 37 19 59 2 563 73 587 131 379 79 307 239 283 127 47 71 23 433 187 277 197 53 499 157\\r\\n', 'output': ['1227370026994\\r\\n']}, {'input': '9671796206988 100\\r\\n137 107 419 421 197 113 389 97 557 487 271 229 19 563 131 523 181 53 239 401 227 467 7 409 71 59 433 491 157 479 2 3 173 29 383 47 313 283 347 73 373 163 277 179 331 499 109 263 251 443 367 317 269 61 461 151 83 13 211 31 127 463 449 67 167 199 503 457 257 439 353 139 311 307 5 349 11 379 23 281 101 293 17 191 521 571 241 569 193 79 41 43 233 397 223 509 103 541 359 337\\r\\n', 'output': ['894018567035\\r\\n']}, {'input': '9806951141493 99\\r\\n433 467 293 313 67 311 163 223 471 457 41 277 271 509 101 199 491 397 83 359 353 73 449 5 131 563 443 197 461 379 383 421 89 151 53 211 17 251 503 79 479 7 463 47 59 239 331 233 97 173 281 409 367 419 523 107 547 23 401 241 43 439 181 347 109 389 113 179 2 257 373 283 431 191 541 227 269 137 149 31 307 263 193 499 229 37 521 103 19 337 11 71 167 139 13 487 61 127 29\\r\\n', 'output': ['1314339720575\\r\\n']}, {'input': '9996326598719 98\\r\\n89 373 347 163 271 71 467 139 13 311 337 397 107 103 101 439 313 191 263 491 193 41 59 293 257 179 151 199 5 113 73 307 461 173 157 277 211 281 401 23 353 229 523 137 67 431 109 7 269 31 283 241 421 503 17 239 61 443 43 37 131 181 227 3 223 19 379 449 349 499 367 11 433 97 167 359 29 331 521 251 127 409 197 557 317 53 541 47 509 547 419 383 2 149 479 83 457 79\\r\\n', 'output': ['893840700159\\r\\n']}, {'input': '9930225951240 95\\r\\n211 347 251 131 181 239 191 457 127 463 353 397 61 503 197 163 569 331 37 101 547 401 277 67 23 349 203 467 11 379 317 227 337 73 107 113 83 439 53 157 17 223 2 383 47 269 409 487 359 431 271 479 179 193 13 167 19 41 311 109 491 563 31 433 449 139 283 509 281 419 199 233 367 79 43 173 313 241 421 71 103 521 499 97 523 293 137 257 5 89 443 263 373 149 389\\r\\n', 'output': ['1637980385783\\r\\n']}, {'input': '9597019411250 96\\r\\n397 487 541 383 229 443 59 13 109 179 79 263 41 283 7 23 17 463 281 2 433 199 223 137 347 127 467 83 227 89 3 29 233 181 101 251 307 197 37 337 457 31 317 61 157 313 389 103 107 43 167 47 353 421 509 149 419 269 349 151 131 67 277 491 503 331 71 113 257 311 499 19 271 239 359 11 479 449 367 379 439 293 523 241 97 191 139 401 53 73 461 373 409 521 965 431\\r\\n', 'output': ['1087130960247\\r\\n']}, {'input': '9886773646149 98\\r\\n181 499 223 419 19 557 71 509 283 11 163 17 439 397 127 67 521 349 281 479 331 197 389 563 179 461 173 3 2 167 101 317 373 37 31 367 199 61 433 43 193 151 229 23 541 523 109 311 383 463 421 59 271 73 239 379 409 251 107 457 113 79 241 401 29 89 35 103 157 137 353 233 139 307 211 83 97 293 431 569 359 149 491 487 337 191 41 263 277 467 47 313 443 449 547 269 53 257\\r\\n', 'output': ['1359913898511\\r\\n']}, {'input': '9795821923031 98\\r\\n2 7 11 13 15 17 19 23 29 31 37 41 43 47 53 59 67 71 73 79 83 89 97 101 103 107 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 373 379 383 389 397 401 409 419 421 431 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569\\r\\n', 'output': ['1564643642724\\r\\n']}, {'input': '9507905892355 99\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 409 419 421 431 433 439 443 449 457 461 463 467 487 491 499 503 509 521 523 541 547 557\\r\\n', 'output': ['849348619910\\r\\n']}, {'input': '9693931407793 98\\r\\n2 3 5 13 17 23 29 31 37 41 43 47 53 59 67 71 73 79 83 97 101 103 107 109 113 127 131 133 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 271 277 281 283 293 307 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 563 569 671\\r\\n', 'output': ['1189433268692\\r\\n']}, {'input': '9590161274760 99\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 503 509 521 541 547 557\\r\\n', 'output': ['854721606968\\r\\n']}, {'input': '9950847944431 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 127 131 137 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557\\r\\n', 'output': ['894249894895\\r\\n']}, {'input': '9500100903584 95\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 293 307 313 317 331 337 347 353 359 367 373 379 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['858277370189\\r\\n']}, {'input': '9842961910207 95\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 461 463 467 479 487 491 499 503\\r\\n', 'output': ['882219504923\\r\\n']}, {'input': '9838785728264 96\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 89 97 103 107 109 113 127 131 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['903236710045\\r\\n']}, {'input': '9867732421778 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 179 181 191 193 197 199 211 223 227 229 233 239 241 251 263 269 271 277 281 283 293 307 311 317 331 337 347 349 353 359 367 373 379 383 389 397 401 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569 571\\r\\n', 'output': ['896116476463\\r\\n']}, {'input': '9779523837247 96\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 499 503 509 521 523\\r\\n', 'output': ['883837021065\\r\\n']}, {'input': '9867630384078 96\\r\\n571 569 563 557 547 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 307 293 283 281 277 271 269 263 257 251 239 233 229 227 223 211 197 193 191 181 179 173 163 157 151 149 139 137 131 127 113 107 103 101 97 89 79 73 67 61 59 53 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['937747863784\\r\\n']}, {'input': '9875196562006 99\\r\\n587 577 571 569 563 557 547 541 523 521 509 503 491 487 467 463 461 457 443 439 433 431 421 419 409 401 397 391 389 383 379 373 367 359 353 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 157 151 149 139 137 131 127 113 107 103 101 97 89 83 73 71 67 61 59 53 47 43 41 37 31 29 19 13 11 7 5 3 2\\r\\n', 'output': ['995583778464\\r\\n']}, {'input': '9549571840708 96\\r\\n547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 79 73 71 67 59 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['889647002352\\r\\n']}, {'input': '9911982578329 99\\r\\n571 569 563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 379 373 367 353 349 347 337 331 317 313 311 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 113 109 107 103 101 97 89 83 73 71 67 61 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['913309108147\\r\\n']}, {'input': '9760780439447 95\\r\\n547 541 523 521 503 499 491 487 479 467 463 461 457 449 443 439 433 421 419 409 401 397 389 383 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 79 73 67 61 59 53 47 43 41 37 31 29 23 19 17 13 7 5 3 2\\r\\n', 'output': ['980142379577\\r\\n']}, {'input': '9776745118716 99\\r\\n571 569 563 557 547 541 523 521 509 503 491 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 377 373 367 359 353 349 347 337 331 317 313 311 307 293 283 277 271 269 263 257 251 241 239 233 229 227 223 211 199 193 191 181 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 23 19 17 11 7 5 3 2\\r\\n', 'output': ['980171747646\\r\\n']}, {'input': '9872727922459 100\\r\\n563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 433 431 421 419 409 401 397 389 383 379 373 367 359 353 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 59 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['890601028930\\r\\n']}, {'input': '9819416028761 95\\r\\n521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 13 11 5 3 2\\r\\n', 'output': ['1031126647049\\r\\n']}, {'input': '9763307060499 98\\r\\n569 563 557 547 541 523 521 509 503 499 491 487 479 467 463 461 457 449 439 433 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 109 107 103 101 97 89 83 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 11 7 5 3 2\\r\\n', 'output': ['959856047856\\r\\n']}, {'input': '9809248239466 100\\r\\n737 593 587 577 569 563 557 547 541 523 521 509 503 499 491 487 467 463 461 457 449 443 439 431 421 419 409 401 397 389 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 61 59 53 47 43 37 31 29 23 19 17 13 7 5 3 2\\r\\n', 'output': ['999773802890\\r\\n']}, {'input': '9903670365284 96\\r\\n109 229 373 677 499 31 727 841 199 811 907 625 2 563 251 131 67 313 619 137 293 359 17 461 97 331 173 107 491 307 419 709 857 379 181 769 839 139 223 733 193 71 157 479 43 541 211 233 127 269 421 243 569 353 257 167 37 103 529 337 283 983 701 19 343 383 593 121 991 977 113 503 317 823 349 457 587 431 463 683 601 367 523 947 617 311 919 647 59 829 467 859 953 509 599 641\\r\\n', 'output': ['2939448304654\\r\\n']}, {'input': '9502178257748 98\\r\\n821 883 373 113 499 659 907 331 617 163 809 709 857 383 223 937 379 512 811 103 863 79 83 643 257 599 173 107 467 769 81 277 613 271 991 947 523 293 121 47 23 757 419 727 89 853 61 761 317 241 463 961 181 997 509 607 37 359 49 269 977 503 283 19 983 541 67 281 97 839 397 43 823 461 797 701 719 353 25 409 601 421 677 73 347 193 859 647 587 881 971 829 13 547 179 641 877 229\\r\\n', 'output': ['5084295876526\\r\\n']}, {'input': '9642376788915 95\\r\\n397 883 373 991 499 727 827 523 401 887 173 461 857 193 239 757 929 313 631 683 71 251 103 677 347 449 611 641 439 557 27 109 233 977 797 479 139 569 829 349 23 821 613 431 89 853 343 761 607 311 67 907 107 773 317 37 691 359 289 881 113 503 41 64 269 463 197 281 769 839 181 137 941 739 83 229 643 293 5 409 353 787 191 73 593 241 619 859 257 809 971 937 997 163 179\\r\\n', 'output': ['4909262218143\\r\\n']}, {'input': '9700065114573 99\\r\\n311 691 191 991 599 727 479 547 229 41 23 439 919 71 11 53 17 271 631 617 521 839 359 281 131 353 613 401 197 157 743 109 223 101 937 929 139 293 347 79 173 3 337 241 461 683 277 761 467 827 811 907 7 107 449 37 947 211 607 457 677 8 239 809 269 997 541 29 409 419 163 647 941 769 787 491 883 757 775 509 641 661 373 89 643 179 569 619 443 127 397 821 971 151 361 859 739 523 701\\r\\n', 'output': ['2699236106797\\r\\n']}, {'input': '9846406935247 98\\r\\n571 367 53 43 769 29 307 991 557 113 449 59 397 271 751 967 761 151 857 401 277 773 997 281 887 523 349 3 197 673 853 823 577 101 521 389 619 883 659 881 947 37 337 149 211 691 569 641 797 97 163 223 61 47 457 347 683 157 13 977 121 229 41 79 269 631 499 293 727 353 643 839 421 599 241 757 181 4 125 877 257 467 653 73 313 811 953 677 89 941 199 419 233 563 251 859 739 929\\r\\n', 'output': ['2869839675507\\r\\n']}, {'input': '9578425604483 100\\r\\n727 257 827 701 859 169 353 887 19 997 449 97 137 761 631 139 467 811 709 401 967 7 233 109 719 113 11 9 683 37 853 373 733 941 971 131 461 883 71 577 863 617 349 509 661 937 67 263 271 541 43 773 647 47 419 523 857 499 367 347 503 313 311 797 269 907 103 223 307 983 691 337 167 607 89 5 127 409 163 101 977 241 389 512 463 643 743 431 277 929 641 739 839 79 251 359 557 443 227 193\\r\\n', 'output': ['3429244221786\\r\\n']}, {'input': '9850057469698 95\\r\\n191 193 37 113 443 139 227 109 911 797 449 173 409 613 59 463 809 811 857 401 491 163 41 769 821 211 487 647 971 503 643 709 461 419 991 353 311 157 11 383 739 313 577 541 961 661 751 599 761 947 421 631 653 7 379 433 397 239 64 499 3 169 367 509 571 977 941 479 53 983 359 593 953 883 179 127 97 251 73 863 859 67 101 457 659 5 107 467 691 701 43 61 607 587 877\\r\\n', 'output': ['2727577480774\\r\\n']}, {'input': '9986810815972 95\\r\\n191 641 137 127 163 733 929 887 257 157 757 43 739 337 421 229 49 521 941 401 967 277 107 881 821 173 16 789 379 743 269 121 461 857 83 953 223 683 233 101 409 839 701 617 751 53 811 103 761 529 883 631 361 17 367 937 523 67 313 449 179 169 463 593 73 661 499 479 311 673 131 659 599 541 787 331 97 349 281 397 961 29 439 625 647 271 997 709 691 773 457 71 89 139 919\\r\\n', 'output': ['5816290608872\\r\\n']}, {'input': '9607195420951 97\\r\\n571 223 997 131 163 631 283 953 47 79 19 977 7 809 59 41 617 127 941 863 383 529 43 431 73 277 64 263 463 547 433 169 443 857 757 379 71 683 349 89 761 743 31 541 227 53 557 67 167 233 449 487 601 797 991 647 661 677 311 613 83 317 191 709 883 27 251 281 887 947 521 839 139 587 173 331 503 179 359 491 673 197 823 157 523 373 307 919 389 641 691 569 653 829 911 853 271\\r\\n', 'output': ['4814783576041\\r\\n']}, {'input': '9671345835461 95\\r\\n647 289 487 887 911 503 283 311 449 821 281 19 7 239 661 71 439 839 941 691 683 733 577 431 421 277 4 827 233 863 619 631 401 293 149 307 701 109 739 241 761 773 769 211 227 79 547 563 47 809 27 107 601 797 83 953 37 929 101 967 521 199 463 271 883 163 169 907 461 811 41 823 677 139 331 263 557 613 467 383 673 569 157 317 523 743 89 373 125 397 529 61 593 113 349\\r\\n', 'output': ['3896254168046\\r\\n']}, {'input': '9980338415156 98\\r\\n197 541 383 151 71 463 283 79 823 683 811 593 523 887 353 761 439 701 479 691 103 13 829 431 337 277 397 181 461 47 619 991 433 191 907 101 317 983 367 61 59 883 499 211 827 107 769 653 547 857 81 311 643 571 223 401 229 67 19 967 257 41 239 587 449 2 797 977 227 971 487 557 43 139 241 263 617 149 37 859 131 809 839 709 467 379 613 293 863 727 157 937 577 757 199 389 11 841\\r\\n', 'output': ['2606358658461\\r\\n']}, {'input': '9925557094702 100\\r\\n53 587 311 83 631 571 821 823 593 709 811 157 347 257 11 37 439 169 509 163 877 613 289 461 883 997 97 743 383 47 619 79 271 947 467 659 317 653 729 661 929 463 167 211 647 107 983 263 887 8 443 113 599 547 223 173 361 569 229 953 577 751 349 421 853 967 373 139 227 313 487 269 563 827 233 193 617 809 199 431 131 277 529 71 911 881 241 503 863 641 857 937 281 353 727 719 389 337 101 89\\r\\n', 'output': ['5405714723943\\r\\n']}, {'input': '9568361248572 95\\r\\n443 239 683 53 631 121 853 863 541 839 953 347 499 89 109 409 83 907 17 211 439 97 103 937 71 601 811 127 79 313 467 197 569 503 787 107 317 43 887 181 163 101 389 479 857 359 983 521 751 3 419 463 551 643 769 941 677 73 229 199 397 23 449 823 421 967 617 625 179 379 487 919 37 31 173 947 739 2 271 61 131 727 647 263 461 809 281 149 929 641 431 593 523 241 571\\r\\n', 'output': ['1872180163221\\r\\n']}, {'input': '9893563607709 100\\r\\n349 557 229 211 61 619 941 569 673 19 467 653 983 359 109 127 121 907 139 293 23 613 257 607 251 97 709 151 509 883 43 197 41 8 313 367 331 199 131 827 79 991 503 181 727 449 73 841 787 541 419 887 49 677 67 523 191 743 157 3 397 137 173 823 421 773 643 431 179 89 881 857 797 853 563 401 929 479 647 383 683 757 271 641 977 113 971 691 547 311 601 163 373 953 769 659 877 239 101 499\\r\\n', 'output': ['3494740396912\\r\\n']}, {'input': '9879466421351 96\\r\\n223 281 547 149 409 243 431 257 263 499 293 647 887 523 563 127 113 361 109 769 929 311 773 677 443 593 739 251 103 691 367 83 569 797 313 557 47 331 25 211 463 173 641 37 229 751 757 487 859 227 439 359 937 433 67 137 661 743 317 4 613 199 977 269 467 271 853 727 179 397 881 983 169 911 503 839 683 419 947 883 151 653 733 719 509 461 577 919 961 607 107 41 599 541 421 89\\r\\n', 'output': ['4955531712402\\r\\n']}, {'input': '10000000000000 100\\r\\n31 61 257 199 29 17 227 269 281 151 73 113 229 167 13 211 397 67 107 131 139 127 173 59 491 241 89 2 461 109 3 293 313 317 283 149 431 239 521 401 503 179 97 41 37 449 11 439 193 271 307 337 251 433 103 467 379 389 43 83 373 101 419 523 541 487 479 79 367 509 499 347 137 349 5 277 409 359 463 233 353 383 47 23 197 71 19 157 263 223 181 7 421 457 311 191 53 163 443 331\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n541 523 521 509 503 499 491 487 479 467 463 461 457 449 443 439 433 431 421 419 409 401 397 389 383 379 373 367 359 353 349 347 337 331 317 313 311 307 293 283 281 277 271 269 263 257 251 241 239 233 229 227 223 211 199 197 193 191 181 179 173 167 163 157 151 149 139 137 131 127 113 109 107 103 101 97 89 83 79 73 71 67 61 59 53 47 43 41 37 31 29 23 19 17 13 11 7 5 3 2\\r\\n', 'output': ['887521393369\\r\\n']}, {'input': '10000000000000 100\\r\\n281 139 131 223 503 349 61 337 521 509 313 41 373 233 433 461 487 211 457 359 419 157 83 383 53 179 463 197 379 571 587 277 347 173 431 577 89 443 311 193 397 71 353 401 227 113 563 271 31 109 317 479 29 137 293 191 59 409 229 499 47 151 2 269 67 167 23 421 389 11 547 251 283 569 491 163 149 19 239 103 439 85 3 541 199 467 79 257 331 73 241 181 7 557 13 263 449 127 101 37\\r\\n', 'output': ['1210985628131\\r\\n']}, {'input': '10000000000000 100\\r\\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547\\r\\n', 'output': ['896701239049\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1000000;\nint n, k, a[100];\nlong long ans;\nint main() {\n  scanf(\"%d%d\", &n, &k);\n  for (int i = 1; i <= k; i++) scanf(\"%d\", &a[i]);\n  sort(a + 1, a + k + 1);\n  for (int i = 1; i <= k; i++) {\n    int x = a[i];\n    int cnt = 0;\n    while (x <= N) {\n      cnt += N / x - (N / x) / x;\n      x *= a[i];\n    }\n    ans += cnt;\n  }\n  for (int i = 1; i <= k; i++) {\n    int x = a[i];\n    int cnt = 0;\n    while (x <= n) {\n      cnt += n / x - (n / x) / x;\n      x *= a[i];\n    }\n    ans -= cnt;\n  }\n  printf(\"%I64d\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "cc8a8af1ba2b19bf081e379139542883", "id": 44, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2000, "testcases": "[{'input': '0 0\\r\\n1 1\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n2 2\\r\\n', 'output': ['NO']}, {'input': '2 3\\r\\n2 3\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '-4 -2\\r\\n0 0\\r\\n-2 -1\\r\\n', 'output': ['YES']}, {'input': '-100000000 -100000000\\r\\n100000000 100000000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '3 4\\r\\n-4 3\\r\\n1 7\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n2 2\\r\\n-3 -3\\r\\n', 'output': ['YES']}, {'input': '0 1\\r\\n2 3\\r\\n7 -11\\r\\n', 'output': ['NO']}, {'input': '-2 2\\r\\n3 3\\r\\n5 0\\r\\n', 'output': ['YES']}, {'input': '1 3\\r\\n3 1\\r\\n3 3\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n0 0\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n12 12\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 100000000\\r\\n0 -100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 4444\\r\\n-4444 -100000000\\r\\n50000000 50000000\\r\\n', 'output': ['YES']}, {'input': '45 6\\r\\n65 5\\r\\n0 5\\r\\n', 'output': ['NO']}, {'input': '1 0\\r\\n0 1\\r\\n2 1\\r\\n', 'output': ['YES']}, {'input': '7 11\\r\\n13 13\\r\\n0 4\\r\\n', 'output': ['YES']}, {'input': '4 2\\r\\n0 -1\\r\\n2 -2\\r\\n', 'output': ['NO']}, {'input': '4 -3\\r\\n-3 1\\r\\n0 -2\\r\\n', 'output': ['NO']}, {'input': '-2 -1\\r\\n0 1\\r\\n-2 -3\\r\\n', 'output': ['NO']}, {'input': '-1 1\\r\\n2 1\\r\\n-2 -1\\r\\n', 'output': ['NO']}, {'input': '4 0\\r\\n4 -3\\r\\n2 4\\r\\n', 'output': ['NO']}, {'input': '-3 -2\\r\\n-3 3\\r\\n4 4\\r\\n', 'output': ['NO']}, {'input': '2 1\\r\\n1 -4\\r\\n-4 -2\\r\\n', 'output': ['NO']}, {'input': '3 1\\r\\n1 -1\\r\\n-1 -4\\r\\n', 'output': ['NO']}, {'input': '2 -1\\r\\n-2 -4\\r\\n1 -1\\r\\n', 'output': ['NO']}, {'input': '0 4\\r\\n-1 -3\\r\\n4 1\\r\\n', 'output': ['NO']}, {'input': '-4 1\\r\\n-4 2\\r\\n0 -2\\r\\n', 'output': ['NO']}, {'input': '-2 -2\\r\\n-2 3\\r\\n3 -1\\r\\n', 'output': ['NO']}, {'input': '-3 0\\r\\n2 1\\r\\n-2 0\\r\\n', 'output': ['YES']}, {'input': '-1 -2\\r\\n3 -2\\r\\n-3 -1\\r\\n', 'output': ['NO']}, {'input': '3 1\\r\\n-2 3\\r\\n-2 -2\\r\\n', 'output': ['NO']}, {'input': '0 -4\\r\\n-1 -2\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '-4 -4\\r\\n1 0\\r\\n-1 -3\\r\\n', 'output': ['NO']}, {'input': '2 0\\r\\n-2 1\\r\\n2 3\\r\\n', 'output': ['NO']}, {'input': '-2 4\\r\\n0 1\\r\\n-2 1\\r\\n', 'output': ['YES']}, {'input': '4 1\\r\\n2 -1\\r\\n3 0\\r\\n', 'output': ['YES']}, {'input': '2 3\\r\\n3 -3\\r\\n3 -2\\r\\n', 'output': ['NO']}, {'input': '2 4\\r\\n-4 1\\r\\n3 3\\r\\n', 'output': ['NO']}, {'input': '-4 -3\\r\\n-3 -4\\r\\n1 4\\r\\n', 'output': ['NO']}, {'input': '3 2\\r\\n1 0\\r\\n-4 -1\\r\\n', 'output': ['NO']}, {'input': '0 -4\\r\\n-3 -2\\r\\n3 -1\\r\\n', 'output': ['NO']}, {'input': '-2 2\\r\\n4 -2\\r\\n-2 -2\\r\\n', 'output': ['NO']}, {'input': '2 2\\r\\n-2 1\\r\\n0 -3\\r\\n', 'output': ['YES']}, {'input': '0 4\\r\\n1 1\\r\\n-4 2\\r\\n', 'output': ['NO']}, {'input': '-4 -4\\r\\n4 1\\r\\n-4 -2\\r\\n', 'output': ['NO']}, {'input': '-4 2\\r\\n4 -1\\r\\n-2 -1\\r\\n', 'output': ['YES']}, {'input': '-7 9\\r\\n-2 10\\r\\n-6 -4\\r\\n', 'output': ['NO']}, {'input': '4 7\\r\\n2 9\\r\\n-7 -6\\r\\n', 'output': ['NO']}, {'input': '-6 9\\r\\n6 6\\r\\n9 6\\r\\n', 'output': ['NO']}, {'input': '-9 4\\r\\n8 1\\r\\n-8 8\\r\\n', 'output': ['NO']}, {'input': '-4 3\\r\\n9 -2\\r\\n-3 -3\\r\\n', 'output': ['YES']}, {'input': '-1 -7\\r\\n3 -2\\r\\n-4 -3\\r\\n', 'output': ['NO']}, {'input': '-9 4\\r\\n-2 -8\\r\\n9 4\\r\\n', 'output': ['NO']}, {'input': '8 2\\r\\n-10 1\\r\\n10 -2\\r\\n', 'output': ['NO']}, {'input': '-7 9\\r\\n5 5\\r\\n-2 6\\r\\n', 'output': ['NO']}, {'input': '-8 1\\r\\n-10 -8\\r\\n1 -4\\r\\n', 'output': ['YES']}, {'input': '-65 -52\\r\\n31 -22\\r\\n0 -77\\r\\n', 'output': ['NO']}, {'input': '74 -55\\r\\n0 50\\r\\n-68 26\\r\\n', 'output': ['NO']}, {'input': '-84 28\\r\\n33 -15\\r\\n-19 93\\r\\n', 'output': ['NO']}, {'input': '69 -30\\r\\n-66 -100\\r\\n86 -38\\r\\n', 'output': ['NO']}, {'input': '-43 41\\r\\n-99 92\\r\\n-20 51\\r\\n', 'output': ['NO']}, {'input': '-17 -33\\r\\n56 -75\\r\\n-93 65\\r\\n', 'output': ['NO']}, {'input': '-95 -32\\r\\n-90 -43\\r\\n-40 16\\r\\n', 'output': ['NO']}, {'input': '-48 -92\\r\\n59 -39\\r\\n-45 14\\r\\n', 'output': ['NO']}, {'input': '95 -13\\r\\n22 -36\\r\\n-25 -60\\r\\n', 'output': ['NO']}, {'input': '81 -91\\r\\n88 91\\r\\n-90 -77\\r\\n', 'output': ['NO']}, {'input': '281 -914\\r\\n-217 113\\r\\n479 329\\r\\n', 'output': ['NO']}, {'input': '620 514\\r\\n-276 966\\r\\n578 106\\r\\n', 'output': ['NO']}, {'input': '-253 -283\\r\\n-400 834\\r\\n718 -701\\r\\n', 'output': ['NO']}, {'input': '478 884\\r\\n418 -713\\r\\n-704 -961\\r\\n', 'output': ['NO']}, {'input': '-380 -712\\r\\n-263 -104\\r\\n187 -329\\r\\n', 'output': ['NO']}, {'input': '-2919 -7389\\r\\n-4955 -1807\\r\\n2103 9400\\r\\n', 'output': ['NO']}, {'input': '6040 9662\\r\\n1903 7813\\r\\n5296 8638\\r\\n', 'output': ['NO']}, {'input': '-6008 -6748\\r\\n-7106 -5319\\r\\n-1940 8048\\r\\n', 'output': ['NO']}, {'input': '-2171 -9855\\r\\n4255 -3857\\r\\n6446 9559\\r\\n', 'output': ['NO']}, {'input': '-8916 9282\\r\\n2666 2344\\r\\n9109 -2730\\r\\n', 'output': ['NO']}, {'input': '-52856 -58459\\r\\n-41878 81991\\r\\n-22821 59850\\r\\n', 'output': ['NO']}, {'input': '10327 -86117\\r\\n-51156 -26888\\r\\n-41007 27453\\r\\n', 'output': ['NO']}, {'input': '-46921 46529\\r\\n87797 -73235\\r\\n18213 -86569\\r\\n', 'output': ['NO']}, {'input': '-66381 86177\\r\\n24332 -47590\\r\\n-57592 80499\\r\\n', 'output': ['NO']}, {'input': '-69415 74546\\r\\n37868 -89407\\r\\n19505 -59846\\r\\n', 'output': ['NO']}, {'input': '-817674 316187\\r\\n-934134 660884\\r\\n-297136 -482732\\r\\n', 'output': ['NO']}, {'input': '-127066 941778\\r\\n-654926 -838416\\r\\n809821 -229819\\r\\n', 'output': ['NO']}, {'input': '251893 526074\\r\\n593818 288991\\r\\n-120613 211128\\r\\n', 'output': ['NO']}, {'input': '910801 387995\\r\\n-846325 167413\\r\\n-425681 -149086\\r\\n', 'output': ['NO']}, {'input': '769260 131679\\r\\n-399548 -620680\\r\\n-439456 -164378\\r\\n', 'output': ['NO']}, {'input': '4931249 7448503\\r\\n8740191 1123509\\r\\n4410817 -3494433\\r\\n', 'output': ['NO']}, {'input': '6752575 4525855\\r\\n-2269760 5249721\\r\\n7718280 -5550799\\r\\n', 'output': ['NO']}, {'input': '9121753 -1624238\\r\\n1358642 -7305098\\r\\n9182854 -2204498\\r\\n', 'output': ['NO']}, {'input': '-8540887 -7511495\\r\\n-2659834 -6893955\\r\\n8115011 -3482324\\r\\n', 'output': ['NO']}, {'input': '-4664203 -2707147\\r\\n7039468 5543778\\r\\n5854600 -7808563\\r\\n', 'output': ['NO']}, {'input': '-33622572 -65473509\\r\\n-54144104 -59861983\\r\\n89814248 47623606\\r\\n', 'output': ['NO']}, {'input': '-75629161 -68114618\\r\\n23285096 90997125\\r\\n84795646 72358903\\r\\n', 'output': ['NO']}, {'input': '-79956125 -88524398\\r\\n10949698 32312326\\r\\n-76024701 -77225990\\r\\n', 'output': ['NO']}, {'input': '26164297 21666711\\r\\n-20848219 -49928045\\r\\n-36819763 26811563\\r\\n', 'output': ['NO']}, {'input': '98219518 -66590186\\r\\n14970849 -24409139\\r\\n82951915 43915349\\r\\n', 'output': ['NO']}, {'input': '67195377 58333196\\r\\n-60739152 -69557068\\r\\n-82003989 74825425\\r\\n', 'output': ['NO']}, {'input': '92141071 -48275413\\r\\n-47968469 -13277723\\r\\n-15839680 51548907\\r\\n', 'output': ['NO']}, {'input': '82237071 -62729681\\r\\n45778244 -73153917\\r\\n25235041 83636828\\r\\n', 'output': ['NO']}, {'input': '82539131 17433579\\r\\n-56091046 68716401\\r\\n-73706000 41779060\\r\\n', 'output': ['NO']}, {'input': '-21570525 17439241\\r\\n-47857043 39456884\\r\\n-36121539 69473879\\r\\n', 'output': ['NO']}, {'input': '-38 -99\\r\\n76 43\\r\\n53 -84\\r\\n', 'output': ['NO']}, {'input': '-52 0\\r\\n-60 -50\\r\\n-47 91\\r\\n', 'output': ['NO']}, {'input': '-53 30\\r\\n-14 -19\\r\\n-61 11\\r\\n', 'output': ['NO']}, {'input': '60 55\\r\\n-88 -38\\r\\n0 59\\r\\n', 'output': ['NO']}, {'input': '89 55\\r\\n-13 27\\r\\n-13 -81\\r\\n', 'output': ['NO']}, {'input': '76 73\\r\\n82 -92\\r\\n-95 95\\r\\n', 'output': ['NO']}, {'input': '-81 57\\r\\n-96 0\\r\\n-73 -58\\r\\n', 'output': ['NO']}, {'input': '0 45\\r\\n42 -47\\r\\n-51 -82\\r\\n', 'output': ['NO']}, {'input': '16 39\\r\\n95 18\\r\\n39 -64\\r\\n', 'output': ['NO']}, {'input': '-23 36\\r\\n-72 0\\r\\n44 -60\\r\\n', 'output': ['NO']}, {'input': '57 43\\r\\n58 -54\\r\\n-43 0\\r\\n', 'output': ['NO']}, {'input': '51 77\\r\\n-9 81\\r\\n0 79\\r\\n', 'output': ['NO']}, {'input': '0 14\\r\\n88 0\\r\\n88 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n48 0\\r\\n-62 68\\r\\n', 'output': ['NO']}, {'input': '-35 -90\\r\\n0 -42\\r\\n-8 -60\\r\\n', 'output': ['NO']}, {'input': '59 0\\r\\n84 -28\\r\\n0 58\\r\\n', 'output': ['NO']}, {'input': '10 -15\\r\\n23 0\\r\\n88 -36\\r\\n', 'output': ['NO']}, {'input': '-66 -34\\r\\n59 -38\\r\\n13 0\\r\\n', 'output': ['NO']}, {'input': '0 -14\\r\\n80 94\\r\\n-14 15\\r\\n', 'output': ['NO']}, {'input': '-28 0\\r\\n0 43\\r\\n0 -51\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n-30010581 33889813\\r\\n12862004 15575384\\r\\n', 'output': ['NO']}, {'input': '94993760 -37786635\\r\\n-75326491 -21534927\\r\\n77949983 95218547\\r\\n', 'output': ['NO']}, {'input': '72913933 0\\r\\n54300106 60510850\\r\\n32295823 -60694017\\r\\n', 'output': ['NO']}, {'input': '0 -77922994\\r\\n47873382 0\\r\\n-48532375 -33729248\\r\\n', 'output': ['NO']}, {'input': '-50600641 25410541\\r\\n0 80575245\\r\\n0 62979800\\r\\n', 'output': ['NO']}, {'input': '-34280877 -82070958\\r\\n66030914 -52671703\\r\\n0 -90987154\\r\\n', 'output': ['NO']}, {'input': '27523869 0\\r\\n52900492 0\\r\\n33031150 -65488267\\r\\n', 'output': ['NO']}, {'input': '69226391 60708120\\r\\n43106396 25795293\\r\\n80380957 88577789\\r\\n', 'output': ['NO']}, {'input': '0 40072438\\r\\n-61016486 88561432\\r\\n28431496 60485628\\r\\n', 'output': ['NO']}, {'input': '0 24078959\\r\\n75842668 -56466325\\r\\n-64025705 12045125\\r\\n', 'output': ['NO']}, {'input': '24334185 -27189752\\r\\n0 -47230185\\r\\n0 -37588021\\r\\n', 'output': ['NO']}, {'input': '45479363 56862079\\r\\n28029163 0\\r\\n-38736303 59867108\\r\\n', 'output': ['NO']}, {'input': '-66738889 -24309585\\r\\n-39387414 -42921545\\r\\n-10462276 0\\r\\n', 'output': ['NO']}, {'input': '-95534030 -14392539\\r\\n-89751090 79655267\\r\\n-77491839 40745315\\r\\n', 'output': ['NO']}, {'input': '-48666683 22046293\\r\\n77649947 84819904\\r\\n-32803712 -99366118\\r\\n', 'output': ['NO']}, {'input': '10150745 93724033\\r\\n-59625481 -18232739\\r\\n34384941 -28147896\\r\\n', 'output': ['NO']}, {'input': '-12344578 -26470996\\r\\n0 -25186906\\r\\n-11572514 -38120367\\r\\n', 'output': ['NO']}, {'input': '-59220368 0\\r\\n0 -75968891\\r\\n0 74081590\\r\\n', 'output': ['NO']}, {'input': '-78038627 -49761049\\r\\n0 22143739\\r\\n0 -60448485\\r\\n', 'output': ['NO']}, {'input': '80358706 0\\r\\n23898082 -87631921\\r\\n-48798084 88174414\\r\\n', 'output': ['NO']}, {'input': '10 13\\r\\n13 10\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n10 13\\r\\n10 13\\r\\n', 'output': ['YES']}, {'input': '10 13\\r\\n0 0\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '10 13\\r\\n-10 -13\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '10 13\\r\\n-13 10\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '100000000 1\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n1 0\\r\\n100000000 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n1 1\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['YES']}, {'input': '100000000 0\\r\\n1 0\\r\\n100000000 0\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n1 1\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n100000000 99999999\\r\\n100000000 100000000\\r\\n', 'output': ['NO']}, {'input': '100000000 0\\r\\n99999999 1\\r\\n100000000 1\\r\\n', 'output': ['YES']}, {'input': '100000000 100000000\\r\\n100000000 100000000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '5491 -1888\\r\\n58611137 -17279700\\r\\n5629 -7705\\r\\n', 'output': ['YES']}, {'input': '6791 1587\\r\\n23543337 24784850\\r\\n3970 2327\\r\\n', 'output': ['YES']}, {'input': '1214 8046\\r\\n84729946 38445218\\r\\n3488 -5838\\r\\n', 'output': ['YES']}, {'input': '-8725 -6466\\r\\n77278594 -3622341\\r\\n9344 -1256\\r\\n', 'output': ['YES']}, {'input': '-5922 -2466\\r\\n-46708374 -71085154\\r\\n-9882 298\\r\\n', 'output': ['YES']}, {'input': '4560 -6056\\r\\n97943322 -20616116\\r\\n-1107 -5440\\r\\n', 'output': ['YES']}, {'input': '-5645 2118\\r\\n-23770935 62615171\\r\\n-2080 9473\\r\\n', 'output': ['YES']}, {'input': '2630 8069\\r\\n-75372166 10085837\\r\\n-781 5563\\r\\n', 'output': ['YES']}, {'input': '-2588 9699\\r\\n50743921 -45114432\\r\\n-5288 -7358\\r\\n', 'output': ['YES']}, {'input': '6889 9158\\r\\n-843345 89332306\\r\\n7495 518\\r\\n', 'output': ['YES']}, {'input': '-2037 -1006\\r\\n-13301683 -83185771\\r\\n-3487 -4590\\r\\n', 'output': ['YES']}, {'input': '-925 -1240\\r\\n25904140 -92743662\\r\\n-8028 -2933\\r\\n', 'output': ['YES']}, {'input': '-573 5611\\r\\n-88934372 16274202\\r\\n-689 9294\\r\\n', 'output': ['YES']}, {'input': '-2859 7599\\r\\n37114911 -75750711\\r\\n-9150 -7398\\r\\n', 'output': ['YES']}, {'input': '-9234 9520\\r\\n58867682 17319702\\r\\n2273 -5831\\r\\n', 'output': ['YES']}, {'input': '3411 2674\\r\\n-21536783 -33506984\\r\\n-8254 -3778\\r\\n', 'output': ['YES']}, {'input': '1778735 -1803902\\r\\n-92875004 -2966747\\r\\n-4125460 1149178\\r\\n', 'output': ['YES']}, {'input': '-2413874 4166580\\r\\n83681508 25911924\\r\\n8615149 -6396049\\r\\n', 'output': ['YES']}, {'input': '5987456 -1627274\\r\\n-45083510 25782192\\r\\n-758074 971006\\r\\n', 'output': ['YES']}, {'input': '-881780 8157586\\r\\n-83355045 -86221641\\r\\n-5080144 1016625\\r\\n', 'output': ['YES']}, {'input': '836292 -1555463\\r\\n44451624 -63102407\\r\\n-7051275 -9619647\\r\\n', 'output': ['YES']}, {'input': '-5493123 4007625\\r\\n-49191721 -31674255\\r\\n-9754636 6418706\\r\\n', 'output': ['YES']}, {'input': '-2797960 2819364\\r\\n59202462 71529306\\r\\n7799041 -4640234\\r\\n', 'output': ['YES']}, {'input': '-7355750 -5710643\\r\\n-48075697 25746997\\r\\n-3569463 3650928\\r\\n', 'output': ['YES']}, {'input': '2517677 8638224\\r\\n-75757217 -17117074\\r\\n-2847910 1342478\\r\\n', 'output': ['YES']}, {'input': '-1782346 -522853\\r\\n56023653 37655619\\r\\n7455445 -936314\\r\\n', 'output': ['YES']}, {'input': '3922510 4979687\\r\\n-83613487 73792320\\r\\n-2355010 7196240\\r\\n', 'output': ['YES']}, {'input': '-2911250 -3788914\\r\\n9975544 20015444\\r\\n7278331 4185016\\r\\n', 'output': ['YES']}, {'input': '9495309 -4445256\\r\\n66581093 -48831427\\r\\n5864682 -8016505\\r\\n', 'output': ['YES']}, {'input': '-6389242 -2092524\\r\\n-18806778 85154882\\r\\n8457769 5141401\\r\\n', 'output': ['YES']}, {'input': '-6223066 -5334825\\r\\n36109780 -5416931\\r\\n3246899 -4890875\\r\\n', 'output': ['YES']}, {'input': '-1334950 3309875\\r\\n-20438919 -45390492\\r\\n-722222 280804\\r\\n', 'output': ['YES']}, {'input': '122542 -4826228\\r\\n-20855162 89301242\\r\\n8917870 2568139\\r\\n', 'output': ['YES']}, {'input': '-4662151 6642823\\r\\n-620983 29911124\\r\\n6914655 -1204368\\r\\n', 'output': ['YES']}, {'input': '806224 -7075643\\r\\n94593948 -33094579\\r\\n-540130 -5612242\\r\\n', 'output': ['YES']}, {'input': '2370720 9260730\\r\\n-31929898 43611588\\r\\n2817748 6788032\\r\\n', 'output': ['YES']}, {'input': '5 -12\\r\\n-47316040 -62956553\\r\\n-7 0\\r\\n', 'output': ['YES']}, {'input': '-7 0\\r\\n-51538008 -92285620\\r\\n-3 0\\r\\n', 'output': ['YES']}, {'input': '-12 9\\r\\n21015609 49124671\\r\\n3 2\\r\\n', 'output': ['YES']}, {'input': '-11 -10\\r\\n-1042937 89231497\\r\\n0 9\\r\\n', 'output': ['YES']}, {'input': '-3 11\\r\\n6154942 80496611\\r\\n5 0\\r\\n', 'output': ['YES']}, {'input': '-13 12\\r\\n826557 -90209918\\r\\n0 -5\\r\\n', 'output': ['YES']}, {'input': '-3 -9\\r\\n-72817057 -54284335\\r\\n-3 -1\\r\\n', 'output': ['YES']}, {'input': '-8 -8\\r\\n66949614 -53875176\\r\\n-2 -4\\r\\n', 'output': ['YES']}, {'input': '6 2\\r\\n-97096230 19770854\\r\\n-5 4\\r\\n', 'output': ['YES']}, {'input': '10 7\\r\\n91660376 -58581376\\r\\n0 -7\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999997\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999997\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '-100000000 -100000000\\r\\n100000000 100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 100000000\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '32 34\\r\\n-50070000 21003000\\r\\n0 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n1 1\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n100000000 0\\r\\n1 2\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n100000000 99999999\\r\\n1 0\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n1 2\\r\\n0 0\\r\\n', 'output': ['NO']}, {'input': '0 0\\r\\n4 2\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '100000000 100000000\\r\\n0 0\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n10000000 10000000\\r\\n1 1\\r\\n', 'output': ['YES']}, {'input': '1 2\\r\\n-2 1\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '1 1\\r\\n1 -1\\r\\n0 0\\r\\n', 'output': ['YES']}, {'input': '0 0\\r\\n-63411382 -42720436\\r\\n123456 543253\\r\\n', 'output': ['YES']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  long long x1, y1, x2, y2, x3, y3;\n  cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n  long long x = x2 - x1, y = y2 - y1;\n  long long x4 = x3 - x2, y4 = y3 - y2;\n  long long x5 = x4 + x, y5 = y4 + y;\n  if (x5 == 0 && y5 == 0)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"}
{"src_uid": "1590da32b7e64d0462550923cce34355", "id": 45, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '2\\r\\n1 2 1\\r\\n', 'output': ['1.0\\r\\n']}, {'input': '4\\r\\n1 3 2\\r\\n4 2 1\\r\\n3 2 3\\r\\n', 'output': ['4.333333333333334\\r\\n']}, {'input': '5\\r\\n1 2 1\\r\\n1 3 1\\r\\n1 4 1\\r\\n1 5 1\\r\\n', 'output': ['4.0\\r\\n']}, {'input': '4\\r\\n1 2 1\\r\\n2 3 1\\r\\n2 4 1\\r\\n', 'output': ['2.333333333333333\\r\\n']}, {'input': '4\\r\\n1 2 1\\r\\n1 3 1\\r\\n3 4 1\\r\\n', 'output': ['2.6666666666666665\\r\\n']}, {'input': '6\\r\\n1 2 4\\r\\n2 3 2\\r\\n1 4 4\\r\\n4 5 2\\r\\n5 6 1\\r\\n', 'output': ['11.0\\r\\n']}, {'input': '9\\r\\n1 4 1\\r\\n1 5 1\\r\\n2 5 2\\r\\n3 5 2\\r\\n5 7 2\\r\\n4 6 2\\r\\n8 4 2\\r\\n9 4 1\\r\\n', 'output': ['10.875\\r\\n']}, {'input': '11\\r\\n1 2 4\\r\\n1 3 4\\r\\n3 4 1\\r\\n1 5 4\\r\\n5 6 1\\r\\n6 7 1\\r\\n1 8 4\\r\\n8 9 1\\r\\n9 10 1\\r\\n10 11 1\\r\\n', 'output': ['18.0\\r\\n']}, {'input': '13\\r\\n1 2 1\\r\\n2 3 2\\r\\n3 4 3\\r\\n4 5 4\\r\\n5 6 5\\r\\n6 7 6\\r\\n1 8 6\\r\\n2 9 5\\r\\n3 10 4\\r\\n4 11 3\\r\\n5 12 2\\r\\n6 13 1\\r\\n', 'output': ['28.0\\r\\n']}, {'input': '5\\r\\n1 2 1\\r\\n1 3 1\\r\\n1 4 1\\r\\n1 5 1\\r\\n', 'output': ['4.0\\r\\n']}, {'input': '8\\r\\n1 2 1\\r\\n2 3 2\\r\\n3 4 8\\r\\n1 5 1\\r\\n5 6 2\\r\\n6 7 3\\r\\n7 8 4\\r\\n', 'output': ['13.571428571428571\\r\\n']}, {'input': '7\\r\\n4 1 869\\r\\n5 2 160\\r\\n6 3 411\\r\\n3 2 228\\r\\n2 1 560\\r\\n1 7 811\\r\\n', 'output': ['2107.5\\r\\n']}, {'input': '5\\r\\n3 1 709\\r\\n4 1 97\\r\\n1 2 555\\r\\n2 5 469\\r\\n', 'output': ['1253.75\\r\\n']}, {'input': '5\\r\\n3 1 910\\r\\n4 1 987\\r\\n1 2 812\\r\\n2 5 734\\r\\n', 'output': ['3064.75\\r\\n']}, {'input': '3\\r\\n2 1 182\\r\\n1 3 352\\r\\n', 'output': ['449.0\\r\\n']}, {'input': '2\\r\\n1 2 550\\r\\n', 'output': ['550.0\\r\\n']}, {'input': '6\\r\\n4 1 233\\r\\n5 2 76\\r\\n2 1 455\\r\\n1 3 725\\r\\n3 6 444\\r\\n', 'output': ['1420.2\\r\\n']}, {'input': '7\\r\\n3 1 707\\r\\n4 2 301\\r\\n5 2 541\\r\\n2 1 794\\r\\n6 1 372\\r\\n1 7 259\\r\\n', 'output': ['2333.6666666666665\\r\\n']}, {'input': '2\\r\\n1 2 942\\r\\n', 'output': ['942.0\\r\\n']}, {'input': '7\\r\\n4 1 295\\r\\n5 2 624\\r\\n6 2 664\\r\\n2 1 722\\r\\n1 3 740\\r\\n3 7 979\\r\\n', 'output': ['3074.3333333333335\\r\\n']}, {'input': '7\\r\\n3 1 763\\r\\n1 2 303\\r\\n4 2 234\\r\\n5 2 109\\r\\n6 2 746\\r\\n2 7 853\\r\\n', 'output': ['1965.3333333333333\\r\\n']}, {'input': '23\\r\\n6 1 760\\r\\n7 1 15\\r\\n8 2 341\\r\\n9 2 322\\r\\n10 2 51\\r\\n11 3 859\\r\\n12 3 868\\r\\n13 4 755\\r\\n14 2 234\\r\\n15 1 980\\r\\n16 3 515\\r\\n17 4 781\\r\\n4 3 37\\r\\n18 2 389\\r\\n19 3 691\\r\\n20 2 189\\r\\n21 5 819\\r\\n5 1 529\\r\\n1 2 230\\r\\n22 2 570\\r\\n2 3 400\\r\\n3 23 45\\r\\n', 'output': ['6894.5\\r\\n']}, {'input': '42\\r\\n10 1 557\\r\\n11 1 743\\r\\n12 2 265\\r\\n13 1 824\\r\\n14 3 802\\r\\n15 2 760\\r\\n16 2 525\\r\\n17 2 572\\r\\n18 3 985\\r\\n19 1 7\\r\\n20 3 359\\r\\n21 4 423\\r\\n22 1 192\\r\\n23 2 386\\r\\n24 4 397\\r\\n25 2 862\\r\\n26 3 664\\r\\n27 1 643\\r\\n28 4 312\\r\\n29 1 503\\r\\n30 3 996\\r\\n31 3 733\\r\\n32 3 373\\r\\n3 5 931\\r\\n33 6 829\\r\\n34 6 527\\r\\n35 2 324\\r\\n2 6 878\\r\\n6 4 135\\r\\n36 1 766\\r\\n37 7 424\\r\\n38 7 1000\\r\\n39 8 836\\r\\n8 4 192\\r\\n40 1 483\\r\\n41 5 739\\r\\n5 1 59\\r\\n1 4 954\\r\\n4 7 717\\r\\n7 9 476\\r\\n9 42 485\\r\\n', 'output': ['19675.51219512195\\r\\n']}, {'input': '23\\r\\n7 1 563\\r\\n8 1 828\\r\\n9 2 12\\r\\n10 1 48\\r\\n11 1 678\\r\\n12 3 705\\r\\n13 2 231\\r\\n14 3 446\\r\\n15 4 374\\r\\n16 4 321\\r\\n17 5 370\\r\\n18 3 62\\r\\n19 1 193\\r\\n20 6 888\\r\\n21 1 674\\r\\n1 6 406\\r\\n6 3 554\\r\\n3 4 924\\r\\n4 2 102\\r\\n22 2 278\\r\\n2 5 648\\r\\n5 23 164\\r\\n', 'output': ['6377.954545454545\\r\\n']}, {'input': '31\\r\\n7 1 494\\r\\n8 2 887\\r\\n9 3 371\\r\\n10 3 121\\r\\n11 1 638\\r\\n12 4 513\\r\\n13 4 621\\r\\n14 3 65\\r\\n15 2 16\\r\\n16 5 716\\r\\n17 5 527\\r\\n18 4 451\\r\\n19 1 45\\r\\n20 2 736\\r\\n21 5 461\\r\\n22 3 318\\r\\n23 4 123\\r\\n24 2 340\\r\\n25 4 321\\r\\n26 1 457\\r\\n1 3 949\\r\\n27 6 368\\r\\n6 5 758\\r\\n5 3 145\\r\\n28 3 158\\r\\n29 3 43\\r\\n3 2 597\\r\\n2 4 287\\r\\n30 4 20\\r\\n4 31 730\\r\\n', 'output': ['8916.633333333333\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, x, y, z, a[N], b[N], c[N], d[N], e[N], f[N], g[N], h[N], i[N], j[N],\n    k[N], l[N], mx[N], mn[N], p[N], q[N], r[N], s[N], t[N], u[N], v[N],\n    w[N], x[N], y[N], z[N], A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P,\n    Q, R, S, T, U, V, W, X, Y, Z, aa, bb, cc, dd, ee, ff, gg, hh, ii, jj,\n    kk, ll, mm, nn, oo, pp, qq, rr, ss, tt, uu, vv, ww, xx, yy, zz, aaa,\n    bbb, ccc, ddd, eee, fff, ggg, hhh, iii, jjj, kkk, lll, mmm, nnn, ooo,\n    ppp, qqq, rrr, sss, ttt, uuu, vvv, www, xxo, yyy, zzz, aaaa, bbbb,\n    cccc, dddd, eeee, ffff, gggg, hhhh, iiii, jjjj, kkkk, llll, mmmm, nnnn,\n    oooo, pppp, qqqq, rrrr, ssss, tttt, uuuu, vvvv, wwww, xxoo, yyyy, zzzz,\n    aaaa, bbbb, cccc, dddd, eeee, ffff, gggg, hhhh, iiii, jjjj, kkkk, llll,\n    mmmm, nnnn, oooo, pppp, qqqq, rrrr, ssss, tttt, uuuu, vvvv, wwww, xxoo,\n    yyyy, zzzz, aaaa, bbbb, cccc, dddd, eeee, ffff, gggg, hhhh, iiii, jjjj,\n    kkkk, llll, mmmm, nnnn, oooo, pppp, qqqq, rrrr, ssss, tttt, uuuu, vvvv,\n    wwww, xxoo, yyyy, zzzz, aaaa, bbbb, cccc, dddd, eeee, ffff, gggg, hhhh,\n    iiii, jjjj, kkkk, llll, mmmm, nnnn, oooo, pppp, qqqq, rrrr, ssss, tttt,\n    uuuu, vvvv, wwww, xxoo, yyyy, zzzz, aaaa, bbbb, cccc, dddd, eeee, ffff,\n    gggg, hhhh, iiii, jjjj, kkkk, llll, mmmm, nnnn, oooo, pppp, qqqq, rrrr,\n    ssss, tttt, uuuu, vvvv, wwww, xxoo, yyyy, zzzz, aaaa, bbbb, cccc, dddd,\n    eeee, ffff, gggg, hhhh, iiii, jjjj, kkkk, llll, mmmm, nnnn, oooo, pppp,\n    qqqq, rrrr, ssss, tttt, uuuu, vvvv, wwww, xxoo, yyyy, zzzz, aaaa, bbbb,\n    cccc, dddd, eeee, ffff, gggg, hhhh, iiii, jjjj, kkkk, llll, mmmm, nnnn,\n    oooo, pppp, qqqq, rrrr, ssss, tttt, uuuu, vvvv, wwww, xxoo, yyyy, zzzz,\n    aaaa, bbbb, cccc, dddd, eeee, ffff, gggg, hhhh, iiii, jjjj, kkkk, llll,\n    mmmm, nnnn, oooo, pppp, qqqq, rrrr, ssss, tttt, uuuu, vvvv, wwww, xxoo,\n    yyyy, zzzz, aaaa, bbbb, cccc, dddd, eeee, ffff, gggg, hhhh, iiii, jjjj,\n    kkkk, llll, mmmm, nnnn, oooo, pppp, qqqq, rrrr, ssss, tttt, uuuu, vvvv,\n    wwww, xxoo, yyyy, zzzz, aaaa, bbbb, cccc, dddd, eeee, ffff, gggg, hhhh,\n    iiii, jjjj, kkkk, llll, mmmm, nnnn, oooo, pppp, qqqq, rrrr, ssss, tttt,\n    uuuu, vvvv, wwww, xxoo, yyyy, zzzz, aaaa, bbbb, cccc, dddd, eeee, ffff,\n    gggg, hhhh, iiii, jjjj, kkkk, llll, mmmm, nnnn, oooo, pppp, qqqq, rrrr,\n    ssss, tttt, uuuu, vvvv, wwww, xxoo, yyyy, zzzz, aaaa, bbbb, cccc, dddd,\n    eeee, ffff, gggg, hhhh, iiii, jjjj, kkkk, llll, mmmm, nnnn, oooo, pppp,\n    qqqq, rrrr, ssss, tttt, uuuu, vvvv, wwww, xxoo, yyyy, zzzz, aaaa, bbbb,\n    cccc, dddd, eeee, ffff, gggg, hhhh, iiii, jjjj, kkkk, llll, mmmm, nnnn,\n    oooo, pppp, qqqq, rrrr, ssss, tttt, uuuu, vvvv, wwww, xxoo, yyyy, zzzz,\n    aaaa, bbbb, cccc, dddd, eeee, ffff, gggg, hhhh, iiii, jjjj, kkkk, llll,\n    mmmm, nnnn, oooo, pppp, qqqq, rrrr, ssss, tttt, uuuu, vvvv, wwww, xxoo,\n    yyyy, zzzz, aaaa, bbbb, cccc, dddd, eeee, ffff, gggg, hhhh, iiii, jjjj,\n    kkkk, llll, mmmm, nnnn, oooo, pppp, qqqq, rrrr, ssss, tttt, uuuu, vvvv,\n    wwww, xxoo, yyyy, zzzz, aaaa, bbbb, cccc, dddd, eeee, ffff, gggg, hhhh,\n    iiii, jjjj, kkkk, llll, mmmm, nnnn, oooo, pppp, qqqq, rrrr, ssss, tttt,\n    uuuu, vvvv, wwww, xxoo, yyy"}
{"src_uid": "a14739b86d1fd62a030226263cdc1afc", "id": 46, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': '9 3 3\\r\\n4 3 1\\r\\n2 3 3\\r\\n', 'output': ['15']}, {'input': '2 4 6\\r\\n3 5 5\\r\\n5 6 4\\r\\n', 'output': ['24']}, {'input': '3 8 1\\r\\n4 7 1\\r\\n5 6 1\\r\\n', 'output': ['15']}, {'input': '2 1 1\\r\\n6 1 1\\r\\n10 1 1\\r\\n', 'output': ['11']}, {'input': '1 5 3\\r\\n9 4 3\\r\\n6 3 3\\r\\n', 'output': ['17']}, {'input': '6 5 10\\r\\n9 7 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '1 1 1\\r\\n2 1 10\\r\\n5 1 1\\r\\n', 'output': ['15']}, {'input': '3 1 4\\r\\n2 1 3\\r\\n4 1 1\\r\\n', 'output': ['12']}, {'input': '7 1 5\\r\\n9 2 1\\r\\n6 3 3\\r\\n', 'output': ['19']}, {'input': '2 1 3\\r\\n1 1 4\\r\\n3 1 1\\r\\n', 'output': ['11']}, {'input': '1 1 10\\r\\n2 1 2\\r\\n3 5 1\\r\\n', 'output': ['20']}, {'input': '8 10 10\\r\\n9 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '7 9 10\\r\\n8 10 9\\r\\n10 9 10\\r\\n', 'output': ['40']}, {'input': '1 1 10\\r\\n9 3 3\\r\\n10 2 4\\r\\n', 'output': ['17']}, {'input': '1 1 1\\r\\n2 1 1\\r\\n3 1 1\\r\\n', 'output': ['7']}, {'input': '1 10 10\\r\\n5 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '1 1 9\\r\\n5 1 10\\r\\n10 1 8\\r\\n', 'output': ['11']}, {'input': '1 3 1\\r\\n5 1 4\\r\\n10 2 10\\r\\n', 'output': ['20']}, {'input': '1 2 2\\r\\n2 2 3\\r\\n10 1 10\\r\\n', 'output': ['11']}, {'input': '10 10 10\\r\\n1 1 1\\r\\n2 1 1\\r\\n', 'output': ['20']}, {'input': '1 2 5\\r\\n9 5 3\\r\\n5 5 4\\r\\n', 'output': ['20']}, {'input': '5 1 2\\r\\n10 5 1\\r\\n3 1 3\\r\\n', 'output': ['15']}, {'input': '1 2 1\\r\\n9 4 3\\r\\n3 4 3\\r\\n', 'output': ['13']}, {'input': '7 1 1\\r\\n10 3 4\\r\\n3 5 3\\r\\n', 'output': ['17']}, {'input': '1 5 5\\r\\n2 3 2\\r\\n4 3 4\\r\\n', 'output': ['16']}, {'input': '7 4 2\\r\\n1 2 5\\r\\n4 4 4\\r\\n', 'output': ['17']}, {'input': '4 5 2\\r\\n9 2 2\\r\\n5 2 4\\r\\n', 'output': ['17']}, {'input': '6 4 1\\r\\n4 1 3\\r\\n7 3 5\\r\\n', 'output': ['20']}, {'input': '8 3 5\\r\\n2 5 1\\r\\n9 1 5\\r\\n', 'output': ['19']}, {'input': '5 5 5\\r\\n3 5 3\\r\\n9 3 5\\r\\n', 'output': ['22']}, {'input': '4 5 3\\r\\n8 1 3\\r\\n9 3 1\\r\\n', 'output': ['18']}, {'input': '8 2 2\\r\\n3 5 5\\r\\n4 3 3\\r\\n', 'output': ['18']}, {'input': '10 9 10\\r\\n9 10 9\\r\\n8 10 10\\r\\n', 'output': ['41']}, {'input': '9 9 8\\r\\n10 10 9\\r\\n8 10 10\\r\\n', 'output': ['40']}, {'input': '8 10 10\\r\\n9 10 9\\r\\n10 10 10\\r\\n', 'output': ['41']}, {'input': '8 9 10\\r\\n10 8 10\\r\\n9 10 10\\r\\n', 'output': ['41']}, {'input': '8 10 1\\r\\n9 10 1\\r\\n10 10 1\\r\\n', 'output': ['24']}, {'input': '8 10 10\\r\\n9 10 10\\r\\n10 9 10\\r\\n', 'output': ['41']}, {'input': '7 10 10\\r\\n9 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '10 9 10\\r\\n8 10 10\\r\\n7 10 10\\r\\n', 'output': ['41']}, {'input': '8 1 6\\r\\n6 4 7\\r\\n5 8 6\\r\\n', 'output': ['28']}, {'input': '2 8 10\\r\\n5 9 7\\r\\n7 2 9\\r\\n', 'output': ['35']}, {'input': '6 6 7\\r\\n10 2 4\\r\\n5 5 7\\r\\n', 'output': ['28']}, {'input': '5 1 7\\r\\n6 8 6\\r\\n10 9 3\\r\\n', 'output': ['27']}, {'input': '9 7 9\\r\\n10 5 10\\r\\n2 7 9\\r\\n', 'output': ['37']}, {'input': '6 7 6\\r\\n9 2 4\\r\\n4 2 8\\r\\n', 'output': ['27']}, {'input': '4 4 3\\r\\n5 8 2\\r\\n8 6 7\\r\\n', 'output': ['25']}, {'input': '3 1 8\\r\\n2 5 4\\r\\n4 4 1\\r\\n', 'output': ['22']}, {'input': '2 4 2\\r\\n4 7 8\\r\\n8 8 5\\r\\n', 'output': ['25']}, {'input': '5 10 6\\r\\n7 7 7\\r\\n1 6 3\\r\\n', 'output': ['27']}, {'input': '4 6 5\\r\\n10 6 8\\r\\n1 3 3\\r\\n', 'output': ['23']}, {'input': '9 8 4\\r\\n8 2 3\\r\\n2 1 8\\r\\n', 'output': ['21']}, {'input': '3 3 9\\r\\n1 5 6\\r\\n7 2 6\\r\\n', 'output': ['24']}, {'input': '10 8 6\\r\\n3 9 4\\r\\n4 4 5\\r\\n', 'output': ['25']}, {'input': '3 4 3\\r\\n2 5 1\\r\\n4 5 1\\r\\n', 'output': ['15']}, {'input': '5 9 10\\r\\n6 10 2\\r\\n7 1 10\\r\\n', 'output': ['38']}, {'input': '4 2 4\\r\\n5 7 7\\r\\n8 8 9\\r\\n', 'output': ['27']}, {'input': '1 8 2\\r\\n3 9 8\\r\\n6 4 6\\r\\n', 'output': ['25']}, {'input': '8 7 6\\r\\n10 5 1\\r\\n3 1 5\\r\\n', 'output': ['22']}, {'input': '6 3 1\\r\\n2 3 4\\r\\n5 7 1\\r\\n', 'output': ['19']}, {'input': '10 10 6\\r\\n7 10 8\\r\\n6 5 5\\r\\n', 'output': ['35']}, {'input': '3 3 10\\r\\n7 6 7\\r\\n10 5 10\\r\\n', 'output': ['35']}, {'input': '1 8 6\\r\\n9 8 8\\r\\n5 6 5\\r\\n', 'output': ['30']}, {'input': '6 6 3\\r\\n9 10 1\\r\\n2 7 6\\r\\n', 'output': ['30']}, {'input': '5 2 4\\r\\n10 10 7\\r\\n9 5 9\\r\\n', 'output': ['30']}, {'input': '2 2 9\\r\\n9 5 1\\r\\n7 4 7\\r\\n', 'output': ['24']}, {'input': '1 10 6\\r\\n6 1 2\\r\\n9 9 6\\r\\n', 'output': ['25']}, {'input': '3 8 4\\r\\n1 7 3\\r\\n8 5 10\\r\\n', 'output': ['26']}, {'input': '1 7 1\\r\\n10 9 7\\r\\n5 10 5\\r\\n', 'output': ['25']}, {'input': '8 10 1\\r\\n2 5 6\\r\\n3 5 7\\r\\n', 'output': ['31']}, {'input': '5 5 1\\r\\n3 4 10\\r\\n6 5 10\\r\\n', 'output': ['32']}, {'input': '10 3 8\\r\\n2 3 6\\r\\n1 1 8\\r\\n', 'output': ['23']}, {'input': '2 10 3\\r\\n4 10 1\\r\\n8 8 6\\r\\n', 'output': ['25']}, {'input': '10 2 6\\r\\n1 5 7\\r\\n2 8 6\\r\\n', 'output': ['25']}, {'input': '2 5 1\\r\\n7 9 3\\r\\n6 2 10\\r\\n', 'output': ['29']}, {'input': '1 1 4\\r\\n8 10 5\\r\\n5 3 9\\r\\n', 'output': ['28']}, {'input': '1 7 1\\r\\n9 9 3\\r\\n5 4 1\\r\\n', 'output': ['20']}, {'input': '8 6 10\\r\\n3 7 8\\r\\n9 2 9\\r\\n', 'output': ['33']}, {'input': '9 6 8\\r\\n5 5 2\\r\\n2 5 2\\r\\n', 'output': ['22']}, {'input': '2 1 3\\r\\n1 3 7\\r\\n4 5 10\\r\\n', 'output': ['22']}, {'input': '1 10 10\\r\\n2 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}, {'input': '3 10 10\\r\\n7 10 10\\r\\n10 10 10\\r\\n', 'output': ['42']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int l, lm, lt, e, em, et, f, fm, ft;\n  cin >> l >> lm >> lt >> e >> em >> et >> f >> fm >> ft;\n  int ans = 0;\n  for (int i = 1; i <= 10; i++) {\n    int ln = l + i;\n    if (ln > 10) break;\n    if (ln <= 10) ans = max(ans, ln);\n    int en = e + i;\n    if (en > 10) break;\n    if (en <= 10) ans = max(ans, en);\n    int fn = f + i;\n    if (fn > 10) break;\n    if (fn <= 10) ans = max(ans, fn);\n    if (i == 1) continue;\n    if (ln - 1 <= 10) {\n      int ln1 = ln - 1;\n      if (ln1 <= 10) ans = max(ans, ln1);\n    }\n    if (en - 1 <= 10) {\n      int en1 = en - 1;\n      if (en1 <= 10) ans = max(ans, en1);\n    }\n    if (fn - 1 <= 10) {\n      int fn1 = fn - 1;\n      if (fn1 <= 10) ans = max(ans, fn1);\n    }\n    if (i == 2) continue;\n    if (ln - 2 <= 10) {\n      int ln2 = ln - 2;\n      if (ln2 <= 10) ans = max(ans, ln2);\n    }\n    if (en - 2 <= 10) {\n      int en2 = en - 2;\n      if (en2 <= 10) ans = max(ans, en2);\n    }\n    if (fn - 2 <= 10) {\n      int fn2 = fn - 2;\n      if (fn2 <= 10) ans = max(ans, fn2);\n    }\n    if (i == 3) continue;\n    if (ln - 3 <= 10) {\n      int ln3 = ln - 3;\n      if (ln3 <= 10) ans = max(ans, ln3);\n    }\n    if (en - 3 <= 10) {\n      int en3 = en - 3;\n      if (en3 <= 10) ans = max(ans, en3);\n    }\n    if (fn - 3 <= 10) {\n      int fn3 = fn - 3;\n      if (fn3 <= 10) ans = max(ans, fn3);\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"}
{"src_uid": "899c5b77bfc0b4b99aff310741c9c0dd", "id": 47, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '7 3\\r\\n7 15 0 19 10 5 12\\r\\n2\\r\\n1 6\\r\\n7 4\\r\\n', 'output': ['5.0000000000 15.5000000000']}, {'input': '4 2\\r\\n10 8 1 17\\r\\n2\\r\\n2 3\\r\\n3 2\\r\\n', 'output': ['4.5000000000 13.5000000000']}, {'input': '10 5\\r\\n3 10 0 15 45 84 67 100 46 73\\r\\n3\\r\\n1 6\\r\\n8 9\\r\\n6 1\\r\\n', 'output': ['5.0000000000 73.0000000000']}, {'input': '8 4\\r\\n1 2 17 45 23 0 5 5\\r\\n4\\r\\n8 7\\r\\n2 3\\r\\n1 4\\r\\n6 5\\r\\n', 'output': ['5.0000000000 23.0000000000']}, {'input': '11 3\\r\\n60 100 84 74 19 77 36 48 70 18 63\\r\\n4\\r\\n3 7 11\\r\\n5 9 2\\r\\n2 9 5\\r\\n8 10 1\\r\\n', 'output': ['42.0000000000 63.0000000000']}, {'input': '9 4\\r\\n25 0 71 69 12 67 39 4 62\\r\\n2\\r\\n2 1\\r\\n5 7\\r\\n', 'output': ['12.5000000000 70.0000000000']}, {'input': '6 4\\r\\n85 84 81 33 28 94\\r\\n3\\r\\n3\\r\\n4\\r\\n6\\r\\n', 'output': ['28.0000000000 94.0000000000']}, {'input': '7 2\\r\\n4 34 56 0 35 23 2\\r\\n1\\r\\n1 2 6\\r\\n', 'output': ['12.3333333333 31.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n2\\r\\n1\\r\\n2\\r\\n', 'output': ['1.0000000000 2.0000000000']}, {'input': '1 1\\r\\n0\\r\\n1\\r\\n1\\r\\n', 'output': ['0.0000000000 0.0000000000']}, {'input': '1 1\\r\\n99\\r\\n0\\r\\n', 'output': ['99.0000000000 99.0000000000']}, {'input': '5 1\\r\\n34 0 100 45 3\\r\\n0\\r\\n', 'output': ['36.4000000000 36.4000000000']}, {'input': '6 1\\r\\n33 2 7 99 0 0\\r\\n1\\r\\n3 6 5 4 1 2\\r\\n', 'output': ['23.5000000000 23.5000000000']}, {'input': '6 6\\r\\n1 0 46 5 79 4\\r\\n0\\r\\n', 'output': ['0.0000000000 79.0000000000']}, {'input': '8 8\\r\\n3 7 74 90 100 74 4 55\\r\\n6\\r\\n2\\r\\n3\\r\\n4\\r\\n8\\r\\n6\\r\\n7\\r\\n', 'output': ['3.0000000000 100.0000000000']}, {'input': '10 5\\r\\n0 0 0 0 0 0 0 0 0 0\\r\\n3\\r\\n1 2\\r\\n8 5\\r\\n2 1\\r\\n', 'output': ['0.0000000000 0.0000000000']}, {'input': '15 4\\r\\n3 6 15 0 99 100 57 32 67 99 44 10 85 45 37\\r\\n6\\r\\n2 3 1\\r\\n15 13 12\\r\\n3 1 2\\r\\n10 9 5\\r\\n8 4 11\\r\\n8 4 11\\r\\n', 'output': ['8.0000000000 88.3333333333']}, {'input': '8 3\\r\\n45 67 0 98 12 56 93 99\\r\\n1\\r\\n4 5\\r\\n', 'output': ['22.5000000000 96.0000000000']}, {'input': '10 4\\r\\n45 32 0 0 99 73 24 22 81 56\\r\\n6\\r\\n4 3\\r\\n3 4\\r\\n5 9\\r\\n4 3\\r\\n9 5\\r\\n5 9\\r\\n', 'output': ['0.0000000000 90.0000000000']}, {'input': '10 4\\r\\n45 32 0 0 99 73 24 22 81 56\\r\\n2\\r\\n4 8\\r\\n1 9\\r\\n', 'output': ['11.0000000000 86.0000000000']}, {'input': '4 1\\r\\n4 10 0 35\\r\\n7\\r\\n1 2 3 4\\r\\n1 2 4 3\\r\\n3 2 4 1\\r\\n4 3 2 1\\r\\n3 1 4 2\\r\\n2 4 1 3\\r\\n4 3 1 2\\r\\n', 'output': ['12.2500000000 12.2500000000']}, {'input': '12 3\\r\\n4 77 0 90 2 5 74 7 77 100 45 34\\r\\n3\\r\\n9 12 1 5\\r\\n4 3 10 2\\r\\n11 6 7 8\\r\\n', 'output': ['29.2500000000 66.7500000000']}, {'input': '15 2\\r\\n56 9 100 86 5 44 3 63 98 23 11 84 56 33 84\\r\\n1\\r\\n4 7 6 2 8 3 15\\r\\n', 'output': ['38.2857142857 55.5714285714']}, {'input': '19 2\\r\\n63 18 76 3 18 22 2 49 50 23 13 76 29 36 95 49 78 95 25\\r\\n5\\r\\n15 5 3 4 18 17 6 1 8\\r\\n14 11 2 19 13 7 12 16 9\\r\\n19 16 13 9 2 11 14 12 7\\r\\n12 9 11 7 14 2 19 13 16\\r\\n15 18 17 3 1 5 8 6 4\\r\\n', 'output': ['33.1111111111 55.4444444444']}, {'input': '67 5\\r\\n11 89 2 71 41 6 35 19 34 51 49 97 37 57 84 39 3 62 14 1 67 18 49 77 16 46 99 38 3 51 68 72 31 79 35 10 65 90 28 43 88 67 2 13 93 40 52 28 75 26 90 3 22 29 44 38 73 62 17 92 91 37 29 87 25 54 8\\r\\n3\\r\\n46 57 28 2 54 12 19 18 42 4 14 37 13\\r\\n61 11 30 64 38 47 15 41 67 29 20 35 45\\r\\n11 35 67 15 38 47 61 45 30 20 41 64 29\\r\\n', 'output': ['10.9230769231 71.9230769231']}, {'input': '89 3\\r\\n100 52 96 60 96 86 70 2 16 44 79 37 18 16 92 0 55 49 98 83 47 42 45 92 33 99 20 52 32 47 30 61 89 86 29 64 80 96 35 85 17 39 14 2 43 8 65 98 62 57 54 73 87 79 34 42 50 89 56 54 52 59 93 31 95 86 29 4 4 46 2 14 45 73 42 24 3 55 47 10 60 61 67 16 20 71 47 91 29\\r\\n1\\r\\n38 1 80 16 77 58 17 30 39 4 49 63 11 47 8 61 10 24 64 15 74 6 45 12 35 79 22 52 20\\r\\n', 'output': ['25.3448275862 74.4137931034']}, {'input': '53 27\\r\\n100 85 0 86 19 32 82 66 54 10 9 81 40 65 23 17 58 68 100 46 28 48 28 11 79 11 36 89 61 11 67 88 79 28 16 93 31 34 54 9 33 45 60 18 23 28 38 71 76 51 10 9 92\\r\\n20\\r\\n43\\r\\n43\\r\\n14\\r\\n2\\r\\n25\\r\\n31\\r\\n25\\r\\n13\\r\\n48\\r\\n1\\r\\n38\\r\\n46\\r\\n9\\r\\n19\\r\\n30\\r\\n1\\r\\n28\\r\\n19\\r\\n43\\r\\n27\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '93 3\\r\\n47 45 32 90 54 22 99 70 55 22 2 86 23 18 0 42 42 41 63 90 60 70 81 38 42 4 17 96 15 65 2 21 66 5 18 20 97 38 18 2 60 41 38 18 39 38 43 75 51 97 72 90 59 4 40 34 40 18 15 71 82 9 66 82 0 50 21 37 47 31 65 42 6 78 94 0 5 56 85 28 37 30 77 11 71 42 48 4 42 13 96 82 35\\r\\n2\\r\\n62 86 47 34 31 59 58 76 15 88 23 19 87 48 41 32 74 89 26 20 61 5 35 39 81 2 17 55 40 69 38\\r\\n9 3 53 73 18 92 52 12 46 82 75 27 68 24 7 79 22 50 67 65 33 51 54 10 8 70 57 43 25 63 30\\r\\n', 'output': ['36.2258064516 51.3870967742']}, {'input': '99 1\\r\\n20 83 45 17 53 33 56 58 65 26 68 44 21 52 55 21 79 23 82 11 19 33 29 66 10 29 69 15 5 0 99 25 13 83 62 63 1 22 7 93 51 41 64 35 89 10 97 0 43 34 89 97 52 65 80 0 73 12 100 45 78 8 5 47 23 91 46 33 70 37 25 55 75 60 100 30 28 87 59 1 58 39 29 66 60 66 68 77 0 93 18 28 51 64 36 25 63 74 6\\r\\n0\\r\\n', 'output': ['46.5757575758 46.5757575758']}, {'input': '100 54\\r\\n46 64 22 47 5 70 61 8 25 78 88 62 91 52 3 55 46 63 90 27 92 64 33 83 7 7 0 47 64 85 89 3 40 49 11 14 51 93 5 56 8 37 82 49 10 7 14 7 33 66 35 66 41 23 7 56 55 2 74 39 75 16 46 63 81 10 73 67 70 30 37 22 97 33 52 60 38 42 16 43 79 70 15 51 70 8 99 75 7 76 49 10 96 74 82 97 15 98 75 11\\r\\n20\\r\\n91\\r\\n60\\r\\n90\\r\\n92\\r\\n88\\r\\n52\\r\\n53\\r\\n15\\r\\n92\\r\\n58\\r\\n88\\r\\n18\\r\\n95\\r\\n8\\r\\n43\\r\\n22\\r\\n69\\r\\n48\\r\\n42\\r\\n88\\r\\n', 'output': ['0.0000000000 99.0000000000']}, {'input': '86 5\\r\\n51 59 52 84 64 40 9 6 35 63 66 82 52 52 84 66 89 85 30 0 91 81 73 0 58 22 59 96 27 28 35 2 79 55 88 43 92 97 89 52 49 27 100 54 4 11 28 38 86 82 63 72 31 75 77 42 35 1 56 11 93 56 80 63 5 78 63 73 8 2 44 18 6 20 47 4 88 16 24 13 100 68 34 21 0 70\\r\\n4\\r\\n57 32 69 9 61 39 10 6 56 36 78 8 80 58 50 65 77\\r\\n2 83 3 31 85 21 62 28 79 46 49 20 22 34 42 12 76\\r\\n32 65 58 39 57 9 50 8 61 10 80 77 69 36 56 78 6\\r\\n4 86 40 30 54 75 37 48 64 15 59 44 16 5 43 73 81\\r\\n', 'output': ['24.6470588235 74.5882352941']}, {'input': '90 15\\r\\n78 78 57 46 96 3 2 79 26 58 95 79 33 33 54 60 26 93 85 74 51 100 68 40 51 14 78 0 73 61 17 59 8 40 87 93 57 72 38 92 20 15 77 74 97 59 33 45 69 71 71 32 25 58 86 26 13 36 6 73 56 36 30 43 38 26 58 6 74 13 11 23 80 54 81 76 41 22 1 73 10 15 82 47 66 50 98 74 12 63\\r\\n9\\r\\n88 89 86 66 12 15\\r\\n59 3 38 78 53 18\\r\\n21 61 36 39 57 4\\r\\n67 55 14 46 60 54\\r\\n84 75 9 23 48 1\\r\\n57 4 61 21 36 39\\r\\n79 72 2 83 6 26\\r\\n4 61 36 39 21 57\\r\\n74 32 24 11 85 42\\r\\n', 'output': ['6.1666666667 95.0000000000']}, {'input': '100 87\\r\\n89 43 79 20 88 74 41 99 16 64 53 54 54 59 26 20 31 81 100 66 12 71 93 40 53 2 55 69 53 91 23 54 43 19 78 73 95 70 69 47 15 63 60 88 98 63 13 66 95 55 12 3 4 12 14 79 80 15 62 15 93 11 23 86 17 71 22 21 40 90 71 90 81 40 50 68 55 28 100 12 0 21 66 93 80 91 62 37 9 7 59 10 18 73 7 32 50 12 57 87\\r\\n50\\r\\n25\\r\\n54\\r\\n83\\r\\n46\\r\\n6\\r\\n39\\r\\n48\\r\\n85\\r\\n10\\r\\n79\\r\\n66\\r\\n97\\r\\n6\\r\\n85\\r\\n64\\r\\n67\\r\\n87\\r\\n44\\r\\n65\\r\\n67\\r\\n41\\r\\n5\\r\\n3\\r\\n76\\r\\n93\\r\\n49\\r\\n26\\r\\n82\\r\\n3\\r\\n11\\r\\n47\\r\\n13\\r\\n70\\r\\n74\\r\\n82\\r\\n99\\r\\n43\\r\\n91\\r\\n42\\r\\n7\\r\\n92\\r\\n80\\r\\n78\\r\\n45\\r\\n3\\r\\n84\\r\\n6\\r\\n29\\r\\n38\\r\\n45\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '82 2\\r\\n89 81 1 65 17 37 65 73 19 20 67 15 86 99 30 70 44 83 2 50 20 93 57 64 30 85 53 9 22 18 97 13 85 38 70 96 3 85 12 72 44 10 62 93 60 81 7 91 17 13 64 63 83 96 15 9 62 43 83 72 65 89 49 75 36 61 98 89 48 45 74 80 37 39 71 1 76 69 56 72 28 86\\r\\n1\\r\\n41 71 27 69 17 14 20 46 53 64 5 35 7 9 56 18 75 36 16 34 81 37 58 65 66 4 40 8 44 19 31 38 30 60 77 80 42 63 73 33 43\\r\\n', 'output': ['51.6829268293 56.7804878049']}, {'input': '10 6\\r\\n100 100 100 100 100 100 100 100 100 100\\r\\n6\\r\\n4\\r\\n10\\r\\n2\\r\\n4\\r\\n7\\r\\n5\\r\\n', 'output': ['100.0000000000 100.0000000000']}, {'input': '100 6\\r\\n14 6 0 34 22 84 9 18 94 61 16 83 79 58 80 22 16 78 51 74 5 96 29 75 91 89 78 85 12 25 24 65 23 66 54 56 89 25 18 51 74 83 89 31 6 45 79 17 35 16 74 93 82 80 62 6 46 14 90 68 51 59 1 27 73 95 89 17 43 63 23 26 99 77 23 39 43 100 65 80 78 71 48 48 31 3 69 7 26 2 44 57 99 68 1 18 9 62 97 43\\r\\n0\\r\\n', 'output': ['6.9375000000 92.4375000000']}, {'input': '67 5\\r\\n11 89 2 71 41 6 35 19 34 51 49 97 37 57 84 39 3 62 14 1 67 18 49 77 16 46 99 38 3 51 68 72 31 79 35 10 65 90 28 43 88 67 2 13 93 40 52 28 75 26 90 3 22 29 44 38 73 62 17 92 91 37 29 87 25 54 8\\r\\n3\\r\\n46 57 28 2 54 12 19 18 42 4 14 37 13\\r\\n61 11 30 64 38 47 15 41 67 29 20 35 45\\r\\n11 35 67 15 38 47 61 45 30 20 41 64 29\\r\\n', 'output': ['10.9230769231 71.9230769231']}, {'input': '23 5\\r\\n30 38 57 63 1 26 11 47 47 95 83 9 61 24 82 82 86 99 90 18 4 5 76\\r\\n5\\r\\n2 15 21 13\\r\\n1 4 9 7\\r\\n3 8 14 17\\r\\n23 6 5 11\\r\\n12 10 22 16\\r\\n', 'output': ['37.7500000000 53.5000000000']}, {'input': '100 3\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 89\\r\\n0\\r\\n', 'output': ['0.0000000000 2.6969696970']}, {'input': '100 1\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100\\r\\n0\\r\\n', 'output': ['1.0000000000 1.0000000000']}, {'input': '100 100\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100\\r\\n0\\r\\n', 'output': ['0.0000000000 100.0000000000']}, {'input': '100 100\\r\\n53 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.0000000000 53.0000000000']}, {'input': '100 1\\r\\n45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.4500000000 0.4500000000']}, {'input': '100 13\\r\\n45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n0\\r\\n', 'output': ['0.0000000000 6.4285714286']}, {'input': '100 1\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 99\\r\\n1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 100 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 67\\r\\n', 'output': ['0.9900000000 0.9900000000']}, {'input': '100 100\\r\\n1 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\\r\\n2\\r\\n1\\r\\n100\\r\\n', 'output': ['1.0000000000 100.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n2\\r\\n1\\r\\n1\\r\\n', 'output': ['1.0000000000 3.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n4\\r\\n1\\r\\n1\\r\\n2\\r\\n2\\r\\n', 'output': ['1.0000000000 2.0000000000']}, {'input': '3 2\\r\\n1 2 3\\r\\n5\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n', 'output': ['1.0000000000 3.0000000000']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n, k, q, a[101], i, j, x, y, z, l, m, n1, n2, n3, n4, n5, n6, n7, n8,\n      n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22,\n      n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36,\n      n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50,\n      n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64,\n      n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78,\n      n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92,\n      n93, n94, n95, n96, n97, n98, n99, n100;\n  cin >> n >> k;\n  for (i = 1; i <= n; i++) cin >> a[i];\n  cin >> q;\n  for (i = 1; i <= q; i++) {\n    cin >> n1;\n    for (j = 2; j <= n1; j++) cin >> n2;\n  }\n  sort(a + 1, a + n + 1);\n  cout << a[n - k + 1] / k << \" \";\n  cout << a[n - k + 1 + (n - k) / 2] / k << endl;\n  return 0;\n}\n"}
{"src_uid": "0a77937c01ac69490f8b478eae77de1d", "id": 48, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2500, "testcases": "[{'input': ['1\\r\\n1\\r\\n2\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n2 2\\r\\n1 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['2\\r\\n2 2\\r\\n1 2\\r\\n5\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n661397 84822 450280 333101\\r\\n69413 273309 622139 246693\\r\\n731970 90981 550001\\r\\n606352 518276\\r\\n101164\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['1\\r\\n168203\\r\\n790853\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n798097 886901 292688 792934\\r\\n987579 447910 689959 311317\\r\\n41624 797440 706737\\r\\n921438 988902\\r\\n506461\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['1\\r\\n363820\\r\\n536239\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n593976 642315\\r\\n657797 687112\\r\\n1001\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['5\\r\\n614938 943862 658531 218884 839422\\r\\n274607 627152 341331 47413 388677\\r\\n161622 678978 475188 341521\\r\\n215974 138021 733048\\r\\n397507 162082\\r\\n355681\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['5\\r\\n702 114 58 727 872\\r\\n781267 425220 371815 135938 904298\\r\\n780616 359062 776048 643435\\r\\n291016 886705 209517\\r\\n146755 15373\\r\\n592370\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['1\\r\\n1\\r\\n1\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['1\\r\\n2588\\r\\n570509\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['2\\r\\n6262 4403\\r\\n785114 650029\\r\\n382125\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n8992 8296 4165\\r\\n638616 382669 833904\\r\\n985282 709096\\r\\n387795\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n5370 4894 9568 852\\r\\n899565 709693 770339 953202\\r\\n653322 585847 268500\\r\\n823472 887614\\r\\n49168\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n1 1\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 8 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 2 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n2 2\\r\\n3\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 10 1\\r\\n100 10 100\\r\\n10 10\\r\\n20\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n1 1 1 1\\r\\n1 1 1 1\\r\\n2 2 2\\r\\n3 3\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['6\\r\\n1 1 2 2 1 1\\r\\n1 1 2 2 1 1\\r\\n2 4 2 4 2\\r\\n2 2 2 2\\r\\n4 10 4\\r\\n4 4\\r\\n8\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n2 2 2\\r\\n1 1 1\\r\\n3 3\\r\\n5\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['4\\r\\n5 5 5 5\\r\\n5 5 5 5\\r\\n10 5 10\\r\\n10 10\\r\\n20\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['3\\r\\n5 5 5\\r\\n5 5 5\\r\\n10 10\\r\\n15\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n2 2 2\\r\\n2 2 2\\r\\n3 3\\r\\n6\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['3\\r\\n1 1 1\\r\\n1 1 1\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['6\\r\\n1 1 1 1 1 1\\r\\n1 2 1 1 2 1\\r\\n1 9 1 9 1\\r\\n1 1 1 1\\r\\n2 9 2\\r\\n2 2\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['7\\r\\n1 1 1 1 1 1 1\\r\\n1 9 1 9 1 9 9\\r\\n1 9 1 9 1 9\\r\\n1 1 9 1 9\\r\\n1 9 9 1\\r\\n1 9 1\\r\\n1 1\\r\\n3\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['9\\r\\n1 1 1 1 1 1 1 1 1\\r\\n9 1 9 1 9 1 9 9 9\\r\\n9 1 1 1 1 9 9 9\\r\\n9 2 9 2 9 9 9\\r\\n9 1 1 9 9 9\\r\\n9 1 9 9 9\\r\\n9 1 9 9\\r\\n9 1 9\\r\\n9 1\\r\\n4\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['20\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n9 1 9 9 1 9 1 9 1 1 9 9 9 1 9 1 9 1 9 9\\r\\n9 1 9 9 1 1 9 9 1 9 9 9 1 9 9 1 1 9 9\\r\\n9 1 9 9 1 9 9 1 1 9 9 1 9 9 9 2 9 9\\r\\n9 1 9 1 1 9 1 9 1 9 1 9 9 9 2 9 9\\r\\n9 1 1 9 1 1 9 9 1 1 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 2 9 9 9 2 9 9\\r\\n9 2 9 9 2 9 9 9 9 2 9\\r\\n9 2 9 2 2 9 9 9 9 2\\r\\n9 2 2 9 2 9 9 9 2\\r\\n9 4 9 9 2 9 9 2\\r\\n9 4 9 9 2 9 2\\r\\n9 4 9 9 2 2\\r\\n9 4 9 9 4\\r\\n9 4 9 4\\r\\n9 4 4\\r\\n9 8\\r\\n8\\r\\n'], 'output': ['Fat Rat\\r\\n']}, {'input': ['15\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n9 9 9 9 9 9 1 9 9 9 9 9 9 9 9\\r\\n9 9 9 9 9 1 1 9 9 9 9 9 9 9\\r\\n9 9 9 9 1 1 1 9 9 9 9 9 9\\r\\n9 9 9 1 1 9 1 9 9 9 9 9\\r\\n9 9 1 1 9 9 1 9 9 9 9\\r\\n9 1 1 1 9 9 1 9 9 9\\r\\n1 9 1 1 9 9 1 9 9\\r\\n1 9 1 9 9 9 1 9\\r\\n1 9 1 9 9 9 9\\r\\n1 9 1 9 9 9\\r\\n1 9 9 9 9\\r\\n1 9 9 9\\r\\n1 9 9\\r\\n1 9\\r\\n1\\r\\n'], 'output': ['Cerealguy\\r\\n']}, {'input': ['6\\r\\n1 1 2 2 1 1\\r\\n1 1 1 2 1 1\\r\\n1 1 2 4 2\\r\\n1 9 2 2\\r\\n1 9 4\\r\\n4 4\\r\\n8\\r\\n'], 'output': ['Cerealguy\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint n, a[55], w[55][55];\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n - i + 1; j++) scanf(\"%d\", &w[i][j]);\n  for (int i = 1; i <= n; i++) {\n    int sum = 0;\n    for (int j = 1; j <= n - i + 1; j++) sum += w[i][j];\n    if (sum >= a[i]) {\n      puts(\"Cerealguy\");\n      return 0;\n    }\n  }\n  puts(\"Fat Rat\");\n  return 0;\n}\n"}
{"src_uid": "4c2865e4742a29460ca64860740b84f4", "id": 49, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1900, "testcases": "[{'input': '60 60 45 55\\r\\n80 80 8 32\\r\\n', 'output': ['1']}, {'input': '60 60 45 55\\r\\n80 60 15 25\\r\\n', 'output': ['4']}, {'input': '50 50 35 45\\r\\n90 50 35 45\\r\\n', 'output': ['0']}, {'input': '0 0 50 70\\r\\n1 0 60 80\\r\\n', 'output': ['2']}, {'input': '0 0 1 2\\r\\n10 0 2 20\\r\\n', 'output': ['2']}, {'input': '31 13 22 95\\r\\n48 63 21 98\\r\\n', 'output': ['0']}, {'input': '31 40 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['0']}, {'input': '-65 -81 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['4']}, {'input': '41 -14 37 76\\r\\n48 65 66 98\\r\\n', 'output': ['0']}, {'input': '41 -14 16 100\\r\\n48 17 37 66\\r\\n', 'output': ['1']}, {'input': '-75 -9 20 40\\r\\n25 55 99 100\\r\\n', 'output': ['0']}, {'input': '-45 6 20 40\\r\\n35 6 99 100\\r\\n', 'output': ['0']}, {'input': '-3 84 20 40\\r\\n76 96 96 100\\r\\n', 'output': ['0']}, {'input': '10 -91 20 40\\r\\n70 -91 79 100\\r\\n', 'output': ['1']}, {'input': '-64 -47 20 40\\r\\n-5 -37 79 100\\r\\n', 'output': ['1']}, {'input': '-63 97 20 40\\r\\n-34 97 11 48\\r\\n', 'output': ['0']}, {'input': '-67 47 20 40\\r\\n-38 47 11 49\\r\\n', 'output': ['0']}, {'input': '-100 -91 20 40\\r\\n-71 -91 11 68\\r\\n', 'output': ['0']}, {'input': '45 -76 20 40\\r\\n69 -69 15 65\\r\\n', 'output': ['1']}, {'input': '12 -43 20 40\\r\\n41 -43 11 97\\r\\n', 'output': ['1']}, {'input': '10 71 20 40\\r\\n39 78 10 49\\r\\n', 'output': ['0']}, {'input': '56 44 20 40\\r\\n83 44 12 13\\r\\n', 'output': ['1']}, {'input': '-20 78 20 40\\r\\n8 85 10 11\\r\\n', 'output': ['1']}, {'input': '65 -9 20 40\\r\\n94 -9 10 49\\r\\n', 'output': ['0']}, {'input': '-84 -59 20 40\\r\\n-74 -59 29 30\\r\\n', 'output': ['1']}, {'input': '33 -37 20 40\\r\\n42 -37 28 29\\r\\n', 'output': ['1']}, {'input': '-25 10 20 40\\r\\n4 17 10 69\\r\\n', 'output': ['0']}, {'input': '13 32 20 40\\r\\n42 32 10 69\\r\\n', 'output': ['1']}, {'input': '-12 -1 20 40\\r\\n-3 -1 28 31\\r\\n', 'output': ['1']}, {'input': '48 30 20 40\\r\\n77 37 10 99\\r\\n', 'output': ['1']}, {'input': '47 -50 20 40\\r\\n56 -46 28 30\\r\\n', 'output': ['1']}, {'input': '-26 -65 20 40\\r\\n52 -65 98 100\\r\\n', 'output': ['1']}, {'input': '-46 36 20 40\\r\\n14 36 80 100\\r\\n', 'output': ['2']}, {'input': '19 96 20 40\\r\\n77 96 78 99\\r\\n', 'output': ['2']}, {'input': '-42 -44 20 40\\r\\n-32 -44 30 48\\r\\n', 'output': ['1']}, {'input': '83 -23 20 40\\r\\n93 -23 30 50\\r\\n', 'output': ['2']}, {'input': '-100 -97 20 40\\r\\n-90 -97 30 100\\r\\n', 'output': ['2']}, {'input': '65 16 20 40\\r\\n74 16 29 48\\r\\n', 'output': ['1']}, {'input': '-66 78 20 40\\r\\n-62 81 25 45\\r\\n', 'output': ['2']}, {'input': '-11 63 20 40\\r\\n-2 63 29 31\\r\\n', 'output': ['2']}, {'input': '91 -59 20 40\\r\\n100 -59 29 100\\r\\n', 'output': ['2']}, {'input': '39 90 20 40\\r\\n47 90 28 31\\r\\n', 'output': ['2']}, {'input': '-100 40 20 40\\r\\n-81 40 1 38\\r\\n', 'output': ['1']}, {'input': '24 -24 20 40\\r\\n43 -24 1 21\\r\\n', 'output': ['2']}, {'input': '-8 35 20 40\\r\\n11 35 1 19\\r\\n', 'output': ['2']}, {'input': '-52 -94 20 40\\r\\n-33 -94 1 39\\r\\n', 'output': ['1']}, {'input': '61 2 20 40\\r\\n67 10 10 30\\r\\n', 'output': ['2']}, {'input': '49 -67 20 40\\r\\n57 -67 12 28\\r\\n', 'output': ['2']}, {'input': '65 17 20 40\\r\\n84 17 1 58\\r\\n', 'output': ['1']}, {'input': '-16 -18 20 40\\r\\n3 -18 1 59\\r\\n', 'output': ['2']}, {'input': '24 -16 20 40\\r\\n33 -16 11 31\\r\\n', 'output': ['2']}, {'input': '-83 96 20 40\\r\\n-64 96 1 98\\r\\n', 'output': ['2']}, {'input': '-10 89 20 40\\r\\n-2 89 12 29\\r\\n', 'output': ['2']}, {'input': '-40 -69 20 40\\r\\n60 -69 80 100\\r\\n', 'output': ['0']}, {'input': '-70 66 20 40\\r\\n8 66 58 98\\r\\n', 'output': ['0']}, {'input': '-11 -97 20 40\\r\\n67 -97 58 100\\r\\n', 'output': ['0']}, {'input': '-60 60 20 40\\r\\n0 60 40 100\\r\\n', 'output': ['1']}, {'input': '0 73 20 40\\r\\n59 73 39 100\\r\\n', 'output': ['1']}, {'input': '28 -91 20 40\\r\\n58 -91 10 49\\r\\n', 'output': ['0']}, {'input': '75 72 20 40\\r\\n99 90 10 50\\r\\n', 'output': ['0']}, {'input': '-84 74 20 40\\r\\n-54 74 10 63\\r\\n', 'output': ['0']}, {'input': '35 -6 20 40\\r\\n59 12 10 70\\r\\n', 'output': ['1']}, {'input': '67 41 20 40\\r\\n97 41 10 98\\r\\n', 'output': ['1']}, {'input': '-27 -68 20 40\\r\\n2 -68 9 48\\r\\n', 'output': ['0']}, {'input': '50 13 20 40\\r\\n78 13 8 12\\r\\n', 'output': ['1']}, {'input': '-73 36 20 40\\r\\n-44 36 9 10\\r\\n', 'output': ['1']}, {'input': '70 92 20 40\\r\\n99 92 9 49\\r\\n', 'output': ['0']}, {'input': '37 -80 20 40\\r\\n66 -80 9 66\\r\\n', 'output': ['0']}, {'input': '8 -95 20 40\\r\\n36 -95 8 68\\r\\n', 'output': ['1']}, {'input': '-9 77 20 40\\r\\n20 77 9 100\\r\\n', 'output': ['1']}, {'input': '-37 20 20 40\\r\\n41 31 99 100\\r\\n', 'output': ['1']}, {'input': '-36 28 20 40\\r\\n24 28 99 100\\r\\n', 'output': ['2']}, {'input': '-77 -16 20 40\\r\\n-18 -6 99 100\\r\\n', 'output': ['2']}, {'input': '-65 24 20 40\\r\\n-6 24 99 100\\r\\n', 'output': ['4']}, {'input': '-55 23 20 40\\r\\n-46 23 31 48\\r\\n', 'output': ['1']}, {'input': '-37 18 20 40\\r\\n-30 18 33 47\\r\\n', 'output': ['2']}, {'input': '-45 -93 20 40\\r\\n-36 -93 31 99\\r\\n', 'output': ['2']}, {'input': '-97 -29 20 40\\r\\n-39 -19 99 100\\r\\n', 'output': ['4']}, {'input': '14 18 20 40\\r\\n23 22 30 49\\r\\n', 'output': ['1']}, {'input': '-90 -38 20 40\\r\\n-81 -38 30 49\\r\\n', 'output': ['2']}, {'input': '52 -4 20 40\\r\\n61 -4 30 31\\r\\n', 'output': ['2']}, {'input': '-54 46 20 40\\r\\n-45 50 30 98\\r\\n', 'output': ['2']}, {'input': '74 -34 20 40\\r\\n82 -30 30 31\\r\\n', 'output': ['2']}, {'input': '23 -61 20 40\\r\\n41 -55 1 37\\r\\n', 'output': ['1']}, {'input': '57 -86 20 40\\r\\n75 -86 1 22\\r\\n', 'output': ['2']}, {'input': '-38 43 20 40\\r\\n-20 49 1 20\\r\\n', 'output': ['2']}, {'input': '-19 10 20 40\\r\\n-2 10 2 37\\r\\n', 'output': ['1']}, {'input': '64 58 20 40\\r\\n74 58 7 30\\r\\n', 'output': ['2']}, {'input': '53 49 20 40\\r\\n62 49 10 29\\r\\n', 'output': ['2']}, {'input': '53 80 20 40\\r\\n70 80 2 3\\r\\n', 'output': ['4']}, {'input': '73 -41 20 40\\r\\n91 -35 1 49\\r\\n', 'output': ['1']}, {'input': '-8 -34 20 40\\r\\n9 -34 2 57\\r\\n', 'output': ['2']}, {'input': '51 -40 20 40\\r\\n60 -40 9 31\\r\\n', 'output': ['2']}, {'input': '-29 87 20 40\\r\\n-11 93 1 94\\r\\n', 'output': ['2']}, {'input': '-64 3 20 40\\r\\n-55 7 6 30\\r\\n', 'output': ['2']}, {'input': '24 36 20 40\\r\\n41 39 1 2\\r\\n', 'output': ['4']}, {'input': '-56 -64 20 40\\r\\n44 2 96 100\\r\\n', 'output': ['0']}, {'input': '-59 -17 20 40\\r\\n21 -17 59 100\\r\\n', 'output': ['0']}, {'input': '-43 -3 20 40\\r\\n57 -3 79 80\\r\\n', 'output': ['1']}, {'input': '20 57 20 40\\r\\n99 69 58 100\\r\\n', 'output': ['0']}, {'input': '36 82 20 40\\r\\n96 82 38 100\\r\\n', 'output': ['1']}, {'input': '-55 37 20 40\\r\\n4 47 38 100\\r\\n', 'output': ['1']}, {'input': '-58 -4 20 40\\r\\n42 91 99 100\\r\\n', 'output': ['1']}, {'input': '28 51 20 40\\r\\n67 51 1 58\\r\\n', 'output': ['0']}, {'input': '-79 -62 20 40\\r\\n-41 -62 2 58\\r\\n', 'output': ['0']}, {'input': '-19 -10 20 40\\r\\n20 -10 1 19\\r\\n', 'output': ['1']}, {'input': '-95 -64 20 40\\r\\n-56 -64 1 78\\r\\n', 'output': ['0']}, {'input': '-17 -7 20 40\\r\\n22 -7 1 79\\r\\n', 'output': ['1']}, {'input': '-45 86 20 40\\r\\n-6 86 1 99\\r\\n', 'output': ['1']}, {'input': '-71 -23 20 40\\r\\n-32 -23 1 18\\r\\n', 'output': ['1']}, {'input': '-20 11 20 40\\r\\n80 11 60 100\\r\\n', 'output': ['1']}, {'input': '-27 97 20 40\\r\\n51 97 38 98\\r\\n', 'output': ['1']}, {'input': '-47 -84 20 40\\r\\n52 -64 61 81\\r\\n', 'output': ['2']}, {'input': '-81 99 20 40\\r\\n-3 99 38 99\\r\\n', 'output': ['1']}, {'input': '-54 25 20 40\\r\\n6 25 20 100\\r\\n', 'output': ['2']}, {'input': '-22 40 20 40\\r\\n36 40 18 100\\r\\n', 'output': ['2']}, {'input': '-71 15 20 40\\r\\n29 90 85 100\\r\\n', 'output': ['2']}, {'input': '31 -13 20 40\\r\\n69 -5 1 56\\r\\n', 'output': ['0']}, {'input': '-46 55 20 40\\r\\n-17 55 7 11\\r\\n', 'output': ['1']}, {'input': '-35 25 20 40\\r\\n-6 32 7 10\\r\\n', 'output': ['1']}, {'input': '27 -98 20 40\\r\\n65 -98 1 58\\r\\n', 'output': ['0']}, {'input': '-100 -19 20 40\\r\\n-62 -19 1 18\\r\\n', 'output': ['1']}, {'input': '48 66 20 40\\r\\n78 66 9 10\\r\\n', 'output': ['2']}, {'input': '-37 -22 20 40\\r\\n-8 -22 8 9\\r\\n', 'output': ['2']}, {'input': '-42 41 20 40\\r\\n-4 49 1 78\\r\\n', 'output': ['0']}, {'input': '-2 -27 20 40\\r\\n35 -27 1 77\\r\\n', 'output': ['1']}, {'input': '-28 -36 20 40\\r\\n10 -28 1 100\\r\\n', 'output': ['1']}, {'input': '-17 31 20 40\\r\\n21 39 1 14\\r\\n', 'output': ['1']}, {'input': '1 44 20 40\\r\\n39 44 1 2\\r\\n', 'output': ['2']}, {'input': '21 -99 20 40\\r\\n58 -97 1 2\\r\\n', 'output': ['2']}, {'input': '-86 -97 20 40\\r\\n14 -31 79 100\\r\\n', 'output': ['1']}, {'input': '-33 42 20 40\\r\\n47 42 39 100\\r\\n', 'output': ['1']}, {'input': '-79 45 20 40\\r\\n21 45 57 80\\r\\n', 'output': ['2']}, {'input': '-99 -66 20 40\\r\\n-20 -54 39 100\\r\\n', 'output': ['1']}, {'input': '39 -44 20 40\\r\\n99 -44 17 100\\r\\n', 'output': ['2']}, {'input': '10 86 20 40\\r\\n69 96 19 100\\r\\n', 'output': ['2']}, {'input': '-72 -4 20 40\\r\\n28 93 99 100\\r\\n', 'output': ['2']}, {'input': '-81 -55 20 40\\r\\n19 20 83 85\\r\\n', 'output': ['4']}, {'input': '-65 -34 20 40\\r\\n35 66 99 100\\r\\n', 'output': ['4']}, {'input': '-91 -46 10 50\\r\\n-73 -40 30 31\\r\\n', 'output': ['2']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int x1, y1, r1, R1, x2, y2, r2, R2;\n  cin >> x1 >> y1 >> r1 >> R1 >> x2 >> y2 >> r2 >> R2;\n  int ans = 0;\n  if (x1 == x2 && y1 == y2) {\n    if (r1 + r2 <= R1 + R2)\n      ans = 0;\n    else if (R1 + r2 <= R1 + R2)\n      ans = 1;\n    else if (R1 + R2 <= R1 + R2)\n      ans = 4;\n    else\n      ans = 0;\n  } else {\n    double a1 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a2 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a3 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a4 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a5 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a6 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a7 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a8 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a9 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a10 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a11 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a12 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a13 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a14 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a15 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a16 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a17 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a18 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a19 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a20 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a21 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a22 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a23 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a24 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a25 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a26 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a27 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a28 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a29 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a30 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a31 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a32 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a33 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a34 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a35 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a36 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a37 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a38 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a39 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a40 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a41 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a42 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a43 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a44 = (double)(R1 - r1) * (R1 - r1) + (R2 - r2) * (R2 - r2);\n    double a45 = (double)(R1 + r1) * (R1 + r1) + (R2 + r2) * (R2 + r2);\n    double a46 = (double)(x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    double a47 = (double)(R1 - r1) * (R1 - r1) + (R2 - r"}
{"src_uid": "01eccb722b09a0474903b7e5abc4c47a", "id": 50, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1700, "testcases": "[{'input': '4\\r\\n', 'output': ['3']}, {'input': '9\\r\\n', 'output': ['5']}, {'input': '10\\r\\n', 'output': ['5']}, {'input': '12\\r\\n', 'output': ['5']}, {'input': '1\\r\\n', 'output': ['1']}, {'input': '19\\r\\n', 'output': ['7']}, {'input': '3\\r\\n', 'output': ['5']}, {'input': '2\\r\\n', 'output': ['3']}, {'input': '5\\r\\n', 'output': ['3']}, {'input': '6\\r\\n', 'output': ['5']}, {'input': '7\\r\\n', 'output': ['5']}, {'input': '8\\r\\n', 'output': ['5']}, {'input': '11\\r\\n', 'output': ['5']}, {'input': '13\\r\\n', 'output': ['5']}, {'input': '14\\r\\n', 'output': ['7']}, {'input': '15\\r\\n', 'output': ['7']}, {'input': '16\\r\\n', 'output': ['7']}, {'input': '17\\r\\n', 'output': ['7']}, {'input': '18\\r\\n', 'output': ['7']}, {'input': '20\\r\\n', 'output': ['7']}, {'input': '21\\r\\n', 'output': ['7']}, {'input': '22\\r\\n', 'output': ['7']}, {'input': '23\\r\\n', 'output': ['7']}, {'input': '24\\r\\n', 'output': ['7']}, {'input': '25\\r\\n', 'output': ['7']}, {'input': '26\\r\\n', 'output': ['9']}, {'input': '27\\r\\n', 'output': ['9']}, {'input': '28\\r\\n', 'output': ['9']}, {'input': '29\\r\\n', 'output': ['9']}, {'input': '30\\r\\n', 'output': ['9']}, {'input': '31\\r\\n', 'output': ['9']}, {'input': '32\\r\\n', 'output': ['9']}, {'input': '33\\r\\n', 'output': ['9']}, {'input': '34\\r\\n', 'output': ['9']}, {'input': '35\\r\\n', 'output': ['9']}, {'input': '36\\r\\n', 'output': ['9']}, {'input': '37\\r\\n', 'output': ['9']}, {'input': '38\\r\\n', 'output': ['9']}, {'input': '39\\r\\n', 'output': ['9']}, {'input': '40\\r\\n', 'output': ['9']}, {'input': '41\\r\\n', 'output': ['9']}, {'input': '42\\r\\n', 'output': ['11']}, {'input': '43\\r\\n', 'output': ['11']}, {'input': '44\\r\\n', 'output': ['11']}, {'input': '45\\r\\n', 'output': ['11']}, {'input': '46\\r\\n', 'output': ['11']}, {'input': '47\\r\\n', 'output': ['11']}, {'input': '48\\r\\n', 'output': ['11']}, {'input': '49\\r\\n', 'output': ['11']}, {'input': '50\\r\\n', 'output': ['11']}, {'input': '51\\r\\n', 'output': ['11']}, {'input': '52\\r\\n', 'output': ['11']}, {'input': '53\\r\\n', 'output': ['11']}, {'input': '54\\r\\n', 'output': ['11']}, {'input': '55\\r\\n', 'output': ['11']}, {'input': '56\\r\\n', 'output': ['11']}, {'input': '57\\r\\n', 'output': ['11']}, {'input': '58\\r\\n', 'output': ['11']}, {'input': '59\\r\\n', 'output': ['11']}, {'input': '60\\r\\n', 'output': ['11']}, {'input': '61\\r\\n', 'output': ['11']}, {'input': '62\\r\\n', 'output': ['13']}, {'input': '63\\r\\n', 'output': ['13']}, {'input': '64\\r\\n', 'output': ['13']}, {'input': '65\\r\\n', 'output': ['13']}, {'input': '66\\r\\n', 'output': ['13']}, {'input': '67\\r\\n', 'output': ['13']}, {'input': '68\\r\\n', 'output': ['13']}, {'input': '69\\r\\n', 'output': ['13']}, {'input': '70\\r\\n', 'output': ['13']}, {'input': '71\\r\\n', 'output': ['13']}, {'input': '72\\r\\n', 'output': ['13']}, {'input': '73\\r\\n', 'output': ['13']}, {'input': '74\\r\\n', 'output': ['13']}, {'input': '75\\r\\n', 'output': ['13']}, {'input': '76\\r\\n', 'output': ['13']}, {'input': '77\\r\\n', 'output': ['13']}, {'input': '78\\r\\n', 'output': ['13']}, {'input': '79\\r\\n', 'output': ['13']}, {'input': '80\\r\\n', 'output': ['13']}, {'input': '81\\r\\n', 'output': ['13']}, {'input': '82\\r\\n', 'output': ['13']}, {'input': '83\\r\\n', 'output': ['13']}, {'input': '84\\r\\n', 'output': ['13']}, {'input': '85\\r\\n', 'output': ['13']}, {'input': '86\\r\\n', 'output': ['15']}, {'input': '87\\r\\n', 'output': ['15']}, {'input': '88\\r\\n', 'output': ['15']}, {'input': '89\\r\\n', 'output': ['15']}, {'input': '90\\r\\n', 'output': ['15']}, {'input': '91\\r\\n', 'output': ['15']}, {'input': '92\\r\\n', 'output': ['15']}, {'input': '93\\r\\n', 'output': ['15']}, {'input': '94\\r\\n', 'output': ['15']}, {'input': '95\\r\\n', 'output': ['15']}, {'input': '96\\r\\n', 'output': ['15']}, {'input': '97\\r\\n', 'output': ['15']}, {'input': '98\\r\\n', 'output': ['15']}, {'input': '99\\r\\n', 'output': ['15']}, {'input': '100\\r\\n', 'output': ['15']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int x;\n  cin >> x;\n  int n = 1;\n  while (n * n < x) n++;\n  if (n * n == x)\n    cout << n << endl;\n  else\n    cout << n + 1 << endl;\n  return 0;\n}\n"}
{"src_uid": "5c4bd12df3915186a7b506c2060db125", "id": 51, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1600, "testcases": "[{'input': '3\\r\\n', 'output': ['6']}, {'input': '4\\r\\n', 'output': ['11']}, {'input': '1\\r\\n', 'output': ['1']}, {'input': '2\\r\\n', 'output': ['3']}, {'input': '5\\r\\n', 'output': ['19']}, {'input': '6\\r\\n', 'output': ['32']}, {'input': '7\\r\\n', 'output': ['53']}, {'input': '8\\r\\n', 'output': ['87']}, {'input': '9\\r\\n', 'output': ['142']}, {'input': '10\\r\\n', 'output': ['231']}, {'input': '11\\r\\n', 'output': ['375']}, {'input': '12\\r\\n', 'output': ['608']}, {'input': '13\\r\\n', 'output': ['985']}, {'input': '14\\r\\n', 'output': ['1595']}, {'input': '15\\r\\n', 'output': ['2582']}, {'input': '16\\r\\n', 'output': ['4179']}, {'input': '17\\r\\n', 'output': ['6763']}, {'input': '18\\r\\n', 'output': ['10944']}, {'input': '19\\r\\n', 'output': ['17709']}, {'input': '20\\r\\n', 'output': ['28655']}, {'input': '21\\r\\n', 'output': ['46366']}, {'input': '22\\r\\n', 'output': ['75023']}, {'input': '30\\r\\n', 'output': ['3524576']}, {'input': '40\\r\\n', 'output': ['433494435']}, {'input': '35\\r\\n', 'output': ['39088167']}, {'input': '747\\r\\n', 'output': ['864986803']}, {'input': '811\\r\\n', 'output': ['121575679']}, {'input': '523\\r\\n', 'output': ['810594171']}, {'input': '939\\r\\n', 'output': ['834252191']}, {'input': '7218\\r\\n', 'output': ['124017976']}, {'input': '6578\\r\\n', 'output': ['105202924']}, {'input': '4994\\r\\n', 'output': ['909729063']}, {'input': '3410\\r\\n', 'output': ['995527079']}, {'input': '9122\\r\\n', 'output': ['424682518']}, {'input': '11500\\r\\n', 'output': ['123418864']}, {'input': '37212\\r\\n', 'output': ['991850249']}, {'input': '95628\\r\\n', 'output': ['265542306']}, {'input': '21341\\r\\n', 'output': ['913329411']}, {'input': '63405\\r\\n', 'output': ['206564501']}, {'input': '670293\\r\\n', 'output': ['922731630']}, {'input': '12357\\r\\n', 'output': ['808648710']}, {'input': '838069\\r\\n', 'output': ['536545985']}, {'input': '696485\\r\\n', 'output': ['467961960']}, {'input': '1000000\\r\\n', 'output': ['986892583']}, {'input': '999999\\r\\n', 'output': ['452491920']}, {'input': '999998\\r\\n', 'output': ['534400661']}, {'input': '999997\\r\\n', 'output': ['918091264']}, {'input': '999996\\r\\n', 'output': ['616309402']}, {'input': '999000\\r\\n', 'output': ['47031574']}, {'input': '100\\r\\n', 'output': ['252403354']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 10;\nconst int mod = 1e9 + 7;\nint n, ans;\nint main() {\n  scanf(\"%d\", &n);\n  ans = 1;\n  for (int i = 1; i <= n; i++) {\n    ans = (ans * 2) % mod;\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "5ce8de80c6953cd1e6e6eefd9ad35f7e", "id": 52, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 1700, "testcases": "[{'input': '([])\\r\\n', 'output': ['1\\r\\n([])\\r\\n']}, {'input': '(((\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '(][)\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '(()[))()[]\\r\\n', 'output': ['1\\r\\n()[]\\r\\n']}, {'input': '(][](](][[(][\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((])(]]))(](((()[[()[[[)([]()])[(]][)]])[]]()[()[[[[(([[)\\r\\n', 'output': ['1\\r\\n[]()\\r\\n']}, {'input': '](]][)]()][[])[()(][)]))[)[]()()])[([((([[(([)][(])](][])([([)())))([(([][))[)()]][[])()[)](][[((]](](])]][(][[()(]][[)][])(][]))[])[)[(])[)()()[[))((()]]([([[(]))][(]())))))[[]]][][))[)])])()((((([[](([[()(([[()](([[([[(](]([)]())))[)]([]\\r\\n', 'output': ['2\\r\\n[[]]\\r\\n']}, {'input': '[(()[])]()[()[]]\\r\\n', 'output': ['4\\r\\n[(()[])]()[()[]]\\r\\n']}, {'input': '([])()[()]()()[(([])[]()[()([])()[][]()])]\\r\\n', 'output': ['9\\r\\n([])()[()]()()[(([])[]()[()([])()[][]()])]\\r\\n']}, {'input': '[()][([[]])][[[]()]][()[]]()()([[][]][[]][](()))[[[(())]]][]()(([([])(([[[]]()])(()))]((())))([()]([()[[[]([][[[[][(())([[]()])]]][[(())]([])]()][[](())]()[])]()[][]]([[]])[]])[(()[()((()[][()]))][])[]()()([]())](()[][][])()()[]()))[]()[]\\r\\n', 'output': ['61\\r\\n[()][([[]])][[[]()]][()[]]()()([[][]][[]][](()))[[[(())]]][]()(([([])(([[[]]()])(()))]((())))([()]([()[[[]([][[[[][(())([[]()])]]][[(())]([])]()][[](())]()[])]()[][]]([[]])[]])[(()[()((()[][()]))][])[]()()([]())](()[][][])()()[]()))[]()[]\\r\\n']}, {'input': '(][(](][[(][(\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': ')[)][)))((([[)]((]][)[)((]([)[)(([)[)]][([\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '][([))][[))[[((]][([(([[)]]])([)][([([[[[([))]])][[[[[([)]]([[(((]([(](([([[)[(]])(][(((][)[[)][)(][[)[[)])))[)]))]])[([[))(([(]][))([(]]][(])]))))))[[[[[([[([)[[[)[(([)[[(][((([(([([(([))[[[[[[([(](])(][[)[)(](]])]]]((([))(])[[)[))[([[[[(]][)[([(]](([)([[)[[([))[)\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '()]])()()]\\r\\n', 'output': ['0\\r\\n\\r\\n']}, {'input': '[([[)[(()[])[()][]()[[[)()[][[[()[]]]()]][\\r\\n', 'output': ['5\\r\\n()[][[[()[]]]()]\\r\\n']}, {'input': '[()][][][][]()[)])))[(]()[]([)(])[)(])()[))][)]()[][][]][][)(((([))))[)[))]]([[[)[())))[(][(()[()[(]())]])([[)[)[[())[()[]()[[[[])][))](()()())()](((((([(()]][[)([)([]]))(()[((]]())[]])][)()(][]][][(([])]]((]])([[][)])(][)][([[[[(][()(][[(\\r\\n', 'output': ['5\\r\\n[()][][][][]()\\r\\n']}, {'input': '(([])\\r\\n', 'output': ['1\\r\\n([])\\r\\n']}, {'input': '()()([]]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '([[[]]))\\r\\n', 'output': ['2\\r\\n[[]]\\r\\n']}, {'input': '[[]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((((([]((((((((((\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '(((((([](((((((\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '[[])\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '((()))([]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '([]\\r\\n', 'output': ['1\\r\\n[]\\r\\n']}, {'input': '[]())])([)][[[]])))][])([]([]()]]))))())[[([))()(])))]][)[][[])(][()()]]](]][])[[))((]][)[)(]))([])((]([)([])]]]]]]][)[[[]]([[[]]][(][][])()[[([](])(]]((]([[)])]])([)(][([)(([))(]([)[[](([(](][[)()(][\\r\\n', 'output': ['3\\r\\n[[[]]]\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nint n, m, k, t, a, b, c, d, e, f, g, h, i, j, l, r, x, y, z, ans, sum,\n    cnt[N], dp[N], pre[N], suf[N];\nchar s[N];\nint main() {\n  scanf(\"%s\", s + 1);\n  n = strlen(s + 1);\n  for (int i = 1; i <= n; i++) {\n    if (s[i] == '(')\n      cnt[i] = cnt[i - 1] + 1;\n    else if (s[i] == '[')\n      cnt[i] = cnt[i - 1] - 1;\n    else\n      cnt[i] = cnt[i - 1];\n  }\n  for (int i = 1; i <= n; i++) {\n    if (s[i] == '(')\n      dp[i] = dp[i - 1] + 1;\n    else if (s[i] == '[')\n      dp[i] = dp[i - 1] - 1;\n    else\n      dp[i] = dp[i - 1];\n  }\n  for (int i = 1; i <= n; i++) {\n    if (s[i] == '(')\n      pre[i] = pre[i - 1] + 1;\n    else if (s[i] == '[')\n      pre[i] = pre[i - 1] - 1;\n    else\n      pre[i] = pre[i - 1];\n  }\n  for (int i = n; i >= 1; i--) {\n    if (s[i] == '(')\n      suf[i] = suf[i + 1] + 1;\n    else if (s[i] == '[')\n      suf[i] = suf[i + 1] - 1;\n    else\n      suf[i] = suf[i + 1];\n  }\n  for (int i = 1; i <= n; i++) {\n    if (s[i] == '(')\n      sum = sum + 1;\n    else if (s[i] == '[')\n      sum = sum - 1;\n    else\n      sum = sum;\n    if (sum == 0) {\n      if (dp[i - 1] > 0) {\n        if (ans < dp[i - 1]) {\n          ans = dp[i - 1];\n          x = i;\n        }\n      }\n    }\n  }\n  if (ans == 0) {\n    printf(\"0\\n\");\n    return 0;\n  }\n  printf(\"%d\\n\", ans);\n  for (int i = x; i >= 1; i--) {\n    if (s[i] == '(')\n      sum = sum + 1;\n    else if (s[i] == '[')\n      sum = sum - 1;\n    else\n      sum = sum;\n    if (sum == 0) {\n      if (dp[i - 1] > 0) {\n        if (ans < dp[i - 1]) {\n          ans = dp[i - 1];\n          x = i;\n        }\n      }\n    }\n  }\n  for (int i = x; i <= n; i++) {\n    if (s[i] == '(')\n      sum = sum + 1;\n    else if (s[i] == '[')\n      sum = sum - 1;\n    else\n      sum = sum;\n    if (sum == 0) {\n      if (dp[i - 1] > 0) {\n        if (ans < dp[i - 1]) {\n          ans = dp[i - 1];\n          x = i;\n        }\n      }\n    }\n  }\n  for (int i = x; i >= 1; i--) {\n    if (s[i] == '(')\n      sum = sum + 1;\n    else if (s[i] == '[')\n      sum = sum - 1;\n    else\n      sum = sum;\n    if (sum == 0) {\n      if (dp[i - 1] > 0) {\n        if (ans < dp[i - 1]) {\n          ans = dp[i - 1];\n          x = i;\n        }\n      }\n    }\n  }\n  for (int i = x; i <= n; i++) {\n    if (s[i] == '(')\n      sum = sum + 1;\n    else if (s[i] == '[')\n      sum = sum - 1;\n    else\n      sum = sum;\n    if (sum == 0) {\n      if (dp[i - 1] > 0) {\n        if (ans < dp[i - 1]) {\n          ans = dp[i - 1];\n          x = i;\n        }\n      }\n    }\n  }\n  for (int i = 1; i <= n; i++) {\n    if (s[i] == '(')\n      sum = sum + 1;\n    else if (s[i] == '[')\n      sum = sum - 1;\n    else\n      sum = sum;\n    if (sum == 0) {\n      if (dp[i - 1] > 0) {\n        if (ans < dp[i - 1]) {\n          ans = dp[i - 1];\n          x = i;\n        }\n      }\n    }\n  }\n  for (int i = x; i >= 1; i--) {\n    if (s[i] == '(')\n      sum = sum + 1;\n    else if (s[i] == '[')\n      sum = sum - 1;\n    else\n      sum = sum;\n    if (sum == 0) {\n      if (dp[i - 1] > 0) {\n        if (ans < dp[i - 1]) {\n          ans = dp[i - 1];\n          x = i;\n        }\n      }\n    }\n  }\n  for (int i = x; i <= n; i"}
{"src_uid": "b8b3f75baaef9c4232e7fd7555d4fabb", "id": 53, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2600, "testcases": "[{'input': '3 1\\r\\n3 10 20 30\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 2\\r\\n1 40\\r\\n4 10 20 30 40\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '5 1\\r\\n5 1 2 3 4 5\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 1 2 3\\r\\n3 4 5 6\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 1 2 3\\r\\n3 1 2 3\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 2 3 1\\r\\n3 5 4 6\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '6 2\\r\\n3 999999998 999999999 1000000000\\r\\n3 999999998 999999999 1000000000\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 2\\r\\n2 1 2\\r\\n2 1 2\\r\\n', 'output': ['0.250000000\\r\\n']}, {'input': '4 6\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '8 6\\r\\n5 5 4 3 2 1\\r\\n5 5 4 3 2 1\\r\\n3 5 3 1\\r\\n2 3 1\\r\\n1 3\\r\\n1 3\\r\\n', 'output': ['0.002500000\\r\\n']}, {'input': '5 10\\r\\n1 10\\r\\n1 9\\r\\n1 8\\r\\n1 7\\r\\n1 6\\r\\n1 5\\r\\n1 4\\r\\n1 3\\r\\n1 2\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '1 1\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 1\\r\\n2 1 2\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 1\\r\\n3 1 2 3\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '2 3\\r\\n2 2 4\\r\\n1 2\\r\\n1 1\\r\\n', 'output': ['0.750000000\\r\\n']}, {'input': '3 2\\r\\n3 2 3 5\\r\\n2 1 3\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '2 2\\r\\n4 1 3 5 6\\r\\n2 1 2\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '7 2\\r\\n5 1 2 3 4 6\\r\\n2 1 2\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '3 3\\r\\n5 1 3 4 5 6\\r\\n2 2 4\\r\\n1 1\\r\\n', 'output': ['0.075000000\\r\\n']}, {'input': '8 3\\r\\n4 2 3 5 7\\r\\n4 1 3 5 6\\r\\n1 1\\r\\n', 'output': ['0.625000000\\r\\n']}, {'input': '9 5\\r\\n2 1 3\\r\\n4 2 4 6 7\\r\\n1 2\\r\\n2 2 3\\r\\n1 2\\r\\n', 'output': ['0.500000000\\r\\n']}, {'input': '1 5\\r\\n3 2 3 4\\r\\n3 1 2 3\\r\\n3 2 4 5\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['0.333333333\\r\\n']}, {'input': '11 4\\r\\n3 2 4 6\\r\\n6 1 3 5 7 9 10\\r\\n2 1 2\\r\\n1 1\\r\\n', 'output': ['0.555555556\\r\\n']}, {'input': '10 4\\r\\n2 2 3\\r\\n6 1 3 5 7 8 10\\r\\n4 1 2 4 5\\r\\n1 1\\r\\n', 'output': ['0.041666667\\r\\n']}, {'input': '11 6\\r\\n1 1\\r\\n4 1 2 3 4\\r\\n2 1 2\\r\\n3 2 3 4\\r\\n2 1 2\\r\\n2 1 2\\r\\n', 'output': ['0.143750000\\r\\n']}, {'input': '7 5\\r\\n1 1\\r\\n5 2 4 6 8 10\\r\\n6 1 3 4 5 7 8\\r\\n2 1 3\\r\\n1 2\\r\\n', 'output': ['0.008333333\\r\\n']}, {'input': '1 5\\r\\n6 1 3 5 7 8 10\\r\\n5 1 2 4 6 7\\r\\n1 1\\r\\n3 1 2 3\\r\\n1 1\\r\\n', 'output': ['0.166666667\\r\\n']}, {'input': '9 5\\r\\n1 2\\r\\n6 1 2 3 5 7 9\\r\\n4 2 3 5 6\\r\\n1 2\\r\\n6 2 4 6 8 9 11\\r\\n', 'output': ['0.000555556\\r\\n']}, {'input': '20 9\\r\\n4 2 3 4 6\\r\\n4 2 4 5 6\\r\\n1 2\\r\\n3 2 4 6\\r\\n2 2 3\\r\\n2 2 3\\r\\n1 2\\r\\n2 2 4\\r\\n1 1\\r\\n', 'output': ['1.000000000\\r\\n']}, {'input': '21 12\\r\\n7 657 7 6 5 4 2 1\\r\\n8 142 9 7 6 5 4 2 1\\r\\n8 853 9 8 7 6 4 2 1\\r\\n11 708 369 9 8 7 6 5 4 3 2 1\\r\\n8 9 8 7 6 5 4 3 2\\r\\n9 969 867 774 9 8 7 5 4 2\\r\\n9 869 575 527 9 7 5 4 3 2\\r\\n8 839 248 77 9 7 6 3 1\\r\\n9 952 9 7 6 5 4 3 2 1\\r\\n7 380 9 8 7 6 5 4\\r\\n9 511 494 203 9 8 7 6 4 1\\r\\n7 721 8 7 6 5 4 2\\r\\n', 'output': ['0.000000000\\r\\n']}, {'input': '51 9\\r\\n7 483 459 7 6 5 2 1\\r\\n12 953 940 926 792 612 241 7 5 4 3 2 1\\r\\n14 904 633 441 361 324 286 79 8 7 6 5 4 2 1\\r\\n12 928 450 443 426 53 9 8 7 6 5 4 1\\r\\n10 643 415 202 109 106 9 7 6 4 1\\r\\n10 803 582 381 354 216 169 6 5 3 1\\r\\n12 813 701 569 467 328 179 63 8 7 5 3 1\\r\\n12 822 636 573 563 480 370 367 8 7 6 5 1\\r\\n11 910 774 463 175 80 8 7 5 4 2 1\\r\\n', 'output': ['0.000000000\\r\\n']}, {'input': '90 50\\r\\n3 523 254 10\\r\\n2 335 10\\r\\n1 10\\r\\n3 645 293 10\\r\\n3 174 56 10\\r\\n1 10\\r\\n1 10\\r\\n1 10\\r\\n1 10\\r\\n3 384 161 10\\r\\n2 465 10\\r\\n2 582 10\\r\\n1 10\\r\\n1 10\\r\\n2 165 10\\r\\n2 673 10\\r\\n2 638 10\\r\\n4 653 535 192 10\\r\\n2 269 10\\r\\n3 427 134 10\\r\\n2 966 10\\r\\n1 10\\r\\n3 221 21 10\\r\\n2 840 10\\r\\n2 764 10\\r\\n1 10\\r\\n2 747 10\\r\\n2 67 10\\r\\n1 10\\r\\n3 951 13 10\\r\\n3 651 405 10\\r\\n1 10\\r\\n1 10\\r\\n3 729 87 10\\r\\n2 631 10\\r\\n2 376 10\\r\\n2 652 10\\r\\n1 10\\r\\n1 10\\r\\n3 923 233 10\\r\\n2 450 10\\r\\n2 830 10\\r\\n2 271 10\\r\\n3 775 391 10\\r\\n3 850 733 10\\r\\n2 598 10\\r\\n1 10\\r\\n3 797 682 10\\r\\n3 596 508 10\\r\\n1 10\\r\\n', 'output': ['0.005722876\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1005;\nint n, m, k, c[N], dp[N][N], a[N];\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  for (int i = 1; i <= m; i++) {\n    scanf(\"%d\", &k);\n    for (int j = 1; j <= k; j++) scanf(\"%d\", &a[j]);\n    sort(a + 1, a + k + 1);\n    for (int j = 1; j <= k; j++) c[a[j]]++;\n    for (int j = 1; j <= k; j++)\n      for (int l = 1; l <= c[a[j]]; l++) dp[l][j] = dp[l][j - 1] + 1;\n  }\n  int ans = 0;\n  for (int i = 1; i <= n; i++) {\n    int res = 0;\n    for (int j = 1; j <= m; j++)\n      for (int l = 1; l <= c[a[j]]; l++)\n        if (dp[l][j] >= i) res += dp[l][j];\n    ans = max(ans, res);\n  }\n  printf(\"%.10lf\\n\", (double)ans / (double)n / (double)n);\n  return 0;\n}\n"}
{"src_uid": "fc133fe6353089a0ebee08dec919f608", "id": 54, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2000, "testcases": "[{'input': '4\\r\\n', 'output': ['2']}, {'input': '5\\r\\n', 'output': ['6']}, {'input': '6\\r\\n', 'output': ['14']}, {'input': '7\\r\\n', 'output': ['25']}, {'input': '1\\r\\n', 'output': ['0']}, {'input': '8\\r\\n', 'output': ['40']}, {'input': '10\\r\\n', 'output': ['82']}, {'input': '15\\r\\n', 'output': ['328']}, {'input': '16\\r\\n', 'output': ['395']}, {'input': '20\\r\\n', 'output': ['801']}, {'input': '50\\r\\n', 'output': ['13439']}, {'input': '100\\r\\n', 'output': ['110267']}, {'input': '127\\r\\n', 'output': ['226374']}, {'input': '202\\r\\n', 'output': ['911772']}, {'input': '333\\r\\n', 'output': ['4100905']}, {'input': '404\\r\\n', 'output': ['7300516']}, {'input': '411\\r\\n', 'output': ['7699373']}, {'input': '571\\r\\n', 'output': ['20657840']}, {'input': '600\\r\\n', 'output': ['23969924']}, {'input': '771\\r\\n', 'output': ['50875182']}, {'input': '10000\\r\\n', 'output': ['111107314481']}, {'input': '20000\\r\\n', 'output': ['888859064010']}, {'input': '30000\\r\\n', 'output': ['2999966359410']}, {'input': '50000\\r\\n', 'output': ['13888610595721']}, {'input': '99999\\r\\n', 'output': ['111107776644397']}, {'input': '200000\\r\\n', 'output': ['888885923513074']}, {'input': '400000\\r\\n', 'output': ['7111099254185938']}, {'input': '600000\\r\\n', 'output': ['23999973325791164']}, {'input': '800000\\r\\n', 'output': ['56888794064261806']}, {'input': '1000000\\r\\n', 'output': ['111111074060178115']}, {'input': '828282\\r\\n', 'output': ['63138169426585853']}, {'input': '729761\\r\\n', 'output': ['43181611460546198']}, {'input': '653451\\r\\n', 'output': ['31002458021265725']}, {'input': '987572\\r\\n', 'output': ['107019643962508968']}, {'input': '167590\\r\\n', 'output': ['522999083675296']}, {'input': '358712\\r\\n', 'output': ['5128538168895562']}, {'input': '498138\\r\\n', 'output': ['13734280958577573']}, {'input': '983242\\r\\n', 'output': ['105618162572849728']}, {'input': '312433\\r\\n', 'output': ['3388650642180089']}, {'input': '783472\\r\\n', 'output': ['53435215015075583']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n  int n;\n  cin >> n;\n  int ans = 0;\n  for (int i = 1; i <= n; i++) {\n    int x = i;\n    int sum = 0;\n    while (x) {\n      sum += x % 10;\n      x /= 10;\n    }\n    if (sum % 9 == 0) {\n      ans += 9;\n    } else {\n      ans += sum % 9;\n    }\n  }\n  cout << ans * 3 << endl;\n  return 0;\n}\n"}
{"src_uid": "566adc43d2d6df257c26c5f5495a5745", "id": 55, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': '2 3 3\\r\\n', 'output': ['1']}, {'input': '2 3 4\\r\\n', 'output': ['4']}, {'input': '9 1 79\\r\\n', 'output': ['8']}, {'input': '9 1 345\\r\\n', 'output': ['8']}, {'input': '9 9 999982045\\r\\n', 'output': ['344373768']}, {'input': '4 42 44\\r\\n', 'output': ['12']}, {'input': '6 43 659\\r\\n', 'output': ['365']}, {'input': '8 54 999992388\\r\\n', 'output': ['741886148']}, {'input': '861 11 17\\r\\n', 'output': ['14']}, {'input': '89 34 119\\r\\n', 'output': ['80']}, {'input': '84 67 999993310\\r\\n', 'output': ['829809148']}, {'input': '9219 537 98\\r\\n', 'output': ['98']}, {'input': '763 582 510\\r\\n', 'output': ['96']}, {'input': '6355 60160 999982994\\r\\n', 'output': ['904671182']}, {'input': '396882961 9936448 752\\r\\n', 'output': ['528']}, {'input': '394292559875270 34297300532732 28\\r\\n', 'output': ['28']}, {'input': '8523703220091 953421047275844 163\\r\\n', 'output': ['30']}, {'input': '713030357739784847 61197710123555584 999992531\\r\\n', 'output': ['207016405']}, {'input': '75903940600326238527 492179977057716178 954\\r\\n', 'output': ['450']}, {'input': '8085477143815539692925721 57241684823084777591460 968\\r\\n', 'output': ['304']}, {'input': '67609394386924890416446 78162115935271414671181267 999987217\\r\\n', 'output': ['926946271']}, {'input': '3351262437484130462277638791970372162118802730187825044167229944871677684706592699530322737272222086076517455404652584348 147310576952932829345029460612849431175622785231399764423717734155248977073541821053441627535488066058597900989095431439 999998948\\r\\n', 'output': ['930694076']}, {'input': '61063034544457239668509642598956869508193198481915116469015956878854905975766584002919896320353661294612971855029955483257741525207429239630069409321331850413146512850720681578339422084340720535114848966742045420860633093949996367883 965415513080902927493169838825380834798188421277961155726185690857844534367611949025561401481462737822765050755128163519122172969767981851117402342816829930821131453945898813517587656899608854645391515043085723743408226445117376493281975889755859761322184701256801 999998603\\r\\n', 'output': ['60342257']}, {'input': '9 1000000000000000000000000000000000000000000000000000000 345\\r\\n', 'output': ['192']}, {'input': '8053063680000000000000000000000000002 268435456000000000000005 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000025 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000026 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000027 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000028 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000029 805306368\\r\\n', 'output': ['268435456']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000030 805306368\\r\\n', 'output': ['536870912']}, {'input': '8053063680000000000000000000000000002 2684354560000000000000031 805306368\\r\\n', 'output': ['268435456']}, {'input': '2271048430505293080737093330373572593316324321603522463486966273671353266974713306925326907468317965879775893196923719457524955744 8990615363653447573832140957083458603886706189959668013719622351914533208654357508127820477597609318856255372184258450991108060161 53727872\\r\\n', 'output': ['26470400']}, {'input': '244741007655429712 1 297825872\\r\\n', 'output': ['297825871']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 10;\nconst int M = 1e9 + 7;\nconst int inf = 0x3f3f3f3f;\nconst long long INF = 0x3f3f3f3f3f3f3f3f;\nconst double eps = 1e-6;\nconst double PI = acos(-1.0);\nint b, n, c;\nint main() {\n  scanf(\"%d%d%d\", &b, &n, &c);\n  int ans = 0;\n  for (int i = 1; i <= n; i++) {\n    int t = i;\n    int tmp = 1;\n    while (t) {\n      tmp *= b;\n      t--;\n    }\n    if (tmp <= c)\n      ans++;\n    else\n      break;\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "98489fe54488dcfb45f8ae7b5c473d88", "id": 56, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2400, "testcases": "[{'input': ['2\\r\\n1234\\r\\n'], 'output': ['HHMM']}, {'input': ['2\\r\\n9911\\r\\n'], 'output': ['HMHM']}, {'input': ['2\\r\\n0153\\r\\n'], 'output': ['HHMM']}, {'input': ['3\\r\\n614615\\r\\n'], 'output': ['HHHMMM']}, {'input': ['4\\r\\n21305374\\r\\n'], 'output': ['HHHHMMMM']}, {'input': ['4\\r\\n00013213\\r\\n'], 'output': ['HHHHMMMM']}, {'input': ['1\\r\\n01\\r\\n'], 'output': ['HM']}, {'input': ['1\\r\\n21\\r\\n'], 'output': ['HM']}, {'input': ['1\\r\\n99\\r\\n'], 'output': ['HM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['10\\r\\n89959999998998796989\\r\\n'], 'output': ['HHHHHHMMMMHMMHHMHMMM']}, {'input': ['10\\r\\n99999988899989998889\\r\\n'], 'output': ['HHHHHHHHHMMMHMMMMMMM']}, {'input': ['7\\r\\n10210320200120\\r\\n'], 'output': ['HHHHHMMHMHMMMM']}, {'input': ['18\\r\\n949787136121830145537930861689777414\\r\\n'], 'output': ['HHMHMHHHHHHHMHHHHHHHHMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n956859579789834858167218778893796384\\r\\n'], 'output': ['HHHHHMHHMHHMMHHMHMHHHHHMHMMMMMMMMMMM']}, {'input': ['18\\r\\n789998768896689887879979878577696879\\r\\n'], 'output': ['HHHHMHHHHHMHHHMHHHHHMMHMMMMMMMMMMMMM']}, {'input': ['18\\r\\n899898999999899789998999898998699998\\r\\n'], 'output': ['HHHHHHHHHHHMHMMHHMMMHMMMHMHMMMHMMMMM']}, {'input': ['18\\r\\n998999899889999999999999999999998999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMHMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n520301003123441003000011410650200262\\r\\n'], 'output': ['HHHHHHHHHHHHMMHHHMHHHMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n003003010010211000120021200200013010\\r\\n'], 'output': ['HHMHHMHHHHHHMHHHHHHMHHMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n101011411002041200101000000000001000\\r\\n'], 'output': ['HHHHHHMHHHHHHMHMHHMHMHHMMMMMMMMMMMMM']}, {'input': ['18\\r\\n010000000000010000000000000101001000\\r\\n'], 'output': ['HHHHHHHHHHHHHMHHHHHMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000001000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n999999999999999999999999999999999899\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMHMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n000000000000000000000000000000000000\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n998877665544332211998877665544332211\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['9\\r\\n998877665544332211\\r\\n'], 'output': ['HMHMHMHMHMHMHMHMHM']}, {'input': ['18\\r\\n999988887777666655554444333322221111\\r\\n'], 'output': ['HHMMHHMMHHMMHHMMHHMMHHMMHHMMHHMMHHMM']}, {'input': ['18\\r\\n111111111111111111111111111111111111\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['9\\r\\n112233445566778899\\r\\n'], 'output': ['HHHHHHHHHMMMMMMMMM']}, {'input': ['18\\r\\n112233445566778899112233445566778899\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHMMHHMMMMMMMMMMMMMMMM']}, {'input': ['18\\r\\n111122223333444455556666777788889999\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHHHMMMMMMMMMMMMMMMMMM']}, {'input': ['7\\r\\n98887870656634\\r\\n'], 'output': ['HHHMHMMHMHMMHM']}, {'input': ['6\\r\\n389531391995\\r\\n'], 'output': ['HHMHHHHMMMMM']}, {'input': ['7\\r\\n98887870656634\\r\\n'], 'output': ['HHHMHMMHMHMMHM']}, {'input': ['8\\r\\n6770379299275795\\r\\n'], 'output': ['HHHHHHMHMMHMMMMM']}, {'input': ['9\\r\\n256276354396913650\\r\\n'], 'output': ['HHHHMHHHHHMMMMMMMM']}, {'input': ['17\\r\\n0505221537264872903260121660510735\\r\\n'], 'output': ['HHHHHHHHHHHHHHHHMHMMMMMMMMMMMMMMMM']}, {'input': ['16\\r\\n94037617932892444411587756822347\\r\\n'], 'output': ['HHHHHHHHMHHHMHHHMMHHMMMMMMMMMMMM']}, {'input': ['15\\r\\n051911296923361789993851872792\\r\\n'], 'output': ['HHHHHHHMHMHHHHHHHMMMMMMMMMMMMM']}, {'input': ['14\\r\\n1637752215267288357827332779\\r\\n'], 'output': ['HHHHHHHHHHHHHHMMMMMMMMMMMMMM']}, {'input': ['13\\r\\n04432024633126608067252737\\r\\n'], 'output': ['HHHHHHHHMHHHHMMHMMMMMMMMMM']}, {'input': ['12\\r\\n254163163934611135461589\\r\\n'], 'output': ['HHHHHHHHHMHHMHMMMMMMMMMM']}, {'input': ['11\\r\\n3657071886390583694504\\r\\n'], 'output': ['HHHHHHHHHHHMMMMMMMMMMM']}, {'input': ['10\\r\\n27555210523159542624\\r\\n'], 'output': ['HMHHHHHHMHHHMMMMMMMM']}, {'input': ['6\\r\\n389531391995\\r\\n'], 'output': ['HHMHHHHMMMMM']}, {'input': ['5\\r\\n9823921785\\r\\n'], 'output': ['HHHHMMHMMM']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 5;\nconst int MOD = 1e9 + 7;\nconst int INF = 1e9 + 7;\nconst long long LLINF = 1e18 + 7;\nconst int dx[] = {0, 0, 1, -1};\nconst int dy[] = {1, -1, 0, 0};\nconst double EPS = 1e-9;\nconst double PI = acos(-1.0);\nint n, a[N], dp[N][N][2];\nstring s;\nint solve(int i, int j, int k) {\n  if (i == n) return 0;\n  if (j == n) return 0;\n  if (k == 2) return -INF;\n  if (dp[i][j][k]!= -1) return dp[i][j][k];\n  int ans = -INF;\n  if (k == 0) {\n    ans = max(ans, solve(i + 1, j, 1) + (a[i] - '0') * 2);\n    ans = max(ans, solve(i, j + 1, 1) + (a[i] - '0'));\n  } else {\n    ans = max(ans, solve(i + 1, j, 0) + (a[i] - '0') * 2);\n    ans = max(ans, solve(i, j + 1, 0) + (a[i] - '0'));\n  }\n  return dp[i][j][k] = ans;\n}\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  memset(dp, -1, sizeof dp);\n  cin >> n >> s;\n  for (int i = 0; i < n; i++) a[i] = s[i] - '0';\n  int ans = solve(0, 0, 0);\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      for (int k = 0; k < 2; k++) {\n        if (dp[i][j][k] == ans) {\n          if (k == 0) {\n            if (i + 1 < n)\n              cout << \"H\";\n            else\n              cout << \"M\";\n            if (j + 1 < n)\n              cout << \"H\";\n            else\n              cout << \"M\";\n          } else {\n            if (i + 1 < n)\n              cout << \"M\";\n            else\n              cout << \"H\";\n            if (j + 1 < n)\n              cout << \"M\";\n            else\n              cout << \"H\";\n          }\n        }\n      }\n    }\n  }\n  cout << endl;\n  return 0;\n}\n"}
{"src_uid": "aad7ebf4fa919fae78bfc878e47e483c", "id": 57, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '3 3\\r\\n', 'output': ['12\\r\\n']}, {'input': '1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2 2\\r\\n', 'output': ['5\\r\\n']}, {'input': '5 2\\r\\n', 'output': ['17\\r\\n']}, {'input': '2 1\\r\\n', 'output': ['3\\r\\n']}, {'input': '2 3\\r\\n', 'output': ['6\\r\\n']}, {'input': '3 2\\r\\n', 'output': ['9\\r\\n']}, {'input': '1 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 1\\r\\n', 'output': ['5\\r\\n']}, {'input': '2 5000000\\r\\n', 'output': ['7\\r\\n']}, {'input': '4 4\\r\\n', 'output': ['23\\r\\n']}, {'input': '5 10\\r\\n', 'output': ['59\\r\\n']}, {'input': '10 5\\r\\n', 'output': ['86\\r\\n']}, {'input': '10 10\\r\\n', 'output': ['159\\r\\n']}, {'input': '6 36\\r\\n', 'output': ['151\\r\\n']}, {'input': '6 35\\r\\n', 'output': ['151\\r\\n']}, {'input': '6 37\\r\\n', 'output': ['151\\r\\n']}, {'input': '50 10\\r\\n', 'output': ['959\\r\\n']}, {'input': '100 17\\r\\n', 'output': ['3305\\r\\n']}, {'input': '56 46\\r\\n', 'output': ['4718\\r\\n']}, {'input': '15 5000000\\r\\n', 'output': ['2269\\r\\n']}, {'input': '5000000 5000000\\r\\n', 'output': ['49985062679840\\r\\n']}, {'input': '2000 4000000\\r\\n', 'output': ['5333335999\\r\\n']}, {'input': '2000 4000010\\r\\n', 'output': ['5333335999\\r\\n']}, {'input': '2000 3999993\\r\\n', 'output': ['5333335991\\r\\n']}, {'input': '5000000 16\\r\\n', 'output': ['159999914\\r\\n']}, {'input': '4991748 4783476\\r\\n', 'output': ['47741835370053\\r\\n']}, {'input': '4799983 5000\\r\\n', 'output': ['47999345584\\r\\n']}, {'input': '4000000 2000\\r\\n', 'output': ['15999876436\\r\\n']}, {'input': '4999993 1\\r\\n', 'output': ['9999985\\r\\n']}, {'input': '4999696 3\\r\\n', 'output': ['29998170\\r\\n']}, {'input': '1 4999696\\r\\n', 'output': ['1\\r\\n']}, {'input': '5 4999697\\r\\n', 'output': ['89\\r\\n']}, {'input': '145675 98345\\r\\n', 'output': ['28611293247\\r\\n']}, {'input': '100 10000\\r\\n', 'output': ['666799\\r\\n']}, {'input': '3957602 4953270\\r\\n', 'output': ['39191413995652\\r\\n']}, {'input': '3829084 1534\\r\\n', 'output': ['11747546512\\r\\n']}, {'input': '8765 4937657\\r\\n', 'output': ['71920277547\\r\\n']}, {'input': '4888521 4888521\\r\\n', 'output': ['47780834303355\\r\\n']}, {'input': '4888522 4888521\\r\\n', 'output': ['47780844080397\\r\\n']}, {'input': '4888521 4888522\\r\\n', 'output': ['47780844075975\\r\\n']}, {'input': '4888520 4888521\\r\\n', 'output': ['47780824526313\\r\\n']}, {'input': '4888521 4888520\\r\\n', 'output': ['47780824530760\\r\\n']}, {'input': '2211 4888521\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '2210 4888521\\r\\n', 'output': ['7195910279\\r\\n']}, {'input': '2212 4888521\\r\\n', 'output': ['7215455655\\r\\n']}, {'input': '2211 4888520\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '2211 4888522\\r\\n', 'output': ['7205682901\\r\\n']}, {'input': '3918476 1038587\\r\\n', 'output': ['8137939762176\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 5e6 + 10;\nint n, m, ans;\nint main() {\n  scanf(\"%d%d\", &n, &m);\n  for (int i = 1; i <= n; i++) {\n    int x = i * i;\n    if (x > m) break;\n    int y = m - x;\n    if (y % 2 == 0) ans++;\n  }\n  printf(\"%d\\n\", ans);\n  return 0;\n}\n"}
{"src_uid": "6e2a8aa58ed8cd308cb482e4c24cbbbb", "id": 58, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2100, "testcases": "[{'input': '4\\r\\n0 0 0\\r\\n0 10 0\\r\\n10 10 0\\r\\n10 0 0\\r\\n0 0 0\\r\\n1 1\\r\\n5 5 25\\r\\n', 'output': ['YES\\r\\n25.5000000000\\r\\n10.0000000000 4.5000000000 0.0000000000\\r\\n']}, {'input': '4\\r\\n0 0 0\\r\\n0 10 0\\r\\n10 10 0\\r\\n10 0 0\\r\\n0 0 0\\r\\n1 1\\r\\n5 5 50\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1\\r\\n1 2 3\\r\\n4 5 6\\r\\n20 10\\r\\n1 2 3\\r\\n', 'output': ['YES\\r\\n0.0000000000\\r\\n1.0000000000 2.0000000000 3.0000000000\\r\\n']}, {'input': '4\\r\\n0 0 0\\r\\n0 1 0\\r\\n1 1 0\\r\\n1 0 0\\r\\n0 0 0\\r\\n10 5\\r\\n0 0 8\\r\\n', 'output': ['YES\\r\\n0.8000000000\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '4\\r\\n1 0 0\\r\\n0 1 0\\r\\n-1 0 0\\r\\n0 -1 0\\r\\n1 0 0\\r\\n10 5\\r\\n9 0 -8\\r\\n', 'output': ['YES\\r\\n1.1313708499\\r\\n1.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '5\\r\\n32 -5 -42\\r\\n-25 -38 -6\\r\\n-13 41 25\\r\\n21 -25 -32\\r\\n43 35 -19\\r\\n-38 -12 -48\\r\\n3 2\\r\\n182 -210 32\\r\\n', 'output': ['YES\\r\\n97.5061769956\\r\\n-0.5611252637 16.8539490414 4.1465923539\\r\\n']}, {'input': '10\\r\\n-20 28 4\\r\\n-12 -34 49\\r\\n3 -11 25\\r\\n-35 -46 25\\r\\n4 29 -15\\r\\n17 16 -10\\r\\n40 -35 16\\r\\n-15 -25 10\\r\\n-2 40 20\\r\\n-26 18 -49\\r\\n14 8 -44\\r\\n3 1\\r\\n-877 450 899\\r\\n', 'output': ['YES\\r\\n437.7804049730\\r\\n-6.8291526407 15.8542367965 16.2852671995\\r\\n']}, {'input': '1\\r\\n5 -22 -3\\r\\n31 -41 -35\\r\\n4 4\\r\\n139 -86 -115\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n-34 37 40\\r\\n24 -28 7\\r\\n-20 -14 -25\\r\\n1 1\\r\\n-69 -28 -70\\r\\n', 'output': ['YES\\r\\n107.2130636667\\r\\n12.9900466281 -24.4968330180 -1.0072388159\\r\\n']}, {'input': '3\\r\\n-38 -39 -19\\r\\n-49 -16 50\\r\\n-3 -7 5\\r\\n28 -15 41\\r\\n1 1\\r\\n-100 -139 -33\\r\\n', 'output': ['NO\\r\\n']}, {'input': '15\\r\\n-17 -8 7\\r\\n-50 -28 8\\r\\n13 -38 -17\\r\\n27 -49 15\\r\\n34 49 17\\r\\n-17 36 25\\r\\n-10 -15 28\\r\\n-15 -36 32\\r\\n-8 47 26\\r\\n-19 18 -25\\r\\n44 36 -16\\r\\n4 -46 49\\r\\n46 20 -13\\r\\n21 -37 -8\\r\\n35 -38 -26\\r\\n-26 46 12\\r\\n4 1\\r\\n-1693 1363 2149\\r\\n', 'output': ['YES\\r\\n768.5953048926\\r\\n37.0198725921 5.8883712161 0.2563785546\\r\\n']}, {'input': '20\\r\\n26 47 23\\r\\n1 -2 17\\r\\n-14 -22 46\\r\\n19 34 -18\\r\\n22 -10 -34\\r\\n15 14 -48\\r\\n-30 -12 -12\\r\\n-23 40 -48\\r\\n-50 -41 -35\\r\\n48 -5 46\\r\\n-2 -11 10\\r\\n-49 47 -15\\r\\n31 6 10\\r\\n-41 35 15\\r\\n28 28 25\\r\\n43 -7 -10\\r\\n-19 -48 49\\r\\n-10 -29 28\\r\\n0 -10 28\\r\\n41 12 -26\\r\\n-14 40 17\\r\\n3 2\\r\\n-115 1407 1434\\r\\n', 'output': ['YES\\r\\n659.9757793192\\r\\n-5.2872973659 35.5644422954 10.1882506679\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n0 0 1\\r\\n10000 10000\\r\\n0 0 1\\r\\n', 'output': ['YES\\r\\n0.0000500000\\r\\n0.0000000000 0.0000000000 0.5000000000\\r\\n']}, {'input': '1\\r\\n10000 -10000 10000\\r\\n-10000 10000 -10000\\r\\n1 1\\r\\n10000 10000 10000\\r\\n', 'output': ['YES\\r\\n17320.5080756888\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '1\\r\\n10000 -10000 10000\\r\\n-10000 10000 -10000\\r\\n10000 1\\r\\n10000 10000 10000\\r\\n', 'output': ['YES\\r\\n1.9998845433\\r\\n9998.8453661206 -9998.8453661206 9998.8453661206\\r\\n']}, {'input': '1\\r\\n0 0 -1\\r\\n0 0 1\\r\\n10000 1\\r\\n0 0 10000\\r\\n', 'output': ['YES\\r\\n1.0000000000\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n-1 0 0\\r\\n10000 1\\r\\n10000 0 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n10000 10000 10000\\r\\n10000 10000 -10000\\r\\n10000 -10000 -10000\\r\\n1 1\\r\\n-10000 -10000 10000\\r\\n', 'output': ['YES\\r\\n30000.0000000000\\r\\n10000.0000000000 0.0000000000 -10000.0000000000\\r\\n']}, {'input': '4\\r\\n10000 9999 10000\\r\\n10000 9999 9999\\r\\n10000 10000 9999\\r\\n10000 10000 10000\\r\\n10000 9999 10000\\r\\n10000 1\\r\\n-10000 -10000 -10000\\r\\n', 'output': ['YES\\r\\n3.4640748220\\r\\n10000.0000000000 9999.5359251780 10000.0000000000\\r\\n']}, {'input': '3\\r\\n10000 9999 10000\\r\\n10000 9999 9999\\r\\n10000 10000 9999\\r\\n10000 10000 10000\\r\\n10000 1\\r\\n-10000 -10000 -10000\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 10005;\nconst double eps = 1e-10;\nint n;\ndouble x[N], y[N], z[N], vp, vs, px, py, pz;\ndouble dis(double x, double y, double z) {\n  return sqrt(x * x + y * y + z * z);\n}\ndouble dis(double x1, double y1, double z1, double x2, double y2,\n            double z2) {\n  return sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) +\n               (z1 - z2) * (z1 - z2));\n}\ndouble t[N];\ndouble calc(int i, int j) {\n  double d = dis(x[i], y[i], z[i], x[j], y[j], z[j]);\n  return d / vs;\n}\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 0; i <= n; i++) scanf(\"%lf%lf%lf\", &x[i], &y[i], &z[i]);\n  scanf(\"%lf%lf\", &vp, &vs);\n  scanf(\"%lf%lf%lf\", &px, &py, &pz);\n  t[0] = 0;\n  for (int i = 1; i <= n; i++) t[i] = t[i - 1] + calc(i - 1, i);\n  double ans = 1e100;\n  int pos = -1;\n  for (int i = 0; i <= n; i++) {\n    double tt = t[i];\n    double d = dis(x[i], y[i], z[i], px, py, pz);\n    double v = d / tt;\n    if (v >= vp) {\n      double t = d / vp;\n      if (t < ans) {\n        ans = t;\n        pos = i;\n      }\n    }\n  }\n  if (pos == -1)\n    puts(\"NO\");\n  else {\n    printf(\"YES\\n\");\n    printf(\"%.10lf\\n\", ans);\n    double tt = t[pos];\n    double d = dis(x[pos], y[pos], z[pos], px, py, pz);\n    double v = d / tt;\n    double t = d / vp;\n    double"}
{"src_uid": "52b13cca189853e6af02bea8d3d85276", "id": 59, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2300, "testcases": "[{'input': '2 1 2\\r\\n1 2\\r\\nDmitry 1 1 1\\r\\nNatalia 2 0\\r\\nNatalia 1 1 1\\r\\nDmitry 2 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 4 3\\r\\n1 3\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\nArtem 1 1 4\\r\\nDmitry 1 1 2\\r\\nEdvard 4 2 1 3\\r\\nArtem 2 0\\r\\nDmitry 1 0\\r\\nEdvard 4 4 1 2 3 4\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1 1\\r\\n2 1\\r\\nabsgdf 1 1 1\\r\\nabsgdf 1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '2 1 1\\r\\n2 1\\r\\nabsgdf 2 1 1\\r\\nabsgdf 1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\na 1 1 1\\r\\nb 2 1 3\\r\\nc 3 1 2\\r\\na 3 1 3\\r\\nb 1 0\\r\\nc 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\na 1 1 1\\r\\nb 2 1 3\\r\\nc 3 1 2\\r\\nb 1 1 2\\r\\nc 2 1 3\\r\\na 3 1 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\nb 1 1 2\\r\\nc 2 1 3\\r\\na 3 1 1\\r\\na 3 1 3\\r\\nb 1 0\\r\\nc 2 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4 5 3\\r\\n1 2\\r\\n2 3\\r\\n2 4\\r\\n1 3\\r\\n1 3\\r\\na 1 2 4 3\\r\\nb 1 0\\r\\nc 4 3 1 2 5\\r\\na 1 2 4 3\\r\\nb 1 1 5\\r\\nc 4 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 2 2\\r\\n1 2\\r\\n2 1\\r\\nA 1 1 2\\r\\nB 1 1 1\\r\\nA 1 0\\r\\nB 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 2 4\\r\\n2 1\\r\\n4 3\\r\\na 1 1 1\\r\\nb 2 1 2\\r\\nc 3 0\\r\\nd 4 0\\r\\na 2 1 2\\r\\nb 1 1 1\\r\\nc 3 0\\r\\nd 4 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 2 4\\r\\n2 1\\r\\n4 3\\r\\na 1 1 1\\r\\nb 2 1 2\\r\\nc 3 0\\r\\nd 4 0\\r\\na 2 1 2\\r\\nb 1 1 1\\r\\nc 4 0\\r\\nd 3 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6 3 4\\r\\n1 2\\r\\n3 4\\r\\n5 6\\r\\na 1 2 1 3\\r\\nb 3 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\na 2 2 1 3\\r\\nb 4 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '6 3 4\\r\\n1 2\\r\\n3 4\\r\\n5 6\\r\\na 1 2 1 3\\r\\nb 3 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\na 2 1 1\\r\\nb 4 2 2 3\\r\\nc 5 0\\r\\nd 6 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 20 5\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n5 1\\r\\n6 5\\r\\n7 2\\r\\n8 5\\r\\n9 8\\r\\n10 6\\r\\n2 6\\r\\n3 5\\r\\n3 4\\r\\n10 5\\r\\n8 3\\r\\n9 4\\r\\n10 8\\r\\n9 2\\r\\n6 3\\r\\n3 8\\r\\n9 8\\r\\nDKkXdT 10 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\r\\nOzvgPXMzAr 5 0\\r\\nbjac 3 0\\r\\ncBPbJtoND 6 0\\r\\nw 5 0\\r\\nbjac 4 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\r\\nOzvgPXMzAr 2 0\\r\\ncBPbJtoND 5 0\\r\\nw 10 0\\r\\nDKkXdT 4 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 9 10\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\nInCeN 1 0\\r\\nIzHqPceNhj 2 1 9\\r\\neH 3 1 8\\r\\nJvgBsNFi 4 1 7\\r\\nBA 5 1 6\\r\\nRrjSTXJzhL 6 1 5\\r\\nDMx 7 1 4\\r\\nJzt 8 1 3\\r\\nhxBRlDlqwD 9 1 2\\r\\nImWeEPkggZ 10 1 1\\r\\neH 1 0\\r\\nImWeEPkggZ 2 1 9\\r\\nDMx 3 1 8\\r\\nIzHqPceNhj 4 1 7\\r\\nInCeN 5 1 6\\r\\nJvgBsNFi 6 1 5\\r\\nRrjSTXJzhL 7 1 4\\r\\nJzt 8 1 3\\r\\nhxBRlDlqwD 9 1 2\\r\\nBA 10 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '11 10 11\\r\\n1 2\\r\\n2 11\\r\\n3 4\\r\\n4 11\\r\\n5 6\\r\\n6 11\\r\\n7 8\\r\\n8 11\\r\\n9 10\\r\\n10 11\\r\\na 1 1 9\\r\\nb 2 1 10\\r\\nc 3 0\\r\\nd 4 1 1\\r\\ne 5 1 3\\r\\nf 6 1 4\\r\\ng 7 1 5\\r\\nh 8 1 6\\r\\ni 9 1 7\\r\\nj 10 1 8\\r\\nk 11 1 2\\r\\na 1 0\\r\\nb 2 0\\r\\nc 3 0\\r\\nd 4 0\\r\\ne 5 0\\r\\nf 6 0\\r\\ng 7 0\\r\\nh 8 0\\r\\ni 9 0\\r\\nj 10 0\\r\\nk 11 10 1 2 3 4 5 6 7 8 9 10\\r\\n', 'output': ['YES\\r\\n']}, {'input': '11 10 11\\r\\n1 2\\r\\n2 11\\r\\n3 4\\r\\n4 11\\r\\n5 6\\r\\n6 11\\r\\n7 8\\r\\n8 11\\r\\n9 10\\r\\n10 11\\r\\na 1 0\\r\\nb 2 0\\r\\nc 3 0\\r\\nd 4 0\\r\\ne 5 0\\r\\nf 6 0\\r\\ng 7 0\\r\\nh 8 0\\r\\ni 9 0\\r\\nj 10 0\\r\\nk 11 10 1 2 3 4 5 6 7 8 9 10\\r\\na 1 1 9\\r\\nb 2 1 10\\r\\nc 3 0\\r\\nd 4 1 1\\r\\ne 5 1 3\\r\\nf 6 1 4\\r\\ng 7 1 5\\r\\nh 8 1 6\\r\\ni 9 1 7\\r\\nj 10 1 8\\r\\nk 11 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '7 8 2\\r\\n3 7\\r\\n7 6\\r\\n1 2\\r\\n4 5\\r\\n1 3\\r\\n5 6\\r\\n4 6\\r\\n2 3\\r\\na 7 4 3 8 5 2\\r\\nb 7 4 4 6 7 1\\r\\na 1 4 3 8 5 2\\r\\nb 4 4 4 6 7 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 8 2\\r\\n3 7\\r\\n7 6\\r\\n1 2\\r\\n4 5\\r\\n1 3\\r\\n5 6\\r\\n4 6\\r\\n2 3\\r\\na 1 4 3 8 5 2\\r\\nb 4 4 4 6 7 1\\r\\na 3 4 3 8 5 2\\r\\nb 6 4 4 6 7 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '7 7 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\na 1 4 1 3 5 7\\r\\nb 2 3 2 4 6\\r\\na 7 4 1 3 5 7\\r\\nb 4 3 2 4 6\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 7 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\na 1 4 1 3 5 7\\r\\nb 2 3 2 4 6\\r\\na 4 4 1 3 5 7\\r\\nb 4 3 2 4 6\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 20 10\\r\\n1 10\\r\\n5 10\\r\\n2 9\\r\\n2 6\\r\\n9 6\\r\\n3 9\\r\\n7 1\\r\\n10 5\\r\\n7 8\\r\\n8 7\\r\\n2 3\\r\\n9 6\\r\\n1 6\\r\\n5 3\\r\\n4 3\\r\\n3 7\\r\\n8 2\\r\\n6 4\\r\\n2 3\\r\\n4 1\\r\\nTjOMmYPRUY 7 3 1 3 9\\r\\nj 6 2 11 15\\r\\nBanBSrUA 4 2 19 20\\r\\ncSWZxzR 8 1 8\\r\\nzVoRlNgt 10 2 6 7\\r\\nWLGaq 1 3 10 13 17\\r\\nKahHtTDj 1 2 2 14\\r\\nrUFZmkpI 6 1 16\\r\\ni 4 3 4 5 12\\r\\nKLGiua 6 1 18\\r\\nWLGaq 10 0\\r\\ncSWZxzR 3 1 4\\r\\nj 2 3 8 13 17\\r\\nrUFZmkpI 7 2 1 19\\r\\nKahHtTDj 5 1 16\\r\\nKLGiua 6 2 2 12\\r\\nBanBSrUA 2 4 6 7 10 15\\r\\nTjOMmYPRUY 9 3 3 9 18\\r\\nzVoRlNgt 10 2 11 20\\r\\ni 2 2 5 14\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 10 10\\r\\n7 10\\r\\n1 2\\r\\n4 3\\r\\n7 4\\r\\n9 2\\r\\n8 7\\r\\n10 8\\r\\n6 10\\r\\n5 2\\r\\n6 10\\r\\nznkkxCkkxv 9 1 10\\r\\nP 5 1 7\\r\\nKOF 1 2 3 9\\r\\nwYtfFWkb 3 0\\r\\nZPJiebeu 9 1 6\\r\\ndgzAhKY 4 0\\r\\nayqPf 3 0\\r\\nxFSb 9 0\\r\\nreYnbMDm 10 1 1\\r\\nydSIPy 6 4 2 4 5 8\\r\\nKOF 10 1 4\\r\\nayqPf 7 1 7\\r\\nreYnbMDm 4 1 5\\r\\nwYtfFWkb 5 1 6\\r\\nznkkxCkkxv 9 2 1 9\\r\\nydSIPy 10 0\\r\\nP 10 1 8\\r\\ndgzAhKY 7 1 2\\r\\nZPJiebeu 8 1 3\\r\\nxFSb 7 1 10\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 8 5\\r\\n1 3\\r\\n4 2\\r\\n1 3\\r\\n4 2\\r\\n1 5\\r\\n5 3\\r\\n2 5\\r\\n2 5\\r\\nTaMmKIk 1 0\\r\\nvrLryIxio 1 3 1 6 5\\r\\nGFKONi 2 1 4\\r\\nTzRVfh 3 2 3 8\\r\\nqp 4 2 7 2\\r\\nTaMmKIk 1 2 7 4\\r\\nvrLryIxio 1 3 1 6 5\\r\\nTzRVfh 3 1 8\\r\\nqp 4 1 3\\r\\nGFKONi 4 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 9 10\\r\\n4 7\\r\\n4 8\\r\\n8 3\\r\\n9 2\\r\\n8 3\\r\\n8 1\\r\\n6 9\\r\\n4 7\\r\\n7 4\\r\\nznkkxCkkxv 1 2 3 6\\r\\nQlf 3 0\\r\\nKOF 5 2 1 8\\r\\ndgzAhKY 5 0\\r\\nwYtfFWkb 6 2 4 7\\r\\nLbYfZPhWd 9 0\\r\\nP 10 1 9\\r\\nZPJiebeu 10 1 5\\r\\nayqPf 10 0\\r\\nzmZLwuf 10 1 2\\r\\nwYtfFWkb 2 2 7 4\\r\\nQlf 3 1 2\\r\\nznkkxCkkxv 3 3 6 3 9\\r\\nKOF 5 0\\r\\ndgzAhKY 5 0\\r\\nLbYfZPhWd 9 0\\r\\nP 10 1 5\\r\\nZPJiebeu 10 0\\r\\nayqPf 10 0\\r\\nzmZLwuf 10 2 1 8\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1005;\nint n, m, k, a[N], b[N], c[N], d[N], e[N], f[N], g[N], h[N], i[N], j[N],\n    l[N], r[N], x[N], y[N], z[N], w[N], t[N], u[N], v[N], w1[N], w2[N],\n    w3[N], w4[N], w5[N], w6[N], w7[N], w8[N], w9[N], w10[N], w11[N],\n    w12[N], w13[N], w14[N], w15[N], w16[N], w17[N], w18[N], w19[N],\n    w20[N], w21[N], w22[N], w23[N], w24[N], w25[N], w26[N], w27[N],\n    w28[N], w29[N], w30[N], w31[N], w32[N], w33[N], w34[N], w35[N],\n    w36[N], w37[N], w38[N], w39[N], w40[N], w41[N], w42[N], w43[N],\n    w44[N], w45[N], w46[N], w47[N], w48[N], w49[N], w50[N], w51[N],\n    w52[N], w53[N], w54[N], w55[N], w56[N], w57[N], w58[N], w59[N],\n    w60[N], w61[N], w62[N], w63[N], w64[N], w65[N], w66[N], w67[N],\n    w68[N], w69[N], w70[N], w71[N], w72[N], w73[N], w74[N], w75[N],\n    w76[N], w77[N], w78[N], w79[N], w80[N], w81[N], w82[N], w83[N],\n    w84[N], w85[N], w86[N], w87[N], w88[N], w89[N], w90[N], w91[N],\n    w92[N], w93[N], w94[N], w95[N], w96[N], w97[N], w98[N], w99[N],\n    w100[N], w101[N], w102[N], w103[N], w104[N], w105[N], w106[N],\n    w107[N], w108[N], w109[N], w110[N], w111[N], w112[N], w113[N],\n    w114[N], w115[N], w116[N], w117[N], w118[N], w119[N], w120[N],\n    w121[N], w122[N], w123[N], w124[N], w125[N], w126[N], w127[N],\n    w128[N], w129[N], w130[N], w131[N], w132[N], w133[N], w134[N],\n    w135[N], w136[N], w137[N], w138[N], w139[N], w140[N], w141[N],\n    w142[N], w143[N], w144[N], w145[N], w146[N], w147[N], w148[N],\n    w149[N], w150[N], w151[N], w152[N], w153[N], w154[N], w155[N],\n    w156[N], w157[N], w158[N], w159[N], w160[N], w161[N], w162[N],\n    w163[N], w164[N], w165[N], w166[N], w167[N], w168[N], w169[N],\n    w170[N], w171[N], w172[N], w173[N], w174[N], w175[N], w176[N],\n    w177[N], w178[N], w179[N], w180[N], w181[N], w182[N], w183[N],\n    w184[N], w185[N], w186[N], w187[N], w188[N], w189[N], w190[N],\n    w191[N], w192[N], w193[N], w194[N], w195[N], w196[N], w197[N],\n    w198[N], w199[N], w200[N], w201[N], w202[N], w203[N], w204[N],\n    w205[N], w206[N], w207[N], w208[N], w209[N], w210[N], w211[N],\n    w212[N], w213[N], w214[N], w215[N], w216[N], w217[N], w218[N],\n    w219[N], w220[N], w221[N], w222[N], w223[N], w224[N], w225[N],\n    w226[N], w227[N], w228[N], w229[N], w230[N], w231[N], w232[N],\n    w233[N], w234[N], w235[N], w236[N], w237[N], w238[N], w239[N],\n    w240[N], w241[N], w242[N], w243[N], w244[N], w245[N], w246[N],\n    w247[N], w248[N], w249[N], w250[N], w251[N], w252[N], w253[N],\n    w254[N], w255[N], w256[N], w257[N], w258[N], w259[N], w260[N],\n    w261[N], w262[N], w263[N], w264[N], w265[N], w266[N], w267[N],\n    w268[N], w269[N], w270[N], w271[N], w272[N], w273[N], w274[N],\n    w275[N], w276[N], w277[N], w278[N], w279[N], w280[N], w281[N],"}
{"src_uid": "6220f4058f9325dfb211fb1dd86e9464", "id": 60, "lang_cluster": "c++", "lang": "GNU C++17", "difficulty": 2700, "testcases": "[{'input': '8\\r\\n1 0 0\\r\\n1 2 0\\r\\n1 2 2\\r\\n2 1 0\\r\\n1 0 2\\r\\n2 1 1\\r\\n2 2 1\\r\\n2 20 -1\\r\\n', 'output': ['YES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 0 0\\r\\n1 5 0\\r\\n1 0 5\\r\\n2 1 1\\r\\n2 10 10\\r\\n1 2 10\\r\\n2 1 1\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '5\\r\\n1 2 -2\\r\\n1 -2 2\\r\\n1 1 5\\r\\n2 3 -1\\r\\n2 3 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\n']}, {'input': '5\\r\\n1 -1 0\\r\\n1 1 0\\r\\n1 0 2\\r\\n2 0 1\\r\\n2 0 3\\r\\n', 'output': ['YES\\r\\nNO\\r\\n']}, {'input': '6\\r\\n1 -2 0\\r\\n1 2 0\\r\\n1 0 2\\r\\n2 4 0\\r\\n2 1 0\\r\\n2 2 0\\r\\n', 'output': ['NO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '11\\r\\n1 0 -1\\r\\n1 0 1\\r\\n1 1 -1\\r\\n1 -1 -5\\r\\n1 0 5\\r\\n2 5 1\\r\\n2 5 0\\r\\n2 5 -1\\r\\n2 0 0\\r\\n2 0 10\\r\\n2 0 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -37 889\\r\\n1 771 -764\\r\\n1 -119 938\\r\\n1 599 868\\r\\n1 56 161\\r\\n1 -67 86\\r\\n2 -692 99\\r\\n2 -995 158\\r\\n2 410 116\\r\\n1 -49 -864\\r\\n2 30 -580\\r\\n1 -930 454\\r\\n1 -706 301\\r\\n2 547 -606\\r\\n2 -252 -55\\r\\n2 662 152\\r\\n2 -621 -920\\r\\n1 -128 -595\\r\\n1 -401 -265\\r\\n1 434 388\\r\\n2 299 173\\r\\n1 104 -298\\r\\n1 -693 557\\r\\n2 840 -179\\r\\n2 382 -8\\r\\n1 461 618\\r\\n1 -928 628\\r\\n2 193 -972\\r\\n2 218 945\\r\\n2 490 571\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -619 -234\\r\\n1 -140 -846\\r\\n1 762 -792\\r\\n2 153 29\\r\\n1 -353 627\\r\\n2 -544 -418\\r\\n2 -922 -965\\r\\n1 -620 -692\\r\\n1 -34 295\\r\\n2 -326 -604\\r\\n2 -906 -867\\r\\n2 57 -690\\r\\n1 -87 -822\\r\\n2 -569 739\\r\\n2 -92 -927\\r\\n2 279 806\\r\\n1 -364 19\\r\\n2 -214 -629\\r\\n2 -283 662\\r\\n2 -324 650\\r\\n1 92 -511\\r\\n2 654 -597\\r\\n1 -87 747\\r\\n2 795 46\\r\\n2 870 -157\\r\\n2 -11 520\\r\\n1 -162 -686\\r\\n2 290 -660\\r\\n2 -660 780\\r\\n2 946 910\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '30\\r\\n1 -702 -823\\r\\n1 -330 -896\\r\\n1 -564 90\\r\\n1 559 818\\r\\n2 404 716\\r\\n1 -900 -379\\r\\n2 866 -218\\r\\n2 444 615\\r\\n2 -782 -887\\r\\n2 584 -919\\r\\n2 891 775\\r\\n1 117 887\\r\\n2 598 162\\r\\n2 759 -925\\r\\n2 713 -507\\r\\n1 -329 120\\r\\n2 546 185\\r\\n2 399 500\\r\\n1 -611 763\\r\\n1 -956 187\\r\\n2 82 -26\\r\\n2 -877 -906\\r\\n1 293 -637\\r\\n2 -685 -275\\r\\n2 -725 -927\\r\\n1 -627 777\\r\\n1 -609 -563\\r\\n2 402 54\\r\\n1 -106 -908\\r\\n2 175 808\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -64 -994\\r\\n1 -692 366\\r\\n1 -72 847\\r\\n2 -963 -251\\r\\n1 -651 -994\\r\\n1 -523 -861\\r\\n2 553 -129\\r\\n2 17 785\\r\\n2 -584 -880\\r\\n1 105 657\\r\\n1 649 98\\r\\n2 -572 -492\\r\\n1 -38 -481\\r\\n1 540 463\\r\\n1 -468 -540\\r\\n1 -730 100\\r\\n1 606 -119\\r\\n1 -254 -380\\r\\n1 169 280\\r\\n1 319 62\\r\\n1 452 -556\\r\\n1 -653 887\\r\\n1 407 -786\\r\\n2 -632 181\\r\\n1 925 -967\\r\\n2 996 -709\\r\\n1 568 517\\r\\n2 -478 76\\r\\n1 156 621\\r\\n2 -592 899\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '30\\r\\n1 836 -283\\r\\n1 299 629\\r\\n1 434 -481\\r\\n1 -500 -368\\r\\n2 -105 -216\\r\\n2 -617 443\\r\\n2 -579 811\\r\\n1 411 -242\\r\\n1 -652 41\\r\\n1 962 -483\\r\\n1 -732 579\\r\\n2 554 -147\\r\\n1 39 967\\r\\n1 917 -199\\r\\n2 686 397\\r\\n1 444 780\\r\\n1 278 462\\r\\n1 729 -18\\r\\n1 252 -864\\r\\n1 884 -952\\r\\n1 272 689\\r\\n2 366 -389\\r\\n1 443 924\\r\\n1 791 -249\\r\\n2 692 74\\r\\n2 -412 550\\r\\n2 506 -472\\r\\n2 -626 474\\r\\n1 -895 -42\\r\\n2 -390 -971\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '12\\r\\n1 0 0\\r\\n1 10 0\\r\\n1 8 1\\r\\n2 11 0\\r\\n1 2 0\\r\\n2 7 0\\r\\n2 9 0\\r\\n2 1 0\\r\\n1 1 1\\r\\n2 10 0\\r\\n2 9 0\\r\\n2 11 0\\r\\n', 'output': ['NO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 5000 5000\\r\\n2 3 0\\r\\n2 2 0\\r\\n2 4 0\\r\\n2 -1 0\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '4\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 2 2\\r\\n2 4 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 0 8\\r\\n2 4 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '11\\r\\n1 0 -1\\r\\n1 0 1\\r\\n1 -1 -5\\r\\n1 6 4\\r\\n1 -8 8\\r\\n2 6 -1\\r\\n2 6 1\\r\\n2 1 0\\r\\n2 1 -1\\r\\n2 1 1\\r\\n2 6 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '11\\r\\n1 5 4\\r\\n1 5 6\\r\\n1 4 0\\r\\n1 11 9\\r\\n1 -3 13\\r\\n2 11 4\\r\\n2 11 6\\r\\n2 6 5\\r\\n2 6 4\\r\\n2 6 6\\r\\n2 11 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -2 -1000000\\r\\n1 -1 -1000000\\r\\n1 -1 -999999\\r\\n1 1 1000000\\r\\n1 -231100 1000000\\r\\n2 0 0\\r\\n2 1 999999\\r\\n', 'output': ['YES\\r\\nNO\\r\\n']}, {'input': '10\\r\\n1 -1000000 -1000000\\r\\n1 -999999 -1000000\\r\\n1 999999 1000000\\r\\n1 1000000 1000000\\r\\n2 0 0\\r\\n2 1000000 999999\\r\\n2 999999 1000000\\r\\n2 999999 999999\\r\\n2 999999 999998\\r\\n2 999999 999997\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '9\\r\\n1 -2 -4\\r\\n1 2 4\\r\\n1 -3 3\\r\\n2 -1 -2\\r\\n2 -4 -8\\r\\n2 -3 -6\\r\\n2 1 2\\r\\n2 4 8\\r\\n2 3 6\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '16\\r\\n1 -10000 0\\r\\n1 10000 0\\r\\n1 0 -1\\r\\n2 50000 0\\r\\n2 -50000 0\\r\\n2 49000 0\\r\\n2 -49000 0\\r\\n2 27000 0\\r\\n2 -27000 0\\r\\n1 0 1\\r\\n2 50000 0\\r\\n2 -50000 0\\r\\n2 49000 0\\r\\n2 -49000 0\\r\\n2 27000 0\\r\\n2 -27000 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -7000 -9000\\r\\n1 7000 9000\\r\\n1 7000 -7000\\r\\n2 21 27\\r\\n2 -21 -27\\r\\n2 7007 9009\\r\\n2 -7007 -9009\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -7000 -9000\\r\\n1 7000 9000\\r\\n1 -7000 7000\\r\\n2 21 27\\r\\n2 -21 -27\\r\\n2 7007 9009\\r\\n2 -7007 -9009\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -9000 7000\\r\\n1 9000 -7000\\r\\n1 7000 7000\\r\\n2 -27 21\\r\\n2 27 -21\\r\\n2 -9009 7007\\r\\n2 9009 -7007\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -9000 7000\\r\\n1 9000 -7000\\r\\n1 -7000 -7000\\r\\n2 -27 21\\r\\n2 27 -21\\r\\n2 -9009 7007\\r\\n2 9009 -7007\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 7 6\\r\\n1 0 5\\r\\n1 0 4\\r\\n1 2 5\\r\\n1 8 0\\r\\n1 6 4\\r\\n1 1 1\\r\\n1 8 4\\r\\n2 1 1\\r\\n2 2 7\\r\\n1 2 3\\r\\n1 4 2\\r\\n2 4 3\\r\\n1 3 2\\r\\n1 7 2\\r\\n1 1 0\\r\\n2 3 5\\r\\n1 6 5\\r\\n2 5 7\\r\\n2 1 1\\r\\n2 3 2\\r\\n1 6 2\\r\\n2 6 0\\r\\n2 8 8\\r\\n1 4 6\\r\\n1 3 5\\r\\n2 3 8\\r\\n2 0 5\\r\\n2 1 6\\r\\n1 8 3\\r\\n1 2 2\\r\\n1 8 2\\r\\n1 6 8\\r\\n1 1 3\\r\\n1 3 3\\r\\n1 5 5\\r\\n2 2 0\\r\\n2 6 7\\r\\n2 1 6\\r\\n2 6 4\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 8\\r\\n1 6 7\\r\\n1 7 7\\r\\n2 5 5\\r\\n1 4 0\\r\\n1 0 0\\r\\n2 7 3\\r\\n1 0 2\\r\\n2 8 2\\r\\n2 5 1\\r\\n2 1 2\\r\\n2 1 5\\r\\n1 1 3\\r\\n1 7 1\\r\\n1 8 7\\r\\n1 2 4\\r\\n1 2 8\\r\\n2 8 5\\r\\n2 8 6\\r\\n1 2 1\\r\\n1 5 6\\r\\n1 2 3\\r\\n2 4 3\\r\\n1 8 3\\r\\n1 1 5\\r\\n2 2 2\\r\\n2 8 5\\r\\n1 0 7\\r\\n1 7 2\\r\\n1 5 5\\r\\n1 8 4\\r\\n1 4 1\\r\\n2 3 2\\r\\n2 6 0\\r\\n2 8 7\\r\\n2 5 7\\r\\n1 3 0\\r\\n2 1 0\\r\\n2 0 7\\r\\n2 5 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 8\\r\\n1 3 8\\r\\n1 7 4\\r\\n1 4 5\\r\\n1 4 1\\r\\n2 6 6\\r\\n2 5 8\\r\\n1 5 4\\r\\n1 7 8\\r\\n2 1 3\\r\\n2 6 1\\r\\n2 8 2\\r\\n2 6 8\\r\\n1 4 3\\r\\n2 2 8\\r\\n2 0 6\\r\\n1 0 3\\r\\n2 0 3\\r\\n1 6 6\\r\\n1 5 8\\r\\n1 5 5\\r\\n1 1 2\\r\\n2 6 7\\r\\n1 4 8\\r\\n2 1 2\\r\\n2 2 7\\r\\n2 2 3\\r\\n1 8 4\\r\\n2 8 4\\r\\n2 6 5\\r\\n1 8 2\\r\\n2 7 2\\r\\n2 3 5\\r\\n1 4 0\\r\\n2 6 2\\r\\n2 3 7\\r\\n1 4 6\\r\\n1 8 6\\r\\n1 0 5\\r\\n2 2 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 4 0\\r\\n1 7 1\\r\\n1 8 0\\r\\n1 1 2\\r\\n1 1 8\\r\\n1 6 1\\r\\n2 5 2\\r\\n1 7 7\\r\\n1 6 5\\r\\n2 8 1\\r\\n2 8 7\\r\\n1 7 8\\r\\n2 3 5\\r\\n2 6 6\\r\\n1 4 2\\r\\n1 8 3\\r\\n2 6 8\\r\\n1 4 8\\r\\n2 4 6\\r\\n2 1 7\\r\\n1 4 3\\r\\n2 0 8\\r\\n1 5 2\\r\\n2 5 5\\r\\n2 1 6\\r\\n1 5 5\\r\\n1 1 5\\r\\n2 3 3\\r\\n2 0 1\\r\\n1 1 0\\r\\n2 1 4\\r\\n2 3 6\\r\\n1 4 6\\r\\n2 7 6\\r\\n1 4 4\\r\\n1 7 6\\r\\n1 6 8\\r\\n2 1 1\\r\\n1 0 1\\r\\n2 0 2\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 3 0\\r\\n1 1 4\\r\\n1 2 7\\r\\n2 4 0\\r\\n1 0 5\\r\\n1 7 5\\r\\n2 6 3\\r\\n1 0 7\\r\\n2 5 7\\r\\n1 1 0\\r\\n2 0 6\\r\\n1 6 8\\r\\n1 3 5\\r\\n1 8 5\\r\\n1 0 6\\r\\n2 7 0\\r\\n1 4 6\\r\\n1 5 2\\r\\n2 6 2\\r\\n1 7 0\\r\\n2 6 3\\r\\n1 3 7\\r\\n2 4 2\\r\\n2 1 4\\r\\n1 1 3\\r\\n1 5 0\\r\\n2 0 7\\r\\n2 6 8\\r\\n1 4 0\\r\\n2 5 0\\r\\n2 3 2\\r\\n2 6 7\\r\\n1 7 2\\r\\n1 0 3\\r\\n1 6 6\\r\\n2 4 0\\r\\n2 2 4\\r\\n1 6 5\\r\\n2 0 8\\r\\n2 0 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 0 3\\r\\n1 6 0\\r\\n1 8 7\\r\\n2 2 6\\r\\n2 7 2\\r\\n2 7 5\\r\\n1 4 7\\r\\n1 2 3\\r\\n2 2 7\\r\\n2 3 1\\r\\n1 3 5\\r\\n1 8 5\\r\\n2 6 8\\r\\n1 2 8\\r\\n2 4 6\\r\\n1 7 3\\r\\n1 3 3\\r\\n2 2 4\\r\\n1 5 0\\r\\n1 5 6\\r\\n1 1 7\\r\\n2 3 3\\r\\n1 8 6\\r\\n2 7 4\\r\\n1 7 8\\r\\n1 5 8\\r\\n2 3 8\\r\\n1 6 6\\r\\n2 8 5\\r\\n1 5 1\\r\\n2 4 2\\r\\n1 7 7\\r\\n2 4 8\\r\\n1 6 1\\r\\n1 1 5\\r\\n2 1 8\\r\\n2 4 3\\r\\n1 5 5\\r\\n1 4 0\\r\\n2 0 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 5 2\\r\\n1 5 6\\r\\n1 2 1\\r\\n2 7 2\\r\\n2 6 2\\r\\n2 0 8\\r\\n2 0 6\\r\\n1 6 8\\r\\n1 2 0\\r\\n1 0 5\\r\\n2 3 0\\r\\n1 3 8\\r\\n2 8 6\\r\\n1 0 3\\r\\n1 8 8\\r\\n2 1 1\\r\\n1 1 4\\r\\n1 1 3\\r\\n2 0 0\\r\\n2 5 6\\r\\n1 0 0\\r\\n2 0 0\\r\\n1 2 7\\r\\n2 0 0\\r\\n2 3 6\\r\\n1 3 3\\r\\n1 3 2\\r\\n1 5 3\\r\\n1 7 8\\r\\n1 7 4\\r\\n1 8 7\\r\\n1 7 3\\r\\n2 0 3\\r\\n1 4 4\\r\\n2 5 0\\r\\n1 6 6\\r\\n1 8 0\\r\\n2 6 2\\r\\n2 4 8\\r\\n2 7 2\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 4\\r\\n1 1 5\\r\\n1 3 5\\r\\n2 8 2\\r\\n2 5 2\\r\\n1 7 3\\r\\n1 8 1\\r\\n2 6 5\\r\\n1 4 3\\r\\n1 2 4\\r\\n1 2 3\\r\\n2 8 3\\r\\n2 3 5\\r\\n2 2 0\\r\\n1 6 7\\r\\n2 2 8\\r\\n1 3 0\\r\\n2 5 1\\r\\n2 2 1\\r\\n1 4 5\\r\\n2 1 6\\r\\n1 8 5\\r\\n2 7 4\\r\\n2 2 0\\r\\n1 3 2\\r\\n1 2 2\\r\\n1 8 3\\r\\n2 3 4\\r\\n1 7 6\\r\\n1 3 7\\r\\n1 5 3\\r\\n1 2 0\\r\\n2 5 7\\r\\n2 0 7\\r\\n2 3 2\\r\\n2 1 0\\r\\n1 6 0\\r\\n2 8 5\\r\\n1 3 4\\r\\n2 0 3\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 8 7\\r\\n1 0 6\\r\\n1 5 0\\r\\n2 6 7\\r\\n2 6 8\\r\\n1 3 5\\r\\n1 6 7\\r\\n1 0 0\\r\\n2 1 7\\r\\n1 2 3\\r\\n2 4 3\\r\\n2 5 5\\r\\n1 4 7\\r\\n2 2 0\\r\\n1 2 4\\r\\n1 4 2\\r\\n1 0 8\\r\\n2 0 3\\r\\n1 8 8\\r\\n2 8 1\\r\\n2 8 6\\r\\n2 4 8\\r\\n1 4 0\\r\\n1 6 6\\r\\n2 0 0\\r\\n1 6 2\\r\\n2 5 1\\r\\n1 3 0\\r\\n1 5 6\\r\\n1 8 1\\r\\n1 3 4\\r\\n1 1 3\\r\\n1 5 1\\r\\n1 5 7\\r\\n1 6 8\\r\\n1 1 5\\r\\n1 1 1\\r\\n1 6 1\\r\\n1 1 4\\r\\n2 7 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 8\\r\\n1 4 0\\r\\n1 0 6\\r\\n2 3 8\\r\\n2 4 5\\r\\n1 5 0\\r\\n2 7 6\\r\\n2 6 1\\r\\n2 1 7\\r\\n1 1 2\\r\\n1 5 4\\r\\n1 7 3\\r\\n2 6 4\\r\\n1 3 0\\r\\n2 2 8\\r\\n1 8 2\\r\\n1 8 8\\r\\n1 7 8\\r\\n2 2 5\\r\\n2 2 3\\r\\n2 4 6\\r\\n2 0 2\\r\\n2 6 7\\r\\n2 2 8\\r\\n1 8 3\\r\\n2 5 5\\r\\n1 4 8\\r\\n1 7 1\\r\\n2 7 3\\r\\n2 4 5\\r\\n2 1 1\\r\\n2 4 2\\r\\n1 1 1\\r\\n2 4 0\\r\\n1 2 4\\r\\n2 7 0\\r\\n1 4 1\\r\\n1 7 5\\r\\n1 6 6\\r\\n2 7 8\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 6 3\\r\\n1 5 3\\r\\n1 3 4\\r\\n1 2 3\\r\\n2 2 5\\r\\n1 6 1\\r\\n2 3 7\\r\\n1 0 0\\r\\n1 8 7\\r\\n1 3 8\\r\\n1 0 8\\r\\n1 3 5\\r\\n1 4 5\\r\\n1 0 5\\r\\n2 8 1\\r\\n2 4 7\\r\\n2 3 2\\r\\n1 6 4\\r\\n2 2 3\\r\\n2 6 3\\r\\n1 0 2\\r\\n2 1 2\\r\\n2 6 2\\r\\n1 5 7\\r\\n2 7 0\\r\\n1 4 8\\r\\n1 4 6\\r\\n2 8 7\\r\\n2 0 7\\r\\n1 7 8\\r\\n2 0 3\\r\\n1 5 5\\r\\n1 6 2\\r\\n2 4 5\\r\\n1 2 5\\r\\n2 3 3\\r\\n2 1 1\\r\\n1 8 3\\r\\n1 6 5\\r\\n2 5 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 6 5\\r\\n1 4 8\\r\\n1 5 7\\r\\n1 3 1\\r\\n2 4 2\\r\\n1 4 3\\r\\n1 0 7\\r\\n2 4 6\\r\\n2 4 2\\r\\n1 0 3\\r\\n2 1 5\\r\\n2 5 6\\r\\n1 8 8\\r\\n1 1 7\\r\\n1 3 3\\r\\n2 6 7\\r\\n1 7 4\\r\\n1 0 2\\r\\n1 8 4\\r\\n2 4 5\\r\\n2 0 7\\r\\n1 4 1\\r\\n1 4 4\\r\\n1 5 3\\r\\n1 1 0\\r\\n1 4 5\\r\\n2 1 4\\r\\n1 0 6\\r\\n2 1 0\\r\\n1 5 5\\r\\n2 5 6\\r\\n2 8 2\\r\\n2 1 7\\r\\n2 8 1\\r\\n2 0 5\\r\\n1 0 4\\r\\n1 6 6\\r\\n2 1 1\\r\\n1 8 0\\r\\n2 6 3\\r\\n', 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 7\\r\\n1 3 3\\r\\n1 6 5\\r\\n1 7 3\\r\\n1 2 8\\r\\n1 3 0\\r\\n2 0 0\\r\\n1 7 7\\r\\n2 6 8\\r\\n2 6 0\\r\\n2 4 7\\r\\n1 7 8\\r\\n2 0 7\\r\\n2 0 5\\r\\n1 6 2\\r\\n1 7 1\\r\\n1 1 1\\r\\n2 4 8\\r\\n2 2 1\\r\\n2 7 0\\r\\n2 5 4\\r\\n1 2 4\\r\\n2 1 3\\r\\n2 0 5\\r\\n2 5 5\\r\\n2 1 4\\r\\n2 5 5\\r\\n1 2 6\\r\\n1 4 4\\r\\n2 0 8\\r\\n1 0 6\\r\\n2 0 5\\r\\n2 4 6\\r\\n2 8 1\\r\\n2 2 0\\r\\n2 3 3\\r\\n1 0 4\\r\\n1 3 7\\r\\n2 3 2\\r\\n2 3 7\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 7\\r\\n1 6 5\\r\\n1 2 0\\r\\n2 4 5\\r\\n1 1 0\\r\\n2 3 4\\r\\n1 7 3\\r\\n2 8 1\\r\\n2 0 0\\r\\n2 2 0\\r\\n1 7 4\\r\\n1 6 3\\r\\n2 8 1\\r\\n2 6 0\\r\\n1 4 7\\r\\n2 4 2\\r\\n1 4 5\\r\\n2 3 7\\r\\n2 6 8\\r\\n2 2 6\\r\\n2 7 4\\r\\n1 0 6\\r\\n2 1 7\\r\\n1 4 4\\r\\n2 2 3\\r\\n1 1 3\\r\\n1 8 5\\r\\n1 0 5\\r\\n1 1 1\\r\\n1 4 3\\r\\n2 5 3\\r\\n1 3 6\\r\\n1 7 0\\r\\n2 5 6\\r\\n2 5 6\\r\\n1 0 7\\r\\n2 7 0\\r\\n2 6 4\\r\\n1 3 7\\r\\n2 2 2\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 4 4\\r\\n1 2 6\\r\\n1 8 2\\r\\n2 4 6\\r\\n1 5 4\\r\\n2 5 8\\r\\n2 6 7\\r\\n2 4 8\\r\\n1 1 0\\r\\n1 3 1\\r\\n1 0 3\\r\\n1 8 1\\r\\n1 3 0\\r\\n2 7 4\\r\\n1 2 0\\r\\n1 8 5\\r\\n1 6 2\\r\\n2 2 0\\r\\n1 0 4\\r\\n1 1 1\\r\\n1 4 5\\r\\n2 8 3\\r\\n2 1 0\\r\\n2 5 5\\r\\n1 3 4\\r\\n2 0 7\\r\\n1 4 3\\r\\n1 7 0\\r\\n2 3 8\\r\\n1 0 1\\r\\n1 0 7\\r\\n2 4 1\\r\\n1 0 6\\r\\n2 1 2\\r\\n1 5 7\\r\\n2 7 2\\r\\n2 7 3\\r\\n1 3 6\\r\\n2 7 3\\r\\n2 7 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 0 8\\r\\n1 3 5\\r\\n1 0 2\\r\\n1 8 0\\r\\n1 5 3\\r\\n1 5 2\\r\\n2 8 2\\r\\n2 7 6\\r\\n1 6 1\\r\\n2 2 7\\r\\n2 6 5\\r\\n1 3 7\\r\\n2 7 8\\r\\n1 2 4\\r\\n1 4 2\\r\\n2 5 7\\r\\n2 0 6\\r\\n1 3 1\\r\\n2 2 3\\r\\n1 5 7\\r\\n2 2 8\\r\\n1 7 1\\r\\n1 3 0\\r\\n2 5 5\\r\\n1 7 4\\r\\n2 5 5\\r\\n1 2 0\\r\\n2 4 3\\r\\n2 8 1\\r\\n2 8 0\\r\\n1 2 6\\r\\n1 7 5\\r\\n2 4 8\\r\\n1 2 3\\r\\n2 6 6\\r\\n1 7 8\\r\\n2 7 5\\r\\n2 7 4\\r\\n1 8 1\\r\\n2 5 6\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 3\\r\\n1 7 2\\r\\n1 6 2\\r\\n2 0 8\\r\\n2 3 8\\r\\n2 0 3\\r\\n1 5 8\\r\\n2 7 1\\r\\n1 8 1\\r\\n2 8 7\\r\\n1 5 5\\r\\n2 2 4\\r\\n2 3 3\\r\\n2 2 4\\r\\n1 0 1\\r\\n1 2 0\\r\\n1 7 4\\r\\n2 7 4\\r\\n2 5 5\\r\\n1 1 1\\r\\n2 6 4\\r\\n2 1 7\\r\\n2 5 0\\r\\n1 8 0\\r\\n2 6 2\\r\\n1 7 1\\r\\n2 8 6\\r\\n1 8 7\\r\\n2 2 5\\r\\n1 7 3\\r\\n1 5 6\\r\\n1 4 0\\r\\n2 3 8\\r\\n2 8 6\\r\\n1 7 0\\r\\n2 3 5\\r\\n2 6 1\\r\\n1 2 6\\r\\n1 1 2\\r\\n2 7 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 4 4\\r\\n1 2 6\\r\\n1 7 2\\r\\n2 1 4\\r\\n2 0 2\\r\\n1 5 4\\r\\n2 5 1\\r\\n1 0 8\\r\\n1 1 7\\r\\n2 2 0\\r\\n1 8 4\\r\\n2 6 5\\r\\n2 8 0\\r\\n1 6 5\\r\\n2 8 7\\r\\n2 0 0\\r\\n2 4 0\\r\\n2 7 2\\r\\n2 6 8\\r\\n1 7 8\\r\\n2 8 8\\r\\n2 4 7\\r\\n1 7 1\\r\\n2 8 8\\r\\n1 5 8\\r\\n1 3 6\\r\\n1 4 6\\r\\n1 3 5\\r\\n2 6 1\\r\\n2 1 3\\r\\n2 8 4\\r\\n2 8 5\\r\\n2 1 3\\r\\n2 7 1\\r\\n2 5 8\\r\\n1 8 2\\r\\n2 6 1\\r\\n1 7 4\\r\\n1 8 5\\r\\n2 6 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 1\\r\\n1 4 7\\r\\n1 1 1\\r\\n1 2 4\\r\\n2 4 4\\r\\n1 4 4\\r\\n2 0 6\\r\\n2 7 6\\r\\n1 4 0\\r\\n2 6 5\\r\\n2 5 2\\r\\n1 6 1\\r\\n2 7 0\\r\\n1 6 2\\r\\n2 3 2\\r\\n1 0 6\\r\\n2 7 0\\r\\n1 8 6\\r\\n2 1 3\\r\\n2 0 1\\r\\n1 2 5\\r\\n1 0 2\\r\\n2 4 2\\r\\n2 6 8\\r\\n2 2 0\\r\\n2 5 7\\r\\n2 6 0\\r\\n1 2 2\\r\\n2 0 3\\r\\n1 7 4\\r\\n2 7 3\\r\\n1 4 1\\r\\n2 2 6\\r\\n2 8 2\\r\\n1 8 3\\r\\n1 8 7\\r\\n1 0 3\\r\\n1 7 0\\r\\n2 2 1\\r\\n2 6 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 7\\r\\n1 5 8\\r\\n1 4 4\\r\\n1 8 1\\r\\n1 4 6\\r\\n1 6 6\\r\\n2 5 0\\r\\n2 3 4\\r\\n1 5 3\\r\\n2 0 7\\r\\n2 3 1\\r\\n1 5 4\\r\\n1 3 4\\r\\n2 3 4\\r\\n2 8 2\\r\\n1 0 1\\r\\n1 0 8\\r\\n2 3 8\\r\\n1 0 4\\r\\n2 4 6\\r\\n1 7 3\\r\\n2 4 0\\r\\n1 2 3\\r\\n2 8 1\\r\\n2 8 4\\r\\n1 7 0\\r\\n2 2 6\\r\\n2 2 2\\r\\n1 2 2\\r\\n1 6 5\\r\\n1 7 1\\r\\n2 5 1\\r\\n1 2 4\\r\\n2 3 2\\r\\n1 8 4\\r\\n1 7 4\\r\\n1 1 2\\r\\n1 3 2\\r\\n2 7 3\\r\\n2 4 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 0\\r\\n1 0 7\\r\\n1 8 4\\r\\n2 1 6\\r\\n2 1 2\\r\\n1 0 0\\r\\n1 1 1\\r\\n2 5 2\\r\\n1 8 5\\r\\n1 0 6\\r\\n2 6 8\\r\\n1 4 2\\r\\n1 8 3\\r\\n2 2 3\\r\\n1 6 3\\r\\n2 6 0\\r\\n1 5 3\\r\\n2 0 5\\r\\n1 3 4\\r\\n2 4 4\\r\\n1 8 6\\r\\n1 1 2\\r\\n1 5 7\\r\\n1 5 1\\r\\n1 3 8\\r\\n2 7 0\\r\\n1 7 2\\r\\n1 3 3\\r\\n2 6 5\\r\\n2 5 0\\r\\n2 2 4\\r\\n2 5 5\\r\\n2 4 6\\r\\n1 6 1\\r\\n1 5 2\\r\\n2 7 5\\r\\n1 8 7\\r\\n1 1 6\\r\\n1 4 8\\r\\n2 8 5\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 8 1\\r\\n1 8 6\\r\\n1 1 1\\r\\n2 5 4\\r\\n2 7 8\\r\\n1 6 2\\r\\n1 7 4\\r\\n1 4 4\\r\\n2 3 7\\r\\n1 6 3\\r\\n2 0 1\\r\\n1 8 0\\r\\n2 0 3\\r\\n1 6 0\\r\\n1 3 4\\r\\n1 1 8\\r\\n1 3 3\\r\\n2 3 1\\r\\n2 4 0\\r\\n1 4 3\\r\\n2 1 3\\r\\n2 5 4\\r\\n1 8 5\\r\\n2 1 0\\r\\n1 4 7\\r\\n2 5 3\\r\\n2 4 1\\r\\n1 4 0\\r\\n1 6 8\\r\\n1 5 1\\r\\n2 8 3\\r\\n2 5 7\\r\\n1 3 2\\r\\n1 7 5\\r\\n1 7 3\\r\\n1 0 8\\r\\n1 7 8\\r\\n2 7 3\\r\\n2 6 7\\r\\n2 4 2\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '50\\r\\n1 58 -49\\r\\n1 -77 -90\\r\\n1 32 -52\\r\\n1 -89 -31\\r\\n1 99 -34\\r\\n1 -3 -59\\r\\n2 65 93\\r\\n2 67 -51\\r\\n2 25 -47\\r\\n1 -72 86\\r\\n2 48 -45\\r\\n2 64 -70\\r\\n2 -96 -43\\r\\n2 87 -58\\r\\n2 3 21\\r\\n2 39 -57\\r\\n1 -58 49\\r\\n2 -1 87\\r\\n2 -63 19\\r\\n2 -27 90\\r\\n2 31 3\\r\\n1 55 41\\r\\n1 90 39\\r\\n1 -53 28\\r\\n2 49 -51\\r\\n2 6 42\\r\\n1 50 15\\r\\n2 21 -2\\r\\n2 -6 70\\r\\n1 -13 -61\\r\\n2 -60 -69\\r\\n1 -22 33\\r\\n1 -22 17\\r\\n2 30 -98\\r\\n2 -56 -48\\r\\n2 -84 -77\\r\\n2 49 56\\r\\n1 81 29\\r\\n1 26 29\\r\\n1 -14 20\\r\\n2 -37 83\\r\\n1 -91 96\\r\\n2 57 19\\r\\n1 94 54\\r\\n2 25 -30\\r\\n1 92 5\\r\\n2 -48 51\\r\\n2 81 23\\r\\n1 39 -47\\r\\n2 34 89\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '50\\r\\n1 7 -8\\r\\n1 -30 -28\\r\\n1 -8 2\\r\\n1 -28 -29\\r\\n2 -8 -21\\r\\n2 -23 19\\r\\n2 -23 18\\r\\n1 6 27\\r\\n2 -17 20\\r\\n1 9 -5\\r\\n2 -27 29\\r\\n1 -8 27\\r\\n2 13 12\\r\\n2 -29 13\\r\\n2 -30 8\\r\\n2 -30 -8\\r\\n1 -24 -21\\r\\n1 -14 -15\\r\\n2 -23 14\\r\\n2 -12 -13\\r\\n1 15 -24\\r\\n1 28 6\\r\\n2 -20 -21\\r\\n1 -8 -13\\r\\n1 -15 -15\\r\\n1 11 20\\r\\n2 24 -26\\r\\n1 -30 -11\\r\\n2 -17 18\\r\\n1 -17 6\\r\\n2 5 -9\\r\\n2 -29 8\\r\\n2 -29 1\\r\\n2 10 24\\r\\n2 29 27\\r\\n2 -12 21\\r\\n2 5 -28\\r\\n2 28 27\\r\\n2 -4 -4\\r\\n1 -24 29\\r\\n1 17 -1\\r\\n1 0 17\\r\\n1 -2 -1\\r\\n2 -7 -10\\r\\n1 5 -16\\r\\n2 -3 -26\\r\\n2 -7 17\\r\\n1 -27 -26\\r\\n1 -3 -30\\r\\n2 28 -15\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '10\\r\\n1 0 0\\r\\n1 6 0\\r\\n1 0 6\\r\\n2 0 0\\r\\n2 6 0\\r\\n2 0 6\\r\\n2 3 3\\r\\n2 3 0\\r\\n2 0 3\\r\\n2 2 2\\r\\n', 'output': ['YES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '50\\r\\n1 33 -21\\r\\n1 9 82\\r\\n1 -69 -54\\r\\n2 -3 84\\r\\n1 -9 -28\\r\\n2 -54 87\\r\\n2 26 -64\\r\\n2 8 52\\r\\n2 98 63\\r\\n2 -77 10\\r\\n2 -52 -46\\r\\n1 92 42\\r\\n2 -53 -69\\r\\n2 -48 44\\r\\n1 -52 90\\r\\n2 56 29\\r\\n2 -100 -13\\r\\n2 -23 1\\r\\n2 6 91\\r\\n2 53 -38\\r\\n1 48 -35\\r\\n2 19 -62\\r\\n2 -62 49\\r\\n1 59 78\\r\\n2 85 72\\r\\n2 28 76\\r\\n2 46 -91\\r\\n2 6 32\\r\\n2 -16 -59\\r\\n1 40 -53\\r\\n2 -6 87\\r\\n2 -79 -58\\r\\n2 -12 25\\r\\n2 73 49\\r\\n1 57 -42\\r\\n2 12 19\\r\\n1 -60 -5\\r\\n1 -40 -20\\r\\n1 90 35\\r\\n2 10 3\\r\\n2 63 -49\\r\\n1 50 10\\r\\n1 0 77\\r\\n1 92 24\\r\\n1 71 -7\\r\\n2 46 22\\r\\n1 19 81\\r\\n1 -3 -71\\r\\n2 -44 56\\r\\n2 92 34\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 3\\r\\n1 3 1\\r\\n1 0 1\\r\\n2 3 0\\r\\n2 6 5\\r\\n2 1 5\\r\\n2 8 3\\r\\n2 0 5\\r\\n2 3 4\\r\\n1 7 6\\r\\n1 1 0\\r\\n1 0 8\\r\\n1 3 7\\r\\n2 4 5\\r\\n2 2 5\\r\\n2 2 0\\r\\n1 7 4\\r\\n2 7 3\\r\\n1 5 0\\r\\n1 4 6\\r\\n1 1 5\\r\\n1 7 8\\r\\n2 7 5\\r\\n1 0 4\\r\\n2 3 8\\r\\n1 1 8\\r\\n1 0 5\\r\\n1 4 8\\r\\n2 8 5\\r\\n1 8 5\\r\\n2 3 6\\r\\n1 8 7\\r\\n2 4 3\\r\\n1 5 2\\r\\n2 2 8\\r\\n2 5 3\\r\\n2 4 0\\r\\n1 4 4\\r\\n1 6 5\\r\\n2 2 7\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}]", "source_code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100000 + 10;\nconst int INF = 0x3f3f3f3f;\nconst long long mod = 1e9 + 7;\nconst double eps = 1e-6;\nconst double PI = acos(-1.0);\nint n, m, k, t, x, y, ans, tot, cnt, sum, len, cnt1, cnt2, cnt3, cnt4, cnt5,\n    cnt6, cnt7, cnt8, cnt9, cnt10, cnt11, cnt12, cnt13, cnt14, cnt15, cnt16,\n    cnt17, cnt18, cnt19, cnt20, cnt21, cnt22, cnt23, cnt24, cnt25, cnt26,\n    cnt27, cnt28, cnt29, cnt30, cnt31, cnt32, cnt33, cnt34, cnt35, cnt36,\n    cnt37, cnt38, cnt39, cnt40, cnt41, cnt42, cnt43, cnt44, cnt45, cnt46,\n    cnt47, cnt48, cnt49, cnt50, cnt51, cnt52, cnt53, cnt54, cnt55, cnt56,\n    cnt57, cnt58, cnt59, cnt60, cnt61, cnt62, cnt63, cnt64, cnt65, cnt66,\n    cnt67, cnt68, cnt69, cnt70, cnt71, cnt72, cnt73, cnt74, cnt75, cnt76,\n    cnt77, cnt78, cnt79, cnt80, cnt81, cnt82, cnt83, cnt84, cnt85, cnt86,\n    cnt87, cnt88, cnt89, cnt90, cnt91, cnt92, cnt93, cnt94, cnt95, cnt96,\n    cnt97, cnt98, cnt99, cnt100, cnt101, cnt102, cnt103, cnt104, cnt105,\n    cnt106, cnt107, cnt108, cnt109, cnt110, cnt111, cnt112, cnt113, cnt114,\n    cnt115, cnt116, cnt117, cnt118, cnt119, cnt120, cnt121, cnt122, cnt123,\n    cnt124, cnt125, cnt126, cnt127, cnt128, cnt129, cnt130, cnt131, cnt132,\n    cnt133, cnt134, cnt135, cnt136, cnt137, cnt138, cnt139, cnt140, cnt141,\n    cnt142, cnt143, cnt144, cnt145, cnt146, cnt147, cnt148, cnt149, cnt150,\n    cnt151, cnt152, cnt153, cnt154, cnt155, cnt156, cnt157, cnt158, cnt159,\n    cnt160, cnt161, cnt162, cnt163, cnt164, cnt165, cnt166, cnt167, cnt168,\n    cnt169, cnt170, cnt171, cnt172, cnt173, cnt174, cnt175, cnt176, cnt177,\n    cnt178, cnt179, cnt180, cnt181, cnt182, cnt183, cnt184, cnt185, cnt186,\n    cnt187, cnt188, cnt189, cnt190, cnt191, cnt192, cnt193, cnt194, cnt195,\n    cnt196, cnt197, cnt198, cnt199, cnt200, cnt201, cnt202, cnt203, cnt204,\n    cnt205, cnt206, cnt207, cnt208, cnt209, cnt210, cnt211, cnt212, cnt213,\n    cnt214, cnt215, cnt216, cnt217, cnt218, cnt219, cnt220, cnt221, cnt222,\n    cnt223, cnt224, cnt225, cnt226, cnt227, cnt228, cnt229, cnt230, cnt231,\n    cnt232, cnt233, cnt234, cnt235, cnt236, cnt237, cnt238, cnt239, cnt240,\n    cnt241, cnt242, cnt243, cnt244, cnt245, cnt246, cnt247, cnt248, cnt249,\n    cnt250, cnt251, cnt252, cnt253, cnt254, cnt255, cnt256, cnt257, cnt258,\n    cnt259, cnt260, cnt261, cnt262, cnt263, cnt264, cnt265, cnt266, cnt267,\n    cnt268, cnt269, cnt270, cnt271, cnt272, cnt273, cnt274, cnt275, cnt276,\n    cnt277, cnt278, cnt279, cnt280, cnt281, cnt282, cnt283, cnt284, cnt285,\n    cnt286, cnt287, cnt288, cnt289, cnt290, cnt291, cnt292, cnt293, cnt294,\n    cnt295, cnt296, cnt297, cnt298, cnt299, cnt300, cnt301, cnt302, cnt303,\n    cnt304, cnt305, cnt306, cnt307, cnt308, cnt309, cnt310, cnt311, cnt312,\n    cnt313, cnt314, cnt315, cnt316, cnt317, cnt318, cnt319, cnt320, cnt321,\n    cnt322, cnt323, cnt324, cnt325, cnt326, cnt327, cnt328, cnt3"}
{"src_uid": "3d4df21eebf32ce15841179bb85e6f2f", "id": 61, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1400, "testcases": "[{'input': '4 2\\r\\n1 2 2 3\\r\\n', 'output': ['YES\\r\\n1 2 1 2 \\r\\n']}, {'input': '5 2\\r\\n3 2 1 2 3\\r\\n', 'output': ['YES\\r\\n2 2 1 1 1 \\r\\n']}, {'input': '5 2\\r\\n2 1 1 2 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 4\\r\\n1 1 1 2 2\\r\\n', 'output': ['YES\\r\\n1 2 3 4 1 \\r\\n']}, {'input': '11 9\\r\\n1 1 2 2 2 2 2 2 3 4 5\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 7 8 9 1 2 \\r\\n']}, {'input': '4 4\\r\\n1 2 2 3\\r\\n', 'output': ['YES\\r\\n1 2 3 4 \\r\\n']}, {'input': '5 5\\r\\n1 1 2 1 1\\r\\n', 'output': ['YES\\r\\n1 2 5 3 4 \\r\\n']}, {'input': '4 4\\r\\n1 1 2 2\\r\\n', 'output': ['YES\\r\\n1 2 3 4 \\r\\n']}, {'input': '5 4\\r\\n1 2 1 2 3\\r\\n', 'output': ['YES\\r\\n1 3 2 4 1 \\r\\n']}, {'input': '5 5\\r\\n1 1 2 1 3\\r\\n', 'output': ['YES\\r\\n1 2 4 3 5 \\r\\n']}, {'input': '10 10\\r\\n1 2 3 1 2 3 4 5 6 7\\r\\n', 'output': ['YES\\r\\n1 3 5 2 4 6 7 8 9 10 \\r\\n']}, {'input': '8 6\\r\\n1 2 3 3 2 2 3 1\\r\\n', 'output': ['YES\\r\\n1 3 6 1 4 5 2 2 \\r\\n']}, {'input': '6 4\\r\\n1 1 2 2 3 3\\r\\n', 'output': ['YES\\r\\n1 2 3 4 1 2 \\r\\n']}, {'input': '5 5\\r\\n1 1 2 2 3\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 \\r\\n']}, {'input': '4 3\\r\\n2 2 1 1\\r\\n', 'output': ['YES\\r\\n3 1 1 2 \\r\\n']}, {'input': '10 10\\r\\n1 1 2 2 3 3 4 4 5 5\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 7 8 9 10 \\r\\n']}, {'input': '6 5\\r\\n1 1 2 2 3 3\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 1 \\r\\n']}, {'input': '4 4\\r\\n3 3 3 5\\r\\n', 'output': ['YES\\r\\n1 2 3 4 \\r\\n']}, {'input': '9 8\\r\\n1 2 2 3 3 3 4 5 4\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 7 1 8 \\r\\n']}, {'input': '5 5\\r\\n2 1 1 2 1\\r\\n', 'output': ['YES\\r\\n4 1 2 5 3 \\r\\n']}, {'input': '6 6\\r\\n1 1 2 1 2 2\\r\\n', 'output': ['YES\\r\\n1 2 4 3 5 6 \\r\\n']}, {'input': '6 6\\r\\n1 1 1 2 2 2\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 \\r\\n']}, {'input': '8 8\\r\\n1 1 1 1 1 2 2 3\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 7 8 \\r\\n']}, {'input': '6 6\\r\\n2 1 1 2 1 3\\r\\n', 'output': ['YES\\r\\n4 1 2 5 3 6 \\r\\n']}, {'input': '5 3\\r\\n3 2 1 2 3\\r\\n', 'output': ['YES\\r\\n1 2 1 3 2 \\r\\n']}, {'input': '6 6\\r\\n1 2 3 3 3 3\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 \\r\\n']}, {'input': '1 1\\r\\n5000\\r\\n', 'output': ['YES\\r\\n1 \\r\\n']}, {'input': '3 3\\r\\n6 7 8\\r\\n', 'output': ['YES\\r\\n1 2 3 \\r\\n']}, {'input': '8 6\\r\\n1 1 2 2 3 4 5 6\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 1 2 \\r\\n']}, {'input': '7 5\\r\\n2 3 2 1 1 1 3\\r\\n', 'output': ['YES\\r\\n4 1 5 1 2 3 2 \\r\\n']}, {'input': '5 4\\r\\n1 2 1 2 4\\r\\n', 'output': ['YES\\r\\n1 3 2 4 1 \\r\\n']}, {'input': '8 8\\r\\n1 2 2 2 1 1 3 3\\r\\n', 'output': ['YES\\r\\n1 4 5 6 2 3 7 8 \\r\\n']}, {'input': '3 2\\r\\n5000 5000 5000\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 6\\r\\n1 2 3 4 2 3 4\\r\\n', 'output': ['YES\\r\\n1 2 4 6 3 5 1 \\r\\n']}, {'input': '2 1\\r\\n5000 5000\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 4\\r\\n3 2 1 2 3\\r\\n', 'output': ['YES\\r\\n4 2 1 3 1 \\r\\n']}, {'input': '4 4\\r\\n2 1 2 3\\r\\n', 'output': ['YES\\r\\n2 1 3 4 \\r\\n']}, {'input': '4 4\\r\\n2 1 3 2\\r\\n', 'output': ['YES\\r\\n2 1 4 3 \\r\\n']}, {'input': '6 6\\r\\n1 2 2 2 3 3\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 \\r\\n']}, {'input': '7 6\\r\\n1 2 3 7 7 7 7\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 1 \\r\\n']}, {'input': '1 1\\r\\n500\\r\\n', 'output': ['YES\\r\\n1 \\r\\n']}, {'input': '8 8\\r\\n2 1 1 1 1 1 1 1\\r\\n', 'output': ['YES\\r\\n8 1 2 3 4 5 6 7 \\r\\n']}, {'input': '6 6\\r\\n1 1 2 2 3 3\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 \\r\\n']}, {'input': '10 9\\r\\n1 2 1 1 1 1 1 1 2 1\\r\\n', 'output': ['YES\\r\\n1 9 2 3 4 5 6 7 1 8 \\r\\n']}, {'input': '8 8\\r\\n1 2 8 2 3 3 3 3\\r\\n', 'output': ['YES\\r\\n1 2 8 3 4 5 6 7 \\r\\n']}, {'input': '9 9\\r\\n1 2 2 3 2 5 3 6 8\\r\\n', 'output': ['YES\\r\\n1 2 3 5 4 7 6 8 9 \\r\\n']}, {'input': '4 4\\r\\n1 2 1 2\\r\\n', 'output': ['YES\\r\\n1 3 2 4 \\r\\n']}, {'input': '4 2\\r\\n2000 2000 2000 3\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 5\\r\\n1 2 1 2 4\\r\\n', 'output': ['YES\\r\\n1 3 2 4 5 \\r\\n']}, {'input': '8 8\\r\\n1 2 2 2 1 1 1 1\\r\\n', 'output': ['YES\\r\\n1 6 7 8 2 3 4 5 \\r\\n']}, {'input': '5 5\\r\\n3 2 1 2 3\\r\\n', 'output': ['YES\\r\\n4 2 1 3 5 \\r\\n']}, {'input': '9 9\\r\\n1 1 1 1 2 2 2 2 2\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 7 8 9 \\r\\n']}, {'input': '6 6\\r\\n1 1 1 1 2 3\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 \\r\\n']}, {'input': '5 5\\r\\n1 2 2 1 1\\r\\n', 'output': ['YES\\r\\n1 4 5 2 3 \\r\\n']}, {'input': '50 20\\r\\n1 1 1 1 1 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1 2 3 4 5 6 7 8 9 10 \\r\\n']}, {'input': '5 5\\r\\n1 2 3 3 3\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 \\r\\n']}, {'input': '5 5\\r\\n1 1 1 3 3\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 \\r\\n']}, {'input': '7 3\\r\\n1 2 3 4 5 5 1\\r\\n', 'output': ['YES\\r\\n1 3 1 2 3 1 2 \\r\\n']}, {'input': '2 1\\r\\n7 9\\r\\n', 'output': ['YES\\r\\n1 1 \\r\\n']}, {'input': '4 2\\r\\n4999 4999 4999 3\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 5\\r\\n1 1 3 3 3\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 \\r\\n']}, {'input': '3 3\\r\\n1 1 2\\r\\n', 'output': ['YES\\r\\n1 2 3 \\r\\n']}, {'input': '5 5\\r\\n2 2 1 1 2\\r\\n', 'output': ['YES\\r\\n3 4 1 2 5 \\r\\n']}, {'input': '6 5\\r\\n1 2 3 4 4 4\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 1 \\r\\n']}, {'input': '1 1\\r\\n1\\r\\n', 'output': ['YES\\r\\n1 \\r\\n']}, {'input': '6 6\\r\\n1 2 1 2 4 5\\r\\n', 'output': ['YES\\r\\n1 3 2 4 5 6 \\r\\n']}, {'input': '8 6\\r\\n1 2 3 4 1 2 3 4\\r\\n', 'output': ['YES\\r\\n1 3 5 1 2 4 6 2 \\r\\n']}, {'input': '6 5\\r\\n1 2 1 2 1 2\\r\\n', 'output': ['YES\\r\\n1 4 2 5 3 1 \\r\\n']}, {'input': '10 10\\r\\n1 2 3 1 2 3 1 2 4 5\\r\\n', 'output': ['YES\\r\\n1 4 7 2 5 8 3 6 9 10 \\r\\n']}, {'input': '8 5\\r\\n9 3 9 6 10 7 8 2\\r\\n', 'output': ['YES\\r\\n1 2 2 3 3 4 5 1 \\r\\n']}, {'input': '18 18\\r\\n10 9 8 7 5 3 6 2 2 9 7 8 2 9 2 8 10 7\\r\\n', 'output': ['YES\\r\\n17 14 11 8 6 5 7 1 2 15 9 12 3 16 4 13 18 10 \\r\\n']}, {'input': '5 1\\r\\n5 2 3 4 5\\r\\n', 'output': ['NO\\r\\n']}, {'input': '9 9\\r\\n9 8 1 3 4 5 3 8 9\\r\\n', 'output': ['YES\\r\\n8 6 1 2 4 5 3 7 9 \\r\\n']}, {'input': '10 10\\r\\n1 2 3 3 2 1 4 5 7 10\\r\\n', 'output': ['YES\\r\\n1 3 5 6 4 2 7 8 9 10 \\r\\n']}, {'input': '10 10\\r\\n1 2 3 3 2 1 4 5 6 10\\r\\n', 'output': ['YES\\r\\n1 3 5 6 4 2 7 8 9 10 \\r\\n']}, {'input': '3 2\\r\\n500 500 500\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 5\\r\\n1 2 3 1 2\\r\\n', 'output': ['YES\\r\\n1 3 5 2 4 \\r\\n']}, {'input': '10 5\\r\\n1 2 3 4 1 2 3 4 1 2\\r\\n', 'output': ['YES\\r\\n1 4 2 4 2 5 3 5 3 1 \\r\\n']}, {'input': '10 7\\r\\n1 2 3 1 2 3 1 2 3 1\\r\\n', 'output': ['YES\\r\\n1 5 1 2 6 2 3 7 3 4 \\r\\n']}, {'input': '3 3\\r\\n1 2 2\\r\\n', 'output': ['YES\\r\\n1 2 3 \\r\\n']}, {'input': '4 4\\r\\n4999 5000 5000 4999\\r\\n', 'output': ['YES\\r\\n1 3 4 2 \\r\\n']}, {'input': '12 12\\r\\n8 8 8 8 8 8 4 4 4 4 2 2\\r\\n', 'output': ['YES\\r\\n7 8 9 10 11 12 3 4 5 6 1 2 \\r\\n']}, {'input': '5 4\\r\\n25 2 3 2 2\\r\\n', 'output': ['YES\\r\\n1 1 4 2 3 \\r\\n']}, {'input': '7 6\\r\\n1 1 1 1 1 2 2\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 1 \\r\\n']}, {'input': '3 3\\r\\n5 5 5\\r\\n', 'output': ['YES\\r\\n1 2 3 \\r\\n']}, {'input': '1 1\\r\\n2\\r\\n', 'output': ['YES\\r\\n1 \\r\\n']}, {'input': '6 2\\r\\n100 100 101 101 102 102\\r\\n', 'output': ['YES\\r\\n1 2 1 2 1 2 \\r\\n']}, {'input': '8 8\\r\\n1 1 2 2 3 3 4 4\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 7 8 \\r\\n']}, {'input': '3 1\\r\\n2 2 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 5\\r\\n1 1 2 2 1\\r\\n', 'output': ['YES\\r\\n1 2 4 5 3 \\r\\n']}, {'input': '8 6\\r\\n1 1 1 1 2 2 2 2\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 1 2 \\r\\n']}, {'input': '3 2\\r\\n2019 2019 2019\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3 2\\r\\n2018 2018 2018\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 10\\r\\n1 2 3 1 2 3 4 5 6 42\\r\\n', 'output': ['YES\\r\\n1 3 5 2 4 6 7 8 9 10 \\r\\n']}, {'input': '7 7\\r\\n1 1 1 1 2 3 4\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 7 \\r\\n']}, {'input': '10 10\\r\\n2017 2018 2019 2017 2018 2019 2020 2021 2022 2023\\r\\n', 'output': ['YES\\r\\n1 3 5 2 4 6 7 8 9 10 \\r\\n']}, {'input': '5 4\\r\\n1 4 6 6 3\\r\\n', 'output': ['YES\\r\\n1 3 4 1 2 \\r\\n']}, {'input': '4 4\\r\\n1 2 2 1\\r\\n', 'output': ['YES\\r\\n1 3 4 2 \\r\\n']}, {'input': '6 6\\r\\n1 1 2 2 3 4\\r\\n', 'output': ['YES\\r\\n1 2 3 4 5 6 \\r\\n']}, {'input': '6 3\\r\\n2 1 3 4 5 1\\r\\n', 'output': ['YES\\r\\n3 1 1 2 3 2 \\r\\n']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint k = Integer.parseInt(st.nextToken());\n\t\tint[] a = new int[n];\n\t\tst = new StringTokenizer(br.readLine());\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = Integer.parseInt(st.nextToken());\n\t\t}\n\t\tint[] c = new int[n];\n\t\tArrays.fill(c, -1);\n\t\tint[][] dp = new int[n][k];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 0; j < k; j++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tdp[i][j] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tif (c[i - 1] == j) {\n\t\t\t\t\t\tdp[i][j] = dp[i - 1][j];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdp[i][j] = dp[i - 1][j] + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint max = 0;\n\t\tint maxi = -1;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 0; j < k; j++) {\n\t\t\t\tif (dp[i][j] > max) {\n\t\t\t\t\tmax = dp[i][j];\n\t\t\t\t\tmaxi = j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (max < k) {\n\t\t\tSystem.out.println(\"NO\");\n\t\t} else {\n\t\t\tSystem.out.println(\"YES\");\n\t\t\tc[0] = maxi;\n\t\t\tfor (int i = 1; i < n; i++) {\n\t\t\t\tif (a[i] == a[i - 1]) {\n\t\t\t\t\tc[i] = c[i - 1];\n\t\t\t\t} else {\n\t\t\t\t\tc[i] = (c[i - 1] + 1) % k;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tSystem.out.print(c[i] + 1 + \" \");\n\t\t\t}\n\t\t}\n\t}\n}"}
{"src_uid": "56da4ec7cd849c4330d188d8c9bd6094", "id": 62, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1300, "testcases": "[{'input': '4\\r\\n5 2 2\\r\\n1 2 1 2 1\\r\\n9 3 3\\r\\n3 3 3 2 2 2 1 1 1\\r\\n4 10 4\\r\\n10 8 6 4\\r\\n16 9 8\\r\\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\\r\\n', 'output': ['2\\r\\n1\\r\\n4\\r\\n5', '2\\n1\\n4\\n5']}, {'input': '10000\\r\\n4 4 1\\r\\n4 3 3 1\\r\\n9 1 7\\r\\n1 1 1 1 1 1 1 1 1\\r\\n1 7 1\\r\\n4\\r\\n3 7 3\\r\\n7 1 2\\r\\n3 6 2\\r\\n4 5 6\\r\\n8 7 3\\r\\n6 3 5 7 3 6 4 3\\r\\n5 6 2\\r\\n2 3 6 3 4\\r\\n1 7 1\\r\\n5\\r\\n4 4 1\\r\\n3 1 3 1\\r\\n7 2 4\\r\\n2 1 1 1 1 2 1\\r\\n4 5 1\\r\\n1 5 4 1\\r\\n9 10 1\\r\\n7 4 4 4 6 3 7 10 7\\r\\n3 8 1\\r\\n6 4 3\\r\\n1 7 1\\r\\n4\\r\\n5 7 5\\r\\n7 5 3 5 5\\r\\n5 10 2\\r\\n5 10 9 10 1\\r\\n2 2 1\\r\\n2 2\\r\\n6 10 4\\r\\n4 10 5 1 7 2\\r\\n7 10 2\\r\\n8 5 7 3 2 2 4\\r\\n2 9 1\\r\\n8 3\\r\\n3 10 3\\r\\n1 2 9\\r\\n10 9 1\\r\\n7 2 4 3 4 1 5 8 8 7\\r\\n9 4 5\\r\\n2 2 3 2 4 4 1 1 2\\r\\n6 9 2\\r\\n6 2 3 1 9 9\\r\\n5 8 1\\r\\n5 2 1 5 8\\r\\n9 5 3\\r\\n3 1 5 2 1 2 2 4 1\\r\\n6 10 1\\r\\n8 6 4 10 10 10\\r\\n...', 'output': ['1\\r\\n1\\r\\n1\\r\\n3\\r\\n2\\r\\n3\\r\\n2\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n3\\r\\n2\\r\\n1\\r\\n4\\r\\n1\\r\\n1\\r\\n3\\r\\n1\\r\\n3\\r\\n1\\r\\n1\\r\\n2\\r\\n1\\r\\n1\\r\\n1\\r\\n5\\r\\n1\\r\\n1\\r\\n3\\r\\n4\\r\\n1\\r\\n3\\r\\n3\\r\\n1\\r\\n2\\r\\n1\\r\\n2\\r\\n2\\r\\n1\\r\\n2\\r\\n1\\r\\n1\\r\\n1\\r\\n5\\r\\n4\\r\\n2\\r\\n1\\r\\n2\\r\\n1\\r\\n2\\r\\n2\\r\\n3\\r\\n2\\r\\n1\\r\\n1\\r\\n2\\r\\n4\\r\\n2\\r\\n2\\r\\n3\\r\\n5\\r\\n2\\r\\n1\\r\\n5\\r\\n2\\r\\n1\\r\\n2\\r\\n1\\r\\n3\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n3\\r\\n1\\r\\n2\\r\\n1\\r\\n1\\r\\n2\\r\\n1\\r\\n1\\r\\n2\\r\\n1\\r\\n4\\r\\n1\\r\\n1\\r\\n3\\r\\n1\\r\\n1\\r\\n1\\r\\n3\\r\\n1\\r\\n1\\r\\n2\\r\\n1\\r\\n2\\r\\n4\\r\\n1\\r\\n3\\r\\n3\\r\\n1\\r\\n1\\r\\n2\\r\\n1\\r\\n3\\r\\n1\\r\\n2\\r\\n2\\r\\n1\\r\\n1\\r\\n2\\r\\n2\\r\\n1\\r\\n4\\r\\n1\\r\\n1\\r\\n3\\r\\n3\\r\\n3\\r\\n1\\r\\n1\\r\\n2\\r\\n2\\r\\n2\\r\\n1\\r\\n1\\r\\n1\\r\\n2\\r\\n1\\r\\n3\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n3\\r\\n4\\r\\n6\\r\\n3\\r\\n1\\r\\n1\\r\\n1\\r\\n2\\r\\n3\\r\\n1\\r\\n1\\r\\n1\\r\\n2\\r\\n1\\r\\n1\\r\\n4\\r\\n1\\r\\n3\\r\\n1\\r\\n3\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n2...']}, {'input': '10000\\r\\n25 2 1\\r\\n1 2 2 1 2 2 2 2 2 2 2 1 1 1 2 2 2 1 2 2 1 1 1 2 1\\r\\n24 27 19\\r\\n19 2 15 17 4 8 20 13 1 2 19 2 6 9 22 16 17 20 23 25 26 8 6 24\\r\\n4 10 1\\r\\n10 7 7 9\\r\\n11 15 1\\r\\n2 2 6 3 3 5 11 15 8 12 3\\r\\n19 20 3\\r\\n10 8 8 9 8 6 1 8 20 10 9 18 20 16 4 12 9 10 2\\r\\n22 8 11\\r\\n5 3 5 1 7 7 2 4 6 4 5 8 6 1 3 7 2 7 2 5 7 6\\r\\n16 4 6\\r\\n1 1 4 3 2 1 2 1 3 3 2 3 3 3 3 2\\r\\n19 25 5\\r\\n14 18 2 11 14 12 15 16 21 11 16 12 17 7 18 23 2 3 4\\r\\n26 16 1\\r\\n2 14 12 14 5 6 5 6 15 11 9 7 15 3 3 4 8 13 1 4 4 8 3 1 12 9\\r\\n19 13 9\\r\\n11 2 3 13 6 8 7 2 6 3 9 7 1...', 'output': ['1\\r\\n14\\r\\n1\\r\\n1\\r\\n2\\r\\n7\\r\\n2\\r\\n4\\r\\n1\\r\\n6\\r\\n7\\r\\n2\\r\\n7\\r\\n9\\r\\n4\\r\\n3\\r\\n2\\r\\n8\\r\\n4\\r\\n6\\r\\n1\\r\\n4\\r\\n4\\r\\n4\\r\\n3\\r\\n3\\r\\n2\\r\\n5\\r\\n9\\r\\n1\\r\\n3\\r\\n3\\r\\n3\\r\\n1\\r\\n7\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n6\\r\\n1\\r\\n6\\r\\n1\\r\\n4\\r\\n2\\r\\n2\\r\\n5\\r\\n5\\r\\n5\\r\\n4\\r\\n5\\r\\n2\\r\\n1\\r\\n2\\r\\n1\\r\\n1\\r\\n2\\r\\n6\\r\\n2\\r\\n1\\r\\n3\\r\\n8\\r\\n6\\r\\n2\\r\\n1\\r\\n4\\r\\n1\\r\\n17\\r\\n2\\r\\n11\\r\\n1\\r\\n8\\r\\n1\\r\\n4\\r\\n8\\r\\n5\\r\\n2\\r\\n1\\r\\n1\\r\\n1\\r\\n4\\r\\n2\\r\\n10\\r\\n4\\r\\n1\\r\\n8\\r\\n5\\r\\n7\\r\\n1\\r\\n11\\r\\n1\\r\\n2\\r\\n2\\r\\n1\\r\\n11\\r\\n6\\r\\n1\\r\\n4\\r\\n6\\r\\n16\\r\\n1\\r\\n12\\r\\n8\\r\\n4\\r\\n5\\r\\n1\\r\\n2\\r\\n6\\r\\n12\\r\\n2\\r\\n3\\r\\n3\\r\\n2\\r\\n2\\r\\n1\\r\\n6\\r\\n4\\r\\n13\\r\\n2\\r\\n11\\r\\n3\\r\\n4\\r\\n13\\r\\n1\\r\\n7\\r\\n5\\r\\n5\\r\\n11\\r\\n4\\r\\n3\\r\\n6\\r\\n6\\r\\n2\\r\\n1\\r\\n1\\r\\n9\\r\\n4\\r\\n9\\r\\n9\\r\\n13\\r\\n2\\r\\n5\\r\\n1\\r\\n1\\r\\n14\\r\\n5\\r\\n1\\r\\n10\\r\\n2\\r\\n2\\r\\n6\\r\\n1\\r\\n4\\r\\n1\\r\\n1\\r\\n2\\r\\n7\\r\\n1\\r\\n3\\r\\n1\\r\\n6\\r\\n2\\r\\n2\\r\\n4\\r\\n...']}, {'input': '1\\r\\n200000 50000 100000\\r\\n43620 16520 24169 29319 35300 6092 8697 40998 15469 16541 45920 21696 48009 37549 35849 6966 45977 49376 47590 10302 36127 14270 35645 20850 15907 32338 30934 35216 32431 48365 11343 28651 42051 4611 3208 48408 8001 13308 3528 34450 48338 44549 214 35127 25599 21629 13920 49465 30152 33128 22087 20254 29457 18159 30113 18369 20976 35278 49478 42126 44353 31877 49348 4138 43970 17640 12092 38376 23575 4559 13202 45493 27767 29431 14560 2957 25933 37550 11475 36643 29624 38619 38461 3...', 'output': ['43168']}, {'input': '1\\r\\n200000 1 100000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1...', 'output': ['1']}, {'input': '1\\r\\n200000 10 100000\\r\\n1 9 2 9 4 1 9 4 2 6 4 10 5 2 9 6 4 3 7 5 10 2 6 7 5 8 7 2 4 1 1 1 3 3 7 10 2 6 4 5 4 10 10 2 6 2 1 4 8 3 1 2 5 8 3 4 10 8 7 5 9 5 5 5 8 4 1 10 8 7 6 9 7 7 5 7 9 4 8 10 1 5 9 5 7 7 6 9 5 4 3 5 7 10 5 6 3 2 10 3 2 10 3 10 5 3 5 4 10 10 2 9 3 3 6 2 3 6 5 1 9 1 5 6 6 9 1 9 8 3 9 7 1 3 2 7 6 5 5 8 3 10 5 1 4 9 3 4 1 9 8 2 8 5 2 6 6 3 10 7 1 2 9 3 3 7 6 9 7 2 9 9 1 8 8 2 5 2 4 8 1 8 7 3 6 5 3 10 4 2 10 9 5 5 8 6 9 1 1 8 9 2 7 7 1 10 8 10 6 5 5 2 10 10 8 3 8 9 3 7 1 2 8 6 5 6 9 4 6 1 3 4 6 3 ...', 'output': ['10']}, {'input': '1\\r\\n200000 100 20000\\r\\n56 54 36 40 73 78 52 47 66 20 77 100 36 93 23 31 59 97 74 29 58 88 27 97 37 81 15 20 89 75 8 61 52 78 1 26 86 7 63 46 21 74 39 72 38 77 68 82 97 84 79 96 65 47 42 45 70 66 28 58 81 34 81 14 52 73 75 74 87 65 82 63 56 86 56 99 32 24 18 20 60 25 97 77 28 49 53 7 35 21 10 74 34 95 30 5 4 77 69 49 81 2 5 50 32 72 50 9 7 44 15 80 70 45 39 69 12 5 61 84 33 10 88 32 94 91 24 22 49 88 99 38 30 30 1 96 27 60 4 84 89 3 21 70 21 39 69 11 28 7 17 39 71 30 19 33 91 93 26 45 6 86 61 57 80 91 5 28 64...', 'output': ['100']}, {'input': '1\\r\\n200000 999996 100000\\r\\n1 6 11 16 21 26 31 36 41 46 51 56 61 66 71 76 81 86 91 96 101 106 111 116 121 126 131 136 141 146 151 156 161 166 171 176 181 186 191 196 201 206 211 216 221 226 231 236 241 246 251 256 261 266 271 276 281 286 291 296 301 306 311 316 321 326 331 336 341 346 351 356 361 366 371 376 381 386 391 396 401 406 411 416 421 426 431 436 441 446 451 456 461 466 471 476 481 486 491 496 501 506 511 516 521 526 531 536 541 546 551 556 561 566 571 576 581 586 591 596 601 606 611 616 621 626 631 ...', 'output': ['100000']}, {'input': '1\\r\\n200000 1000000 200000\\r\\n1000000 999995 999990 999985 999980 999975 999970 999965 999960 999955 999950 999945 999940 999935 999930 999925 999920 999915 999910 999905 999900 999895 999890 999885 999880 999875 999870 999865 999860 999855 999850 999845 999840 999835 999830 999825 999820 999815 999810 999805 999800 999795 999790 999785 999780 999775 999770 999765 999760 999755 999750 999745 999740 999735 999730 999725 999720 999715 999710 999705 999700 999695 999690 999685 999680 999675 999670 999665 999660 9...', 'output': ['200000']}, {'input': '1\\r\\n200000 1000 100000\\r\\n620 192 107 955 564 521 642 381 695 916 549 124 253 339 472 162 131 282 959 678 207 154 876 995 734 39 412 999 815 355 18 165 430 993 27 603 666 794 993 261 70 259 289 24 684 893 292 512 941 852 393 42 314 25 25 970 671 168 914 583 666 819 637 194 512 972 681 283 401 767 709 892 607 366 529 164 211 563 726 197 72 746 537 94 150 347 365 281 320 276 734 646 118 894 974 967 68 260 563 746 985 119 431 778 249 428 511 158 692 99 125 553 877 954 302 832 611 137 181 895 51 860 150 916 284 6...', 'output': ['1000']}, {'input': '1\\r\\n200000 100000 100000\\r\\n8647 17914 36109 89778 78993 55133 74489 27482 57585 98271 77889 47476 26434 78910 72270 37433 77590 94218 26776 81236 7857 52297 75984 96580 13420 37206 57335 15966 38003 44862 95973 906 76808 94689 51811 80545 49598 60279 5137 72373 67166 84168 43937 97833 79109 97555 66522 57877 67492 14888 45878 78979 86655 76238 22212 32085 91951 14238 83686 38492 81248 57509 57652 11778 87283 25990 28664 96610 45117 5398 15632 33866 83494 31775 58512 71264 17548 46621 80189 6618 19549 76932 5...', 'output': ['62936']}, {'input': '1\\r\\n200000 1000000 200000\\r\\n470364 225896 287028 539970 507065 834358 221882 79921 952537 675938 918775 600012 658158 451805 585924 200704 727836 877423 589359 95563 175804 737263 148093 693378 834010 564940 1442 668171 699064 243399 367947 932004 332361 500470 581460 457946 747126 822659 687570 763411 734109 359915 138955 532165 905740 554112 955385 526332 377610 359080 408012 320280 805135 892507 484900 811596 483912 864488 223962 260705 468 390385 483192 247665 841481 651754 428156 822508 897711 270750 80...', 'output': ['181244']}, {'input': '1\\r\\n200000 1000000 20000\\r\\n533722 392695 889264 562461 855026 138921 815803 461194 257052 45665 831069 886688 652160 561837 516684 283787 634185 14587 677319 708000 762661 815073 509775 30098 637512 723030 819497 202814 848040 970165 882077 948960 348866 282945 296186 444252 966548 552732 274192 16694 895137 572174 815092 350234 717680 652165 545471 904085 37325 47183 763599 162009 423431 10401 212741 944445 276272 304020 763078 730235 106465 974498 982395 46321 795699 969837 135760 488480 863430 883321 2125...', 'output': ['19770']}, {'input': '1\\r\\n200000 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['1']}, {'input': '1\\r\\n200000 1000000 1\\r\\n780737 872203 852770 369033 859738 846341 851594 954282 684383 209632 798015 36250 376958 793324 203798 459743 621399 649416 45468 297431 261695 620652 512718 793583 992894 200416 98975 368684 265169 695427 834486 116518 889256 354565 349037 240328 345769 475500 788435 452690 948139 738003 87787 656919 874748 293479 823979 451391 310748 446952 936638 761542 417856 248622 69762 416315 588495 748898 540043 217410 102504 122304 887006 865619 229595 6236 653431 864185 887339 426521 687555 ...', 'output': ['1']}, {'input': '1\\r\\n200000 999996 1\\r\\n1 6 11 16 21 26 31 36 41 46 51 56 61 66 71 76 81 86 91 96 101 106 111 116 121 126 131 136 141 146 151 156 161 166 171 176 181 186 191 196 201 206 211 216 221 226 231 236 241 246 251 256 261 266 271 276 281 286 291 296 301 306 311 316 321 326 331 336 341 346 351 356 361 366 371 376 381 386 391 396 401 406 411 416 421 426 431 436 441 446 451 456 461 466 471 476 481 486 491 496 501 506 511 516 521 526 531 536 541 546 551 556 561 566 571 576 581 586 591 596 601 606 611 616 621 626 631 636 6...', 'output': ['1']}, {'input': '1\\r\\n200000 999996 199999\\r\\n1 6 11 16 21 26 31 36 41 46 51 56 61 66 71 76 81 86 91 96 101 106 111 116 121 126 131 136 141 146 151 156 161 166 171 176 181 186 191 196 201 206 211 216 221 226 231 236 241 246 251 256 261 266 271 276 281 286 291 296 301 306 311 316 321 326 331 336 341 346 351 356 361 366 371 376 381 386 391 396 401 406 411 416 421 426 431 436 441 446 451 456 461 466 471 476 481 486 491 496 501 506 511 516 521 526 531 536 541 546 551 556 561 566 571 576 581 586 591 596 601 606 611 616 621 626 631 ...', 'output': ['199999']}, {'input': '10000\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 1000000 1\\r\\n1\\r\\n1 100000...', 'output': ['1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1...']}, {'input': '10000\\r\\n20 1000000 5\\r\\n50000 100000 150000 200000 250000 300000 350000 400000 450000 500000 550000 600000 650000 700000 750000 800000 850000 900000 950000 1000000\\r\\n20 1000000 5\\r\\n50000 100000 150000 200000 250000 300000 350000 400000 450000 500000 550000 600000 650000 700000 750000 800000 850000 900000 950000 1000000\\r\\n20 1000000 5\\r\\n50000 100000 150000 200000 250000 300000 350000 400000 450000 500000 550000 600000 650000 700000 750000 800000 850000 900000 950000 1000000\\r\\n20 1000000 5\\r\\n50000 100000 150000 20000...', 'output': ['5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5...']}, {'input': '10000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000\\r\\n1 1000000 1\\r\\n1000000...', 'output': ['1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1...']}, {'input': '10000\\r\\n20 1000000 6\\r\\n42 18468 6335 26501 19170 15725 11479 29359 26963 24465 5706 28146 23282 16828 9962 492 2996 11943 4828 5437\\r\\n20 1000000 6\\r\\n32392 14605 3903 154 293 12383 17422 18717 19719 19896 5448 21727 14772 11539 1870 19913 25668 26300 17036 9895\\r\\n20 1000000 6\\r\\n28704 23812 31323 30334 17674 4665 15142 7712 28254 6869 25548 27645 32663 32758 20038 12860 8724 9742 27530 779\\r\\n20 1000000 6\\r\\n12317 3036 22191 1843 289 30107 9041 8943 19265 22649 27447 23806 15891 6730 24371 15351 15007 31102 24394 3549...', 'output': ['6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6\\r\\n6...']}, {'input': '10000\\r\\n16 9 8\\r\\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\\r\\n16 9 8\\r\\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\\r\\n16 9 8\\r\\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\\r\\n16 9 8\\r\\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\\r\\n16 9 8\\r\\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\\r\\n16 9 8\\r\\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\\r\\n16 9 8\\r\\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\\r\\n16 9 8\\r\\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\\r\\n16 9 8\\r\\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\\r\\n16 9 8\\r\\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\\r\\n16 9 8\\r\\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\\r\\n16 9 8\\r\\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\\r\\n16 9 8\\r\\n3 1 ...', 'output': ['5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5\\r\\n5...']}, {'input': '1\\r\\n6969 100 100\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['1']}, {'input': '10000\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n1 1000000 1\\r\\n777\\r\\n...', 'output': ['1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1...']}, {'input': '30\\r\\n4 4 1\\r\\n3 3 1 2\\r\\n4 4 1\\r\\n4 1 4 1\\r\\n1 1 1\\r\\n1\\r\\n3 2 1\\r\\n2 1 2\\r\\n4 4 2\\r\\n3 2 2 2\\r\\n4 2 4\\r\\n1 2 2 2\\r\\n1 4 1\\r\\n4\\r\\n2 3 1\\r\\n2 3\\r\\n2 2 1\\r\\n2 2\\r\\n4 4 2\\r\\n1 2 4 2\\r\\n4 4 1\\r\\n2 4 4 3\\r\\n4 3 1\\r\\n1 3 1 3\\r\\n1 1 1\\r\\n1\\r\\n2 2 2\\r\\n2 1\\r\\n2 4 1\\r\\n1 4\\r\\n2 4 1\\r\\n3 4\\r\\n1 2 1\\r\\n1\\r\\n2 4 2\\r\\n2 1\\r\\n3 1 2\\r\\n1 1 1\\r\\n2 4 1\\r\\n1 4\\r\\n2 3 1\\r\\n3 3\\r\\n4 2 2\\r\\n2 1 2 2\\r\\n3 2 2\\r\\n2 2 1\\r\\n4 3 1\\r\\n2 2 1 2\\r\\n2 3 1\\r\\n1 3\\r\\n4 4 4\\r\\n3 2 2 3\\r\\n1 4 1\\r\\n1\\r\\n2 1 2\\r\\n1 1\\r\\n1 4 1\\r\\n4\\r\\n2 3 1\\r\\n3 3\\r\\n', 'output': ['1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n2\\r\\n1\\r\\n1\\r\\n1\\r\\n2\\r\\n1\\r\\n1\\r\\n1\\r\\n2\\r\\n1\\r\\n1\\r\\n1\\r\\n2\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n2\\r\\n1\\r\\n1\\r\\n1\\r\\n1', '1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1']}, {'input': '15\\r\\n6 4 6\\r\\n2 3 2 3 4 2\\r\\n7 8 4\\r\\n5 6 2 7 7 3 3\\r\\n8 1 5\\r\\n1 1 1 1 1 1 1 1\\r\\n1 5 1\\r\\n1\\r\\n2 7 2\\r\\n6 7\\r\\n6 8 4\\r\\n8 5 4 1 6 6\\r\\n1 8 1\\r\\n2\\r\\n3 8 2\\r\\n2 3 3\\r\\n2 2 1\\r\\n1 1\\r\\n8 2 5\\r\\n2 2 1 1 1 1 1 1\\r\\n7 6 4\\r\\n2 4 1 1 2 4 3\\r\\n8 8 2\\r\\n6 5 6 1 3 1 2 8\\r\\n5 6 1\\r\\n6 1 2 6 2\\r\\n6 5 5\\r\\n1 5 2 4 4 5\\r\\n7 1 6\\r\\n1 1 1 1 1 1 1\\r\\n', 'output': ['3\\n2\\n1\\n1\\n2\\n3\\n1\\n1\\n1\\n1\\n3\\n2\\n1\\n3\\n1', '3\\r\\n2\\r\\n1\\r\\n1\\r\\n2\\r\\n3\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n3\\r\\n2\\r\\n1\\r\\n3\\r\\n1']}, {'input': '10\\r\\n6 9 4\\r\\n8 8 2 5 8 9\\r\\n5 3 4\\r\\n1 3 1 2 1\\r\\n10 5 10\\r\\n3 2 4 2 1 1 2 2 3 4\\r\\n7 7 3\\r\\n4 6 2 6 4 5 2\\r\\n9 9 6\\r\\n4 6 7 2 5 5 7 4 8\\r\\n6 5 4\\r\\n2 3 2 5 5 5\\r\\n8 3 4\\r\\n2 3 2 3 2 1 1 3\\r\\n10 6 9\\r\\n6 2 4 1 4 5 5 2 1 1\\r\\n8 7 2\\r\\n4 4 5 6 2 5 3 4\\r\\n1 9 1\\r\\n3\\r\\n', 'output': ['3\\r\\n3\\r\\n4\\r\\n2\\r\\n4\\r\\n2\\r\\n2\\r\\n4\\r\\n1\\r\\n1', '3\\n3\\n4\\n2\\n4\\n2\\n2\\n4\\n1\\n1']}, {'input': '5\\r\\n17 10 1\\r\\n8 5 10 7 4 7 2 9 8 10 7 2 6 5 1 1 5\\r\\n22 13 5\\r\\n1 9 12 4 6 1 8 10 1 11 1 2 1 6 8 12 11 8 10 6 2 12\\r\\n13 25 7\\r\\n22 7 19 12 7 17 7 6 22 19 5 5 23\\r\\n1 6 1\\r\\n6\\r\\n1 15 1\\r\\n7\\r\\n', 'output': ['1\\n3\\n5\\n1\\n1', '1\\r\\n3\\r\\n5\\r\\n1\\r\\n1']}, {'input': '1\\r\\n100 90 100\\r\\n8 39 60 46 68 2 42 45 7 54 89 78 16 59 21 29 5 30 20 12 64 42 34 33 13 17 55 30 54 31 23 27 38 36 2 49 45 43 47 55 4 6 55 38 60 16 34 86 67 76 55 86 39 62 12 58 74 51 10 31 38 85 50 61 48 35 69 24 64 53 4 19 15 35 28 22 88 3 25 60 9 40 67 47 26 57 58 61 65 21 76 4 15 35 37 49 62 45 81 32\\r\\n', 'output': ['67']}, {'input': '1\\r\\n100 100 100\\r\\n100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['100']}, {'input': '1\\r\\n100 50 100\\r\\n22 28 34 29 43 8 12 12 4 29 36 38 22 5 19 38 4 41 20 33 39 11 2 40 42 8 33 23 20 47 45 30 47 33 27 23 50 26 30 43 8 3 4 38 46 32 20 19 10 3 18 29 21 19 37 30 12 38 27 44 24 39 25 18 50 44 37 22 39 41 18 26 37 40 40 16 38 9 12 36 27 31 45 47 31 31 29 48 25 7 29 24 10 2 8 3 36 48 8 9\\r\\n', 'output': ['42']}, {'input': '1\\r\\n100 1 100\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['1']}, {'input': '1\\r\\n100 10 100\\r\\n9 2 2 3 5 2 2 3 4 9 5 3 6 2 1 4 4 8 6 2 3 10 4 1 5 2 8 8 3 9 2 7 2 3 4 2 2 8 9 7 10 3 7 7 4 4 8 8 9 7 1 8 10 3 6 8 1 9 4 6 5 6 9 2 9 6 7 10 5 8 7 10 6 1 9 2 10 10 10 9 6 5 6 9 2 8 1 2 2 5 6 6 3 3 7 10 10 1 6 3\\r\\n', 'output': ['10']}, {'input': '1\\r\\n100 2 100\\r\\n2 1 2 2 1 2 2 1 1 2 2 2 2 2 1 1 1 1 2 1 1 1 2 2 2 1 1 1 2 1 1 1 1 2 1 1 1 1 2 2 2 2 1 2 2 1 2 1 1 1 1 2 2 2 1 1 2 1 2 2 2 2 1 1 1 2 1 1 1 1 1 2 1 2 1 2 1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 2 1 2 1 2 2 2 1 2\\r\\n', 'output': ['2']}, {'input': '1\\r\\n100 16 100\\r\\n1 11 2 2 13 8 3 15 8 11 13 1 16 16 3 5 12 10 11 16 1 14 16 8 14 3 15 8 2 8 10 1 16 14 8 4 2 10 3 8 3 5 8 10 4 12 11 8 8 15 16 5 7 6 3 9 15 7 1 14 14 2 13 4 10 6 12 13 9 8 9 2 9 3 2 12 9 3 8 11 14 9 3 3 15 10 12 10 10 16 2 12 13 7 6 7 13 1 14 15\\r\\n', 'output': ['16']}, {'input': '1\\r\\n100 100 50\\r\\n40 23 65 71 63 65 82 49 42 62 80 68 30 97 95 11 19 16 50 33 99 40 100 88 7 52 83 80 68 30 32 40 67 16 45 89 54 88 9 42 40 65 96 97 9 100 53 84 40 40 66 13 47 30 71 14 83 18 35 70 73 52 17 91 87 59 81 5 84 94 1 9 23 90 32 91 69 77 38 84 38 74 6 26 100 47 39 23 84 90 67 86 67 80 31 51 71 97 69 68\\r\\n', 'output': ['34']}, {'input': '1\\r\\n100 100 33\\r\\n78 92 82 75 58 98 94 39 38 88 89 78 2 95 53 47 74 95 14 92 49 44 8 67 31 77 90 20 16 92 19 32 26 75 81 4 79 46 21 44 5 19 64 72 13 9 74 58 84 62 70 86 77 4 39 97 1 67 98 99 89 34 29 13 24 2 69 68 30 66 77 16 26 49 1 25 89 26 28 25 96 55 51 44 10 7 36 75 12 81 31 46 52 55 48 78 82 95 39 44\\r\\n', 'output': ['28']}, {'input': '1\\r\\n100 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['1']}, {'input': '1\\r\\n100 20 1\\r\\n10 17 9 8 11 8 8 3 7 20 11 10 7 7 2 13 10 7 7 10 7 8 4 17 20 9 5 18 12 8 3 5 19 1 18 14 9 11 12 11 11 12 12 9 13 8 20 3 8 1 15 20 6 18 8 1 13 11 4 17 12 15 4 4 11 19 18 5 2 12 15 20 5 8 11 16 14 13 17 14 14 5 6 8 8 13 6 3 18 14 8 14 11 11 9 4 18 1 16 6\\r\\n', 'output': ['1']}, {'input': '1\\r\\n100 20 2\\r\\n18 1 3 1 13 1 3 15 3 2 7 14 1 8 1 10 1 1 9 18 11 6 9 12 17 5 6 7 13 14 9 4 6 14 7 14 19 6 13 10 7 2 17 3 10 11 11 7 2 4 9 12 11 6 20 20 4 16 7 10 8 4 19 18 2 4 6 5 20 2 12 6 20 20 18 7 11 20 10 2 8 5 16 4 19 17 18 9 7 9 13 10 3 12 18 2 6 12 18 10\\r\\n', 'output': ['1']}, {'input': '1\\r\\n100 100 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n', 'output': ['1']}, {'input': '1\\r\\n100 100 2\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n', 'output': ['2']}, {'input': '1\\r\\n100 100 10\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n', 'output': ['10']}, {'input': '1\\r\\n100 100 99\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n', 'output': ['99']}, {'input': '1\\r\\n100 100 100\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n', 'output': ['100']}, {'input': '1\\r\\n100 100 1\\r\\n100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['1']}, {'input': '1\\r\\n100 100 2\\r\\n100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['2']}, {'input': '1\\r\\n100 100 3\\r\\n100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['3']}, {'input': '1\\r\\n100 100 99\\r\\n100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['99']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int t = Integer.parseInt(br.readLine());\n        while (t-- > 0) {\n            StringTokenizer st = new StringTokenizer(br.readLine());\n            int n = Integer.parseInt(st.nextToken());\n            int k = Integer.parseInt(st.nextToken());\n            int d = Integer.parseInt(st.nextToken());\n            int[] a = new int[n];\n            st = new StringTokenizer(br.readLine());\n            for (int i = 0; i < n; i++) {\n                a[i] = Integer.parseInt(st.nextToken());\n            }\n            int ans = Integer.MAX_VALUE;\n            for (int i = 0; i < n - d + 1; i++) {\n                int[] cnt = new int[k + 1];\n                for (int j = i; j < i + d; j++) {\n                    cnt[a[j]]++;\n                }\n                int c = 0;\n                for (int j = 1; j <= k; j++) {\n                    if (cnt[j] == d) {\n                        c++;\n                    }\n                }\n                ans = Math.min(ans, c);\n            }\n            System.out.println(ans);\n        }\n    }\n}"}
{"src_uid": "5a623c49cf7effacfb58bc82f8eaff37", "id": 63, "lang_cluster": "java", "lang": "Java 11", "difficulty": 800, "testcases": "[{'input': '1 7 11 5\\r\\n', 'output': ['YES']}, {'input': '7 3 2 5\\r\\n', 'output': ['NO']}, {'input': '3 14 36 53\\r\\n', 'output': ['YES']}, {'input': '30 74 41 63\\r\\n', 'output': ['YES']}, {'input': '92 69 83 97\\r\\n', 'output': ['NO']}, {'input': '26 52 7 19\\r\\n', 'output': ['YES']}, {'input': '72 52 62 62\\r\\n', 'output': ['YES']}, {'input': '1 1 1 1\\r\\n', 'output': ['YES']}, {'input': '70 100 10 86\\r\\n', 'output': ['NO']}, {'input': '14 10 18 24\\r\\n', 'output': ['NO']}, {'input': '20 14 37 71\\r\\n', 'output': ['YES']}, {'input': '1 1 2 1\\r\\n', 'output': ['NO']}, {'input': '2 4 1 1\\r\\n', 'output': ['YES']}, {'input': '34 11 84 39\\r\\n', 'output': ['YES']}, {'input': '76 97 99 74\\r\\n', 'output': ['YES']}, {'input': '44 58 90 53\\r\\n', 'output': ['NO']}, {'input': '18 88 18 18\\r\\n', 'output': ['NO']}, {'input': '48 14 3 31\\r\\n', 'output': ['YES']}, {'input': '72 96 2 26\\r\\n', 'output': ['YES']}, {'input': '69 7 44 30\\r\\n', 'output': ['NO']}, {'input': '66 68 16 82\\r\\n', 'output': ['NO']}, {'input': '100 100 100 100\\r\\n', 'output': ['YES']}, {'input': '100 98 99 97\\r\\n', 'output': ['YES']}, {'input': '1 100 100 1\\r\\n', 'output': ['YES']}, {'input': '100 100 99 100\\r\\n', 'output': ['NO']}, {'input': '99 100 3 98\\r\\n', 'output': ['NO']}, {'input': '4 4 4 5\\r\\n', 'output': ['NO']}, {'input': '2 6 3 2\\r\\n', 'output': ['NO']}, {'input': '7 3 6 3\\r\\n', 'output': ['NO']}, {'input': '14 9 10 6\\r\\n', 'output': ['NO']}, {'input': '2 4 6 6\\r\\n', 'output': ['NO']}, {'input': '4 2 4 2\\r\\n', 'output': ['YES']}, {'input': '4 4 4 8\\r\\n', 'output': ['NO']}, {'input': '6 4 8 6\\r\\n', 'output': ['YES']}, {'input': '97 95 91 27\\r\\n', 'output': ['NO']}, {'input': '1 2 3 2\\r\\n', 'output': ['YES']}, {'input': '1 2 8 9\\r\\n', 'output': ['YES']}, {'input': '5 10 1 6\\r\\n', 'output': ['YES']}, {'input': '1 2 3 5\\r\\n', 'output': ['NO']}, {'input': '3 5 1 3\\r\\n', 'output': ['YES']}, {'input': '1 2 3 3\\r\\n', 'output': ['NO']}, {'input': '1 1 14 12\\r\\n', 'output': ['YES']}, {'input': '1 1 1 2\\r\\n', 'output': ['NO']}, {'input': '6 3 6 6\\r\\n', 'output': ['NO']}, {'input': '10 2 3 5\\r\\n', 'output': ['YES']}, {'input': '1 2 10 7\\r\\n', 'output': ['YES']}, {'input': '3 1 1 1\\r\\n', 'output': ['YES']}, {'input': '1 2 5 5\\r\\n', 'output': ['NO']}, {'input': '2 3 10 10\\r\\n', 'output': ['NO']}, {'input': '2 2 4 6\\r\\n', 'output': ['NO']}, {'input': '1 1 10 20\\r\\n', 'output': ['NO']}, {'input': '1 1 3 1\\r\\n', 'output': ['YES']}, {'input': '1 2 1 3\\r\\n', 'output': ['NO']}, {'input': '18 17 17 20\\r\\n', 'output': ['NO']}, {'input': '3 2 1 1\\r\\n', 'output': ['NO']}, {'input': '1 1 4 5\\r\\n', 'output': ['NO']}, {'input': '90 30 30 30\\r\\n', 'output': ['YES']}, {'input': '1 2 6 3\\r\\n', 'output': ['YES']}, {'input': '2 3 3 4\\r\\n', 'output': ['YES']}, {'input': '1 1 4 2\\r\\n', 'output': ['YES']}, {'input': '1 1 2 3\\r\\n', 'output': ['NO']}, {'input': '1 1 3 4\\r\\n', 'output': ['NO']}, {'input': '2 1 28 9\\r\\n', 'output': ['NO']}, {'input': '1 2 3 4\\r\\n', 'output': ['YES']}, {'input': '1 2 4 5\\r\\n', 'output': ['YES']}, {'input': '2 2 6 2\\r\\n', 'output': ['YES']}, {'input': '2 3 2 5\\r\\n', 'output': ['NO']}, {'input': '5 7 1 3\\r\\n', 'output': ['YES']}, {'input': '4 4 12 4\\r\\n', 'output': ['YES']}, {'input': '1 2 2 7\\r\\n', 'output': ['NO']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint[] a = new int[4];\n\t\tfor (int i = 0; i < 4; i++) {\n\t\t\ta[i] = Integer.parseInt(st.nextToken());\n\t\t}\n\t\tArrays.sort(a);\n\t\tif (a[0] + a[1] == a[2] + a[3]) {\n\t\t\tSystem.out.println(\"YES\");\n\t\t} else {\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\t}\n}\n"}
{"src_uid": "6c85175d334f811617e7030e0403f706", "id": 64, "lang_cluster": "java", "lang": "Java 11", "difficulty": 900, "testcases": "[{'input': 'mew\\r\\n', 'output': ['3']}, {'input': 'wuffuw\\r\\n', 'output': ['5']}, {'input': 'qqqqqqqq\\r\\n', 'output': ['0']}, {'input': 'ijvji\\r\\n', 'output': ['4']}, {'input': 'iiiiiii\\r\\n', 'output': ['0']}, {'input': 'wobervhvvkihcuyjtmqhaaigvvgiaahqmtjyuchikvvhvrebow\\r\\n', 'output': ['49']}, {'input': 'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\\r\\n', 'output': ['0']}, {'input': 'wobervhvvkihcuyjtmqhaaigvahheoqleromusrartldojsjvy\\r\\n', 'output': ['50']}, {'input': 'ijvxljt\\r\\n', 'output': ['7']}, {'input': 'fyhcncnchyf\\r\\n', 'output': ['10']}, {'input': 'ffffffffffff\\r\\n', 'output': ['0']}, {'input': 'fyhcncfsepqj\\r\\n', 'output': ['12']}, {'input': 'ybejrrlbcinttnicblrrjeby\\r\\n', 'output': ['23']}, {'input': 'yyyyyyyyyyyyyyyyyyyyyyyyy\\r\\n', 'output': ['0']}, {'input': 'ybejrrlbcintahovgjddrqatv\\r\\n', 'output': ['25']}, {'input': 'oftmhcmclgyqaojljoaqyglcmchmtfo\\r\\n', 'output': ['30']}, {'input': 'oooooooooooooooooooooooooooooooo\\r\\n', 'output': ['0']}, {'input': 'oftmhcmclgyqaojllbotztajglsmcilv\\r\\n', 'output': ['32']}, {'input': 'gxandbtgpbknxvnkjaajknvxnkbpgtbdnaxg\\r\\n', 'output': ['35']}, {'input': 'gggggggggggggggggggggggggggggggggggg\\r\\n', 'output': ['0']}, {'input': 'gxandbtgpbknxvnkjaygommzqitqzjfalfkk\\r\\n', 'output': ['36']}, {'input': 'fcliblymyqckxvieotjooojtoeivxkcqymylbilcf\\r\\n', 'output': ['40']}, {'input': 'fffffffffffffffffffffffffffffffffffffffffff\\r\\n', 'output': ['0']}, {'input': 'fcliblymyqckxvieotjootiqwtyznhhvuhbaixwqnsy\\r\\n', 'output': ['43']}, {'input': 'rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr\\r\\n', 'output': ['0']}, {'input': 'rajccqwqnqmshmerpvjyfepxwpxyldzpzhctqjnstxyfmlhiy\\r\\n', 'output': ['49']}, {'input': 'a\\r\\n', 'output': ['0']}, {'input': 'abca\\r\\n', 'output': ['4']}, {'input': 'aaaaabaaaaa\\r\\n', 'output': ['10']}, {'input': 'aba\\r\\n', 'output': ['2']}, {'input': 'asaa\\r\\n', 'output': ['4']}, {'input': 'aabaa\\r\\n', 'output': ['4']}, {'input': 'aabbaa\\r\\n', 'output': ['5']}, {'input': 'abcdaaa\\r\\n', 'output': ['7']}, {'input': 'aaholaa\\r\\n', 'output': ['7']}, {'input': 'abcdefghijka\\r\\n', 'output': ['12']}, {'input': 'aaadcba\\r\\n', 'output': ['7']}, {'input': 'aaaabaaaa\\r\\n', 'output': ['8']}, {'input': 'abaa\\r\\n', 'output': ['4']}, {'input': 'abcbaa\\r\\n', 'output': ['6']}, {'input': 'ab\\r\\n', 'output': ['2']}, {'input': 'l\\r\\n', 'output': ['0']}, {'input': 'aaaabcaaaa\\r\\n', 'output': ['10']}, {'input': 'abbaaaaaabba\\r\\n', 'output': ['11']}, {'input': 'abaaa\\r\\n', 'output': ['5']}, {'input': 'baa\\r\\n', 'output': ['3']}, {'input': 'aaaaaaabbba\\r\\n', 'output': ['11']}, {'input': 'ccbcc\\r\\n', 'output': ['4']}, {'input': 'bbbaaab\\r\\n', 'output': ['7']}, {'input': 'abaaaaaaaa\\r\\n', 'output': ['10']}, {'input': 'abaaba\\r\\n', 'output': ['5']}, {'input': 'aabsdfaaaa\\r\\n', 'output': ['10']}, {'input': 'aaaba\\r\\n', 'output': ['5']}, {'input': 'aaabaaa\\r\\n', 'output': ['6']}, {'input': 'baaabbb\\r\\n', 'output': ['7']}, {'input': 'ccbbabbcc\\r\\n', 'output': ['8']}, {'input': 'cabc\\r\\n', 'output': ['4']}, {'input': 'aabcd\\r\\n', 'output': ['5']}, {'input': 'abcdea\\r\\n', 'output': ['6']}, {'input': 'bbabb\\r\\n', 'output': ['4']}, {'input': 'aaaaabababaaaaa\\r\\n', 'output': ['14']}, {'input': 'bbabbb\\r\\n', 'output': ['6']}, {'input': 'aababd\\r\\n', 'output': ['6']}, {'input': 'abaaaa\\r\\n', 'output': ['6']}, {'input': 'aaaaaaaabbba\\r\\n', 'output': ['12']}, {'input': 'aabca\\r\\n', 'output': ['5']}, {'input': 'aaabccbaaa\\r\\n', 'output': ['9']}, {'input': 'aaaaaaaaaaaaaaaaaaaab\\r\\n', 'output': ['21']}, {'input': 'babb\\r\\n', 'output': ['4']}, {'input': 'abcaa\\r\\n', 'output': ['5']}, {'input': 'qwqq\\r\\n', 'output': ['4']}, {'input': 'aaaaaaaaaaabbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaaaa\\r\\n', 'output': ['48']}, {'input': 'aaab\\r\\n', 'output': ['4']}, {'input': 'aaaaaabaaaaa\\r\\n', 'output': ['12']}, {'input': 'wwuww\\r\\n', 'output': ['4']}, {'input': 'aaaaabcbaaaaa\\r\\n', 'output': ['12']}, {'input': 'aaabbbaaa\\r\\n', 'output': ['8']}, {'input': 'aabcbaa\\r\\n', 'output': ['6']}, {'input': 'abccdefccba\\r\\n', 'output': ['11']}, {'input': 'aabbcbbaa\\r\\n', 'output': ['8']}, {'input': 'aaaabbaaaa\\r\\n', 'output': ['9']}, {'input': 'aabcda\\r\\n', 'output': ['6']}, {'input': 'abbca\\r\\n', 'output': ['5']}, {'input': 'aaaaaabbaaa\\r\\n', 'output': ['11']}, {'input': 'sssssspssssss\\r\\n', 'output': ['12']}, {'input': 'sdnmsdcs\\r\\n', 'output': ['8']}, {'input': 'aaabbbccbbbaaa\\r\\n', 'output': ['13']}, {'input': 'cbdbdc\\r\\n', 'output': ['6']}, {'input': 'abb\\r\\n', 'output': ['3']}, {'input': 'abcdefaaaa\\r\\n', 'output': ['10']}, {'input': 'abbbaaa\\r\\n', 'output': ['7']}, {'input': 'v\\r\\n', 'output': ['0']}, {'input': 'abccbba\\r\\n', 'output': ['7']}, {'input': 'axyza\\r\\n', 'output': ['5']}, {'input': 'abcdefgaaaa\\r\\n', 'output': ['11']}, {'input': 'aaabcdaaa\\r\\n', 'output': ['9']}, {'input': 'aaaacaaaa\\r\\n', 'output': ['8']}, {'input': 'aaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaa\\r\\n', 'output': ['42']}, {'input': 'abbbaa\\r\\n', 'output': ['6']}, {'input': 'abcdee\\r\\n', 'output': ['6']}, {'input': 'oom\\r\\n', 'output': ['3']}, {'input': 'aabcaa\\r\\n', 'output': ['6']}, {'input': 'abba\\r\\n', 'output': ['3']}, {'input': 'aaca\\r\\n', 'output': ['4']}, {'input': 'aacbca\\r\\n', 'output': ['6']}, {'input': 'ababa\\r\\n', 'output': ['4']}, {'input': 'abcda\\r\\n', 'output': ['5']}, {'input': 'cccaaccc\\r\\n', 'output': ['7']}, {'input': 'aaabcda\\r\\n', 'output': ['7']}, {'input': 'aa\\r\\n', 'output': ['0']}, {'input': 'aabaaaa\\r\\n', 'output': ['7']}, {'input': 'abbaaaa\\r\\n', 'output': ['7']}, {'input': 'aaabcbaaa\\r\\n', 'output': ['8']}, {'input': 'aabba\\r\\n', 'output': ['5']}, {'input': 'xyxx\\r\\n', 'output': ['4']}, {'input': 'aaaaaaaaaaaabc\\r\\n', 'output': ['14']}, {'input': 'bbaaaabb\\r\\n', 'output': ['7']}, {'input': 'aaabaa\\r\\n', 'output': ['6']}, {'input': 'sssssabsssss\\r\\n', 'output': ['12']}, {'input': 'bbbaaaabbb\\r\\n', 'output': ['9']}, {'input': 'abbbbaaaa\\r\\n', 'output': ['9']}, {'input': 'wwufuww\\r\\n', 'output': ['6']}, {'input': 'oowoo\\r\\n', 'output': ['4']}, {'input': 'cccaccc\\r\\n', 'output': ['6']}, {'input': 'aaa\\r\\n', 'output': ['0']}, {'input': 'bbbcc\\r\\n', 'output': ['5']}, {'input': 'abcdef\\r\\n', 'output': ['6']}, {'input': 'abbba\\r\\n', 'output': ['4']}, {'input': 'aab\\r\\n', 'output': ['3']}, {'input': 'aaba\\r\\n', 'output': ['4']}, {'input': 'azbyaaa\\r\\n', 'output': ['7']}, {'input': 'oooooiooooo\\r\\n', 'output': ['10']}, {'input': 'aabbbbbaaaaaa\\r\\n', 'output': ['13']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString s = br.readLine();\n\t\tint n = s.length();\n\t\tint[][] dp = new int[n][n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tfor(int j = 0; j < n; j++) {\n\t\t\t\tif(i == j) {\n\t\t\t\t\tdp[i][j] = 1;\n\t\t\t\t}\n\t\t\t\telse if(i == j + 1) {\n\t\t\t\t\tif(s.charAt(i) == s.charAt(j)) {\n\t\t\t\t\t\tdp[i][j] = 2;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdp[i][j] = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(i + 1 == j) {\n\t\t\t\t\tif(s.charAt(i) == s.charAt(j)) {\n\t\t\t\t\t\tdp[i][j] = 2;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdp[i][j] = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(s.charAt(i) == s.charAt(j)) {\n\t\t\t\t\t\tdp[i][j] = Math.max(dp[i + 1][j - 1], 2);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdp[i][j] = Math.max(dp[i + 1][j], dp[i][j - 1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(dp[0][n - 1]);\n\t}\n}"}
{"src_uid": "1110d3671e9f77fd8d66dca6e74d2048", "id": 65, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1200, "testcases": "[{'input': '1 10 1 10 1\\r\\n', 'output': ['YES']}, {'input': '1 5 6 10 1\\r\\n', 'output': ['NO']}, {'input': '1 1 1 1 1\\r\\n', 'output': ['YES']}, {'input': '1 1 1 1 2\\r\\n', 'output': ['NO']}, {'input': '1 100000 1 100000 100000\\r\\n', 'output': ['YES']}, {'input': '1 100000 1 100000 100001\\r\\n', 'output': ['NO']}, {'input': '25 10000 200 10000 5\\r\\n', 'output': ['YES']}, {'input': '1 100000 10 100000 50000\\r\\n', 'output': ['NO']}, {'input': '91939 94921 10197 89487 1\\r\\n', 'output': ['NO']}, {'input': '30518 58228 74071 77671 1\\r\\n', 'output': ['NO']}, {'input': '46646 79126 78816 91164 5\\r\\n', 'output': ['NO']}, {'input': '30070 83417 92074 99337 2\\r\\n', 'output': ['NO']}, {'input': '13494 17544 96820 99660 6\\r\\n', 'output': ['NO']}, {'input': '96918 97018 10077 86510 9\\r\\n', 'output': ['YES']}, {'input': '13046 45594 14823 52475 1\\r\\n', 'output': ['YES']}, {'input': '29174 40572 95377 97669 4\\r\\n', 'output': ['NO']}, {'input': '79894 92433 8634 86398 4\\r\\n', 'output': ['YES']}, {'input': '96022 98362 13380 94100 6\\r\\n', 'output': ['YES']}, {'input': '79446 95675 93934 96272 3\\r\\n', 'output': ['NO']}, {'input': '5440 46549 61481 99500 10\\r\\n', 'output': ['NO']}, {'input': '21569 53580 74739 87749 3\\r\\n', 'output': ['NO']}, {'input': '72289 78297 79484 98991 7\\r\\n', 'output': ['NO']}, {'input': '88417 96645 92742 98450 5\\r\\n', 'output': ['NO']}, {'input': '71841 96625 73295 77648 8\\r\\n', 'output': ['NO']}, {'input': '87969 99230 78041 94736 4\\r\\n', 'output': ['NO']}, {'input': '4 4 1 2 3\\r\\n', 'output': ['NO']}, {'input': '150 150 1 2 100\\r\\n', 'output': ['NO']}, {'input': '99 100 1 100 50\\r\\n', 'output': ['YES']}, {'input': '7 7 3 6 2\\r\\n', 'output': ['NO']}, {'input': '10 10 1 10 1\\r\\n', 'output': ['YES']}, {'input': '36 36 5 7 6\\r\\n', 'output': ['YES']}, {'input': '73 96 1 51 51\\r\\n', 'output': ['NO']}, {'input': '3 3 1 3 2\\r\\n', 'output': ['NO']}, {'input': '10000000 10000000 1 100000 10000000\\r\\n', 'output': ['YES']}, {'input': '9222174 9829060 9418763 9955619 9092468\\r\\n', 'output': ['NO']}, {'input': '70 70 1 2 50\\r\\n', 'output': ['NO']}, {'input': '100 200 1 20 5\\r\\n', 'output': ['YES']}, {'input': '1 200000 65536 65536 65537\\r\\n', 'output': ['NO']}, {'input': '15 15 1 100 1\\r\\n', 'output': ['YES']}, {'input': '10000000 10000000 1 10000000 100000\\r\\n', 'output': ['YES']}, {'input': '10 10 2 5 4\\r\\n', 'output': ['NO']}, {'input': '67 69 7 7 9\\r\\n', 'output': ['NO']}, {'input': '100000 10000000 1 10000000 100000\\r\\n', 'output': ['YES']}, {'input': '9 12 1 2 7\\r\\n', 'output': ['NO']}, {'input': '5426234 6375745 2636512 8492816 4409404\\r\\n', 'output': ['NO']}, {'input': '6134912 6134912 10000000 10000000 999869\\r\\n', 'output': ['NO']}, {'input': '3 3 1 100 1\\r\\n', 'output': ['YES']}, {'input': '10000000 10000000 10 10000000 100000\\r\\n', 'output': ['YES']}, {'input': '4 4 1 100 2\\r\\n', 'output': ['YES']}, {'input': '8 13 1 4 7\\r\\n', 'output': ['NO']}, {'input': '10 10 100000 10000000 10000000\\r\\n', 'output': ['NO']}, {'input': '5 6 1 4 2\\r\\n', 'output': ['YES']}, {'input': '1002 1003 1 2 1000\\r\\n', 'output': ['NO']}, {'input': '4 5 1 2 2\\r\\n', 'output': ['YES']}, {'input': '5 6 1 5 1\\r\\n', 'output': ['YES']}, {'input': '15 21 2 4 7\\r\\n', 'output': ['YES']}, {'input': '4 5 3 7 1\\r\\n', 'output': ['YES']}, {'input': '15 15 3 4 4\\r\\n', 'output': ['NO']}, {'input': '3 6 1 2 2\\r\\n', 'output': ['YES']}, {'input': '2 10 3 6 3\\r\\n', 'output': ['YES']}, {'input': '1 10000000 1 10000000 100000\\r\\n', 'output': ['YES']}, {'input': '8 13 1 2 7\\r\\n', 'output': ['NO']}, {'input': '98112 98112 100000 100000 128850\\r\\n', 'output': ['NO']}, {'input': '2 2 1 2 1\\r\\n', 'output': ['YES']}, {'input': '8 8 3 4 2\\r\\n', 'output': ['YES']}, {'input': '60 60 2 3 25\\r\\n', 'output': ['NO']}, {'input': '16 17 2 5 5\\r\\n', 'output': ['NO']}, {'input': '2 4 1 3 1\\r\\n', 'output': ['YES']}, {'input': '4 5 1 2 3\\r\\n', 'output': ['NO']}, {'input': '10 10 3 4 3\\r\\n', 'output': ['NO']}, {'input': '10 10000000 999999 10000000 300\\r\\n', 'output': ['NO']}, {'input': '100 120 9 11 10\\r\\n', 'output': ['YES']}, {'input': '8 20 1 3 4\\r\\n', 'output': ['YES']}, {'input': '10 14 2 3 4\\r\\n', 'output': ['YES']}, {'input': '2000 2001 1 3 1000\\r\\n', 'output': ['YES']}, {'input': '12 13 2 3 5\\r\\n', 'output': ['NO']}, {'input': '7 7 2 3 3\\r\\n', 'output': ['NO']}, {'input': '5 8 1 10000000 4\\r\\n', 'output': ['YES']}, {'input': '5 5 1 1 4\\r\\n', 'output': ['NO']}, {'input': '5 5 1 6 2\\r\\n', 'output': ['NO']}, {'input': '200 300 4000381 4000382 4000381\\r\\n', 'output': ['NO']}, {'input': '11 17 2 5 2\\r\\n', 'output': ['NO']}, {'input': '9999999 10000000 1 10000000 999997\\r\\n', 'output': ['NO']}, {'input': '7 8 2 3 3\\r\\n', 'output': ['NO']}, {'input': '7 7 3 3 2\\r\\n', 'output': ['NO']}, {'input': '15 15 2 3 7\\r\\n', 'output': ['NO']}, {'input': '65408 65408 859 859 10000000\\r\\n', 'output': ['NO']}, {'input': '1000000 10000000 1 100000 1\\r\\n', 'output': ['NO']}, {'input': '6 12 2 3 2\\r\\n', 'output': ['YES']}, {'input': '7 8 1 3 3\\r\\n', 'output': ['NO']}, {'input': '4 4 1 2 2\\r\\n', 'output': ['YES']}, {'input': '2 3 1 2 2\\r\\n', 'output': ['YES']}, {'input': '11 14 2 3 5\\r\\n', 'output': ['NO']}, {'input': '7 7 1 10 3\\r\\n', 'output': ['NO']}, {'input': '49 50 1 2 27\\r\\n', 'output': ['NO']}, {'input': '1 10000000 1 10000000 123456\\r\\n', 'output': ['YES']}, {'input': '100000 10000000 100 10000000 100000\\r\\n', 'output': ['YES']}, {'input': '17 19 2 3 8\\r\\n', 'output': ['NO']}, {'input': '4 6 3 9 1\\r\\n', 'output': ['YES']}, {'input': '19 20 6 7 3\\r\\n', 'output': ['NO']}, {'input': '5000000 10000000 1 4999999 1\\r\\n', 'output': ['NO']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint l = Integer.parseInt(st.nextToken());\n\t\tint r = Integer.parseInt(st.nextToken());\n\t\tint x = Integer.parseInt(st.nextToken());\n\t\tint y = Integer.parseInt(st.nextToken());\n\t\tint k = Integer.parseInt(st.nextToken());\n\t\tint count = 0;\n\t\tfor(int i = l; i <= r; i++) {\n\t\t\tif(i * k <= y) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > 0) {\n\t\t\tSystem.out.println(\"YES\");\n\t\t} else {\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\t}\n}"}
{"src_uid": "bd5912fe2c5c37658f28f6b159b39645", "id": 66, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1000, "testcases": "[{'input': 'yandex\\r\\n6\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yahoo\\r\\n5\\r\\n', 'output': ['1\\r\\n']}, {'input': 'google\\r\\n7\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'a\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'z\\r\\n2\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'fwgfrwgkuwghfiruhewgirueguhergiqrbvgrgf\\r\\n26\\r\\n', 'output': ['14\\r\\n']}, {'input': 'nfevghreuoghrueighoqghbnebvnejbvnbgneluqe\\r\\n26\\r\\n', 'output': ['12\\r\\n']}, {'input': 'a\\r\\n3\\r\\n', 'output': ['impossible\\r\\n']}, {'input': 'smaxpqplaqqbxuqxalqmbmmgubbpspxhawbxsuqhhegpmmpebqmqpbbeplwaepxmsahuepuhuhwxeqmmlgqubuaxehwuwasgxpqmugbmuawuhwqlswllssueglbxepbmwgs\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'cuguccgcugcugucgggggcgcgucgucugcuuuccccuugccg\\r\\n4\\r\\n', 'output': ['1\\r\\n']}, {'input': 'fcfccfcfccfcfcffcffffffcfccfccfcffccccfcffffccfccfcffcfcccccffcfffcccffcfccfffffcccfccffffffccfccccf\\r\\n20\\r\\n', 'output': ['18\\r\\n']}, {'input': 'swmkwaruyv\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'tnbqpsuhkczmejirvyfdolxwga\\r\\n22\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n3\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abb\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aaaa\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yandex\\r\\n4\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aaabbbccc\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcd\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'asdfgh\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'aab\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'mynameissako\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcde\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcd\\r\\n3\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcdef\\r\\n2\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abcdefg\\r\\n4\\r\\n', 'output': ['0\\r\\n']}, {'input': 'abc\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': 'asdafjsgljdllgjdgkl\\r\\n5\\r\\n', 'output': ['0\\r\\n']}, {'input': 'yaay\\r\\n3\\r\\n', 'output': ['1\\r\\n']}, {'input': 'yaay\\r\\n4\\r\\n', 'output': ['2\\r\\n']}, {'input': 'zzzzzz\\r\\n2\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString s = br.readLine();\n\t\tint k = Integer.parseInt(br.readLine());\n\t\tint[] arr = new int[26];\n\t\tfor(int i = 0; i < s.length(); i++) {\n\t\t\tarr[s.charAt(i) - 'a']++;\n\t\t}\n\t\tint count = 0;\n\t\tfor(int i = 0; i < 26; i++) {\n\t\t\tif(arr[i] == 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > k) {\n\t\t\tSystem.out.println(\"impossible\");\n\t\t}\n\t\telse {\n\t\t\tint ans = k - count;\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n}"}
{"src_uid": "757cd804aba01dc4bc108cb0722f68dc", "id": 67, "lang_cluster": "java", "lang": "Java 11", "difficulty": 800, "testcases": "[{'input': '1\\r\\n', 'output': ['1']}, {'input': '2\\r\\n', 'output': ['2']}, {'input': '3\\r\\n', 'output': ['2 1', '2  1']}, {'input': '8\\r\\n', 'output': ['4']}, {'input': '100000\\r\\n', 'output': ['17  16  11  10  8  6', '17 16 11 10 8 6']}, {'input': '12345\\r\\n', 'output': ['14  13  6  5  4  1', '14 13 6 5 4 1']}, {'input': '32\\r\\n', 'output': ['6']}, {'input': '70958\\r\\n', 'output': ['17  13  11  9  6  4  3  2', '17 13 11 9 6 4 3 2']}, {'input': '97593\\r\\n', 'output': ['17 15 14 13 12 11 9 6 5 4 1', '17  15  14  13  12  11  9  6  5  4  1']}, {'input': '91706\\r\\n', 'output': ['17  15  14  11  10  6  5  4  2', '17 15 14 11 10 6 5 4 2']}, {'input': '85371\\r\\n', 'output': ['17 15 12 11 9 7 6 5 4 2 1', '17  15  12  11  9  7  6  5  4  2  1']}, {'input': '97205\\r\\n', 'output': ['17  15  14  13  12  10  9  8  6  5  3  1', '17 15 14 13 12 10 9 8 6 5 3 1']}, {'input': '34768\\r\\n', 'output': ['16  11  10  9  8  7  5', '16 11 10 9 8 7 5']}, {'input': '12705\\r\\n', 'output': ['14 13 9 8 6 1', '14  13  9  8  6  1']}, {'input': '30151\\r\\n', 'output': ['15 14 13 11 9 8 7 3 2 1', '15  14  13  11  9  8  7  3  2  1']}, {'input': '4974\\r\\n', 'output': ['13  10  9  7  6  4  3  2', '13 10 9 7 6 4 3 2']}, {'input': '32728\\r\\n', 'output': ['15  14  13  12  11  10  9  8  7  5  4', '15 14 13 12 11 10 9 8 7 5 4']}, {'input': '8192\\r\\n', 'output': ['14']}, {'input': '65536\\r\\n', 'output': ['17']}, {'input': '32\\r\\n', 'output': ['6']}, {'input': '256\\r\\n', 'output': ['9']}, {'input': '4096\\r\\n', 'output': ['13']}, {'input': '33301\\r\\n', 'output': ['16  10  5  3  1', '16 10 5 3 1']}, {'input': '16725\\r\\n', 'output': ['15 9 7 5 3 1', '15  9  7  5  3  1']}, {'input': '149\\r\\n', 'output': ['8 5 3 1', '8  5  3  1']}, {'input': '16277\\r\\n', 'output': ['14 13 12 11 10 9 8 5 3 1', '14  13  12  11  10  9  8  5  3  1']}, {'input': '99701\\r\\n', 'output': ['17 16 11 9 7 6 5 3 1', '17  16  11  9  7  6  5  3  1']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        int[] arr = new int[n];\n        int i = 0;\n        while (n > 0) {\n            if (n % 2 == 1) {\n                arr[i] = 1;\n                i++;\n            }\n            n /= 2;\n        }\n        for (int j = 0; j < i; j++) {\n            if (arr[j] == 0) {\n                System.out.print(j + 1);\n                System.out.print(\" \");\n            }\n        }\n    }\n}"}
{"src_uid": "54c748dd983b6a0ea1af1153d08f1c01", "id": 68, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1100, "testcases": "[{'input': '1\\r\\n.\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\nL\\r\\n', 'output': ['0\\r\\n']}, {'input': '1\\r\\nR\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\nL.\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\nRL\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n..\\r\\n', 'output': ['2\\r\\n']}, {'input': '6\\r\\n..L.RL\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\nLR\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n.R\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\nR.\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n.L\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\nRLR\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\nLRL\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n.L.R.\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n.R.L.\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\nRL.RL\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\nL.R\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\nR..\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n..RL.\\r\\n', 'output': ['3\\r\\n']}, {'input': '4\\r\\n.LR.\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\nL..\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tString s = br.readLine();\n\t\tint[] l = new int[n];\n\t\tint[] r = new int[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tif(s.charAt(i) == 'L') {\n\t\t\t\tl[i] = 1;\n\t\t\t}\n\t\t\tif(s.charAt(i) == 'R') {\n\t\t\t\tr[i] = 1;\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tif(s.charAt(i) == 'L') {\n\t\t\t\tfor(int j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif(s.charAt(j) == 'R') {\n\t\t\t\t\t\tr[j] = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(s.charAt(i) == 'R') {\n\t\t\t\tfor(int j = i + 1; j < n; j++) {\n\t\t\t\t\tif(s.charAt(j) == 'L') {\n\t\t\t\t\t\tl[j] = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint count = 0;\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tif(s.charAt(i) == '.') {\n\t\t\t\tif(l[i] == 0 && r[i] == 0) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}"}
{"src_uid": "bdd86c8bc54bbac6e2bb5a9d68b6eb1c", "id": 69, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1000, "testcases": "[{'input': '3\\r\\n3 1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n2 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n5 3 3 3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '5\\r\\n6 6 6 6 6\\r\\n', 'output': ['5\\r\\n']}, {'input': '10\\r\\n1 1 2 2 8 8 7 7 9 9\\r\\n', 'output': ['5\\r\\n']}, {'input': '8\\r\\n9 8 7 6 5 4 3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '15\\r\\n1 2 3 4 5 5 4 3 2 1 1 2 3 4 5\\r\\n', 'output': ['10\\r\\n']}, {'input': '1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '1\\r\\n5000\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n5000 5000 5000 5000\\r\\n', 'output': ['4\\r\\n']}, {'input': '5\\r\\n3366 3461 4 5 4370\\r\\n', 'output': ['3\\r\\n']}, {'input': '10\\r\\n8 2 10 3 4 6 1 7 9 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '10\\r\\n551 3192 3213 2846 3068 1224 3447 1 10 9\\r\\n', 'output': ['7\\r\\n']}, {'input': '15\\r\\n4 1459 12 4281 3241 2748 10 3590 14 845 3518 1721 2 2880 1974\\r\\n', 'output': ['10\\r\\n']}, {'input': '15\\r\\n15 1 8 2 13 11 12 7 3 14 6 10 9 4 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '15\\r\\n2436 2354 4259 1210 2037 2665 700 3578 2880 973 1317 1024 24 3621 4142\\r\\n', 'output': ['15\\r\\n']}, {'input': '30\\r\\n28 1 3449 9 3242 4735 26 3472 15 21 2698 7 4073 3190 10 3 29 1301 4526 22 345 3876 19 12 4562 2535 2 630 18 27\\r\\n', 'output': ['14\\r\\n']}, {'input': '100\\r\\n50 39 95 30 66 78 2169 4326 81 31 74 34 80 40 19 48 97 63 82 6 88 16 21 57 92 77 10 1213 17 93 32 91 38 4375 29 75 44 22 4 45 14 2395 3254 59 3379 2 85 96 8 83 27 94 1512 2960 100 9 73 79 7 25 55 69 90 99 51 87 98 62 18 35 43 4376 4668 28 72 56 4070 61 65 36 54 4106 11 24 15 86 70 71 4087 23 13 76 20 4694 26 4962 4726 37 14 64\\r\\n', 'output': ['18\\r\\n']}, {'input': '100\\r\\n340 14 3275 2283 2673 1107 817 2243 1226 32 2382 3638 4652 418 68 4962 387 764 4647 159 1846 225 2760 4904 3150 403 3 2439 91 4428 92 4705 75 348 1566 1465 69 6 49 4 62 4643 564 1090 3447 1871 2255 139 24 99 2669 969 86 61 4550 158 4537 3993 1589 872 2907 1888 401 80 1825 1483 63 1 2264 4068 4113 2548 41 885 4806 36 67 167 4447 34 1248 2593 82 202 81 1783 1284 4973 16 43 95 7 865 2091 3008 1793 20 947 4912 3604\\r\\n', 'output': ['70\\r\\n']}, {'input': '1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n5000 5000\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n1 2 3 4 5 6 7 1000 10 10\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tint[] a = new int[n];\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint[] cnt = new int[5001];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = Integer.parseInt(st.nextToken());\n\t\t\tcnt[a[i]]++;\n\t\t}\n\t\tint ans = 0;\n\t\tfor (int i = 1; i <= 5000; i++) {\n\t\t\tif (cnt[i] == 0) {\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n\n}\n"}
{"src_uid": "46bfdec9bfc1e91bd2f5022f3d3c8ce7", "id": 70, "lang_cluster": "java", "lang": "Java 11", "difficulty": 800, "testcases": "[{'input': '1\\r\\n2\\r\\n3\\r\\n4\\r\\n12\\r\\n', 'output': ['12']}, {'input': '2\\r\\n3\\r\\n4\\r\\n5\\r\\n24\\r\\n', 'output': ['17']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n100000\\r\\n', 'output': ['100000']}, {'input': '10\\r\\n9\\r\\n8\\r\\n7\\r\\n6\\r\\n', 'output': ['0']}, {'input': '8\\r\\n4\\r\\n4\\r\\n3\\r\\n65437\\r\\n', 'output': ['32718']}, {'input': '8\\r\\n4\\r\\n1\\r\\n10\\r\\n59392\\r\\n', 'output': ['59392']}, {'input': '4\\r\\n1\\r\\n8\\r\\n7\\r\\n44835\\r\\n', 'output': ['44835']}, {'input': '6\\r\\n1\\r\\n7\\r\\n2\\r\\n62982\\r\\n', 'output': ['62982']}, {'input': '2\\r\\n7\\r\\n4\\r\\n9\\r\\n56937\\r\\n', 'output': ['35246']}, {'input': '2\\r\\n9\\r\\n8\\r\\n1\\r\\n75083\\r\\n', 'output': ['75083']}, {'input': '8\\r\\n7\\r\\n7\\r\\n6\\r\\n69038\\r\\n', 'output': ['24656']}, {'input': '4\\r\\n4\\r\\n2\\r\\n3\\r\\n54481\\r\\n', 'output': ['36320']}, {'input': '6\\r\\n4\\r\\n9\\r\\n8\\r\\n72628\\r\\n', 'output': ['28244']}, {'input': '9\\r\\n7\\r\\n8\\r\\n10\\r\\n42357\\r\\n', 'output': ['16540']}, {'input': '5\\r\\n6\\r\\n4\\r\\n3\\r\\n60504\\r\\n', 'output': ['36302']}, {'input': '7\\r\\n2\\r\\n3\\r\\n8\\r\\n21754\\r\\n', 'output': ['15539']}, {'input': '1\\r\\n2\\r\\n10\\r\\n4\\r\\n39901\\r\\n', 'output': ['39901']}, {'input': '3\\r\\n4\\r\\n7\\r\\n1\\r\\n58048\\r\\n', 'output': ['58048']}, {'input': '9\\r\\n10\\r\\n4\\r\\n6\\r\\n52003\\r\\n', 'output': ['21956']}, {'input': '5\\r\\n10\\r\\n9\\r\\n3\\r\\n70149\\r\\n', 'output': ['32736']}, {'input': '5\\r\\n5\\r\\n5\\r\\n10\\r\\n55592\\r\\n', 'output': ['11118']}, {'input': '1\\r\\n5\\r\\n2\\r\\n6\\r\\n49547\\r\\n', 'output': ['49547']}, {'input': '3\\r\\n7\\r\\n7\\r\\n7\\r\\n84046\\r\\n', 'output': ['36019']}, {'input': '10\\r\\n2\\r\\n1\\r\\n8\\r\\n63537\\r\\n', 'output': ['63537']}, {'input': '7\\r\\n2\\r\\n10\\r\\n5\\r\\n81684\\r\\n', 'output': ['53678']}, {'input': '7\\r\\n1\\r\\n6\\r\\n8\\r\\n99831\\r\\n', 'output': ['99831']}, {'input': '3\\r\\n9\\r\\n3\\r\\n3\\r\\n61082\\r\\n', 'output': ['20360']}, {'input': '5\\r\\n5\\r\\n8\\r\\n9\\r\\n79228\\r\\n', 'output': ['29931']}, {'input': '1\\r\\n5\\r\\n5\\r\\n6\\r\\n89535\\r\\n', 'output': ['89535']}, {'input': '5\\r\\n5\\r\\n2\\r\\n1\\r\\n7682\\r\\n', 'output': ['7682']}, {'input': '7\\r\\n4\\r\\n8\\r\\n8\\r\\n25829\\r\\n', 'output': ['9224']}, {'input': '3\\r\\n4\\r\\n3\\r\\n3\\r\\n87079\\r\\n', 'output': ['43539']}, {'input': '5\\r\\n8\\r\\n4\\r\\n9\\r\\n5226\\r\\n', 'output': ['2438']}, {'input': '4\\r\\n9\\r\\n6\\r\\n6\\r\\n1070\\r\\n', 'output': ['415']}, {'input': '10\\r\\n10\\r\\n10\\r\\n10\\r\\n100000\\r\\n', 'output': ['10000']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'output': ['1']}, {'input': '10\\r\\n10\\r\\n10\\r\\n10\\r\\n1\\r\\n', 'output': ['0']}, {'input': '10\\r\\n10\\r\\n1\\r\\n10\\r\\n10\\r\\n', 'output': ['10']}, {'input': '10\\r\\n10\\r\\n1\\r\\n10\\r\\n100\\r\\n', 'output': ['100']}, {'input': '2\\r\\n2\\r\\n2\\r\\n2\\r\\n1\\r\\n', 'output': ['0']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint k = Integer.parseInt(st.nextToken());\n\t\tint l = Integer.parseInt(st.nextToken());\n\t\tint m = Integer.parseInt(st.nextToken());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint d = Integer.parseInt(st.nextToken());\n\t\tint count = 0;\n\t\tfor(int i = 1; i <= d; i++) {\n\t\t\tif(i % k == 0 || i % l == 0 || i % m == 0 || i % n == 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n"}
{"src_uid": "a37df9b239a40473516d1525d56a0da7", "id": 71, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1400, "testcases": "[{'input': '2 3\\r\\nAAB\\r\\nBAA\\r\\n', 'output': ['4\\r\\n']}, {'input': '4 5\\r\\nABABA\\r\\nBCGDG\\r\\nAAAAA\\r\\nYABSA\\r\\n', 'output': ['216\\r\\n']}, {'input': '1 1\\r\\nE\\r\\n', 'output': ['1\\r\\n']}, {'input': '2 2\\r\\nNS\\r\\nPD\\r\\n', 'output': ['4\\r\\n']}, {'input': '3 4\\r\\nPJKD\\r\\nNFJX\\r\\nFGFK\\r\\n', 'output': ['81\\r\\n']}, {'input': '4 5\\r\\nSXFMY\\r\\nATHLM\\r\\nKDDQW\\r\\nZWGDS\\r\\n', 'output': ['1024\\r\\n']}, {'input': '20 14\\r\\nJNFKBBBJYZHWQE\\r\\nLBOKZCPFNKDBJY\\r\\nXKNWGHQHIOXUPF\\r\\nDDNRUKVUGHWMXW\\r\\nMTIZFNAAFEAPHX\\r\\nIXBQOOHEULZYHU\\r\\nMRCSREUEOOMUUN\\r\\nHJTSQWKUFYZDQU\\r\\nGMCMUZCOPRVEIQ\\r\\nXBKKGGJECOBLTH\\r\\nXXHTLXCNJZJUAF\\r\\nVLJRKXXXWMTPKZ\\r\\nPTYMNPTBBCWKAD\\r\\nQYJGOBUBHMEDYE\\r\\nGTKUUVVNKAHTUI\\r\\nZNKXYZPCYLBZFP\\r\\nQCBLJTRMBDWNNE\\r\\nTDOKJOBKEOVNLZ\\r\\nFKZUITYAFJOQIM\\r\\nUWQNSGLXEEIRWF\\r\\n', 'output': ['515139391\\r\\n']}, {'input': '5 14\\r\\nAQRXUQQNSKZPGC\\r\\nDTTKSPFGGVCLPT\\r\\nVLZQWWESCHDTAZ\\r\\nCOKOWDWDRUOMHP\\r\\nXDTRBIZTTCIDGS\\r\\n', 'output': ['124999979\\r\\n']}, {'input': '9 23\\r\\nOILBYKHRGMPENVFNHLSIUOW\\r\\nLPJFHTUQUINAALRDGLSQUXR\\r\\nLYYJJEBNZATAFQWTDZSPUNZ\\r\\nHSJPIQKKWWERJZIEMLCZUKI\\r\\nOJYIEYDGPFWRHCMISJCCUEM\\r\\nLMGKZVFYIVDRTIHBWPCNUTG\\r\\nUBGGNCITVHAIPKXCLTSAULQ\\r\\nOWSAWUOXQDBSXXBHTLSXUVD\\r\\nUGQTIZQPBGMASRQPVPSFUWK\\r\\n', 'output': ['454717784\\r\\n']}, {'input': '25 4\\r\\nLVKG\\r\\nMICU\\r\\nZHKW\\r\\nLFGG\\r\\nOWQO\\r\\nLCQG\\r\\nLVXU\\r\\nOUKB\\r\\nLNQX\\r\\nZJTO\\r\\nOOQX\\r\\nLVQP\\r\\nMFQB\\r\\nMRQV\\r\\nOIQH\\r\\nOPXX\\r\\nXFKU\\r\\nFCQB\\r\\nZPKH\\r\\nLVCH\\r\\nNFCU\\r\\nOVQW\\r\\nOZKU\\r\\nLFHX\\r\\nLPXO\\r\\n', 'output': ['5733\\r\\n']}, {'input': '30 10\\r\\nUTNTGOKZYJ\\r\\nQHOUHNYZVW\\r\\nLTVGHJRZVW\\r\\nMZHYHOLZYJ\\r\\nERYEUEPZYE\\r\\nUZDBFTURYJ\\r\\nRVSMQTIZGW\\r\\nWDJQHMIRYY\\r\\nKCORHQPZYE\\r\\nRRPLFOZZVY\\r\\nJTXMFNNNYJ\\r\\nMVTGGOZZVV\\r\\nEHAFFNUZVF\\r\\nLBRNWJZNYE\\r\\nJVMOHTPZYJ\\r\\nWTARFJLZVV\\r\\nLVJCWOURVW\\r\\nLCLQFJYRVV\\r\\nQVBVGNJRYF\\r\\nNTZGHOLRYE\\r\\nMGQKHOUPYJ\\r\\nRRSSBXPZYJ\\r\\nRYCRGTLZYJ\\r\\nJRDEGNKRVW\\r\\nRZKFGHYRVG\\r\\nMDJBFNIZYG\\r\\nMPLWHXIZYE\\r\\nSRZMHMURVE\\r\\nMTEBBMRZYJ\\r\\nJPJIFOLZYM\\r\\n', 'output': ['919913906\\r\\n']}, {'input': '40 7\\r\\nPNTVVER\\r\\nPAHTQDR\\r\\nRXMJVAS\\r\\nVIQNLYC\\r\\nILPUSVX\\r\\nYJOXQDJ\\r\\nSEFODTO\\r\\nOTJMREL\\r\\nLIQRZGD\\r\\nLBJJPOR\\r\\nRUTYHQO\\r\\nRIWEPBD\\r\\nKQUMFIB\\r\\nISTRRYH\\r\\nXBTOTGK\\r\\nRFQODEY\\r\\nHDSTZTP\\r\\nYCXFAGL\\r\\nAREGRFU\\r\\nLELZUYU\\r\\nGVABDKH\\r\\nFJAMMME\\r\\nACVULXE\\r\\nJHVPJAS\\r\\nAAQNMBX\\r\\nJJGUCXG\\r\\nOQATILQ\\r\\nNEOSHJM\\r\\nHFLWOFM\\r\\nICYEQHY\\r\\nFACGLYP\\r\\nPLLXJEQ\\r\\nDCHXYPB\\r\\nAGDDZJJ\\r\\nLSQRXTN\\r\\nHDQZXIY\\r\\nNAHDDWW\\r\\nQCMXRQN\\r\\nFDUDSZO\\r\\nHKBEVTW\\r\\n', 'output': ['206575993\\r\\n']}, {'input': '2 2\\r\\nAA\\r\\nBB\\r\\n', 'output': ['4\\r\\n']}, {'input': '1 10\\r\\nAAAAAAAAAA\\r\\n', 'output': ['1\\r\\n']}, {'input': '2 8\\r\\nAAAAAAAA\\r\\nBBBBBBBB\\r\\n', 'output': ['256\\r\\n']}, {'input': '10 10\\r\\nAAAAAAAAAA\\r\\nBBBBBBBBBB\\r\\nCCCCCCCCCC\\r\\nDDDDDDDDDD\\r\\nAAAAAAAAAA\\r\\nBBBBBBBBBB\\r\\nCCCCCCCCCC\\r\\nDDDDDDDDDD\\r\\nAAAAAAAAAA\\r\\nBBBBBBBBBB\\r\\n', 'output': ['1048576\\r\\n']}, {'input': '1 20\\r\\nAAAAAAAAAAAAAAAAAAAA\\r\\n', 'output': ['1\\r\\n']}, {'input': '20 1\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\n', 'output': ['7\\r\\n']}, {'input': '5 60\\r\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\r\\nBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\\r\\nCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\\r\\nDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\\r\\nEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\\r\\n', 'output': ['449874206\\r\\n']}, {'input': '50 4\\r\\nAAAA\\r\\nBBBB\\r\\nCCCC\\r\\nDDDD\\r\\nEEEE\\r\\nFFFF\\r\\nGGGG\\r\\nHHHH\\r\\nIIII\\r\\nJJJJ\\r\\nAAAA\\r\\nBBBB\\r\\nCCCC\\r\\nDDDD\\r\\nEEEE\\r\\nFFFF\\r\\nGGGG\\r\\nHHHH\\r\\nIIII\\r\\nJJJJ\\r\\nAAAA\\r\\nBBBB\\r\\nCCCC\\r\\nDDDD\\r\\nEEEE\\r\\nFFFF\\r\\nGGGG\\r\\nHHHH\\r\\nIIII\\r\\nJJJJ\\r\\nAAAA\\r\\nBBBB\\r\\nCCCC\\r\\nDDDD\\r\\nEEEE\\r\\nFFFF\\r\\nGGGG\\r\\nHHHH\\r\\nIIII\\r\\nJJJJ\\r\\nAAAA\\r\\nBBBB\\r\\nCCCC\\r\\nDDDD\\r\\nEEEE\\r\\nFFFF\\r\\nGGGG\\r\\nHHHH\\r\\nIIII\\r\\nJJJJ\\r\\n', 'output': ['10000\\r\\n']}, {'input': '1 100\\r\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\r\\n', 'output': ['1\\r\\n']}, {'input': '100 1\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\n', 'output': ['1\\r\\n']}, {'input': '100 1\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\n', 'output': ['2\\r\\n']}, {'input': '100 1\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nA\\r\\nB\\r\\n', 'output': ['14\\r\\n']}, {'input': '100 1\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nO\\r\\nP\\r\\nQ\\r\\nR\\r\\nS\\r\\nT\\r\\nU\\r\\nV\\r\\nW\\r\\nX\\r\\nY\\r\\nZ\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nO\\r\\nP\\r\\nQ\\r\\nR\\r\\nS\\r\\nT\\r\\nU\\r\\nV\\r\\nW\\r\\nX\\r\\nY\\r\\nZ\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nO\\r\\nP\\r\\nQ\\r\\nR\\r\\nS\\r\\nT\\r\\nU\\r\\nV\\r\\nW\\r\\nX\\r\\nY\\r\\nZ\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nO\\r\\nP\\r\\nQ\\r\\nR\\r\\nS\\r\\nT\\r\\nU\\r\\nV\\r\\n', 'output': ['26\\r\\n']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class C {\n\n\tstatic int n, m;\n\tstatic char[][] s;\n\tstatic int[][][] dp;\n\tstatic final int MOD = 1000000007;\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tn = Integer.parseInt(st.nextToken());\n\t\tm = Integer.parseInt(st.nextToken());\n\t\ts = new char[n][m];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ts[i] = br.readLine().toCharArray();\n\t\t}\n\t\tdp = new int[n][m][m];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tArrays.fill(dp[i][j], -1);\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(solve(0, 0, 0));\n\t}\n\n\tstatic int solve(int i, int j, int k) {\n\t\tif (i == n) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (dp[i][j][k]!= -1) {\n\t\t\treturn dp[i][j][k];\n\t\t}\n\t\tint res = 0;\n\t\tfor (int l = 0; l < m; l++) {\n\t\t\tif (s[i][l] == s[0][k]) {\n\t\t\t\tres = (res + solve(i + 1, j, l)) % MOD;\n\t\t\t} else {\n\t\t\t\tres = (res + solve(i + 1, j + 1, l)) % MOD;\n\t\t\t}\n\t\t}\n\t\treturn dp[i][j][k] = res;\n\t}\n\n}\n"}
{"src_uid": "6aa83c2f6e095848bc63aba7d013aa58", "id": 72, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1200, "testcases": "[{'input': ['C E G\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['C# B F\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['A B H\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['G H E\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['D# B G\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['D# B F#\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['F H E\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['B F# G\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['F# H C\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['C# F C\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['G# C# E\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['D# H G#\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['C F A\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['H E G#\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['G D# B\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['E C G\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['G# C# F\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['D# C G#\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['C# F B\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['D# C G\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['A D F\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['F# H D\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['D A F\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['D A F#\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['C# B F\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['A C F\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['D F# H\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['H G# D#\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['A D F#\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['H E G#\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['D# B F#\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['D# H F#\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['A D F#\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['B G D#\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['E A C#\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['D H G\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['H D F#\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['G D# C\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['H D G\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['E C G\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['D# A E\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['A F E\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['C E F\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['A B C\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['E F D#\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['C G# G#\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['F D# G#\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['B G D#\\r\\n'], 'output': ['major\\r\\n']}, {'input': ['E E G#\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['A G H\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['F E A\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['D B E\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['G# C# D\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['D# D# F#\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['H B G\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['D C B\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['D B B\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['C A H\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['F# H F#\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['A F F#\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['C D C\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['G F# A\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['C C# D\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['C A E\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['A H B\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['B E F#\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['G# G# A\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['B C# C#\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['C G D#\\r\\n'], 'output': ['minor\\r\\n']}, {'input': ['C B D#\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['F H F\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['E G# C\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['F# F# F#\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['F C F\\r\\n'], 'output': ['strange\\r\\n']}, {'input': ['A F D\\r\\n'], 'output': ['minor\\r\\n']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tString[] notes = new String[3];\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tnotes[i] = st.nextToken();\n\t\t}\n\t\tint[] notesValues = new int[3];\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tnotesValues[i] = getNoteValue(notes[i]);\n\t\t}\n\t\tint[] distances = new int[3];\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tdistances[i] = Math.abs(notesValues[i] - notesValues[(i + 1) % 3]);\n\t\t}\n\t\tif (distances[0] == 3 && distances[1] == 4 && distances[2] == 7) {\n\t\t\tSystem.out.println(\"major\");\n\t\t} else if (distances[0] == 4 && distances[1] == 3 && distances[2] == 7) {\n\t\t\tSystem.out.println(\"minor\");\n\t\t} else {\n\t\t\tSystem.out.println(\"strange\");\n\t\t}\n\t}\n\n\tprivate static int getNoteValue(String note) {\n\t\tif (note.equals(\"C\")) {\n\t\t\treturn 0;\n\t\t} else if (note.equals(\"C#\")) {\n\t\t\treturn 1;\n\t\t} else if (note.equals(\"D\")) {\n\t\t\treturn 2;\n\t\t} else if (note.equals(\"D#\")) {\n\t\t\treturn 3;\n\t\t} else if (note.equals(\"E\")) {\n\t\t\treturn 4;\n\t\t} else if (note.equals(\"F\")) {\n\t\t\treturn 5;\n\t\t} else if (note.equals(\"F#\")) {\n\t\t\treturn 6;\n\t\t} else if (note.equals(\"G\")) {\n\t\t\treturn 7;\n\t\t} else if (note.equals(\"G#\")) {\n\t\t\treturn 8;\n\t\t} else if (note.equals(\"A\")) {\n\t\t\treturn 9;\n\t\t} else if (note.equals(\"B\")) {\n\t\t\treturn 10;\n\t\t} else if (note.equals(\"H\")) {\n\t\t\treturn 11;\n\t\t}\n\t\treturn -1;\n\t}\n}"}
{"src_uid": "33b73fd9e7f19894ea08e98b790d07f1", "id": 73, "lang_cluster": "java", "lang": "Java 11", "difficulty": 800, "testcases": "[{'input': '40047\\r\\n', 'output': ['NO']}, {'input': '7747774\\r\\n', 'output': ['YES']}, {'input': '1000000000000000000\\r\\n', 'output': ['NO']}, {'input': '7\\r\\n', 'output': ['NO']}, {'input': '4\\r\\n', 'output': ['NO']}, {'input': '474404774\\r\\n', 'output': ['NO']}, {'input': '4744000695826\\r\\n', 'output': ['YES']}, {'input': '10000000004744744\\r\\n', 'output': ['YES']}, {'input': '446486416781684178\\r\\n', 'output': ['YES']}, {'input': '999999999\\r\\n', 'output': ['NO']}, {'input': '7777\\r\\n', 'output': ['YES']}, {'input': '87414417444\\r\\n', 'output': ['NO']}, {'input': '111222333444555667\\r\\n', 'output': ['YES']}, {'input': '1\\r\\n', 'output': ['NO']}, {'input': '4700\\r\\n', 'output': ['NO']}, {'input': '3794555488744477\\r\\n', 'output': ['NO']}, {'input': '444444444444444444\\r\\n', 'output': ['NO']}, {'input': '474447447774444774\\r\\n', 'output': ['NO']}, {'input': '777777777777777\\r\\n', 'output': ['NO']}, {'input': '34777745021000000\\r\\n', 'output': ['NO']}, {'input': '963\\r\\n', 'output': ['NO']}, {'input': '855474448854788540\\r\\n', 'output': ['NO']}, {'input': '999999999999994744\\r\\n', 'output': ['YES']}, {'input': '400000000474\\r\\n', 'output': ['YES']}, {'input': '123456789123456789\\r\\n', 'output': ['YES']}, {'input': '740577777584945874\\r\\n', 'output': ['NO']}, {'input': '7777777\\r\\n', 'output': ['YES']}, {'input': '4444000111222333\\r\\n', 'output': ['YES']}, {'input': '9847745885202111\\r\\n', 'output': ['YES']}, {'input': '123456000000\\r\\n', 'output': ['NO']}, {'input': '4744447444444\\r\\n', 'output': ['NO']}, {'input': '7477\\r\\n', 'output': ['YES']}, {'input': '4747477\\r\\n', 'output': ['YES']}, {'input': '777777777444444444\\r\\n', 'output': ['NO']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tString s = st.nextToken();\n\t\tint count = 0;\n\t\tfor(int i = 0; i < s.length(); i++) {\n\t\t\tif(s.charAt(i) == '4' || s.charAt(i) == '7') {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count == 0) {\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\t\telse if(count == 1) {\n\t\t\tif(s.charAt(0) == '4' || s.charAt(0) == '7') {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t\telse if(count == 2) {\n\t\t\tif(s.charAt(0) == '4' && s.charAt(s.length() - 1) == '4' || s.charAt(0) == '7' && s.charAt(s.length() - 1) == '7') {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t\telse if(count == 3) {\n\t\t\tif(s.charAt(0) == '4' && s.charAt(1) == '4' && s.charAt(s.length() - 1) == '4' || s.charAt(0) == '7' && s.charAt(1) == '7' && s.charAt(s.length() - 1) == '7') {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t\telse if(count == 4) {\n\t\t\tif(s.charAt(0) == '4' && s.charAt(1) == '4' && s.charAt(2) == '4' && s.charAt(s.length() - 1) == '4' || s.charAt(0) == '7' && s.charAt(1) == '7' && s.charAt(2) == '7' && s.charAt(s.length() - 1) == '7') {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t\telse if(count == 5) {\n\t\t\tif(s.charAt(0) == '4' && s.charAt(1) == '4' && s.charAt(2) == '4' && s.charAt(3) == '4' && s.charAt(s.length() - 1) == '4' || s.charAt(0) == '7' && s.charAt(1) == '7' && s.charAt(2) == '7' && s.charAt(3) == '7' && s.charAt(s.length() - 1) == '7') {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t\telse if(count == 6) {\n\t\t\tif(s.charAt(0) == '4' && s.charAt(1) == '4' && s.charAt(2) == '4' && s.charAt(3) == '4' && s.charAt(4) == '4' && s.charAt(s.length() - 1) == '4' || s.charAt(0) == '7' && s.charAt(1) == '7' && s.charAt(2) == '7' && s.charAt(3) == '7' && s.charAt(4) == '7' && s.charAt(s.length() - 1) == '7') {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t\telse if(count == 7) {\n\t\t\tif(s.charAt(0) == '4' && s.charAt(1) == '4' && s.charAt(2) == '4' && s.charAt(3) == '4' && s.charAt(4) == '4' && s.charAt(5) == '4' && s.charAt(s.length() - 1) == '4' || s.charAt(0) == '7' && s.charAt(1) == '7' && s.charAt(2) == '7' && s.charAt(3) == '7' && s.charAt(4) == '7' && s.charAt(5) == '7' && s.charAt(s.length() - 1) == '7') {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t\telse if(count == 8) {\n\t\t\tif(s.charAt(0) == '4' && s.charAt(1) == '4' && s.charAt(2) == '4' && s.charAt(3) == '4' && s.charAt(4) == '4' && s.charAt(5) == '4' && s.charAt(6) == '4' && s.charAt(s.length() - 1) == '4' || s.charAt(0) == '7' && s.charAt(1) == '7' && s.charAt(2) == '7' && s.charAt(3) == '7' && s.charAt(4) == '7' && s.charAt(5) == '7' && s.charAt(6) == '7' && s.charAt(s.length() - 1) == '7') {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t\telse if(count == 9) {\n\t\t\tif(s.charAt(0) == '4' && s.charAt(1) == '4' && s.charAt(2) == '4' && s.charAt(3) == '4' && s.charAt(4) == '4' && s.charAt(5) == '4' && s.charAt(6) == '4' && s.charAt(7) == '4' && s.charAt(s.length() - 1) == '4' || s.charAt(0) == '7' && s.charAt(1) == '7' && s.charAt(2) == '7' && s.charAt(3) == '7' && s.charAt(4) == '7' && s.charAt(5) == '7' && s.charAt(6) == '7' && s.charAt(7) == '7' && s.charAt(s.length() - 1) == '7') {\n\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\t}\n}\n"}
{"src_uid": "639b8b8d0dc42df46b139f0aeb3a7a0a", "id": 74, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1000, "testcases": "[{'input': '047\\r\\n', 'output': ['4']}, {'input': '16\\r\\n', 'output': ['-1']}, {'input': '472747\\r\\n', 'output': ['7']}, {'input': '1925\\r\\n', 'output': ['-1']}, {'input': '5486846414848445484\\r\\n', 'output': ['4']}, {'input': '516160414\\r\\n', 'output': ['4']}, {'input': '9458569865994896\\r\\n', 'output': ['4']}, {'input': '94894948577777777884888\\r\\n', 'output': ['7']}, {'input': '00000\\r\\n', 'output': ['-1']}, {'input': '9589\\r\\n', 'output': ['-1']}, {'input': '7665711\\r\\n', 'output': ['7']}, {'input': '538772857\\r\\n', 'output': ['7']}, {'input': '8679647744\\r\\n', 'output': ['4']}, {'input': '23607019991994\\r\\n', 'output': ['4']}, {'input': '86145305734278927901987281894864719533015270066521\\r\\n', 'output': ['7']}, {'input': '22438808523154336905543301642540261833729318191\\r\\n', 'output': ['4']}, {'input': '290732082244359495795943967215788554387079\\r\\n', 'output': ['7']}, {'input': '6363333480463521971676988087733137609715\\r\\n', 'output': ['7']}, {'input': '637789221789855555993957058\\r\\n', 'output': ['7']}, {'input': '11536708648794535307468278326553811\\r\\n', 'output': ['7']}, {'input': '619433861636130069773\\r\\n', 'output': ['7']}, {'input': '7\\r\\n', 'output': ['7']}, {'input': '00000000000000000000000000000000000000000000000000\\r\\n', 'output': ['-1']}, {'input': '0000000000000000000000000000000000000047\\r\\n', 'output': ['4']}, {'input': '8175012266795100056032281135654854227489558885698\\r\\n', 'output': ['4']}, {'input': '8862708665262955384044574268728167940741129\\r\\n', 'output': ['4']}, {'input': '538772857\\r\\n', 'output': ['7']}, {'input': '94872076199824813574576121510803\\r\\n', 'output': ['7']}, {'input': '44101164480392494025995467\\r\\n', 'output': ['4']}, {'input': '0445460407410702955646485\\r\\n', 'output': ['4']}, {'input': '91076008557028243309\\r\\n', 'output': ['7']}, {'input': '33120039\\r\\n', 'output': ['-1']}, {'input': '4\\r\\n', 'output': ['4']}, {'input': '74747474747474747474747474747474747474747474747474\\r\\n', 'output': ['4']}, {'input': '74747474747474747474747774747474747474747474747474\\r\\n', 'output': ['7']}, {'input': '74747474747474747474747474747474744474747474747474\\r\\n', 'output': ['4']}, {'input': '47474747474747474747474747474747474747474747474747\\r\\n', 'output': ['4']}, {'input': '40\\r\\n', 'output': ['4']}, {'input': '07\\r\\n', 'output': ['7']}, {'input': '007\\r\\n', 'output': ['7']}, {'input': '44\\r\\n', 'output': ['4']}, {'input': '74\\r\\n', 'output': ['4']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.util.Set;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\nimport java.util.TreeSet;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tString s = st.nextToken();\n\t\tint n = s.length();\n\t\tint[][] dp = new int[n][n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tfor(int j = 0; j < n; j++) {\n\t\t\t\tif(i == j) {\n\t\t\t\t\tdp[i][j] = 1;\n\t\t\t\t}\n\t\t\t\telse if(i == j - 1) {\n\t\t\t\t\tif(s.charAt(i) == '4' || s.charAt(i) == '7') {\n\t\t\t\t\t\tdp[i][j] = 1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdp[i][j] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(s.charAt(i) == '4' || s.charAt(i) == '7') {\n\t\t\t\t\t\tdp[i][j] = dp[i + 1][j] + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdp[i][j] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint max = 0;\n\t\tint maxIndex = -1;\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tfor(int j = i; j < n; j++) {\n\t\t\t\tif(dp[i][j] > max) {\n\t\t\t\t\tmax = dp[i][j];\n\t\t\t\t\tmaxIndex = j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(max == 0) {\n\t\t\tSystem.out.println(-1);\n\t\t}\n\t\telse {\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tfor(int i = maxIndex; i >= 0; i--) {\n\t\t\t\tif(s.charAt(i) == '4' || s.charAt(i) == '7') {\n\t\t\t\t\tsb.append(s.charAt(i));\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(sb.toString());\n\t\t}\n\t}\n}\n"}
{"src_uid": "65fea461d3caa5a932d1e2c13e99a59e", "id": 75, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1100, "testcases": "[{'input': '5 50\\r\\n1 2 3 4 5\\r\\n', 'output': ['12.000000\\r\\n11.000000\\r\\n10.000000\\r\\n9.000000\\r\\n8.000000\\r\\n']}, {'input': '2 2\\r\\n1 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 2\\r\\n1 1\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n']}, {'input': '3 2\\r\\n1 2 1\\r\\n', 'output': ['1.000000\\r\\n0.000000\\r\\n1.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 1\\r\\n', 'output': ['2.000000\\r\\n1.000000\\r\\n2.000000\\r\\n']}, {'input': '10 95\\r\\n0 0 0 0 0 1 1 1 1 1\\r\\n', 'output': ['10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 3\\r\\n', 'output': ['2.666667\\r\\n1.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n1 3 2\\r\\n', 'output': ['2.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n2 1 3\\r\\n', 'output': ['1.666667\\r\\n2.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n2 3 1\\r\\n', 'output': ['1.666667\\r\\n0.666667\\r\\n2.666667\\r\\n']}, {'input': '3 5\\r\\n3 1 2\\r\\n', 'output': ['0.666667\\r\\n2.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n3 2 1\\r\\n', 'output': ['0.666667\\r\\n1.666667\\r\\n2.666667\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '2 1\\r\\n2 2\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '3 2\\r\\n2 1 2\\r\\n', 'output': ['0.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '3 3\\r\\n2 2 1\\r\\n', 'output': ['0.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 3\\r\\n3 1 2\\r\\n', 'output': ['0.000000\\r\\n2.000000\\r\\n1.000000\\r\\n']}, {'input': '100 100\\r\\n37 97 75 52 33 29 51 22 33 37 45 96 96 60 82 58 86 71 28 73 38 50 6 6 90 17 26 76 13 41 100 47 17 93 4 1 56 16 41 74 25 17 69 61 39 37 96 73 49 93 52 14 62 24 91 30 9 97 52 100 6 16 85 8 12 26 10 3 94 63 80 27 29 78 9 48 79 64 60 18 98 75 81 35 24 81 2 100 23 70 21 60 98 38 29 29 58 37 49 72\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 100\\r\\n1 3 7 7 9 5 9 3 7 8 10 1 3 10 10 6 1 3 10 4 3 9 4 9 5 4 9 2 8 7 4 3 3 3 5 10 8 9 10 1 9 2 4 8 3 10 9 2 3 9 8 2 4 4 4 7 1 1 7 3 7 8 9 5 1 2 6 7 1 10 9 10 5 10 1 10 5 2 4 3 10 1 6 5 6 7 8 9 3 8 6 10 8 7 2 3 8 6 3 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 61\\r\\n81 80 83 72 87 76 91 92 77 93 77 94 76 73 71 88 88 76 87 73 89 73 85 81 79 90 76 73 82 93 79 93 71 75 72 71 78 85 92 89 88 93 74 87 71 94 74 87 85 89 90 93 86 94 92 87 90 91 75 73 90 84 92 94 92 79 74 85 74 74 89 76 84 84 84 83 86 84 82 71 76 74 83 81 89 73 73 74 71 77 90 94 73 94 73 75 93 89 84 92\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10 100\\r\\n52 52 51 52 52 52 51 51 52 52\\r\\n', 'output': ['9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n']}, {'input': '10 100\\r\\n13 13 13 13 12 13 12 13 12 12\\r\\n', 'output': ['9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n10.600000\\r\\n']}, {'input': '10 100\\r\\n50 51 47 51 48 46 49 51 46 51\\r\\n', 'output': ['9.000000\\r\\n8.000000\\r\\n12.000000\\r\\n8.000000\\r\\n11.000000\\r\\n13.000000\\r\\n10.000000\\r\\n8.000000\\r\\n13.000000\\r\\n8.000000\\r\\n']}, {'input': '10 100\\r\\n13 13 9 12 12 11 13 8 10 13\\r\\n', 'output': ['8.400000\\r\\n8.400000\\r\\n12.400000\\r\\n9.400000\\r\\n9.400000\\r\\n10.400000\\r\\n8.400000\\r\\n13.400000\\r\\n11.400000\\r\\n8.400000\\r\\n']}, {'input': '13 97\\r\\n52 52 51 51 52 52 51 52 51 51 52 52 52\\r\\n', 'output': ['7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n7.076923\\r\\n']}, {'input': '17 99\\r\\n13 13 12 13 11 12 12 12 13 13 11 13 13 13 13 12 13\\r\\n', 'output': ['5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n7.294118\\r\\n6.294118\\r\\n6.294118\\r\\n6.294118\\r\\n5.294118\\r\\n5.294118\\r\\n7.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n']}, {'input': '9 91\\r\\n52 51 50 52 52 51 50 48 51\\r\\n', 'output': ['8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n8.888889\\r\\n8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n12.888889\\r\\n9.888889\\r\\n']}, {'input': '17 91\\r\\n13 13 13 13 12 12 13 13 12 13 12 13 10 12 13 13 12\\r\\n', 'output': ['4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n7.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n']}, {'input': '2 3\\r\\n1 1\\r\\n', 'output': ['1.500000\\r\\n1.500000\\r\\n']}, {'input': '2 90\\r\\n0 89\\r\\n', 'output': ['89.500000\\r\\n0.500000\\r\\n']}, {'input': '4 17\\r\\n3 4 8 1\\r\\n', 'output': ['5.250000\\r\\n4.250000\\r\\n0.250000\\r\\n7.250000\\r\\n']}, {'input': '2 9\\r\\n5 5\\r\\n', 'output': ['4.500000\\r\\n4.500000\\r\\n']}, {'input': '7 28\\r\\n1 3 9 10 9 6 10\\r\\n', 'output': ['9.857143\\r\\n7.857143\\r\\n1.857143\\r\\n0.857143\\r\\n1.857143\\r\\n4.857143\\r\\n0.857143\\r\\n']}, {'input': '5 11\\r\\n1 2 3 4 5\\r\\n', 'output': ['4.200000\\r\\n3.200000\\r\\n2.200000\\r\\n1.200000\\r\\n0.200000\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '5 3\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n']}, {'input': '3 1\\r\\n100 100 100\\r\\n', 'output': ['0.333333\\r\\n0.333333\\r\\n0.333333\\r\\n']}, {'input': '5 50\\r\\n2 2 3 2 2\\r\\n', 'output': ['10.200000\\r\\n10.200000\\r\\n9.200000\\r\\n10.200000\\r\\n10.200000\\r\\n']}, {'input': '3 3\\r\\n2 2 3\\r\\n', 'output': ['1.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '2 52\\r\\n2 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 2\\r\\n2 2 3\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n0.000000\\r\\n']}, {'input': '5 1\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n']}, {'input': '2 4\\r\\n1 2\\r\\n', 'output': ['2.500000\\r\\n1.500000\\r\\n']}, {'input': '5 49\\r\\n1 2 3 4 5\\r\\n', 'output': ['11.800000\\r\\n10.800000\\r\\n9.800000\\r\\n8.800000\\r\\n7.800000\\r\\n']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint b = Integer.parseInt(st.nextToken());\n\t\tst = new StringTokenizer(br.readLine());\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = Integer.parseInt(st.nextToken());\n\t\t}\n\t\tint sum = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tsum += a[i];\n\t\t}\n\t\tif (sum > b) {\n\t\t\tSystem.out.println(-1);\n\t\t\treturn;\n\t\t}\n\t\tdouble avg = (double) b / n;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tdouble dif = avg - a[i];\n\t\t\tSystem.out.printf(\"%.6f\\n\", dif);\n\t\t}\n\t}\n}\n"}
{"src_uid": "782b819eb0bfc86d6f96f15ac09d5085", "id": 76, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1300, "testcases": "[{'input': ['1\\r\\n'], 'output': ['3\\r\\n']}, {'input': ['2\\r\\n'], 'output': ['10\\r\\n']}, {'input': ['385599124\\r\\n'], 'output': ['493875375\\r\\n']}, {'input': ['989464295\\r\\n'], 'output': ['31966163\\r\\n']}, {'input': ['376367012\\r\\n'], 'output': ['523204186\\r\\n']}, {'input': ['529357306\\r\\n'], 'output': ['142578489\\r\\n']}, {'input': ['782916801\\r\\n'], 'output': ['51174574\\r\\n']}, {'input': ['74859961358140080\\r\\n'], 'output': ['478768275\\r\\n']}, {'input': ['0\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['252509053898415171\\r\\n'], 'output': ['886314547\\r\\n']}, {'input': ['760713016078377938\\r\\n'], 'output': ['79611270\\r\\n']}, {'input': ['919845424847912644\\r\\n'], 'output': ['388845650\\r\\n']}, {'input': ['585335721566249104\\r\\n'], 'output': ['301383716\\r\\n']}, {'input': ['522842183413115087\\r\\n'], 'output': ['556012763\\r\\n']}, {'input': ['148049062285906746\\r\\n'], 'output': ['913927498\\r\\n']}, {'input': ['84324827171274022\\r\\n'], 'output': ['462535280\\r\\n']}, {'input': ['354979172034763159\\r\\n'], 'output': ['239287993\\r\\n']}, {'input': ['1312148742261680\\r\\n'], 'output': ['799725655\\r\\n']}, {'input': ['269587448053313253\\r\\n'], 'output': ['536645997\\r\\n']}, {'input': ['645762257531682045\\r\\n'], 'output': ['543988614\\r\\n']}, {'input': ['615812227854199662\\r\\n'], 'output': ['357939938\\r\\n']}, {'input': ['819875140559301751\\r\\n'], 'output': ['968653685\\r\\n']}, {'input': ['349993003033420740\\r\\n'], 'output': ['709392758\\r\\n']}, {'input': ['891351282398722856\\r\\n'], 'output': ['70758467\\r\\n']}, {'input': ['563324730406715801\\r\\n'], 'output': ['353494903\\r\\n']}, {'input': ['520974001002628386\\r\\n'], 'output': ['164118419\\r\\n']}, {'input': ['666729339260489789\\r\\n'], 'output': ['784700006\\r\\n']}, {'input': ['856674609788912527\\r\\n'], 'output': ['720540265\\r\\n']}, {'input': ['791809296233191092\\r\\n'], 'output': ['369199735\\r\\n']}, {'input': ['711066335916901717\\r\\n'], 'output': ['15590358\\r\\n']}, {'input': ['931356501703211379\\r\\n'], 'output': ['239824013\\r\\n']}, {'input': ['234122431978145893\\r\\n'], 'output': ['905163056\\r\\n']}, {'input': ['1000000000000000000\\r\\n'], 'output': ['899770636\\r\\n']}, {'input': ['3\\r\\n'], 'output': ['36\\r\\n']}, {'input': ['4\\r\\n'], 'output': ['136\\r\\n']}, {'input': ['5\\r\\n'], 'output': ['528\\r\\n']}, {'input': ['6\\r\\n'], 'output': ['2080\\r\\n']}, {'input': ['7\\r\\n'], 'output': ['8256\\r\\n']}, {'input': ['8\\r\\n'], 'output': ['32896\\r\\n']}, {'input': ['9\\r\\n'], 'output': ['131328\\r\\n']}, {'input': ['10\\r\\n'], 'output': ['524800\\r\\n']}, {'input': ['11\\r\\n'], 'output': ['2098176\\r\\n']}, {'input': ['12\\r\\n'], 'output': ['8390656\\r\\n']}, {'input': ['13\\r\\n'], 'output': ['33558528\\r\\n']}, {'input': ['14\\r\\n'], 'output': ['134225920\\r\\n']}, {'input': ['15\\r\\n'], 'output': ['536887296\\r\\n']}, {'input': ['16\\r\\n'], 'output': ['147516402\\r\\n']}, {'input': ['0\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['6265\\r\\n'], 'output': ['980996097\\r\\n']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tlong n = Long.parseLong(st.nextToken());\n\t\tlong[][] dp = new long[60][2];\n\t\tdp[0][0] = 1;\n\t\tdp[0][1] = 1;\n\t\tfor (int i = 1; i < 60; i++) {\n\t\t\tdp[i][0] = (dp[i - 1][0] + dp[i - 1][1]) % 1000000007;\n\t\t\tdp[i][1] = (dp[i - 1][0] + dp[i - 1][1]) % 1000000007;\n\t\t}\n\t\tlong ans = 0;\n\t\twhile (n > 0) {\n\t\t\tif (n % 2 == 1) {\n\t\t\t\tans = (ans + dp[(int) (n % 60)][0]) % 1000000007;\n\t\t\t} else {\n\t\t\t\tans = (ans + dp[(int) (n % 60)][1]) % 1000000007;\n\t\t\t}\n\t\t\tn /= 2;\n\t\t}\n\t\tpw.println(ans);\n\t\tpw.flush();\n\t\tpw.close();\n\t}\n\n}\n"}
{"src_uid": "062a171cc3ea717ea95ede9d7a1c3a43", "id": 77, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1300, "testcases": "[{'input': '5 5 3 2\\r\\n', 'output': ['2']}, {'input': '7 5 5 2\\r\\n', 'output': ['2']}, {'input': '4 4 4 4\\r\\n', 'output': ['1']}, {'input': '1 1 1 1\\r\\n', 'output': ['1']}, {'input': '4000 1 2 3\\r\\n', 'output': ['4000']}, {'input': '4000 3 4 5\\r\\n', 'output': ['1333']}, {'input': '10 3 4 5\\r\\n', 'output': ['3']}, {'input': '100 23 15 50\\r\\n', 'output': ['2']}, {'input': '3119 3515 1021 7\\r\\n', 'output': ['11']}, {'input': '918 102 1327 1733\\r\\n', 'output': ['9']}, {'input': '3164 42 430 1309\\r\\n', 'output': ['15']}, {'input': '3043 317 1141 2438\\r\\n', 'output': ['7']}, {'input': '26 1 772 2683\\r\\n', 'output': ['26']}, {'input': '370 2 1 15\\r\\n', 'output': ['370']}, {'input': '734 12 6 2\\r\\n', 'output': ['367']}, {'input': '418 18 14 17\\r\\n', 'output': ['29']}, {'input': '18 16 28 9\\r\\n', 'output': ['2']}, {'input': '14 6 2 17\\r\\n', 'output': ['7']}, {'input': '29 27 18 2\\r\\n', 'output': ['2']}, {'input': '29 12 7 10\\r\\n', 'output': ['3']}, {'input': '27 23 4 3\\r\\n', 'output': ['9']}, {'input': '5 14 5 2\\r\\n', 'output': ['1']}, {'input': '5 17 26 5\\r\\n', 'output': ['1']}, {'input': '9 1 10 3\\r\\n', 'output': ['9']}, {'input': '2 19 15 1\\r\\n', 'output': ['2']}, {'input': '4 6 4 9\\r\\n', 'output': ['1']}, {'input': '10 6 2 9\\r\\n', 'output': ['5']}, {'input': '2 2 9 6\\r\\n', 'output': ['1']}, {'input': '6 2 4 1\\r\\n', 'output': ['6']}, {'input': '27 24 5 27\\r\\n', 'output': ['1']}, {'input': '2683 83 26 2709\\r\\n', 'output': ['101']}, {'input': '728 412 789 158\\r\\n', 'output': ['3']}, {'input': '3964 4 2916 176\\r\\n', 'output': ['991']}, {'input': '3399 2035 2 3334\\r\\n', 'output': ['683']}, {'input': '3455 244 3301 3\\r\\n', 'output': ['991']}, {'input': '595 2263 3625 1\\r\\n', 'output': ['595']}, {'input': '4000 1 1 1\\r\\n', 'output': ['4000']}, {'input': '3999 2 2 3999\\r\\n', 'output': ['1']}, {'input': '25 6 8 11\\r\\n', 'output': ['3']}, {'input': '4000 500 1000 2000\\r\\n', 'output': ['8']}, {'input': '53 10 11 23\\r\\n', 'output': ['5']}, {'input': '100 100 1 1\\r\\n', 'output': ['100']}, {'input': '17 3 4 10\\r\\n', 'output': ['5']}, {'input': '413 101 102 105\\r\\n', 'output': ['4']}, {'input': '490 4 49 50\\r\\n', 'output': ['111']}, {'input': '3999 2 3 3\\r\\n', 'output': ['1999']}, {'input': '8 3 8 4\\r\\n', 'output': ['2']}, {'input': '5 1 3 3\\r\\n', 'output': ['5']}, {'input': '100 3 17 22\\r\\n', 'output': ['27']}, {'input': '4000 2 3 4\\r\\n', 'output': ['2000']}, {'input': '4000 3 3 5\\r\\n', 'output': ['1332']}, {'input': '13 4 6 7\\r\\n', 'output': ['2']}, {'input': '4000 5 2 2\\r\\n', 'output': ['2000']}, {'input': '3999 2 2 3\\r\\n', 'output': ['1999']}, {'input': '4000 33 7 3333\\r\\n', 'output': ['564']}, {'input': '60 33 20 9\\r\\n', 'output': ['4']}, {'input': '100 9 11 99\\r\\n', 'output': ['10']}, {'input': '2009 6 8 9\\r\\n', 'output': ['334']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint a = Integer.parseInt(st.nextToken());\n\t\tint b = Integer.parseInt(st.nextToken());\n\t\tint c = Integer.parseInt(st.nextToken());\n\t\tint[][] dp = new int[n+1][3];\n\t\tfor(int i=0; i<=n; i++) {\n\t\t\tfor(int j=0; j<3; j++) {\n\t\t\t\tdp[i][j] = -1;\n\t\t\t}\n\t\t}\n\t\tdp[0][0] = 0;\n\t\tfor(int i=0; i<n; i++) {\n\t\t\tfor(int j=0; j<3; j++) {\n\t\t\t\tif(dp[i][j] == -1) continue;\n\t\t\t\tif(j == 0) {\n\t\t\t\t\tif(i+a <= n) {\n\t\t\t\t\t\tdp[i+a][1] = Math.max(dp[i+a][1], dp[i][j]+1);\n\t\t\t\t\t}\n\t\t\t\t\tif(i+b <= n) {\n\t\t\t\t\t\tdp[i+b][2] = Math.max(dp[i+b][2], dp[i][j]+1);\n\t\t\t\t\t}\n\t\t\t\t\tif(i+c <= n) {\n\t\t\t\t\t\tdp[i+c][0] = Math.max(dp[i+c][0], dp[i][j]+1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(j == 1) {\n\t\t\t\t\tif(i+a <= n) {\n\t\t\t\t\t\tdp[i+a][1] = Math.max(dp[i+a][1], dp[i][j]+1);\n\t\t\t\t\t}\n\t\t\t\t\tif(i+b <= n) {\n\t\t\t\t\t\tdp[i+b][1] = Math.max(dp[i+b][1], dp[i][j]+1);\n\t\t\t\t\t}\n\t\t\t\t\tif(i+c <= n) {\n\t\t\t\t\t\tdp[i+c][0] = Math.max(dp[i+c][0], dp[i][j]+1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(i+a <= n) {\n\t\t\t\t\t\tdp[i+a][1] = Math.max(dp[i+a][1], dp[i][j]+1);\n\t\t\t\t\t}\n\t\t\t\t\tif(i+b <= n) {\n\t\t\t\t\t\tdp[i+b][1] = Math.max(dp[i+b][1], dp[i][j]+1);\n\t\t\t\t\t}\n\t\t\t\t\tif(i+c <= n) {\n\t\t\t\t\t\tdp[i+c][1] = Math.max(dp[i+c][1], dp[i][j]+1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint ans = 0;\n\t\tfor(int i=0; i<3; i++) {\n\t\t\tans = Math.max(ans, dp[n][i]);\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}"}
{"src_uid": "03caf4ddf07c1783e42e9f9085cc6efd", "id": 78, "lang_cluster": "java", "lang": "Java 11", "difficulty": 800, "testcases": "[{'input': '9 3\\r\\n', 'output': ['1']}, {'input': '14 28\\r\\n', 'output': ['1']}, {'input': '4 20\\r\\n', 'output': ['0']}, {'input': '18 198\\r\\n', 'output': ['1']}, {'input': '22 326\\r\\n', 'output': ['1']}, {'input': '26 104\\r\\n', 'output': ['1']}, {'input': '14 10\\r\\n', 'output': ['0']}, {'input': '8 20\\r\\n', 'output': ['0']}, {'input': '2 8\\r\\n', 'output': ['0']}, {'input': '20 11\\r\\n', 'output': ['0']}, {'input': '57 447\\r\\n', 'output': ['1']}, {'input': '1 1\\r\\n', 'output': ['2']}, {'input': '66 296\\r\\n', 'output': ['1']}, {'input': '75 683\\r\\n', 'output': ['1']}, {'input': '227 975\\r\\n', 'output': ['1']}, {'input': '247 499\\r\\n', 'output': ['1']}, {'input': '266 116\\r\\n', 'output': ['1']}, {'input': '286 916\\r\\n', 'output': ['1']}, {'input': '307 341\\r\\n', 'output': ['1']}, {'input': '451 121\\r\\n', 'output': ['1']}, {'input': '471 921\\r\\n', 'output': ['1']}, {'input': '502 346\\r\\n', 'output': ['1']}, {'input': '535 59\\r\\n', 'output': ['1']}, {'input': '555 699\\r\\n', 'output': ['1']}, {'input': '747 351\\r\\n', 'output': ['1']}, {'input': '790 64\\r\\n', 'output': ['1']}, {'input': '810 704\\r\\n', 'output': ['1']}, {'input': '855 225\\r\\n', 'output': ['1']}, {'input': '902 34\\r\\n', 'output': ['1']}, {'input': '922 514\\r\\n', 'output': ['1']}, {'input': '971 131\\r\\n', 'output': ['1']}, {'input': '991 931\\r\\n', 'output': ['1']}, {'input': '840 780\\r\\n', 'output': ['0']}, {'input': '102 595\\r\\n', 'output': ['0']}, {'input': '139 433\\r\\n', 'output': ['0']}, {'input': '968 288\\r\\n', 'output': ['0']}, {'input': '563 354\\r\\n', 'output': ['0']}, {'input': '994 975\\r\\n', 'output': ['0']}, {'input': '456 221\\r\\n', 'output': ['0']}, {'input': '205 210\\r\\n', 'output': ['0']}, {'input': '1 11\\r\\n', 'output': ['0']}, {'input': '1000 1000\\r\\n', 'output': ['0']}, {'input': '3 3\\r\\n', 'output': ['0']}, {'input': '11 99\\r\\n', 'output': ['0']}, {'input': '2 2\\r\\n', 'output': ['1']}, {'input': '11 1\\r\\n', 'output': ['0']}, {'input': '6 6\\r\\n', 'output': ['1']}, {'input': '100 452\\r\\n', 'output': ['0']}, {'input': '420 380\\r\\n', 'output': ['0']}, {'input': '31 31\\r\\n', 'output': ['0']}, {'input': '2 6\\r\\n', 'output': ['0']}, {'input': '112 134\\r\\n', 'output': ['0']}, {'input': '13 13\\r\\n', 'output': ['0']}, {'input': '1 571\\r\\n', 'output': ['0']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tstatic int n, m;\n\tstatic int[][] dp;\n\tstatic int}
{"src_uid": "a491be7d5883d594c3e907a22be607c9", "id": 79, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1500, "testcases": "[{'input': '3 6\\r\\n101010\\r\\n000100\\r\\n100000\\r\\n', 'output': ['3\\r\\n']}, {'input': '2 3\\r\\n111\\r\\n000\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '1 1\\r\\n0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 1\\r\\n1\\r\\n1\\r\\n0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 2\\r\\n10\\r\\n11\\r\\n01\\r\\n01\\r\\n10\\r\\n11\\r\\n', 'output': ['2\\r\\n']}, {'input': '3 3\\r\\n001\\r\\n010\\r\\n100\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 4\\r\\n0001\\r\\n0100\\r\\n0010\\r\\n1000\\r\\n', 'output': ['4\\r\\n']}, {'input': '5 5\\r\\n10000\\r\\n01000\\r\\n00100\\r\\n00010\\r\\n00001\\r\\n', 'output': ['6\\r\\n']}, {'input': '5 5\\r\\n10001\\r\\n00100\\r\\n01000\\r\\n01001\\r\\n11111\\r\\n', 'output': ['2\\r\\n']}, {'input': '5 5\\r\\n11111\\r\\n11111\\r\\n11111\\r\\n11111\\r\\n00000\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 10\\r\\n0001000100\\r\\n1000001000\\r\\n0001000001\\r\\n0100001010\\r\\n0110100000\\r\\n', 'output': ['5\\r\\n']}, {'input': '6 6\\r\\n111000\\r\\n011100\\r\\n001110\\r\\n000111\\r\\n100011\\r\\n110001\\r\\n', 'output': ['4\\r\\n']}, {'input': '2 9\\r\\n101010101\\r\\n010101010\\r\\n', 'output': ['1\\r\\n']}, {'input': '4 6\\r\\n000001\\r\\n100000\\r\\n100000\\r\\n100000\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 6\\r\\n000010\\r\\n010000\\r\\n000100\\r\\n', 'output': ['3\\r\\n']}, {'input': '4 10\\r\\n0000101010\\r\\n1010101010\\r\\n0101010101\\r\\n0000010100\\r\\n', 'output': ['2\\r\\n']}, {'input': '10 10\\r\\n0000000000\\r\\n0000000010\\r\\n0010000000\\r\\n0111000010\\r\\n1000000000\\r\\n0000000100\\r\\n0000000100\\r\\n0000100100\\r\\n0010000000\\r\\n0000100000\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10 10\\r\\n0000000000\\r\\n0000001000\\r\\n0000000100\\r\\n0101000100\\r\\n0000000000\\r\\n0000000000\\r\\n1000110000\\r\\n1011010010\\r\\n0000100000\\r\\n0000001001\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10 10\\r\\n0001001101\\r\\n0010001010\\r\\n1100000000\\r\\n0110110110\\r\\n1011011010\\r\\n1001001001\\r\\n0100010001\\r\\n0110000100\\r\\n0000100000\\r\\n1000010000\\r\\n', 'output': ['8\\r\\n']}, {'input': '10 10\\r\\n1111111111\\r\\n1111111111\\r\\n1111111111\\r\\n1111111111\\r\\n1111111111\\r\\n1111111111\\r\\n1111111111\\r\\n1111111111\\r\\n1111111111\\r\\n1111111111\\r\\n', 'output': ['0\\r\\n']}, {'input': '2 5\\r\\n10000\\r\\n00001\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 7\\r\\n1000000\\r\\n0000010\\r\\n1000000\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 5\\r\\n10010\\r\\n11001\\r\\n00010\\r\\n11000\\r\\n', 'output': ['2\\r\\n']}, {'input': '2 10\\r\\n0000000001\\r\\n1000000000\\r\\n', 'output': ['1\\r\\n']}, {'input': '5 5\\r\\n10000\\r\\n10000\\r\\n00001\\r\\n10000\\r\\n10000\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 4\\r\\n0001\\r\\n0001\\r\\n1000\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 6\\r\\n101010\\r\\n000010\\r\\n100000\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 7\\r\\n0100000\\r\\n0100000\\r\\n0000001\\r\\n0000001\\r\\n', 'output': ['4\\r\\n']}, {'input': '5 1\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 5\\r\\n00001\\r\\n10000\\r\\n00001\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 1\\r\\n0\\r\\n0\\r\\n0\\r\\n', 'output': ['-1\\r\\n']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint m = Integer.parseInt(st.nextToken());\n\t\tint[][] arr = new int[n][m];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tarr[i][j] = Integer.parseInt(st.nextToken());\n\t\t\t}\n\t\t}\n\t\tint min = Integer.MAX_VALUE;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint count = 0;\n\t\t\tint[] temp = new int[m];\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tif (arr[i][j] == 1) {\n\t\t\t\t\tcount++;\n\t\t\t\t\ttemp[j] = count;\n\t\t\t\t} else {\n\t\t\t\t\tcount = 0;\n\t\t\t\t\ttemp[j] = count;\n\t\t\t\t}\n\t\t\t}\n\t\t\tint max = 0;\n\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\tmax = Math.max(max, temp[j]);\n\t\t\t}\n\t\t\tmin = Math.min(min, max);\n\t\t}\n\t\tif (min == Integer.MAX_VALUE) {\n\t\t\tSystem.out.println(-1);\n\t\t} else {\n\t\t\tSystem.out.println(min);\n\t\t}\n\t}\n}\n"}
{"src_uid": "c3244e952830643938d51ce14f043d7d", "id": 80, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1200, "testcases": "[{'input': 'atob\\r\\na\\r\\nb\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aaacaaa\\r\\naca\\r\\naa\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aaa\\r\\naa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'astalavista\\r\\nastla\\r\\nlavista\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'abacabadabacaba\\r\\nabacaba\\r\\nabacaba\\r\\n', 'output': ['both\\r\\n']}, {'input': 'a\\r\\na\\r\\na\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'ab\\r\\nb\\r\\na\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaa\\r\\naaaa\\r\\naaaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'bbabbbbababbaabaabaa\\r\\nabb\\r\\nbaab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'babaabababaaaababaabababaabababababababbababbbabbaabababaababbaabbababaababaaabababaabbaababaaababaa\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aababaaababaabbaabababaaababaabababbaabbabaabababaabbabbbababbababababababaabababaababaaaabababaabab\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaaa\\r\\naaa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzzzz\\r\\nzzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzz\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aabaa\\r\\naab\\r\\nbaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'aabaab\\r\\naba\\r\\nab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aab\\r\\nb\\r\\naa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'abacaba\\r\\naca\\r\\nba\\r\\n', 'output': ['both\\r\\n']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString s = br.readLine();\n\t\tString a = br.readLine();\n\t\tString b = br.readLine();\n\t\tint[][] dp = new int[s.length()][2];\n\t\tint[][] dp2 = new int[s.length()][2];\n\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\tif (s.charAt(i) == a.charAt(0)) {\n\t\t\t\tdp[i][0] = 1;\n\t\t\t}\n\t\t\tif (s.charAt(i) == b.charAt(0)) {\n\t\t\t\tdp[i][1] = 1;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 1; i < a.length(); i++) {\n\t\t\tfor (int j = 0; j < s.length(); j++) {\n\t\t\t\tif (s.charAt(j) == a.charAt(i)) {\n\t\t\t\t\tdp[j][0] += dp[j][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 1; i < b.length(); i++) {\n\t\t\tfor (int j = 0; j < s.length(); j++) {\n\t\t\t\tif (s.charAt(j) == b.charAt(i)) {\n\t\t\t\t\tdp[j][1] += dp[j][1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\tif (dp[i][0] == a.length() && dp[i][1] == b.length()) {\n\t\t\t\tSystem.out.println(\"both\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < s.length(); i++) {\n\t\t\tif (dp[i][0] == a.length()) {\n\t\t\t\tSystem.out.println(\"forward\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (dp[i][1] == b.length()) {\n\t\t\t\tSystem.out.println(\"backward\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"fantasy\");\n\t}\n}\n"}
{"src_uid": "d1e381b72a6c09a0723cfe72c0917372", "id": 81, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1100, "testcases": "[{'input': '3310\\r\\n1033\\r\\n', 'output': ['OK']}, {'input': '4\\r\\n5\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '40\\r\\n04\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '12\\r\\n12\\r\\n', 'output': ['OK']}, {'input': '432\\r\\n234\\r\\n', 'output': ['OK']}, {'input': '17109\\r\\n01179\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '888\\r\\n888\\r\\n', 'output': ['OK']}, {'input': '912\\r\\n9123\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '0\\r\\n00\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '11110\\r\\n1111\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '7391\\r\\n1397\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '201\\r\\n102\\r\\n', 'output': ['OK']}, {'input': '111111111\\r\\n111111111\\r\\n', 'output': ['OK']}, {'input': '32352320\\r\\n22203335\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '1000000000\\r\\n1\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '994321\\r\\n123499\\r\\n', 'output': ['OK']}, {'input': '10101\\r\\n10101\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '666\\r\\n0666\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '2\\r\\n02\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '313\\r\\n133\\r\\n', 'output': ['OK']}, {'input': '987235645\\r\\n234556789\\r\\n', 'output': ['OK']}, {'input': '90812\\r\\n010289\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '123\\r\\n321\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '707\\r\\n770\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '77774444\\r\\n47474747\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '1270\\r\\n1027\\r\\n', 'output': ['OK']}, {'input': '320\\r\\n23\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '123456789\\r\\n123456789\\r\\n', 'output': ['OK']}, {'input': '918273645\\r\\n546372819\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '300000003\\r\\n30000003\\r\\n', 'output': ['WRONG_ANSWER']}, {'input': '0\\r\\n0\\r\\n', 'output': ['OK']}, {'input': '0\\r\\n7\\r\\n', 'output': ['WRONG_ANSWER']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tString n = st.nextToken();\n\t\tString m = st.nextToken();\n\t\tint[] a = new int[10];\n\t\tfor (int i = 0; i < n.length(); i++) {\n\t\t\ta[n.charAt(i) - '0']++;\n\t\t}\n\t\tint[] b = new int[10];\n\t\tfor (int i = 0; i < m.length(); i++) {\n\t\t\tb[m.charAt(i) - '0']++;\n\t\t}\n\t\tif (a[0] == 0) {\n\t\t\tfor (int i = 1; i < 10; i++) {\n\t\t\t\tif (a[i]!= b[i]) {\n\t\t\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (int i = 0; i < 10; i++) {\n\t\t\t\tif (a[i]!= b[i]) {\n\t\t\t\t\tSystem.out.println(\"WRONG_ANSWER\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"OK\");\n\t}\n}"}
{"src_uid": "c31fed523230af1f904218b2fe0d663d", "id": 82, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1200, "testcases": "[{'input': '2 2\\r\\n0 4\\r\\n6 2\\r\\n', 'output': ['4\\r\\n']}, {'input': '2 2\\r\\n0 4\\r\\n5 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '2 3\\r\\n0 4\\r\\n5 2\\r\\n', 'output': ['2\\r\\n']}, {'input': '1 1\\r\\n1 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '2 1\\r\\n2 1\\r\\n1 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '2 2\\r\\n0 4\\r\\n7 4\\r\\n', 'output': ['4\\r\\n']}, {'input': '4 1\\r\\n-12 1\\r\\n-14 1\\r\\n4 1\\r\\n-11 1\\r\\n', 'output': ['5\\r\\n']}, {'input': '6 15\\r\\n19 1\\r\\n2 3\\r\\n6 2\\r\\n-21 2\\r\\n-15 2\\r\\n23 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '10 21\\r\\n-61 6\\r\\n55 2\\r\\n-97 1\\r\\n37 1\\r\\n-39 1\\r\\n26 2\\r\\n21 1\\r\\n64 3\\r\\n-68 1\\r\\n-28 6\\r\\n', 'output': ['6\\r\\n']}, {'input': '26 51\\r\\n783 54\\r\\n-850 6\\r\\n-997 59\\r\\n573 31\\r\\n-125 20\\r\\n472 52\\r\\n101 5\\r\\n-561 4\\r\\n625 35\\r\\n911 14\\r\\n-47 33\\r\\n677 55\\r\\n-410 54\\r\\n13 53\\r\\n173 31\\r\\n968 30\\r\\n-497 7\\r\\n832 42\\r\\n271 59\\r\\n-638 52\\r\\n-301 51\\r\\n378 36\\r\\n-813 7\\r\\n-206 22\\r\\n-737 37\\r\\n-911 9\\r\\n', 'output': ['35\\r\\n']}, {'input': '14 101\\r\\n121 88\\r\\n-452 91\\r\\n635 28\\r\\n-162 59\\r\\n-872 26\\r\\n-996 8\\r\\n468 86\\r\\n742 63\\r\\n892 89\\r\\n-249 107\\r\\n300 51\\r\\n-753 17\\r\\n-620 31\\r\\n-13 34\\r\\n', 'output': ['16\\r\\n']}, {'input': '3 501\\r\\n827 327\\r\\n-85 480\\r\\n-999 343\\r\\n', 'output': ['6\\r\\n']}, {'input': '2 999\\r\\n-999 471\\r\\n530 588\\r\\n', 'output': ['4\\r\\n']}, {'input': '22 54\\r\\n600 43\\r\\n806 19\\r\\n-269 43\\r\\n-384 78\\r\\n222 34\\r\\n392 10\\r\\n318 30\\r\\n488 73\\r\\n-756 49\\r\\n-662 22\\r\\n-568 50\\r\\n-486 16\\r\\n-470 2\\r\\n96 66\\r\\n864 16\\r\\n934 15\\r\\n697 43\\r\\n-154 30\\r\\n775 5\\r\\n-876 71\\r\\n-33 78\\r\\n-991 31\\r\\n', 'output': ['30\\r\\n']}, {'input': '17 109\\r\\n52 7\\r\\n216 24\\r\\n-553 101\\r\\n543 39\\r\\n391 92\\r\\n-904 67\\r\\n95 34\\r\\n132 14\\r\\n730 103\\r\\n952 118\\r\\n-389 41\\r\\n-324 36\\r\\n-74 2\\r\\n-147 99\\r\\n-740 33\\r\\n233 1\\r\\n-995 3\\r\\n', 'output': ['16\\r\\n']}, {'input': '4 512\\r\\n-997 354\\r\\n-568 216\\r\\n-234 221\\r\\n603 403\\r\\n', 'output': ['4\\r\\n']}, {'input': '3 966\\r\\n988 5\\r\\n15 2\\r\\n-992 79\\r\\n', 'output': ['6\\r\\n']}, {'input': '2 1000\\r\\n-995 201\\r\\n206 194\\r\\n', 'output': ['4\\r\\n']}, {'input': '50 21\\r\\n-178 1\\r\\n49 1\\r\\n-98 1\\r\\n-220 1\\r\\n152 1\\r\\n-160 3\\r\\n17 2\\r\\n77 1\\r\\n-24 1\\r\\n214 2\\r\\n-154 2\\r\\n-141 1\\r\\n79 1\\r\\n206 1\\r\\n8 1\\r\\n-208 1\\r\\n36 1\\r\\n231 3\\r\\n-2 2\\r\\n-130 2\\r\\n-14 2\\r\\n34 1\\r\\n-187 2\\r\\n14 1\\r\\n-83 2\\r\\n-241 1\\r\\n149 2\\r\\n73 1\\r\\n-233 3\\r\\n-45 1\\r\\n197 1\\r\\n145 2\\r\\n-127 2\\r\\n-229 4\\r\\n-85 1\\r\\n-66 1\\r\\n-76 2\\r\\n104 1\\r\\n175 1\\r\\n70 1\\r\\n131 3\\r\\n-108 1\\r\\n-5 4\\r\\n140 1\\r\\n33 1\\r\\n248 3\\r\\n-36 3\\r\\n134 1\\r\\n-183 1\\r\\n56 2\\r\\n', 'output': ['9\\r\\n']}, {'input': '50 1\\r\\n37 1\\r\\n-38 1\\r\\n7 1\\r\\n47 1\\r\\n-4 1\\r\\n24 1\\r\\n-32 1\\r\\n-23 1\\r\\n-3 1\\r\\n-19 1\\r\\n5 1\\r\\n-50 1\\r\\n11 1\\r\\n-11 1\\r\\n49 1\\r\\n-39 1\\r\\n0 1\\r\\n43 1\\r\\n-10 1\\r\\n6 1\\r\\n19 1\\r\\n1 1\\r\\n27 1\\r\\n29 1\\r\\n-47 1\\r\\n-40 1\\r\\n-46 1\\r\\n-26 1\\r\\n-42 1\\r\\n-37 1\\r\\n13 1\\r\\n-29 1\\r\\n-30 1\\r\\n3 1\\r\\n44 1\\r\\n10 1\\r\\n4 1\\r\\n-14 1\\r\\n-2 1\\r\\n34 1\\r\\n18 1\\r\\n-33 1\\r\\n-44 1\\r\\n9 1\\r\\n-36 1\\r\\n-7 1\\r\\n25 1\\r\\n22 1\\r\\n-20 1\\r\\n-41 1\\r\\n', 'output': ['43\\r\\n']}, {'input': '50 1\\r\\n-967 7\\r\\n696 7\\r\\n-366 4\\r\\n557 1\\r\\n978 2\\r\\n800 4\\r\\n-161 2\\r\\n-773 2\\r\\n-248 2\\r\\n134 3\\r\\n869 6\\r\\n-932 2\\r\\n-262 14\\r\\n191 3\\r\\n669 2\\r\\n72 5\\r\\n0 1\\r\\n757 8\\r\\n859 2\\r\\n-131 8\\r\\n-169 3\\r\\n543 10\\r\\n-120 2\\r\\n-87 8\\r\\n-936 6\\r\\n-620 3\\r\\n-281 11\\r\\n684 3\\r\\n886 10\\r\\n497 4\\r\\n380 4\\r\\n833 1\\r\\n-727 6\\r\\n470 11\\r\\n584 9\\r\\n66 6\\r\\n-609 12\\r\\n-661 4\\r\\n-57 8\\r\\n628 7\\r\\n635 4\\r\\n-924 3\\r\\n-982 4\\r\\n-201 7\\r\\n-9 8\\r\\n-560 9\\r\\n712 7\\r\\n-330 8\\r\\n-191 1\\r\\n-892 7\\r\\n', 'output': ['96\\r\\n']}, {'input': '1 1000\\r\\n0 1000\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint t = Integer.parseInt(st.nextToken());\n\t\tint[] x = new int[n];\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\tx[i] = Integer.parseInt(st.nextToken());\n\t\t\ta[i] = Integer.parseInt(st.nextToken());\n\t\t}\n\t\tint ans = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (x[i] - a[i] / 2 >= 0) {\n\t\t\t\tans++;\n\t\t\t}\n\t\t\tif (x[i] + a[i] / 2 <= 0) {\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans * 2 + 1);\n\t}\n}"}
{"src_uid": "c052d85e402691b05e494b5283d62679", "id": 83, "lang_cluster": "java", "lang": "Java 11", "difficulty": 900, "testcases": "[{'input': '7 3\\r\\n5 10\\r\\n2 5\\r\\n3 6\\r\\n', 'output': ['62']}, {'input': '3 3\\r\\n1 3\\r\\n2 2\\r\\n3 1\\r\\n', 'output': ['7']}, {'input': '1 1\\r\\n1 2\\r\\n', 'output': ['2']}, {'input': '1 2\\r\\n1 9\\r\\n1 6\\r\\n', 'output': ['9']}, {'input': '1 10\\r\\n1 1\\r\\n1 9\\r\\n1 3\\r\\n1 9\\r\\n1 7\\r\\n1 10\\r\\n1 4\\r\\n1 7\\r\\n1 3\\r\\n1 1\\r\\n', 'output': ['10']}, {'input': '2 1\\r\\n2 1\\r\\n', 'output': ['2']}, {'input': '2 2\\r\\n2 4\\r\\n1 4\\r\\n', 'output': ['8']}, {'input': '2 3\\r\\n1 7\\r\\n1 2\\r\\n1 5\\r\\n', 'output': ['12']}, {'input': '4 1\\r\\n2 2\\r\\n', 'output': ['4']}, {'input': '4 2\\r\\n1 10\\r\\n4 4\\r\\n', 'output': ['22']}, {'input': '4 3\\r\\n1 4\\r\\n6 4\\r\\n1 7\\r\\n', 'output': ['19']}, {'input': '5 1\\r\\n10 5\\r\\n', 'output': ['25']}, {'input': '5 2\\r\\n3 9\\r\\n2 2\\r\\n', 'output': ['31']}, {'input': '5 5\\r\\n2 9\\r\\n3 1\\r\\n2 1\\r\\n1 8\\r\\n2 8\\r\\n', 'output': ['42']}, {'input': '5 10\\r\\n1 3\\r\\n1 2\\r\\n1 9\\r\\n1 10\\r\\n1 1\\r\\n1 5\\r\\n1 10\\r\\n1 2\\r\\n1 3\\r\\n1 7\\r\\n', 'output': ['41']}, {'input': '10 1\\r\\n9 4\\r\\n', 'output': ['36']}, {'input': '10 2\\r\\n14 3\\r\\n1 3\\r\\n', 'output': ['30']}, {'input': '10 7\\r\\n4 8\\r\\n1 10\\r\\n1 10\\r\\n1 2\\r\\n3 3\\r\\n1 3\\r\\n1 10\\r\\n', 'output': ['71']}, {'input': '10 10\\r\\n1 8\\r\\n2 10\\r\\n1 9\\r\\n1 1\\r\\n1 9\\r\\n1 6\\r\\n1 4\\r\\n2 5\\r\\n1 2\\r\\n1 4\\r\\n', 'output': ['70']}, {'input': '10 4\\r\\n1 5\\r\\n5 2\\r\\n1 9\\r\\n3 3\\r\\n', 'output': ['33']}, {'input': '100 5\\r\\n78 6\\r\\n29 10\\r\\n3 6\\r\\n7 3\\r\\n2 4\\r\\n', 'output': ['716']}, {'input': '1000 7\\r\\n102 10\\r\\n23 6\\r\\n79 4\\r\\n48 1\\r\\n34 10\\r\\n839 8\\r\\n38 4\\r\\n', 'output': ['8218']}, {'input': '10000 10\\r\\n336 2\\r\\n2782 5\\r\\n430 10\\r\\n1893 7\\r\\n3989 10\\r\\n2593 8\\r\\n165 6\\r\\n1029 2\\r\\n2097 4\\r\\n178 10\\r\\n', 'output': ['84715']}, {'input': '100000 3\\r\\n2975 2\\r\\n35046 4\\r\\n61979 9\\r\\n', 'output': ['703945']}, {'input': '1000000 4\\r\\n314183 9\\r\\n304213 4\\r\\n16864 5\\r\\n641358 9\\r\\n', 'output': ['8794569']}, {'input': '10000000 10\\r\\n360313 10\\r\\n416076 1\\r\\n435445 9\\r\\n940322 7\\r\\n1647581 7\\r\\n4356968 10\\r\\n3589256 2\\r\\n2967933 5\\r\\n2747504 7\\r\\n1151633 3\\r\\n', 'output': ['85022733']}, {'input': '100000000 7\\r\\n32844337 7\\r\\n11210848 7\\r\\n47655987 1\\r\\n33900472 4\\r\\n9174763 2\\r\\n32228738 10\\r\\n29947408 5\\r\\n', 'output': ['749254060']}, {'input': '200000000 10\\r\\n27953106 7\\r\\n43325979 4\\r\\n4709522 1\\r\\n10975786 4\\r\\n67786538 8\\r\\n48901838 7\\r\\n15606185 6\\r\\n2747583 1\\r\\n100000000 1\\r\\n633331 3\\r\\n', 'output': ['1332923354']}, {'input': '200000000 9\\r\\n17463897 9\\r\\n79520463 1\\r\\n162407 4\\r\\n41017993 8\\r\\n71054118 4\\r\\n9447587 2\\r\\n5298038 9\\r\\n3674560 7\\r\\n20539314 5\\r\\n', 'output': ['996523209']}, {'input': '200000000 8\\r\\n6312706 6\\r\\n2920548 2\\r\\n16843192 3\\r\\n1501141 2\\r\\n13394704 6\\r\\n10047725 10\\r\\n4547663 6\\r\\n54268518 6\\r\\n', 'output': ['630991750']}, {'input': '200000000 7\\r\\n25621043 2\\r\\n21865270 1\\r\\n28833034 1\\r\\n22185073 5\\r\\n100000000 2\\r\\n13891017 9\\r\\n61298710 8\\r\\n', 'output': ['931584598']}, {'input': '200000000 6\\r\\n7465600 6\\r\\n8453505 10\\r\\n4572014 8\\r\\n8899499 3\\r\\n86805622 10\\r\\n64439238 6\\r\\n', 'output': ['1447294907']}, {'input': '200000000 5\\r\\n44608415 6\\r\\n100000000 9\\r\\n51483223 9\\r\\n44136047 1\\r\\n52718517 1\\r\\n', 'output': ['1634907859']}, {'input': '200000000 4\\r\\n37758556 10\\r\\n100000000 6\\r\\n48268521 3\\r\\n20148178 10\\r\\n', 'output': ['1305347138']}, {'input': '200000000 3\\r\\n65170000 7\\r\\n20790088 1\\r\\n74616133 4\\r\\n', 'output': ['775444620']}, {'input': '200000000 2\\r\\n11823018 6\\r\\n100000000 9\\r\\n', 'output': ['970938108']}, {'input': '200000000 1\\r\\n100000000 6\\r\\n', 'output': ['600000000']}, {'input': '200000000 10\\r\\n12097724 9\\r\\n41745972 5\\r\\n26982098 9\\r\\n14916995 7\\r\\n21549986 7\\r\\n3786630 9\\r\\n8050858 7\\r\\n27994924 4\\r\\n18345001 5\\r\\n8435339 5\\r\\n', 'output': ['1152034197']}, {'input': '200000000 10\\r\\n55649 8\\r\\n10980981 9\\r\\n3192542 8\\r\\n94994808 4\\r\\n3626106 1\\r\\n100000000 6\\r\\n5260110 9\\r\\n4121453 2\\r\\n15125061 4\\r\\n669569 6\\r\\n', 'output': ['1095537357']}, {'input': '10 20\\r\\n1 7\\r\\n1 7\\r\\n1 8\\r\\n1 3\\r\\n1 10\\r\\n1 7\\r\\n1 7\\r\\n1 9\\r\\n1 3\\r\\n1 1\\r\\n1 2\\r\\n1 1\\r\\n1 3\\r\\n1 10\\r\\n1 9\\r\\n1 8\\r\\n1 8\\r\\n1 6\\r\\n1 7\\r\\n1 5\\r\\n', 'output': ['83']}, {'input': '10000000 20\\r\\n4594 7\\r\\n520836 8\\r\\n294766 6\\r\\n298672 4\\r\\n142253 6\\r\\n450626 1\\r\\n1920034 9\\r\\n58282 4\\r\\n1043204 1\\r\\n683045 1\\r\\n1491746 5\\r\\n58420 4\\r\\n451217 2\\r\\n129423 4\\r\\n246113 5\\r\\n190612 8\\r\\n912923 6\\r\\n473153 6\\r\\n783733 6\\r\\n282411 10\\r\\n', 'output': ['54980855']}, {'input': '200000000 20\\r\\n15450824 5\\r\\n839717 10\\r\\n260084 8\\r\\n1140850 8\\r\\n28744 6\\r\\n675318 3\\r\\n25161 2\\r\\n5487 3\\r\\n6537698 9\\r\\n100000000 5\\r\\n7646970 9\\r\\n16489 6\\r\\n24627 3\\r\\n1009409 5\\r\\n22455 1\\r\\n25488456 4\\r\\n484528 9\\r\\n32663641 3\\r\\n750968 4\\r\\n5152 6\\r\\n', 'output': ['939368573']}, {'input': '200000000 20\\r\\n16896 2\\r\\n113 3\\r\\n277 2\\r\\n299 7\\r\\n69383562 2\\r\\n3929 8\\r\\n499366 4\\r\\n771846 5\\r\\n9 4\\r\\n1278173 7\\r\\n90 2\\r\\n54 7\\r\\n72199858 10\\r\\n17214 5\\r\\n3 10\\r\\n1981618 3\\r\\n3728 2\\r\\n141 8\\r\\n2013578 9\\r\\n51829246 5\\r\\n', 'output': ['1158946383']}, {'input': '200000000 20\\r\\n983125 2\\r\\n7453215 9\\r\\n9193588 2\\r\\n11558049 7\\r\\n28666199 1\\r\\n34362244 1\\r\\n5241493 5\\r\\n15451270 4\\r\\n19945845 8\\r\\n6208681 3\\r\\n38300385 7\\r\\n6441209 8\\r\\n21046742 7\\r\\n577198 10\\r\\n3826434 8\\r\\n9764276 8\\r\\n6264675 7\\r\\n8567063 3\\r\\n3610303 4\\r\\n2908232 3\\r\\n', 'output': ['1131379312']}, {'input': '10 15\\r\\n1 6\\r\\n2 6\\r\\n3 4\\r\\n1 3\\r\\n1 2\\r\\n1 5\\r\\n1 6\\r\\n1 2\\r\\n2 9\\r\\n1 10\\r\\n1 3\\r\\n1 7\\r\\n1 8\\r\\n1 2\\r\\n2 9\\r\\n', 'output': ['79']}, {'input': '10000000 15\\r\\n111 5\\r\\n914124 3\\r\\n3 9\\r\\n177790 1\\r\\n2352 3\\r\\n32138 9\\r\\n104477 1\\r\\n1223 4\\r\\n18 6\\r\\n6655580 4\\r\\n57643 10\\r\\n94309 2\\r\\n37 1\\r\\n227002 10\\r\\n1733193 7\\r\\n', 'output': ['45116295']}, {'input': '200000000 15\\r\\n7069868 1\\r\\n5567826 8\\r\\n2310059 10\\r\\n13539782 7\\r\\n38420939 4\\r\\n29911411 8\\r\\n52256316 1\\r\\n12265839 9\\r\\n2074265 1\\r\\n24896428 9\\r\\n72470695 5\\r\\n3236301 1\\r\\n3890243 2\\r\\n65168965 8\\r\\n65724 6\\r\\n', 'output': ['1489289257']}, {'input': '200000000 15\\r\\n12044094 7\\r\\n2475138 10\\r\\n944451 7\\r\\n4854766 2\\r\\n3809145 10\\r\\n7727571 2\\r\\n43908937 6\\r\\n2745883 1\\r\\n427511 2\\r\\n100000000 5\\r\\n190914 6\\r\\n554889 3\\r\\n288798 4\\r\\n1848572 5\\r\\n893874 3\\r\\n', 'output': ['961871671']}, {'input': '200000000 15\\r\\n6334191 7\\r\\n1927941 4\\r\\n5175933 10\\r\\n468389 1\\r\\n433043 10\\r\\n6863198 5\\r\\n7480646 4\\r\\n14774279 10\\r\\n2921129 8\\r\\n18325627 7\\r\\n6973152 9\\r\\n8277324 9\\r\\n21522856 2\\r\\n2058070 1\\r\\n2444742 4\\r\\n', 'output': ['664376069']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tstatic int n, m;\n\tstatic int[] a, b;\n\tstatic int[][] dp;\n\tstatic int[][][] dp2;\n\tstatic int[][][] dp3;\n\tstatic int[][][] dp4;\n\tstatic int[][][] dp5;\n\tstatic int[][][] dp6;\n\tstatic int[][][] dp7;\n\tstatic int[][][] dp8;\n\tstatic int[][][] dp9;\n\tstatic int[][][] dp10;\n\tstatic int[][][] dp11;\n\tstatic int[][][] dp12;\n\tstatic int[][][] dp13;\n\tstatic int[][][] dp14;\n\tstatic int[][][] dp15;\n\tstatic int[][][] dp16;\n\tstatic int[][][] dp17;\n\tstatic int[][][] dp18;\n\tstatic int[][][] dp19;\n\tstatic int[][][] dp20;\n\tstatic int[][][] dp21;\n\tstatic int[][][] dp22;\n\tstatic int[][][] dp23;\n\tstatic int[][][] dp24;\n\tstatic int[][][] dp25;\n\tstatic int[][][] dp26;\n\tstatic int[][][] dp27;\n\tstatic int[][][] dp28;\n\tstatic int[][][] dp29;\n\tstatic int[][][] dp30;\n\tstatic int[][][] dp31;\n\tstatic int[][][] dp32;\n\tstatic int[][][] dp33;\n\tstatic int[][][] dp34;\n\tstatic int[][][] dp35;\n\tstatic int[][][] dp36;\n\tstatic int[][][] dp37;\n\tstatic int[][][] dp38;\n\tstatic int[][][] dp39;\n\tstatic int[][][] dp40;\n\tstatic int[][][] dp41;\n\tstatic int[][][] dp42;\n\tstatic int[][][] dp43;\n\tstatic int[][][] dp44;\n\tstatic int[][][] dp45;\n\tstatic int[][][] dp46;\n\tstatic int[][][] dp47;\n\tstatic int[][][] dp48;\n\tstatic int[][][] d"}
{"src_uid": "930be5ec102fbe062062aa23eac75187", "id": 84, "lang_cluster": "java", "lang": "Java 11", "difficulty": 800, "testcases": "[{'input': '4\\r\\n1 2 2 -4\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n1 2 3 1 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n28\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n-28 12\\r\\n', 'output': ['12\\r\\n']}, {'input': '3\\r\\n-83 40 -80\\r\\n', 'output': ['-80\\r\\n']}, {'input': '8\\r\\n93 77 -92 26 21 -48 53 91\\r\\n', 'output': ['-48\\r\\n']}, {'input': '20\\r\\n-72 -9 -86 80 7 -10 40 -27 -94 92 96 56 28 -19 79 36 -3 -73 -63 -49\\r\\n', 'output': ['-86\\r\\n']}, {'input': '49\\r\\n-74 -100 -80 23 -8 -83 -41 -20 48 17 46 -73 -55 67 85 4 40 -60 -69 -75 56 -74 -42 93 74 -95 64 -46 97 -47 55 0 -78 -34 -31 40 -63 -49 -76 48 21 -1 -49 -29 -98 -11 76 26 94\\r\\n', 'output': ['-98\\r\\n']}, {'input': '88\\r\\n63 48 1 -53 -89 -49 64 -70 -49 71 -17 -16 76 81 -26 -50 67 -59 -56 97 2 100 14 18 -91 -80 42 92 -25 -88 59 8 -56 38 48 -71 -78 24 -14 48 -1 69 73 -76 54 16 -92 44 47 33 -34 -17 -81 21 -59 -61 53 26 10 -76 67 35 -29 70 65 -13 -29 81 80 32 74 -6 34 46 57 1 -45 -55 69 79 -58 11 -2 22 -18 -16 -89 -46\\r\\n', 'output': ['-91\\r\\n']}, {'input': '100\\r\\n34 32 88 20 76 53 -71 -39 -98 -10 57 37 63 -3 -54 -64 -78 -82 73 20 -30 -4 22 75 51 -64 -91 29 -52 -48 83 19 18 -47 46 57 -44 95 89 89 -30 84 -83 67 58 -99 -90 -53 92 -60 -5 -56 -61 27 68 -48 52 -95 64 -48 -30 -67 66 89 14 -33 -31 -91 39 7 -94 -54 92 -96 -99 -83 -16 91 -28 -66 81 44 14 -85 -21 18 40 16 -13 -82 -33 47 -10 -40 -19 10 25 60 -34 -89\\r\\n', 'output': ['-98\\r\\n']}, {'input': '2\\r\\n-1 -1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3\\r\\n-2 -2 -2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '100\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '100\\r\\n100 100 100 100 100 100 100 100 100 100 100 100 -100 100 100 100 100 100 100 100 100 100 100 100 -100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 -100 100 100 100 100 100 100 100 100 100 100 -100 100 100 100 100 -100 100 100 100 100 100 100 100 100 100 100 100\\r\\n', 'output': ['100\\r\\n']}, {'input': '10\\r\\n40 71 -85 -85 40 -85 -85 64 -85 47\\r\\n', 'output': ['40\\r\\n']}, {'input': '23\\r\\n-90 -90 -41 -64 -64 -90 -15 10 -43 -90 -64 -64 89 -64 36 47 38 -90 -64 -90 -90 68 -90\\r\\n', 'output': ['-64\\r\\n']}, {'input': '39\\r\\n-97 -93 -42 -93 -97 -93 56 -97 -97 -97 76 -33 -60 91 7 82 17 47 -97 -97 -93 73 -97 12 -97 -97 -97 -97 56 -92 -83 -93 -93 49 -93 -97 -97 -17 -93\\r\\n', 'output': ['-93\\r\\n']}, {'input': '51\\r\\n-21 6 -35 -98 -86 -98 -86 -43 -65 32 -98 -40 96 -98 -98 -98 -98 -86 -86 -98 56 -86 -98 -98 -30 -98 -86 -31 -98 -86 -86 -86 -86 -30 96 -86 -86 -86 -60 25 88 -86 -86 58 31 -47 57 -86 37 44 -83\\r\\n', 'output': ['-86\\r\\n']}, {'input': '66\\r\\n-14 -95 65 -95 -95 -97 -90 -71 -97 -97 70 -95 -95 -97 -95 -27 35 -87 -95 -5 -97 -97 87 34 -49 -95 -97 -95 -97 -95 -30 -95 -97 47 -95 -17 -97 -95 -97 -69 51 -97 -97 -95 -75 87 59 21 63 56 76 -91 98 -97 6 -97 -95 -95 -97 -73 11 -97 -35 -95 -95 -43\\r\\n', 'output': ['-95\\r\\n']}, {'input': '77\\r\\n-67 -93 -93 -92 97 29 93 -93 -93 -5 -93 -7 60 -92 -93 44 -84 68 -92 -93 69 -92 -37 56 43 -93 35 -92 -93 19 -79 18 -92 -93 -93 -37 -93 -47 -93 -92 -92 74 67 19 40 -92 -92 -92 -92 -93 -93 -41 -93 -92 -93 -93 -92 -93 51 -80 6 -42 -92 -92 -66 -12 -92 -92 -3 93 -92 -49 -93 40 62 -92 -92\\r\\n', 'output': ['-92\\r\\n']}, {'input': '89\\r\\n-98 40 16 -87 -98 63 -100 55 -96 -98 -21 -100 -93 26 -98 -98 -100 -89 -98 -5 -65 -28 -100 -6 -66 67 -100 -98 -98 10 -98 -98 -70 7 -98 2 -100 -100 -98 25 -100 -100 -98 23 -68 -100 -98 3 98 -100 -98 -98 -98 -98 -24 -100 -100 -9 -98 35 -100 99 -5 -98 -100 -100 37 -100 -84 57 -98 40 -47 -100 -1 -92 -76 -98 -98 -100 -100 -100 -63 30 21 -100 -100 -100 -12\\r\\n', 'output': ['-98\\r\\n']}, {'input': '99\\r\\n10 -84 -100 -100 73 -64 -100 -94 33 -100 -100 -100 -100 71 64 24 7 -100 -32 -100 -100 77 -100 62 -12 55 45 -100 -100 -80 -100 -100 -100 -100 -100 -100 -100 -100 -100 -39 -48 -100 -34 47 -100 -100 -100 -100 -100 -77 -100 -100 -100 -100 -100 -100 -52 40 -55 -100 -44 -100 72 33 70 -100 -100 -78 -100 -3 100 -77 22 -100 95 -30 -100 10 -69 -100 -100 -100 -100 52 -39 -100 -100 -100 7 -100 -98 -66 95 -17 -100 52 -100 68 -100\\r\\n', 'output': ['-98\\r\\n']}, {'input': '100\\r\\n-99 -98 -64 89 53 57 -99 29 -78 18 -3 -54 76 -98 -99 -98 37 -98 19 -47 89 73 -98 -91 -99 -99 -98 -48 -99 22 -99 -98 -99 -99 -98 -60 84 67 -99 -98 20 -98 88 -98 46 -98 -99 -98 -99 -71 -99 -98 -98 -39 83 95 -98 63 -98 -99 32 -98 -99 -64 57 -30 -53 -83 -4 -99 58 20 -98 -10 -99 -44 -99 -99 -99 -99 75 34 -98 -52 -98 -30 -98 -99 -98 -98 51 -99 -99 -99 -98 -99 -99 -82 -90 92\\r\\n', 'output': ['-98\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n1 3 2\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n2 1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n2 3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 1 2\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n3 2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '9\\r\\n99 99 99 99 100 100 100 100 100\\r\\n', 'output': ['100\\r\\n']}, {'input': '5\\r\\n-100 -100 -100 -100 -100\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\t\tArrays.sort(a);\n\t\tif(a[1]!= a[0]) {\n\t\t\tSystem.out.println(a[1]);\n\t\t}else {\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\t}\n}\n"}
{"src_uid": "685fe16c217b5b71eafdb4198822250e", "id": 85, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1300, "testcases": "[{'input': '2 0 0 1 0\\r\\n', 'output': ['1']}, {'input': '2 0 1 2 1\\r\\n', 'output': ['4']}, {'input': '100 0 0 100 100\\r\\n', 'output': ['200']}, {'input': '4 0 3 1 4\\r\\n', 'output': ['2']}, {'input': '10 8 10 10 0\\r\\n', 'output': ['12']}, {'input': '26 21 0 26 14\\r\\n', 'output': ['19']}, {'input': '15 0 1 11 0\\r\\n', 'output': ['12']}, {'input': '26 26 7 26 12\\r\\n', 'output': ['5']}, {'input': '6 6 0 2 6\\r\\n', 'output': ['10']}, {'input': '5 1 5 2 5\\r\\n', 'output': ['1']}, {'input': '99 12 0 35 99\\r\\n', 'output': ['146']}, {'input': '44 44 31 28 0\\r\\n', 'output': ['47']}, {'input': '42 42 36 5 0\\r\\n', 'output': ['73']}, {'input': '87 87 66 0 5\\r\\n', 'output': ['158']}, {'input': '85 0 32 0 31\\r\\n', 'output': ['1']}, {'input': '30 20 30 3 0\\r\\n', 'output': ['53']}, {'input': '5 4 0 5 1\\r\\n', 'output': ['2']}, {'input': '40 24 40 4 0\\r\\n', 'output': ['68']}, {'input': '11 0 2 11 4\\r\\n', 'output': ['17']}, {'input': '82 0 11 35 0\\r\\n', 'output': ['46']}, {'input': '32 19 32 0 1\\r\\n', 'output': ['50']}, {'input': '54 12 0 0 44\\r\\n', 'output': ['56']}, {'input': '75 42 75 28 0\\r\\n', 'output': ['145']}, {'input': '48 31 48 0 4\\r\\n', 'output': ['75']}, {'input': '69 4 69 69 59\\r\\n', 'output': ['75']}, {'input': '561 0 295 233 0\\r\\n', 'output': ['528']}, {'input': '341 158 0 0 190\\r\\n', 'output': ['348']}, {'input': '887 887 461 39 887\\r\\n', 'output': ['1274']}, {'input': '700 0 288 700 368\\r\\n', 'output': ['1356']}, {'input': '512 70 512 512 99\\r\\n', 'output': ['855']}, {'input': '826 188 826 592 0\\r\\n', 'output': ['1606']}, {'input': '953 0 773 0 903\\r\\n', 'output': ['130']}, {'input': '80 80 4 0 54\\r\\n', 'output': ['138']}, {'input': '208 73 0 208 123\\r\\n', 'output': ['258']}, {'input': '983 0 894 199 0\\r\\n', 'output': ['1093']}, {'input': '686 615 686 470 686\\r\\n', 'output': ['145']}, {'input': '869 869 833 0 578\\r\\n', 'output': ['1196']}, {'input': '169 0 94 0 132\\r\\n', 'output': ['38']}, {'input': '68 42 68 68 28\\r\\n', 'output': ['66']}, {'input': '967 967 607 279 0\\r\\n', 'output': ['1295']}, {'input': '489 489 139 455 489\\r\\n', 'output': ['384']}, {'input': '964 205 964 604 964\\r\\n', 'output': ['399']}, {'input': '86 0 34 86 21\\r\\n', 'output': ['141']}, {'input': '209 166 209 131 0\\r\\n', 'output': ['330']}, {'input': '684 684 113 314 684\\r\\n', 'output': ['941']}, {'input': '16 0 6 0 8\\r\\n', 'output': ['2']}, {'input': '862 154 862 297 862\\r\\n', 'output': ['143']}, {'input': '418 222 0 254 418\\r\\n', 'output': ['778']}, {'input': '571 504 571 143 571\\r\\n', 'output': ['361']}, {'input': '371 371 210 81 371\\r\\n', 'output': ['451']}, {'input': '1000 0 0 1000 1000\\r\\n', 'output': ['2000']}, {'input': '1000 564 0 436 1000\\r\\n', 'output': ['2000']}, {'input': '1000 0 573 12 1000\\r\\n', 'output': ['439']}, {'input': '1000 984 0 1000 999\\r\\n', 'output': ['1015']}, {'input': '100 10 0 10 0\\r\\n', 'output': ['0']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint x1 = Integer.parseInt(st.nextToken());\n\t\tint y1 = Integer.parseInt(st.nextToken());\n\t\tint x2 = Integer.parseInt(st.nextToken());\n\t\tint y2 = Integer.parseInt(st.nextToken());\n\t\tint ans = 0;\n\t\tif (x1 == x2) {\n\t\t\tif (y1 > y2) {\n\t\t\t\tans = y1 - y2;\n\t\t\t} else {\n\t\t\t\tans = y2 - y1;\n\t\t\t}\n\t\t} else {\n\t\t\tif (x1 > x2) {\n\t\t\t\tans = x1 - x2;\n\t\t\t} else {\n\t\t\t\tans = x2 - x1;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans * 2);\n\t}\n}"}
{"src_uid": "9a56288d8bd4e4e7ef3329e102f745a5", "id": 86, "lang_cluster": "java", "lang": "Java 11", "difficulty": 900, "testcases": "[{'input': '5 3\\r\\n-6 0 35 -2 4\\r\\n', 'output': ['8\\r\\n']}, {'input': '4 2\\r\\n7 0 0 -7\\r\\n', 'output': ['7\\r\\n']}, {'input': '6 6\\r\\n756 -611 251 -66 572 -818\\r\\n', 'output': ['1495\\r\\n']}, {'input': '5 5\\r\\n976 437 937 788 518\\r\\n', 'output': ['0\\r\\n']}, {'input': '5 3\\r\\n-2 -2 -2 -2 -2\\r\\n', 'output': ['6\\r\\n']}, {'input': '5 1\\r\\n998 997 985 937 998\\r\\n', 'output': ['0\\r\\n']}, {'input': '2 2\\r\\n-742 -187\\r\\n', 'output': ['929\\r\\n']}, {'input': '3 3\\r\\n522 597 384\\r\\n', 'output': ['0\\r\\n']}, {'input': '4 2\\r\\n-215 -620 192 647\\r\\n', 'output': ['835\\r\\n']}, {'input': '10 6\\r\\n557 605 685 231 910 633 130 838 -564 -85\\r\\n', 'output': ['649\\r\\n']}, {'input': '20 14\\r\\n932 442 960 943 624 624 955 998 631 910 850 517 715 123 1000 155 -10 961 966 59\\r\\n', 'output': ['10\\r\\n']}, {'input': '30 5\\r\\n991 997 996 967 977 999 991 986 1000 965 984 997 998 1000 958 983 974 1000 991 999 1000 978 961 992 990 998 998 978 998 1000\\r\\n', 'output': ['0\\r\\n']}, {'input': '50 20\\r\\n-815 -947 -946 -993 -992 -846 -884 -954 -963 -733 -940 -746 -766 -930 -821 -937 -937 -999 -914 -938 -936 -975 -939 -981 -977 -952 -925 -901 -952 -978 -994 -957 -946 -896 -905 -836 -994 -951 -887 -939 -859 -953 -985 -988 -946 -829 -956 -842 -799 -886\\r\\n', 'output': ['19441\\r\\n']}, {'input': '88 64\\r\\n999 999 1000 1000 999 996 995 1000 1000 999 1000 997 998 1000 999 1000 997 1000 993 998 994 999 998 996 1000 997 1000 1000 1000 997 1000 998 997 1000 1000 998 1000 998 999 1000 996 999 999 999 996 995 999 1000 998 999 1000 999 999 1000 1000 1000 996 1000 1000 1000 997 1000 1000 997 999 1000 1000 1000 1000 1000 999 999 1000 1000 996 999 1000 1000 995 999 1000 996 1000 998 999 999 1000 999\\r\\n', 'output': ['0\\r\\n']}, {'input': '99 17\\r\\n-993 -994 -959 -989 -991 -995 -976 -997 -990 -1000 -996 -994 -999 -995 -1000 -983 -979 -1000 -989 -968 -994 -992 -962 -993 -999 -983 -991 -979 -995 -993 -973 -999 -995 -995 -999 -993 -995 -992 -947 -1000 -999 -998 -982 -988 -979 -993 -963 -988 -980 -990 -979 -976 -995 -999 -981 -988 -998 -999 -970 -1000 -983 -994 -943 -975 -998 -977 -973 -997 -959 -999 -983 -985 -950 -977 -977 -991 -998 -973 -987 -985 -985 -986 -984 -994 -978 -998 -989 -989 -988 -970 -985 -974 -997 -981 -962 -972 -995 -988 -993\\r\\n', 'output': ['16984\\r\\n']}, {'input': '100 37\\r\\n205 19 -501 404 912 -435 -322 -469 -655 880 -804 -470 793 312 -108 586 -642 -928 906 605 -353 -800 745 -440 -207 752 -50 -28 498 -800 -62 -195 602 -833 489 352 536 404 -775 23 145 -512 524 759 651 -461 -427 -557 684 -366 62 592 -563 -811 64 418 -881 -308 591 -318 -145 -261 -321 -216 -18 595 -202 960 -4 219 226 -238 -882 -963 425 970 -434 -160 243 -672 -4 873 8 -633 904 -298 -151 -377 -61 -72 -677 -66 197 -716 3 -870 -30 152 -469 981\\r\\n', 'output': ['21743\\r\\n']}, {'input': '100 99\\r\\n-931 -806 -830 -828 -916 -962 -660 -867 -952 -966 -820 -906 -724 -982 -680 -717 -488 -741 -897 -613 -986 -797 -964 -939 -808 -932 -810 -860 -641 -916 -858 -628 -821 -929 -917 -976 -664 -985 -778 -665 -624 -928 -940 -958 -884 -757 -878 -896 -634 -526 -514 -873 -990 -919 -988 -878 -650 -973 -774 -783 -733 -648 -756 -895 -833 -974 -832 -725 -841 -748 -806 -613 -924 -867 -881 -943 -864 -991 -809 -926 -777 -817 -998 -682 -910 -996 -241 -722 -964 -904 -821 -920 -835 -699 -805 -632 -779 -317 -915 -654\\r\\n', 'output': ['81283\\r\\n']}, {'input': '100 14\\r\\n995 994 745 684 510 737 984 690 979 977 542 933 871 603 758 653 962 997 747 974 773 766 975 770 527 960 841 989 963 865 974 967 950 984 757 685 986 809 982 959 931 880 978 867 805 562 970 900 834 782 616 885 910 608 974 918 576 700 871 980 656 941 978 759 767 840 573 859 841 928 693 853 716 927 976 851 962 962 627 797 707 873 869 988 993 533 665 887 962 880 929 980 877 887 572 790 721 883 848 782\\r\\n', 'output': ['0\\r\\n']}, {'input': '100 84\\r\\n768 946 998 752 931 912 826 1000 991 910 875 962 901 952 958 733 959 908 872 840 923 826 952 980 974 980 947 955 959 822 997 963 966 933 829 923 971 999 926 932 865 984 974 858 994 855 949 941 992 861 951 949 991 711 763 728 935 485 716 907 869 952 960 859 909 963 978 942 968 933 923 909 997 962 687 764 924 774 875 1000 961 951 987 974 848 921 966 859 995 997 974 931 886 941 974 986 906 978 998 823\\r\\n', 'output': ['0\\r\\n']}, {'input': '100 80\\r\\n-795 -994 -833 -930 -974 -980 -950 -940 -788 -927 -583 -956 -945 -949 -809 -974 -957 -736 -967 -908 -975 -961 -986 -983 -963 -771 -952 -847 -751 -741 -982 -959 -925 -931 -839 -937 -880 -914 -858 -998 -812 -911 -862 -965 -943 -984 -738 -920 -950 -998 -909 -998 -781 -901 -677 -940 -985 -951 -675 -952 -967 -949 -882 -641 -969 -937 -975 -993 -913 -941 -807 -851 -832 -960 -939 -943 -895 -929 -528 -880 -823 -930 -888 -862 -948 -966 -962 -857 -799 -969 -833 -998 -952 -878 -946 -971 -976 -974 -723 -992\\r\\n', 'output': ['75068\\r\\n']}, {'input': '1 1\\r\\n0\\r\\n', 'output': ['0\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '1 1\\r\\n555\\r\\n', 'output': ['0\\r\\n']}, {'input': '1 1\\r\\n-1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 1\\r\\n-24\\r\\n', 'output': ['24\\r\\n']}]", "source_code": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint m = sc.nextInt();\n\t\tint[] arr = new int[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tarr[i] = sc.nextInt();\n\t\t}\n\t\tArrays.sort(arr);\n\t\tint sum = 0;\n\t\tfor(int i = 0; i < m; i++) {\n\t\t\tif(arr[i] < 0) {\n\t\t\t\tsum += arr[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(sum);\n\t}\n}\n"}
{"src_uid": "69850c2af99d60711bcff5870575e15e", "id": 87, "lang_cluster": "java", "lang": "Java 11", "difficulty": 800, "testcases": "[{'input': '3\\r\\n5 6\\r\\n1 2\\r\\n', 'output': ['5\\r\\n']}, {'input': '3\\r\\n5 6\\r\\n1 3\\r\\n', 'output': ['11\\r\\n']}, {'input': '2\\r\\n55\\r\\n1 2\\r\\n', 'output': ['55\\r\\n']}, {'input': '3\\r\\n85 78\\r\\n1 3\\r\\n', 'output': ['163\\r\\n']}, {'input': '4\\r\\n63 4 49\\r\\n2 3\\r\\n', 'output': ['4\\r\\n']}, {'input': '5\\r\\n93 83 42 56\\r\\n2 5\\r\\n', 'output': ['181\\r\\n']}, {'input': '6\\r\\n22 9 87 89 57\\r\\n1 6\\r\\n', 'output': ['264\\r\\n']}, {'input': '7\\r\\n52 36 31 23 74 78\\r\\n2 7\\r\\n', 'output': ['242\\r\\n']}, {'input': '8\\r\\n82 14 24 5 91 49 94\\r\\n3 8\\r\\n', 'output': ['263\\r\\n']}, {'input': '9\\r\\n12 40 69 39 59 21 59 5\\r\\n4 6\\r\\n', 'output': ['98\\r\\n']}, {'input': '10\\r\\n95 81 32 59 71 30 50 61 100\\r\\n1 6\\r\\n', 'output': ['338\\r\\n']}, {'input': '15\\r\\n89 55 94 4 15 69 19 60 91 77 3 94 91 62\\r\\n3 14\\r\\n', 'output': ['617\\r\\n']}, {'input': '20\\r\\n91 1 41 51 95 67 92 35 23 70 44 91 57 50 21 8 9 71 40\\r\\n8 17\\r\\n', 'output': ['399\\r\\n']}, {'input': '25\\r\\n70 95 21 84 97 39 12 98 53 24 78 29 84 65 70 22 100 17 69 27 62 48 35 80\\r\\n8 23\\r\\n', 'output': ['846\\r\\n']}, {'input': '30\\r\\n35 69 50 44 19 56 86 56 98 24 21 2 61 24 85 30 2 22 57 35 59 84 12 77 92 53 50 92 9\\r\\n1 16\\r\\n', 'output': ['730\\r\\n']}, {'input': '35\\r\\n2 34 47 15 27 61 6 88 67 20 53 65 29 68 77 5 78 86 44 98 32 81 91 79 54 84 95 23 65 97 22 33 42 87\\r\\n8 35\\r\\n', 'output': ['1663\\r\\n']}, {'input': '40\\r\\n32 88 59 36 95 45 28 78 73 30 97 13 13 47 48 100 43 21 22 45 88 25 15 13 63 25 72 92 29 5 25 11 50 5 54 51 48 84 23\\r\\n7 26\\r\\n', 'output': ['862\\r\\n']}, {'input': '45\\r\\n83 74 73 95 10 31 100 26 29 15 80 100 22 70 31 88 9 56 19 70 2 62 48 30 27 47 52 50 94 44 21 94 23 85 15 3 95 72 43 62 94 89 68 88\\r\\n17 40\\r\\n', 'output': ['1061\\r\\n']}, {'input': '50\\r\\n28 8 16 29 19 82 70 51 96 84 74 72 17 69 12 21 37 21 39 3 18 66 19 49 86 96 94 93 2 90 96 84 59 88 58 15 61 33 55 22 35 54 51 29 64 68 29 38 40\\r\\n23 28\\r\\n', 'output': ['344\\r\\n']}, {'input': '60\\r\\n24 28 25 21 43 71 64 73 71 90 51 83 69 43 75 43 78 72 56 61 99 7 23 86 9 16 16 94 23 74 18 56 20 72 13 31 75 34 35 86 61 49 4 72 84 7 65 70 66 52 21 38 6 43 69 40 73 46 5\\r\\n28 60\\r\\n', 'output': ['1502\\r\\n']}, {'input': '70\\r\\n69 95 34 14 67 61 6 95 94 44 28 94 73 66 39 13 19 71 73 71 28 48 26 22 32 88 38 95 43 59 88 77 80 55 17 95 40 83 67 1 38 95 58 63 56 98 49 2 41 4 73 8 78 41 64 71 60 71 41 61 67 4 4 19 97 14 39 20 27\\r\\n9 41\\r\\n', 'output': ['1767\\r\\n']}, {'input': '80\\r\\n65 15 43 6 43 98 100 16 69 98 4 54 25 40 2 35 12 23 38 29 10 89 30 6 4 8 7 96 64 43 11 49 89 38 20 59 54 85 46 16 16 89 60 54 28 37 32 34 67 9 78 30 50 87 58 53 99 48 77 3 5 6 19 99 16 20 31 10 80 76 82 56 56 83 72 81 84 60 28\\r\\n18 24\\r\\n', 'output': ['219\\r\\n']}, {'input': '90\\r\\n61 35 100 99 67 87 42 90 44 4 81 65 29 63 66 56 53 22 55 87 39 30 34 42 27 80 29 97 85 28 81 22 50 22 24 75 67 86 78 79 94 35 13 97 48 76 68 66 94 13 82 1 22 85 5 36 86 73 65 97 43 56 35 26 87 25 74 47 81 67 73 75 99 75 53 38 70 21 66 78 38 17 57 40 93 57 68 55 1\\r\\n12 44\\r\\n', 'output': ['1713\\r\\n']}, {'input': '95\\r\\n37 74 53 96 65 84 65 72 95 45 6 77 91 35 58 50 51 51 97 30 51 20 79 81 92 10 89 34 40 76 71 54 26 34 73 72 72 28 53 19 95 64 97 10 44 15 12 38 5 63 96 95 86 8 36 96 45 53 81 5 18 18 47 97 65 9 33 53 41 86 37 53 5 40 15 76 83 45 33 18 26 5 19 90 46 40 100 42 10 90 13 81 40 53\\r\\n6 15\\r\\n', 'output': ['570\\r\\n']}, {'input': '96\\r\\n51 32 95 75 23 54 70 89 67 3 1 51 4 100 97 30 9 35 56 38 54 77 56 98 43 17 60 43 72 46 87 61 100 65 81 22 74 38 16 96 5 10 54 22 23 22 10 91 9 54 49 82 29 73 33 98 75 8 4 26 24 90 71 42 90 24 94 74 94 10 41 98 56 63 18 43 56 21 26 64 74 33 22 38 67 66 38 60 64 76 53 10 4 65 76\\r\\n21 26\\r\\n', 'output': ['328\\r\\n']}, {'input': '97\\r\\n18 90 84 7 33 24 75 55 86 10 96 72 16 64 37 9 19 71 62 97 5 34 85 15 46 72 82 51 52 16 55 68 27 97 42 72 76 97 32 73 14 56 11 86 2 81 59 95 60 93 1 22 71 37 77 100 6 16 78 47 78 62 94 86 16 91 56 46 47 35 93 44 7 86 70 10 29 45 67 62 71 61 74 39 36 92 24 26 65 14 93 92 15 28 79 59\\r\\n6 68\\r\\n', 'output': ['3385\\r\\n']}, {'input': '98\\r\\n32 47 26 86 43 42 79 72 6 68 40 46 29 80 24 89 29 7 21 56 8 92 13 33 50 79 5 7 84 85 24 23 1 80 51 21 26 55 96 51 24 2 68 98 81 88 57 100 64 84 54 10 14 2 74 1 89 71 1 20 84 85 17 31 42 58 69 67 48 60 97 90 58 10 21 29 2 21 60 61 68 89 77 39 57 18 61 44 67 100 33 74 27 40 83 29 6\\r\\n8 77\\r\\n', 'output': ['3319\\r\\n']}, {'input': '99\\r\\n46 5 16 66 53 12 84 89 26 27 35 68 41 44 63 17 88 43 80 15 59 1 42 50 53 34 75 16 16 55 92 30 28 11 12 71 27 65 11 28 86 47 24 10 60 47 7 53 16 75 6 49 56 66 70 3 20 78 75 41 38 57 89 23 16 74 30 39 1 32 49 84 9 33 25 95 75 45 54 59 17 17 29 40 79 96 47 11 69 86 73 56 91 4 87 47 31 24\\r\\n23 36\\r\\n', 'output': ['514\\r\\n']}, {'input': '100\\r\\n63 65 21 41 95 23 3 4 12 23 95 50 75 63 58 34 71 27 75 31 23 94 96 74 69 34 43 25 25 55 44 19 43 86 68 17 52 65 36 29 72 96 84 25 84 23 71 54 6 7 71 7 21 100 99 58 93 35 62 47 36 70 68 9 75 13 35 70 76 36 62 22 52 51 2 87 66 41 54 35 78 62 30 35 65 44 74 93 78 37 96 70 26 32 71 27 85 85 63\\r\\n43 92\\r\\n', 'output': ['2599\\r\\n']}, {'input': '51\\r\\n85 38 22 38 42 36 55 24 36 80 49 15 66 91 88 61 46 82 1 61 89 92 6 56 28 8 46 80 56 90 91 38 38 17 69 64 57 68 13 44 45 38 8 72 61 39 87 2 73 88\\r\\n15 27\\r\\n', 'output': ['618\\r\\n']}, {'input': '2\\r\\n3\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n6 8 22 22\\r\\n2 3\\r\\n', 'output': ['8\\r\\n']}, {'input': '6\\r\\n3 12 27 28 28\\r\\n3 4\\r\\n', 'output': ['27\\r\\n']}, {'input': '9\\r\\n1 2 2 2 2 3 3 5\\r\\n3 7\\r\\n', 'output': ['9\\r\\n']}, {'input': '10\\r\\n1 1 1 1 1 1 1 1 1\\r\\n6 8\\r\\n', 'output': ['2\\r\\n']}, {'input': '20\\r\\n1 1 1 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 3\\r\\n5 17\\r\\n', 'output': ['23\\r\\n']}, {'input': '25\\r\\n1 1 1 4 5 6 8 11 11 11 11 12 13 14 14 14 15 16 16 17 17 17 19 19\\r\\n4 8\\r\\n', 'output': ['23\\r\\n']}, {'input': '35\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\r\\n30 31\\r\\n', 'output': ['2\\r\\n']}, {'input': '45\\r\\n1 1 1 1 2 2 2 2 2 2 2 3 3 3 3 3 3 4 5 5 5 5 6 6 6 6 6 6 6 7 7 7 7 8 8 8 9 9 9 9 9 10 10 10\\r\\n42 45\\r\\n', 'output': ['30\\r\\n']}, {'input': '50\\r\\n1 8 8 13 14 15 15 16 19 21 22 24 26 31 32 37 45 47 47 47 50 50 51 54 55 56 58 61 61 61 63 63 64 66 66 67 67 70 71 80 83 84 85 92 92 94 95 95 100\\r\\n4 17\\r\\n', 'output': ['285\\r\\n']}, {'input': '60\\r\\n1 2 4 4 4 6 6 8 9 10 10 13 14 18 20 20 21 22 23 23 26 29 30 32 33 34 35 38 40 42 44 44 46 48 52 54 56 56 60 60 66 67 68 68 69 73 73 74 80 80 81 81 82 84 86 86 87 89 89\\r\\n56 58\\r\\n', 'output': ['173\\r\\n']}, {'input': '70\\r\\n1 2 3 3 4 5 5 7 7 7 8 8 8 8 9 9 10 12 12 12 12 13 16 16 16 16 16 16 17 17 18 18 20 20 21 23 24 25 25 26 29 29 29 29 31 32 32 34 35 36 36 37 37 38 39 39 40 40 40 40 41 41 42 43 44 44 44 45 45\\r\\n62 65\\r\\n', 'output': ['126\\r\\n']}, {'input': '80\\r\\n1 1 1 1 1 1 1 1 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 4 4 4 4 5 5 5 5 5 5 5 6 7 7 7 7 7 7 8 8 8 8 9 9 9 9 9 9 9 9 9 10 10 10 10 10 10 10 10 10 11 11 11 11 11 11 11 12 12 12 12 12 12 12 12\\r\\n17 65\\r\\n', 'output': ['326\\r\\n']}, {'input': '90\\r\\n1 1 3 5 8 9 10 11 11 11 11 12 13 14 15 15 15 16 16 19 19 20 22 23 24 25 25 28 29 29 30 31 33 34 35 37 37 38 41 43 43 44 45 47 51 54 55 56 58 58 59 59 60 62 66 67 67 67 68 68 69 70 71 72 73 73 76 77 77 78 78 78 79 79 79 82 83 84 85 85 87 87 89 93 93 93 95 99 99\\r\\n28 48\\r\\n', 'output': ['784\\r\\n']}, {'input': '95\\r\\n2 2 3 3 4 6 6 7 7 7 9 10 12 12 12 12 13 14 15 16 17 18 20 20 20 20 21 21 21 21 22 22 22 22 22 23 23 23 25 26 26 27 27 27 28 29 29 30 30 31 32 33 34 36 37 37 38 39 39 39 42 43 43 43 45 47 48 50 50 51 52 53 54 54 54 55 55 55 58 59 60 61 61 61 61 62 62 63 64 65 66 67 67 67\\r\\n64 93\\r\\n', 'output': ['1636\\r\\n']}, {'input': '96\\r\\n1 1 2 3 3 5 8 9 9 10 10 10 11 11 11 11 11 12 13 13 13 14 15 15 16 16 17 17 17 17 18 18 20 20 20 21 21 21 23 24 24 25 25 26 27 27 27 27 29 29 29 30 30 30 32 32 32 32 32 32 33 33 34 34 34 35 35 35 36 36 37 37 37 38 39 40 41 41 41 41 42 42 43 43 45 45 45 46 46 47 47 49 50 52 52\\r\\n76 96\\r\\n', 'output': ['898\\r\\n']}, {'input': '98\\r\\n2 3 4 4 5 7 8 10 10 10 11 11 12 12 12 12 13 14 15 15 16 16 18 19 19 20 21 21 21 21 22 23 24 25 26 26 27 27 27 27 29 29 30 30 31 31 37 40 40 40 41 41 41 42 43 44 44 44 46 46 47 49 49 50 50 50 51 53 55 55 56 56 56 56 56 57 57 58 59 60 60 60 62 62 63 64 64 64 65 66 66 67 68 70 70 71 71\\r\\n8 90\\r\\n', 'output': ['3016\\r\\n']}, {'input': '99\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n66 95\\r\\n', 'output': ['29\\r\\n']}, {'input': '100\\r\\n1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 3 3 3 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11 12 12 12 13 13 13 13 13 13 13 13 13 13 14 14 14 14 14 14 15 15 15 15 15 15 16 16 16 17 17\\r\\n39 52\\r\\n', 'output': ['82\\r\\n']}, {'input': '51\\r\\n5 7 9 16 19 25 26 29 29 30 31 32 32 41 43 44 47 49 50 50 51 52 54 55 56 63 64 66 67 70 74 74 77 78 79 80 80 85 86 87 89 89 90 92 93 94 94 95 95 97\\r\\n3 44\\r\\n', 'output': ['2268\\r\\n']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint[] d = new int[n];\n\t\tfor (int i = 0; i < n - 1; i++) {\n\t\t\td[i] = Integer.parseInt(st.nextToken());\n\t\t}\n\t\tst = new StringTokenizer(br.readLine());\n\t\tint a = Integer.parseInt(st.nextToken()) - 1;\n\t\tint b = Integer.parseInt(st.nextToken()) - 1;\n\t\tint sum = 0;\n\t\tfor (int i = a; i < b; i++) {\n\t\t\tsum += d[i];\n\t\t}\n\t\tSystem.out.println(sum);\n\t}\n}"}
{"src_uid": "b1ef19d7027dc82d76859d64a6f43439", "id": 88, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1100, "testcases": "[{'input': 'Instead of dogging Your footsteps it disappears but you dont notice anything\\r\\nwhere is your dog\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'Instead of dogging Your footsteps it disappears but you dont notice anything\\r\\nYour dog is upstears\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'Instead of dogging your footsteps it disappears but you dont notice anything\\r\\nYour dog is upstears\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'abcdefg hijk\\r\\nk j i h g f e d c b a\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'HpOKgo\\r\\neAtAVB\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'GRZGc\\r\\nLPzD\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'GtPXu\\r\\nd\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'FVF\\r\\nr \\r\\n', 'output': ['NO\\r\\n']}, {'input': 'HpOKgo\\r\\nogK\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'GRZGc\\r\\nZG\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'HpOKgoueAtAVBdGffvQheJDejNDHhhwyKJisugiRAH OseK yUwqPPNuThUxTfthqIUeb wS jChGOdFDarNrKRT  MlwKecxWNoKEeD BbiHAruE XMlvKYVsJGPP\\r\\nAHN  XvoaNwV  AVBKwKjr u      U K wKE D K   Jy KiHsR h d W  Js IHyMPK Br iSqe  E fDA   g H\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'GRZGcsLPzDrCSXhhNTaibJqVphhjbcPoZhCDUlzAbDnRWjHvxLKtpGiFWiGbfeDxBwCrdJmJGCGv GebAOinUsFrlqKTILOmxrFjSpEoVGoTdSSstJWVgMLKMPettxHASaQZNdOIObcTxtF qTHWBdNIKwj\\r\\nWqrxze Ji x q aT GllLrRV jMpGiMDTwwS JDsPGpAZKACmsFCOS CD Sj  bCDgKF  jJxa RddtLFAi VGLHH SecObzG q  hPF \\r\\n', 'output': ['YES\\r\\n']}, {'input': 'GtPXuwdAxNhODQbjRslDDKciOALJrCifTjDQurQEBeFUUSZWwCZQPdYwZkYbrduMijFjgodAOrKIuUKwSXageZuOWMIhAMexyLRzFuzuXqBDTEaWMzVdbzhxDGSJC SsIYuYILwpiwwcObEHWpFvHeBkWYNitqYrxqgHReHcKnHbtjcWZuaxPBVPb\\r\\nTQIKyqFaewOkY lZUOOuxEw EwuKcArxRQGFYkvVWIAe SuanPeHuDjquurJu aSxwgOSw jYMwjxItNUUArQjO BIujAhSwttLWp\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'FVFSr unvtXbpKWF vPaAgNaoTqklzVqiGYcUcBIcattzBrRuNSnKUtmdGKbjcE\\r\\nUzrU K  an GFGR        Wc zt iBa     P c    T K v p     V In   b           B   c\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'lSwjnYLYtDNIZjxHiTawdh ntSzggZogcIZTuiTMWVgwyloMtEhqkrOxgIcFvwvsboXUPILPIymFAEXnhApewJXJNtFyZ\\r\\nAoxe  jWZ u  yImg  o AZ FNI w lpj  tNhT g y  ZYcb rc J    w Dlv\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'kvlekcdJqODUKdsJlXkRaileTmdGwUHWWgvgUokQxRzzbpFnswvNKiDnjfOFGvFcnaaiRnBGQmqoPxDHepgYasLhzjDgmvaFfVNEcSPVQCJKAbSyTGpXsAjIHr\\r\\nGjzUllNaGGKXUdYmDFpqFAKIwvTpjmqnyswWRTnxlBnavAGvavxJemrjvRJc\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'kWbvhgvvoYOhwXmgTwOSCDXrtFHhqwvMlCvsuuAUXMmWaYXiqHplFZZemhgkTuvsUtIaUxtyYauBIpjdbyYxjZ ZkaBPzwqPfqF kCqGRmXvWuabnQognnkvdNDtRUsSUvSzgBuxCMBWJifbxWegsknp\\r\\nBsH   bWHJD n Ca T xq  PRCv  tatn Wjy sm  I q s WCjFqdWe  t W XUs  Do  eb Pfh ii  hTbF  O Fll\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'OTmLdkMhmDEOMQMiW ZpzEIjyElHFrNCfFQDp SZyoZaEIUIpyCHfwOUqiSkKtFHggrTBGkqfOxkChPztmPrsHoxVwAdrxbZLKxPXHlMnrkgMgiaHFopiFFiUEtKwCjpJtwdwkbJCgA bxeDIscFdmHQJLAMNhWlrZisQrHQpvbALWTwpf jnx\\r\\nDbZwrQbydCdkJMCrftiwtPFfpMiwwrfIrKidEChKECxQUBVUEfFirbGWiLkFQkdJiFtkrtkbIAEXCEDkwLpK\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'NwcGaIeSkOva\\r\\naIa\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'gSrAcVYgAdbdayzbKGhIzLDjyznLRIJH KyvilAaEddmgkBPCNzpmPNeGEbmmpAyHvUSoPvnaORrPUuafpReEGoDOQsAYnUHYfBqhdcopQfxJuGXgKnbdVMQNhJYkyjiJDKlShqBTtnnDQQzEijOMcYRGMgPGVhfIReYennKBLwDTVvcHMIHMgVpJkvzTrezxqS\\r\\nHJerIVvRyfrPgAQMTI AqGNO mQDfDwQHKgeeYmuRmozKHILvehMPOJNMRtPTAfvKvsoGKi xHEeKqDAYmQJPUXRJbIbHrgVOMGMTdvYiLui\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'ReB hksbHqQXxUgpvoNK bFqmNVCEiOyKdKcAJQRkpeohpfuqZabvrLfmpZOMcfyFBJGZwVMxiUPP pbZZtJjxhEwvrAba\\r\\nJTCpQnIViIGIdQtLnmkVzmcbBZR CoxAdTtWSYpbOglDFifqIVQ vfGKGtLpxpJHiHSWCMeRcrVOXBGBhoEnVhNTPWGTOErNtSvokcGdgZXbgTEtISUyTwaXUEIlJMmutsdCbiyrPZPJyRdOjnSuAGttLy\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'hrLzRegCuDGxTrhDgVvM KowwyYuXGzIpcXdSMgeQVfVOtJZdkhNYSegwFWWoPqcZoeapbQnyCtojgkcyezUNHGGIZrhzsKrvvcrtokIdcnqXXkCNKjrOjrnEAKBNxyDdiMVeyLvXxUYMZQRFdlcdlcxzKTeYzBlmpNiwWbNAAhWkMoGpRxkCuyqkzXdKWwGH\\r\\nJESKDOfnFdxPvUOCkrgSBEPQHJtJHzuNGstRbTCcchRWJvCcveSEAtwtOmZZiW\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'yDBxCtUygQwWqONxQCcuAvVCkMGlqgC zvkfEkwqbhMCQxnkwQIUhucCbVUyOBUcXvTNEGriTBwMDMfdsPZgWRgIUDqM\\r\\neptVnORTTyixxmWIBpSTEwOXqGZllBgSxPenYCDlFwckJlWsoVwWLAIbPOmFqcKcTcoQqahetl KLfVSyaLVebzsGwPSVbtQAeUdZAaJtfxlCEvvaRhLlVvRJhKat IaB awdqcDlrrhTbRxjEbzGwcdmdavkhcjHjzmwbxAgw\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'jlMwnnotSdlQMluKWkJwAeCetcqbIEnKeNyLWoKCGONDRBQOjbkGpUvDlmSFUJ bWhohqmmIUWTlDsvelUArAcZJBipMDwUvRfBsYzMdQnPDPAuBaeJmAxVKwUMJrwMDxNtlrtAowVWqWiwFGtmquZAcrpFsLHCrvMSMMlvQUqypAihQWrFMNoaqfs IBg\\r\\nNzeWQ bafrmDsYlpNHSGTBBgPl WIcuNhyNaNOEFvL\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'zyWvXBcUZqGqjHwZHQryBtFliLYnweXAoMKNpLaunaOlzaauWmLtywsEvWPiwxJapocAFRMjrqWJXYqfKEbBKnzLO\\r\\npsbi bsXpSeJaCkIuPWfSRADXdIClxcDCowwJzGCDTyAl\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'kKhuIwRPLCwPFfcnsyCfBdnsraGeOCcLTfXuGjqFSGPSAeDZJSS bXKFanNqWjpFnvRpWxHJspvisDlADJBioxXNbVoXeUedoPcNEpUyEeYxdJXhGzFAmpAiHotSVwbZQsuWjIVhVaEGgqbZHIoDpiEmjTtFylCwCkWWzUOoUfOHxEZvDwNpXhBWamHn\\r\\nK VpJjGhNbwCRhcfmNGVjewBFpEmPlIKeTuWiukDtEWpjgqciqglkyNfWrBLbGAKvlNWxaUelJmSlSoakSpRzePvJsshOsTYrMPXdxKpaShjyVIXGhRIAdtiGpNwtiRmGTBZhkJqIMdxMHX RMxCMYcWjcjhtCHyFnCvjjezGbkRDRiVxkbh\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'AXssNpFKyQmJcBdBdfkhhMUzfqJVgcLBddkwtnFSzSRUCjiDcdtmkzIGkCKSxWUEGhmHmciktJyGMkgCductyHx\\r\\nI nYhmJfPnvoKUiXYUBIPIcxNYTtvwPUoXERZvY ahlDpQFNMmVZqEBiYqYlHNqcpSCmhFczBlOAhsYFeqMGfqL EJsDNOgwoJfBzqijKOFcYQ\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'lkhrzDZmkdbjzYKPNMRkiwCFoZsMzBQMnxxdKKVJezSBjnLjPpUYtabcPTIaDJeDEobbWHdKOdVfMQwDXzDDcSrwVenDEYpMqfiOQ xSsqApWnAMoyhQXCKFzHvvzvUvkWwmwZrvZz\\r\\nsUzGspYpRFsHRbRgTQuCBgnFgPkisTUfFNwyEEWWRiweWWgjRkVQxgTwxOzdsOwfrGIH O gCXpzvHzfItuEHaihmugEyymSJIogYwX qAwcwIItidfnzZDhZgQHi eRjMAeVkJHceDZuJkmxGowOsmcGYYvk Ajtgi TxwihvjLViNZjvscTWvsaQUelTSivLShhEl\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'BRsVjyNhrqRHVwrJzuzRigEhdpbDmaACSPfed\\r\\nlWqKTjlrqOCUbgBBZdZDGCeQJDXawPnnDkQdZDgwrEQk\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'KRmINuyBYPwiTsdlyiNVuylToysJKmOpcLovAtwGPqrgFJQNAYvuAiyQRkeFMECVZvkDEmTauXlyjAaYRnTJXORMZRnTakBaUzSelMilejySDIZjQjzcOIrwXdvDvpeRIkoBgreyFXIyyIZutjiEBtwrmzQtPVUhvvdEtDMbXjBpoPVjGdM EXTAK JbCnw\\r\\nXZZqlJvzKKtvdNlzFPDTYxidqlsgufVzyEmO FZuLQ vVQsJESNviUCovCK NwwlbxsmPtOJNmAonCqrOZ bZ LVKAsQGmoLnYjeekvEIECFk\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString s1 = br.readLine();\n\t\tString s2 = br.readLine();\n\t\tString[] s1a = s1.split(\" \");\n\t\tString[] s2a = s2.split(\" \");\n\t\tHashMap<String, Integer> map = new HashMap<String, Integer>();\n\t\tfor (int i = 0; i < s1a.length; i++) {\n\t\t\tif (map.containsKey(s1a[i])) {\n\t\t\t\tmap.put(s1a[i], map.get(s1a[i]) + 1);\n\t\t\t} else {\n\t\t\t\tmap.put(s1a[i], 1);\n\t\t\t}\n\t\t}\n\t\tboolean flag = true;\n\t\tfor (int i = 0; i < s2a.length; i++) {\n\t\t\tif (map.containsKey(s2a[i])) {\n\t\t\t\tmap.put(s2a[i], map.get(s2a[i]) - 1);\n\t\t\t\tif (map.get(s2a[i]) == 0) {\n\t\t\t\t\tmap.remove(s2a[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag && map.size() == 0) {\n\t\t\tSystem.out.println(\"YES\");\n\t\t} else {\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\t}\n}"}
{"src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "id": 89, "lang_cluster": "java", "lang": "Java 11", "difficulty": 800, "testcases": "[{'input': '10\\r\\n', 'output': ['2 4 7 1 6 2 9 7 6\\r\\n']}, {'input': '3\\r\\n', 'output': ['2 1\\r\\n']}, {'input': '4\\r\\n', 'output': ['2 4 3\\r\\n']}, {'input': '5\\r\\n', 'output': ['2 4 2 1\\r\\n']}, {'input': '6\\r\\n', 'output': ['2 4 1 5 4\\r\\n']}, {'input': '7\\r\\n', 'output': ['2 4 7 4 2 1\\r\\n']}, {'input': '8\\r\\n', 'output': ['2 4 7 3 8 6 5\\r\\n']}, {'input': '9\\r\\n', 'output': ['2 4 7 2 7 4 2 1\\r\\n']}, {'input': '2\\r\\n', 'output': ['2\\r\\n']}, {'input': '11\\r\\n', 'output': ['2 4 7 11 5 11 7 4 2 1\\r\\n']}, {'input': '12\\r\\n', 'output': ['2 4 7 11 4 10 5 1 10 8 7\\r\\n']}, {'input': '13\\r\\n', 'output': ['2 4 7 11 3 9 3 11 7 4 2 1\\r\\n']}, {'input': '20\\r\\n', 'output': ['2 4 7 11 16 2 9 17 6 16 7 19 12 6 1 17 14 12 11\\r\\n']}, {'input': '25\\r\\n', 'output': ['2 4 7 11 16 22 4 12 21 6 17 4 17 6 21 12 4 22 16 11 7 4 2 1\\r\\n']}, {'input': '30\\r\\n', 'output': ['2 4 7 11 16 22 29 7 16 26 7 19 2 16 1 17 4 22 11 1 22 14 7 1 26 22 19 17 16\\r\\n']}, {'input': '35\\r\\n', 'output': ['2 4 7 11 16 22 29 2 11 21 32 9 22 1 16 32 14 32 16 1 22 9 32 21 11 2 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '40\\r\\n', 'output': ['2 4 7 11 16 22 29 37 6 16 27 39 12 26 1 17 34 12 31 11 32 14 37 21 6 32 19 7 36 26 17 9 2 36 31 27 24 22 21\\r\\n']}, {'input': '45\\r\\n', 'output': ['2 4 7 11 16 22 29 37 1 11 22 34 2 16 31 2 19 37 11 31 7 29 7 31 11 37 19 2 31 16 2 34 22 11 1 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '50\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 6 17 29 42 6 21 37 4 22 41 11 32 4 27 1 26 2 29 7 36 16 47 29 12 46 31 17 4 42 31 21 12 4 47 41 36 32 29 27 26\\r\\n']}, {'input': '55\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 1 12 24 37 51 11 27 44 7 26 46 12 34 2 26 51 22 49 22 51 26 2 34 12 46 26 7 44 27 11 51 37 24 12 1 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '60\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 7 19 32 46 1 17 34 52 11 31 52 14 37 1 26 52 19 47 16 46 17 49 22 56 31 7 44 22 1 41 22 4 47 31 16 2 49 37 26 16 7 59 52 46 41 37 34 32 31\\r\\n']}, {'input': '65\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 2 14 27 41 56 7 24 42 61 16 37 59 17 41 1 27 54 17 46 11 42 9 42 11 46 17 54 27 1 41 17 59 37 16 61 42 24 7 56 41 27 14 2 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '70\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 9 22 36 51 67 14 32 51 1 22 44 67 21 46 2 29 57 16 46 7 39 2 36 1 37 4 42 11 51 22 64 37 11 56 32 9 57 36 16 67 49 32 16 1 57 44 32 21 11 2 64 57 51 46 42 39 37 36\\r\\n']}, {'input': '75\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 4 17 31 46 62 4 22 41 61 7 29 52 1 26 52 4 32 61 16 47 4 37 71 31 67 29 67 31 71 37 4 47 16 61 32 4 52 26 1 52 29 7 61 41 22 4 62 46 31 17 4 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '80\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 12 26 41 57 74 12 31 51 72 14 37 61 6 32 59 7 36 66 17 49 2 36 71 27 64 22 61 21 62 24 67 31 76 42 9 57 26 76 47 19 72 46 21 77 54 32 11 71 52 34 17 1 66 52 39 27 16 6 77 69 62 56 51 47 44 42 41\\r\\n']}, {'input': '85\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 7 21 36 52 69 2 21 41 62 84 22 46 71 12 39 67 11 41 72 19 52 1 36 72 24 62 16 56 12 54 12 56 16 62 24 72 36 1 52 19 72 41 11 67 39 12 71 46 22 84 62 41 21 2 69 52 36 21 7 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '90\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 2 16 31 47 64 82 11 31 52 74 7 31 56 82 19 47 76 16 47 79 22 56 1 37 74 22 61 11 52 4 47 1 46 2 49 7 56 16 67 29 82 46 11 67 34 2 61 31 2 64 37 11 76 52 29 7 76 56 37 19 2 76 61 47 34 22 11 1 82 74 67 61 56 52 49 47 46\\r\\n']}, {'input': '95\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 11 26 42 59 77 1 21 42 64 87 16 41 67 94 27 56 86 22 54 87 26 61 2 39 77 21 61 7 49 92 41 86 37 84 37 86 41 92 49 7 61 21 77 39 2 61 26 87 54 22 86 56 27 94 67 41 16 87 64 42 21 1 77 59 42 26 11 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '96\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 10 25 41 58 76 95 19 40 62 85 13 38 64 91 23 52 82 17 49 82 20 55 91 32 70 13 53 94 40 83 31 76 26 73 25 74 28 79 35 88 46 5 61 22 80 43 7 68 34 1 65 34 4 71 43 16 86 61 37 14 88 67 47 28 10 89 73 58 44 31 19 8 94 85 77 70 64 59 55 52 50 49\\r\\n']}, {'input': '97\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 9 24 40 57 75 94 17 38 60 83 10 35 61 88 19 48 78 12 44 77 14 49 85 25 63 5 45 86 31 74 21 66 15 62 13 62 15 66 21 74 31 86 45 5 63 25 85 49 14 77 44 12 78 48 19 88 61 35 10 83 60 38 17 94 75 57 40 24 9 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '98\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 8 23 39 56 74 93 15 36 58 81 7 32 58 85 15 44 74 7 39 72 8 43 79 18 56 95 37 78 22 65 11 56 4 51 1 50 2 53 7 60 16 71 29 86 46 7 67 30 92 57 23 88 56 25 93 64 36 9 81 56 32 9 85 64 44 25 7 88 72 57 43 30 18 7 95 86 78 71 65 60 56 53 51 50\\r\\n']}, {'input': '99\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 7 22 38 55 73 92 13 34 56 79 4 29 55 82 11 40 70 2 34 67 2 37 73 11 49 88 29 70 13 56 1 46 92 40 88 38 88 40 92 46 1 56 13 70 29 88 49 11 73 37 2 67 34 2 70 40 11 82 55 29 4 79 56 34 13 92 73 55 38 22 7 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '100\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 6 21 37 54 72 91 11 32 54 77 1 26 52 79 7 36 66 97 29 62 96 31 67 4 42 81 21 62 4 47 91 36 82 29 77 26 76 27 79 32 86 41 97 54 12 71 31 92 54 17 81 46 12 79 47 16 86 57 29 2 76 51 27 4 82 61 41 22 4 87 71 56 42 29 17 6 96 87 79 72 66 61 57 54 52 51\\r\\n']}]", "source_code": "import java.util.*;\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint[] arr = new int[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tarr[i] = i + 1;\n\t\t}\n\t\tint count = 1;\n\t\tfor(int i = 0; i < n - 1; i++) {\n\t\t\tSystem.out.print(arr[count] + \" \");\n\t\t\tcount = (count + n / count) % n;\n\t\t}\n\t\tSystem.out.println(arr[count]);\n\t}\n}\n"}
{"src_uid": "b9dacff0cab78595296d697d22dce5d9", "id": 90, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1000, "testcases": "[{'input': '5\\r\\nPetr 3 1 490 920 1000 1200 0\\r\\ntourist 2 0 490 950 1100 1400 0\\r\\nEgor 7 0 480 900 950 0 1000\\r\\nc00lH4x0R 0 10 150 0 0 0 0\\r\\nsome_participant 2 1 450 720 900 0 0\\r\\n', 'output': ['tourist']}, {'input': '1\\r\\nA 0 0 200 0 0 0 0\\r\\n', 'output': ['A']}, {'input': '2\\r\\n12345678901234567890 1 0 200 0 0 0 0\\r\\n_ 1 0 201 0 0 0 0\\r\\n', 'output': ['_']}, {'input': '5\\r\\nAb 0 0 481 900 1200 1600 2000\\r\\nCd 0 0 480 899 1200 1600 2000\\r\\nEf 0 0 480 900 1200 1600 2000\\r\\ngH 0 0 480 900 1200 1599 2000\\r\\nij 0 0 480 900 1199 1600 2001\\r\\n', 'output': ['Ab']}, {'input': '4\\r\\nF1 0 0 150 0 0 0 0\\r\\nF2 0 1 0 0 0 0 0\\r\\nF3 0 2 0 0 0 0 0\\r\\nF4 0 3 0 0 0 0 0\\r\\n', 'output': ['F1']}, {'input': '2\\r\\nA87h 5 0 199 0 0 0 0\\r\\nBcfg 7 0 0 0 0 0 0\\r\\n', 'output': ['Bcfg']}, {'input': '10\\r\\nKh 40 26 0 0 0 0 1243\\r\\nn 46 50 500 0 910 1912 0\\r\\nU 18 1 182 0 457 0 0\\r\\nFth6A0uT6i 38 30 0 787 0 1121 0\\r\\nC5l 24 38 0 689 1082 0 0\\r\\nN 47 25 0 0 1065 0 1538\\r\\nznyL 9 24 0 315 0 0 0\\r\\nJ0kU 27 47 445 0 0 0 0\\r\\nlT0rwiD2pg 46 13 0 818 0 0 0\\r\\nuJzr 29 14 0 0 0 0 2387\\r\\n', 'output': ['N']}, {'input': '2\\r\\nminus_one 0 4 199 0 0 0 0\\r\\nminus_two 0 4 198 0 0 0 0\\r\\n', 'output': ['minus_one']}, {'input': '10\\r\\nW22kb1L1 0 39 0 465 0 1961 865\\r\\n1MCXiVYmu5ys0afl 0 38 0 0 0 1982 1241\\r\\nCxg706kUJtQ 0 23 211 0 0 1785 1056\\r\\nmzEY 0 16 0 0 0 1988 1404\\r\\nv8JUjmam5SFP 0 48 0 788 1199 1426 0\\r\\n7giq 0 21 0 780 1437 1363 1930\\r\\nsXsUGbAulj6Lbiq 0 32 205 0 0 603 0\\r\\nRepIrY1Er4PgK 0 13 381 872 927 1488 0\\r\\nleKBdKHLnLFz 0 29 220 0 0 1006 889\\r\\nD 0 26 497 0 0 0 1815\\r\\n', 'output': ['7giq']}, {'input': '1\\r\\nZ 0 0 0 0 0 0 0\\r\\n', 'output': ['Z']}, {'input': '3\\r\\nAbcd 0 4 189 0 0 0 0\\r\\nDefg 0 5 248 0 0 0 0\\r\\nGhh 1 3 0 0 0 0 0\\r\\n', 'output': ['Defg']}, {'input': '3\\r\\ndf 0 6 0 0 0 0 0\\r\\njnm 1 8 300 0 0 0 0\\r\\n_ub_ 3 20 300 310 0 0 0\\r\\n', 'output': ['jnm']}, {'input': '1\\r\\njhgcyt 0 50 0 0 0 0 0\\r\\n', 'output': ['jhgcyt']}, {'input': '2\\r\\njhv 0 50 500 1000 1500 2000 2500\\r\\nPetr 2 1 489 910 1100 1300 1000\\r\\n', 'output': ['jhv']}, {'input': '3\\r\\nufu 0 50 0 0 0 0 0\\r\\nhzEr65f 1 50 0 0 0 0 0\\r\\nytdttjfhfd 0 50 150 0 0 0 0\\r\\n', 'output': ['ytdttjfhfd']}, {'input': '5\\r\\nufuf 0 50 0 0 0 0 0\\r\\nyfycy 50 0 500 1000 1500 2000 2500\\r\\n__u77 6 7 490 999 1456 1976 1356\\r\\n0 1 2 0 0 0 0 2452\\r\\ngu7fF 50 0 500 1000 1500 2000 2499\\r\\n', 'output': ['yfycy']}, {'input': '2\\r\\nhfy 0 50 0 0 0 0 2500\\r\\nugug 0 50 0 0 0 0 2499\\r\\n', 'output': ['hfy']}, {'input': '8\\r\\nA 0 0 0 0 0 0 0\\r\\nb 0 0 0 0 0 0 0\\r\\nc 0 0 0 0 0 0 0\\r\\nD 0 0 0 0 0 0 0\\r\\nE 1 0 0 0 0 0 0\\r\\nF 0 0 0 0 0 0 0\\r\\ng 0 0 0 0 0 0 0\\r\\nH 0 0 0 0 0 0 0\\r\\n', 'output': ['E']}, {'input': '2\\r\\nyyyc 50 50 0 0 0 0 0\\r\\nydd 0 0 0 0 0 0 2499\\r\\n', 'output': ['yyyc']}, {'input': '2\\r\\ntom 0 2 0 0 0 0 0\\r\\nmac 0 1 0 0 0 0 0\\r\\n', 'output': ['mac']}, {'input': '1\\r\\ncool 0 10 0 0 0 0 0\\r\\n', 'output': ['cool']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tString[] s = new String[n];\n\t\tint[] p = new int[n];\n\t\tint[] m = new int[n];\n\t\tint[] a = new int[n];\n\t\tint[] b = new int[n];\n\t\tint[] c = new int[n];\n\t\tint[] d = new int[n];\n\t\tint[] e = new int[n];\n\t\tint[] score = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString[] ss = br.readLine().split(\" \");\n\t\t\ts[i] = ss[0];\n\t\t\tp[i] = Integer.parseInt(ss[1]);\n\t\t\tm[i] = Integer.parseInt(ss[2]);\n\t\t\ta[i] = Integer.parseInt(ss[3]);\n\t\t\tb[i] = Integer.parseInt(ss[4]);\n\t\t\tc[i] = Integer.parseInt(ss[5]);\n\t\t\td[i] = Integer.parseInt(ss[6]);\n\t\t\te[i] = Integer.parseInt(ss[7]);\n\t\t\tscore[i] = p*100-m*50+a+b+c+d+e;\n\t\t}\n\t\tint max = score[0];\n\t\tint index = 0;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tif (score[i] > max) {\n\t\t\t\tmax = score[i];\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(s[index]);\n\t}\n}\n"}
{"src_uid": "40002052843ca0357dbd3158b16d59f4", "id": 91, "lang_cluster": "java", "lang": "Java 11", "difficulty": 2700, "testcases": "[{'input': '3\\r\\n2 1 4\\r\\n', 'output': ['5']}, {'input': '4\\r\\n3 1 4 4\\r\\n', 'output': ['6']}, {'input': '4\\r\\n3 1 4 1\\r\\n', 'output': ['6']}, {'input': '5\\r\\n3 1 4 1 5\\r\\n', 'output': ['11']}, {'input': '11\\r\\n5000 5000 5000 5000 5000 5000 0 1 0 1 0\\r\\n', 'output': ['77835']}, {'input': '1\\r\\n0\\r\\n', 'output': ['0']}, {'input': '1\\r\\n1\\r\\n', 'output': ['0']}, {'input': '4\\r\\n0 1 1 0\\r\\n', 'output': ['0']}, {'input': '17\\r\\n1 9 2 8 4 5 7 3 8 4 6 2 8 4 1 0 5\\r\\n', 'output': ['87']}, {'input': '4\\r\\n57 918 827 953\\r\\n', 'output': ['7835']}, {'input': '51\\r\\n17 26 14 0 41 18 40 14 29 25 5 23 46 20 8 14 12 27 8 38 9 42 17 16 31 2 5 45 16 35 37 1 46 27 27 16 20 38 11 48 11 3 23 40 10 46 31 47 32 49 17\\r\\n', 'output': ['2366']}, {'input': '95\\r\\n28 12 46 4 24 37 23 19 7 22 29 34 10 10 9 11 9 17 26 23 8 42 12 31 33 39 25 17 1 41 30 21 11 26 14 43 19 24 32 14 3 42 29 47 40 16 27 43 33 28 6 25 40 4 0 21 5 36 2 3 35 38 49 41 32 34 0 27 30 44 45 18 2 6 1 50 13 22 20 20 7 5 16 18 13 15 15 36 39 37 31 35 48 38 8\\r\\n', 'output': ['4286']}, {'input': '49\\r\\n27 12 48 48 9 10 29 50 48 48 48 48 11 14 18 27 48 48 48 48 1 48 33 48 27 48 48 48 12 16 48 48 22 48 48 36 31 32 31 48 50 43 20 48 48 48 48 48 16\\r\\n', 'output': ['3484']}, {'input': '17\\r\\n12 12 5 1 3 12 4 2 12 12 12 12 6 12 7 12 0\\r\\n', 'output': ['179']}, {'input': '70\\r\\n50 0 50 0 0 0 0 0 0 50 50 50 50 0 50 50 0 50 50 0 0 0 50 50 0 0 50 0 50 0 50 0 0 50 0 0 0 0 50 50 50 50 0 0 0 0 0 0 0 0 50 0 50 50 0 50 0 0 0 0 50 0 50 0 0 50 0 50 0 0\\r\\n', 'output': ['3024']}, {'input': '295060\\r\\n38 23 17 20 28 38 38 28 32 7 20 0 14 31 41 16 46 39 41 8 40 14 33 36 11 2 40 8 19 36 13 29 4 22 4 12 17 38 50 35 10 40 21 7 21 2 27 34 30 40 22 37 20 5 12 42 33 16 22 45 14 26 16 27 7 24 48 1 15 40 0 27 47 25 29 42 23 23 16 17 20 1 6 38 12 0 19 34 20 43 44 8 47 23 17 5 38 40 43 46 12 29 41 10 2 4 23 22 24 45 42 39 11 19 0 4 7 1 0 13 42 3 42 49 43 39 22 36 47 17 0 35 39 15 42 16 6 20 17 43 17 4 4 30 14 45 3 7 47 12 10 41 16 45 11 5 13 37 49 36 44 24 38 3 48 26 5 10 26 32 4 35 13 40 9 42 42 40 36 22 ...', 'output': ['14408680']}, {'input': '68484\\r\\n45 1 16 1 50 16 29 39 50 46 28 5 11 28 19 5 41 23 15 30 20 7 18 6 30 27 35 31 33 13 3 1 12 11 46 28 42 17 13 5 43 36 21 45 1 38 39 36 29 10 42 6 26 37 26 3 36 0 45 27 2 9 42 33 45 39 21 19 48 14 10 14 20 12 47 38 29 32 37 17 50 10 29 6 5 48 37 48 24 26 36 7 4 26 12 42 40 35 32 22 17 35 9 47 11 13 10 10 4 13 32 23 30 26 22 20 20 0 49 38 33 16 46 50 21 40 2 15 13 26 16 3 22 47 37 35 23 34 22 40 22 12 42 13 39 25 46 25 47 12 1 43 25 1 32 25 26 18 8 50 27 45 45 9 42 25 12 27 48 6 15 2 14 41 3 7 6 0 29 2...', 'output': ['3345881']}, {'input': '1000000\\r\\n3722 452 4276 30 137 3139 4268 4696 1846 2667 4961 3074 4236 4685 4087 2731 3444 4322 4932 2801 3270 3 1629 4477 3073 4958 3274 760 978 4270 3836 1343 4543 1770 2995 2073 3085 1190 4630 635 3582 1483 1953 990 4430 1546 1787 916 3572 2781 189 1832 2275 3122 714 931 4259 2670 241 3550 387 1032 3317 3802 1423 160 1717 1783 3911 4966 1947 4002 1905 2708 3798 4609 2264 399 4637 705 19 1194 1688 1682 1543 3335 521 4343 3036 3527 398 3205 444 1392 1226 3770 3775 4669 3394 3907 3857 4711 3696 2203 395 222...', 'output': ['7607420444']}, {'input': '1000000\\r\\n522 4027 3242 3953 143 2524 1807 4590 574 4082 4545 59 1875 3013 2181 906 2440 892 727 1900 57 480 1275 1115 4406 2958 4632 3920 1901 1611 1826 3199 2393 1268 1140 1549 3367 3625 4123 4996 4480 3553 1483 1236 3965 4973 4534 4546 2637 1999 1073 929 4043 1343 1310 850 188 1005 4228 2198 388 1001 2549 4137 212 3001 3231 1987 3806 2926 4746 355 1552 431 635 3372 1820 396 1425 3998 1362 3213 2589 4102 2081 761 438 409 902 4512 1274 520 1789 3499 414 2074 542 1784 1706 2436 199 1508 4900 1968 527 1815 3...', 'output': ['7605550222']}, {'input': '1000000\\r\\n2976 2807 1350 3599 2725 1350 2266 3745 1350 1350 1607 4715 1803 1350 1350 2355 1350 1350 1350 1350 1350 1350 3814 1008 2634 4272 153 1350 2335 1350 1350 2952 2395 1187 2912 1392 1350 208 1350 1350 2711 1350 4116 195 130 3661 2624 1350 1350 3561 1350 1350 1350 1350 1350 1350 1350 3830 4407 1056 1350 1350 3003 1212 1350 2702 1469 1483 1025 3345 1350 4493 1350 1350 1350 3324 1350 1350 1693 2153 1350 4035 1772 1350 1350 1350 1350 1469 2034 3780 1920 1050 1350 1350 1350 1921 4707 3667 1350 1350 1887 1...', 'output': ['5780430738']}, {'input': '1000000\\r\\n935 1374 1374 1834 1431 4393 1520 1678 1374 917 4059 1374 1374 1374 4957 1374 808 1374 1374 1374 1374 122 1374 1374 1374 3800 396 1374 1374 1374 1374 878 1374 648 1374 1374 1374 1374 2763 845 1374 1374 1374 1122 1374 1374 1374 1374 1374 1374 1374 1374 4696 1915 3392 1374 3781 1374 3861 4681 1864 1374 1374 2556 1978 1374 4166 1374 4140 1374 1374 4675 1436 1374 3101 1374 1374 83 1374 1374 4251 143 1374 4060 2303 1374 341 1374 1374 1374 1374 1374 269 1374 4575 1925 1374 1374 1374 3286 1374 3996 1374 ...', 'output': ['5811523118']}, {'input': '1000000\\r\\noutput': ['1950296028']}, {'input': '1000000\\r\\n5000 0 5000 0 0 0 0 0 5000 0 0 5000 0 5000 0 0 0 5000 0 0 0 0 0 0 0 0 5000 0 0 5000 0 0 0 0 0 5000 0 0 5000 0 0 0 0 5000 5000 5000 0 0 5000 0 0 0 5000 5000 0 0 0 5000 5000 0 0 0 0 0 5000 0 5000 0 0 0 0 0 5000 5000 0 5000 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 5000 0 0 5000 0 0 0 0 5000 0 0 0 0 0 5000 5000 0 0 5000 0 0 0 0 0 0 0 0 0 5000 0 5000 5000 0 0 0 0 0 5000 5000 5000 5000 0 0 0 0 0 0 0 5000 5000 0 0 0 0 0 0 5000 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 5000 0 0 0 0 5000 5000 0 5000 ...', 'output': ['3888512064']}, {'input': '1000000\\r\\noutput': ['7779561549']}, {'input': '1000000\\r\\n5000 5000 5000 0 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 0 0 0 5000 0 5000 5000 0 5000 5000 5000 5000 5000 0 0 5000 0 5000 5000 0 0 5000 5000 0 0 0 5000 5000 0 0 5000 5000 0 5000 5000 0 5000 5000 0 5000 5000 0 5000 0 5000 5000 0 5000 5000 5000 0 5000 5000 5000 5000 0 5000 5000 5000 5000 5000 5000 0 0 5000 5000 0 5000 5000 0 5000 5000 5000 5000 5000 5000 5000 0 5000 5000 5000 5000 0 5000 0 5000 5000 5000 0 5000 5000 5000 5000 5000 5000 0 5000 5000 5000 5000 5000 5000 0 5000 0 0 5000 ...', 'output': ['3888449796']}, {'input': '1000000\\r\\noutput': ['1947260463']}, {'input': '1000000\\r\\noutput': ['0']}, {'input': '13\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 50\\r\\n', 'output': ['108']}, {'input': '45\\r\\n50 0 0 0 0 0 0 0 0 50 0 0 50 0 0 50 50 0 0 0 0 0 50 0 0 0 0 0 50 50 0 0 0 0 50 0 50 0 50 0 0 0 0 0 50\\r\\n', 'output': ['1296']}, {'input': '24\\r\\n50 0 50 50 50 0 50 50 0 50 50 50 50 50 0 50 50 0 50 50 50 50 50 50\\r\\n', 'output': ['540']}, {'input': '68\\r\\n50 50 50 50 50 50 50 50 0 0 50 50 50 50 50 50 50 50 50 50 50 50 0 50 50 50 50 50 50 50 50 50 50 50 0 50 50 50 50 50 50 50 50 50 50 50 50 50 0 50 50 0 0 50 50 50 50 50 50 50 50 0 50 50 50 50 50 50\\r\\n', 'output': ['864']}, {'input': '75\\r\\n2597 1818 260 4655 4175 2874 2987 4569 2029 4314 444 2276 4937 1209 1797 4965 3526 275 3535 2198 4402 2144 1369 13 4453 1655 4456 711 3563 1650 3997 885 782 147 2426 974 2917 2100 4549 2465 3015 3485 3238 4086 171 3934 1903 133 2278 2573 688 551 872 459 2044 1401 2429 4933 3747 587 2781 4173 4651 4012 1407 2352 1461 566 2062 4599 1430 2269 3914 1820 4728\\r\\n', 'output': ['565559']}, {'input': '29\\r\\n8 27 14 21 6 20 2 11 3 19 10 16 0 25 18 4 23 17 15 26 28 1 13 5 9 22 12 7 24\\r\\n', 'output': ['692']}, {'input': '87\\r\\n1120 1120 1120 872 1120 731 3583 2815 4019 1291 4568 973 1120 1705 1120 822 203 1120 1120 1120 1120 4196 3166 4589 3030 1120 1120 1120 711 1120 500 1120 1120 3551 1120 1120 1120 1700 1120 1120 2319 4554 1120 1312 1120 1120 4176 1120 1120 3661 1120 1120 1120 1120 142 63 4125 1120 4698 3469 1829 567 1120 1120 1083 486 1120 1120 1120 1120 3763 1120 247 4496 454 1120 1120 1532 1120 4142 352 1120 359 2880 1120 1120 4494\\r\\n', 'output': ['438276']}, {'input': '27\\r\\n9 1144 1144 2 8 1144 12 0 1144 1144 7 3 1144 1144 11 10 1 1144 1144 5 1144 4 1144 1144 1144 1144 6\\r\\n', 'output': ['43222']}, {'input': '27\\r\\n0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 5000 0 0 0 5000\\r\\n', 'output': ['62268']}, {'input': '59\\r\\n0 0 0 5000 0 0 0 5000 5000 0 5000 0 0 0 5000 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 5000 0 5000 0 5000 0 0 5000 0 5000 0 0 0 0 0 0 5000 0 0 0 0 5000 0 0 0 5000 0 0 0 5000\\r\\n', 'output': ['233505']}, {'input': '80\\r\\n0 0 0 0 5000 0 0 5000 5000 5000 0 5000 0 5000 5000 0 0 0 0 5000 5000 0 0 5000 0 5000 5000 5000 0 5000 0 5000 5000 5000 0 0 5000 0 0 5000 5000 0 0 5000 0 5000 5000 5000 0 0 5000 5000 5000 0 0 5000 0 0 5000 0 5000 5000 0 5000 0 5000 0 5000 0 5000 0 0 0 0 5000 5000 5000 0 0 0\\r\\n', 'output': ['591546']}, {'input': '20\\r\\n0 5000 5000 5000 5000 5000 0 5000 5000 0 5000 5000 5000 0 5000 5000 5000 5000 0 5000\\r\\n', 'output': ['77835']}, {'input': '78\\r\\n0 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 0 5000 5000 5000 5000 5000 5000 0 0 5000 5000 5000 5000 5000 0 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 0 5000 5000 0 5000 0 5000 5000 5000 5000 0 5000 5000 5000 5000 5000 5000 5000 0 5000 5000 0 0 0 5000 5000 5000 5000 0 5000 5000 5000 5000 5000 5000 0 5000 5000 0 5000\\r\\n', 'output': ['249072']}, {'input': '3241\\r\\n20 31 49 20 24 6 33 50 24 30 6 50 45 34 43 40 35 10 27 4 43 19 42 16 20 49 20 32 18 41 36 32 26 37 9 21 29 16 22 27 9 48 47 29 30 15 43 24 26 20 3 11 4 35 12 42 48 11 44 46 31 44 20 47 0 7 7 18 47 3 18 8 4 9 2 48 28 22 32 4 24 37 32 26 49 12 4 10 44 50 41 23 5 26 1 5 34 4 1 13 39 26 24 25 25 9 37 5 22 15 12 49 48 2 28 37 42 44 45 30 4 41 43 7 44 39 9 21 47 41 7 17 18 14 19 13 35 8 36 39 1 18 47 25 48 22 44 41 12 17 5 5 44 48 9 4 49 37 34 9 13 37 21 40 45 13 3 32 22 12 25 48 24 6 28 9 41 2 45 28 31 9 ...', 'output': ['160831']}, {'input': '3569\\r\\n11 34 14 46 1 12 5 13 5 46 35 8 36 28 7 16 16 47 29 45 27 36 47 22 2 33 5 38 23 34 24 48 15 27 20 14 31 8 18 15 44 10 47 28 17 36 34 48 10 48 29 35 31 15 19 17 26 42 15 45 21 16 9 31 30 32 50 12 48 37 46 2 10 32 36 8 38 25 20 3 26 7 35 33 38 6 16 30 42 38 47 16 20 23 36 30 20 24 38 5 1 16 40 31 14 6 10 27 2 4 32 1 12 6 43 43 34 32 19 9 47 34 22 37 9 50 33 18 45 42 20 19 49 20 49 25 3 41 36 46 41 21 21 26 43 50 37 23 11 34 32 3 32 42 35 6 18 45 47 16 19 33 2 34 35 44 11 47 13 24 10 31 13 37 48 42 22 3...', 'output': ['174332']}, {'input': '5489\\r\\n2 18 8 33 36 26 20 18 26 0 26 42 26 5 10 26 26 26 26 2 26 0 28 26 26 26 26 26 28 30 25 24 26 2 26 26 39 26 26 26 26 31 26 26 26 46 26 5 26 26 45 16 26 7 26 26 26 26 49 26 26 1 0 8 26 19 3 18 8 38 26 14 40 31 44 26 26 26 26 26 30 42 26 10 26 18 29 32 8 29 3 26 26 26 6 26 26 6 26 26 26 34 26 26 4 10 0 47 49 26 26 26 1 18 29 12 23 2 39 50 4 17 26 29 8 26 13 35 26 16 42 30 26 26 46 6 42 26 26 26 5 24 26 26 46 29 26 35 26 26 26 23 26 26 26 26 26 26 26 26 26 26 26 26 50 33 26 31 26 26 47 26 26 26 26 6 26 2...', 'output': ['260842']}, {'input': '5817\\r\\n41 18 41 41 25 41 41 39 1 6 41 40 41 41 41 41 0 41 41 41 41 17 41 41 41 39 41 12 41 0 41 36 40 41 41 41 41 11 41 27 13 41 29 41 22 41 41 33 14 19 18 41 41 32 41 5 41 2 34 13 47 41 41 41 41 45 18 41 43 42 41 12 9 41 41 41 35 10 41 41 41 41 44 41 41 30 41 7 25 41 46 42 41 12 41 41 48 13 23 41 17 41 44 41 1 41 24 3 41 41 41 26 41 41 6 7 41 0 10 2 16 29 41 34 41 39 36 41 3 41 41 36 2 24 35 38 36 37 41 41 38 8 42 36 0 35 37 2 41 28 41 38 36 13 41 41 16 41 31 43 1 38 19 23 41 41 41 17 9 41 25 41 45 19 10 4...', 'output': ['377254']}, {'input': '2871\\r\\noutput': ['37260']}, {'input': '2543\\r\\n0 0 0 0 50 50 0 0 0 0 0 0 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50 0 0 0 0 50 0 0 0 50 0 0 0 0 0 0 0 0 50 0 0 0 0 0 0 50 0 50 0 0 50 0 50 50 0 0 0 0 0 0 50 50 0 0 0 50 50 0 50 0 0 0 50 50 0 0 0 0 50 0 0 0 0 0 0 0 0 50 0 0 0 50 0 50 0 0 50 0 50 0 0 0 50 0 0 50 50 0 0 0 0 50 0 0 50 0 0 0 0 0 50 0 50 0 0 0 0 0 0 0 0 0 0 50 50 50 0 0 0 0 0 0 0 0 0 50 0 0 0 0 0 50 0 0 0 0 0 0 50 50 0 0 50 0 0 50 0 0 0 0 0 0 0 0 0 50 50 0 0 0 0 50 0 0 50 0 0 50 50 0 0 0 50 50 0 0 50 0 0 0 0 0 0 0 0 0 50 0 50 0 0 0 0 0 0 0 0 0 0 0...', 'output': ['66744']}, {'input': '6658\\r\\n50 50 50 0 0 50 0 0 50 0 0 50 50 0 50 50 0 0 50 50 0 50 50 50 50 0 50 0 0 50 50 0 50 0 0 0 0 0 50 0 0 0 50 0 50 50 50 50 0 50 0 50 50 50 50 50 50 50 0 0 50 0 0 50 0 50 0 0 50 50 50 0 0 0 0 0 50 0 0 0 50 0 0 0 50 0 50 0 50 50 50 50 0 0 50 50 0 50 50 0 0 0 50 50 0 0 50 50 0 0 0 50 0 0 50 50 50 50 50 0 0 0 0 50 50 50 50 0 0 0 0 0 0 0 50 0 50 50 50 0 0 0 50 0 50 50 50 50 50 0 0 50 50 0 0 0 0 50 0 50 0 50 50 0 0 0 50 50 0 50 50 50 0 50 0 0 0 0 0 50 50 50 0 50 0 0 0 0 0 0 50 50 0 0 50 50 0 50 50 0 50 50 0 ...', 'output': ['357156']}, {'input': '7782\\r\\n50 50 0 0 0 50 50 50 50 50 50 50 0 50 50 0 50 50 50 50 50 50 0 50 50 50 0 50 50 0 0 50 50 0 0 50 50 50 50 50 0 50 50 0 50 50 50 50 50 50 50 0 50 50 50 0 0 50 50 0 50 0 50 0 0 50 50 0 50 0 50 50 50 0 50 50 50 50 50 50 0 50 50 50 0 50 0 50 50 0 0 50 50 0 0 50 50 50 50 50 0 50 50 50 0 0 50 50 50 0 50 0 50 0 0 50 0 50 50 50 50 50 50 50 50 50 50 50 50 50 50 0 50 0 50 50 50 0 50 50 50 50 0 50 0 50 50 50 50 50 50 50 0 50 50 50 50 50 50 50 50 50 0 0 0 50 0 0 50 50 50 50 50 50 50 50 50 50 50 0 50 50 50 50 50 ...', 'output': ['202284']}, {'input': '8110\\r\\noutput': ['109080']}, {'input': '4463\\r\\n2612 1495 2859 1941 1446 2716 4690 4357 2841 4862 2243 3269 4454 995 3373 2249 4637 3365 2276 1330 3211 572 826 4368 2894 905 137 718 2081 3137 3718 4107 3420 1398 193 1255 504 325 879 3991 3579 4223 315 1854 418 1143 1822 4198 2589 1918 4633 1210 86 52 336 3709 2138 838 3815 866 595 3296 4810 699 234 2559 4523 349 3190 1770 267 987 489 2936 4000 907 4032 1122 293 1486 3054 4489 412 4844 3924 1750 1249 300 1593 2535 1028 1469 4747 4522 3000 1326 4214 2544 789 3632 2556 4190 2426 1185 2402 1880 3382 7...', 'output': ['33446396']}, {'input': '5587\\r\\n2623 467 1074 276 33 2358 829 2301 820 160 398 3363 4748 2942 4704 2516 1274 4663 634 4071 4825 143 2912 2888 2968 3925 3589 3793 3172 3541 3494 75 4914 342 2901 1959 45 4692 3580 1458 4080 3297 1947 2236 127 3280 3318 4024 1199 2520 4506 3727 4205 2762 4291 235 3535 2536 2526 2609 4920 2257 3986 2082 1471 2106 311 4015 3822 455 3335 2263 616 1187 464 390 1366 3124 4893 1719 4779 1197 2097 3292 1653 33 504 1596 1158 3852 3262 4875 428 854 1140 2848 3166 2498 1219 3806 556 4607 3368 421 1312 4387 4448...', 'output': ['38501618']}, {'input': '5915\\r\\n3291 884 4366 156 3584 3291 2124 2353 3291 3291 123 3989 805 3291 3291 3160 1562 3291 793 2707 3291 3291 3291 1504 3291 3291 891 3291 3291 3291 582 3291 3291 3291 3291 2333 715 4753 3291 3291 4111 4457 4577 3793 3291 3291 3291 1652 1916 3291 3882 251 912 4595 577 1650 3291 3291 3291 143 3506 1658 1944 3291 3291 3673 3291 3291 3291 646 3575 4523 3291 434 3291 1526 3291 3291 3853 4708 2083 3291 3291 2560 2032 825 3291 1770 3291 3291 2960 3291 1517 795 3291 3235 3601 2124 1798 3291 3291 1093 3291 3291 3...', 'output': ['51854645']}, {'input': '7039\\r\\n1790 834 1882 1790 1790 2803 2541 1790 3268 24 922 1790 1790 1790 2078 1790 939 1790 2717 1790 2404 1790 1790 1790 1480 1867 2257 3412 1790 1812 1790 1790 1790 3469 1790 2214 679 1919 3173 468 1790 1790 1790 2321 3045 1790 1790 1790 1329 1790 1790 1790 1790 1730 541 3140 1790 264 1604 2703 1790 1790 1790 2166 1790 1790 1790 1790 1790 949 1790 3427 1217 519 1790 1916 2692 1790 1199 2023 3315 1790 2503 1790 302 1790 1790 1790 1790 1790 2009 1790 1203 3040 1790 2836 1869 1790 1790 2613 1790 1790 2898 15...', 'output': ['37192065']}, {'input': '7716\\r\\n0 0 5000 0 0 0 0 0 0 0 5000 0 0 0 5000 0 0 0 0 0 5000 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 5000 0 5000 0 0 5000 0 0 0 0 0 0 5000 5000 5000 0 0 0 5000 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 5000 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 5000 0 0 0 5000 0 0 0 0 5000 5000 0 5000 0 0 0 0 0 0 0 0 0 5000 0 0 5000 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 5000 0 0 5000 0 0 0 5000 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['15317928']}, {'input': '6592\\r\\n0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 5000 0 5000 0 0 0 5000 5000 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 5000 0 0 0 5000 0 0 0 0 0 5000 5000 0 0 0 0 5000 0 0 5000 5000 0 0 5000 0 5000 0 0 0 5000 0 5000 0 0 0 0 0 5000 0 5000 0 0 5000 5000 0 0 0 0 0 0 0 0 5000 5000 5000 0 0 0 0 0 5000 0 0 0 0 5000 0 0 5000 0 0 0 5000 0 0 5000 5000 0 5000 0 0 0 0 5000 0 0 5000 0 0 0 0 5000 0 0 0 0 0 5000 5000 0 0 5000 0 0 0 5000 0 5000 0 0 5000 0 0 0 0 0 0 5000 0 0 0 5000 0 5000 5000 0 5000 5000 0 0 0 0 5000...', 'output': ['26993178']}, {'input': '6927\\r\\noutput': ['53675016']}, {'input': '8051\\r\\noutput': ['31865649']}, {'input': '8379\\r\\noutput': ['16516587']}, {'input': '831909\\r\\n17 49 28 4 26 17 17 17 34 17 3 18 17 0 28 17 17 45 17 17 17 7 13 17 17 17 17 17 17 17 17 17 19 0 17 43 17 17 17 17 43 17 17 17 17 6 36 17 27 19 47 17 44 0 17 17 20 24 17 17 17 32 15 17 17 25 30 17 17 17 18 3 47 17 17 45 17 17 20 40 3 17 29 17 17 17 17 40 17 17 17 17 31 17 4 47 24 17 19 17 39 17 37 17 47 13 17 3 17 17 20 17 17 48 17 49 34 18 17 13 20 30 19 17 17 17 17 17 12 47 22 42 29 17 20 17 17 17 32 7 7 17 17 17 17 17 46 32 20 17 5 17 17 50 17 17 38 21 17 36 37 18 17 38 17 11 9 8 17 17 48 29 25 ...', 'output': ['31683596']}, {'input': '258037\\r\\n33 8 33 0 33 33 33 48 33 16 40 33 38 23 33 33 33 33 33 4 46 33 17 17 33 6 33 27 33 19 5 33 10 33 27 33 48 12 33 33 33 20 23 33 33 28 11 33 33 33 28 33 50 33 33 33 33 5 33 33 33 33 35 47 33 33 33 3 13 11 33 17 33 33 33 38 33 33 44 3 33 33 33 31 33 33 33 33 33 33 18 8 29 10 33 33 33 33 15 1 37 7 7 33 17 5 33 31 38 33 27 44 17 38 33 33 49 33 33 2 33 33 30 33 31 13 39 46 33 18 28 41 42 33 14 33 33 33 10 8 33 33 33 33 33 33 33 46 33 33 33 25 34 22 33 39 33 30 24 33 33 1 33 44 15 15 33 41 20 33 45 33 27 ...', 'output': ['14441842']}, {'input': '328921\\r\\n50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50 0 0 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50 0 0 0 0 50 0 0 0 0 0 0 0 0 0 50 0 0 0 0 0 0 0 0 50 0 0 50 0 0 50 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50 0 0 0 0 0 0 0 0 0 0 0 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50 0 0 50 0 50 0 0 0 0 0 0 0 0 0 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50 0 0 0 0 0 0 0 0 0 0 0 0 50 0 50 0 0 0 0 0 0 50 0 0 0 0 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50 0 50 0 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...', 'output': ['4404996']}, {'input': '555497\\r\\noutput': ['14931972']}, {'input': '207904\\r\\n50 50 50 0 0 50 0 50 50 50 0 50 50 50 0 50 50 50 50 0 50 0 0 0 50 0 0 0 50 0 0 50 0 50 0 0 0 50 50 0 50 50 50 0 50 0 0 0 0 50 0 50 50 0 50 0 0 0 50 50 50 50 50 50 50 50 50 0 0 50 50 0 50 50 50 50 0 0 0 0 0 50 50 50 0 0 50 0 50 0 50 0 0 0 50 0 50 0 0 50 0 50 50 50 50 50 0 0 50 0 50 0 0 50 50 0 50 0 50 0 0 0 50 0 0 50 0 0 0 0 0 50 0 50 0 50 0 50 0 0 50 50 50 50 50 0 0 0 50 0 50 50 50 50 50 0 50 50 0 0 50 0 50 0 0 0 50 0 50 50 50 0 0 50 0 50 50 50 0 0 0 0 50 50 0 0 50 50 50 50 50 50 50 0 0 0 50 50 50 ...', 'output': ['11221740']}, {'input': '971328\\r\\n50 0 0 0 50 50 0 50 50 50 50 50 50 50 0 50 50 50 50 0 50 50 50 0 50 50 50 50 0 50 50 50 50 0 50 50 50 50 50 50 50 50 0 0 50 50 0 50 50 50 0 0 0 50 50 50 50 50 0 0 50 50 0 0 50 50 0 50 50 50 0 0 50 50 50 0 50 0 50 0 50 50 0 50 0 50 0 50 50 0 50 50 50 50 0 50 50 50 50 50 50 50 50 0 50 50 50 0 0 50 50 0 0 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 0 50 50 50 50 50 50 50 50 50 0 50 50 50 0 50 0 50 0 0 50 0 50 50 0 0 50 50 50 50 50 50 50 0 50 0 50 50 0 0 0 0 50 50 0 50 50 0 50 50 50 50 50 50 50 50 ...', 'output': ['26290440']}, {'input': '744752\\r\\noutput': ['10077264']}, {'input': '973217\\r\\n2233 4962 2835 1271 712 2124 3765 510 914 3364 2648 3399 744 3777 1516 739 3844 3879 261 863 2101 791 2276 1691 2145 1603 819 2340 415 3123 3260 1225 4746 4672 937 742 3927 25 2177 640 72 245 4053 3213 1322 3725 2842 883 216 4345 815 1534 633 4222 1677 2151 949 2691 2931 1897 1678 2599 4295 953 656 2864 2956 4134 4556 2839 3201 878 4447 270 1517 647 4010 3382 683 660 1393 785 3285 1115 1057 3672 3462 1434 882 122 505 3504 1946 1152 2997 3360 605 966 4034 4790 1344 1579 4482 2472 4484 3325 2852 543 ...', 'output': ['7404434821']}, {'input': '103937\\r\\n1662 2609 1161 2445 296 1285 3447 58 3521 1582 3524 1259 2360 3741 3130 4570 2215 3091 2032 3518 2969 3181 1414 1632 2101 4556 3642 1734 1388 4300 1631 182 1633 3970 1837 3967 1914 3162 915 2404 1208 4583 4334 279 747 2251 4671 4416 4752 3641 3811 1089 3213 740 1502 3880 2044 2766 777 3050 2475 4741 1121 2863 1065 4146 4872 2094 139 755 2780 4115 3442 2104 4030 1891 3037 2769 739 2274 3313 3098 2415 3909 4771 2761 1623 4084 3038 3130 4758 2667 3792 247 8 2846 3218 3485 3149 3845 470 4108 1031 484 3...', 'output': ['783928844']}, {'input': '520065\\r\\n756 4889 1279 756 756 756 756 4981 756 756 3514 3153 756 1559 563 3198 756 1696 756 1161 756 756 4853 1600 2623 3399 756 756 2736 756 756 756 756 756 4089 756 756 1407 3919 1546 1651 756 2430 756 756 756 756 756 756 4836 4582 1305 1304 763 756 4644 4890 756 3162 2611 3242 4455 1792 1882 756 2208 2014 4995 756 2947 2876 4738 756 756 1113 756 891 756 756 756 265 3619 756 756 756 4725 756 756 756 774 4476 4539 214 756 756 125 2452 3861 2363 2240 3842 756 4106 756 1183 756 756 756 756 756 1798 1694 793...', 'output': ['2532637708']}, {'input': '293489\\r\\n1084 4053 780 780 950 694 780 3823 780 780 2601 780 780 1469 3089 780 780 780 780 4707 780 2191 3268 2411 2892 171 3953 4307 340 1869 780 780 4373 4183 3523 780 2859 1053 780 1433 780 780 780 780 780 320 780 780 780 780 1948 2097 780 4234 780 780 780 4624 3124 780 780 3087 780 335 4642 780 780 2633 780 1447 780 780 4153 4532 780 780 3217 780 2340 2143 4089 2517 2085 780 2774 4590 3449 780 780 780 780 3715 4933 1026 2606 780 780 780 927 1997 3757 3730 780 780 780 780 780 4839 1369 780 602 780 1430 2...', 'output': ['1431772162']}, {'input': '546122\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 5000 0 5000 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 5000 0 0 0 0 5000 0 0 0 0 0 5000 0 0 0 0 5000 0 0 0 0 0 0 0 5000 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 5000 5000 5000 5000 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0...', 'output': ['1063817646']}, {'input': '772698\\r\\n0 5000 0 5000 0 0 0 0 0 5000 5000 0 0 0 0 5000 0 5000 0 0 0 5000 0 0 0 0 0 0 5000 5000 0 0 0 0 0 5000 0 0 0 0 0 5000 5000 0 5000 0 5000 0 0 0 0 5000 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 5000 0 0 0 0 5000 0 5000 5000 0 0 0 5000 0 0 0 5000 0 5000 5000 0 0 0 5000 0 0 0 5000 0 0 5000 0 0 0 0 0 0 5000 0 5000 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 5000 5000 0 0 0 0 5000 0 0 0 5000 0 0 0 0 0 5000 0 0 5000 5000 0 5000 0 0 0 0 5000 0...', 'output': ['3012463572']}, {'input': '331312\\r\\noutput': ['2575933758']}, {'input': '104736\\r\\noutput': ['409458801']}, {'input': '868160\\r\\noutput': ['1683384246']}, {'input': '652655\\r\\n3334 3647 3955 1615 3535 4170 4440 916 3449 2474 1705 3926 4990 3602 1931 3593 1063 1637 3035 3592 4867 1381 2636 4148 2037 3053 2672 4117 3999 3410 3987 3809 1214 2506 4227 1035 3947 2980 4434 4606 1941 506 2430 4660 4704 2335 3672 659 3575 4897 2110 3191 1255 4677 4945 1118 1910 2386 928 630 4433 1229 3359 4875 1579 912 3160 2739 967 2438 4642 2192 4582 4089 4592 4265 2103 1404 4987 2649 601 4729 1050 1838 3316 964 4887 3663 1072 1898 921 2139 1880 4576 4828 3720 4421 1337 2919 4725 573 4563 714 ...', 'output': ['5470312646']}, {'input': '426079\\r\\n2838 696 521 2882 1816 4549 1788 4865 847 828 3444 3010 3490 4211 1926 2653 1094 2830 1268 3453 4906 532 2632 1988 2018 3161 2738 4149 3293 3844 3397 4545 2797 920 2672 2489 3556 1906 4249 662 2529 3906 1460 2151 1230 2527 1916 1727 1206 1011 1446 2586 4323 999 3917 3068 2849 2543 4319 3752 3258 2376 3342 4053 1804 1481 4853 2579 1163 2305 1735 4229 4686 2331 1992 3311 3851 1731 2098 2361 4830 941 3025 1566 3201 1692 2927 1751 4691 1394 3965 3014 1311 3986 1112 1710 3773 555 2357 2535 1687 1859 276...', 'output': ['3563797440']}, {'input': '199503\\r\\n819 819 4407 819 2634 1942 1127 819 1841 2488 819 819 774 4506 4800 1081 599 3091 819 819 4720 3629 819 819 2127 819 1115 819 819 819 819 819 819 819 2505 4087 2733 819 819 819 4835 2398 819 1588 819 2857 3465 819 4081 4347 3965 3529 2022 819 819 2856 819 819 1121 1828 819 819 2151 1524 2595 819 819 819 3629 3952 819 819 819 819 855 819 819 819 4197 819 2830 1026 2311 2606 819 819 4789 1104 2866 819 819 4562 2823 819 819 819 4389 819 3175 819 1115 819 819 819 819 819 3432 3480 819 3975 2524 3140 81...', 'output': ['1068954149']}, {'input': '615631\\r\\n3009 3663 3663 3663 2397 2553 3747 2143 2156 2962 3663 3826 4164 3663 3663 1309 1934 3663 4312 1760 1737 4296 3663 4739 3663 3663 3663 3663 4846 3663 3663 3663 986 2467 3663 3663 3663 3663 3663 2818 3663 3663 3663 3663 3663 3372 3663 3663 3663 4656 3663 3663 4912 3720 3663 3663 3663 4085 3663 3663 3663 4188 1082 4132 4775 1118 3663 3561 1043 3663 2132 4242 4604 3663 3663 3663 3663 3663 3663 3476 3663 2419 3349 3663 3663 3663 1120 3663 3663 3663 3663 2097 3663 4132 3663 4381 4692 3349 3663 3663 2768...', 'output': ['6032856551']}, {'input': '201235\\r\\noutput': ['422388015']}, {'input': '427811\\r\\noutput': ['1809031255']}, {'input': '462860\\r\\noutput': ['3916819805']}, {'input': '236284\\r\\noutput': ['1003533735']}, {'input': '999708\\r\\noutput': ['2120768420']}, {'input': '1000000\\r\\n48 8 20 45 21 24 8 0 42 18 16 5 49 40 18 22 40 43 41 47 30 15 17 36 25 9 24 29 8 33 29 41 22 5 15 40 21 18 13 49 39 4 38 3 24 36 27 39 9 5 0 38 40 16 42 27 24 10 12 50 41 19 3 19 34 12 42 18 2 7 17 22 11 20 25 48 18 16 25 49 19 34 21 37 4 46 16 21 9 22 1 48 28 27 36 3 49 41 43 48 36 39 8 14 38 0 18 11 37 31 23 12 14 16 38 41 47 14 45 29 34 44 32 13 17 26 44 12 46 50 37 39 40 49 30 11 22 43 19 50 32 27 30 20 28 10 24 2 17 34 12 37 36 29 26 37 21 48 4 11 31 7 30 46 15 6 0 44 47 40 24 10 33 48 33 48 ...', 'output': ['48889749']}, {'input': '1000000\\r\\n14 46 0 25 40 23 14 44 34 31 11 45 22 44 30 13 12 10 5 13 50 46 12 44 18 45 16 11 34 6 37 3 46 18 18 42 42 5 39 24 4 7 35 2 24 24 48 7 44 30 41 44 26 38 41 13 20 23 41 40 48 41 24 2 2 45 47 32 17 44 8 47 46 3 31 2 12 6 34 38 49 41 35 9 40 5 46 24 4 5 30 18 21 15 29 32 49 50 8 40 44 34 24 32 36 34 32 14 18 22 29 4 4 11 31 0 25 28 47 27 17 15 32 9 5 19 45 36 33 44 47 14 18 42 33 40 19 5 25 26 32 6 0 27 37 15 25 49 49 2 35 50 2 13 45 31 15 18 22 28 36 32 5 39 44 41 17 38 1 25 18 17 48 40 3 3 31 29 19...', 'output': ['48862349']}, {'input': '1000000\\r\\n2 27 42 2 2 2 2 4 17 47 2 45 17 2 2 2 2 14 2 42 2 5 15 37 4 5 37 40 2 2 14 17 48 2 2 2 2 37 2 2 46 8 2 45 24 47 29 35 2 2 15 2 2 12 2 34 2 2 43 2 2 23 19 49 2 42 2 3 2 2 2 2 0 5 2 2 2 37 2 2 2 2 3 2 29 2 36 22 50 2 2 43 2 2 2 34 14 1 10 2 19 33 40 3 2 50 21 41 35 13 0 18 18 2 2 2 2 29 21 2 7 2 2 36 8 2 2 2 38 21 30 30 12 2 38 41 2 42 2 16 2 2 43 38 2 42 2 2 2 14 2 2 2 8 15 2 2 5 31 49 41 2 2 29 2 2 2 32 14 2 18 2 2 23 2 2 2 2 2 41 32 2 2 29 2 2 2 21 2 2 2 2 2 24 25 13 2 2 32 2 17 2 2 11 2 21 2 29 ...', 'output': ['24924286']}, {'input': '1000000\\r\\n32 18 30 28 18 36 18 16 18 8 19 18 43 18 18 18 18 18 46 16 18 15 18 4 31 20 26 6 18 14 18 0 18 14 18 17 38 5 30 41 50 18 47 31 18 1 18 18 18 7 18 19 18 12 2 8 26 18 18 18 0 18 17 18 18 18 36 18 44 18 18 18 18 18 18 45 18 43 18 28 37 18 18 18 18 18 5 18 24 18 18 18 18 5 15 19 18 49 18 3 18 18 47 39 18 19 18 2 18 18 32 18 48 31 18 18 12 18 14 28 5 10 5 18 18 46 18 18 18 42 18 9 18 3 18 18 18 7 35 16 18 18 18 18 10 18 18 39 18 41 33 30 10 18 24 18 34 32 18 15 3 15 18 18 1 34 22 18 41 17 18 10 18 18 1...', 'output': ['39529186']}, {'input': '1000000\\r\\noutput': ['13477752']}, {'input': '1000000\\r\\noutput': ['26977860']}, {'input': '1000000\\r\\n50 50 50 50 50 50 0 50 0 0 0 0 0 0 0 0 50 50 50 0 0 0 50 0 0 0 0 50 0 0 50 50 50 50 50 50 0 0 50 50 0 0 0 50 0 0 0 0 50 50 0 0 50 50 50 50 50 0 0 0 0 0 50 50 0 50 0 50 0 50 0 50 0 50 0 0 0 50 0 50 0 0 50 0 50 0 0 50 0 50 0 0 50 50 0 50 0 0 50 0 0 0 0 0 50 0 50 50 0 0 0 0 0 0 0 50 0 0 0 0 0 0 50 50 0 50 0 50 50 0 0 50 50 50 50 50 0 50 0 50 50 50 0 0 0 50 0 0 0 50 50 0 0 50 0 50 50 0 0 0 50 50 0 0 0 50 50 50 0 50 50 0 50 0 0 50 50 50 50 50 50 50 0 50 0 50 50 0 50 50 0 50 50 50 50 50 50 50 0 0 50 0 5...', 'output': ['53993952']}, {'input': '1000000\\r\\noutput': ['26987364']}, {'input': '1000000\\r\\noutput': ['13460904']}, {'input': '1000000\\r\\n4928 5000 4744 3545 3738 2132 1318 4951 2071 1952 2436 3340 2119 2695 4938 4493 4798 575 4969 3520 2191 2873 1960 4032 3857 4548 2212 3864 2948 3089 4829 1148 1656 4725 1963 2766 1319 1971 2937 2979 3194 1866 4461 1519 3195 704 2802 4208 4242 937 1797 2331 3923 801 1677 1718 3754 770 1402 1801 3480 1839 3134 1069 4671 4776 3159 1728 2554 2091 751 626 2234 1416 640 610 1634 4110 4476 1075 2240 3216 3739 4099 4694 925 2824 3432 4434 4320 3411 4658 1378 2193 4301 2762 3768 3874 3815 3882 2439 2911 45...', 'output': ['8384253798']}, {'input': '1000000\\r\\n4637 1302 2880 1973 4301 4845 2403 2820 3359 1121 1066 3885 1101 1911 2875 865 3402 3883 1943 2415 4562 693 1895 2528 2203 2858 3316 3183 3462 3194 1180 667 3088 1856 2257 684 4941 599 1784 4124 2997 729 4662 2207 1177 4995 2535 1128 2688 4949 989 2888 3918 2059 2028 1444 2432 4254 2685 1889 2049 2391 2534 2133 3021 3290 4710 3200 1581 1147 4271 2676 2283 598 1333 1733 3408 1993 2692 2252 4442 1469 3112 960 2265 1455 4820 2984 4120 4641 1432 3231 3896 960 1817 1911 3379 1879 1417 2363 4263 1442 30...', 'output': ['8374983176']}, {'input': '1000000\\r\\n1616 3742 1616 1616 1616 1616 1787 4057 1616 710 4642 3132 1616 1616 1280 1616 3392 1680 1616 1202 2794 1616 714 1036 1616 666 1616 1616 2066 1616 4643 1616 1616 2370 1393 4716 1616 1616 4295 960 2721 3010 1616 1616 1616 3783 1616 3737 2293 1921 2932 3666 4864 1616 1616 3161 1933 1616 2214 4578 1616 1616 2040 2520 1616 1616 4641 1616 1150 1616 1616 896 3297 1616 1616 1185 4532 1616 2888 1616 1616 1616 1246 1616 1616 1616 1616 4534 1616 1616 1753 1174 1616 940 1616 1616 1616 1616 3180 1616 737 2174...', 'output': ['6573578424']}, {'input': '1000000\\r\\n2691 1471 1769 1769 1769 2426 1769 1769 1769 1603 1769 1769 1769 1769 510 1567 1524 1666 1769 1769 1153 1769 1769 1769 2414 1769 1074 1769 3210 2644 1201 3796 1766 1769 1644 577 1769 1918 1855 1769 3024 1769 1769 2995 1769 1769 4565 1769 3576 864 1769 1769 3337 1769 1769 1945 4876 2367 704 1769 1769 3704 1769 3168 1769 2401 1769 2844 1769 4175 2420 4683 1769 1769 1769 3560 1769 1769 1769 1769 1769 2808 1769 4057 4544 1769 1769 2697 2150 1737 2724 1769 3524 1769 1769 3502 1769 1769 1769 1769 1620 2...', 'output': ['6808525559']}, {'input': '1000000\\r\\noutput': ['2113787080']}, {'input': '1000000\\r\\noutput': ['4241621565']}, {'input': '1000000\\r\\noutput': ['8464722245']}, {'input': '1000000\\r\\noutput': ['4229505890']}, {'input': '1000000\\r\\noutput': ['2122852655']}, {'input': '1000000\\r\\n3491 3862 4899 1602 3307 2481 2146 1000 2479 2072 1534 2587 3924 4181 4835 2449 1976 4441 2217 3227 3297 2989 1754 1498 3742 1437 3766 3234 1072 3972 2514 1055 3883 4655 3452 1827 1874 1349 3202 2450 2946 3550 3879 3214 3123 2445 3893 1771 4218 3032 1325 4404 1421 1531 3754 1412 3178 4801 3290 4438 3677 4018 3175 1981 3353 3939 1512 3645 3759 3630 3769 3848 2031 1011 1771 1278 3021 2768 4761 1697 3561 4706 1464 3090 4827 1058 1120 3602 1808 2849 2244 4170 1928 3584 4395 2628 3674 1812 4074 1723 35...', 'output': ['8999391475']}, {'input': '1000000\\r\\n4525 1819 4273 3463 1648 2372 4978 2585 2374 2402 3570 2924 1135 1647 4411 924 1539 2671 1396 1592 2253 3152 2052 4858 4538 2952 1123 1441 2052 2404 2073 4052 4954 1331 4834 2353 1980 3243 4991 1389 2920 2050 1337 3188 2953 2753 2451 2119 3315 2174 3910 3759 3410 4935 2996 1728 1229 1070 1719 3715 2233 1699 3794 1656 4410 4356 3740 4240 4249 3772 2740 3670 3711 4863 1584 4255 1217 3831 4379 2230 2132 1625 3418 1469 4672 4632 1416 979 1173 3364 1419 1460 3118 3410 1250 1531 4916 3057 4448 4483 3900...', 'output': ['9003221879']}, {'input': '1000000\\r\\n1442 3254 3079 1274 4816 1653 3079 3079 3079 1396 4595 2894 3079 3079 1060 3079 4646 3079 3079 3567 3079 3079 3079 1111 2788 3079 913 3020 1455 3026 3079 3079 4799 3079 1018 3079 3079 3079 3079 2703 4596 3079 3079 3079 3079 3790 4649 3079 3079 3803 1425 3079 1956 3886 3861 3663 3079 3121 2774 2577 4524 3079 3079 1760 3079 3079 3545 3079 3079 3079 1009 3079 3775 4972 4066 3079 1602 3079 1288 3079 3079 3079 3079 3079 3079 1482 3079 3079 3079 3079 3079 2153 3079 1233 4758 1729 3079 1361 2370 3522 119...', 'output': ['9192195816']}, {'input': '1000000\\r\\n3085 4754 3064 4924 4924 3593 3916 3300 4924 2820 3819 4924 2825 2127 4924 3321 3323 4924 2612 4924 4924 4924 4924 4924 2572 4357 4924 4924 1690 4012 3790 4924 4924 4924 4924 2601 1049 4032 3940 4651 3530 4924 2765 2847 3710 2400 3405 2217 4924 4924 4546 1228 4924 4924 2806 4900 1510 4924 4924 4924 4924 3746 2527 4475 3412 4924 4924 4133 4924 4924 4924 3474 4924 4924 1006 4924 4924 1683 2651 2822 2382 2521 3814 4924 2554 4924 4215 3787 4685 2481 3981 4924 4924 3234 4112 4924 1758 4924 4924 4924 37...', 'output': ['12154389312']}, {'input': '4\\r\\n13 14 15 16\\r\\n', 'output': ['76']}, {'input': '3\\r\\n1 5 6\\r\\n', 'output': ['10']}, {'input': '3\\r\\n15 13 2\\r\\n', 'output': ['42']}, {'input': '3\\r\\n1 8 9\\r\\n', 'output': ['20']}, {'input': '3\\r\\n2 5 6\\r\\n', 'output': ['11']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tstatic int[] primes;\n\tstatic int[][] dp;\n\tstatic int[] k;\n\tstatic int n;\n\tstatic int[][] dp2;\n\tstatic int[][] dp3;\n\tstatic int[][] dp4;\n\tstatic int[][] dp5;\n\tstatic int[][] dp6;\n\tstatic int[][] dp7;\n\tstatic int[][] dp8;\n\tstatic int[][] dp9;\n\tstatic int[][] dp10;\n\tstatic int[][] dp11;\n\tstatic int[][] dp12;\n\tstatic int[][] dp13;\n\tstatic int[][] dp14;\n\tstatic int[][] dp15;\n\tstatic int[][] dp16;\n\tstatic int[][] dp17;\n\tstatic int[][] dp18;\n\tstatic int[][] dp19;\n\tstatic int[][] dp20;\n\tstatic int[][] dp21;\n\tstatic int[][] dp22;\n\tstatic int[][] dp23;\n\tstatic int[][] dp24;\n\tstatic int[][] dp25;\n\tstatic int[][] dp26;\n\tstatic int[][] dp27;\n\tstatic int[][] dp28;\n\tstatic int[][] dp29;\n\tstatic int[][] dp30;\n\tstatic int[][] dp31;\n\tstatic int[][] dp32;\n\tstatic int[][] dp33;\n\tstatic int[][] dp34;\n\tstatic int[][] dp35;\n\tstatic int[][] dp36;\n\tstatic int[][] dp37;\n\tstatic int[][] dp38;\n\tstatic int[][] dp39;\n\tstatic int[][] dp40;\n\tstatic int[][] dp41;\n\tstatic int[][] dp42;\n\tstatic int[][] dp43;\n\tstatic int[][] dp44;\n\tstatic int[][] dp45;\n\tstatic int[][] dp46;\n\tstatic int[][] dp47;\n\tstatic int[][] dp48;\n\tstatic int[][] dp49;\n\tstatic int[][] dp50;\n\tstatic int[][] dp51;\n\tstatic int[][] dp52;\n\tstatic int[][] dp53;\n\tstatic int[][] dp54;\n\tstatic int[][] dp55;\n\tstatic int[][] dp56;\n\tstatic int[][] dp57;\n\tstatic int[][] dp58;\n\tstatic int[][] dp59;\n\tstatic int[][] dp60;\n\tstatic int[][] dp61;\n\tstatic int[][] dp62;\n\tstatic int[][] dp63;\n\tstatic int[][] d"}
{"src_uid": "8c2e0cd780cf9390e933e28e57643cba", "id": 92, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1900, "testcases": "[{'input': '4\\r\\n0 0\\r\\n1 1\\r\\n0 3\\r\\n1 2\\r\\n', 'output': ['14\\r\\n']}, {'input': '4\\r\\n0 0\\r\\n0 2\\r\\n0 4\\r\\n2 0\\r\\n', 'output': ['6\\r\\n']}, {'input': '3\\r\\n-1 -1\\r\\n1 0\\r\\n3 1\\r\\n', 'output': ['0\\r\\n']}, {'input': '4\\r\\n-10000 -10000\\r\\n-10000 10000\\r\\n10000 -10000\\r\\n10000 10000\\r\\n', 'output': ['13\\r\\n']}, {'input': '4\\r\\n-10000 -10000\\r\\n-10000 -9999\\r\\n10000 10000\\r\\n9999 10000\\r\\n', 'output': ['14\\r\\n']}, {'input': '16\\r\\n0 0\\r\\n0 2\\r\\n0 4\\r\\n0 6\\r\\n2 0\\r\\n2 2\\r\\n2 4\\r\\n2 6\\r\\n4 0\\r\\n4 2\\r\\n4 4\\r\\n4 6\\r\\n6 0\\r\\n6 2\\r\\n6 4\\r\\n6 6\\r\\n', 'output': ['1783\\r\\n']}, {'input': '25\\r\\n-10000 -10000\\r\\n-10000 -5000\\r\\n-10000 0\\r\\n-10000 5000\\r\\n-10000 10000\\r\\n-5000 -10000\\r\\n-5000 -5000\\r\\n-5000 0\\r\\n-5000 5000\\r\\n-5000 10000\\r\\n0 -10000\\r\\n0 -5000\\r\\n0 0\\r\\n0 5000\\r\\n0 10000\\r\\n5000 -10000\\r\\n5000 -5000\\r\\n5000 0\\r\\n5000 5000\\r\\n5000 10000\\r\\n10000 -10000\\r\\n10000 -5000\\r\\n10000 0\\r\\n10000 5000\\r\\n10000 10000\\r\\n', 'output': ['9324\\r\\n']}, {'input': '2\\r\\n10000 10000\\r\\n-10000 -10000\\r\\n', 'output': ['0\\r\\n']}, {'input': '20\\r\\n-5118 -9140\\r\\n-5118 -7807\\r\\n-5118 -5328\\r\\n-5118 -3139\\r\\n-5118 -1442\\r\\n-5118 -1169\\r\\n-5118 -733\\r\\n-5118 3460\\r\\n-5118 8555\\r\\n-5118 9702\\r\\n-3971 -9140\\r\\n-3971 -7807\\r\\n-3971 -5328\\r\\n-3971 -3139\\r\\n-3971 -1442\\r\\n-3971 -1169\\r\\n-3971 -733\\r\\n-3971 3460\\r\\n-3971 8555\\r\\n-3971 9702\\r\\n', 'output': ['5105\\r\\n']}, {'input': '21\\r\\n-8207 -8742\\r\\n-8207 2162\\r\\n-8207 3741\\r\\n-6190 -8742\\r\\n-6190 2162\\r\\n-6190 3741\\r\\n-2214 -8742\\r\\n-2214 2162\\r\\n-2214 3741\\r\\n-1839 -8742\\r\\n-1839 2162\\r\\n-1839 3741\\r\\n207 -8742\\r\\n207 2162\\r\\n207 3741\\r\\n3032 -8742\\r\\n3032 2162\\r\\n3032 3741\\r\\n8740 -8742\\r\\n8740 2162\\r\\n8740 3741\\r\\n', 'output': ['9156\\r\\n']}, {'input': '20\\r\\n-7068 -9088\\r\\n-7068 -7174\\r\\n-7068 -6012\\r\\n-7068 -3037\\r\\n-7068 3299\\r\\n532 -9088\\r\\n532 -7174\\r\\n532 -6012\\r\\n532 -3037\\r\\n532 3299\\r\\n6883 -9088\\r\\n6883 -7174\\r\\n6883 -6012\\r\\n6883 -3037\\r\\n6883 3299\\r\\n8251 -9088\\r\\n8251 -7174\\r\\n8251 -6012\\r\\n8251 -3037\\r\\n8251 3299\\r\\n', 'output': ['8240\\r\\n']}, {'input': '25\\r\\n1964 -4517\\r\\n5939 -4080\\r\\n9503 -7541\\r\\n-5037 -6950\\r\\n-9914 5015\\r\\n-435 7555\\r\\n-9321 -2202\\r\\n-5036 4224\\r\\n4946 -6785\\r\\n-6824 -9830\\r\\n-9124 9117\\r\\n-8396 -2748\\r\\n9284 556\\r\\n-1672 -6681\\r\\n-8782 9912\\r\\n-8164 4679\\r\\n1804 -6201\\r\\n-1155 2405\\r\\n-858 4105\\r\\n419 -7325\\r\\n-8034 -3084\\r\\n-7823 -5829\\r\\n-5784 5391\\r\\n9515 5259\\r\\n-8078 752\\r\\n', 'output': ['44850\\r\\n']}, {'input': '25\\r\\n5061 -2382\\r\\n-4080 9503\\r\\n-4081 9503\\r\\n5061 -2381\\r\\n-6549 9641\\r\\n-8510 6047\\r\\n-8110 8720\\r\\n6829 -8424\\r\\n-1413 -5926\\r\\n2446 -3190\\r\\n5405 8413\\r\\n8272 6829\\r\\n3034 -3978\\r\\n-3403 3036\\r\\n1383 4041\\r\\n829 327\\r\\n-4079 9504\\r\\n9293 -5091\\r\\n486 -5050\\r\\n6384 3727\\r\\n4787 6634\\r\\n4492 1126\\r\\n-1288 -4938\\r\\n4345 8056\\r\\n-3402 3035\\r\\n', 'output': ['43365\\r\\n']}, {'input': '16\\r\\n297 3286\\r\\n-9374 4754\\r\\n7891 -4091\\r\\n6087 -1252\\r\\n3371 -858\\r\\n789 -9370\\r\\n7241 2950\\r\\n-7390 355\\r\\n-5536 -3119\\r\\n2413 -5560\\r\\n4673 7622\\r\\n5344 -9455\\r\\n1918 -8370\\r\\n-6034 -4144\\r\\n9018 -996\\r\\n-7542 -9138\\r\\n', 'output': ['7140\\r\\n']}, {'input': '16\\r\\n-7073 -2432\\r\\n4754 7891\\r\\n4753 7890\\r\\n4755 7892\\r\\n1033 -7465\\r\\n4487 -9951\\r\\n-4613 3633\\r\\n-6753 9089\\r\\n5853 -1919\\r\\n-236 5170\\r\\n4754 7889\\r\\n-9989 -3488\\r\\n-1390 5520\\r\\n3139 8543\\r\\n4754 7890\\r\\n7576 5150\\r\\n', 'output': ['6670\\r\\n']}, {'input': '12\\r\\n1804 -7018\\r\\n-3551 1915\\r\\n-8148 5497\\r\\n-3430 -2988\\r\\n377 -1656\\r\\n-3799 6338\\r\\n-4248 -8428\\r\\n7371 -5005\\r\\n1216 406\\r\\n-294 5589\\r\\n-6477 -8889\\r\\n-8919 3676\\r\\n', 'output': ['2145\\r\\n']}, {'input': '12\\r\\n-9440 -8967\\r\\n1915 -8148\\r\\n-7216 8361\\r\\n6338 -4248\\r\\n-1425 -2251\\r\\n1216 406\\r\\n-2676 8355\\r\\n-8889 -8919\\r\\n-1163 -4185\\r\\n5018 -7302\\r\\n-2724 3986\\r\\n-7890 1900\\r\\n', 'output': ['2016\\r\\n']}, {'input': '10\\r\\n3986 -4462\\r\\n-5492 -8077\\r\\n-5005 4012\\r\\n8092 5848\\r\\n5159 9077\\r\\n-9814 5652\\r\\n-2848 -6707\\r\\n-1528 8298\\r\\n9444 -4143\\r\\n-7928 1163\\r\\n', 'output': ['990\\r\\n']}, {'input': '10\\r\\n-5475 1753\\r\\n-8077 -5005\\r\\n7903 -131\\r\\n5159 9077\\r\\n5159 9076\\r\\n-6761 4557\\r\\n-9188 -9329\\r\\n-4591 617\\r\\n-9686 -6410\\r\\n648 -1608\\r\\n', 'output': ['990\\r\\n']}, {'input': '2\\r\\n6757 4799\\r\\n-1343 -7745\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n8303 2432\\r\\n-7745 -4751\\r\\n', 'output': ['0\\r\\n']}, {'input': '6\\r\\n-9129 -8491\\r\\n-9129 -1754\\r\\n-9129 -1316\\r\\n1679 -8491\\r\\n1679 -1754\\r\\n1679 -1316\\r\\n', 'output': ['51\\r\\n']}, {'input': '3\\r\\n-4928 7147\\r\\n3808 3567\\r\\n2434 8649\\r\\n', 'output': ['3\\r\\n']}, {'input': '3\\r\\n-1547 4830\\r\\n3567 2434\\r\\n1522 -4418\\r\\n', 'output': ['3\\r\\n']}, {'input': '9\\r\\n-8172 -8016\\r\\n-8172 -63\\r\\n-8172 9586\\r\\n-1609 -8016\\r\\n-1609 -63\\r\\n-1609 9586\\r\\n2972 -8016\\r\\n2972 -63\\r\\n2972 9586\\r\\n', 'output': ['270\\r\\n']}, {'input': '4\\r\\n5648 -804\\r\\n1518 -2267\\r\\n7358 -6618\\r\\n-4504 2047\\r\\n', 'output': ['15\\r\\n']}, {'input': '4\\r\\n-3955 7228\\r\\n-2267 7358\\r\\n-5256 -1266\\r\\n9674 -3048\\r\\n', 'output': ['15\\r\\n']}, {'input': '12\\r\\n796 -415\\r\\n796 169\\r\\n796 2695\\r\\n1979 -415\\r\\n1979 169\\r\\n1979 2695\\r\\n5371 -415\\r\\n5371 169\\r\\n5371 2695\\r\\n8366 -415\\r\\n8366 169\\r\\n8366 2695\\r\\n', 'output': ['894\\r\\n']}, {'input': '5\\r\\n-8893 8986\\r\\n-3629 9045\\r\\n-7719 -6470\\r\\n-258 4491\\r\\n-6902 -6866\\r\\n', 'output': ['45\\r\\n']}, {'input': '5\\r\\n8456 -2932\\r\\n9045 -7719\\r\\n-10000 6748\\r\\n9044 -7720\\r\\n-1125 -914\\r\\n', 'output': ['45\\r\\n']}, {'input': '15\\r\\n-7871 -4833\\r\\n-7871 -1936\\r\\n-7871 425\\r\\n-4790 -4833\\r\\n-4790 -1936\\r\\n-4790 425\\r\\n912 -4833\\r\\n912 -1936\\r\\n912 425\\r\\n4236 -4833\\r\\n4236 -1936\\r\\n4236 425\\r\\n8382 -4833\\r\\n8382 -1936\\r\\n8382 425\\r\\n', 'output': ['2265\\r\\n']}, {'input': '42\\r\\n-5391 -2932\\r\\n-5391 -2868\\r\\n-5391 1744\\r\\n-5391 2236\\r\\n-5391 4148\\r\\n-5391 5217\\r\\n-5391 6188\\r\\n-3584 -2932\\r\\n-3584 -2868\\r\\n-3584 1744\\r\\n-3584 2236\\r\\n-3584 4148\\r\\n-3584 5217\\r\\n-3584 6188\\r\\n-1657 -2932\\r\\n-1657 -2868\\r\\n-1657 1744\\r\\n-1657 2236\\r\\n-1657 4148\\r\\n-1657 5217\\r\\n-1657 6188\\r\\n3218 -2932\\r\\n3218 -2868\\r\\n3218 1744\\r\\n3218 2236\\r\\n3218 4148\\r\\n3218 5217\\r\\n3218 6188\\r\\n7582 -2932\\r\\n7582 -2868\\r\\n7582 1744\\r\\n7582 2236\\r\\n7582 4148\\r\\n7582 5217\\r\\n7582 6188\\r\\n8131 -2932\\r\\n8131 -2868\\r\\n8131 1744\\r\\n8131 2236\\r\\n8131 4148\\r\\n8131 5217\\r\\n8131 6188\\r\\n', 'output': ['206367\\r\\n']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tint[] x = new int[n];\n\t\tint[] y = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString[] s = br.readLine().split(\" \");\n\t\t\tx[i] = Integer.parseInt(s[0]);\n\t\t\ty[i] = Integer.parseInt(s[1]);\n\t\t}\n\t\tint ans = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\t\tif (x[i] == x[j] && y[i] == y[j]) {\n\t\t\t\t\tans++;\n\t\t\t\t} else {\n\t\t\t\t\tint a = x[i] - x[j];\n\t\t\t\t\tint b = y[i] - y[j];\n\t\t\t\t\tint c = a * a + b * b;\n\t\t\t\t\tfor (int k = 0; k < n; k++) {\n\t\t\t\t\t\tif (k == i || k == j) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tint d = x[k] - x[j];\n\t\t\t\t\t\tint e = y[k] - y[j];\n\t\t\t\t\t\tint f = d * a + e * b;\n\t\t\t\t\t\tif (f % c == 0) {\n\t\t\t\t\t\t\tans++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}\n"}
{"src_uid": "bb4ecfaaccd538e23f883a18f9672af8", "id": 93, "lang_cluster": "java", "lang": "Java 11", "difficulty": 2200, "testcases": "[{'input': '5\\r\\n2 1 1 2 5\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3\\r\\n4 5 3\\r\\n', 'output': ['YES\\r\\n']}, {'input': '2\\r\\n10 10\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10\\r\\n1 9 7 6 2 4 7 8 1 3\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1\\r\\n1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '1\\r\\n2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3\\r\\n2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5\\r\\n1 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '5\\r\\n5 2 5 2 6\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n3 3 3 4\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3\\r\\n1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '5\\r\\n2 1 1 2 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '2\\r\\n99999999 99999998\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5\\r\\n1 1 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n1 2 2 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5\\r\\n1 2 2 2 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '6\\r\\n3 3 4 4 3 4\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5\\r\\n2 10 6 9 4\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7\\r\\n10 2 3 4 2 8 8\\r\\n', 'output': ['YES\\r\\n']}, {'input': '9\\r\\n2 5 1 9 6 5 7 3 1\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        StringTokenizer st = new StringTokenizer(br.readLine());\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = Integer.parseInt(st.nextToken());\n        }\n        int max = a[0];\n        for (int i = 1; i < n; i++) {\n            max = Math.max(max, a[i]);\n        }\n        int[] b = new int[max + 1];\n        for (int i = 0; i < n; i++) {\n            b[a[i]]++;\n        }\n        int cnt = 0;\n        for (int i = 0; i < b.length; i++) {\n            if (b[i] % 2 == 1) {\n                cnt++;\n            }\n        }\n        if (cnt <= 2) {\n            System.out.println(\"YES\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}"}
{"src_uid": "e33b0a752dc1aba25da21e20435e3fe2", "id": 94, "lang_cluster": "java", "lang": "Java 11", "difficulty": 2000, "testcases": "[{'input': '3 3\\r\\n010\\r\\n', 'output': ['1\\r\\n']}, {'input': '8 3\\r\\n01010110\\r\\n', 'output': ['3\\r\\n']}, {'input': '9 5\\r\\n001100110\\r\\n', 'output': ['2\\r\\n']}, {'input': '2 2\\r\\n00\\r\\n', 'output': ['0\\r\\n']}, {'input': '3 2\\r\\n010\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 2\\r\\n000\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 3\\r\\n000\\r\\n', 'output': ['0\\r\\n']}, {'input': '4 2\\r\\n0000\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 2\\r\\n0100\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 2\\r\\n0010\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 2\\r\\n0110\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 3\\r\\n0000\\r\\n', 'output': ['1\\r\\n']}, {'input': '4 3\\r\\n0010\\r\\n', 'output': ['1\\r\\n']}, {'input': '4 3\\r\\n0100\\r\\n', 'output': ['1\\r\\n']}, {'input': '4 3\\r\\n0110\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 4\\r\\n0000\\r\\n', 'output': ['0\\r\\n']}, {'input': '4 4\\r\\n0100\\r\\n', 'output': ['1\\r\\n']}, {'input': '4 4\\r\\n0010\\r\\n', 'output': ['1\\r\\n']}, {'input': '4 4\\r\\n0110\\r\\n', 'output': ['2\\r\\n']}, {'input': '10 3\\r\\n0111011010\\r\\n', 'output': ['4\\r\\n']}, {'input': '100 19\\r\\n0011011110011111111010111101101100101111111111011011111111110111101111101111111101111011111011101110\\r\\n', 'output': ['10\\r\\n']}, {'input': '10 3\\r\\n0111011010\\r\\n', 'output': ['4\\r\\n']}, {'input': '100 19\\r\\n0011011110011111111010111101101100101111111111011011111111110111101111101111111101111011111011101110\\r\\n', 'output': ['10\\r\\n']}, {'input': '10 6\\r\\n0000000000\\r\\n', 'output': ['1\\r\\n']}, {'input': '10 4\\r\\n0000001000\\r\\n', 'output': ['3\\r\\n']}, {'input': '10 6\\r\\n0000000000\\r\\n', 'output': ['1\\r\\n']}, {'input': '100 21\\r\\n0110111011000010010101011101110101110111000111101011110100011011100011111101001010001111001111111000\\r\\n', 'output': ['7\\r\\n']}, {'input': '10 9\\r\\n0111011010\\r\\n', 'output': ['3\\r\\n']}, {'input': '100 89\\r\\n0011011110011111111010111101101100101111111111011011111111110111101111101111111101111011111011101110\\r\\n', 'output': ['10\\r\\n']}, {'input': '10 6\\r\\n0000000000\\r\\n', 'output': ['1\\r\\n']}, {'input': '100 81\\r\\n0110111011000010010101011101110101110111000111101011110100011011100011111101001010001111001111111000\\r\\n', 'output': ['7\\r\\n']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint k = Integer.parseInt(st.nextToken());\n\t\tString s = br.readLine();\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = s.charAt(i) - '0';\n\t\t}\n\t\tint[][] dp = new int[n][k];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 1; j < k; j++) {\n\t\t\t\tif (a[i] == 0) {\n\t\t\t\t\tdp[i][j] = dp[i - 1][j - 1] + 1;\n\t\t\t\t} else {\n\t\t\t\t\tdp[i][j] = dp[i - 1][j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint ans = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 1; j < k; j++) {\n\t\t\t\tans = Math.max(ans, dp[i][j] - dp[i][1]);\n\t\t\t}\n\t\t}\n\t\tpw.println(ans);\n\t\tpw.flush();\n\t\tpw.close();\n\t}\n\n}\n"}
{"src_uid": "fbfc333ad4b0a750f654a00be84aea67", "id": 95, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1600, "testcases": "[{'input': '4 2\\r\\n1 3\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 6\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n2 3\\r\\n2 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 5\\r\\n4 2\\r\\n3 5\\r\\n4 5\\r\\n5 1\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '5 4\\r\\n1 2\\r\\n3 2\\r\\n3 4\\r\\n5 4\\r\\n', 'output': ['4\\r\\n']}, {'input': '3 1\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 1\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '20 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '381 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 0\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 1\\r\\n1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 1\\r\\n1 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 5\\r\\n1 3\\r\\n2 1\\r\\n3 4\\r\\n4 2\\r\\n2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '20 1\\r\\n20 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '21 1\\r\\n21 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '100 1\\r\\n100 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '400 1\\r\\n1 400\\r\\n', 'output': ['2\\r\\n']}, {'input': '5 5\\r\\n2 5\\r\\n1 2\\r\\n1 4\\r\\n1 3\\r\\n3 2\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tstatic int n, m;\n\tstatic int[][] g;\n\tstatic int[][] d;\n\tstatic int[][] dp;\n\tstatic int[][] dp2;\n\tstatic int[][] dp3;\n\tstatic int[][] dp4;\n\tstatic int[][] dp5;\n\tstatic int[][] dp6;\n\tstatic int[][] dp7;\n\tstatic int[][] dp8;\n\tstatic int[][] dp9;\n\tstatic int[][] dp10;\n\tstatic int[][] dp11;\n\tstatic int[][] dp12;\n\tstatic int[][] dp13;\n\tstatic int[][] dp14;\n\tstatic int[][] dp15;\n\tstatic int[][] dp16;\n\tstatic int[][] dp17;\n\tstatic int[][] dp18;\n\tstatic int[][] dp19;\n\tstatic int[][] dp20;\n\tstatic int[][] dp21;\n\tstatic int[][] dp22;\n\tstatic int[][] dp23;\n\tstatic int[][] dp24;\n\tstatic int[][] dp25;\n\tstatic int[][] dp26;\n\tstatic int[][] dp27;\n\tstatic int[][] dp28;\n\tstatic int[][] dp29;\n\tstatic int[][] dp30;\n\tstatic int[][] dp31;\n\tstatic int[][] dp32;\n\tstatic int[][] dp33;\n\tstatic int[][] dp34;\n\tstatic int[][] dp35;\n\tstatic int[][] dp36;\n\tstatic int[][] dp37;\n\tstatic int[][] dp38;\n\tstatic int[][] dp39;\n\tstatic int[][] dp40;\n\tstatic int[][] dp41;\n\tstatic int[][] dp42;\n\tstatic int[][] dp43;\n\tstatic int[][] dp44;\n\tstatic int[][] dp45;\n\tstatic int[][] dp46;\n\tstatic int[][] dp47;\n\tstatic int[][] dp48;\n\tstatic int[][] dp49;\n\tstatic int[][] dp50;\n\tstatic int[][] dp51;\n\tstatic int[][] dp52;\n\tstatic int[][] dp53;\n\tstatic int[][] dp54;\n\tstatic int[][] dp55;\n\tstatic int[][] dp56;\n\tstatic int[][] dp57;\n\tstatic int[][] dp58;\n\tstatic int[][] dp59;\n\tstatic int[][] dp60;\n\tstatic int[][] dp61;\n\tstatic int[][] dp62;\n\tstatic int[][] dp63;\n\tstatic int[][] dp64;\n\tstatic int[][] dp65;\n\tstatic int[][] dp66;\n\tstatic int[][] dp67;\n\tstatic int[][] dp68;\n\tstatic int[][] dp69;\n\tstatic int[][] dp70;\n\tstatic int[][] dp71;\n\tstatic int[][] dp72;\n\tstatic int[][] dp73;\n\tstatic int[][] dp74;\n\tstatic int[][] dp75;\n\tstatic int[][] dp76;\n\tstatic int[][] dp77;\n\tstatic int[][] dp78;\n\tstatic int[][] dp79;\n\tstatic int[][] dp80;\n\tstatic int[][] dp81;\n\tstatic int[][] dp82;\n\tstatic int[][] dp83;\n\tstatic int[][] dp84;\n\tstatic int[][] dp85;\n\tstatic int[][] dp86;\n\tstatic int[][] dp87;\n\tstatic int[][] dp88;\n\tstatic int[][] dp89;\n\tstatic int[][] dp90;\n\tstatic int[][] dp91;\n\tstatic int[][] dp92;\n\tstatic int[][] dp93;\n\tstatic int[][] dp94;\n\tstatic int[][] dp95;\n\tstatic int[][] dp96;\n\tstatic int[][] dp97;\n\tstatic int[][] dp98;\n\tstatic int[][] dp99;\n\tstatic int[][] dp100;\n\tstatic int[][] dp101;\n\tstatic int[][] dp102;\n\tstatic int[][] dp103;\n\tstatic int[][] dp104;\n\tstatic int[][] dp105;\n\tstatic int[][] dp106;\n\tstatic int[][] dp107;\n\tstatic int[][] dp108;\n\tstatic int[][] dp109;\n\tstatic int[][] dp110;\n\tstatic int[][] dp111;\n\tstatic int[][] dp112;\n\tstatic int[][] dp113;\n\tstatic int[][] dp114;\n\tstatic int[][] dp115;\n\tstatic int[][] dp116;\n\tstatic int[][] dp117;\n\tstatic int[][] dp118;\n\tstatic int[][] dp119;\n\tstatic int[][] dp120;\n\tstatic int[][] dp121;\n\tstatic int[][] dp122;\n\tstatic int[][] dp123;\n\tstatic int[][] dp124;\n\tstatic int[][] dp125;\n\tstatic int[][] dp126;\n\tstatic int[][] dp127;\n\tstatic int[][] dp128;\n\tstatic int[][] dp129;\n\tstatic int[][] dp130;\n\tstatic int[][] dp131;\n\tstatic int[][] dp132;\n\tstatic int[][] dp133;\n\tstatic int[][] dp134;\n\tstatic int[][] dp135;\n\tstatic int[][] dp136;\n\tstatic int[][] dp137;\n\tstatic int[][] dp138;\n\tstatic int[][] dp139;\n\tstatic int[][] dp140;\n\tstatic int[][] dp141;\n\tstatic int[][] dp142;\n\tstatic int[][] dp143;\n\tstatic int[][] dp144;\n\tstatic int[][] dp145;\n\tstatic int[][] dp146;\n\tstatic int[][] dp147;\n\tstatic int[][] dp148;\n\tstatic int[][] dp149;\n\tstatic int[][] dp150;\n\tstatic int[][] dp151;\n\tstatic int[][] dp152;\n\tstatic int[][] dp153;\n\tstatic int[][] dp154;\n\tstatic int[][] dp155;\n\tstatic int[][] dp156;\n\tstatic int[][] dp157;\n\tstatic int[][] dp158;\n\tstatic int[][] dp159;\n\tstatic int[][] dp160;\n\tstatic int[][] dp161;\n\tstatic int[][] dp162;\n\tstatic int[][] dp163;\n\tstatic int[][] dp164;\n\tstatic int[][] dp165;\n\tstatic int[][] dp166;\n\tstatic int[][] dp167;\n\tstatic int[][] dp168;\n\tstatic int[][] dp169;\n\tstatic int[][] dp170;\n\tstatic int[][] dp171;\n\tstatic int[][] dp172;\n\tstatic int[][] dp173;\n\tstatic int[][] dp174;\n\tstatic int[][] dp175;\n\tstatic int[][] dp176;\n\tstatic"}
{"src_uid": "2468eead8acc5b8f5ddc51bfa2bd4fb7", "id": 96, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1600, "testcases": "[{'input': '4\\r\\n', 'output': ['28 41']}, {'input': '7\\r\\n', 'output': ['47 65']}, {'input': '12\\r\\n', 'output': ['48 105']}, {'input': '1\\r\\n', 'output': ['17 17']}, {'input': '6\\r\\n', 'output': ['34 57']}, {'input': '8\\r\\n', 'output': ['40 73']}, {'input': '9\\r\\n', 'output': ['41 81']}, {'input': '14\\r\\n', 'output': ['58 121']}, {'input': '15\\r\\n', 'output': ['55 129']}, {'input': '16\\r\\n', 'output': ['56 137']}, {'input': '18\\r\\n', 'output': ['57 153']}, {'input': '20\\r\\n', 'output': ['64 169']}, {'input': '299999771\\r\\n', 'output': ['1499998867 2399998177']}, {'input': '54\\r\\n', 'output': ['106 441']}, {'input': '96\\r\\n', 'output': ['144 777']}, {'input': '348\\r\\n', 'output': ['396 2793']}, {'input': '748\\r\\n', 'output': ['487 5993']}, {'input': '908\\r\\n', 'output': ['1840 7273']}, {'input': '1026\\r\\n', 'output': ['591 8217']}, {'input': '1985\\r\\n', 'output': ['3601 15889']}, {'input': '4472\\r\\n', 'output': ['1603 35785']}, {'input': '20845\\r\\n', 'output': ['8873 166769']}, {'input': '50480\\r\\n', 'output': ['17884 403849']}, {'input': '62497\\r\\n', 'output': ['312497 499985']}, {'input': '646055\\r\\n', 'output': ['140995 5168449']}, {'input': '790620\\r\\n', 'output': ['316416 6324969']}, {'input': '989903\\r\\n', 'output': ['1082167 7919233']}, {'input': '7033800\\r\\n', 'output': ['210976 56270409']}, {'input': '7661860\\r\\n', 'output': ['546725 61294889']}, {'input': '7834243\\r\\n', 'output': ['8302235 62673953']}, {'input': '45134118\\r\\n', 'output': ['19223945 361072953']}, {'input': '89054701\\r\\n', 'output': ['445273517 712437617']}, {'input': '99264891\\r\\n', 'output': ['15587889 794119137']}, {'input': '127039320\\r\\n', 'output': ['1209066 1016314569']}, {'input': '206898748\\r\\n', 'output': ['1683461 1655189993']}, {'input': '231136953\\r\\n', 'output': ['539319577 1849095633']}, {'input': '257259713\\r\\n', 'output': ['2122207 2058077713']}, {'input': '286736327\\r\\n', 'output': ['290355727 2293890625']}, {'input': '311933803\\r\\n', 'output': ['1559669027 2495470433']}, {'input': '332393619\\r\\n', 'output': ['10714371 2659148961']}, {'input': '422114561\\r\\n', 'output': ['78417139 3376916497']}, {'input': '453012754\\r\\n', 'output': ['2844347 3624102041']}, {'input': '470860680\\r\\n', 'output': ['129486993 3766885449']}, {'input': '509607936\\r\\n', 'output': ['3045276 4076863497']}, {'input': '534879507\\r\\n', 'output': ['253364145 4279036065']}, {'input': '535074941\\r\\n', 'output': ['647722381 4280599537']}, {'input': '536870912\\r\\n', 'output': ['3151876 4294967305']}, {'input': '573308928\\r\\n', 'output': ['3301020 4586471433']}, {'input': '603979776\\r\\n', 'output': ['3414276 4831838217']}, {'input': '605404800\\r\\n', 'output': ['3414952 4843238409']}, {'input': '615716902\\r\\n', 'output': ['10508698 4925735225']}, {'input': '628464178\\r\\n', 'output': ['3574502 5027713433']}, {'input': '631243141\\r\\n', 'output': ['634644469 5049945137']}, {'input': '644972544\\r\\n', 'output': ['3573148 5159780361']}, {'input': '659274082\\r\\n', 'output': ['1977822262 5274192665']}, {'input': '679477248\\r\\n', 'output': ['3693060 5435817993']}, {'input': '735134400\\r\\n', 'output': ['3886608 5881075209']}, {'input': '764411904\\r\\n', 'output': ['3988228 6115295241']}, {'input': '778377600\\r\\n', 'output': ['4036708 6227020809']}, {'input': '791683200\\r\\n', 'output': ['4082888 6333465609']}, {'input': '805306368\\r\\n', 'output': ['4201476 6442450953']}, {'input': '821620800\\r\\n', 'output': ['4185636 6572966409']}, {'input': '856079286\\r\\n', 'output': ['196667409 6848634297']}, {'input': '857656800\\r\\n', 'output': ['4307008 6861254409']}, {'input': '859963392\\r\\n', 'output': ['4320292 6879707145']}, {'input': '864864000\\r\\n', 'output': ['4331048 6918912009']}, {'input': '882161280\\r\\n', 'output': ['4388720 7057290249']}, {'input': '884822400\\r\\n', 'output': ['4396766 7078579209']}, {'input': '905969664\\r\\n', 'output': ['4529412 7247757321']}, {'input': '908107200\\r\\n', 'output': ['4474050 7264857609']}, {'input': '918918000\\r\\n', 'output': ['4511288 7351344009']}, {'input': '931170240\\r\\n', 'output': ['4548514 7449361929']}, {'input': '935625600\\r\\n', 'output': ['4563150 7485004809']}, {'input': '936354996\\r\\n', 'output': ['40069269 7490839977']}, {'input': '951350400\\r\\n', 'output': ['4614600 7610803209']}, {'input': '958557600\\r\\n', 'output': ['4637398 7668460809']}, {'input': '972972000\\r\\n', 'output': ['4685478 7783776009']}, {'input': '980179200\\r\\n', 'output': ['4707050 7841433609']}, {'input': '985944960\\r\\n', 'output': ['4725040 7887559689']}, {'input': '994593600\\r\\n', 'output': ['4752650 7956748809']}, {'input': '999893227\\r\\n', 'output': ['1000183267 7999145825']}, {'input': '999893387\\r\\n', 'output': ['1000724227 7999147105']}, {'input': '999905161\\r\\n', 'output': ['1000161721 7999241297']}, {'input': '999942949\\r\\n', 'output': ['1000368197 7999543601']}, {'input': '999996583\\r\\n', 'output': ['1022096687 7999972673']}, {'input': '999999797\\r\\n', 'output': ['4999998997 7999998385']}, {'input': '999999883\\r\\n', 'output': ['4999999427 7999999073']}, {'input': '999999893\\r\\n', 'output': ['4999999477 7999999153']}, {'input': '999999929\\r\\n', 'output': ['4999999657 7999999441']}, {'input': '999999937\\r\\n', 'output': ['4999999697 7999999505']}, {'input': '999999991\\r\\n', 'output': ['1059701759 7999999937']}, {'input': '999999992\\r\\n', 'output': ['129518035 7999999945']}, {'input': '999999993\\r\\n', 'output': ['490196227 7999999953']}, {'input': '999999994\\r\\n', 'output': ['928571477 7999999961']}, {'input': '999999995\\r\\n', 'output': ['4924975 7999999969']}, {'input': '999999996\\r\\n', 'output': ['1000000044 7999999977']}, {'input': '999999997\\r\\n', 'output': ['15309947 7999999985']}, {'input': '999999998\\r\\n', 'output': ['504345691 7999999993']}, {'input': '999999999\\r\\n', 'output': ['52392027 8000000001']}, {'input': '1000000000\\r\\n', 'output': ['4770064 8000000009']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tlong n = Long.parseLong(st.nextToken());\n\t\tlong min = 0, max = 0;\n\t\tfor (long a = 1; a * a * a <= n; a++) {\n\t\t\tfor (long b = 2; a * b * b <= n; b++) {\n\t\t\t\tfor (long c = 2; a * b * c <= n; c++) {\n\t\t\t\t\tlong cur = a * b * c - a * b - a * c - b * c;\n\t\t\t\t\tmin = Math.max(min, cur);\n\t\t\t\t\tmax = Math.max(max, cur);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(min + \" \" + max);\n\t}\n}"}
{"src_uid": "c761bb69cf1b5a3dbe38d9f5c46e9007", "id": 97, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1600, "testcases": "[{'input': '1 1\\r\\n+1\\r\\n', 'output': ['Truth\\r\\n']}, {'input': '3 2\\r\\n-1\\r\\n-2\\r\\n-3\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '4 1\\r\\n+2\\r\\n-3\\r\\n+4\\r\\n-1\\r\\n', 'output': ['Lie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\n']}, {'input': '1 0\\r\\n-1\\r\\n', 'output': ['Lie\\r\\n']}, {'input': '2 2\\r\\n+1\\r\\n+1\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\n']}, {'input': '2 1\\r\\n+2\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\n']}, {'input': '2 0\\r\\n-2\\r\\n-2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\n']}, {'input': '3 1\\r\\n+2\\r\\n+3\\r\\n+3\\r\\n', 'output': ['Truth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '6 3\\r\\n+5\\r\\n+5\\r\\n+5\\r\\n+1\\r\\n+1\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '4 3\\r\\n-4\\r\\n-3\\r\\n-1\\r\\n-3\\r\\n', 'output': ['Not defined\\r\\nTruth\\r\\nNot defined\\r\\nTruth\\r\\n']}, {'input': '10 4\\r\\n-8\\r\\n+1\\r\\n-6\\r\\n-10\\r\\n+5\\r\\n-6\\r\\n-8\\r\\n-8\\r\\n-4\\r\\n-8\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-4\\r\\n+4\\r\\n+4\\r\\n-9\\r\\n-9\\r\\n-4\\r\\n-4\\r\\n+2\\r\\n-9\\r\\n-4\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '7 2\\r\\n+5\\r\\n+5\\r\\n+5\\r\\n-2\\r\\n+1\\r\\n-5\\r\\n-6\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\n']}, {'input': '7 4\\r\\n+7\\r\\n-3\\r\\n-3\\r\\n-4\\r\\n+3\\r\\n+3\\r\\n+3\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '6 3\\r\\n-6\\r\\n-1\\r\\n+5\\r\\n+1\\r\\n+6\\r\\n+1\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\n']}, {'input': '5 3\\r\\n-2\\r\\n+2\\r\\n+2\\r\\n-3\\r\\n+5\\r\\n', 'output': ['Not defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\n']}, {'input': '3 0\\r\\n-2\\r\\n-2\\r\\n-2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '5 3\\r\\n-1\\r\\n-1\\r\\n-4\\r\\n+1\\r\\n-4\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '9 6\\r\\n+2\\r\\n+7\\r\\n+7\\r\\n-1\\r\\n-4\\r\\n+7\\r\\n-7\\r\\n+7\\r\\n+5\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '43 18\\r\\n-14\\r\\n-28\\r\\n+16\\r\\n+10\\r\\n+25\\r\\n-30\\r\\n+25\\r\\n+30\\r\\n+25\\r\\n+25\\r\\n+25\\r\\n+25\\r\\n-25\\r\\n+22\\r\\n+3\\r\\n-17\\r\\n+16\\r\\n-25\\r\\n+10\\r\\n+14\\r\\n+41\\r\\n+25\\r\\n-25\\r\\n+33\\r\\n+24\\r\\n-23\\r\\n-25\\r\\n+25\\r\\n-22\\r\\n+29\\r\\n+28\\r\\n-25\\r\\n-25\\r\\n-29\\r\\n+11\\r\\n+26\\r\\n-25\\r\\n+25\\r\\n+10\\r\\n+1\\r\\n-20\\r\\n-17\\r\\n+23\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '28 12\\r\\n+10\\r\\n-7\\r\\n+17\\r\\n-20\\r\\n+7\\r\\n-7\\r\\n+13\\r\\n-21\\r\\n-7\\r\\n-7\\r\\n-18\\r\\n+7\\r\\n+7\\r\\n+3\\r\\n+6\\r\\n+14\\r\\n+7\\r\\n-24\\r\\n-21\\r\\n-7\\r\\n-7\\r\\n+4\\r\\n+7\\r\\n-7\\r\\n+21\\r\\n-7\\r\\n-26\\r\\n+7\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '17 9\\r\\n-6\\r\\n+16\\r\\n+5\\r\\n+16\\r\\n-17\\r\\n+17\\r\\n-11\\r\\n+5\\r\\n+14\\r\\n+5\\r\\n-8\\r\\n-5\\r\\n+6\\r\\n-2\\r\\n-11\\r\\n+4\\r\\n+17\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '14 3\\r\\n+14\\r\\n+12\\r\\n-9\\r\\n+9\\r\\n-9\\r\\n-9\\r\\n+8\\r\\n+9\\r\\n+2\\r\\n+1\\r\\n-13\\r\\n-9\\r\\n+13\\r\\n+3\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n-9\\r\\n-8\\r\\n-5\\r\\n-9\\r\\n-7\\r\\n-9\\r\\n-9\\r\\n-9\\r\\n-4\\r\\n-9\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-5\\r\\n-1\\r\\n+10\\r\\n-3\\r\\n-10\\r\\n-9\\r\\n-10\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-3\\r\\n-2\\r\\n-2\\r\\n-6\\r\\n-7\\r\\n-3\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 6\\r\\n-9\\r\\n-7\\r\\n-5\\r\\n-5\\r\\n-4\\r\\n-2\\r\\n-8\\r\\n-5\\r\\n-5\\r\\n-9\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 4\\r\\n-8\\r\\n-2\\r\\n-8\\r\\n+1\\r\\n-4\\r\\n-8\\r\\n-2\\r\\n-8\\r\\n-8\\r\\n-1\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 2\\r\\n-8\\r\\n+10\\r\\n+1\\r\\n+8\\r\\n+4\\r\\n+8\\r\\n+6\\r\\n-8\\r\\n+10\\r\\n+1\\r\\n', 'output': ['Not defined\\r\\nLie\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nNot defined\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 3\\r\\n+9\\r\\n+3\\r\\n+8\\r\\n+3\\r\\n+6\\r\\n-3\\r\\n+6\\r\\n+8\\r\\n+3\\r\\n+7\\r\\n', 'output': ['Lie\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\nLie\\r\\n']}, {'input': '10 8\\r\\n-2\\r\\n+9\\r\\n+9\\r\\n-4\\r\\n+9\\r\\n+9\\r\\n+4\\r\\n-9\\r\\n-3\\r\\n+9\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 7\\r\\n-4\\r\\n+6\\r\\n+4\\r\\n+9\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+6\\r\\n+2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 4\\r\\n+3\\r\\n+5\\r\\n+6\\r\\n+10\\r\\n+5\\r\\n+5\\r\\n+6\\r\\n+8\\r\\n+5\\r\\n+6\\r\\n', 'output': ['Lie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 7\\r\\n-6\\r\\n-10\\r\\n-3\\r\\n-1\\r\\n-3\\r\\n-7\\r\\n-2\\r\\n-7\\r\\n-7\\r\\n-3\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nTruth\\r\\nNot defined\\r\\nNot defined\\r\\nNot defined\\r\\n']}, {'input': '10 5\\r\\n-4\\r\\n-4\\r\\n-1\\r\\n-5\\r\\n-7\\r\\n-4\\r\\n-4\\r\\n-4\\r\\n-1\\r\\n-7\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 5\\r\\n-9\\r\\n-7\\r\\n-6\\r\\n-3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-3\\r\\n-10\\r\\n-10\\r\\n-10\\r\\n-8\\r\\n-4\\r\\n-10\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n-8\\r\\n-8\\r\\n-4\\r\\n-9\\r\\n-10\\r\\n-2\\r\\n-9\\r\\n-8\\r\\n-8\\r\\n-8\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 5\\r\\n+7\\r\\n+8\\r\\n+9\\r\\n+1\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+6\\r\\n+6\\r\\n+7\\r\\n', 'output': ['Truth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 5\\r\\n+2\\r\\n+2\\r\\n+2\\r\\n+2\\r\\n+9\\r\\n+10\\r\\n+8\\r\\n+7\\r\\n+4\\r\\n+2\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\n']}, {'input': '10 9\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n+5\\r\\n+7\\r\\n+7\\r\\n+7\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nTruth\\r\\n']}, {'input': '10 3\\r\\n+10\\r\\n+2\\r\\n+10\\r\\n+9\\r\\n+1\\r\\n+9\\r\\n+4\\r\\n+9\\r\\n+3\\r\\n+2\\r\\n', 'output': ['Lie\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\n']}, {'input': '10 6\\r\\n+10\\r\\n+10\\r\\n+10\\r\\n+3\\r\\n+10\\r\\n+10\\r\\n+6\\r\\n+6\\r\\n+10\\r\\n+8\\r\\n', 'output': ['Truth\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nTruth\\r\\nTruth\\r\\nLie\\r\\nLie\\r\\nTruth\\r\\nLie\\r\\n']}, {'input': '3 2\\r\\n-1\\r\\n+2\\r\\n+3\\r\\n', 'output': ['Truth\\r\\nNot defined\\r\\nNot defined\\r\\n']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint m = Integer.parseInt(st.nextToken());\n\t\tint[] a = new int[n];\n\t\tint[] b = new int[n];\n\t\tint[] c = new int[n];\n\t\tint[] d = new int[n];\n\t\tint[] e = new int[n];\n\t\tint[] f = new int[n];\n\t\tint[] g = new int[n];\n\t\tint[] h = new int[n];\n\t\tint[] i = new int[n];\n\t\tint[] j = new int[n];\n\t\tint[] k = new int[n];\n\t\tint[] l = new int[n];\n\t\tint[] m1 = new int[n];\n\t\tint[] n1 = new int[n];\n\t\tint[] o1 = new int[n];\n\t\tint[] p1 = new int[n];\n\t\tint[] q1 = new int[n];\n\t\tint[] r1 = new int[n];\n\t\tint[] s1 = new int[n];\n\t\tint[] t1 = new int[n];\n\t\tint[] u1 = new int[n];\n\t\tint[] v1 = new int[n];\n\t\tint[] w1 = new int[n];\n\t\tint[] x1 = new int[n];\n\t\tint[] y1 = new int[n];\n\t\tint[] z1 = new int[n];\n\t\tint[] z = new int[n];\n\t\tint[] z2 = new int[n];\n\t\tint[] z3 = new int[n];\n\t\tint[] z4 = new int[n];\n\t\tint[] z5 = new int[n];\n\t\tint[] z6 = new int[n];\n\t\tint[] z7 = new int[n];\n\t\tint[] z8 = new int[n];\n\t\tint[] z9 = new int[n];\n\t\tint[] z10 = new int[n];\n\t\tint[] z11 = new int[n];\n\t\tint[] z12 = new int[n];\n\t\tint[] z13 = new int[n];\n\t\tint[] z14 = new int[n];\n\t\tint[] z15 = new int[n];\n\t\tint[] z16 = new int[n];\n\t\tint[] z17 = new int[n];\n\t\tint[] z18 = new int[n];\n\t\tint[] z19 = new int[n];\n\t\tint[] z20 = new int[n];\n\t\tint[] z21 = new int[n];\n\t\tint[] z22 = new int[n];\n\t\tint[] z23 = new int[n];\n\t\tint[] z24 = new int[n];\n\t\tint[] z25 = new int[n];\n\t\tint[] z26 = new int[n];\n\t\tint[] z27 = new int[n];\n\t\tint[] z28 = new int[n];\n\t\tint[] z29 = new int[n];\n\t\tint[] z30 = new int[n];\n\t\tint[] z31 = new int[n];\n\t\tint[] z32 = new int[n];\n\t\tint[] z33 = new int[n];\n\t\tint[] z34 = new int[n];\n\t\tint[] z35 = new int[n];\n\t\tint[] z36 = new int[n];\n\t\tint[] z37 = new int[n];\n\t\tint[] z38 = new int[n];\n\t\tint[] z39 = new int[n];\n\t\tint[] z40 = new int[n];\n\t\tint[] z41 = new int[n];\n\t\tint[] z42 = new int[n];\n\t\tint[] z43 = new int[n];\n\t\tint[] z44 = new int[n];\n\t\tint[] z45 = new int[n];\n\t\tint[] z46 = new int[n];\n\t\tint[] z47 = new int[n];\n\t\tint[] z48 = new int[n];\n\t\tint[] z49 = new int[n];\n\t\tint[] z50 = new int[n];\n\t\tint[] z51 = new int[n];\n\t\tint[] z52 = new int[n];\n\t\tint[] z53 = new int[n];\n\t\tint[] z54 = new int[n];\n\t\tint[] z55 = new int[n];\n\t\tint[] z56 = new int[n];\n\t\tint[] z57 = new int[n];\n\t\tint[] z58 = new int[n];\n\t\tint[] z59 = new int[n];\n\t\tint[] z60 = new int[n];\n\t\tint[] z61 = new int[n];\n\t\tint[] z62 = new int[n];\n\t\tint[] z63 = new int[n];\n\t\tint[] z64 = new int[n];\n\t\tint[] z65 = new int[n];\n\t\tint[] z66 = new int[n];\n\t\tint[] z67 = new int[n];\n\t\tint[] z68 = new int[n];\n\t\tint[] z69 = new int[n];\n\t\tint[] z70 = new int[n];\n\t\tint[] z71 = new int[n];\n\t\tint[] z72 = new int[n];\n\t\tint[] z73 = new int[n];\n\t\tint[] z74 = new int[n];\n\t\tint[] z75 = new int[n];\n\t\tint[] z76 = new int[n];\n\t\tint[] z77 = new int[n];\n\t\tint[] z78 = new int[n];\n\t\tint[] z79 = new int[n];\n\t\tint[] z80 = new int[n];\n\t\tint[] z81 = new int[n];\n\t\tint[] z82 = new int[n];\n\t\tint[] z83 = new int[n];\n\t\tint[] z84 = new int[n];\n\t\tint[] z85 = new int[n];\n\t\tint[] z86 = new int[n];\n\t\tint[] z87 = new int[n];\n\t\tint[] z88 = new int[n];\n\t\tint[] z89 = new int[n];\n\t\tint[] z90 = new int[n];\n\t\tint[] z91 = new int[n];\n\t\tint[] z92 = new int[n];\n\t\tint[] z93 = new int[n];\n\t\tint[] z94 = new int[n];\n\t\tint[] z95 = new int[n];\n\t\tint[] z96 = new int[n];\n\t\tint[] z97 = new int[n];\n\t\tint[] z98 = new int[n];\n\t\tint[] z99 = new int[n];\n\t\tint[] z100 = new int[n];\n\t\tint[] z101 = new int[n];\n\t\tint[] z102 = new int[n];\n\t\tint[] z103 = new int[n];\n\t\tint[] z104 = new int[n];\n\t\tint[] z105 = new int[n];\n\t\tint[] z106 = new int[n];\n\t\tint[] z107 = new int[n];\n\t\tint[] z108 = new int[n];\n\t\tint[] z109 = new int[n];\n\t\tint[] z110 = new int[n];\n\t\tint[] z111 = new int[n];\n\t\tint[] z112 = new int[n];\n\t\tint[] z113 = new int[n];\n\t\tint[] z114 ="}
{"src_uid": "b81e7a786e4083cf7188f718bc045a85", "id": 98, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1800, "testcases": "[{'input': '2 3 1\\r\\n2 3\\r\\n', 'output': ['0']}, {'input': '3 2 2\\r\\n4 1 3\\r\\n', 'output': ['2']}, {'input': '5 10 10\\r\\n7 0 7 0 7\\r\\n', 'output': ['7']}, {'input': '6 10 4\\r\\n1 2 3 4 5 6\\r\\n', 'output': ['0']}, {'input': '7 5 2\\r\\n1 2 3 4 5 6 7\\r\\n', 'output': ['1']}, {'input': '16 100 100\\r\\n30 89 12 84 62 24 10 59 98 21 13 69 65 12 54 32\\r\\n', 'output': ['0']}, {'input': '99 999 999\\r\\n9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\\r\\n', 'output': ['9']}, {'input': '1 1 1\\r\\n0\\r\\n', 'output': ['0']}, {'input': '1 64 25\\r\\n100000\\r\\n', 'output': ['1600']}, {'input': '1 1000000000 1\\r\\n100\\r\\n', 'output': ['100']}, {'input': '1 1 1000000000\\r\\n100\\r\\n', 'output': ['100']}, {'input': '1 1000000000 1000000000\\r\\n100\\r\\n', 'output': ['100']}, {'input': '5 2 9494412\\r\\n5484 254 1838 18184 9421\\r\\n', 'output': ['0']}, {'input': '5 10 7\\r\\n98765 78654 25669 45126 98745\\r\\n', 'output': ['21']}, {'input': '13 94348844 381845400\\r\\n515 688 5464 155 441 9217 114 21254 55 9449 1800 834 384\\r\\n', 'output': ['55']}, {'input': '17 100 100\\r\\n47 75 22 18 42 53 95 98 94 50 63 55 46 80 9 20 99\\r\\n', 'output': ['9']}, {'input': '47 20 1000000\\r\\n81982 19631 19739 13994 50426 14232 79125 95908 20227 79428 84065 86233 30742 82664 54626 10849 11879 67198 15667 75866 47242 90766 23115 20130 37293 8312 57308 52366 49768 28256 56085 39722 40397 14166 16743 28814 40538 50753 60900 99449 94318 54247 10563 5260 76407 42235 417\\r\\n', 'output': ['0']}, {'input': '58 5858758 7544547\\r\\n6977 5621 6200 6790 7495 5511 6214 6771 6526 6557 5936 7020 6925 5462 7519 6166 5974 6839 6505 7113 5674 6729 6832 6735 5363 5817 6242 7465 7252 6427 7262 5885 6327 7046 6922 5607 7238 5471 7145 5822 5465 6369 6115 5694 6561 7330 7089 7397 7409 7093 7537 7279 7613 6764 7349 7095 6967 5984\\r\\n', 'output': ['0']}, {'input': '79 5464 64574\\r\\n3800 2020 2259 503 4922 975 5869 6140 3808 2635 3420 992 4683 3748 5732 4787 6564 3302 6153 4955 2958 6107 2875 3449 1755 5029 5072 5622 2139 1892 4640 1199 3918 1061 4074 5098 4939 5496 2019 356 5849 4796 4446 4633 1386 1129 3351 639 2040 3769 4106 4048 3959 931 3457 1938 4587 6438 2938 132 2434 3727 3926 2135 1665 2871 2798 6359 989 6220 97 2116 2048 251 4264 3841 4428 5286 1914\\r\\n', 'output': ['97']}, {'input': '95 97575868 5\\r\\n4612 1644 3613 5413 5649 2419 5416 3926 4610 4419 2796 5062 2112 1071 3790 4220 3955 2142 4638 2832 2702 2115 2045 4085 3599 2452 5495 4767 1368 2344 4625 4132 5755 5815 2581 6259 1330 4938 815 5430 1628 3108 4342 3692 2928 1941 3714 4498 4471 4842 1822 867 3395 2587 3372 6394 6423 3728 3720 6525 4296 2091 4400 994 1321 3454 5285 2989 1755 504 5019 2629 3834 3191 6254 844 5338 615 5608 4898 2497 4482 850 5308 2763 1943 6515 5459 5556 829 4646 5258 2019 5582 1226\\r\\n', 'output': ['815']}, {'input': '77 678686 878687\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['1']}, {'input': '2 7597 8545\\r\\n74807 22362\\r\\n', 'output': ['0']}, {'input': '3 75579860 8570575\\r\\n10433 30371 14228\\r\\n', 'output': ['10433']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint m = Integer.parseInt(st.nextToken());\n\t\tint k = Integer.parseInt(st.nextToken());\n\t\tint[] arr = new int[n];\n\t\tst = new StringTokenizer(br.readLine());\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarr[i] = Integer.parseInt(st.nextToken());\n\t\t}\n\t\tint ans = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (i % 2 == 0) {\n\t\t\t\tans += arr[i];\n\t\t\t}\n\t\t}\n\t\tans = Math.min(ans, m * k);\n\t\tpw.println(ans);\n\t\tpw.flush();\n\t\tpw.close();\n\t}\n}\n"}
{"src_uid": "f256235c0b2815aae85a6f9435c69dac", "id": 99, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1700, "testcases": "[{'input': '11 4 3 9\\r\\n', 'output': ['3']}, {'input': '20 5 2 20\\r\\n', 'output': ['2']}, {'input': '1 1 1 1\\r\\n', 'output': ['1']}, {'input': '26 5 2 18\\r\\n', 'output': ['3']}, {'input': '21 5 1 15\\r\\n', 'output': ['1']}, {'input': '21 5 1 21\\r\\n', 'output': ['1']}, {'input': '21 5 8 14\\r\\n', 'output': ['2']}, {'input': '20 4 1 20\\r\\n', 'output': ['1']}, {'input': '21 5 1 13\\r\\n', 'output': ['2']}, {'input': '21 5 4 15\\r\\n', 'output': ['2']}, {'input': '17 3 1 16\\r\\n', 'output': ['2']}, {'input': '19 5 7 19\\r\\n', 'output': ['2']}, {'input': '18 2 1 13\\r\\n', 'output': ['2']}, {'input': '21 3 6 11\\r\\n', 'output': ['2']}, {'input': '21 5 3 12\\r\\n', 'output': ['2']}, {'input': '21 3 6 10\\r\\n', 'output': ['3']}, {'input': '28 5 4 26\\r\\n', 'output': ['3']}, {'input': '21 5 6 18\\r\\n', 'output': ['2']}, {'input': '21 5 4 21\\r\\n', 'output': ['2']}, {'input': '17 5 6 17\\r\\n', 'output': ['1']}, {'input': '21 5 9 12\\r\\n', 'output': ['2']}, {'input': '21 3 6 7\\r\\n', 'output': ['2']}, {'input': '21 5 7 9\\r\\n', 'output': ['1']}, {'input': '12 4 5 8\\r\\n', 'output': ['1']}, {'input': '21 3 6 8\\r\\n', 'output': ['2']}, {'input': '21 1 5 17\\r\\n', 'output': ['1']}, {'input': '5 5 2 4\\r\\n', 'output': ['1']}, {'input': '18 4 6 17\\r\\n', 'output': ['2']}, {'input': '18 4 6 18\\r\\n', 'output': ['2']}, {'input': '16 4 1 16\\r\\n', 'output': ['1']}, {'input': '20 4 7 14\\r\\n', 'output': ['2']}, {'input': '17 3 12 16\\r\\n', 'output': ['3']}, {'input': '12 4 8 9\\r\\n', 'output': ['2']}, {'input': '11 8 2 7\\r\\n', 'output': ['1']}, {'input': '27 5 4 24\\r\\n', 'output': ['3']}, {'input': '29 5 12 27\\r\\n', 'output': ['3']}, {'input': '30 5 5 29\\r\\n', 'output': ['2']}, {'input': '91 2 15 72\\r\\n', 'output': ['1']}, {'input': '41 1 8 27\\r\\n', 'output': ['1']}, {'input': '26 5 7 21\\r\\n', 'output': ['2']}, {'input': '70 5 31 33\\r\\n', 'output': ['1']}, {'input': '84 9 6 80\\r\\n', 'output': ['3']}, {'input': '79 8 41 64\\r\\n', 'output': ['1']}, {'input': '63 11 23 48\\r\\n', 'output': ['2']}, {'input': '97 9 18 54\\r\\n', 'output': ['2']}, {'input': '75 18 20 23\\r\\n', 'output': ['1']}, {'input': '66 42 43 44\\r\\n', 'output': ['1']}, {'input': '92 54 20 53\\r\\n', 'output': ['1']}, {'input': '32 90 31 32\\r\\n', 'output': ['1']}, {'input': '18 100 6 6\\r\\n', 'output': ['1']}, {'input': '458 12 203 310\\r\\n', 'output': ['2']}, {'input': '149 49 92 129\\r\\n', 'output': ['2']}, {'input': '264 2 9 63\\r\\n', 'output': ['2']}, {'input': '908 6 407 531\\r\\n', 'output': ['3']}, {'input': '410 36 109 191\\r\\n', 'output': ['2']}, {'input': '301 38 97 171\\r\\n', 'output': ['3']}, {'input': '691 27 313 499\\r\\n', 'output': ['3']}, {'input': '939 42 86 827\\r\\n', 'output': ['3']}, {'input': '280 32 64 277\\r\\n', 'output': ['3']}, {'input': '244 25 94 199\\r\\n', 'output': ['3']}, {'input': '134 110 11 52\\r\\n', 'output': ['1']}, {'input': '886 251 61 672\\r\\n', 'output': ['3']}, {'input': '261 686 243 254\\r\\n', 'output': ['1']}, {'input': '162 309 68 98\\r\\n', 'output': ['1']}, {'input': '476 398 77 256\\r\\n', 'output': ['1']}, {'input': '258 224 84 174\\r\\n', 'output': ['1']}, {'input': '357 182 73 247\\r\\n', 'output': ['2']}, {'input': '488 655 290 457\\r\\n', 'output': ['1']}, {'input': '149 334 78 105\\r\\n', 'output': ['1']}, {'input': '488 519 203 211\\r\\n', 'output': ['1']}, {'input': '192293793 2864 5278163 190776899\\r\\n', 'output': ['3']}, {'input': '38644205 2729 9325777 31658388\\r\\n', 'output': ['3']}, {'input': '268836959 6117 166683294 249843000\\r\\n', 'output': ['3']}, {'input': '831447817 8377 549549158 577671489\\r\\n', 'output': ['3']}, {'input': '444819690 3519 48280371 117052060\\r\\n', 'output': ['3']}, {'input': '729584406 8367 456501516 557088265\\r\\n', 'output': ['3']}, {'input': '629207296 3735 112288653 309364482\\r\\n', 'output': ['3']}, {'input': '775589210 6930 266348458 604992807\\r\\n', 'output': ['3']}, {'input': '249414894 1999 34827655 127026562\\r\\n', 'output': ['3']}, {'input': '566377385 227 424126063 478693454\\r\\n', 'output': ['3']}, {'input': '960442940 572344654 77422042 406189391\\r\\n', 'output': ['1']}, {'input': '291071313 592207814 6792338 181083636\\r\\n', 'output': ['1']}, {'input': '191971162 306112722 18212391 188328807\\r\\n', 'output': ['1']}, {'input': '609162932 300548167 21640850 411089609\\r\\n', 'output': ['2']}, {'input': '645010014 34698301 217620581 416292490\\r\\n', 'output': ['3']}, {'input': '51474721 867363452 12231088 43489285\\r\\n', 'output': ['1']}, {'input': '484381636 927869638 57278216 175514226\\r\\n', 'output': ['1']}, {'input': '491259590 529594367 305425951 326414536\\r\\n', 'output': ['1']}, {'input': '733405771 830380469 19971607 389270995\\r\\n', 'output': ['1']}, {'input': '446237720 920085248 296916273 439113596\\r\\n', 'output': ['1']}, {'input': '12 6 3 10\\r\\n', 'output': ['2']}, {'input': '25 2 8 11\\r\\n', 'output': ['2']}, {'input': '17 8 3 15\\r\\n', 'output': ['2']}, {'input': '9 2 4 7\\r\\n', 'output': ['2']}, {'input': '6 7 5 6\\r\\n', 'output': ['1']}, {'input': '13 2 1 6\\r\\n', 'output': ['1']}, {'input': '15 8 10 14\\r\\n', 'output': ['1']}, {'input': '27 2 5 13\\r\\n', 'output': ['2']}, {'input': '14 8 2 12\\r\\n', 'output': ['2']}, {'input': '61 1 10 38\\r\\n', 'output': ['1']}, {'input': '15 6 7 15\\r\\n', 'output': ['1']}, {'input': '100 1 2 15\\r\\n', 'output': ['1']}, {'input': '10 1 4 5\\r\\n', 'output': ['1']}, {'input': '6 3 1 6\\r\\n', 'output': ['1']}, {'input': '4 3 3 4\\r\\n', 'output': ['2']}, {'input': '5 2 1 5\\r\\n', 'output': ['1']}, {'input': '7 3 1 1\\r\\n', 'output': ['1']}, {'input': '7 3 1 2\\r\\n', 'output': ['1']}, {'input': '7 3 1 3\\r\\n', 'output': ['1']}, {'input': '7 3 1 4\\r\\n', 'output': ['2']}, {'input': '7 3 1 5\\r\\n', 'output': ['2']}, {'input': '7 3 1 6\\r\\n', 'output': ['1']}, {'input': '7 3 1 7\\r\\n', 'output': ['1']}, {'input': '7 3 2 2\\r\\n', 'output': ['1']}, {'input': '7 3 2 3\\r\\n', 'output': ['1']}, {'input': '7 3 2 4\\r\\n', 'output': ['2']}, {'input': '7 3 2 5\\r\\n', 'output': ['2']}, {'input': '7 3 2 6\\r\\n', 'output': ['2']}, {'input': '7 3 2 7\\r\\n', 'output': ['2']}, {'input': '7 3 3 3\\r\\n', 'output': ['1']}, {'input': '7 3 3 4\\r\\n', 'output': ['2']}, {'input': '7 3 3 5\\r\\n', 'output': ['2']}, {'input': '7 3 3 6\\r\\n', 'output': ['2']}, {'input': '7 3 3 7\\r\\n', 'output': ['2']}, {'input': '7 3 4 4\\r\\n', 'output': ['1']}, {'input': '7 3 4 5\\r\\n', 'output': ['1']}, {'input': '7 3 4 6\\r\\n', 'output': ['1']}, {'input': '7 3 4 7\\r\\n', 'output': ['1']}, {'input': '7 3 5 5\\r\\n', 'output': ['1']}, {'input': '7 3 5 6\\r\\n', 'output': ['1']}, {'input': '7 3 5 7\\r\\n', 'output': ['2']}, {'input': '7 3 6 6\\r\\n', 'output': ['1']}, {'input': '7 3 6 7\\r\\n', 'output': ['2']}, {'input': '7 3 7 7\\r\\n', 'output': ['1']}, {'input': '8 3 1 1\\r\\n', 'output': ['1']}, {'input': '8 3 1 2\\r\\n', 'output': ['1']}, {'input': '8 3 1 3\\r\\n', 'output': ['1']}, {'input': '8 3 1 4\\r\\n', 'output': ['2']}, {'input': '8 3 1 5\\r\\n', 'output': ['2']}, {'input': '8 3 1 6\\r\\n', 'output': ['1']}, {'input': '8 3 1 7\\r\\n', 'output': ['2']}, {'input': '8 3 1 8\\r\\n', 'output': ['1']}, {'input': '8 3 2 2\\r\\n', 'output': ['1']}, {'input': '8 3 2 3\\r\\n', 'output': ['1']}, {'input': '8 3 2 4\\r\\n', 'output': ['2']}, {'input': '8 3 2 5\\r\\n', 'output': ['2']}, {'input': '8 3 2 6\\r\\n', 'output': ['2']}, {'input': '8 3 2 7\\r\\n', 'output': ['2']}, {'input': '8 3 2 8\\r\\n', 'output': ['2']}, {'input': '8 3 3 3\\r\\n', 'output': ['1']}, {'input': '8 3 3 4\\r\\n', 'output': ['2']}, {'input': '8 3 3 5\\r\\n', 'output': ['2']}, {'input': '8 3 3 6\\r\\n', 'output': ['2']}, {'input': '8 3 3 7\\r\\n', 'output': ['3']}, {'input': '8 3 3 8\\r\\n', 'output': ['2']}, {'input': '8 3 4 4\\r\\n', 'output': ['1']}, {'input': '8 3 4 5\\r\\n', 'output': ['1']}, {'input': '8 3 4 6\\r\\n', 'output': ['1']}, {'input': '8 3 4 7\\r\\n', 'output': ['2']}, {'input': '8 3 4 8\\r\\n', 'output': ['1']}, {'input': '8 3 5 5\\r\\n', 'output': ['1']}, {'input': '8 3 5 6\\r\\n', 'output': ['1']}, {'input': '8 3 5 7\\r\\n', 'output': ['2']}, {'input': '8 3 5 8\\r\\n', 'output': ['2']}, {'input': '8 3 6 6\\r\\n', 'output': ['1']}, {'input': '8 3 6 7\\r\\n', 'output': ['2']}, {'input': '8 3 6 8\\r\\n', 'output': ['2']}, {'input': '8 3 7 7\\r\\n', 'output': ['1']}, {'input': '8 3 7 8\\r\\n', 'output': ['1']}, {'input': '8 3 8 8\\r\\n', 'output': ['1']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner sc = new Scanner();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tint n = sc.nextInt();\n\t\tint m = sc.nextInt();\n\t\tint a = sc.nextInt();\n\t\tint b = sc.nextInt();\n\t\tint ans = 0;\n\t\tif (a > m) {\n\t\t\tans++;\n\t\t\ta -= m;\n\t\t}\n\t\tif (b > m) {\n\t\t\tans++;\n\t\t\tb -= m;\n\t\t}\n\t\tif (a > b) {\n\t\t\tans++;\n\t\t\tint t = a;\n\t\t\ta = b;\n\t\t\tb = t;\n\t\t}\n\t\tif (a == b) {\n\t\t\tans++;\n\t\t} else {\n\t\t\tans += (b - a) / m + 1;\n\t\t}\n\t\tout.println(ans);\n\t\tout.flush();\n\t\tout.close();\n\t}\n\n\tstatic class Scanner {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tScanner() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tString next() throws IOException {\n\t\t\twhile (st == null ||!st.hasMoreTokens()) {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tint nextInt() throws NumberFormatException, IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tlong nextLong() throws NumberFormatException, IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tdouble nextDouble() throws NumberFormatException, IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t}\n}"}
{"src_uid": "d8d449d0fccf755822548ddf9d74b9ab", "id": 100, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1900, "testcases": "[{'input': '4 4\\r\\n1 3\\r\\n1 2 3\\r\\n1 4 1\\r\\n2 4 1\\r\\n2 3 5\\r\\n2 7\\r\\n7 2\\r\\n1 2\\r\\n7 7\\r\\n', 'output': ['9\\r\\n']}, {'input': '3 3\\r\\n1 3\\r\\n1 2 2\\r\\n1 3 3\\r\\n3 2 1\\r\\n2 7\\r\\n2 7\\r\\n3 6\\r\\n', 'output': ['14\\r\\n']}, {'input': '3 1\\r\\n1 3\\r\\n1 2 2\\r\\n2 7\\r\\n2 7\\r\\n3 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 2\\r\\n3 3\\r\\n1 2 2\\r\\n1 3 3\\r\\n2 7\\r\\n2 7\\r\\n3 7\\r\\n', 'output': ['0\\r\\n']}, {'input': '2 2\\r\\n1 2\\r\\n1 2 3\\r\\n1 2 2\\r\\n2 7\\r\\n3 2\\r\\n', 'output': ['7\\r\\n']}, {'input': '1 0\\r\\n1 1\\r\\n74 47\\r\\n', 'output': ['0\\r\\n']}, {'input': '5 5\\r\\n1 3\\r\\n1 3 3\\r\\n5 1 6\\r\\n4 3 8\\r\\n1 3 3\\r\\n5 2 4\\r\\n1 2\\r\\n4 1\\r\\n2 5\\r\\n5 2\\r\\n1 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7 4\\r\\n3 4\\r\\n6 2 7\\r\\n6 1 4\\r\\n4 3 5\\r\\n3 6 4\\r\\n1 6\\r\\n7 3\\r\\n3 6\\r\\n6 5\\r\\n3 7\\r\\n4 4\\r\\n1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 5\\r\\n4 5\\r\\n1 4 8\\r\\n4 2 4\\r\\n4 1 3\\r\\n3 1 9\\r\\n4 5 4\\r\\n2 7\\r\\n2 7\\r\\n5 1\\r\\n6 3\\r\\n3 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '5 5\\r\\n5 4\\r\\n2 4 10\\r\\n2 4 7\\r\\n3 1 7\\r\\n2 4 2\\r\\n5 3 9\\r\\n6 17\\r\\n2 4\\r\\n3 12\\r\\n7 18\\r\\n2 5\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 7\\r\\n3 4\\r\\n2 3 5\\r\\n3 2 9\\r\\n4 1 9\\r\\n3 2 1\\r\\n3 1 2\\r\\n2 3 6\\r\\n1 2 8\\r\\n2 2\\r\\n5 3\\r\\n2 1\\r\\n1 5\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7 14\\r\\n7 5\\r\\n1 3 15\\r\\n2 1 10\\r\\n1 3 5\\r\\n2 4 9\\r\\n5 4 19\\r\\n1 3 11\\r\\n5 1 1\\r\\n2 4 5\\r\\n2 3 11\\r\\n3 2 10\\r\\n3 4 18\\r\\n5 1 18\\r\\n6 2 5\\r\\n5 6 2\\r\\n3 6\\r\\n6 7\\r\\n9 1\\r\\n3 6\\r\\n1 1\\r\\n9 4\\r\\n9 8\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7 15\\r\\n5 5\\r\\n3 4 6\\r\\n7 4 3\\r\\n7 2 8\\r\\n2 5 2\\r\\n7 2 8\\r\\n5 2 9\\r\\n3 1 7\\r\\n1 2 4\\r\\n7 1 8\\r\\n7 5 7\\r\\n2 4 2\\r\\n4 3 9\\r\\n7 4 2\\r\\n5 4 8\\r\\n7 2 8\\r\\n15 4\\r\\n18 18\\r\\n6 8\\r\\n16 5\\r\\n11 1\\r\\n5 3\\r\\n18 4\\r\\n', 'output': ['0\\r\\n']}, {'input': '8 20\\r\\n8 4\\r\\n6 3 1\\r\\n3 4 4\\r\\n5 2 2\\r\\n3 6 3\\r\\n5 8 7\\r\\n6 2 7\\r\\n8 6 4\\r\\n6 4 5\\r\\n4 2 5\\r\\n5 3 3\\r\\n5 7 3\\r\\n8 1 6\\r\\n2 4 3\\r\\n6 8 5\\r\\n1 8 6\\r\\n8 2 7\\r\\n8 2 3\\r\\n1 6 7\\r\\n8 7 3\\r\\n6 3 6\\r\\n2 2\\r\\n5 9\\r\\n1 9\\r\\n4 7\\r\\n1 8\\r\\n4 8\\r\\n9 7\\r\\n9 3\\r\\n', 'output': ['3\\r\\n']}, {'input': '8 20\\r\\n8 2\\r\\n1 7 5\\r\\n3 2 3\\r\\n2 7 6\\r\\n6 5 6\\r\\n4 8 5\\r\\n7 8 4\\r\\n1 6 2\\r\\n7 4 3\\r\\n4 3 1\\r\\n6 7 5\\r\\n4 2 4\\r\\n2 8 7\\r\\n6 2 2\\r\\n2 3 4\\r\\n3 7 3\\r\\n7 8 4\\r\\n5 4 2\\r\\n7 1 1\\r\\n5 7 3\\r\\n4 3 7\\r\\n4 4\\r\\n2 7\\r\\n3 5\\r\\n3 1\\r\\n3 5\\r\\n1 5\\r\\n11 4\\r\\n10 5\\r\\n', 'output': ['5\\r\\n']}, {'input': '9 20\\r\\n5 1\\r\\n8 9 3\\r\\n1 8 6\\r\\n5 6 3\\r\\n2 1 4\\r\\n7 1 6\\r\\n1 4 4\\r\\n3 2 4\\r\\n5 6 4\\r\\n3 9 6\\r\\n6 2 3\\r\\n9 1 7\\r\\n1 7 1\\r\\n1 3 3\\r\\n8 4 7\\r\\n7 1 7\\r\\n6 9 3\\r\\n5 8 3\\r\\n9 4 5\\r\\n6 9 1\\r\\n6 2 6\\r\\n1 7\\r\\n1 3\\r\\n6 1\\r\\n1 2\\r\\n6 1\\r\\n2 2\\r\\n4 7\\r\\n4 5\\r\\n4 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10 21\\r\\n9 5\\r\\n5 2 6\\r\\n1 9 7\\r\\n6 2 7\\r\\n8 10 2\\r\\n7 2 1\\r\\n6 9 6\\r\\n10 9 4\\r\\n2 10 2\\r\\n10 8 4\\r\\n10 1 7\\r\\n9 1 7\\r\\n1 8 5\\r\\n10 9 7\\r\\n7 5 3\\r\\n2 10 6\\r\\n4 7 3\\r\\n10 5 6\\r\\n5 10 4\\r\\n6 9 2\\r\\n2 3 6\\r\\n1 9 3\\r\\n10 6\\r\\n7 12\\r\\n13 3\\r\\n17 4\\r\\n18 17\\r\\n1 9\\r\\n16 16\\r\\n12 13\\r\\n1 10\\r\\n6 15\\r\\n', 'output': ['-1\\r\\n']}, {'input': '14 20\\r\\n7 2\\r\\n12 2 17\\r\\n13 3 8\\r\\n6 8 3\\r\\n14 4 16\\r\\n13 5 17\\r\\n7 14 7\\r\\n11 10 6\\r\\n12 4 16\\r\\n6 11 7\\r\\n2 13 12\\r\\n13 2 18\\r\\n2 10 12\\r\\n13 12 1\\r\\n12 5 4\\r\\n9 4 16\\r\\n7 6 7\\r\\n2 3 15\\r\\n4 14 1\\r\\n13 5 3\\r\\n10 9 3\\r\\n4 6\\r\\n4 5\\r\\n5 3\\r\\n2 6\\r\\n2 4\\r\\n1 2\\r\\n4 7\\r\\n2 2\\r\\n6 1\\r\\n1 1\\r\\n6 5\\r\\n7 7\\r\\n3 4\\r\\n2 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '15 29\\r\\n6 6\\r\\n7 12 7\\r\\n11 3 7\\r\\n4 5 18\\r\\n13 9 18\\r\\n3 8 12\\r\\n6 1 7\\r\\n4 1 4\\r\\n12 5 18\\r\\n10 8 15\\r\\n2 10 1\\r\\n9 7 11\\r\\n2 4 10\\r\\n2 14 3\\r\\n15 12 14\\r\\n1 13 8\\r\\n11 4 1\\r\\n15 11 2\\r\\n1 5 9\\r\\n5 2 5\\r\\n9 10 5\\r\\n15 2 17\\r\\n11 5 1\\r\\n14 15 14\\r\\n10 1 16\\r\\n15 9 2\\r\\n13 15 6\\r\\n13 5 1\\r\\n7 12 6\\r\\n12 5 13\\r\\n8 26\\r\\n35 17\\r\\n16 14\\r\\n12 13\\r\\n21 1\\r\\n31 9\\r\\n7 24\\r\\n11 31\\r\\n29 5\\r\\n16 22\\r\\n29 7\\r\\n30 20\\r\\n36 3\\r\\n26 22\\r\\n37 6\\r\\n', 'output': ['0\\r\\n']}, {'input': '5 0\\r\\n2 4\\r\\n1 2\\r\\n6 9\\r\\n4 585\\r\\n6 9\\r\\n7 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 8\\r\\n1 3\\r\\n1 2 1\\r\\n1 3 3\\r\\n1 5 1\\r\\n1 4 2\\r\\n5 4 3\\r\\n3 5 2\\r\\n2 3 8\\r\\n1 3 2\\r\\n2 7\\r\\n10 3\\r\\n4 7\\r\\n2 1\\r\\n1 1\\r\\n', 'output': ['7\\r\\n']}, {'input': '5 7\\r\\n1 3\\r\\n1 2 1\\r\\n1 3 3\\r\\n1 5 1\\r\\n1 4 2\\r\\n5 4 3\\r\\n3 5 2\\r\\n2 3 8\\r\\n2 7\\r\\n10 3\\r\\n4 7\\r\\n2 1\\r\\n1 1\\r\\n', 'output': ['10\\r\\n']}, {'input': '7 5\\r\\n6 7\\r\\n1 3 1000000000\\r\\n2 7 999999999\\r\\n5 7 123456789\\r\\n1 5 148879589\\r\\n5 4 1000000000\\r\\n1000000000 1000000000\\r\\n1000000000 1000000000\\r\\n999999999 145785965\\r\\n1000000000 1000000000\\r\\n1000000000 1\\r\\n123456789 123568591\\r\\n1000000000 1000000000\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7 8\\r\\n6 7\\r\\n1 3 1000000000\\r\\n1 6 1000000000\\r\\n1 2 1000000000\\r\\n6 2 1000000000\\r\\n2 5 1000000000\\r\\n5 7 1000000000\\r\\n4 7 1\\r\\n3 4 1000000000\\r\\n1000000000 100000000\\r\\n999999999 1\\r\\n1000000000 10000000\\r\\n1000000000 10000000\\r\\n1000000000 128\\r\\n1000000000 10000000\\r\\n1000000000 1000000000\\r\\n', 'output': ['130000000\\r\\n']}, {'input': '7 8\\r\\n6 7\\r\\n1 3 1000000000\\r\\n1 6 1000000000\\r\\n1 2 1000000000\\r\\n6 2 1000000000\\r\\n2 5 1000000000\\r\\n5 7 1000000000\\r\\n4 7 1\\r\\n3 4 999999999\\r\\n1000000000 100000000\\r\\n999999999 1\\r\\n999999999 10000000\\r\\n1000000000 10000000\\r\\n1000000000 128\\r\\n1000000000 10000000\\r\\n1000000000 1000000000\\r\\n', 'output': ['130000000\\r\\n']}, {'input': '7 8\\r\\n1 7\\r\\n1 3 1000000000\\r\\n1 6 1000000000\\r\\n1 2 1000000000\\r\\n6 2 1000000000\\r\\n2 5 1000000000\\r\\n5 7 1000000000\\r\\n4 7 1\\r\\n3 4 999999999\\r\\n1000000000 100000000\\r\\n999999999 1\\r\\n999999999 10000000\\r\\n1000000000 10000000\\r\\n1000000000 128\\r\\n1000000000 10000000\\r\\n1000000000 1000000000\\r\\n', 'output': ['120000000\\r\\n']}, {'input': '2 1\\r\\n1 2\\r\\n1 2 1\\r\\n1 999999998\\r\\n1 999999998\\r\\n', 'output': ['999999998\\r\\n']}, {'input': '3 3\\r\\n1 3\\r\\n2 1 1\\r\\n1 2 1000000000\\r\\n1 2 1000000000\\r\\n1000000000 1000000000\\r\\n1000000000 1000000000\\r\\n1000000000 1000000000\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n1 2\\r\\n2 1 1\\r\\n1 2 1000000000\\r\\n1 2 1000000000\\r\\n10000000 1000000000\\r\\n10000000 1000000000\\r\\n10000000 1000000000\\r\\n', 'output': ['1000000000\\r\\n']}, {'input': '3 3\\r\\n1 2\\r\\n2 1 1000000000\\r\\n1 2 1000000000\\r\\n1 2 1000000000\\r\\n10000000 1000000000\\r\\n10000000 1000000000\\r\\n10000000 1000000000\\r\\n', 'output': ['-1\\r\\n']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tstatic int n, m, x, y;\n\tstatic int[][] adj, t;\n\tstatic long[][] d;\n\tstatic long INF = (long) 1e18;\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tScanner sc = new Scanner(System.in);\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tn = sc.nextInt();\n\t\tm = sc.nextInt();\n\t\tx = sc.nextInt() - 1;\n\t\ty = sc.nextInt() - 1;\n\t\tadj = new int[n][n];\n\t\tt = new int[n][n];\n\t\td = new long[n][n];\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tint u = sc.nextInt() - 1;\n\t\t\tint v = sc.nextInt() - 1;\n\t\t\tint w = sc.nextInt();\n\t\t\tadj[u][v] = adj[v][u] = w;\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tt[i][i] = sc.nextInt();\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tif (i!= j)\n\t\t\t\t\tt[i][j] = t[j][i] = sc.nextInt();\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\td[i][j] = INF;\n\t\t\t}\n\t\t}\n\t\td[x][x] = 0;\n\t\tfor (int k = 0; k < n; k++) {\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\t\tif (d[i][k] + d[k][j] < d[i][j]) {\n\t\t\t\t\t\td[i][j] = d[i][k] + d[k][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (d[x][y] == INF) {\n\t\t\tpw.println(-1);\n\t\t} else {\n\t\t\tlong ans = 0;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tif (d[x][i] + adj[i][y] <= t[x][y]) {\n\t\t\t\t\tans += adj[x][y];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpw.println(ans);\n\t\t}\n\t\tpw.close();\n\t}\n\n\tstatic class Scanner {\n\t\tStringTokenizer st;\n\t\tBufferedReader br;\n\n\t\tpublic Scanner(InputStream s) {\n\t\t\tbr = new BufferedReader(new InputStreamReader(s));\n\t\t}\n\n\t\tpublic Scanner(FileReader"}
{"src_uid": "e9db8d048e9763cf38c584342dea9f53", "id": 101, "lang_cluster": "java", "lang": "Java 11", "difficulty": 2400, "testcases": "[{'input': '3 2001 2\\r\\n1 2\\r\\n2 3\\r\\n', 'output': ['1 2 3']}, {'input': '7 2020 6\\r\\n1 2\\r\\n1 3\\r\\n2 4\\r\\n2 5\\r\\n3 6\\r\\n3 7\\r\\n', 'output': ['1 2 3 7 4 6 5']}, {'input': '10 3630801 0\\r\\n', 'output': ['The times have changed']}, {'input': '3 2001 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['The times have changed']}, {'input': '5 2030 13\\r\\n5 2\\r\\n2 3\\r\\n2 4\\r\\n5 3\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n2 3\\r\\n2 3\\r\\n5 2\\r\\n2 4\\r\\n3 4\\r\\n5 4\\r\\n', 'output': ['The times have changed']}, {'input': '5 2019 12\\r\\n4 1\\r\\n1 2\\r\\n4 2\\r\\n4 3\\r\\n5 3\\r\\n5 1\\r\\n3 2\\r\\n4 2\\r\\n1 2\\r\\n1 3\\r\\n5 1\\r\\n1 3\\r\\n', 'output': ['The times have changed']}, {'input': '8 2004 6\\r\\n7 4\\r\\n6 4\\r\\n7 5\\r\\n5 8\\r\\n8 4\\r\\n8 2\\r\\n', 'output': ['1 6 2 8 4 7 3 5']}, {'input': '6 2004 18\\r\\n1 3\\r\\n2 1\\r\\n6 2\\r\\n5 1\\r\\n4 6\\r\\n5 1\\r\\n2 3\\r\\n6 2\\r\\n6 1\\r\\n2 1\\r\\n4 1\\r\\n2 3\\r\\n5 1\\r\\n2 1\\r\\n4 6\\r\\n5 2\\r\\n1 3\\r\\n5 6\\r\\n', 'output': ['The times have changed']}, {'input': '7 2035 5\\r\\n5 2\\r\\n3 2\\r\\n4 2\\r\\n4 2\\r\\n3 1\\r\\n', 'output': ['2 7 1 6 3 4 5']}, {'input': '16 20922789890000 0\\r\\n', 'output': ['16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1']}, {'input': '10 2001 13\\r\\n8 3\\r\\n7 6\\r\\n5 7\\r\\n2 1\\r\\n1 4\\r\\n5 10\\r\\n7 6\\r\\n6 1\\r\\n1 8\\r\\n3 10\\r\\n5 1\\r\\n5 8\\r\\n1 3\\r\\n', 'output': ['5 1 7 8 2 4 3 6 9 10']}, {'input': '10 2670 33\\r\\n5 7\\r\\n4 10\\r\\n5 9\\r\\n5 9\\r\\n7 8\\r\\n9 10\\r\\n4 6\\r\\n4 6\\r\\n1 8\\r\\n10 3\\r\\n4 7\\r\\n9 8\\r\\n6 1\\r\\n6 5\\r\\n10 1\\r\\n9 10\\r\\n4 6\\r\\n8 2\\r\\n6 9\\r\\n6 8\\r\\n6 5\\r\\n10 3\\r\\n6 2\\r\\n3 1\\r\\n7 9\\r\\n5 2\\r\\n4 10\\r\\n6 3\\r\\n6 2\\r\\n5 3\\r\\n3 1\\r\\n6 8\\r\\n6 2\\r\\n', 'output': ['The times have changed']}, {'input': '14 2001 22\\r\\n11 5\\r\\n14 6\\r\\n2 5\\r\\n2 4\\r\\n2 3\\r\\n7 2\\r\\n1 5\\r\\n7 3\\r\\n6 8\\r\\n1 5\\r\\n6 7\\r\\n1 10\\r\\n3 5\\r\\n4 1\\r\\n14 7\\r\\n7 8\\r\\n4 8\\r\\n1 11\\r\\n12 1\\r\\n10 11\\r\\n11 3\\r\\n8 3\\r\\n', 'output': ['7 4 11 5 12 2 3 8 13 9 10 6 14 1']}, {'input': '10 2001 32\\r\\n1 3\\r\\n2 9\\r\\n5 3\\r\\n9 5\\r\\n9 3\\r\\n6 9\\r\\n6 3\\r\\n5 8\\r\\n2 7\\r\\n2 7\\r\\n8 7\\r\\n5 4\\r\\n1 6\\r\\n4 8\\r\\n8 3\\r\\n9 8\\r\\n1 5\\r\\n5 10\\r\\n2 4\\r\\n2 6\\r\\n9 10\\r\\n1 4\\r\\n1 6\\r\\n4 7\\r\\n9 10\\r\\n9 5\\r\\n9 3\\r\\n6 10\\r\\n6 9\\r\\n10 7\\r\\n1 7\\r\\n1 2\\r\\n', 'output': ['1 2 8 6 5 3 10 7 4 9']}, {'input': '15 2001 8\\r\\n9 2\\r\\n4 8\\r\\n12 13\\r\\n6 7\\r\\n12 4\\r\\n7 2\\r\\n6 13\\r\\n4 11\\r\\n', 'output': ['1 5 6 8 9 2 3 10 4 11 12 7 13 14 15']}, {'input': '14 2001 15\\r\\n12 3\\r\\n5 6\\r\\n11 3\\r\\n6 7\\r\\n3 6\\r\\n5 13\\r\\n11 2\\r\\n1 2\\r\\n14 3\\r\\n1 2\\r\\n8 4\\r\\n13 8\\r\\n3 7\\r\\n5 11\\r\\n8 9\\r\\n', 'output': ['1 4 7 10 2 11 12 9 13 14 3 5 8 6']}, {'input': '14 11414 33\\r\\n11 14\\r\\n11 8\\r\\n3 5\\r\\n14 6\\r\\n3 1\\r\\n9 13\\r\\n11 4\\r\\n11 8\\r\\n4 6\\r\\n6 2\\r\\n3 10\\r\\n10 1\\r\\n11 9\\r\\n10 5\\r\\n9 8\\r\\n6 12\\r\\n10 5\\r\\n9 10\\r\\n8 13\\r\\n9 11\\r\\n8 10\\r\\n8 9\\r\\n14 3\\r\\n7 1\\r\\n5 13\\r\\n13 8\\r\\n4 8\\r\\n1 6\\r\\n1 8\\r\\n8 2\\r\\n6 7\\r\\n10 14\\r\\n2 1\\r\\n', 'output': ['The times have changed']}, {'input': '13 3651 42\\r\\n8 4\\r\\n13 7\\r\\n8 5\\r\\n6 2\\r\\n7 13\\r\\n12 10\\r\\n7 9\\r\\n9 4\\r\\n3 4\\r\\n8 1\\r\\n12 6\\r\\n3 4\\r\\n7 1\\r\\n4 1\\r\\n7 5\\r\\n2 5\\r\\n2 7\\r\\n6 11\\r\\n9 8\\r\\n3 2\\r\\n11 12\\r\\n1 2\\r\\n7 12\\r\\n8 11\\r\\n11 13\\r\\n10 12\\r\\n11 1\\r\\n8 2\\r\\n9 7\\r\\n6 13\\r\\n8 12\\r\\n10 1\\r\\n2 12\\r\\n1 2\\r\\n8 7\\r\\n6 8\\r\\n1 8\\r\\n3 12\\r\\n13 6\\r\\n7 13\\r\\n5 4\\r\\n7 8\\r\\n', 'output': ['The times have changed']}, {'input': '11 2001 34\\r\\n2 1\\r\\n7 5\\r\\n9 8\\r\\n5 2\\r\\n9 5\\r\\n9 1\\r\\n9 11\\r\\n1 5\\r\\n7 2\\r\\n9 1\\r\\n4 7\\r\\n3 11\\r\\n9 7\\r\\n2 1\\r\\n3 7\\r\\n7 3\\r\\n7 6\\r\\n8 1\\r\\n1 9\\r\\n11 8\\r\\n8 4\\r\\n8 9\\r\\n7 11\\r\\n7 5\\r\\n9 11\\r\\n7 9\\r\\n8 11\\r\\n8 7\\r\\n4 2\\r\\n7 4\\r\\n2 4\\r\\n6 1\\r\\n4 10\\r\\n11 2\\r\\n', 'output': ['The times have changed']}, {'input': '13 2001 5\\r\\n8 6\\r\\n11 2\\r\\n13 8\\r\\n6 3\\r\\n3 12\\r\\n', 'output': ['1 3 7 8 9 6 10 5 11 12 2 13 4']}, {'input': '16 2001 68\\r\\n16 15\\r\\n16 6\\r\\n4 1\\r\\n14 15\\r\\n13 5\\r\\n1 8\\r\\n1 5\\r\\n12 10\\r\\n3 11\\r\\n8 7\\r\\n6 5\\r\\n4 3\\r\\n5 11\\r\\n6 14\\r\\n13 5\\r\\n6 4\\r\\n10 7\\r\\n10 8\\r\\n9 15\\r\\n2 4\\r\\n5 15\\r\\n5 14\\r\\n12 4\\r\\n12 8\\r\\n10 1\\r\\n12 2\\r\\n11 7\\r\\n2 9\\r\\n10 16\\r\\n16 2\\r\\n13 10\\r\\n2 15\\r\\n11 15\\r\\n16 4\\r\\n13 2\\r\\n10 6\\r\\n1 9\\r\\n16 6\\r\\n13 1\\r\\n1 9\\r\\n4 3\\r\\n8 7...', 'output': ['8 6 9 7 11 5 14 10 15 3 12 1 2 13 16 4']}, {'input': '16 919540 100\\r\\n3 8\\r\\n3 10\\r\\n10 1\\r\\n1 14\\r\\n13 3\\r\\n9 13\\r\\n14 6\\r\\n5 3\\r\\n8 4\\r\\n14 12\\r\\n16 1\\r\\n13 10\\r\\n2 10\\r\\n9 12\\r\\n5 10\\r\\n8 12\\r\\n7 14\\r\\n15 11\\r\\n2 6\\r\\n5 3\\r\\n15 16\\r\\n8 14\\r\\n5 7\\r\\n15 14\\r\\n5 14\\r\\n8 6\\r\\n8 7\\r\\n7 6\\r\\n10 1\\r\\n7 15\\r\\n9 12\\r\\n11 14\\r\\n2 7\\r\\n3 7\\r\\n3 10\\r\\n9 13\\r\\n5 2\\r\\n16 11\\r\\n10 1\\r\\n4 16\\r\\n4 2\\r\\n...', 'output': ['The times have changed']}, {'input': '16 2005 99\\r\\n13 11\\r\\n12 10\\r\\n15 11\\r\\n10 15\\r\\n7 10\\r\\n15 14\\r\\n10 14\\r\\n13 3\\r\\n7 3\\r\\n11 8\\r\\n6 14\\r\\n16 13\\r\\n7 2\\r\\n4 8\\r\\n6 11\\r\\n9 6\\r\\n9 1\\r\\n16 4\\r\\n14 3\\r\\n6 14\\r\\n2 8\\r\\n15 6\\r\\n9 13\\r\\n7 9\\r\\n15 13\\r\\n14 16\\r\\n3 5\\r\\n8 5\\r\\n9 15\\r\\n16 5\\r\\n13 2\\r\\n10 15\\r\\n16 13\\r\\n14 1\\r\\n12 9\\r\\n14 13\\r\\n7 11\\r\\n11 2\\r\\n14 4\\r\\n3 11\\r\\n...', 'output': ['The times have changed']}, {'input': '16 2046 84\\r\\n2 15\\r\\n1 10\\r\\n7 1\\r\\n1 10\\r\\n5 8\\r\\n8 10\\r\\n11 14\\r\\n8 13\\r\\n7 15\\r\\n16 15\\r\\n6 12\\r\\n12 15\\r\\n10 15\\r\\n10 9\\r\\n1 10\\r\\n5 10\\r\\n1 4\\r\\n7 13\\r\\n5 9\\r\\n3 13\\r\\n2 14\\r\\n5 15\\r\\n13 6\\r\\n7 16\\r\\n16 12\\r\\n2 12\\r\\n5 6\\r\\n8 16\\r\\n12 11\\r\\n1 2\\r\\n2 16\\r\\n5 14\\r\\n2 16\\r\\n5 2\\r\\n4 6\\r\\n2 16\\r\\n7 1\\r\\n13 11\\r\\n7 13\\r\\n1 2\\r\\n3 6\\r\\n5...', 'output': ['The times have changed']}, {'input': '16 2001 82\\r\\n12 11\\r\\n9 11\\r\\n3 5\\r\\n12 3\\r\\n9 7\\r\\n16 15\\r\\n15 4\\r\\n15 11\\r\\n14 7\\r\\n11 10\\r\\n4 1\\r\\n11 13\\r\\n15 6\\r\\n4 13\\r\\n3 11\\r\\n10 4\\r\\n10 14\\r\\n7 5\\r\\n15 4\\r\\n12 6\\r\\n16 8\\r\\n3 9\\r\\n3 11\\r\\n6 8\\r\\n13 5\\r\\n15 2\\r\\n11 5\\r\\n2 8\\r\\n16 12\\r\\n1 2\\r\\n3 8\\r\\n16 14\\r\\n16 3\\r\\n8 14\\r\\n15 11\\r\\n16 2\\r\\n3 4\\r\\n16 5\\r\\n12 8\\r\\n10 4\\r\\n6 11...', 'output': ['10 11 3 9 16 6 14 12 5 8 7 2 15 13 4 1']}, {'input': '16 2001 65\\r\\n12 9\\r\\n4 11\\r\\n10 12\\r\\n6 12\\r\\n14 2\\r\\n13 2\\r\\n8 13\\r\\n3 11\\r\\n8 6\\r\\n8 13\\r\\n1 2\\r\\n11 8\\r\\n2 16\\r\\n2 10\\r\\n15 4\\r\\n3 8\\r\\n10 16\\r\\n5 7\\r\\n8 16\\r\\n10 7\\r\\n8 2\\r\\n8 9\\r\\n1 16\\r\\n15 10\\r\\n3 12\\r\\n12 7\\r\\n15 16\\r\\n3 8\\r\\n4 1\\r\\n13 7\\r\\n11 1\\r\\n14 3\\r\\n7 9\\r\\n13 5\\r\\n11 12\\r\\n3 5\\r\\n4 7\\r\\n14 1\\r\\n3 13\\r\\n9 16\\r\\n15 14\\r\\n11...', 'output': ['8 10 3 4 12 9 14 6 15 11 5 13 7 2 1 16']}, {'input': '16 2001 99\\r\\n13 12\\r\\n3 16\\r\\n4 11\\r\\n5 7\\r\\n2 13\\r\\n7 14\\r\\n5 2\\r\\n5 3\\r\\n4 13\\r\\n9 3\\r\\n7 14\\r\\n13 15\\r\\n6 13\\r\\n14 15\\r\\n5 16\\r\\n10 16\\r\\n6 5\\r\\n2 8\\r\\n1 6\\r\\n4 11\\r\\n6 3\\r\\n7 12\\r\\n9 16\\r\\n3 10\\r\\n6 11\\r\\n5 15\\r\\n4 6\\r\\n14 16\\r\\n9 2\\r\\n13 7\\r\\n3 8\\r\\n15 3\\r\\n6 2\\r\\n10 12\\r\\n4 6\\r\\n1 5\\r\\n4 7\\r\\n7 14\\r\\n5 11\\r\\n3 12\\r\\n13 7\\r\\n14 10\\r...', 'output': ['1 6 11 2 5 3 8 14 4 12 15 16 7 9 10 13']}, {'input': '16 2001 69\\r\\n2 15\\r\\n10 6\\r\\n10 11\\r\\n3 11\\r\\n6 7\\r\\n1 15\\r\\n6 1\\r\\n1 13\\r\\n13 5\\r\\n10 15\\r\\n7 14\\r\\n4 1\\r\\n7 11\\r\\n5 3\\r\\n10 7\\r\\n9 1\\r\\n12 16\\r\\n13 11\\r\\n7 12\\r\\n12 2\\r\\n4 13\\r\\n6 7\\r\\n8 12\\r\\n10 9\\r\\n3 16\\r\\n8 15\\r\\n6 1\\r\\n6 7\\r\\n5 14\\r\\n4 10\\r\\n14 2\\r\\n5 3\\r\\n6 5\\r\\n6 5\\r\\n9 13\\r\\n9 14\\r\\n10 15\\r\\n10 6\\r\\n5 3\\r\\n10 5\\r\\n7 13\\r\\n6 11...', 'output': ['5 12 13 1 10 3 6 8 4 2 14 9 7 11 15 16']}, {'input': '16 2001 87\\r\\n13 7\\r\\n12 6\\r\\n10 7\\r\\n1 7\\r\\n15 16\\r\\n16 14\\r\\n2 3\\r\\n5 6\\r\\n10 4\\r\\n15 14\\r\\n13 1\\r\\n6 14\\r\\n2 9\\r\\n2 9\\r\\n16 8\\r\\n14 7\\r\\n4 12\\r\\n5 4\\r\\n8 14\\r\\n13 4\\r\\n2 5\\r\\n6 3\\r\\n5 14\\r\\n11 12\\r\\n10 2\\r\\n16 13\\r\\n1 3\\r\\n1 7\\r\\n15 13\\r\\n15 16\\r\\n14 3\\r\\n16 3\\r\\n8 4\\r\\n2 7\\r\\n4 3\\r\\n4 6\\r\\n1 14\\r\\n6 14\\r\\n9 14\\r\\n1 7\\r\\n1 10\\r\\n8 11\\r...', 'output': ['4 7 15 10 8 13 16 5 9 6 11 12 3 14 1 2']}, {'input': '16 1000000000000000000 0\\r\\n', 'output': ['The times have changed']}, {'input': '16 1000000000000000000 1\\r\\n16 15\\r\\n', 'output': ['The times have changed']}, {'input': '16 1000000000000000000 1\\r\\n2 1\\r\\n', 'output': ['The times have changed']}, {'input': '16 405483668029442000 2\\r\\n16 15\\r\\n15 14\\r\\n', 'output': ['The times have changed']}, {'input': '16 2001 99\\r\\n4 15\\r\\n13 15\\r\\n11 8\\r\\n10 13\\r\\n13 16\\r\\n8 15\\r\\n7 9\\r\\n10 5\\r\\n7 8\\r\\n8 13\\r\\n8 2\\r\\n2 13\\r\\n15 1\\r\\n3 12\\r\\n8 3\\r\\n8 2\\r\\n10 7\\r\\n10 14\\r\\n16 4\\r\\n3 1\\r\\n3 5\\r\\n5 9\\r\\n2 16\\r\\n15 1\\r\\n3 4\\r\\n3 14\\r\\n6 3\\r\\n10 13\\r\\n14 5\\r\\n11 7\\r\\n14 9\\r\\n4 14\\r\\n4 12\\r\\n7 16\\r\\n8 13\\r\\n11 1\\r\\n2 3\\r\\n14 12\\r\\n6 8\\r\\n6 7\\r\\n11 7\\r\\n6 12...', 'output': ['15 6 7 10 14 1 4 5 16 3 2 13 8 11 12 9']}, {'input': '16 2001 94\\r\\n12 13\\r\\n11 1\\r\\n8 3\\r\\n8 11\\r\\n11 5\\r\\n8 2\\r\\n8 9\\r\\n7 15\\r\\n6 11\\r\\n8 6\\r\\n10 13\\r\\n13 11\\r\\n7 5\\r\\n6 3\\r\\n14 2\\r\\n15 10\\r\\n3 4\\r\\n9 1\\r\\n14 10\\r\\n14 15\\r\\n11 1\\r\\n12 15\\r\\n2 10\\r\\n6 5\\r\\n2 6\\r\\n16 2\\r\\n8 7\\r\\n16 6\\r\\n7 2\\r\\n15 9\\r\\n3 15\\r\\n13 5\\r\\n11 4\\r\\n14 10\\r\\n6 11\\r\\n12 10\\r\\n13 4\\r\\n12 6\\r\\n1 4\\r\\n2 10\\r\\n6 15\\r\\n1...', 'output': ['14 5 8 15 16 7 3 2 10 11 13 6 12 1 9 4']}, {'input': '16 2001 97\\r\\n12 6\\r\\n13 8\\r\\n7 15\\r\\n11 3\\r\\n2 3\\r\\n9 15\\r\\n4 7\\r\\n10 8\\r\\n3 1\\r\\n11 10\\r\\n2 14\\r\\n4 7\\r\\n9 2\\r\\n16 8\\r\\n11 12\\r\\n6 2\\r\\n15 14\\r\\n8 7\\r\\n2 10\\r\\n9 6\\r\\n6 4\\r\\n13 11\\r\\n12 6\\r\\n1 4\\r\\n8 4\\r\\n6 1\\r\\n16 14\\r\\n12 2\\r\\n6 14\\r\\n1 14\\r\\n11 6\\r\\n11 16\\r\\n1 5\\r\\n10 16\\r\\n5 16\\r\\n11 3\\r\\n2 4\\r\\n3 14\\r\\n11 10\\r\\n13 5\\r\\n12 16\\r\\n1 ...', 'output': ['8 6 7 13 9 5 14 12 3 10 2 4 1 16 15 11']}, {'input': '16 2001 95\\r\\n6 9\\r\\n5 3\\r\\n7 16\\r\\n11 14\\r\\n2 5\\r\\n13 10\\r\\n2 1\\r\\n8 6\\r\\n7 10\\r\\n12 7\\r\\n12 13\\r\\n2 4\\r\\n3 10\\r\\n7 13\\r\\n1 8\\r\\n14 6\\r\\n1 4\\r\\n7 14\\r\\n1 15\\r\\n7 14\\r\\n11 13\\r\\n13 5\\r\\n3 14\\r\\n11 12\\r\\n11 1\\r\\n5 15\\r\\n16 14\\r\\n14 6\\r\\n16 13\\r\\n8 6\\r\\n14 10\\r\\n14 1\\r\\n16 9\\r\\n14 8\\r\\n13 3\\r\\n15 8\\r\\n7 10\\r\\n11 7\\r\\n4 10\\r\\n11 4\\r\\n11 2...', 'output': ['10 5 8 14 7 13 3 12 15 16 1 2 6 9 11 4']}, {'input': '16 2001 93\\r\\n12 13\\r\\n13 11\\r\\n10 2\\r\\n5 9\\r\\n1 15\\r\\n11 9\\r\\n8 9\\r\\n6 9\\r\\n15 11\\r\\n16 14\\r\\n14 2\\r\\n8 13\\r\\n1 2\\r\\n14 8\\r\\n14 8\\r\\n14 4\\r\\n1 15\\r\\n1 9\\r\\n16 11\\r\\n2 9\\r\\n14 10\\r\\n2 3\\r\\n10 6\\r\\n12 5\\r\\n15 6\\r\\n10 7\\r\\n12 5\\r\\n6 5\\r\\n7 1\\r\\n3 5\\r\\n7 13\\r\\n6 9\\r\\n8 3\\r\\n8 4\\r\\n3 4\\r\\n12 5\\r\\n13 6\\r\\n16 11\\r\\n8 13\\r\\n2 12\\r\\n4 12\\r\\n5 9\\r...', 'output': ['6 7 8 9 14 13 4 5 16 3 15 10 11 2 12 1']}, {'input': '16 2001 97\\r\\n12 3\\r\\n10 2\\r\\n14 9\\r\\n4 7\\r\\n9 7\\r\\n8 13\\r\\n3 15\\r\\n9 8\\r\\n13 2\\r\\n4 7\\r\\n5 14\\r\\n9 1\\r\\n5 10\\r\\n6 4\\r\\n13 12\\r\\n2 15\\r\\n7 1\\r\\n2 4\\r\\n16 12\\r\\n7 12\\r\\n5 9\\r\\n7 15\\r\\n8 3\\r\\n9 4\\r\\n14 12\\r\\n4 15\\r\\n12 15\\r\\n2 12\\r\\n13 6\\r\\n8 16\\r\\n2 11\\r\\n7 1\\r\\n9 7\\r\\n5 3\\r\\n4 15\\r\\n16 11\\r\\n13 1\\r\\n7 16\\r\\n5 11\\r\\n10 9\\r\\n4 1\\r\\n1 16\\r\\n4...', 'output': ['11 7 14 9 1 8 10 5 4 3 15 13 6 2 16 12']}, {'input': '16 2001 96\\r\\n12 16\\r\\n1 7\\r\\n5 4\\r\\n13 12\\r\\n6 12\\r\\n11 16\\r\\n16 7\\r\\n1 14\\r\\n2 11\\r\\n3 11\\r\\n6 3\\r\\n3 10\\r\\n13 3\\r\\n5 1\\r\\n4 12\\r\\n10 11\\r\\n9 5\\r\\n6 15\\r\\n3 2\\r\\n8 12\\r\\n13 8\\r\\n4 6\\r\\n5 1\\r\\n15 7\\r\\n15 12\\r\\n5 1\\r\\n1 11\\r\\n5 15\\r\\n5 15\\r\\n12 16\\r\\n10 14\\r\\n9 11\\r\\n4 2\\r\\n15 11\\r\\n6 8\\r\\n5 3\\r\\n1 4\\r\\n13 6\\r\\n12 3\\r\\n10 7\\r\\n13 15\\r\\n1...', 'output': ['4 11 10 5 2 6 15 7 1 12 13 9 3 16 8 14']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tstatic int n;\n\tstatic long y;\n\tstatic int m;\n\tstatic int[][] a;\n\tstatic int[][] b;\n\tstatic int[][] c;\n\tstatic int[][] d;\n\tstatic int[][] e;\n\tstatic int[][] f;\n\tstatic int[][] g;\n\tstatic int[][] h;\n\tstatic int[][] i;\n\tstatic int[][] j;\n\tstatic int[][] k;\n\tstatic int[][] l;\n\tstatic int[][] m1;\n\tstatic int[][] m2;\n\tstatic int[][] m3;\n\tstatic int[][] m4;\n\tstatic int[][] m5;\n\tstatic int[][] m6;\n\tstatic int[][] m7;\n\tstatic int[][] m8;\n\tstatic int[][] m9;\n\tstatic int[][] m10;\n\tstatic int[][] m11;\n\tstatic int[][] m12;\n\tstatic int[][] m13;\n\tstatic int[][] m14;\n\tstatic int[][] m15;\n\tstatic int[][] m16;\n\tstatic int[][] m17;\n\tstatic int[][] m18;\n\tstatic int[][] m19;\n\tstatic int[][] m20;\n\tstatic int[][] m21;\n\tstatic int[][] m22;\n\tstatic int[][] m23;\n\tstatic int[][] m24;\n\tstatic int[][] m25;\n\tstatic int[][] m26;\n\tstatic int[][] m27;\n\tstatic int[][] m28;\n\tstatic int[][] m29;\n\tstatic int[][] m30;\n\tstatic int[][] m31;\n\tstatic int[][] m32;\n\tstatic int[][] m33;\n\tstatic int[][] m34;\n\tstatic int[][] m35;\n\tstatic int[][] m36;\n\tstatic int[][] m37;\n\tstatic int[][] m38;\n\tstatic int[][] m39;\n\tstatic int[][] m40;\n\tstatic int[][] m41;\n\tstatic int[][] m42;\n\tstatic int[][] m43;\n\tstatic int[][] m44;\n\tstatic int[][] m45;\n\tstatic int[][] m46;\n\tstatic int[][] m47;\n\tstatic int[][] m48;\n\tstatic int[][] m49;\n\tstatic int[][] m50;\n\tstatic int[][] m51;\n\tstatic int[][] m52;\n\tstatic int[][] m53;\n\tstatic int[][] m54;\n\tstatic int[][] m55;\n\tstatic int[][] m56;\n\tstatic int[][] m57;\n\tstatic int[][] m58;\n\tstatic int[][] m59;\n\tstatic int[][] m60;\n\tstatic int[][] m61;\n\tstatic int[][] m62;\n\tstatic int[][] m63;\n\tstatic int[][] m64;\n\tstatic int[][] m65;\n\tstatic int[][] m66;\n\tstatic int[][] m67;\n\tstatic int[][] m68;\n\tstatic int[][] m69;\n\tstatic int[][] m70;\n\tstatic int[][] m71;\n\tstatic int[][] m72;\n\tstatic int[][] m73;\n\tstatic int[][] m74;\n\tstatic int[][] m75;\n\tstatic int[][] m76;\n\tstatic int[][] m77;\n\tstatic int[][] m78;\n\tstatic int[][] m79;\n\tstatic int[][] m80;\n\tstatic int[][] m81;\n\tstatic int[][] m82;\n\tstatic int[][] m83;\n\tstatic int[][] m84;\n\tstatic int[][] m85;\n\tstatic int[][] m86;\n\tstatic int[][] m87;\n\tstatic int[][] m88;\n\tstatic int[][] m89;\n\tstatic int[][] m90;\n\tstatic int[][] m91;\n\tstatic int[][] m92;\n\tstatic int[][] m93;\n\tstatic int[][] m94;\n\tstatic int[][] m95;\n\tstatic int[][] m96;\n\tstatic int[][] m97;\n\tstatic int[][] m98;\n\tstatic int[][] m99;\n\tstatic int[][] m100;\n\tstatic int[][] m101;\n\tstatic int[][] m102;\n\tstatic int[][] m103;\n\tstatic int[][] m104;\n\tstatic int[][] m105;\n\tstatic int[][] m106;\n\tstatic int[][] m107;\n\tstatic int[][] m108;\n\tstatic int[][] m109;\n\tstatic int[][] m110;\n\tstatic int[][] m111;\n\tstatic int[][] m112;\n\tstatic int[][] m113;\n\tstatic int[][] m114;\n\tstatic int[][] m115;\n\tstatic int[][] m116;\n\tstatic int[][] m117;\n\tstatic int[][] m118;\n\tstatic int[][] m119;\n\tstatic int[][] m120;\n\tstatic int[][] m121;\n\tstatic int[][] m122;\n\tstatic int[][] m123;\n\tstatic int[][] m124;\n\tstatic int[][] m125;\n\tstatic int[][] m126;\n\tstatic int[][] m127;\n\tstatic int[][] m128;\n\tstatic int[][] m129;\n\tstatic int[][] m130;\n\tstatic int[][] m131;\n\tstatic int[][] m132;\n\tstatic int[][] m133;\n\tstatic int[][] m134;\n\tstatic int[][] m135;\n\tstatic int[][] m136;\n\tstatic int[][] m137;\n\tstatic int[][] m138;\n\tstatic int[][] m139;\n\tstatic int[][] m140;\n\tstatic int[][] m141;\n\tstatic int[][] m142;\n\tstatic int[][] m143;\n\tstatic int[][] m144;\n\tstatic int[][] m145;\n\tstatic int[][] m146;\n\tstatic int[][] m147;\n\tstatic int[][] m148;\n\tstatic int[][] m149;\n\tstatic int[][] m150;\n\tstatic int[][] m151;\n\tstatic int[][] m152;\n\tstatic int[][] m153;\n\tstatic int[][] m154;\n\tstatic int[][] m155;\n\tstatic int[][] m156;\n\tstatic int[][] m157;\n\tstatic int[][] m158;\n\tstatic int[][] m159;\n\tstatic int[][] m160;\n\tstatic int[][] m161;\n\tstatic int[][] m162;\n\tstatic int[][] m163;\n\tstatic int[][] m164;\n\tstatic int[][] m165;\n\tstatic int[][] m166;\n\tstatic int[][] m167;\n\tstatic int[][] m168;\n\tstatic int[][] m169;\n\tstatic int[][] m170;\n\tstatic int[][] m171;\n\tstatic int[][] m172;\n\tstatic int[][] m173;\n\tstatic int[][] m174;\n\tstatic int[][] m175;\n\tstatic int[][] m176;\n\tstatic int[][] m177;\n\tstatic int[][] m178;\n\tstatic int[][] m179;\n\tstatic int[][] m180;\n\tstatic int[][] m181;\n\tstatic int[][] m182;\n\tstatic int[][] m183;\n\tstatic int[][] m184;\n"}
{"src_uid": "8b6f633802293202531264446d33fee5", "id": 102, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1800, "testcases": "[{'input': ['1 10 7\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['4 0 9\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['10 7 8\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['6 4 10\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['4 1 4\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['4 7 9\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['13 4 51\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['0 0 1\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1 0 1\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['2 1 3\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['0 2 2\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['2 3 1\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['3 0 3\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['1 1 2\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['3 2 1\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['0 3 3\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['4 0 13\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['1 2 13\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['4 3 12\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['1 2 11\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['4 3 12\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['815 216 182\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['218 550 593\\r\\n'], 'output': ['1 000000011\\r\\n']}, {'input': ['116482865 344094604 3271060\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['19749161 751031022 646204\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['70499104 10483793 5504995\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1960930 562910 606828\\r\\n'], 'output': ['1 000000011\\r\\n']}, {'input': ['8270979 4785512 9669629\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['9323791 4748006 5840080\\r\\n'], 'output': ['1 000000005\\r\\n']}, {'input': ['972037745 4602117 5090186\\r\\n'], 'output': ['1 000000011\\r\\n']}, {'input': ['585173560 4799128 5611727\\r\\n'], 'output': ['1 000000036\\r\\n']}, {'input': ['22033548 813958 4874712\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['702034015 6007275 9777625\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['218556 828183 7799410\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['1167900 2709798 6800151\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['7004769 3114686 4659684\\r\\n'], 'output': ['1 000000002\\r\\n']}, {'input': ['1000000000 1000000000 10000000\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['3631 1628 367377\\r\\n'], 'output': ['1 000000009\\r\\n']}, {'input': ['3966 5002 273075\\r\\n'], 'output': ['1 000000008\\r\\n']}, {'input': ['2388 2896 73888\\r\\n'], 'output': ['1 000000016\\r\\n']}, {'input': ['0 0 1\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1 0 1\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['0 1 1\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1 1 1\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1000000000 0 1\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['0 1000000000 1\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1000000000 1000000000 1\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1000000000 0 10000000\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['0 1000000000 10000000\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['0 0 10000000\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['0 999999999 10000000\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['999999999 0 10000000\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['999999999 999999999 10000000\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['999999999 1000000000 10000000\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1000000000 999999999 10000000\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1000000000 10000 10000000\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1 1 1337\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['576694 1234562 1234567\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['12350 12000 12345\\r\\n'], 'output': ['1 000000011\\r\\n']}, {'input': ['576695 1234562 1234567\\r\\n'], 'output': ['1 000576695\\r\\n']}, {'input': ['0 0 11\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['999999999 999999999 9009009\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1 0 7\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['1 1 7\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1000000000 9999991 10000000\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['9902593 9902584 9902593\\r\\n'], 'output': ['1 002490619\\r\\n']}, {'input': ['10000000 9999977 9999979\\r\\n'], 'output': ['1 009909503\\r\\n']}, {'input': ['1000000000 1000000000 9999999\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['11 9 11\\r\\n'], 'output': ['1 000000010\\r\\n']}, {'input': ['0 7 13\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1 0 3\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['100 2 3\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['2 7 13\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1 0 9\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['1000000000 9999995 10000000\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1000000000 25 30\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['243 1001 1003\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['9 9 11\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['0 1 11\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['4 4 7\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1000000000 1 10\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1 0 11\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['0 0 11\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['0 0 3\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['10 12000 12345\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1000000000 0 2\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['0 1 3\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['3 1 7\\r\\n'], 'output': ['1 000000002\\r\\n']}, {'input': ['1000000000 2 1000000\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['23 0 23\\r\\n'], 'output': ['1 000000001\\r\\n']}, {'input': ['123456789 1234561 1234567\\r\\n'], 'output': ['1 000549636\\r\\n']}, {'input': ['11 10 13\\r\\n'], 'output': ['1 000000011\\r\\n']}, {'input': ['138 11711 11829\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1000000000 100050 1000001\\r\\n'], 'output': ['1 000000101\\r\\n']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tstatic int a, b, mod;\n\tstatic int[][] dp;\n\tstatic int}
{"src_uid": "db853d598b638dcdeaea5a26ae83758b", "id": 103, "lang_cluster": "java", "lang": "Java 11", "difficulty": 2300, "testcases": "[{'input': 'aaaa\\r\\n', 'output': ['20\\r\\n']}, {'input': 'abcdef\\r\\n', 'output': ['21\\r\\n']}, {'input': 'abacabadabacaba\\r\\n', 'output': ['188\\r\\n']}, {'input': 'tkth\\r\\n', 'output': ['11\\r\\n']}, {'input': 'eqkrqe\\r\\n', 'output': ['23\\r\\n']}, {'input': 'cwuiax\\r\\n', 'output': ['21\\r\\n']}, {'input': 'hhhhqhqh\\r\\n', 'output': ['59\\r\\n']}, {'input': 'gmxfmcgp\\r\\n', 'output': ['38\\r\\n']}, {'input': 'eleellleeee\\r\\n', 'output': ['104\\r\\n']}, {'input': 'usussubuubbbbs\\r\\n', 'output': ['138\\r\\n']}, {'input': 'lhmpaugvnqzrfxke\\r\\n', 'output': ['136\\r\\n']}, {'input': 'xkkkkkkkkkkkkkkkkxkkkk\\r\\n', 'output': ['1098\\r\\n']}, {'input': 'pprppppriiriiiirprppprriir\\r\\n', 'output': ['512\\r\\n']}, {'input': 'jsoxkutcvyshsinfmtrpujedcbmyqlojzco\\r\\n', 'output': ['646\\r\\n']}, {'input': 'emcegmekgnlefkeguqkfffnduqhfhhhndlfhlfdqdncefnn\\r\\n', 'output': ['1227\\r\\n']}, {'input': 'ffffdjfddffdjdfffddjfffffffjfffjdjfffjfjfdjjfjdjjdjjjdffd\\r\\n', 'output': ['2564\\r\\n']}, {'input': 'cxvhmeyouudwuglhbwndzwmjjsgrnuwnzwaycfspyyrdckjcidfsabvdxzjkvm\\r\\n', 'output': ['2023\\r\\n']}, {'input': 'cahdktuxuukmbuqcqactqhqdcxpkqcuumckttdpmpqxxkacpappxuqkxbuahqdphhddhquthqaapm\\r\\n', 'output': ['3258\\r\\n']}, {'input': 'hhwhhwhhhwhwwhhwwwhwhhhwhwwwhhwhwhhhhhhwhwhwwwhhwwwhhwhhhhwhwwhwhwwwwhhwwhwhwwwhhhwwhwhwhhwwwhwhhhwwwhwhw\\r\\n', 'output': ['10856\\r\\n']}, {'input': 'cnrkvxbljhitbvoysdpghhhnymktvburpvxybnvugkzudmnmpuhevzyjpbtraaepszhhssmcozkgbjayztrvqwdfmjlhtvarkkdsbnjrabqexpfjozmjzfbmdsihovoxmmtjgtfyaisllysnekdxozhdwu\\r\\n', 'output': ['12399\\r\\n']}, {'input': 'qasiyhdivaiyyhdqiqsvqhtqsetxqvaeqatxesxehisyqiivhvayaxvsxhsydiesaxydysqhedxqhsqivvidqtsitiiveexiehsqdteahyxtsyqetahviyhqvytexethsqssxiytqhxxxdihxietsyxqhtitheyeateeyhythxhhqaad\\r\\n', 'output': ['17103\\r\\n']}, {'input': 'ggwgwwgwwkggwgwwkgwwwggwwwggkgkgwkwgkkgkwwgwkkggwggkwgwgkgwwkwkkkkwggwwkwkkkgwkwwwwwgwkwkkwkggwwgggkkwwkgkgkwgkgkwggkwgggwwkgkwgkwkkgwkkkkggwwwgkggkwwgkwkgwgggkggkkkwwwwwkkgkwggwgkwwwwggwwgkkggwkkwkkgkwggggggkkwkkgkkkwkwwkwggwkkwggggwg\\r\\n', 'output': ['41166\\r\\n']}, {'input': 'tmoqyzoikohtgkybnwjizgjypzycmtstmsizrqrmczmqmpewxiwlqzcaufxkchqyjegktxihlksisbgogpyxkltioovelwaqcbebgcyygxsshsirkwvtsvhpqtbomueaszkrlixueyeiccvfiuoogomjlhjkacnxtimkprmjttpmeaminvmcqagrpjighsvaosojymcjoyopsvkrphzbnckcvvckicmjwpvawjuzkofnuvcahwhzjpfngwyobiufivsjnekjcloobvzawrvosnkvalmr\\r\\n', 'output': ['42165\\r\\n']}, {'input': 'rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrbrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrbrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr\\r\\n', 'output': ['2214420\\r\\n']}, {'input': 'zzzzooozzzoozozoozzzzzzozooozoozoozzozzozoooozzzzzzoooozzozooozoozzzozozoooooozzzozozooooozozozozzooozozzooozzzzozozoozoozzzozooozzzzoozzzzozzzzoooozozozozozzoooozzzooozzoooooooozozzozozooozzzooooozozooozozzozozoozzozzzzooozzoozozozzozozoozozzzoozozoooozzooozozooooozzzzzoozoozzzozzzoozzoozozzooozzzzzzoozzozzoozzzoozozzooozoozzzozooozozzoozoozozzzzzoozoozzzooooozooooooozooooozzoozoozzzooooozoozozozozzzoozzzzzoozzzzzzooooooozzzzozzozzo\\r\\n', 'output': ['190205\\r\\n']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tstatic int[][][] dp;\n\tstatic int[][][] dp2;\n\tstatic int[][][] dp3;\n\tstatic int[][][] dp4;\n\tstatic int[][][] dp5;\n\tstatic int[][][] dp6;\n\tstatic int[][][] dp7;\n\tstatic int[][][] dp8;\n\tstatic int[][][] dp9;\n\tstatic int[][][] dp10;\n\tstatic int[][][] dp11;\n\tstatic int[][][] dp12;\n\tstatic int[][][] dp13;\n\tstatic int[][][] dp14;\n\tstatic int[][][] dp15;\n\tstatic int[][][] dp16;\n\tstatic int[][][] dp17;\n\tstatic int[][][] dp18;\n\tstatic int[][][] dp19;\n\tstatic int[][][] dp20;\n\tstatic int[][][] dp21;\n\tstatic int[][][] dp22;\n\tstatic int[][][] dp23;\n\tstatic int[][][] dp24;\n\tstatic int[][][] dp25;\n\tstatic int[][][] dp26;\n\tstatic int[][][] dp27;\n\tstatic int[][][] dp28;\n\tstatic int[][][] dp29;\n\tstatic int[][][] dp30;\n\tstatic int[][][] dp31;\n\tstatic int[][][] dp32;\n\tstatic int[][][] dp33;\n\tstatic int[][][] dp34;\n\tstatic int[][][] dp35;\n\tstatic int[][][] dp36;\n\tstatic int[][][] dp37;\n\tstatic int[][][] dp38;\n\tstatic int[][][] dp39;\n\tstatic int[][][] dp40;\n\tstatic int[][][] dp41;\n\tstatic int[][][] dp42;\n\tstatic int[][][] dp43;\n\tstatic int[][][] dp44;\n\tstatic int[][][] dp45;\n\tstatic int[][][] dp46;\n\tstatic int[][][] dp47;\n\tstatic int[][][] dp48;\n\tstatic int[][][] dp49;\n\tstatic int[][][] dp50;\n\tstatic int[][][] dp51;\n\tstatic int[][][] dp52;\n\tstatic int[][][] dp53;\n\tstatic int[][][] dp54;\n\tstatic int[][][] dp55;\n\tstatic int[][][] dp56;\n\tstatic int[][][] dp57;\n\tstatic int[][][] dp58;\n\tstatic int[][][] dp59;\n\tstatic int[][][] dp60;\n\tstatic int[][][] dp61;\n\tstatic int[][][] dp62;\n\tstatic int[][][] dp63;\n\tstatic int[][][] dp64;\n\tstatic int[][][] dp65;\n\tstatic int[][][] dp66;\n\tstatic int[][][] dp67;\n\tstatic int[][][] dp68;\n\tstatic int[][][] dp69;\n\tstatic int[][][] dp70;\n\tstatic int[][][] dp71;\n\tstatic int[][][] dp72;\n\tstatic int[][][] dp73;\n\tstatic int[][][] dp74;\n\tstatic int[][][] dp75;\n\tstatic int[][][] dp76;\n\tstatic int[][][] dp77;\n\tstatic int[][][] dp78;\n\tstatic int[][][] dp79;\n\tstatic int[][][] dp80;\n\tstatic int[][][] dp81;\n\tstatic int[][][] dp82;\n\tstatic int[][][] dp83;\n\tstatic int[][][] dp84;\n\tstatic int[][][] dp85;\n\tstatic int[][][] dp86;\n\tstatic int[][][] dp87;\n\tstatic int[][][] dp88;\n\tstatic int[][][] dp89;\n\tstatic int[][][] dp90;\n\tstatic int[][][] dp91;\n\tstatic int[][][] dp92;\n\tstatic int[][][] dp93;\n\tstatic int[][][] dp94;\n\tstatic int[][][] dp95;\n\tstatic int[][][] dp96;\n\tstatic int[][][] dp97;\n\tstatic int[][][] dp98;\n\tstatic int[][][] dp99;\n\tstatic int[][][] dp100;\n\tstatic int[][][] dp101;\n\tstatic int[][][] dp102;\n\tstatic int[][][] dp103;\n\tstatic int[][][] dp104;\n\tstatic int[][][] dp105;\n\tstatic int[][][] dp106;\n\tstatic int[][][] dp107;\n\tstatic int[][][] dp108;\n\tstatic int[][][] dp109;\n\tstatic int[][][] dp110;\n\tstatic int[][][] dp111;\n\tstatic int[][][] dp112;\n\tstatic int[][][] dp113;\n\tstatic int[][][] dp114;\n\tstatic int[][][] dp115;\n\tstatic int[][][] dp116;\n\tstatic int[][][] dp117;\n\tstatic int[][][] dp118;\n\tstatic int[][][] dp119;\n\tstatic int[][][] dp120;\n\tstatic int[][][] dp121;\n\tstatic int[][][] dp122;\n\tstatic int[][][] dp123;\n\tstatic int[][][] dp124;\n\tstatic int[][][] dp125;\n\tstatic int[][][] dp126;\n\tstatic int[][][] dp127;\n\tstatic int[][][] dp128;\n\tstatic int[][][] dp129;\n\tstatic int[][][] dp130;\n\tstatic int[][][] dp131;\n\tstatic int[][][] dp132;\n\tstatic int[][][] dp133;\n\tstatic int[][][] dp134;\n\tstatic int[][][] dp135;\n\tstatic int[][][] dp136;\n\tstatic int[][][] dp137;\n\tstatic int[][][] dp138;\n\tstatic int[][][] dp139;\n\tstatic int[][][] dp140;\n\tstatic int[][][] dp141;\n\tstatic int[][][] dp142;\n\tstatic int[][][] dp143;\n\tstatic int[][][] dp144;\n\tstatic int[][][] dp145;\n\tstatic int[][][] dp146;\n\tstatic int[][][] dp147;\n\tstatic int[][][] dp148;\n\tstatic int[][][] dp149;\n\tstatic int[][][] dp150;\n\tstatic int[][][] dp151;\n\tstatic int[][][] dp152;\n\tstatic int[][][] dp153;\n\tstatic int[][][] dp154;\n\tstatic int[][][] dp155;\n\tstatic int[][][] dp156;\n\tstatic int[][][] dp157;\n\tstatic int[][][] dp158;\n\tstatic int[][][] dp159;\n\tstatic int[][][] dp160;\n\tstatic int[][][] dp161;\n\tstatic int[][][] dp162;"}
{"src_uid": "d9eb0f6f82bd09ea53a1dbbd7242c497", "id": 104, "lang_cluster": "java", "lang": "Java 11", "difficulty": 2100, "testcases": "[{'input': '6\\r\\n-2 1\\r\\n0 3\\r\\n3 3\\r\\n4 1\\r\\n3 -2\\r\\n2 -2\\r\\n4\\r\\n0 1\\r\\n2 2\\r\\n3 1\\r\\n1 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '5\\r\\n1 2\\r\\n4 2\\r\\n3 -3\\r\\n-2 -2\\r\\n-2 1\\r\\n4\\r\\n0 1\\r\\n1 2\\r\\n4 1\\r\\n2 -1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5\\r\\n-1 2\\r\\n2 3\\r\\n4 1\\r\\n3 -2\\r\\n0 -3\\r\\n5\\r\\n1 0\\r\\n1 1\\r\\n3 1\\r\\n5 -1\\r\\n2 -1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7\\r\\n1 3\\r\\n4 2\\r\\n4 -1\\r\\n2 -3\\r\\n0 -3\\r\\n-3 0\\r\\n-2 2\\r\\n5\\r\\n-1 1\\r\\n2 2\\r\\n3 0\\r\\n2 -2\\r\\n0 -2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4\\r\\n3 -2\\r\\n-2 2\\r\\n2 3\\r\\n4 1\\r\\n4\\r\\n2 1\\r\\n1 1\\r\\n1 2\\r\\n2 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '5\\r\\n4 3\\r\\n2 -3\\r\\n-1 -3\\r\\n-1 0\\r\\n2 2\\r\\n5\\r\\n-1 -2\\r\\n-1 -1\\r\\n2 1\\r\\n3 0\\r\\n2 -2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6\\r\\n3 3\\r\\n3 -3\\r\\n0 -4\\r\\n-4 -1\\r\\n-4 2\\r\\n1 5\\r\\n9\\r\\n0 0\\r\\n2 1\\r\\n2 -3\\r\\n0 -1\\r\\n0 -3\\r\\n-2 -2\\r\\n-1 -1\\r\\n-2 1\\r\\n2 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '6\\r\\n2 4\\r\\n4 2\\r\\n3 -1\\r\\n-1 -3\\r\\n-3 0\\r\\n-2 3\\r\\n12\\r\\n0 3\\r\\n0 2\\r\\n1 2\\r\\n2 3\\r\\n3 2\\r\\n1 1\\r\\n2 0\\r\\n0 -2\\r\\n0 0\\r\\n-1 -1\\r\\n-2 0\\r\\n-1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '6\\r\\n-2 2\\r\\n1 3\\r\\n4 3\\r\\n5 1\\r\\n3 -2\\r\\n-1 -2\\r\\n7\\r\\n1 1\\r\\n2 4\\r\\n3 2\\r\\n6 2\\r\\n3 1\\r\\n3 0\\r\\n2 -3\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6\\r\\n-3 2\\r\\n1 4\\r\\n3 3\\r\\n2 -2\\r\\n-1 -3\\r\\n-5 0\\r\\n3\\r\\n3 -2\\r\\n4 3\\r\\n5 -2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n4 -1\\r\\n-1 -2\\r\\n-2 3\\r\\n2 3\\r\\n6\\r\\n2 1\\r\\n2 2\\r\\n5 3\\r\\n5 0\\r\\n4 -2\\r\\n4 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5\\r\\n3 -1\\r\\n-1 -1\\r\\n-1 2\\r\\n3 4\\r\\n6 4\\r\\n7\\r\\n1 0\\r\\n1 2\\r\\n2 3\\r\\n2 2\\r\\n4 4\\r\\n4 2\\r\\n2 -1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3\\r\\n1 2\\r\\n5 5\\r\\n6 1\\r\\n3\\r\\n4 3\\r\\n5 2\\r\\n3 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3\\r\\n0 0\\r\\n0 1\\r\\n1 0\\r\\n3\\r\\n0 1\\r\\n1 0\\r\\n0 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n1 0\\r\\n0 1\\r\\n3 3\\r\\n3 0\\r\\n8\\r\\n-1 2\\r\\n4 6\\r\\n4 3\\r\\n5 4\\r\\n3 -2\\r\\n3 -3\\r\\n2 -2\\r\\n1 -2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n-10 -10\\r\\n-10 10\\r\\n10 10\\r\\n10 -10\\r\\n3\\r\\n-10 0\\r\\n1 5\\r\\n2 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n-10 -10\\r\\n-10 10\\r\\n10 10\\r\\n10 -10\\r\\n3\\r\\n10 0\\r\\n2 2\\r\\n1 5\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n-10 -10\\r\\n-10 10\\r\\n10 10\\r\\n10 -10\\r\\n3\\r\\n0 -10\\r\\n1 5\\r\\n2 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n-10 -10\\r\\n-10 10\\r\\n10 10\\r\\n10 -10\\r\\n3\\r\\n0 10\\r\\n2 2\\r\\n1 5\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n-10 -10\\r\\n-10 10\\r\\n10 10\\r\\n10 -10\\r\\n3\\r\\n-10 -10\\r\\n1 5\\r\\n2 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n-10 -10\\r\\n-10 10\\r\\n10 10\\r\\n10 -10\\r\\n3\\r\\n-10 10\\r\\n1 5\\r\\n2 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n0 0\\r\\n9 4\\r\\n12 -5\\r\\n5 -5\\r\\n4\\r\\n2 0\\r\\n2 3\\r\\n5 3\\r\\n5 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3\\r\\n-1000000000 0\\r\\n1000000000 1\\r\\n1000000000 -2\\r\\n3\\r\\n-999999999 0\\r\\n999999999 0\\r\\n999999999 -1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4\\r\\n0 0\\r\\n0 4\\r\\n4 4\\r\\n4 0\\r\\n3\\r\\n2 1\\r\\n2 3\\r\\n4 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n0 10\\r\\n10 0\\r\\n0 -10\\r\\n-10 0\\r\\n3\\r\\n6 6\\r\\n6 5\\r\\n0 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n0 6\\r\\n6 0\\r\\n0 -6\\r\\n-6 0\\r\\n4\\r\\n4 4\\r\\n4 -4\\r\\n-4 -4\\r\\n-4 4\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n0 0\\r\\n0 4\\r\\n4 4\\r\\n4 0\\r\\n3\\r\\n3 1\\r\\n2 1\\r\\n4 3\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3\\r\\n-1000000000 1000000000\\r\\n1000000000 0\\r\\n1000 -1000000000\\r\\n3\\r\\n1000 -999999999\\r\\n1000 0\\r\\n1001 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4\\r\\n0 3\\r\\n3 0\\r\\n0 -3\\r\\n-3 0\\r\\n4\\r\\n2 2\\r\\n2 -2\\r\\n-2 -2\\r\\n-2 2\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tstatic class Point implements Comparable<Point> {\n\t\tint x, y;\n\n\t\tPoint(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\t@Override\n\t\tpublic int compareTo(Point o) {\n\t\t\tif (x!= o.x)\n\t\t\t\treturn x - o.x;\n\t\t\treturn y - o.y;\n\t\t}\n\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn \"(\" + x + \", \" + y + \")\";\n\t\t}\n\t}\n\n\tstatic int ccw(Point p0, Point p1, Point p2) {\n\t\tint dx1 = p1.x - p0.x;\n\t\tint dy1 = p1.y - p0.y;\n\t\tint dx2 = p2.x - p0.x;\n\t\tint dy2 = p2.y - p0.y;\n\t\tif (dx1 * dy2 - dx2 * dy1 > 0)\n\t\t\treturn 1;\n\t\tif (dx1 * dy2 - dx2 * dy1 < 0)\n\t\t\treturn -1;\n\t\tif (dx1 * dx2 + dy1 * dy2 < 0)\n\t\t\treturn 2;\n\t\tif (dx1 * dx + dy1 * dy == 0 || dx2 * dx + dy2 * dy == 0)\n\t\t\treturn 0;\n\t\treturn 3;\n\t}\n\n\tstatic boolean isInside(Point[] p, Point q) {\n\t\tint n = p.length;\n\t\tint cnt = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tPoint a = p[i];\n\t\t\tPoint b = p[(i + 1) % n];\n\t\t\tif (ccw(a, b, q) == 1)\n\t\t\t\tcnt++;\n\t\t}\n\t\treturn cnt % 2 == 1;\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tPoint[] p = new Point[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tString[] s = br.readLine().split(\" \");\n\t\t\tp[i] = new Point(Integer.parseInt(s[0]), Integer.parseInt(s[1]));\n\t\t}\n\t\tint m = Integer.parseInt(br.readLine());\n\t\tPoint[] q = new Point[m];\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tString[] s = br.readLine().split(\" \");\n\t\t\tq[i] = new Point(Integer.parseInt(s[0]), Integer.parseInt(s[1]));\n\t\t}\n\t\tArrays.sort(p);\n\t\tArrays.sort(q);\n\t\tboolean ok = true;\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (!isInside(p, q[i])) {\n\t\t\t\tok = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ok? \"YES\" : \"NO\");\n\t}\n}\n"}
{"src_uid": "0a9cabb857949e818453ffe411f08f95", "id": 105, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1800, "testcases": "[{'input': '3\\r\\n1 1 1\\r\\n', 'output': ['1.0 1.0 1.0\\r\\n']}, {'input': '3\\r\\n2 0 0\\r\\n', 'output': ['3.0 0.0 0.0\\r\\n']}, {'input': '10\\r\\n1 6 3\\r\\n', 'output': ['1.0 6.0 3.0\\r\\n']}, {'input': '9\\r\\n8 2 0\\r\\n', 'output': ['7.2 1.8 0.0\\r\\n']}, {'input': '1\\r\\n0 9 2\\r\\n', 'output': ['0.0 0.8181818181818182 0.18181818181818182\\r\\n']}, {'input': '1\\r\\n3 5 1\\r\\n', 'output': ['0.3333333333333333 0.5555555555555556 0.1111111111111111\\r\\n']}, {'input': '7\\r\\n8 2 2\\r\\n', 'output': ['4.666666666666667 1.1666666666666667 1.1666666666666667\\r\\n']}, {'input': '9\\r\\n3 7 0\\r\\n', 'output': ['2.7 6.3 0.0\\r\\n']}, {'input': '1000\\r\\n0 0 0\\r\\n', 'output': ['0 0 0\\r\\n']}, {'input': '624\\r\\n553 828 109\\r\\n', 'output': ['231.59194630872483 346.7597315436242 45.64832214765101\\r\\n']}, {'input': '902\\r\\n742 737 340\\r\\n', 'output': ['367.9406267179769 365.4612424409016 168.5981308411215\\r\\n']}, {'input': '239\\r\\n995 385 267\\r\\n', 'output': ['144.3867638129933 55.8682452944748 38.744990892531874\\r\\n']}, {'input': '797\\r\\n917 702 538\\r\\n', 'output': ['338.82661103384334 259.3852573018081 198.78813166434864\\r\\n']}, {'input': '938\\r\\n414 308 795\\r\\n', 'output': ['255.98681608437707 190.44429795649307 491.5688859591299\\r\\n']}, {'input': '422\\r\\n215 779 900\\r\\n', 'output': ['47.903907074973596 173.56810982048574 200.52798310454065\\r\\n']}, {'input': '413\\r\\n569 138 159\\r\\n', 'output': ['271.35912240184757 65.81293302540415 75.82794457274827\\r\\n']}, {'input': '188\\r\\n748 859 686\\r\\n', 'output': ['61.327518534670745 70.42825992150023 56.24422154382905\\r\\n']}, {'input': '48\\r\\n395 552 466\\r\\n', 'output': ['13.418259023354565 18.751592356687897 15.830148619957537\\r\\n']}, {'input': '492\\r\\n971 305 807\\r\\n', 'output': ['229.34805568891022 72.04032645223235 190.61161785885741\\r\\n']}, {'input': '557\\r\\n84 654 154\\r\\n', 'output': ['52.45291479820627 408.3834080717489 96.16367713004483\\r\\n']}, {'input': '699\\r\\n493 285 659\\r\\n', 'output': ['239.8100208768267 138.63256784968684 320.5574112734864\\r\\n']}, {'input': '814\\r\\n711 408 545\\r\\n', 'output': ['347.8088942307692 199.58653846153845 266.6045673076923\\r\\n']}, {'input': '706\\r\\n197 265 571\\r\\n', 'output': ['134.63891577928362 181.11326234269117 390.24782187802515\\r\\n']}, {'input': '945\\r\\n123 67 174\\r\\n', 'output': ['319.3269230769231 173.9423076923077 451.7307692307692\\r\\n']}, {'input': '724\\r\\n529 558 407\\r\\n', 'output': ['256.3560910307898 270.4096385542168 197.2342704149933\\r\\n']}, {'input': '269\\r\\n0 623 873\\r\\n', 'output': ['0.0 112.02339572192513 156.97660427807486\\r\\n']}, {'input': '173\\r\\n0 0 374\\r\\n', 'output': ['0.0 0.0 173.0\\r\\n']}, {'input': '972\\r\\n918 0 405\\r\\n', 'output': ['674.4489795918367 0.0 297.55102040816325\\r\\n']}, {'input': '809\\r\\n328 0 0\\r\\n', 'output': ['809.0 0.0 0.0\\r\\n']}, {'input': '413\\r\\n517 0 0\\r\\n', 'output': ['413.0 0.0 0.0\\r\\n']}, {'input': '642\\r\\n0 665 0\\r\\n', 'output': ['0.0 642.0 0.0\\r\\n']}, {'input': '1000\\r\\n117 403 270\\r\\n', 'output': ['148.10126582278482 510.12658227848107 341.7721518987342\\r\\n']}, {'input': '1000\\r\\n1000 1000 1000\\r\\n', 'output': ['333.3333333333333 333.3333333333333 333.3333333333333\\r\\n']}, {'input': '1\\r\\n1000 1000 1000\\r\\n', 'output': ['0.3333333333333333 0.3333333333333333 0.3333333333333333\\r\\n']}, {'input': '1000\\r\\n1 0 1\\r\\n', 'output': ['500.0 0.0 500.0\\r\\n']}, {'input': '1000\\r\\n0 1 1\\r\\n', 'output': ['0.0 500.0 500.0\\r\\n']}, {'input': '1000\\r\\n1 1 0\\r\\n', 'output': ['500.0 500.0 0.0\\r\\n']}, {'input': '1000\\r\\n0 0 1\\r\\n', 'output': ['0.0 0.0 1000.0\\r\\n']}, {'input': '1000\\r\\n1 0 0\\r\\n', 'output': ['1000.0 0.0 0.0\\r\\n']}, {'input': '1000\\r\\n0 1 0\\r\\n', 'output': ['0.0 1000.0 0.0\\r\\n']}, {'input': '1000\\r\\n999 1000 999\\r\\n', 'output': ['333.2221480987325 333.555703802535 333.2221480987325\\r\\n']}, {'input': '1000\\r\\n999 998 997\\r\\n', 'output': ['333.6673346693387 333.33333333333337 332.999331997328\\r\\n']}, {'input': '3\\r\\n0 0 0\\r\\n', 'output': ['0 0 0\\r\\n']}, {'input': '100\\r\\n0 0 0\\r\\n', 'output': ['0 0 0\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n', 'output': ['0 0 0\\r\\n']}, {'input': '239\\r\\n0 0 0\\r\\n', 'output': ['0 0 0\\r\\n']}, {'input': '10\\r\\n0 0 0\\r\\n', 'output': ['0 0 0\\r\\n']}, {'input': '1000\\r\\n197 198 199\\r\\n', 'output': ['331.6498316498317 333.33333333333337 335.01683501683505\\r\\n']}, {'input': '5\\r\\n0 0 0\\r\\n', 'output': ['0 0 0\\r\\n']}, {'input': '1000\\r\\n0 0 0\\r\\n', 'output': ['0 0 0\\r\\n']}, {'input': '1000\\r\\n0 1 999\\r\\n', 'output': ['0.0 1.0 999.0\\r\\n']}, {'input': '1000\\r\\n1000 0 0\\r\\n', 'output': ['1000.0 0.0 0.0\\r\\n']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew Main().run();\n\t}\n\n\tBufferedReader in;\n\tPrintWriter out;\n\tStringTokenizer st;\n\n\tpublic String nextToken() throws IOException {\n\t\twhile (st == null ||!st.hasMoreTokens()) {\n\t\t\tst = new StringTokenizer(in.readLine());\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tpublic int nextInt() throws IOException {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tpublic double nextDouble() throws IOException {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n\n\tpublic long nextLong() throws IOException {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tpublic void solve() throws IOException {\n\t\tint s = nextInt();\n\t\tint a = nextInt();\n\t\tint b = nextInt();\n\t\tint c = nextInt();\n\t\tdouble x = 0, y = 0, z = 0;\n\t\tif (a == 0 && b == 0 && c == 0) {\n\t\t\tx = y = z = 0;\n\t\t} else if (a == 0 && b == 0) {\n\t\t\tx = s / c;\n\t\t\ty = z = 0;\n\t\t} else if (a == 0 && c == 0) {\n\t\t\tx = s / b;\n\t\t\ty = z = 0;\n\t\t} else if (b == 0 && c == 0) {\n\t\t\tx = y = z = 0;\n\t\t} else if (a == 0) {\n\t\t\tx = s / (b + c);\n\t\t\ty = z = 0;\n\t\t} else if (b == 0) {\n\t\t\tx = s / (a + c);\n\t\t\ty = z = 0;\n\t\t} else if (c == 0) {\n\t\t\tx = s / (a + b);\n\t\t\ty = z = 0;\n\t\t} else {\n\t\t\tx = s / (a + b + c);\n\t\t\ty = z = s / (a + b + c) - x;\n\t\t}\n\t\tout.printf(\"%.10f %.10f %.10f\\n\", x, y, z);\n\t}\n\n\tpublic void run() {\n\t\ttry {\n\t\t\tin = new BufferedReader(new InputStreamReader(System.in));\n\t\t\tout = new PrintWriter(System.out);\n\t\t\tsolve();\n\t\t\tout.close();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\t}\n}"}
{"src_uid": "1805771e194d323edacf2526a1eb6768", "id": 106, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1900, "testcases": "[{'input': '4\\r\\n2S 2S 2C 2C\\r\\n', 'output': ['YES']}, {'input': '2\\r\\n3S 2C\\r\\n', 'output': ['NO']}, {'input': '5\\r\\n2S 2S 4S 3S 2S\\r\\n', 'output': ['YES']}, {'input': '5\\r\\n5S 5S 7S 4S 3H\\r\\n', 'output': ['NO']}, {'input': '5\\r\\n7S 7S 4S 8H 4H\\r\\n', 'output': ['NO']}, {'input': '5\\r\\n4S 2H 3S 3S 2H\\r\\n', 'output': ['NO']}, {'input': '52\\r\\n3H 6S 3S 2S 2S 3S 4S 3H 2C 4S 3C 3S 2S 2C 2S 6S 4C 3S 5C 3S 2S 4S 3S 5S 2H 2S 4H 3S 3S 4H 4S 2C 2H 2S 4S 6D 4C 4H 2H 4S 3H 6D 6S 3C 3C 4H 5S 3S 3S 2H 2S 4C\\r\\n', 'output': ['NO']}, {'input': '52\\r\\n2S 4S 3S 2S 4S 3S 4S 4S 8S 3S 2S 2S 5S 3S 3S 2S 3S 5S 4S 4S 2S 2S 4S 4S 6S 2S 5S 2S 5S 2S 2S 2S 4S 2S 5S 5S 2S 6S 8S 6S 2S 2S TS 2H 4S 4S 3S 3S 2S 2S 7S 3S\\r\\n', 'output': ['YES']}, {'input': '5\\r\\nAD 5S KH AH AS\\r\\n', 'output': ['YES']}, {'input': '50\\r\\nTS 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D\\r\\n', 'output': ['NO']}, {'input': '5\\r\\nAD 5S KH AH KS\\r\\n', 'output': ['YES']}, {'input': '5\\r\\nAD 5S KH AH JS\\r\\n', 'output': ['NO']}, {'input': '20\\r\\nJD 5H 3H 9H 2S 5S 5H QS 8D 7H TS 9S 4H 5S 9H 4H 3S KS KS JS\\r\\n', 'output': ['NO']}, {'input': '21\\r\\nJS 5S 9S KH 9D JH 3S KH QH 5D TC 3S 5S 4H 4H 5S 7S AH 4S 3S 6S\\r\\n', 'output': ['NO']}, {'input': '51\\r\\nJD 8D QD TC JD AD JD 5D 5S QC TC 4H 8S 7D QD QD 3H TH 8D 9D 5D 4D 6D 7D 9C 2D AD 6D 6H AD 5D 3D AC AC JC 5D 3D KC 7C AD 4D 8C QD QH 6D 9C 2D 6D 3C KC TD\\r\\n', 'output': ['NO']}, {'input': '52\\r\\nKD KD 8H 9C 7C 8D JD 3D 9C KD 6D 9C QD TC 7D TD 3C KD 6D 2D TC 6D AC QD 2C 3D 8D KH AD QD 2C 6C JH 6D 8D 2C 7D QD 7C 7H TD 4D 2D 8D TC 5D 8D KD 7C QC TD 5D\\r\\n', 'output': ['NO']}, {'input': '52\\r\\nJS 7S 3S 2S 7S TS 4S 6S 5H TS 4S TH 6H 9S TH TH 4S 4H 2H TH TC TH TS TS 4S TS 2S TH TH TS 6S TS TS 3S TS TH 5H TS TS 5S 7H 2H TS 6S 6H 2H TS TH 2S 4S 4H 4S\\r\\n', 'output': ['YES']}, {'input': '52\\r\\n8D AD AC 9H AS AD KH AD QH AH AC AS 8H KS TD AH KS AD AD AS KD AD AS AH AS AD AD AH AC AD KC JD 8D AC 9D AC AD QD KC AD JS JC AD TD KC JD TD 8D KS KC KD KD\\r\\n', 'output': ['YES']}, {'input': '52\\r\\nAD JD JD TD AD 8D QD AH TC QH AD TD 2D AD QD 4D 3C 3D 3H 6D 8C 3C 3S 6C QC KD 2D 4S TD 5D 3S 3S 3H 3S KH 3H 3D 3H JH JH QH 9H TH 3H KH 7H 3H TH AH 3S 4H 3H\\r\\n', 'output': ['YES']}, {'input': '10\\r\\n4C 8C 8D JC 8C 5S 8H 8C 8S 8H\\r\\n', 'output': ['YES']}, {'input': '10\\r\\nQH QS QS JH QS 6S 7H QH QH QS\\r\\n', 'output': ['YES']}, {'input': '10\\r\\nKS 4S KS KH TS TS KC KH KH KS\\r\\n', 'output': ['YES']}, {'input': '11\\r\\nJD 5D JC JH 6C 6D JH 6S 6S JS JD\\r\\n', 'output': ['YES']}, {'input': '11\\r\\nJS KH JC JS 9S 9H 6H 7H JH AS AH\\r\\n', 'output': ['YES']}, {'input': '11\\r\\n3S 2H TS 9D 9S 2S 2S 9S 3C 2S 2C\\r\\n', 'output': ['YES']}, {'input': '12\\r\\n9S TS QS KD KS AS QS KS 6S AD AD AS\\r\\n', 'output': ['YES']}, {'input': '12\\r\\nJC 8C AC TH AH AC TC AS AH TC AS AS\\r\\n', 'output': ['YES']}, {'input': '12\\r\\n6S 6S 3S 4C 2S 2S 7S 2C 2S 4S 2S 2S\\r\\n', 'output': ['YES']}, {'input': '51\\r\\n7S 4C 2S JS 5C 2H 2C 3C 4C QC 2C 2C 2S 4S 2H 2H 4C 2C 6C 2C 2C JC 8C QC JC 8C TC 7H 4C 8S QH 4H 8C 3H 4S 3H 7H 8S 4C 4S 4S 4S 2H 4H QH 3H 3H 3H 4H 8C 3C\\r\\n', 'output': ['YES']}, {'input': '51\\r\\n2S 2H 2C 2C 3H 2H 7S 2D 6H 2H 2C 2H 2H 5S 2S 3C 2C 2H 2S 2C 5C JC 2S 4C 3C 2C 5C 4C 4D 8C 5C 6C 7C 4C 4C 6S TS 3C TH 4C 4C TS 7C TC 3C TS TC 2S TH TC 2C\\r\\n', 'output': ['YES']}, {'input': '52\\r\\nAC 4C TC 9C TH AD 3C TC 4S 5C TD QD TH 4C 4D 3H TC 4S TH 8H 7H 4D TH QD 4D 8H QH 4D 4H 8D 4H 4D 8H 3D 9D 8H 9D 9C 9H 8D TD 3H 5H 6D QD 9H 6D KD 9H 6D 2D 9D\\r\\n', 'output': ['YES']}, {'input': '52\\r\\nJH 8H 9D TH 5H 9H 5H JH 5H 8H 9D QH 9H 6C AD AC 9C AD AH 9C AC 5C 5C AC 5H 5C 8C 5D KD 5H 5C 8D 5D 8D KD 5D QD 8S 8C 8C 8H 8C JD 8C 8D 8C 8H 9C JD 8D 8D JD\\r\\n', 'output': ['NO']}, {'input': '52\\r\\n9D AD 9C 6C 9D 7D 6D TS 6D 6D 3D QH 9D 9D 9H 9D 9D 2H 5D JH 9H 5C JC TC 9D 9C 2C 9C 9D 4H 4D AC 9D 4C AC 8C 9C QC 8C 9D 7D QC 9H 9D 2C 9D 9C 3C 7H 9C TC 9H\\r\\n', 'output': ['NO']}, {'input': '52\\r\\n9D 5D TC 4D 7D 3D JD 5C 7D TD 5D TD 6H TD TD AD 6D AD TD 2C TD TS TD TD 2H 7D TD QD 2D 2H AC 9D 2D 2C QC AD 2D 4C JC 2D AD 5D 5C AC AD 6C 8D 4D 7C 8C JC AC\\r\\n', 'output': ['NO']}, {'input': '51\\r\\nAH 6S 2S 6H 6S 4S 3S 9S 5S 4S 2S 9S 2S 3S 2S JS 2S 2S 9H 2S 9S 2S 3S 9S 4S 4S 9S 9S 2S 2S 3S 2S 6H 7S 3S 3H 6S 3S 2H 6S 3S 6H 7H 6S 6S 4S 4H 5H 4H 4H 6H\\r\\n', 'output': ['YES']}, {'input': '51\\r\\nJC 6S 2S 6H 6S 4S 3S 9S 5S 4S 2S 9S 2S 3S 2S JS 2S 2S 9H 2S 9S 2S 3S 9S 4S 4S 9S 9S 2S 2S 3S 2S 6H 7S 3S 3H 6S 3S 2H 6S 3S 6H 7H 6S 6S 4S 4H 5H 4H 4H 6H\\r\\n', 'output': ['YES']}, {'input': '51\\r\\n9C 6S 2S 6H 6S 4S 3S 9S 5S 4S 2S 9S 2S 3S 2S JS 2S 2S 9H 2S 9S 2S 3S 9S 4S 4S 9S 9S 2S 2S 3S 2S 6H 7S 3S 3H 6S 3S 2H 6S 3S 6H 7H 6S 6S 4S 4H 5H 4H 4H 6H\\r\\n', 'output': ['YES']}, {'input': '51\\r\\n7C 6S 2S 6H 6S 4S 3S 9S 5S 4S 2S 9S 2S 3S 2S JS 2S 2S 9H 2S 9S 2S 3S 9S 4S 4S 9S 9S 2S 2S 3S 2S 6H 7S 3S 3H 6S 3S 2H 6S 3S 6H 7H 6S 6S 4S 4H 5H 4H 4H 6H\\r\\n', 'output': ['YES']}, {'input': '52\\r\\n2D 5S 5S JS 5H 5C 5S 5H 2S 5S 9S 3S 2S 5S 2S 2S 5S 4S 3S 5S 7H 3S 5S 7S 4S 2S TS 2S 3S 3S 3S 3S 3S 3S 2S 7S 3S 2S 2S 2S 2S 2S 5S 2H 2C 4S 2S 2S 4S 7S 2S 2S\\r\\n', 'output': ['YES']}, {'input': '52\\r\\n3D 5S 5S JS 5H 5C 5S 5H 2S 5S 9S 3S 2S 5S 2S 2S 5S 4S 3S 5S 7H 3S 5S 7S 4S 2S TS 2S 3S 3S 3S 3S 3S 3S 2S 7S 3S 2S 2S 2S 2S 2S 5S 2H 2C 4S 2S 2S 4S 7S 2S 2S\\r\\n', 'output': ['YES']}, {'input': '52\\r\\nTD 5S 5S JS 5H 5C 5S 5H 2S 5S 9S 3S 2S 5S 2S 2S 5S 4S 3S 5S 7H 3S 5S 7S 4S 2S TS 2S 3S 3S 3S 3S 3S 3S 2S 7S 3S 2S 2S 2S 2S 2S 5S 2H 2C 4S 2S 2S 4S 7S 2S 2S\\r\\n', 'output': ['YES']}, {'input': '52\\r\\nJD 5S 5S JS 5H 5C 5S 5H 2S 5S 9S 3S 2S 5S 2S 2S 5S 4S 3S 5S 7H 3S 5S 7S 4S 2S TS 2S 3S 3S 3S 3S 3S 3S 2S 7S 3S 2S 2S 2S 2S 2S 5S 2H 2C 4S 2S 2S 4S 7S 2S 2S\\r\\n', 'output': ['YES']}, {'input': '52\\r\\nAH 5S 5S JS 5H 5C 5S 5H 2S 5S 9S 3S 2S 5S 2S 2S 5S 4S 3S 5S 7H 3S 5S 7S 4S 2S TS 2S 3S 3S 3S 3S 3S 3S 2S 7S 3S 2S 2S 2S 2S 2S 5S 2H 2C 4S 2S 2S 4S 7S 2S 2S\\r\\n', 'output': ['YES']}, {'input': '52\\r\\n7H 5S 5S JS 5H 5C 5S 5H 2S 5S 9S 3S 2S 5S 2S 2S 5S 4S 3S 5S 7H 3S 5S 7S 4S 2S TS 2S 3S 3S 3S 3S 3S 3S 2S 7S 3S 2S 2S 2S 2S 2S 5S 2H 2C 4S 2S 2S 4S 7S 2S 2S\\r\\n', 'output': ['YES']}, {'input': '52\\r\\n2D 5S 4S 4S 4C 2S 4H 4S 4H 4C 3S 4S 4S 4H 5S 4H 4H 5S 2S 4S 4S 2S 4S 4C 4S 4S 9S 4H 4S 3S 3H 4S 4S 7S 3S 3S 2H 3S 7S 4S 2S 7S 2S 2S 3S 3C 2S 3S 3S 2S 5S 3S\\r\\n', 'output': ['YES']}, {'input': '52\\r\\nAC 5S 4S 4S 4C 2S 4H 4S 4H 4C 3S 4S 4S 4H 5S 4H 4H 5S 2S 4S 4S 2S 4S 4C 4S 4S 9S 4H 4S 3S 3H 4S 4S 7S 3S 3S 2H 3S 7S 4S 2S 7S 2S 2S 3S 3C 2S 3S 3S 2S 5S 3S\\r\\n', 'output': ['YES']}, {'input': '52\\r\\n7D 5S 4S 4S 4C 2S 4H 4S 4H 4C 3S 4S 4S 4H 5S 4H 4H 5S 2S 4S 4S 2S 4S 4C 4S 4S 9S 4H 4S 3S 3H 4S 4S 7S 3S 3S 2H 3S 7S 4S 2S 7S 2S 2S 3S 3C 2S 3S 3S 2S 5S 3S\\r\\n', 'output': ['YES']}, {'input': '1\\r\\n3C\\r\\n', 'output': ['YES']}, {'input': '4\\r\\n2C 3D 4D 5C\\r\\n', 'output': ['NO']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.util.Set;\nimport java.util.Stack;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tString[] s = new String[n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\ts[i] = st.nextToken();\n\t\t}\n\t\tint[][] d = new int[n][2];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\td[i][0] = s[i].charAt(0) - '0';\n\t\t\td[i][1] = s[i].charAt(1) - 'A';\n\t\t}\n\t\tint[][] dp = new int[n][n];\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tfor(int j = 0; j < n; j++) {\n\t\t\t\tif(i == 0) {\n\t\t\t\t\tdp[i][j] = 1;\n\t\t\t\t}\n\t\t\t\telse if(j == 0) {\n\t\t\t\t\tdp[i][j] = 0;\n\t\t\t\t}\n\t\t\t\telse if(i == j) {\n\t\t\t\t\tdp[i][j] = 1;\n\t\t\t\t}\n\t\t\t\telse if(i == j - 1) {\n\t\t\t\t\tif(d[i][0] == d[j][0] || d[i][1] == d[j][1]) {\n\t\t\t\t\t\tdp[i][j] = dp[i][j - 1] + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdp[i][j] = dp[i][j - 1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(i == j - 2) {\n\t\t\t\t\tif(d[i][0] == d[j][0] || d[i][1] == d[j][1]) {\n\t\t\t\t\t\tdp[i][j] = dp[i][j - 2] + 1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdp[i][j] = dp[i][j - 2];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdp[i][j] = dp[i][j - 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(dp[0][n - 1] == n) {\n\t\t\tSystem.out.println(\"YES\");\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\t}\n}\n"}
{"src_uid": "be42e213ff43e303e475d77a9560367f", "id": 107, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1700, "testcases": "[{'input': '1\\r\\n1\\r\\n0\\r\\n', 'output': ['1']}, {'input': '5\\r\\n2 2 1 1 3\\r\\n1 5\\r\\n2 5 1\\r\\n2 5 4\\r\\n1 5\\r\\n0\\r\\n', 'output': ['7']}, {'input': '7\\r\\n1 3 3 1 2 1 1\\r\\n0\\r\\n1 1\\r\\n1 1\\r\\n2 1 6\\r\\n3 1 2 7\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['11']}, {'input': '2\\r\\n2 1\\r\\n0\\r\\n1 1\\r\\n', 'output': ['4']}, {'input': '3\\r\\n2 1 2\\r\\n0\\r\\n0\\r\\n0\\r\\n', 'output': ['4']}, {'input': '4\\r\\n2 1 1 1\\r\\n0\\r\\n0\\r\\n1 1\\r\\n1 3\\r\\n', 'output': ['6']}, {'input': '6\\r\\n1 1 2 3 3 1\\r\\n2 2 3\\r\\n0\\r\\n0\\r\\n0\\r\\n2 2 1\\r\\n1 1\\r\\n', 'output': ['10']}, {'input': '8\\r\\n2 2 2 1 1 2 1 1\\r\\n3 5 6 7\\r\\n1 5\\r\\n2 5 6\\r\\n1 5\\r\\n0\\r\\n1 5\\r\\n1 5\\r\\n2 5 6\\r\\n', 'output': ['11']}, {'input': '9\\r\\n3 3 2 1 3 1 2 2 1\\r\\n2 4 3\\r\\n0\\r\\n2 4 2\\r\\n0\\r\\n1 4\\r\\n2 4 2\\r\\n0\\r\\n1 4\\r\\n3 4 3 8\\r\\n', 'output': ['13']}, {'input': '10\\r\\n3 1 2 2 2 1 2 1 1 1\\r\\n0\\r\\n2 6 9\\r\\n0\\r\\n1 9\\r\\n0\\r\\n1 3\\r\\n4 3 6 5 2\\r\\n3 6 4 2\\r\\n0\\r\\n1 3\\r\\n', 'output': ['14']}, {'input': '11\\r\\n1 2 2 3 3 2 2 2 2 3 1\\r\\n1 4\\r\\n2 7 11\\r\\n0\\r\\n0\\r\\n1 2\\r\\n1 11\\r\\n0\\r\\n1 2\\r\\n3 7 11 2\\r\\n3 3 2 9\\r\\n0\\r\\n', 'output': ['14']}, {'input': '12\\r\\n1 3 2 2 1 3 2 1 3 2 2 2\\r\\n2 3 4\\r\\n3 12 11 10\\r\\n1 8\\r\\n2 8 7\\r\\n2 9 10\\r\\n1 3\\r\\n0\\r\\n0\\r\\n1 4\\r\\n4 3 1 12 9\\r\\n3 8 3 4\\r\\n1 4\\r\\n', 'output': ['18']}, {'input': '13\\r\\n3 3 2 2 1 3 1 1 1 1 2 1 2\\r\\n5 6 3 11 13 12\\r\\n1 6\\r\\n2 10 6\\r\\n3 6 3 11\\r\\n1 6\\r\\n1 10\\r\\n3 6 2 3\\r\\n4 6 3 9 11\\r\\n3 6 2 3\\r\\n0\\r\\n3 6 2 3\\r\\n4 6 3 4 13\\r\\n2 6 3\\r\\n', 'output': ['21']}, {'input': '14\\r\\n3 2 2 1 2 1 1 3 1 2 2 3 1 1\\r\\n2 9 13\\r\\n3 9 13 8\\r\\n2 9 6\\r\\n3 9 6 13\\r\\n1 9\\r\\n1 9\\r\\n3 9 6 13\\r\\n2 9 13\\r\\n0\\r\\n4 9 3 13 4\\r\\n4 9 6 13 2\\r\\n2 9 13\\r\\n1 9\\r\\n8 9 5 6 3 13 7 4 11\\r\\n', 'output': ['20']}, {'input': '15\\r\\n1 2 3 2 3 2 2 2 3 3 3 2 3 1 3\\r\\n5 2 7 4 3 6\\r\\n0\\r\\n2 7 4\\r\\n2 2 15\\r\\n1 7\\r\\n1 7\\r\\n0\\r\\n2 4 6\\r\\n1 6\\r\\n2 15 3\\r\\n4 12 2 15 7\\r\\n0\\r\\n3 2 5 6\\r\\n3 2 4 6\\r\\n1 2\\r\\n', 'output': ['20']}, {'input': '16\\r\\n3 3 1 3 2 3 2 2 3 1 2 3 2 2 2 3\\r\\n1 14\\r\\n4 14 10 13 6\\r\\n3 14 15 6\\r\\n1 14\\r\\n4 14 10 9 7\\r\\n4 14 10 13 9\\r\\n4 14 10 13 6\\r\\n4 14 4 12 3\\r\\n2 14 4\\r\\n1 14\\r\\n1 14\\r\\n2 14 1\\r\\n4 14 10 4 1\\r\\n0\\r\\n2 14 10\\r\\n1 14\\r\\n', 'output': ['22']}, {'input': '17\\r\\n3 2 3 2 2 2 1 3 3 3 3 2 3 3 3 1 1\\r\\n0\\r\\n0\\r\\n2 8 10\\r\\n4 12 8 6 16\\r\\n0\\r\\n2 8 13\\r\\n3 2 8 10\\r\\n1 12\\r\\n4 8 17 3 16\\r\\n2 2 8\\r\\n0\\r\\n1 2\\r\\n2 8 10\\r\\n2 12 8\\r\\n2 8 10\\r\\n1 8\\r\\n2 12 8\\r\\n', 'output': ['21']}, {'input': '18\\r\\n2 1 1 3 2 1 3 2 3 3 2 2 1 1 3 1 1 3\\r\\n3 16 8 6\\r\\n3 16 6 1\\r\\n4 6 13 5 7\\r\\n2 6 2\\r\\n4 16 6 17 1\\r\\n2 16 8\\r\\n3 6 17 12\\r\\n1 16\\r\\n0\\r\\n3 6 15 1\\r\\n3 16 6 12\\r\\n7 16 9 8 6 13 17 14\\r\\n1 6\\r\\n1 6\\r\\n3 8 6 13\\r\\n0\\r\\n1 6\\r\\n3 9 6 13\\r\\n', 'output': ['26']}, {'input': '19\\r\\n2 1 2 3 3 3 2 1 1 1 1 3 3 1 1 1 2 2 3\\r\\n0\\r\\n2 1 7\\r\\n0\\r\\n4 3 2 17 13\\r\\n1 17\\r\\n1 3\\r\\n3 1 3 6\\r\\n4 1 17 9 13\\r\\n3 1 16 17\\r\\n0\\r\\n3 3 6 17\\r\\n1 6\\r\\n6 10 6 7 17 9 11\\r\\n3 10 17 13\\r\\n4 3 17 13 8\\r\\n1 3\\r\\n3 6 7 16\\r\\n0\\r\\n6 1 7 17 11 13 15\\r\\n', 'output': ['29']}, {'input': '20\\r\\n1 2 2 2 1 3 3 2 2 1 2 2 3 1 2 2 2 1 1 1\\r\\n2 10 8\\r\\n5 10 12 3 20 7\\r\\n0\\r\\n3 10 15 3\\r\\n0\\r\\n3 14 17 3\\r\\n2 12 20\\r\\n0\\r\\n3 17 10 12\\r\\n1 17\\r\\n1 5\\r\\n1 5\\r\\n0\\r\\n1 18\\r\\n3 18 5 12\\r\\n5 5 12 8 3 19\\r\\n0\\r\\n0\\r\\n1 12\\r\\n1 18\\r\\n', 'output': ['24']}, {'input': '11\\r\\n3 1 3 2 3 2 3 2 3 1 3\\r\\n6 2 3 9 5 7 10\\r\\n1 6\\r\\n2 6 2\\r\\n5 6 2 3 9 5\\r\\n2 3 9\\r\\n0\\r\\n5 3 9 5 8 4\\r\\n4 2 3 9 5\\r\\n2 2 3\\r\\n8 6 2 3 9 5 4 11 7\\r\\n4 2 3 9 5\\r\\n', 'output': ['21']}, {'input': '12\\r\\n2 3 3 1 1 3 2 2 3 1 3 3\\r\\n1 9\\r\\n1 1\\r\\n2 2 11\\r\\n5 1 2 11 5 8\\r\\n4 9 10 1 11\\r\\n5 9 10 12 11 5\\r\\n4 1 12 11 5\\r\\n5 10 1 2 12 11\\r\\n0\\r\\n1 9\\r\\n1 12\\r\\n0\\r\\n', 'output': ['19']}, {'input': '13\\r\\n3 2 2 1 3 3 2 3 2 2 1 2 3\\r\\n7 4 3 2 5 9 8 13\\r\\n1 4\\r\\n1 4\\r\\n0\\r\\n3 4 2 6\\r\\n2 4 2\\r\\n4 4 3 2 9\\r\\n5 4 2 6 9 7\\r\\n3 4 2 6\\r\\n6 4 3 2 5 9 7\\r\\n6 4 3 2 6 9 7\\r\\n8 4 2 6 5 9 8 11 10\\r\\n7 4 3 2 6 9 8 11\\r\\n', 'output': ['21']}, {'input': '14\\r\\n2 3 1 3 1 1 1 2 2 3 1 1 3 1\\r\\n4 14 9 8 5\\r\\n4 4 8 5 1\\r\\n9 4 14 9 8 1 2 13 7 12\\r\\n0\\r\\n2 14 8\\r\\n2 4 14\\r\\n7 9 6 10 8 1 2 13\\r\\n2 4 6\\r\\n1 14\\r\\n1 9\\r\\n8 4 6 10 8 5 1 2 3\\r\\n7 14 6 10 8 1 2 7\\r\\n5 10 8 5 1 2\\r\\n0\\r\\n', 'output': ['21']}, {'input': '15\\r\\n3 2 2 2 1 1 2 1 1 2 2 3 3 3 2\\r\\n1 13\\r\\n4 13 1 8 14\\r\\n10 5 13 1 8 14 4 2 11 15 10\\r\\n6 5 13 1 8 9 14\\r\\n0\\r\\n11 5 13 1 8 14 4 2 11 10 3 12\\r\\n11 13 1 8 14 4 2 11 15 10 3 6\\r\\n2 13 1\\r\\n4 5 13 1 8\\r\\n8 5 13 1 8 14 2 11 15\\r\\n6 5 13 1 8 14 2\\r\\n10 5 13 1 8 14 2 11 15 10 3\\r\\n0\\r\\n4 13 1 8 9\\r\\n8 5 13 1 8 9 14 2 11\\r\\n', 'output': ['23']}, {'input': '16\\r\\n3 1 2 3 3 2 3 1 3 2 2 1 2 2 1 2\\r\\n0\\r\\n0\\r\\n7 2 8 4 12 5 9 11\\r\\n1 1\\r\\n4 1 8 4 12\\r\\n5 2 4 12 5 11\\r\\n4 4 12 5 10\\r\\n0\\r\\n5 1 8 4 12 5\\r\\n6 1 4 12 5 9 11\\r\\n6 2 1 8 4 12 5\\r\\n2 4 13\\r\\n3 1 8 4\\r\\n8 1 4 13 12 5 10 3 6\\r\\n4 4 12 5 6\\r\\n8 8 4 13 12 5 9 6 14\\r\\n', 'output': ['26']}, {'input': '17\\r\\n2 3 1 3 3 3 1 1 1 2 2 2 3 2 3 3 2\\r\\n5 4 14 2 11 7\\r\\n3 13 4 14\\r\\n7 6 4 14 2 1 10 12\\r\\n2 6 13\\r\\n9 4 2 9 8 7 17 1 10 12\\r\\n0\\r\\n5 4 14 2 9 11\\r\\n4 13 4 2 11\\r\\n4 13 4 14 2\\r\\n7 13 4 2 11 8 7 1\\r\\n4 13 4 14 2\\r\\n8 6 4 2 8 7 17 1 10\\r\\n0\\r\\n1 4\\r\\n7 13 4 14 2 9 8 7\\r\\n6 4 2 17 1 10 12\\r\\n5 13 4 2 9 8\\r\\n', 'output': ['27']}, {'input': '18\\r\\n1 2 3 3 2 2 1 1 3 1 2 3 2 3 1 2 2 3\\r\\n5 9 3 14 12 2\\r\\n7 9 4 3 14 16 7 12\\r\\n1 9\\r\\n1 9\\r\\n6 9 14 12 1 6 15\\r\\n6 9 14 12 2 1 11\\r\\n2 9 14\\r\\n7 9 14 7 12 2 1 6\\r\\n0\\r\\n6 9 18 14 7 1 6\\r\\n4 9 14 7 1\\r\\n2 9 14\\r\\n6 9 3 14 7 1 6\\r\\n2 9 3\\r\\n9 9 3 14 16 12 2 1 6 17\\r\\n4 9 4 18 14\\r\\n8 9 18 14 12 1 11 6 13\\r\\n2 9 4\\r\\n', 'output': ['26']}, {'input': '19\\r\\n2 3 3 2 3 1 3 1 2 2 2 1 1 1 2 2 1 3 3\\r\\n0\\r\\n3 1 10 6\\r\\n8 1 6 2 17 18 12 15 7\\r\\n5 6 2 9 17 18\\r\\n6 6 2 17 18 12 16\\r\\n1 11\\r\\n9 1 11 6 2 17 18 4 12 15\\r\\n3 1 6 2\\r\\n4 1 6 2 8\\r\\n0\\r\\n1 1\\r\\n5 1 6 2 17 18\\r\\n12 1 10 6 2 8 17 18 4 12 15 7 3\\r\\n10 11 6 2 17 18 4 12 16 15 7\\r\\n8 1 6 2 8 17 18 12 16\\r\\n8 11 6 2 9 17 18 4 12\\r\\n3 11 6 2\\r\\n5 10 6 2 9 17\\r\\n10 1 6 2 17 18 12 5 15 7 3\\r\\n', 'output': ['30']}, {'input': '20\\r\\n2 2 3 2 3 1 1 3 1 1 1 1 1 3 2 1 3 1 1 1\\r\\n1 7\\r\\n13 7 1 11 4 6 16 20 12 5 18 19 15 10\\r\\n8 7 1 11 4 6 17 8 16\\r\\n3 7 1 11\\r\\n9 7 1 11 4 6 8 20 12 3\\r\\n4 7 1 11 4\\r\\n0\\r\\n6 7 1 11 4 6 17\\r\\n4 7 1 11 4\\r\\n7 7 1 11 4 6 17 5\\r\\n2 7 1\\r\\n9 7 1 11 4 6 17 8 14 20\\r\\n11 7 1 11 4 6 20 3 5 15 10 2\\r\\n5 7 1 11 4 6\\r\\n9 7 1 11 4 6 8 16 14 5\\r\\n5 7 1 11 4 6\\r\\n5 7 1 11 4 6\\r\\n11 7 1 11 4 9 6 17 8 20 3 5\\r\\n11 7 1 11 4 6 17 16 20 12 5 18\\r\\n6 7 1 11 4 6 14\\r\\n', 'output': ['35']}, {'input': '21\\r\\n1 2 1 3 3 3 1 1 2 2 3 1 3 1 3 3 1 1 1 2 2\\r\\n1 5\\r\\n0\\r\\n1 11\\r\\n0\\r\\n0\\r\\n0\\r\\n1 8\\r\\n0\\r\\n1 11\\r\\n1 1\\r\\n1 19\\r\\n0\\r\\n1 2\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n1 19\\r\\n0\\r\\n0\\r\\n0\\r\\n', 'output': ['25']}, {'input': '22\\r\\n2 3 2 3 3 2 1 2 3 3 1 3 1 1 2 2 3 3 1 3 2 2\\r\\n0\\r\\n1 8\\r\\n1 22\\r\\n1 12\\r\\n0\\r\\n1 14\\r\\n0\\r\\n0\\r\\n0\\r\\n2 22 14\\r\\n1 12\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n1 16\\r\\n1 13\\r\\n0\\r\\n', 'output': ['25']}, {'input': '23\\r\\n3 1 3 3 2 2 2 1 3 2 3 1 1 1 1 2 3 1 2 1 3 1 1\\r\\n0\\r\\n1 11\\r\\n1 11\\r\\n2 11 16\\r\\n1 2\\r\\n3 11 1 12\\r\\n2 11 16\\r\\n2 12 2\\r\\n1 13\\r\\n2 12 2\\r\\n0\\r\\n0\\r\\n0\\r\\n2 13 11\\r\\n0\\r\\n1 11\\r\\n2 12 2\\r\\n3 16 6 21\\r\\n1 11\\r\\n0\\r\\n0\\r\\n2 11 12\\r\\n0\\r\\n', 'output': ['27']}, {'input': '24\\r\\n1 2 1 1 2 2 1 1 3 2 3 1 3 2 3 3 1 1 3 2 3 2 1 2\\r\\n1 16\\r\\n0\\r\\n0\\r\\n1 2\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n1 2\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n2 12 24\\r\\n0\\r\\n0\\r\\n1 11\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n', 'output': ['27']}, {'input': '25\\r\\n3 3 1 1 1 2 2 2 3 1 2 3 2 1 2 2 2 3 2 1 2 3 2 1 1\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n1 12\\r\\n0\\r\\n1 19\\r\\n0\\r\\n2 12 21\\r\\n2 3 10\\r\\n0\\r\\n1 21\\r\\n0\\r\\n1 9\\r\\n1 3\\r\\n0\\r\\n0\\r\\n2 3 2\\r\\n0\\r\\n1 12\\r\\n0\\r\\n1 3\\r\\n2 21 9\\r\\n', 'output': ['29']}, {'input': '26\\r\\n1 2 2 1 1 2 1 1 2 1 3 1 3 1 2 3 3 3 2 1 2 1 3 3 2 2\\r\\n1 9\\r\\n1 1\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n1 5\\r\\n0\\r\\n2 15 12\\r\\n1 8\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n2 3 26\\r\\n0\\r\\n0\\r\\n0\\r\\n1 22\\r\\n0\\r\\n1 8\\r\\n', 'output': ['30']}, {'input': '27\\r\\n2 1 1 3 2 1 1 2 3 1 1 2 2 2 1 2 1 1 3 3 3 1 1 1 3 1 1\\r\\n0\\r\\n0\\r\\n0\\r\\n1 12\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n1 26\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n1 27\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n1 5\\r\\n0\\r\\n2 20 27\\r\\n1 18\\r\\n0\\r\\n', 'output': ['30']}, {'input': '28\\r\\n2 1 1 3 2 3 2 2 1 3 2 3 3 2 3 1 2 2 3 3 3 3 1 3 2 1 3 3\\r\\n0\\r\\n1 7\\r\\n0\\r\\n2 28 18\\r\\n1 28\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n2 10 18\\r\\n3 8 10 18\\r\\n0\\r\\n2 1 20\\r\\n0\\r\\n1 18\\r\\n1 27\\r\\n2 27 18\\r\\n0\\r\\n0\\r\\n1 28\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n1 28\\r\\n1 9\\r\\n', 'output': ['33']}, {'input': '29\\r\\n3 3 3 3 3 1 1 1 3 2 2 1 1 3 1 1 1 2 1 2 3 1 1 2 1 3 1 2 3\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n1 1\\r\\n0\\r\\n0\\r\\n2 28 15\\r\\n0\\r\\n0\\r\\n0\\r\\n2 24 23\\r\\n1 28\\r\\n0\\r\\n1 28\\r\\n1 20\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n1 28\\r\\n0\\r\\n0\\r\\n2 23 16\\r\\n0\\r\\n0\\r\\n1 7\\r\\n1 28\\r\\n', 'output': ['32']}, {'input': '30\\r\\n1 3 3 3 2 3 1 3 3 3 3 2 3 1 3 2 1 1 1 1 2 3 2 1 1 3 3 2 2 2\\r\\n0\\r\\n1 20\\r\\n0\\r\\n1 7\\r\\n2 6 9\\r\\n1 20\\r\\n1 20\\r\\n3 7 6 9\\r\\n2 10 6\\r\\n0\\r\\n0\\r\\n2 6 9\\r\\n0\\r\\n0\\r\\n1 20\\r\\n2 6 9\\r\\n2 6 9\\r\\n0\\r\\n2 6 9\\r\\n0\\r\\n2 6 9\\r\\n3 27 6 9\\r\\n2 6 9\\r\\n2 6 9\\r\\n0\\r\\n0\\r\\n0\\r\\n2 6 9\\r\\n3 6 9 19\\r\\n3 27 6 9\\r\\n', 'output': ['34']}, {'input': '200\\r\\n3 3 3 1 3 1 3 1 1 1 3 2 1 1 3 1 3 3 2 2 2 2 3 3 1 3 2 3 1 2 3 3 2 2 1 2 3 3 1 3 1 3 3 3 1 2 1 3 3 1 2 1 2 3 2 2 3 2 2 3 2 3 1 1 1 2 2 2 1 3 1 2 1 3 2 3 2 1 2 2 1 1 2 2 1 3 3 2 2 1 3 2 3 2 3 1 2 2 2 3 3 2 2 3 2 3 3 3 3 3 2 2 3 3 2 3 2 1 2 3 2 3 2 1 2 3 3 1 2 3 2 2 3 3 3 1 2 3 3 2 3 3 3 3 3 1 2 1 3 3 1 1 2 1 2 3 1 3 2 3 1 1 2 3 3 2 2 1 3 3 1 3 1 2 1 2 3 1 1 3 2 1 1 1 2 1 1 2 2 2 3 1 2 1 1 1 1 2 1 2\\r\\n19 52 113 18 109 125 8 150 180 173 174 116 130 79 122 112 19 80 110 121\\r\\n2 52 124\\r\\n13 52 129 148 125 150 ...', 'output': ['224']}, {'input': '200\\r\\n1 2 3 2 1 1 3 3 3 3 2 1 1 2 3 3 1 3 2 3 1 3 3 1 2 3 3 2 2 1 3 3 3 3 1 1 2 2 2 2 2 1 1 2 3 2 3 3 3 2 2 1 2 3 2 1 1 1 1 1 3 2 2 2 2 1 3 1 2 2 3 1 1 2 1 1 1 1 2 2 2 1 3 2 1 1 2 2 2 1 1 3 1 3 3 1 3 3 2 3 2 2 3 1 3 3 1 3 3 3 3 2 1 3 1 3 2 2 1 3 2 2 3 1 2 1 2 3 1 3 1 2 1 2 2 3 2 3 2 2 3 2 2 2 3 1 3 3 1 1 2 3 1 2 3 2 2 2 1 3 2 1 1 3 2 1 3 2 1 1 3 2 3 3 2 1 2 3 2 1 3 2 2 3 1 3 3 3 2 1 3 2 3 2 3 3 2 1 1 1\\r\\n16 96 58 20 140 86 51 130 57 66 64 112 177 54 123 62 155\\r\\n0\\r\\n0\\r\\n9 3 125 15 94 46 124 51 130 121\\r\\n4 56 124...', 'output': ['220']}, {'input': '200\\r\\n1 3 2 3 2 3 3 3 2 2 3 2 3 1 1 3 3 2 2 2 1 1 3 3 3 1 1 1 1 2 2 3 1 3 2 3 3 2 1 2 3 2 2 1 2 1 3 3 3 1 3 3 3 2 2 1 3 3 1 1 2 1 2 2 3 3 3 2 1 2 2 2 2 3 2 1 3 1 3 2 2 2 1 3 2 2 3 3 1 3 3 1 3 1 1 2 3 1 1 2 3 1 3 2 1 1 2 2 2 1 1 3 3 1 1 3 1 1 2 1 3 2 1 2 2 3 2 2 3 3 3 1 2 3 3 1 2 3 2 3 2 1 1 2 2 1 3 1 3 3 3 3 3 2 3 3 1 1 1 1 3 1 2 3 1 2 3 3 3 1 3 2 3 3 3 3 3 3 3 1 2 1 3 1 3 1 1 1 1 3 3 2 2 3 1 3 2 3 2 2\\r\\n0\\r\\n0\\r\\n3 193 176 85\\r\\n0\\r\\n1 193\\r\\n3 83 167 85\\r\\n0\\r\\n1 193\\r\\n5 161 193 85 16 44\\r\\n5 83 38 158 85 141\\r\\n7 120 4 158 ...', 'output': ['219']}, {'input': '200\\r\\n1 3 3 1 1 2 1 3 2 2 3 2 2 1 3 1 1 3 3 2 3 3 2 3 2 3 1 2 3 3 2 2 3 3 1 3 3 1 1 1 2 1 1 1 2 2 2 3 2 3 2 1 1 3 2 3 2 1 1 3 3 1 3 1 3 3 3 3 1 2 3 2 1 1 1 2 1 3 2 3 2 1 3 3 2 2 3 3 1 2 1 3 1 2 2 1 1 3 3 3 3 2 1 1 2 1 3 1 3 3 1 2 1 2 1 2 2 1 3 1 2 3 2 3 2 1 1 1 3 3 1 3 2 2 1 1 3 1 3 2 1 3 3 1 1 3 2 2 3 1 2 3 3 1 1 2 1 2 3 1 2 2 3 1 1 1 1 2 2 3 1 1 3 2 3 3 3 3 2 2 3 3 2 3 2 3 1 2 3 1 1 2 3 2 1 1 3 2 3 1\\r\\n3 4 164 15\\r\\n8 15 35 25 18 32 168 10 118\\r\\n3 50 15 35\\r\\n0\\r\\n0\\r\\n2 4 15\\r\\n0\\r\\n5 50 15 44 84 120\\r\\n5 15 111 91 66 1...', 'output': ['222']}, {'input': '200\\r\\n3 1 2 3 2 1 3 2 2 1 3 1 1 1 3 1 3 3 1 1 3 1 2 2 2 1 3 3 2 1 3 2 3 3 3 2 2 1 3 1 2 1 3 2 2 2 2 1 1 2 2 3 1 2 1 3 2 3 2 1 2 1 2 3 3 2 2 2 2 1 2 2 1 2 3 1 1 1 3 3 1 3 2 3 1 2 2 1 2 2 3 3 1 1 1 2 1 1 3 1 3 2 2 1 3 1 2 3 1 3 2 3 3 3 1 3 1 2 3 3 2 2 2 2 2 3 2 3 3 3 3 2 3 2 3 2 1 3 2 1 3 2 1 1 3 1 3 1 2 2 2 2 1 1 1 1 3 2 1 3 3 1 1 2 1 3 3 1 1 3 1 3 2 2 2 3 2 3 2 3 1 2 3 2 3 3 2 3 3 1 1 2 2 2 3 1 2 2 2 2\\r\\n0\\r\\n0\\r\\n11 153 175 47 143 18 78 79 113 170 35 49\\r\\n8 45 153 67 74 161 162 122 170\\r\\n4 153 137 67 72\\r\\n2 153 10...', 'output': ['223']}, {'input': '200\\r\\n3 2 2 1 3 2 2 3 1 1 2 3 3 1 2 2 3 3 1 1 3 3 3 1 1 3 2 3 2 3 3 2 2 1 3 2 1 2 3 1 1 3 3 2 3 1 1 2 3 2 1 3 2 2 3 3 1 1 1 3 2 1 3 1 2 1 2 1 2 3 1 3 2 2 1 1 1 1 3 2 1 1 1 1 3 1 3 1 3 3 1 2 2 2 1 2 3 1 2 3 1 1 2 3 3 3 1 3 2 2 2 2 2 2 3 1 1 3 1 3 1 1 3 3 1 2 1 3 3 2 1 2 2 1 1 2 3 1 3 3 3 2 2 1 1 1 3 3 1 2 3 1 1 3 2 3 2 1 3 3 2 1 3 1 1 1 2 1 1 2 3 2 3 2 3 1 3 1 3 1 3 3 1 2 2 3 3 3 2 1 3 1 1 2 2 2 3 3 1 1\\r\\n0\\r\\n3 96 43 53\\r\\n3 43 156 199\\r\\n1 43\\r\\n3 1 43 33\\r\\n6 43 50 191 21 57 168\\r\\n10 43 194 185 192 83 101 152 80 191 ...', 'output': ['222']}, {'input': '200\\r\\n1 2 3 3 1 2 1 1 2 1 1 1 1 2 3 3 3 1 2 2 2 2 3 2 1 2 2 3 3 1 1 3 1 1 1 3 1 3 3 2 2 3 3 3 2 3 1 1 1 1 2 3 2 3 3 3 1 1 3 3 1 2 3 1 3 1 3 2 3 2 1 3 1 1 1 2 1 3 2 2 2 3 2 2 2 2 1 3 3 3 3 1 3 1 2 1 2 1 2 1 2 3 2 3 1 3 1 2 1 1 2 3 3 1 2 1 1 1 1 2 3 1 1 1 2 3 2 1 1 2 3 3 2 3 3 3 1 3 1 2 3 2 3 2 1 2 3 2 2 2 3 1 2 3 2 1 2 3 1 1 1 3 1 2 3 2 3 1 3 2 1 2 3 1 1 1 1 2 2 2 1 2 1 2 3 3 2 1 3 3 2 2 3 1 1 2 1 3 1 2\\r\\n11 164 21 199 71 131 112 110 4 146 192 179\\r\\n4 71 127 60 14\\r\\n14 193 144 133 70 97 71 53 110 145 113 57 166...', 'output': ['219']}, {'input': '200\\r\\n3 1 3 3 2 1 2 1 1 3 3 3 2 3 2 3 3 2 1 1 2 3 2 2 1 1 2 2 2 3 3 2 2 3 2 1 2 3 1 1 3 1 1 2 2 2 3 3 2 2 3 2 3 1 2 2 2 1 3 1 3 3 3 2 3 2 2 1 2 1 1 3 2 2 3 3 2 3 2 1 2 3 3 3 3 1 2 1 1 3 1 3 1 2 2 1 3 1 1 2 2 3 1 3 1 2 3 3 2 1 2 1 2 1 2 3 2 1 1 2 1 3 1 3 1 3 2 1 2 1 3 3 1 1 1 2 1 2 3 3 1 2 2 1 1 3 1 1 1 3 2 3 1 2 2 3 1 2 1 1 1 1 1 3 3 3 1 1 2 2 3 3 2 2 2 1 3 1 1 3 2 1 1 3 3 3 2 2 1 1 1 1 2 3 3 3 2 2 1 3\\r\\n7 132 13 75 196 148 170 110\\r\\n10 132 16 77 192 46 146 55 75 99 98\\r\\n1 132\\r\\n1 132\\r\\n5 132 103 73 119 13\\r\\n6 13...', 'output': ['221']}, {'input': '200\\r\\n2 1 1 3 2 1 3 2 1 2 2 2 3 1 3 1 3 3 2 2 2 3 1 2 1 2 1 2 1 3 1 3 2 2 2 2 2 2 3 2 3 2 3 2 2 3 2 3 2 3 2 3 3 1 1 3 2 3 3 1 3 2 1 1 1 3 1 2 2 2 2 1 2 3 2 1 1 3 1 1 3 2 1 3 2 2 1 2 1 2 1 3 2 2 2 1 2 1 2 3 3 3 1 1 2 2 3 3 3 3 1 3 1 2 1 3 1 2 2 2 2 1 2 1 2 1 2 1 2 1 1 3 1 2 3 1 2 1 3 1 3 1 2 1 3 3 1 2 1 1 3 3 3 3 3 2 3 2 2 2 2 1 3 3 3 3 3 2 1 1 3 3 3 3 2 1 2 2 2 2 2 1 2 1 2 1 2 1 3 3 2 2 3 1 1 2 2 3 2 2\\r\\n6 84 74 147 109 151 78\\r\\n13 157 14 38 43 55 12 96 111 138 30 76 146 108\\r\\n7 7 12 60 139 159 199 2\\r\\n6 7 14 5...', 'output': ['216']}, {'input': '200\\r\\n1 2 1 3 2 1 1 3 3 3 1 3 1 2 1 1 3 2 2 3 2 3 1 2 2 3 2 3 2 3 2 1 3 1 3 3 3 3 2 3 2 2 3 3 2 3 2 2 1 3 2 2 2 1 2 1 2 3 3 1 3 1 2 1 1 2 2 1 1 2 3 3 2 2 1 3 1 2 2 2 1 2 2 3 3 2 1 1 1 1 2 1 3 1 3 2 1 3 3 2 1 2 3 1 3 2 2 2 3 3 2 1 3 3 2 2 3 1 3 1 2 2 3 1 3 2 1 3 3 2 2 2 1 1 3 1 2 3 2 1 2 3 2 2 3 2 1 3 2 2 3 2 3 2 3 2 2 2 2 2 1 3 1 3 3 3 1 3 1 3 1 2 2 3 2 3 1 3 1 3 3 3 1 1 2 2 1 1 2 1 1 3 1 1 2 3 2 2 2 2\\r\\n11 120 34 23 75 191 50 115 196 15 134 160\\r\\n8 105 34 167 25 191 50 43 15\\r\\n1 55\\r\\n1 42\\r\\n8 159 31 122 25 191 ...', 'output': ['219']}, {'input': '200\\r\\n3 3 2 3 2 3 1 3 2 2 1 3 2 2 1 3 1 3 3 3 2 2 2 2 1 1 3 1 1 2 1 3 1 3 2 1 1 2 3 3 2 3 1 1 3 2 2 2 3 2 1 3 3 2 3 2 2 2 3 3 2 3 2 3 1 2 2 3 3 2 3 3 1 3 1 3 1 1 1 3 1 1 2 3 2 1 1 1 2 2 2 2 3 2 1 2 3 1 3 3 1 2 2 1 2 1 1 3 3 3 1 1 2 3 1 2 3 2 2 1 2 2 3 1 3 3 1 1 2 2 1 1 2 2 3 3 2 3 2 2 3 3 2 3 3 1 2 1 3 1 2 1 1 3 2 3 2 2 2 2 2 3 1 1 2 1 1 3 2 2 1 3 3 1 2 3 2 1 2 3 3 1 1 1 2 2 1 2 1 2 2 2 3 1 3 3 3 2 3 3\\r\\n5 188 126 156 182 91\\r\\n3 102 139 93\\r\\n4 139 56 152 126\\r\\n0\\r\\n5 35 127 37 93 174\\r\\n4 55 21 154 91\\r\\n4 10 93 126 ...', 'output': ['213']}, {'input': '200\\r\\n3 2 2 2 2 3 1 1 1 2 2 2 3 2 3 3 3 1 3 2 3 1 2 2 1 1 1 3 1 3 1 1 1 1 2 3 3 1 3 1 2 2 1 2 3 2 1 2 2 1 1 2 1 2 3 1 3 1 1 2 1 3 2 3 1 2 2 3 1 3 2 2 2 1 1 2 1 1 2 2 1 2 2 2 2 2 3 1 3 2 2 1 3 2 2 2 3 1 3 1 3 1 1 1 2 1 1 3 3 1 3 2 3 3 1 3 3 2 1 1 3 1 1 2 3 3 3 2 1 3 3 1 2 3 3 2 2 3 2 3 1 1 3 1 3 2 2 2 2 3 1 1 2 1 1 2 1 2 3 2 3 3 1 2 3 2 2 2 2 3 1 2 3 3 2 3 3 2 3 1 3 3 2 1 1 1 2 2 2 3 3 1 2 2 1 2 3 2 2 1\\r\\n1 125\\r\\n0\\r\\n2 125 34\\r\\n1 116\\r\\n3 76 100 59\\r\\n0\\r\\n5 176 175 126 80 142\\r\\n3 19 172 116\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n4 125 116 200 ...', 'output': ['210']}, {'input': '200\\r\\n2 1 2 3 2 2 1 2 2 2 1 3 2 2 2 2 1 1 3 2 2 2 3 3 3 1 2 3 2 1 2 2 1 3 3 2 1 3 3 1 1 2 2 2 3 1 2 3 1 1 3 3 1 1 1 1 2 2 1 2 2 2 3 2 2 1 2 3 3 2 2 3 3 3 2 1 1 2 1 1 1 2 3 3 2 3 1 2 3 1 3 1 1 1 3 1 1 1 1 3 2 3 3 2 2 1 1 2 2 1 1 1 2 3 1 3 3 2 2 1 1 3 1 1 2 2 2 1 3 3 3 2 2 2 2 3 1 3 2 3 1 3 3 2 2 1 1 2 1 1 3 2 1 1 2 3 2 2 2 3 1 2 3 2 1 1 2 2 2 3 1 3 2 1 1 1 3 2 1 1 1 1 2 2 2 3 1 2 3 3 2 1 1 1 3 3 2 2 2 1\\r\\n4 15 85 52 111\\r\\n0\\r\\n0\\r\\n2 190 140\\r\\n4 74 52 124 64\\r\\n4 29 181 52 167\\r\\n2 52 184\\r\\n1 31\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n2 21 184\\r\\n0...', 'output': ['210']}, {'input': '200\\r\\n3 1 1 1 3 3 3 1 3 3 1 3 1 2 3 3 3 2 1 2 2 3 3 1 1 3 2 1 3 2 1 2 3 2 2 1 1 2 2 1 1 3 2 2 1 2 2 1 2 2 1 3 1 2 3 1 3 3 1 3 1 3 2 3 2 2 1 2 3 2 1 3 2 3 1 1 1 1 1 1 2 2 3 2 3 3 3 1 3 1 2 3 1 1 3 2 3 2 1 1 3 2 2 2 3 2 1 3 2 1 3 2 3 2 2 1 2 1 2 1 3 2 1 2 1 3 2 2 1 3 3 3 2 2 2 1 2 3 1 1 1 2 1 2 1 2 3 1 1 3 3 2 2 1 1 3 3 1 1 1 1 2 3 1 3 3 3 2 1 3 3 1 3 3 1 2 1 2 1 1 2 3 2 2 1 1 1 1 3 3 3 3 3 3 3 1 3 3 3 2\\r\\n5 200 120 25 2 163\\r\\n5 200 120 21 25 90\\r\\n6 200 120 25 189 2 76\\r\\n3 200 120 25\\r\\n5 200 120 115 25 28\\r\\n4 200 1...', 'output': ['212']}, {'input': '200\\r\\n1 1 3 3 2 2 2 2 2 3 2 3 1 1 1 2 2 2 3 3 1 1 2 1 3 1 3 2 2 2 3 1 3 2 3 2 2 3 1 1 3 3 2 3 3 3 2 2 1 2 3 3 2 2 1 3 2 1 2 3 1 3 2 1 1 1 2 1 3 1 1 3 2 3 1 2 3 3 2 1 2 1 2 3 3 3 1 1 3 3 2 3 3 1 2 2 3 1 3 3 2 1 3 3 2 2 3 2 2 3 1 2 2 3 2 3 2 3 1 3 1 1 3 2 2 2 3 2 2 3 2 3 1 2 3 1 1 2 3 2 1 2 2 3 1 1 3 1 1 1 1 2 2 1 1 3 1 2 3 3 1 2 3 1 2 2 3 2 2 1 1 2 2 1 2 1 3 1 1 1 2 3 2 2 2 2 3 2 2 2 3 1 3 3 1 1 1 3 2 2\\r\\n3 159 22 96\\r\\n2 100 148\\r\\n3 180 22 123\\r\\n3 44 80 22\\r\\n4 102 111 180 22\\r\\n1 39\\r\\n9 112 180 186 185 42 159 22 36 ...', 'output': ['208']}, {'input': '200\\r\\n2 2 2 3 2 1 1 2 3 1 3 2 1 1 1 2 2 2 3 1 3 3 2 1 1 2 1 3 1 3 3 1 1 3 2 1 3 2 2 3 1 2 3 2 2 2 3 3 1 1 3 3 1 2 3 2 3 2 1 1 2 3 3 2 3 3 2 1 3 2 2 3 1 2 2 2 2 2 3 2 3 3 2 3 3 3 3 1 2 2 2 1 3 2 1 1 2 1 3 1 1 3 3 1 1 2 1 2 2 3 1 1 2 1 1 1 2 3 2 2 1 1 1 1 3 2 1 1 2 3 2 2 3 2 2 2 1 3 3 3 3 2 1 1 1 3 2 3 1 3 2 2 2 1 3 2 1 2 1 2 1 2 1 1 1 1 3 1 2 2 1 2 3 2 3 3 2 3 1 3 3 3 2 2 2 1 2 1 1 1 2 2 3 1 2 2 3 3 2 2\\r\\n2 105 58\\r\\n5 3 105 174 47 138\\r\\n0\\r\\n1 3\\r\\n0\\r\\n1 105\\r\\n3 3 105 8\\r\\n2 162 105\\r\\n3 105 174 44\\r\\n4 3 98 105 174\\r\\n1 56\\r...', 'output': ['213']}, {'input': '200\\r\\n3 3 1 3 2 3 2 3 1 3 3 1 1 2 3 1 2 2 2 3 2 2 2 2 1 3 3 2 2 2 3 3 3 3 1 1 3 1 3 1 2 1 2 3 2 2 3 3 3 3 1 3 1 3 1 3 3 3 2 2 1 1 2 1 2 2 2 2 1 2 1 1 2 3 2 3 2 2 2 3 3 3 3 3 2 2 1 1 1 2 1 1 2 3 2 3 1 3 1 1 1 3 3 2 3 2 1 3 1 3 1 2 2 2 2 1 1 2 2 3 2 1 2 2 3 3 1 1 3 3 3 3 1 1 1 3 1 3 2 1 1 3 2 1 1 2 3 3 3 3 2 2 1 2 3 2 2 2 1 3 2 1 2 1 3 2 3 3 1 3 3 3 2 1 3 3 2 2 1 2 2 1 1 3 2 1 3 3 2 1 1 2 3 1 2 2 2 2 3 1\\r\\n0\\r\\n3 7 146 123\\r\\n1 71\\r\\n4 62 140 24 93\\r\\n0\\r\\n7 41 186 144 104 10 32 189\\r\\n1 71\\r\\n1 71\\r\\n0\\r\\n6 71 62 24 72 123 104...', 'output': ['215']}, {'input': '200\\r\\n1 2 3 1 1 1 2 2 2 2 1 2 1 2 3 2 2 3 2 1 2 1 1 2 2 1 2 2 3 1 2 3 3 3 1 1 1 2 1 1 1 1 1 1 1 2 3 2 1 1 3 2 1 2 1 1 3 3 1 3 2 3 2 1 3 3 3 3 1 1 3 3 3 1 2 1 1 1 1 1 1 1 1 2 1 3 3 1 2 1 2 1 2 2 1 2 1 2 3 3 2 2 2 1 1 2 2 3 3 1 1 1 2 2 3 1 3 2 1 3 1 2 1 1 2 1 2 3 1 1 1 2 2 2 3 3 2 3 3 3 3 1 1 2 3 3 3 1 1 1 1 1 3 2 1 3 2 2 2 3 3 2 3 2 2 1 2 2 3 1 2 2 1 1 1 3 3 1 3 1 1 2 1 3 1 2 3 1 1 2 2 2 3 1 2 2 2 1 2 3\\r\\n2 49 38\\r\\n3 200 49 38\\r\\n5 159 38 94 182 192\\r\\n4 49 38 94 148\\r\\n2 200 159\\r\\n7 9 38 111 89 94 92 125\\r\\n8 38 68 17...', 'output': ['213']}, {'input': '200\\r\\n2 3 1 2 1 3 2 1 1 2 1 2 3 3 1 2 1 3 3 2 1 1 3 1 2 3 3 3 1 1 3 1 1 1 2 3 3 3 1 2 3 2 2 1 2 3 3 1 1 2 1 3 3 1 2 3 3 2 2 1 2 1 2 1 3 2 2 3 2 2 1 1 3 3 2 2 1 1 3 1 1 1 3 1 3 1 1 3 1 3 2 3 1 3 1 1 3 2 3 2 2 1 3 3 2 2 2 2 3 3 1 1 1 1 2 1 1 1 3 1 3 2 1 2 1 3 3 2 2 2 1 2 2 2 1 3 2 1 3 2 1 2 2 2 2 1 1 3 2 1 1 2 1 1 1 1 1 3 1 2 2 2 3 2 3 2 3 3 2 3 2 3 2 1 3 3 3 3 3 2 1 3 1 3 1 3 1 1 3 2 1 3 1 3 1 2 1 3 3 1\\r\\n5 38 67 92 180 132\\r\\n4 119 69 116 67\\r\\n0\\r\\n1 135\\r\\n9 193 67 122 7 15 45 2 180 129\\r\\n2 143 195\\r\\n3 176 38 175\\r\\n0...', 'output': ['212']}, {'input': '200\\r\\n2 3 3 1 1 1 3 3 3 3 1 1 1 1 2 2 2 2 2 1 3 1 2 3 1 1 1 3 2 2 1 2 2 3 3 2 3 2 2 2 3 2 3 3 2 2 1 2 3 3 1 1 1 2 2 3 1 2 1 3 3 2 1 3 3 3 2 2 1 2 3 2 2 1 2 1 2 2 1 3 3 2 2 3 3 2 3 1 3 3 1 2 1 1 1 3 1 2 1 2 3 1 3 2 2 1 2 3 1 2 3 3 1 2 1 1 2 2 2 1 3 2 3 3 2 1 2 3 3 3 1 2 3 1 1 1 2 1 3 3 2 3 1 1 2 2 1 3 3 3 3 2 3 2 2 1 1 2 3 1 3 1 3 3 3 3 1 3 2 3 2 2 3 2 3 1 2 2 2 3 2 2 1 1 1 3 1 3 1 2 1 3 1 1 3 2 2 2 3 1\\r\\n2 14 181\\r\\n3 83 181 61\\r\\n3 59 181 60\\r\\n4 181 164 72 138\\r\\n2 109 181\\r\\n3 176 181 79\\r\\n5 118 109 181 135 142\\r\\n2 1...', 'output': ['215']}, {'input': '200\\r\\n3 3 2 2 3 2 1 1 1 1 3 3 1 2 2 2 1 1 3 1 3 3 1 2 3 1 3 2 3 2 2 3 2 2 2 3 1 2 2 1 1 3 3 1 3 3 2 1 3 2 1 1 3 3 2 1 3 1 1 2 3 2 1 2 3 1 2 2 3 1 2 1 1 3 1 3 2 3 1 3 1 3 2 2 2 1 2 1 2 2 2 2 3 1 2 1 1 2 3 3 1 2 1 2 1 2 2 3 2 2 3 2 1 3 2 1 1 1 3 3 3 2 2 3 2 2 3 3 2 1 1 2 1 1 3 3 2 2 3 1 1 2 2 2 3 1 3 2 3 2 2 1 2 1 3 2 2 3 1 2 1 2 2 1 3 3 2 2 3 2 3 2 3 2 1 1 1 3 2 2 1 3 2 2 1 1 2 3 1 1 1 1 2 2 1 2 3 3 1 3\\r\\n110 6 89 9 11 54 82 39 183 22 93 96 109 24 42 45 104 75 190 147 90 68 188 133 62 117 139 154 91 177 44 92...', 'output': ['346']}, {'input': '200\\r\\n1 1 1 3 2 3 1 2 2 2 1 1 1 3 2 2 3 1 1 2 1 2 1 2 2 3 2 2 2 2 1 3 1 1 1 3 2 2 3 2 3 3 1 2 1 1 2 3 1 1 2 3 2 3 1 1 2 1 2 1 2 3 2 3 1 1 2 1 1 3 2 2 1 1 1 2 1 1 1 1 1 3 1 1 3 3 3 1 3 2 1 2 1 1 1 3 1 1 3 2 3 1 1 3 3 1 1 1 1 1 3 2 2 3 1 1 2 3 3 1 1 3 3 2 3 2 2 1 2 3 3 1 1 1 1 3 3 2 3 2 3 3 3 2 3 1 2 2 3 1 3 2 1 3 1 2 3 3 1 1 2 2 2 3 2 3 2 1 3 3 2 1 3 1 3 2 2 2 2 1 2 2 1 1 2 3 1 2 3 2 1 2 1 1 2 2 1 3 2 3\\r\\n23 109 172 111 25 46 157 144 72 156 94 110 22 60 98 118 171 189 86 42 117 186 8 161\\r\\n43 111 25 197 46 157...', 'output': ['338']}, {'input': '200\\r\\n3 2 3 1 2 1 2 3 3 1 3 2 3 1 1 3 3 2 2 2 1 2 2 3 1 1 1 2 3 3 2 3 3 2 3 2 2 1 3 3 2 1 3 3 2 2 1 1 1 2 3 1 3 3 2 3 1 3 3 3 3 3 3 2 2 1 2 3 3 1 2 1 1 1 3 1 1 3 1 1 2 2 2 2 3 3 3 1 1 2 3 2 1 3 2 2 1 2 3 1 2 3 3 3 3 3 2 1 1 3 3 2 3 1 3 3 3 1 2 1 2 2 1 1 3 2 1 1 1 3 3 3 3 2 2 1 3 2 1 2 3 2 1 1 1 1 3 2 3 1 2 1 1 3 2 2 3 1 3 1 2 3 1 1 3 2 2 1 3 2 2 3 1 1 2 2 2 1 1 2 3 1 1 1 2 2 2 2 2 2 1 3 3 2 1 3 2 3 3 1\\r\\n25 200 2 127 5 69 99 52 174 194 19 169 106 163 40 177 84 178 108 112 21 17 42 162 33 122\\r\\n1 200\\r\\n46 200 2...', 'output': ['335']}, {'input': '200\\r\\n2 2 3 3 3 1 3 3 1 3 2 3 2 3 2 3 1 1 1 3 3 3 2 2 3 3 2 1 3 1 1 3 3 3 3 3 1 2 3 2 3 2 1 1 1 3 3 2 2 3 2 1 2 3 1 2 2 2 3 3 3 2 3 2 3 3 3 1 2 2 1 2 3 3 3 1 1 3 3 1 2 1 1 3 3 1 2 3 1 3 3 2 2 3 2 3 1 1 2 1 1 3 1 3 2 2 2 3 1 2 1 1 2 3 2 2 1 1 3 1 1 3 1 2 1 1 3 1 2 3 1 2 3 2 3 1 1 3 1 1 2 1 1 2 3 3 1 3 1 1 3 1 3 2 3 1 2 2 1 2 1 2 3 3 3 1 2 3 2 1 3 3 3 1 1 3 2 3 2 3 1 2 2 3 1 3 1 2 2 1 2 3 1 3 2 1 3 3 3 2\\r\\n84 138 10 57 184 16 9 11 15 2 176 33 43 6 91 158 194 27 18 31 141 167 193 150 102 41 53 197 191 94 66 49 ...', 'output': ['339']}, {'input': '200\\r\\n2 2 3 1 3 2 2 3 3 1 2 3 1 1 2 1 3 3 2 3 3 3 3 3 3 2 2 1 3 1 1 1 2 3 3 1 1 3 1 2 3 3 3 1 2 1 3 3 2 1 3 2 1 3 2 2 3 3 1 3 3 1 2 2 2 2 3 3 1 1 2 3 3 1 1 3 1 1 2 3 2 2 3 3 1 2 1 3 3 1 1 3 2 2 2 1 2 1 1 3 2 1 2 3 3 3 3 1 1 3 1 1 1 2 3 1 2 2 3 1 1 2 3 3 1 3 3 3 2 1 1 2 2 3 3 1 3 3 1 1 1 3 2 1 2 2 2 3 3 1 1 1 3 2 3 3 2 3 3 2 3 2 1 1 3 2 1 3 3 1 2 2 2 3 1 1 2 3 2 2 3 2 1 2 2 1 1 2 2 1 3 2 3 2 1 2 1 2 2 3\\r\\n0\\r\\n43 1 121 139 184 5 124 152 43 197 25 149 186 23 94 80 188 91 187 68 49 176 153 169 36 110 26 38 3 195 ...', 'output': ['387']}, {'input': '200\\r\\n2 3 1 2 3 2 3 2 2 3 2 2 1 2 3 1 1 2 3 2 3 1 1 1 2 1 3 1 1 1 3 3 3 2 3 1 2 2 2 3 2 3 3 3 2 1 3 1 2 1 1 1 3 3 2 3 2 2 3 2 3 3 3 2 2 3 3 2 2 3 1 3 3 2 3 1 2 1 2 1 3 3 2 1 1 2 3 3 2 1 2 1 2 1 1 3 2 2 1 3 3 3 2 1 1 3 2 3 1 1 3 3 2 1 3 1 2 2 2 1 3 3 3 1 1 2 2 1 1 2 3 3 1 3 3 3 3 2 3 1 3 2 1 3 1 1 3 1 2 2 1 3 3 2 1 3 1 2 2 1 2 2 1 1 1 1 1 1 2 2 2 1 3 2 1 3 1 3 1 2 2 2 1 2 1 2 3 3 1 3 2 3 1 2 1 2 3 1 3 1\\r\\n48 98 53 140 115 193 33 91 105 9 19 143 72 194 84 88 90 17 30 52 71 36 118 23 21 180 51 27 81 178 95 43 9...', 'output': ['411']}, {'input': '200\\r\\n1 1 1 3 2 3 1 2 2 3 2 3 2 3 2 3 2 3 2 1 3 2 2 2 2 1 1 3 1 1 3 2 3 2 1 1 3 1 3 3 1 2 1 3 3 3 2 1 2 2 3 1 1 2 3 3 1 1 1 3 2 2 1 3 2 3 3 1 2 1 1 3 1 3 1 3 2 2 1 1 2 1 2 3 2 1 3 3 3 1 2 1 3 3 1 3 2 3 3 1 3 1 1 3 2 3 2 3 1 3 3 3 2 2 3 2 1 2 2 3 2 1 3 3 2 2 2 2 3 3 1 1 2 2 3 2 2 2 2 1 1 2 3 1 2 2 1 1 2 2 2 2 1 2 3 2 1 1 1 2 3 2 3 1 3 3 2 1 1 2 2 3 1 3 3 2 2 1 2 2 3 1 2 1 2 3 2 2 3 1 3 1 2 1 3 3 2 2 1 2\\r\\n85 58 117 3 98 12 35 75 167 155 18 169 88 22 145 132 49 29 71 184 161 9 142 153 189 67 118 112 26 92 139 ...', 'output': ['381']}, {'input': '200\\r\\n2 1 2 2 2 2 1 3 2 3 1 3 3 1 3 3 2 2 2 2 1 3 1 1 2 1 3 2 3 2 2 1 1 1 2 1 2 2 2 1 3 1 1 1 1 1 2 2 1 1 3 1 1 2 1 1 3 2 2 2 3 2 1 1 2 3 1 1 2 1 3 1 3 1 1 2 1 2 3 3 3 3 2 2 2 2 1 3 2 1 3 1 2 3 3 1 3 2 1 1 2 3 2 1 3 2 3 3 3 3 1 2 1 2 3 2 2 1 1 3 1 2 3 2 3 2 1 1 1 3 2 3 1 2 1 1 2 1 3 1 2 1 1 2 3 1 3 3 1 3 2 3 1 1 1 3 1 3 1 1 2 1 2 3 2 3 3 3 2 3 1 3 1 2 3 1 3 1 1 1 3 1 2 3 1 1 2 3 3 1 1 2 2 1 3 2 3 1 2 1\\r\\n131 141 103 74 113 45 96 142 55 196 126 6 77 139 102 15 194 34 105 158 145 187 134 27 162 100 57 8 183 29...', 'output': ['391']}, {'input': '200\\r\\n3 1 3 3 1 3 3 2 1 2 2 3 3 2 1 1 1 2 2 2 2 2 3 1 1 3 1 1 1 3 3 3 2 2 3 3 3 1 1 1 1 3 1 3 3 2 1 3 2 3 3 3 2 2 3 1 2 3 1 2 3 2 2 2 3 2 1 3 2 1 2 3 1 2 1 2 2 3 3 3 2 1 1 3 2 1 1 2 2 1 1 3 2 3 2 2 3 1 3 2 2 1 1 3 2 1 1 2 2 1 2 2 2 2 1 3 2 2 1 1 2 1 1 1 2 1 1 2 3 1 3 1 3 3 3 2 3 1 3 3 2 2 2 3 1 2 1 2 3 2 1 2 2 2 1 3 2 2 1 2 2 3 2 2 3 3 1 1 3 1 2 2 2 3 1 2 3 3 2 3 3 2 3 2 3 2 3 2 2 3 1 2 1 1 2 3 3 1 1 2\\r\\n28 123 137 3 177 73 48 126 94 112 66 186 197 78 26 181 180 187 117 142 29 189 31 191 24 125 45 200 140\\r\\n1...', 'output': ['390']}, {'input': '200\\r\\n1 1 1 2 3 1 3 2 1 1 1 1 1 3 2 3 1 2 2 1 2 2 2 1 1 2 2 2 2 3 3 3 3 3 2 3 1 3 1 1 3 3 2 1 2 2 3 2 1 2 1 3 3 3 2 2 1 2 1 1 1 2 2 1 3 3 3 1 1 2 1 2 1 3 2 1 2 2 2 3 3 1 2 2 2 1 2 3 2 3 1 2 1 3 2 3 1 2 1 3 3 2 1 3 1 2 2 2 1 2 1 2 3 3 3 3 1 3 1 2 1 1 1 2 2 1 2 3 3 1 1 2 3 3 3 2 3 1 1 3 1 1 3 3 3 1 1 3 1 2 3 3 2 3 3 3 2 1 1 1 1 2 3 2 3 3 2 1 3 1 2 3 2 1 1 3 3 2 1 3 3 1 1 1 2 3 1 3 1 3 3 2 3 3 1 1 1 3 3 1\\r\\n141 15 147 168 123 32 99 115 22 9 10 125 79 96 145 126 59 17 20 188 124 21 172 23 14 177 26 112 150 54 47...', 'output': ['383']}, {'input': '200\\r\\n3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 2 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 2 3 1\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n...', 'output': ['202']}, {'input': '200\\r\\n3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 3\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n0\\r\\n...', 'output': ['201']}, {'input': '200\\r\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2\\r\\n0\\r\\n1 1\\r\\n1 2\\r\\n1 2\\r\\n1 1\\r\\n1 5\\r\\n1 5\\r\\n1 6\\r\\n1 7\\r\\n1 8\\r\\n1 5\\r\\n1 8\\r\\n1 6\\r\\n1 12\\r\\n1 14\\r\\n1 2\\r\\n1 12\\r\\n1 4\\r\\n1 9\\r\\n1 2\\r\\n1 17...', 'output': ['214']}, {'input': '4\\r\\n1 1 2 3\\r\\n1 2\\r\\n1 3\\r\\n0\\r\\n1 1\\r\\n', 'output': ['8']}, {'input': '15\\r\\n3 2 2 2 1 1 2 1 1 2 2 3 3 3 2\\r\\n1 13\\r\\n4 13 1 8 14\\r\\n10 5 13 1 8 14 4 2 11 15 10\\r\\n6 5 13 1 8 9 14\\r\\n0\\r\\n11 5 13 1 8 14 4 2 11 10 3 12\\r\\n11 13 1 8 14 4 2 11 15 10 3 6\\r\\n2 13 1\\r\\n4 5 13 1 8\\r\\n8 5 13 1 8 14 2 11 15\\r\\n6 5 13 1 8 14 2\\r\\n10 5 13 1 8 14 2 11 15 10 3\\r\\n0...', 'output': ['23']}, {'input': '17\\r\\n2 3 1 3 3 3 1 1 1 2 2 2 3 2 3 3 2\\r\\n5 4 14 2 11 7\\r\\n3 13 4 14\\r\\n7 6 4 14 2 1 10 12\\r\\n2 6 13\\r\\n9 4 2 9 8 7 17 1 10 12\\r\\n0\\r\\n5 4 14 2 9 11\\r\\n4 13 4 2 11\\r\\n4 13 4 14 2\\r\\n7 13 4 2 11 8 7 1\\r\\n4 13 4 14 2\\r\\n8 6 4 2 8 7 17 1 10\\r\\n0\\r\\n1 4\\r\\n7 13 4 14 2 9 8 7\\r\\n6 4 2 17 1 10 ...', 'output': ['27']}, {'input': '18\\r\\n1 2 3 3 2 2 1 1 3 1 2 3 2 3 1 2 2 3\\r\\n5 9 3 14 12 2\\r\\n7 9 4 3 14 16 7 12\\r\\n1 9\\r\\n1 9\\r\\n6 9 14 12 1 6 15\\r\\n6 9 14 12 2 1 11\\r\\n2 9 14\\r\\n7 9 14 7 12 2 1 6\\r\\n0\\r\\n6 9 18 14 7 1 6\\r\\n4 9 14 7 1\\r\\n2 9 14\\r\\n6 9 3 14 7 1 6\\r\\n2 9 3\\r\\n9 9 3 14 16 12 2 1 6 17\\r\\n4 9 4 18 14\\r\\n8 9 1...', 'output': ['26']}, {'input': '19\\r\\n2 3 3 2 3 1 3 1 2 2 2 1 1 1 2 2 1 3 3\\r\\n0\\r\\n3 1 10 6\\r\\n8 1 6 2 17 18 12 15 7\\r\\n5 6 2 9 17 18\\r\\n6 6 2 17 18 12 16\\r\\n1 11\\r\\n9 1 11 6 2 17 18 4 12 15\\r\\n3 1 6 2\\r\\n4 1 6 2 8\\r\\n0\\r\\n1 1\\r\\n5 1 6 2 17 18\\r\\n12 1 10 6 2 8 17 18 4 12 15 7 3\\r\\n10 11 6 2 17 18 4 12 16 15 7\\r\\n8 1 ...', 'output': ['30']}, {'input': '20\\r\\n2 2 3 2 3 1 1 3 1 1 1 1 1 3 2 1 3 1 1 1\\r\\n1 7\\r\\n13 7 1 11 4 6 16 20 12 5 18 19 15 10\\r\\n8 7 1 11 4 6 17 8 16\\r\\n3 7 1 11\\r\\n9 7 1 11 4 6 8 20 12 3\\r\\n4 7 1 11 4\\r\\n0\\r\\n6 7 1 11 4 6 17\\r\\n4 7 1 11 4\\r\\n7 7 1 11 4 6 17 5\\r\\n2 7 1\\r\\n9 7 1 11 4 6 17 8 14 20\\r\\n11 7 1 11 4 6 20...', 'output': ['35']}, {'input': '200\\r\\n3 3 3 1 3 1 3 1 1 1 3 2 1 1 3 1 3 3 2 2 2 2 3 3 1 3 2 3 1 2 3 3 2 2 1 2 3 3 1 3 1 3 3 3 1 2 1 3 3 1 2 1 2 3 2 2 3 2 2 3 2 3 1 1 1 2 2 2 1 3 1 2 1 3 2 3 2 1 2 2 1 1 2 2 1 3 3 2 2 1 3 2 3 2 3 1 2 2 2 3 3 2 2 3 2 3 3 3 3 3 2 2 3 3 2 3 2 1 2 3 2 3 2 1 2 ...', 'output': ['224']}, {'input': '200\\r\\n1 2 3 2 1 1 3 3 3 3 2 1 1 2 3 3 1 3 2 3 1 3 3 1 2 3 3 2 2 1 3 3 3 3 1 1 2 2 2 2 2 1 1 2 3 2 3 3 3 2 2 1 2 3 2 1 1 1 1 1 3 2 2 2 2 1 3 1 2 2 3 1 1 2 1 1 1 1 2 2 2 1 3 2 1 1 2 2 2 1 1 3 1 3 3 1 3 3 2 3 2 2 3 1 3 3 1 3 3 3 3 2 1 3 1 3 2 2 1 3 2 2 3 1 2 ...', 'output': ['220']}, {'input': '200\\r\\n1 3 2 3 2 3 3 3 2 2 3 2 3 1 1 3 3 2 2 2 1 1 3 3 3 1 1 1 1 2 2 3 1 3 2 3 3 2 1 2 3 2 2 1 2 1 3 3 3 1 3 3 3 2 2 1 3 3 1 1 2 1 2 2 3 3 3 2 1 2 2 2 2 3 2 1 3 1 3 2 2 2 1 3 2 2 3 3 1 3 3 1 3 1 1 2 3 1 1 2 3 1 3 2 1 1 2 2 2 1 1 3 3 1 1 3 1 1 2 1 3 2 1 2 2 ...', 'output': ['219']}, {'input': '200\\r\\n1 3 3 1 1 2 1 3 2 2 3 2 2 1 3 1 1 3 3 2 3 3 2 3 2 3 1 2 3 3 2 2 3 3 1 3 3 1 1 1 2 1 1 1 2 2 2 3 2 3 2 1 1 3 2 3 2 1 1 3 3 1 3 1 3 3 3 3 1 2 3 2 1 1 1 2 1 3 2 3 2 1 3 3 2 2 3 3 1 2 1 3 1 2 2 1 1 3 3 3 3 2 1 1 2 1 3 1 3 3 1 2 1 2 1 2 2 1 3 1 2 3 2 3 2 ...', 'output': ['222']}, {'input': '200\\r\\n3 1 2 3 2 1 3 2 2 1 3 1 1 1 3 1 3 3 1 1 3 1 2 2 2 1 3 3 2 1 3 2 3 3 3 2 2 1 3 1 2 1 3 2 2 2 2 1 1 2 2 3 1 2 1 3 2 3 2 1 2 1 2 3 3 2 2 2 2 1 2 2 1 2 3 1 1 1 3 3 1 3 2 3 1 2 2 1 2 2 3 3 1 1 1 2 1 1 3 1 3 2 2 1 3 1 2 3 1 3 2 3 3 3 1 3 1 2 3 3 2 2 2 2 2 ...', 'output': ['223']}, {'input': '200\\r\\n3 2 2 1 3 2 2 3 1 1 2 3 3 1 2 2 3 3 1 1 3 3 3 1 1 3 2 3 2 3 3 2 2 1 3 2 1 2 3 1 1 3 3 2 3 1 1 2 3 2 1 3 2 2 3 3 1 1 1 3 2 1 3 1 2 1 2 1 2 3 1 3 2 2 1 1 1 1 3 2 1 1 1 1 3 1 3 1 3 3 1 2 2 2 1 2 3 1 2 3 1 1 2 3 3 3 1 3 2 2 2 2 2 2 3 1 1 3 1 3 1 1 3 3 1 ...', 'output': ['222']}, {'input': '200\\r\\n1 2 3 3 1 2 1 1 2 1 1 1 1 2 3 3 3 1 2 2 2 2 3 2 1 2 2 3 3 1 1 3 1 1 1 3 1 3 3 2 2 3 3 3 2 3 1 1 1 1 2 3 2 3 3 3 1 1 3 3 1 2 3 1 3 1 3 2 3 2 1 3 1 1 1 2 1 3 2 2 2 3 2 2 2 2 1 3 3 3 3 1 3 1 2 1 2 1 2 1 2 3 2 3 1 3 1 2 1 1 2 3 3 1 2 1 1 1 1 2 3 1 1 1 2 ...', 'output': ['219']}, {'input': '200\\r\\n3 1 3 3 2 1 2 1 1 3 3 3 2 3 2 3 3 2 1 1 2 3 2 2 1 1 2 2 2 3 3 2 2 3 2 1 2 3 1 1 3 1 1 2 2 2 3 3 2 2 3 2 3 1 2 2 2 1 3 1 3 3 3 2 3 2 2 1 2 1 1 3 2 2 3 3 2 3 2 1 2 3 3 3 3 1 2 1 1 3 1 3 1 2 2 1 3 1 1 2 2 3 1 3 1 2 3 3 2 1 2 1 2 1 2 3 2 1 1 2 1 3 1 3 1 ...', 'output': ['221']}, {'input': '200\\r\\n2 1 1 3 2 1 3 2 1 2 2 2 3 1 3 1 3 3 2 2 2 3 1 2 1 2 1 2 1 3 1 3 2 2 2 2 2 2 3 2 3 2 3 2 2 3 2 3 2 3 2 3 3 1 1 3 2 3 3 1 3 2 1 1 1 3 1 2 2 2 2 1 2 3 2 1 1 3 1 1 3 2 1 3 2 2 1 2 1 2 1 3 2 2 2 1 2 1 2 3 3 3 1 1 2 2 3 3 3 3 1 3 1 2 1 3 1 2 2 2 2 1 2 1 2 ...', 'output': ['216']}, {'input': '200\\r\\n1 2 1 3 2 1 1 3 3 3 1 3 1 2 1 1 3 2 2 3 2 3 1 2 2 3 2 3 2 3 2 1 3 1 3 3 3 3 2 3 2 2 3 3 2 3 2 2 1 3 2 2 2 1 2 1 2 3 3 1 3 1 2 1 1 2 2 1 1 2 3 3 2 2 1 3 1 2 2 2 1 2 2 3 3 2 1 1 1 1 2 1 3 1 3 2 1 3 3 2 1 2 3 1 3 2 2 2 3 3 2 1 3 3 2 2 3 1 3 1 2 2 3 1 3 ...', 'output': ['219']}, {'input': '200\\r\\n3 3 2 3 2 3 1 3 2 2 1 3 2 2 1 3 1 3 3 3 2 2 2 2 1 1 3 1 1 2 1 3 1 3 2 1 1 2 3 3 2 3 1 1 3 2 2 2 3 2 1 3 3 2 3 2 2 2 3 3 2 3 2 3 1 2 2 3 3 2 3 3 1 3 1 3 1 1 1 3 1 1 2 3 2 1 1 1 2 2 2 2 3 2 1 2 3 1 3 3 1 2 2 1 2 1 1 3 3 3 1 1 2 3 1 2 3 2 2 1 2 2 3 1 3 ...', 'output': ['213']}, {'input': '200\\r\\n3 2 2 2 2 3 1 1 1 2 2 2 3 2 3 3 3 1 3 2 3 1 2 2 1 1 1 3 1 3 1 1 1 1 2 3 3 1 3 1 2 2 1 2 3 2 1 2 2 1 1 2 1 2 3 1 3 1 1 2 1 3 2 3 1 2 2 3 1 3 2 2 2 1 1 2 1 1 2 2 1 2 2 2 2 2 3 1 3 2 2 1 3 2 2 2 3 1 3 1 3 1 1 1 2 1 1 3 3 1 3 2 3 3 1 3 3 2 1 1 3 1 1 2 3 ...', 'output': ['210']}, {'input': '200\\r\\n2 1 2 3 2 2 1 2 2 2 1 3 2 2 2 2 1 1 3 2 2 2 3 3 3 1 2 3 2 1 2 2 1 3 3 2 1 3 3 1 1 2 2 2 3 1 2 3 1 1 3 3 1 1 1 1 2 2 1 2 2 2 3 2 2 1 2 3 3 2 2 3 3 3 2 1 1 2 1 1 1 2 3 3 2 3 1 2 3 1 3 1 1 1 3 1 1 1 1 3 2 3 3 2 2 1 1 2 2 1 1 1 2 3 1 3 3 2 2 1 1 3 1 1 2 ...', 'output': ['210']}, {'input': '200\\r\\n3 1 1 1 3 3 3 1 3 3 1 3 1 2 3 3 3 2 1 2 2 3 3 1 1 3 2 1 3 2 1 2 3 2 2 1 1 2 2 1 1 3 2 2 1 2 2 1 2 2 1 3 1 2 3 1 3 3 1 3 1 3 2 3 2 2 1 2 3 2 1 3 2 3 1 1 1 1 1 1 2 2 3 2 3 3 3 1 3 1 2 3 1 1 3 2 3 2 1 1 3 2 2 2 3 2 1 3 2 1 3 2 3 2 2 1 2 1 2 1 3 2 1 2 1 ...', 'output': ['212']}, {'input': '200\\r\\n1 1 3 3 2 2 2 2 2 3 2 3 1 1 1 2 2 2 3 3 1 1 2 1 3 1 3 2 2 2 3 1 3 2 3 2 2 3 1 1 3 3 2 3 3 3 2 2 1 2 3 3 2 2 1 3 2 1 2 3 1 3 2 1 1 1 2 1 3 1 1 3 2 3 1 2 3 3 2 1 2 1 2 3 3 3 1 1 3 3 2 3 3 1 2 2 3 1 3 3 2 1 3 3 2 2 3 2 2 3 1 2 2 3 2 3 2 3 1 3 1 1 3 2 2 ...', 'output': ['208']}, {'input': '200\\r\\n2 2 2 3 2 1 1 2 3 1 3 2 1 1 1 2 2 2 3 1 3 3 2 1 1 2 1 3 1 3 3 1 1 3 2 1 3 2 2 3 1 2 3 2 2 2 3 3 1 1 3 3 1 2 3 2 3 2 1 1 2 3 3 2 3 3 2 1 3 2 2 3 1 2 2 2 2 2 3 2 3 3 2 3 3 3 3 1 2 2 2 1 3 2 1 1 2 1 3 1 1 3 3 1 1 2 1 2 2 3 1 1 2 1 1 1 2 3 2 2 1 1 1 1 3 ...', 'output': ['213']}, {'input': '200\\r\\n3 3 1 3 2 3 2 3 1 3 3 1 1 2 3 1 2 2 2 3 2 2 2 2 1 3 3 2 2 2 3 3 3 3 1 1 3 1 3 1 2 1 2 3 2 2 3 3 3 3 1 3 1 3 1 3 3 3 2 2 1 1 2 1 2 2 2 2 1 2 1 1 2 3 2 3 2 2 2 3 3 3 3 3 2 2 1 1 1 2 1 1 2 3 2 3 1 3 1 1 1 3 3 2 3 2 1 3 1 3 1 2 2 2 2 1 1 2 2 3 2 1 2 2 3 ...', 'output': ['215']}, {'input': '200\\r\\n1 2 3 1 1 1 2 2 2 2 1 2 1 2 3 2 2 3 2 1 2 1 1 2 2 1 2 2 3 1 2 3 3 3 1 1 1 2 1 1 1 1 1 1 1 2 3 2 1 1 3 2 1 2 1 1 3 3 1 3 2 3 2 1 3 3 3 3 1 1 3 3 3 1 2 1 1 1 1 1 1 1 1 2 1 3 3 1 2 1 2 1 2 2 1 2 1 2 3 3 2 2 2 1 1 2 2 3 3 1 1 1 2 2 3 1 3 2 1 3 1 2 1 1 2 ...', 'output': ['213']}, {'input': '200\\r\\n2 3 1 2 1 3 2 1 1 2 1 2 3 3 1 2 1 3 3 2 1 1 3 1 2 3 3 3 1 1 3 1 1 1 2 3 3 3 1 2 3 2 2 1 2 3 3 1 1 2 1 3 3 1 2 3 3 2 2 1 2 1 2 1 3 2 2 3 2 2 1 1 3 3 2 2 1 1 3 1 1 1 3 1 3 1 1 3 1 3 2 3 1 3 1 1 3 2 3 2 2 1 3 3 2 2 2 2 3 3 1 1 1 1 2 1 1 1 3 1 3 2 1 2 1 ...', 'output': ['212']}, {'input': '200\\r\\n2 3 3 1 1 1 3 3 3 3 1 1 1 1 2 2 2 2 2 1 3 1 2 3 1 1 1 3 2 2 1 2 2 3 3 2 3 2 2 2 3 2 3 3 2 2 1 2 3 3 1 1 1 2 2 3 1 2 1 3 3 2 1 3 3 3 2 2 1 2 3 2 2 1 2 1 2 2 1 3 3 2 2 3 3 2 3 1 3 3 1 2 1 1 1 3 1 2 1 2 3 1 3 2 2 1 2 3 1 2 3 3 1 2 1 1 2 2 2 1 3 2 3 3 2 ...', 'output': ['215']}, {'input': '200\\r\\n3 3 2 2 3 2 1 1 1 1 3 3 1 2 2 2 1 1 3 1 3 3 1 2 3 1 3 2 3 2 2 3 2 2 2 3 1 2 2 1 1 3 3 1 3 3 2 1 3 2 1 1 3 3 2 1 3 1 1 2 3 2 1 2 3 1 2 2 3 1 2 1 1 3 1 3 2 3 1 3 1 3 2 2 2 1 2 1 2 2 2 2 3 1 2 1 1 2 3 3 1 2 1 2 1 2 2 3 2 2 3 2 1 3 2 1 1 1 3 3 3 2 2 3 2 ...', 'output': ['346']}, {'input': '200\\r\\n1 1 1 3 2 3 1 2 2 2 1 1 1 3 2 2 3 1 1 2 1 2 1 2 2 3 2 2 2 2 1 3 1 1 1 3 2 2 3 2 3 3 1 2 1 1 2 3 1 1 2 3 2 3 1 1 2 1 2 1 2 3 2 3 1 1 2 1 1 3 2 2 1 1 1 2 1 1 1 1 1 3 1 1 3 3 3 1 3 2 1 2 1 1 1 3 1 1 3 2 3 1 1 3 3 1 1 1 1 1 3 2 2 3 1 1 2 3 3 1 1 3 3 2 3 ...', 'output': ['338']}, {'input': '200\\r\\n3 2 3 1 2 1 2 3 3 1 3 2 3 1 1 3 3 2 2 2 1 2 2 3 1 1 1 2 3 3 2 3 3 2 3 2 2 1 3 3 2 1 3 3 2 2 1 1 1 2 3 1 3 3 2 3 1 3 3 3 3 3 3 2 2 1 2 3 3 1 2 1 1 1 3 1 1 3 1 1 2 2 2 2 3 3 3 1 1 2 3 2 1 3 2 2 1 2 3 1 2 3 3 3 3 3 2 1 1 3 3 2 3 1 3 3 3 1 2 1 2 2 1 1 3 ...', 'output': ['335']}, {'input': '200\\r\\n2 2 3 3 3 1 3 3 1 3 2 3 2 3 2 3 1 1 1 3 3 3 2 2 3 3 2 1 3 1 1 3 3 3 3 3 1 2 3 2 3 2 1 1 1 3 3 2 2 3 2 1 2 3 1 2 2 2 3 3 3 2 3 2 3 3 3 1 2 2 1 2 3 3 3 1 1 3 3 1 2 1 1 3 3 1 2 3 1 3 3 2 2 3 2 3 1 1 2 1 1 3 1 3 2 2 2 3 1 2 1 1 2 3 2 2 1 1 3 1 1 3 1 2 1 ...', 'output': ['339']}, {'input': '200\\r\\n2 2 3 1 3 2 2 3 3 1 2 3 1 1 2 1 3 3 2 3 3 3 3 3 3 2 2 1 3 1 1 1 2 3 3 1 1 3 1 2 3 3 3 1 2 1 3 3 2 1 3 2 1 3 2 2 3 3 1 3 3 1 2 2 2 2 3 3 1 1 2 3 3 1 1 3 1 1 2 3 2 2 3 3 1 2 1 3 3 1 1 3 2 2 2 1 2 1 1 3 2 1 2 3 3 3 3 1 1 3 1 1 1 2 3 1 2 2 3 1 1 2 3 3 1 ...', 'output': ['387']}, {'input': '200\\r\\n2 3 1 2 3 2 3 2 2 3 2 2 1 2 3 1 1 2 3 2 3 1 1 1 2 1 3 1 1 1 3 3 3 2 3 1 2 2 2 3 2 3 3 3 2 1 3 1 2 1 1 1 3 3 2 3 2 2 3 2 3 3 3 2 2 3 3 2 2 3 1 3 3 2 3 1 2 1 2 1 3 3 2 1 1 2 3 3 2 1 2 1 2 1 1 3 2 2 1 3 3 3 2 1 1 3 2 3 1 1 3 3 2 1 3 1 2 2 2 1 3 3 3 1 1 ...', 'output': ['411']}, {'input': '200\\r\\n1 1 1 3 2 3 1 2 2 3 2 3 2 3 2 3 2 3 2 1 3 2 2 2 2 1 1 3 1 1 3 2 3 2 1 1 3 1 3 3 1 2 1 3 3 3 2 1 2 2 3 1 1 2 3 3 1 1 1 3 2 2 1 3 2 3 3 1 2 1 1 3 1 3 1 3 2 2 1 1 2 1 2 3 2 1 3 3 3 1 2 1 3 3 1 3 2 3 3 1 3 1 1 3 2 3 2 3 1 3 3 3 2 2 3 2 1 2 2 3 2 1 3 3 2 ...', 'output': ['381']}, {'input': '200\\r\\n2 1 2 2 2 2 1 3 2 3 1 3 3 1 3 3 2 2 2 2 1 3 1 1 2 1 3 2 3 2 2 1 1 1 2 1 2 2 2 1 3 1 1 1 1 1 2 2 1 1 3 1 1 2 1 1 3 2 2 2 3 2 1 1 2 3 1 1 2 1 3 1 3 1 1 2 1 2 3 3 3 3 2 2 2 2 1 3 2 1 3 1 2 3 3 1 3 2 1 1 2 3 2 1 3 2 3 3 3 3 1 2 1 2 3 2 2 1 1 3 1 2 3 2 3 ...', 'output': ['391']}, {'input': '200\\r\\n3 1 3 3 1 3 3 2 1 2 2 3 3 2 1 1 1 2 2 2 2 2 3 1 1 3 1 1 1 3 3 3 2 2 3 3 3 1 1 1 1 3 1 3 3 2 1 3 2 3 3 3 2 2 3 1 2 3 1 2 3 2 2 2 3 2 1 3 2 1 2 3 1 2 1 2 2 3 3 3 2 1 1 3 2 1 1 2 2 1 1 3 2 3 2 2 3 1 3 2 2 1 1 3 2 1 1 2 2 1 2 2 2 2 1 3 2 2 1 1 2 1 1 1 2 ...', 'output': ['390']}, {'input': '200\\r\\n1 1 1 2 3 1 3 2 1 1 1 1 1 3 2 3 1 2 2 1 2 2 2 1 1 2 2 2 2 3 3 3 3 3 2 3 1 3 1 1 3 3 2 1 2 2 3 2 1 2 1 3 3 3 2 2 1 2 1 1 1 2 2 1 3 3 3 1 1 2 1 2 1 3 2 1 2 2 2 3 3 1 2 2 2 1 2 3 2 3 1 2 1 3 2 3 1 2 1 3 3 2 1 3 1 2 2 2 1 2 1 2 3 3 3 3 1 3 1 2 1 1 1 2 2 ...', 'output': ['383']}, {'input': '200\\r\\n3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 ...', 'output': ['201', '202']}, {'input': '200\\r\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 ...', 'output': ['214']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tint[] c = new int[n];\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tc[i] = Integer.parseInt(st.nextToken());\n\t\t}\n\t\tint[][] g = new int[n][];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\tint k = Integer.parseInt(st.nextToken());\n\t\t\tg[i] = new int[k];\n\t\t\tfor (int j = 0; j < k; j++) {\n\t\t\t\tg[i][j] = Integer.parseInt(st.nextToken()) - 1;\n\t\t\t}\n\t\t}\n\t\tint[][][] dp = new int[3][n][n];\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tArrays.fill(dp[i][j], -1);\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tif (i == j) {\n\t\t\t\t\tdp[c[i] - 1][i][j] = 0;\n\t\t\t\t} else {\n\t\t\t\t\tfor (int k = 0; k < 3; k++) {\n\t\t\t\t\t\tif (dp[k][i][j]!= -1) {\n\t\t\t\t\t\t\tdp[k][i][j]++;\n\t\t\t\t\t\t\tfor (int l = 0; l < g[j].length; l++) {\n\t\t\t\t\t\t\t\tint v = g[j][l];\n\t\t\t\t\t\t\t\tif (dp[k][i][v] == -1) {\n\t\t\t\t\t\t\t\t\tdp[k][i][v] = dp[k][i][j] + 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint ans = Integer.MAX_VALUE;\n\t\tfor (int i = 0; i < 3; i++) {\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tfor (int k = 0; k < n; k++) {\n\t\t\t\t\tif (dp[i][j][k]!= -1) {\n\t\t\t\t\t\tans = Math.min(ans, dp[i][j][k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(ans);\n\t}\n}"}
{"src_uid": "1c74a21045b2d312f68565bdaaaa8a7b", "id": 108, "lang_cluster": "java", "lang": "Java 11", "difficulty": 2100, "testcases": "[{'input': '5\\r\\n8 2 7 3 1\\r\\n', 'output': ['3\\r\\n']}, {'input': '3\\r\\n5 2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n2 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n16 8 4 2 1\\r\\n', 'output': ['4\\r\\n']}, {'input': '6\\r\\n5 5 2 3 5 5\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n4 4 4 4 4\\r\\n', 'output': ['0\\r\\n']}, {'input': '10\\r\\n5 4 2 13 5 2 21 2 20 1\\r\\n', 'output': ['5\\r\\n']}, {'input': '10\\r\\n10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['7\\r\\n']}, {'input': '12\\r\\n5 1 3 2 3 3 2 2 2 1 3 2\\r\\n', 'output': ['7\\r\\n']}, {'input': '10\\r\\n1 2 4 8 1 2 8 16 4 1\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n6 6 6 6 4 4 4 3 3 2\\r\\n', 'output': ['4\\r\\n']}, {'input': '17\\r\\n8 6 1 2 3 6 2 2 2 6 6 1 1 1 1 1 1\\r\\n', 'output': ['12\\r\\n']}, {'input': '10\\r\\n982 825 689 538 970 73 40 735 930 719\\r\\n', 'output': ['6\\r\\n']}, {'input': '20\\r\\n131 883 492 278 77 934 244 539 929 253 442 84 862 282 141 4 13 843 287 646\\r\\n', 'output': ['15\\r\\n']}, {'input': '30\\r\\n632 292 647 666 184 442 449 695 281 786 52 576 124 927 273 771 217 56 135 624 162 406 341 30 343 137 658 318 394 71\\r\\n', 'output': ['23\\r\\n']}, {'input': '40\\r\\n780 349 449 406 290 950 653 500 281 320 14 67 386 572 404 538 421 270 983 602 464 611 718 636 912 678 697 203 775 309 764 132 59 801 713 826 759 51 945 742\\r\\n', 'output': ['30\\r\\n']}, {'input': '50\\r\\n929 406 604 146 397 811 858 656 632 853 624 559 648 216 183 305 977 483 831 228 117 465 95 891 834 219 88 440 156 547 319 920 540 15 513 371 473 129 290 462 315 815 470 511 151 851 96 52 259 825\\r\\n', 'output': ['40\\r\\n']}, {'input': '100\\r\\n981 756 746 449 425 692 211 546 943 980 556 784 426 943 496 742 488 515 753 435 188 875 373 618 415 506 660 446 82 398 244 987 442 588 32 351 832 802 195 104 724 167 109 183 253 847 329 906 640 691 739 639 987 341 560 627 573 809 443 411 180 550 881 154 450 100 435 946 164 688 174 798 1000 275 976 627 779 457 408 262 989 44 26 392 938 857 55 111 885 938 941 206 339 251 904 245 425 872 980 811\\r\\n', 'output': ['85\\r\\n']}, {'input': '17\\r\\n65536 32768 16384 8192 4096 2048 1024 512 256 128 64 32 16 8 4 2 1\\r\\n', 'output': ['16\\r\\n']}, {'input': '5\\r\\n5 1 3 3 6\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class D {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tint[] h = new int[n];\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\th[i] = Integer.parseInt(st.nextToken());\n\t\t}\n\t\tint[][] dp = new int[n][n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tArrays.fill(dp[i], -1);\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = i; j < n; j++) {\n\t\t\t\tif (i == j) {\n\t\t\t\t\tdp[i][j] = 0;\n\t\t\t\t} else {\n\t\t\t\t\tdp[i][j] = 1 + Math.min(dp[i + 1][j], dp[i][j - 1]);\n\t\t\t\t\tfor (int k = i + 1; k <= j; k++) {\n\t\t\t\t\t\tif (h[k - 1] + h[k] > h[i] && h[k - 1] + h[k] > h[j]) {\n\t\t\t\t\t\t\tdp[i][j] = Math.min(dp[i][j], dp[i + 1][k - 1] + dp[k][j - 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(dp[0][n - 1]);\n\t}\n}\n"}
{"src_uid": "3791d1a504b39eb2e72472bcfd9a7e22", "id": 109, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1600, "testcases": "[{'input': '5 3\\r\\n6 3 4 0 2\\r\\n', 'output': ['3 4\\r\\n']}, {'input': '3 4\\r\\n5 5 5\\r\\n', 'output': ['3 5\\r\\n']}, {'input': '5 3\\r\\n3 1 2 2 1\\r\\n', 'output': ['4 2\\r\\n']}, {'input': '6 0\\r\\n3 2 3 2 3 2\\r\\n', 'output': ['3 2\\r\\n']}, {'input': '10 15\\r\\n1 1 1 4 4 1 4 4 1 4\\r\\n', 'output': ['10 4\\r\\n']}, {'input': '5 100000\\r\\n0 5 5 4 3\\r\\n', 'output': ['5 5\\r\\n']}, {'input': '20 10\\r\\n-12 28 0 -27 16 25 -17 -25 9 -15 -38 19 33 20 -18 22 14 36 33 29\\r\\n', 'output': ['4 33\\r\\n']}, {'input': '100 100\\r\\n92 -6 67 92 65 -32 67 -31 91 -63 52 -81 -98 -12 48 86 -72 95 -50 66 79 89 -1 0 -33 -27 -23 -71 1 19 14 -61 -39 33 61 -64 91 -99 74 -18 -85 -39 84 74 -23 0 14 25 100 -52 -94 28 18 -81 34 39 -28 0 -25 49 -56 0 57 -2 36 -27 0 -91 -40 12 0 0 73 93 72 -82 47 58 15 0 -71 -58 28 100 -96 12 89 45 97 -79 85 38 -60 0 0 49 32 -30 -68 -93\\r\\n', 'output': ['17 0\\r\\n']}, {'input': '100 1000\\r\\n-281 191 -27 -286 -497 462 0 889 0 -350 -720 -507 916 0 -648 -942 -140 0 0 -877 66 576 -278 410 -792 -607 713 712 296 -828 -488 -129 508 -106 470 -263 -865 -506 -604 334 591 -40 220 0 0 198 -435 374 -34 254 970 0 549 100 555 326 91 0 -361 -835 472 823 -663 -456 0 91 295 126 383 141 476 609 518 545 840 -451 -93 -16 -453 381 647 334 -454 -708 -711 334 -78 -936 462 728 960 725 -424 649 0 246 -310 42 -559 -980\\r\\n', 'output': ['21 0\\r\\n']}, {'input': '1 268900446\\r\\n999999987\\r\\n', 'output': ['1 999999987\\r\\n']}, {'input': '10 93519867\\r\\n-316 313 -318 -307 -305 314 -302 -304 -320 -313\\r\\n', 'output': ['10 314\\r\\n']}, {'input': '100 415583658\\r\\n-90 -91 91 80 94 99 86 -89 89 98 93 -80 99 84 99 90 90 88 85 80 80 -99 84 84 -86 83 83 87 98 97 85 82 81 98 82 80 84 92 -93 98 82 93 90 85 91 90 85 91 -89 88 -84 -85 90 89 89 -93 88 -83 96 88 -86 95 80 92 -92 87 98 83 95 91 83 97 84 82 93 88 96 97 -85 -86 82 98 89 -84 98 81 83 -88 87 97 87 88 93 -99 88 80 90 97 95 90\\r\\n', 'output': ['100 99\\r\\n']}, {'input': '4 100\\r\\n1 1 1 1000000000\\r\\n', 'output': ['3 1\\r\\n']}, {'input': '5 1000\\r\\n1 1 1 1000000000 998756787\\r\\n', 'output': ['3 1\\r\\n']}, {'input': '5 1000000000\\r\\n0 1 2 999999999 999999999\\r\\n', 'output': ['3 2\\r\\n']}, {'input': '4 1000000000\\r\\n0 0 0 1000000000\\r\\n', 'output': ['3 0\\r\\n']}, {'input': '1 0\\r\\n0\\r\\n', 'output': ['1 0\\r\\n']}, {'input': '7 999999990\\r\\n999999999 999999999 999999999 3 4 2 1\\r\\n', 'output': ['4 4\\r\\n']}, {'input': '52 1000000000\\r\\n-1000000000 1000000000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n', 'output': ['51 0\\r\\n']}, {'input': '10 1000000000\\r\\n2 2 2 2 2 2 2 2 2 1000000000\\r\\n', 'output': ['9 2\\r\\n']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint k = Integer.parseInt(st.nextToken());\n\t\tint[] a = new int[n];\n\t\tst = new StringTokenizer(br.readLine());\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = Integer.parseInt(st.nextToken());\n\t\t}\n\t\tArrays.sort(a);\n\t\tint max = 0;\n\t\tint min = 0;\n\t\tint count = 0;\n\t\tint sum = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (a[i] == a[i + 1]) {\n\t\t\t\tcount++;\n\t\t\t} else {\n\t\t\t\tsum += count * (a[i + 1] - a[i]);\n\t\t\t\tif (sum <= k) {\n\t\t\t\t\tmax = Math.max(max, count);\n\t\t\t\t\tmin = Math.min(min, a[i]);\n\t\t\t\t}\n\t\t\t\tcount = 1;\n\t\t\t\tsum = a[i + 1] - a[i];\n\t\t\t}\n\t\t}\n\t\tsum += count * (a[n - 1] - a[n - 2]);\n\t\tif (sum <= k) {\n\t\t\tmax = Math.max(max, count);\n\t\t\tmin = Math.min(min, a[n - 1]);\n\t\t}\n\t\tSystem.out.println(max + \" \" + min);\n\t}\n}\n"}
{"src_uid": "a6cba17c5ddb93f6741e00280fb6c54c", "id": 110, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1600, "testcases": "[{'input': '6 10\\r\\nalloc 5\\r\\nalloc 3\\r\\nerase 1\\r\\nalloc 6\\r\\ndefragment\\r\\nalloc 6\\r\\n', 'output': ['1\\r\\n2\\r\\nNULL\\r\\n3\\r\\n']}, {'input': '6 1\\r\\ndefragment\\r\\nalloc 10\\r\\nalloc 1\\r\\nerase -1\\r\\nerase 1\\r\\nerase 1\\r\\n', 'output': ['NULL\\r\\n1\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n']}, {'input': '14 100\\r\\nalloc 99\\r\\nalloc 1\\r\\nalloc 1\\r\\nerase 2\\r\\nalloc 1\\r\\nerase 4\\r\\nerase 1\\r\\nalloc 100\\r\\nalloc 1\\r\\nalloc 99\\r\\ndefragment\\r\\nerase 4\\r\\nalloc 100\\r\\nalloc 99\\r\\n', 'output': ['1\\r\\n2\\r\\nNULL\\r\\n3\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\n4\\r\\nNULL\\r\\nNULL\\r\\nNULL\\r\\n']}, {'input': '26 25\\r\\ndefragment\\r\\nerase 1\\r\\nerase -1560200883\\r\\nalloc 44\\r\\ndefragment\\r\\nalloc 75\\r\\nalloc 22\\r\\ndefragment\\r\\nerase 4\\r\\ndefragment\\r\\nalloc 57\\r\\nalloc 53\\r\\nerase 4\\r\\nerase -1639632026\\r\\nerase -2121605039\\r\\nerase 3\\r\\nalloc 51\\r\\nalloc 65\\r\\ndefragment\\r\\nerase 2\\r\\nerase 4\\r\\nalloc 52\\r\\nerase 3\\r\\ndefragment\\r\\nerase -1842529282\\r\\nerase 3\\r\\n', 'output': ['ILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\n1\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n']}, {'input': '22 9\\r\\nerase 1\\r\\nalloc 6\\r\\nalloc 65\\r\\nerase 1\\r\\nalloc 87\\r\\nerase -1638927047\\r\\nalloc 5\\r\\nerase 2\\r\\nalloc 70\\r\\ndefragment\\r\\nalloc 20\\r\\nalloc 48\\r\\nerase -69401977\\r\\nalloc 20\\r\\ndefragment\\r\\nerase 7\\r\\ndefragment\\r\\nerase 9\\r\\nerase 7\\r\\nerase 4\\r\\ndefragment\\r\\nalloc 66\\r\\n', 'output': ['ILLEGAL_ERASE_ARGUMENT\\r\\n1\\r\\nNULL\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n2\\r\\nNULL\\r\\nNULL\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\n']}, {'input': '12 40\\r\\nerase 1\\r\\nalloc 21\\r\\nalloc 5\\r\\nalloc 7\\r\\ndefragment\\r\\ndefragment\\r\\nerase 2\\r\\nalloc 83\\r\\nerase 4\\r\\ndefragment\\r\\nalloc 59\\r\\ndefragment\\r\\n', 'output': ['ILLEGAL_ERASE_ARGUMENT\\r\\n1\\r\\n2\\r\\n3\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\n']}, {'input': '38 18\\r\\nalloc 72\\r\\nerase 2\\r\\nalloc 50\\r\\ndefragment\\r\\nerase 3\\r\\ndefragment\\r\\nalloc 43\\r\\nalloc 41\\r\\ndefragment\\r\\ndefragment\\r\\nalloc 26\\r\\nalloc 46\\r\\nalloc 16\\r\\nalloc 15\\r\\ndefragment\\r\\ndefragment\\r\\nalloc 95\\r\\nerase 7\\r\\nerase 7\\r\\nerase 5\\r\\nerase 2\\r\\nerase 9\\r\\nerase 7\\r\\nalloc 43\\r\\ndefragment\\r\\nerase 7\\r\\ndefragment\\r\\nalloc 48\\r\\nalloc 77\\r\\nerase 10\\r\\nerase 11\\r\\nalloc 16\\r\\nalloc 84\\r\\nerase 1\\r\\ndefragment\\r\\nalloc 86\\r\\ndefragment\\r\\nerase 13\\r\\n', 'output': ['NULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\nNULL\\r\\nNULL\\r\\n1\\r\\nNULL\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n']}, {'input': '37 74\\r\\nalloc 11\\r\\ndefragment\\r\\nerase 1\\r\\ndefragment\\r\\nerase 2\\r\\ndefragment\\r\\nalloc 90\\r\\nerase 3\\r\\nerase 2\\r\\nerase 3\\r\\nerase 1\\r\\nerase 1\\r\\nalloc 38\\r\\nalloc 19\\r\\nerase 1\\r\\nerase 3\\r\\ndefragment\\r\\nalloc 93\\r\\nerase 5\\r\\nerase 4\\r\\nalloc 66\\r\\nalloc 71\\r\\nerase 5\\r\\ndefragment\\r\\ndefragment\\r\\ndefragment\\r\\ndefragment\\r\\nerase 7\\r\\nalloc 47\\r\\nerase -95616683\\r\\nerase 2\\r\\nalloc 28\\r\\nalloc 32\\r\\nerase 11\\r\\nalloc 50\\r\\ndefragment\\r\\ndefragment\\r\\n', 'output': ['1\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n2\\r\\n3\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n4\\r\\n5\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\n']}, {'input': '16 49\\r\\nerase -751005193\\r\\ndefragment\\r\\nalloc 37\\r\\nalloc 82\\r\\nerase 3\\r\\nerase 1\\r\\nalloc 80\\r\\nalloc 51\\r\\ndefragment\\r\\nalloc 74\\r\\nerase 1\\r\\nalloc 91\\r\\ndefragment\\r\\ndefragment\\r\\nalloc 98\\r\\ndefragment\\r\\n', 'output': ['ILLEGAL_ERASE_ARGUMENT\\r\\n1\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\n']}, {'input': '42 98\\r\\ndefragment\\r\\ndefragment\\r\\ndefragment\\r\\ndefragment\\r\\ndefragment\\r\\nalloc 5\\r\\nalloc 66\\r\\ndefragment\\r\\nerase 3\\r\\nalloc 53\\r\\ndefragment\\r\\nerase 4\\r\\nerase 2\\r\\nalloc 70\\r\\nerase 3\\r\\ndefragment\\r\\ndefragment\\r\\nerase 2\\r\\nerase 3\\r\\nerase -1327931832\\r\\nalloc 93\\r\\nalloc 64\\r\\nerase 7\\r\\nerase 6\\r\\nerase 3\\r\\nalloc 61\\r\\nalloc 12\\r\\nalloc 65\\r\\nerase 2\\r\\nalloc 46\\r\\nerase 11\\r\\nerase 9\\r\\nerase 9\\r\\nerase 6\\r\\nalloc 2\\r\\nalloc 78\\r\\ndefragment\\r\\nerase 13\\r\\nerase 6\\r\\nerase 10\\r\\nalloc 53\\r\\nalloc 46\\r\\n', 'output': ['1\\r\\n2\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n3\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n4\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\n']}, {'input': '19 46\\r\\nalloc 21\\r\\nerase 2\\r\\nerase 1\\r\\ndefragment\\r\\nalloc 4\\r\\ndefragment\\r\\ndefragment\\r\\nalloc 40\\r\\nerase 1\\r\\ndefragment\\r\\ndefragment\\r\\nalloc 68\\r\\nerase -388966015\\r\\nalloc 85\\r\\nalloc 53\\r\\nerase 4\\r\\ndefragment\\r\\nalloc 49\\r\\nalloc 88\\r\\n', 'output': ['1\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n2\\r\\n3\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\n']}, {'input': '44 46\\r\\nalloc 28\\r\\nalloc 36\\r\\ndefragment\\r\\nerase -937404236\\r\\nalloc 71\\r\\ndefragment\\r\\nalloc 81\\r\\nalloc 51\\r\\nerase 3\\r\\ndefragment\\r\\nalloc 48\\r\\nerase 1\\r\\ndefragment\\r\\nalloc 36\\r\\ndefragment\\r\\ndefragment\\r\\nerase 1\\r\\ndefragment\\r\\ndefragment\\r\\nerase -1173350787\\r\\nalloc 94\\r\\nerase 5\\r\\ndefragment\\r\\nerase 9\\r\\nalloc 98\\r\\nerase 7\\r\\ndefragment\\r\\nerase 5\\r\\nerase 1\\r\\ndefragment\\r\\nerase 2\\r\\ndefragment\\r\\nerase 4\\r\\ndefragment\\r\\nerase 9\\r\\nalloc 8\\r\\ndefragment\\r\\nerase 9\\r\\ndefragment\\r\\ndefragment\\r\\ndefragment\\r\\nerase 1\\r\\nalloc 70\\r\\nerase 9\\r\\n', 'output': ['1\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nNULL\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\n2\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n3\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n']}, {'input': '26 25\\r\\nalloc 25\\r\\nerase 1\\r\\nalloc 24\\r\\nerase 2\\r\\nalloc 23\\r\\nerase 3\\r\\nalloc 24\\r\\nerase 4\\r\\nalloc 24\\r\\nerase 5\\r\\nalloc 21\\r\\nerase 6\\r\\nalloc 24\\r\\nerase 7\\r\\nalloc 25\\r\\nerase 8\\r\\nalloc 25\\r\\nerase 9\\r\\nalloc 24\\r\\nerase 10\\r\\nalloc 25\\r\\nerase 11\\r\\nalloc 25\\r\\nerase 12\\r\\nalloc 25\\r\\nerase 13\\r\\n', 'output': ['1\\r\\n2\\r\\n3\\r\\n4\\r\\n5\\r\\n6\\r\\n7\\r\\n8\\r\\n9\\r\\n10\\r\\n11\\r\\n12\\r\\n13\\r\\n']}, {'input': '22 9\\r\\nalloc 9\\r\\nerase 1\\r\\nalloc 9\\r\\nerase 2\\r\\nalloc 9\\r\\nerase 3\\r\\nalloc 9\\r\\nerase 4\\r\\nalloc 9\\r\\nerase 5\\r\\nalloc 9\\r\\nerase 6\\r\\nalloc 9\\r\\nerase 7\\r\\nalloc 9\\r\\nerase 8\\r\\nalloc 9\\r\\nerase 9\\r\\nalloc 9\\r\\nerase 10\\r\\nalloc 9\\r\\nerase 11\\r\\n', 'output': ['1\\r\\n2\\r\\n3\\r\\n4\\r\\n5\\r\\n6\\r\\n7\\r\\n8\\r\\n9\\r\\n10\\r\\n11\\r\\n']}, {'input': '7 6\\r\\nalloc 1\\r\\nalloc 2\\r\\nalloc 3\\r\\nerase 1\\r\\ndefragment\\r\\nerase 3\\r\\nalloc 4\\r\\n', 'output': ['1\\r\\n2\\r\\n3\\r\\n4\\r\\n']}, {'input': '3 1\\r\\nerase -1\\r\\nerase 0\\r\\nerase -2147483648\\r\\n', 'output': ['ILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n']}, {'input': '7 100\\r\\nalloc 100\\r\\nerase 2147483647\\r\\nerase 1\\r\\nalloc 50\\r\\nalloc 50\\r\\nerase 3\\r\\nerase -2147483648\\r\\n', 'output': ['1\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n2\\r\\n3\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n']}, {'input': '12 10\\r\\nalloc 6\\r\\nalloc 2\\r\\nerase 1\\r\\nalloc 4\\r\\nalloc 2\\r\\nerase 3\\r\\nalloc 2\\r\\nalloc 3\\r\\nalloc 1\\r\\nalloc 1\\r\\nalloc 1\\r\\nalloc 1\\r\\n', 'output': ['1\\r\\n2\\r\\n3\\r\\n4\\r\\n5\\r\\nNULL\\r\\n6\\r\\n7\\r\\n8\\r\\n9\\r\\n']}, {'input': '8 50\\r\\nalloc 51\\r\\ndefragment\\r\\nalloc 100\\r\\ndefragment\\r\\nerase 1\\r\\nalloc 50\\r\\ndefragment\\r\\nalloc 50\\r\\n', 'output': ['NULL\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n1\\r\\nNULL\\r\\n']}, {'input': '10 10\\r\\nalloc 10\\r\\nerase -1\\r\\nerase 1\\r\\nalloc 5\\r\\nerase -1\\r\\nalloc 5\\r\\nerase 0\\r\\nalloc 5\\r\\nerase 0\\r\\nalloc 5\\r\\n', 'output': ['1\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n2\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n3\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\nNULL\\r\\n']}, {'input': '16 10\\r\\nalloc 10\\r\\ndefragment\\r\\ndefragment\\r\\ndefragment\\r\\nalloc 10\\r\\nerase 1\\r\\nerase 2\\r\\nalloc 6\\r\\ndefragment\\r\\ndefragment\\r\\nalloc 4\\r\\ndefragment\\r\\ndefragment\\r\\nerase 3\\r\\ndefragment\\r\\nalloc 6\\r\\n', 'output': ['1\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n2\\r\\n3\\r\\nNULL\\r\\n']}, {'input': '16 10\\r\\nalloc 10\\r\\ndefragment\\r\\ndefragment\\r\\ndefragment\\r\\nalloc 10\\r\\nerase 1\\r\\nerase 2\\r\\nalloc 6\\r\\ndefragment\\r\\ndefragment\\r\\nalloc 4\\r\\ndefragment\\r\\ndefragment\\r\\nerase 2\\r\\ndefragment\\r\\nalloc 6\\r\\n', 'output': ['1\\r\\nNULL\\r\\nILLEGAL_ERASE_ARGUMENT\\r\\n2\\r\\n3\\r\\n4\\r\\n']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint t = Integer.parseInt(st.nextToken());\n\t\tint m = Integer.parseInt(st.nextToken());\n\t\tint[] mem = new int[m];\n\t\tint[] free = new int[m];\n\t\tint freeCount = 0;\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tmem[i] = 0;\n\t\t\tfree[i] = 0;\n\t\t}\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\tString op = st.nextToken();\n\t\t\tif (op.equals(\"alloc\")) {\n\t\t\t\tint n = Integer.parseInt(st.nextToken());\n\t\t\t\tint start = -1;\n\t\t\t\tint end = -1;\n\t\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\tif (mem[j] == 0) {\n\t\t\t\t\t\tif (start == -1) {\n\t\t\t\t\t\t\tstart = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tend = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start == -1) {\n\t\t\t\t\tSystem.out.println(\"NULL\");\n\t\t\t\t} else {\n\t\t\t\t\tint count = 0;\n\t\t\t\t\tfor (int j = start; j <= end; j++) {\n\t\t\t\t\t\tif (mem[j] == 0) {\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (count >= n) {\n\t\t\t\t\t\tfor (int j = start; j <= end; j++) {\n\t\t\t\t\t\t\tif (mem[j] == 0) {\n\t\t\t\t\t\t\t\tmem[j] = 1;\n\t\t\t\t\t\t\t\tfree[freeCount] = j;\n\t\t\t\t\t\t\t\tfreeCount++;\n\t\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tSystem.out.println(i + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tSystem.out.println(\"NULL\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (op.equals(\"erase\")) {\n\t\t\t\tint x = Integer.parseInt(st.nextToken());\n\t\t\t\tint start = -1;\n\t\t\t\tint end = -1;\n\t\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\tif (mem[j] == 1) {\n\t\t\t\t\t\tif (start == -1) {\n\t\t\t\t\t\t\tstart = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tend = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start == -1) {\n\t\t\t\t\tSystem.out.println(\"ILLEGAL_ERASE_ARGUMENT\");\n\t\t\t\t} else {\n\t\t\t\t\tint count = 0;\n\t\t\t\t\tfor (int j = start; j <= end; j++) {\n\t\t\t\t\t\tif (mem[j] == 1) {\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (count == x) {\n\t\t\t\t\t\tfor (int j = start; j <= end; j++) {\n\t\t\t\t\t\t\tif (mem[j] == 1) {\n\t\t\t\t\t\t\t\tmem[j] = 0;\n\t\t\t\t\t\t\t\tx--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tSystem.out.println(\"ILLEGAL_ERASE_ARGUMENT\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\tif (mem[j] == 0) {\n\t\t\t\t\t\tmem[j] = 1;\n\t\t\t\t\t\tfree[freeCount] = j;\n\t\t\t\t\t\tfreeCount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"}
{"src_uid": "97999cd7c6de79a4e39f56a41ff59e7a", "id": 111, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1800, "testcases": "[{'input': '800 600 4 3\\r\\n', 'output': ['800 600']}, {'input': '1920 1200 16 9\\r\\n', 'output': ['1920 1080']}, {'input': '1 1 1 2\\r\\n', 'output': ['0 0']}, {'input': '1002105126 227379125 179460772 1295256518\\r\\n', 'output': ['0 0']}, {'input': '625166755 843062051 1463070160 1958300154\\r\\n', 'output': ['0 0']}, {'input': '248228385 1458744978 824699604 1589655888\\r\\n', 'output': ['206174901 397413972']}, {'input': '186329049 1221011622 90104472 1769702163\\r\\n', 'output': ['60069648 1179801442']}, {'input': '511020182 242192314 394753578 198572007\\r\\n', 'output': ['394753578 198572007']}, {'input': '134081812 857875240 82707261 667398699\\r\\n', 'output': ['105411215 850606185']}, {'input': '721746595 799202881 143676564 380427290\\r\\n', 'output': ['287353128 760854580']}, {'input': '912724694 1268739154 440710604 387545692\\r\\n', 'output': ['881421208 775091384']}, {'input': '1103702793 1095784840 788679477 432619528\\r\\n', 'output': ['788679477 432619528']}, {'input': '548893795 861438648 131329677 177735812\\r\\n', 'output': ['525318708 710943248']}, {'input': '652586118 1793536161 127888702 397268645\\r\\n', 'output': ['511554808 1589074580']}, {'input': '756278440 578150025 96644319 26752094\\r\\n', 'output': ['676510233 187264658']}, {'input': '859970763 1510247537 37524734 97452508\\r\\n', 'output': ['562871010 1461787620']}, {'input': '547278097 1977241684 51768282 183174370\\r\\n', 'output': ['543566961 1923330885']}, {'input': '62256611 453071697 240966 206678\\r\\n', 'output': ['62169228 53322924']}, {'input': '1979767797 878430446 5812753 3794880\\r\\n', 'output': ['1342745943 876617280']}, {'input': '1143276347 1875662241 178868040 116042960\\r\\n', 'output': ['1140283755 739773870']}, {'input': '435954880 1740366589 19415065 185502270\\r\\n', 'output': ['182099920 1739883360']}, {'input': '664035593 983601098 4966148 2852768\\r\\n', 'output': ['664032908 381448928']}, {'input': '1461963719 350925487 135888396 83344296\\r\\n', 'output': ['572153868 350918568']}, {'input': '754199095 348965411 161206703 67014029\\r\\n', 'output': ['754119492 313489356']}, {'input': '166102153 494841162 14166516 76948872\\r\\n', 'output': ['91096406 494812252']}, {'input': '1243276346 1975662240 38441120 291740200\\r\\n', 'output': ['259477560 1969246350']}, {'input': '535954879 1840366588 26278959 73433046\\r\\n', 'output': ['535849118 1497358892']}, {'input': '764035592 1083601097 1192390 7267738\\r\\n', 'output': ['177777265 1083570463']}, {'input': '1561963718 450925486 475523188 136236856\\r\\n', 'output': ['1561914768 447486816']}, {'input': '854199094 448965410 364102983 125971431\\r\\n', 'output': ['853687785 295356745']}, {'input': '266102152 594841161 15854566 13392106\\r\\n', 'output': ['266043102 224722482']}, {'input': '1 1 2 1\\r\\n', 'output': ['0 0']}, {'input': '2000000000 2000000000 1 1999999999\\r\\n', 'output': ['1 1999999999']}, {'input': '2000000000 2000000000 1999999999 1\\r\\n', 'output': ['1999999999 1']}, {'input': '2000000000 2000000000 2 1999999999\\r\\n', 'output': ['2 1999999999']}, {'input': '1000000000 1000000000 999999999 2\\r\\n', 'output': ['999999999 2']}, {'input': '2000000000 2000000000 1999999999 2\\r\\n', 'output': ['1999999999 2']}, {'input': '2000000000 2000000000 1999999999 1999999998\\r\\n', 'output': ['1999999999 1999999998']}, {'input': '2000000000 2000000000 1999999998 1999999999\\r\\n', 'output': ['1999999998 1999999999']}, {'input': '1002105126 227379125 101440715 179460772\\r\\n', 'output': ['101440715 179460772']}, {'input': '18773663 74427904 186329049 1221011622\\r\\n', 'output': ['0 0']}, {'input': '912724694 21235685 356014460 15587143\\r\\n', 'output': ['356014460 15587143']}]", "source_code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tlong a = Long.parseLong(st.nextToken());\n\t\tlong b = Long.parseLong(st.nextToken());\n\t\tlong x = Long.parseLong(st.nextToken());\n\t\tlong y = Long.parseLong(st.nextToken());\n\t\tlong g = gcd(x, y);\n\t\tx /= g;\n\t\ty /= g;\n\t\tlong a1 = a * y;\n\t\tlong b1 = b * x;\n\t\tif (a1 % x == 0 && b1 % y == 0) {\n\t\t\tSystem.out.println(a1 / x + \" \" + b1 / y);\n\t\t} else {\n\t\t\tSystem.out.println(\"0 0\");\n\t\t}\n\t}\n\n\tstatic long gcd(long a, long b) {\n\t\tif (b == 0)\n\t\t\treturn a;\n\t\treturn gcd(b, a % b);\n\t}\n}"}
{"src_uid": "4de8b72f9ce12554cae8b6a83b3f023e", "id": 112, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1800, "testcases": "[{'input': '2 4\\r\\nABDC\\r\\nABDC\\r\\n', 'output': ['3\\r\\n2 1\\r\\n']}, {'input': '2 6\\r\\nABCCBA\\r\\nABCCBA\\r\\n', 'output': ['1\\r\\n2 6\\r\\n']}, {'input': '2 2\\r\\nAB\\r\\nCD\\r\\n', 'output': ['4\\r\\n1 1\\r\\n']}, {'input': '4 6\\r\\nABABAC\\r\\nBABABC\\r\\nABABAC\\r\\nCCCCCA\\r\\n', 'output': ['4\\r\\n2 3\\r\\n']}, {'input': '1 12\\r\\nABAAADCAAABX\\r\\n', 'output': ['4\\r\\n1 3\\r\\n']}, {'input': '4 6\\r\\nABCDEF\\r\\nGHIJKL\\r\\nMNOPQR\\r\\nSTUVWX\\r\\n', 'output': ['12\\r\\n1 1\\r\\n']}, {'input': '5 5\\r\\nABAAA\\r\\nBBBAA\\r\\nABABA\\r\\nBBABB\\r\\nBAAAB\\r\\n', 'output': ['3\\r\\n1 5\\r\\n']}, {'input': '5 6\\r\\nBBBABB\\r\\nAAAABB\\r\\nABABAA\\r\\nABBBAA\\r\\nBABBBA\\r\\n', 'output': ['4\\r\\n1 6\\r\\n']}, {'input': '7 7\\r\\nBBAAABB\\r\\nAABBBBA\\r\\nAABABBA\\r\\nAABABAB\\r\\nAABBBAA\\r\\nBAAAABA\\r\\nBBABBBB\\r\\n', 'output': ['3\\r\\n1 7\\r\\n']}, {'input': '8 7\\r\\nBABABBB\\r\\nABABABA\\r\\nAABBABA\\r\\nABBABAA\\r\\nBABAAAB\\r\\nAABBBBA\\r\\nABBBBAB\\r\\nBBAAABA\\r\\n', 'output': ['5\\r\\n1 7\\r\\n']}, {'input': '8 9\\r\\nBAABABAAB\\r\\nBAABAAAAB\\r\\nBBBBBAABB\\r\\nAAAAAAAAB\\r\\nBABBABBAA\\r\\nBBABABBBB\\r\\nBABABBAAA\\r\\nAABAABBBB\\r\\n', 'output': ['7\\r\\n8 1\\r\\n']}, {'input': '10 10\\r\\nABBAABAABB\\r\\nABAAAAAABA\\r\\nBAABABABAA\\r\\nBAAAAAAAAB\\r\\nBABABBBAAB\\r\\nABBABBBBBA\\r\\nAABABAAAAA\\r\\nBAAAABAABA\\r\\nABABAABBAA\\r\\nBBABBABABB\\r\\n', 'output': ['9\\r\\n1 10\\r\\n']}, {'input': '10 11\\r\\nABBBAABABBB\\r\\nBBAABABBAAB\\r\\nAABBBBBAAAA\\r\\nBBABABAAABA\\r\\nAABABBBAABB\\r\\nAAABABAABAB\\r\\nBBABBBABBBB\\r\\nBBABABABBAA\\r\\nBBABABAAABB\\r\\nBABAABAABAB\\r\\n', 'output': ['5\\r\\n10 1\\r\\n']}, {'input': '12 11\\r\\nBBAAAABBAAB\\r\\nBBABBABBABB\\r\\nBAABABBABBA\\r\\nBABBBAAAABA\\r\\nABBAABBBBBA\\r\\nABBABBABABB\\r\\nAAABBBABBBB\\r\\nBAABAAABAAA\\r\\nAAAABBBBABA\\r\\nAAABAAABBBB\\r\\nBAAAAABABAB\\r\\nABBBBABABBB\\r\\n', 'output': ['7\\r\\n1 11\\r\\n']}, {'input': '12 13\\r\\nBBABABAAAAABA\\r\\nABAAAAAAAABBA\\r\\nABBBABAAAAABA\\r\\nBBBAABABBABBB\\r\\nABABAAABABABB\\r\\nABBAABAABBAAA\\r\\nAABABBAAABBAB\\r\\nABBBBBABBAABA\\r\\nBBBBBABBABBAA\\r\\nAAAAAAABBBAAB\\r\\nBAABBBAABAAAA\\r\\nBBBBBBABABABA\\r\\n', 'output': ['7\\r\\n12 1\\r\\n']}, {'input': '14 12\\r\\nBBAAABBBAAAB\\r\\nBBABAAAAABAA\\r\\nAABBABBBABBA\\r\\nBABAABAABBBB\\r\\nBBBABBBBABAA\\r\\nABBAABBAAABA\\r\\nABAAAAABBBAB\\r\\nBBAABBABBBAA\\r\\nBAABABAAABAB\\r\\nAAABBBABBABA\\r\\nBABBBBAABBBA\\r\\nAAAAABABBAAB\\r\\nBABBBABBBBBA\\r\\nBAAAABAABAAA\\r\\n', 'output': ['14\\r\\n1 12\\r\\n']}, {'input': '14 10\\r\\nABBAAABBAA\\r\\nBBBBBABBAA\\r\\nBABABBABAB\\r\\nAAABABBAAB\\r\\nBBABABBBAB\\r\\nBBABBABABB\\r\\nAABBBBABAA\\r\\nABBBAAAABB\\r\\nABBABAABAA\\r\\nABABABABBA\\r\\nABAABBBAAB\\r\\nAAAAAAAAAA\\r\\nABABBAABAA\\r\\nBABAABABBB\\r\\n', 'output': ['10\\r\\n1 10\\r\\n']}, {'input': '16 15\\r\\nABBBBAAABABBABB\\r\\nABBBAAABBABBBBB\\r\\nBABABAABBBABABB\\r\\nAAABBBBBABBABBB\\r\\nBAABAABAABAABBA\\r\\nABBBBAAAAAAAABB\\r\\nBAABBBABABAAAAB\\r\\nAAAABBAABBAABAA\\r\\nABBABABAAABABBB\\r\\nAAABBBABAABABAA\\r\\nBAABABBAAABBAAA\\r\\nAAAAAAABABBBAAA\\r\\nBABBAABBABAAAAB\\r\\nABABAAABBBBBAAB\\r\\nBBABBAABABAABBB\\r\\nBAAAABBBABABBBA\\r\\n', 'output': ['12\\r\\n4 3\\r\\n']}, {'input': '16 16\\r\\nABBABBABBAABBBAB\\r\\nBABABBAABAABBAAA\\r\\nBAAABBAABAABBBAA\\r\\nAABAAAABAAAABBBA\\r\\nBAAAABAABBBABBAA\\r\\nAABBABABABAABBBA\\r\\nBABBBABAAAAABABB\\r\\nBABBBBBBBBABBBAB\\r\\nBAAAABBBABAABBBA\\r\\nBABBBABBAABABBAA\\r\\nBBBBBBAABBBABBBA\\r\\nBABAAAABAABAABBB\\r\\nAAAAABBAAABABAAA\\r\\nBABBABABABAAABAB\\r\\nBAAAAAAAABBABAAA\\r\\nBAAAAABABBBBAAAA\\r\\n', 'output': ['15\\r\\n1 16\\r\\n']}, {'input': '18 18\\r\\nBBBBBBBABABBBABABA\\r\\nBAAABAAABBBABABBBB\\r\\nBABBAAABAAABAAABAA\\r\\nAABBABBBABBBBBAAAB\\r\\nBBBAAAAABBABBAAAAA\\r\\nAABBAABABABBBABABA\\r\\nBAABBAAAABABAABABB\\r\\nBABBABBBAAAABAABBA\\r\\nBBBBAABAAABAAABBBA\\r\\nABABBAAABBBBBABABA\\r\\nABABAABBBBBABBBBBB\\r\\nABAAABBABBABAAAABA\\r\\nBABAAABABABBBABBBB\\r\\nBBBBABBBABBBBBBBBA\\r\\nBAAABAABABABBBBAAB\\r\\nBABBAABABBABAABBBB\\r\\nBAABABAAAABBABBAAA\\r\\nBAAABBBAABABBABBAB\\r\\n', 'output': ['23\\r\\n2 6\\r\\n']}, {'input': '17 17\\r\\nBBAABAABBBBBAABBB\\r\\nBBABABBBBABAAABBB\\r\\nAAAABAAAABABABBAA\\r\\nBBABAAABBABBAAABA\\r\\nAAABBBBBAABABBBAB\\r\\nAABBBBBABABABABBB\\r\\nBAABAAABAAABBAABB\\r\\nBBAAAAAABABABBAAB\\r\\nAAAAABAABBAAAABAA\\r\\nBABAABABABABABBBB\\r\\nBAABABBAAABBAAABB\\r\\nABBAAABBBBAAAABAB\\r\\nBBABAABAAAAAABBBB\\r\\nAAABBABBAAAAABBBB\\r\\nAABAABBAABBABAABB\\r\\nABABAAABBABAAABAB\\r\\nBBABABBBAAAAAAABA\\r\\n', 'output': ['3\\r\\n1 17\\r\\n']}, {'input': '20 20\\r\\nABBBAAABABAAAAABBABB\\r\\nBABABBAABAABBAAABABB\\r\\nBABBBAABAABBABBBBABA\\r\\nBAAABBAAABABBABBAAAA\\r\\nABBAABAABBBBAAABBBAA\\r\\nBAAAAAAAABABBAAAAABB\\r\\nAAAAAAABABBBBBAABAAB\\r\\nABBBBABAABBAAAAABAAA\\r\\nBAAAAABBABAAAAABAAAB\\r\\nABABAABABBBABBAABBAA\\r\\nBAAABBBAAAABBBBBABAA\\r\\nAAABBABABAABBABAABAB\\r\\nABBABABABABAAABABABA\\r\\nBAABAAAAABBAABBBAAAB\\r\\nABAAABBABAABBBABAABA\\r\\nBAABBBBBABBBABBBABAB\\r\\nBABBABABBBBBBBBABAAA\\r\\nABAAABAAABAAABABABAA\\r\\nBAABBBBAABBAAAAAABBA\\r\\nABAABBABAAABBABABAAA\\r\\n', 'output': ['23\\r\\n1 10\\r\\n']}, {'input': '1 1\\r\\nC\\r\\n', 'output': ['1\\r\\n1 1\\r\\n']}, {'input': '2 2\\r\\nCC\\r\\nBB\\r\\n', 'output': ['2\\r\\n1 2\\r\\n']}, {'input': '3 3\\r\\nACA\\r\\nCCA\\r\\nACB\\r\\n', 'output': ['3\\r\\n1 3\\r\\n']}, {'input': '4 4\\r\\nACAC\\r\\nCBCC\\r\\nABBC\\r\\nCCAC\\r\\n', 'output': ['5\\r\\n1 4\\r\\n']}, {'input': '5 5\\r\\nBBCAB\\r\\nBCBAC\\r\\nCAAAB\\r\\nACBBA\\r\\nCAACB\\r\\n', 'output': ['3\\r\\n1 5\\r\\n']}, {'input': '14 16\\r\\nCBCCCABCBBBAAACC\\r\\nAABAACBACBCBACCA\\r\\nABBBABAACCACCCCC\\r\\nBBACACACCCCBBBAC\\r\\nBBCAABACBAACBCAA\\r\\nAAACCACBBCABABCB\\r\\nABCBCAAAAACBABBA\\r\\nAAABBBCCBAACBBCA\\r\\nBBAACBABBBCCBAAC\\r\\nBAABCCBAAABAACAC\\r\\nABBBBCBAACACCBCB\\r\\nBCABACBBBCAACACC\\r\\nACCCCABCCCBBCAAC\\r\\nBCBBCCCBCBCCACAA\\r\\n', 'output': ['15\\r\\n7 1\\r\\n']}, {'input': '16 16\\r\\nACABBCCBAABCCCCB\\r\\nAABCACCAAACACABB\\r\\nBCCCAABBAACBACAA\\r\\nBCACAABBBCAAAABA\\r\\nACCBABCCACABBCCC\\r\\nCCAAACACACBCABCA\\r\\nBCAACBBBCACBBCAB\\r\\nBABBCBBBCCCBAACC\\r\\nBBBBBABACBABBCBA\\r\\nABAACBACCACBBABA\\r\\nABAACBACCBCBCCBB\\r\\nBCACCCAABCBBCBCB\\r\\nBBBCCCBCCBCBACCA\\r\\nAABCBBBBACCACCBB\\r\\nBCABCCCBCBBBCBCC\\r\\nACCCCCCBBBAABACC\\r\\n', 'output': ['17\\r\\n4 2\\r\\n']}, {'input': '17 17\\r\\nBCBAAABAABCCCAAAC\\r\\nBBAABCABBAACCACBB\\r\\nABCCBAABBCCABBBAB\\r\\nAACCBBACCAAACCACA\\r\\nABBACBAAAABBABCAA\\r\\nACBACCCABAABBCABB\\r\\nCBCCCBCACBABCAAAA\\r\\nAAABACACABABCCCBC\\r\\nCABABBABBBABBBCAB\\r\\nBCBCBAAACCCACACBA\\r\\nBBACABACAAABCCBBC\\r\\nABAABBABCCAABBCCA\\r\\nAABBACBCBCCBAACBB\\r\\nBBABCBBCCCBCACBCB\\r\\nBABCBBCCABCABBAAA\\r\\nAABAABBBBAACAABCC\\r\\nBACCCBBCCABBBACBB\\r\\n', 'output': ['3\\r\\n1 17\\r\\n']}, {'input': '19 19\\r\\nACCACBCABACABCACCAA\\r\\nBCACAAAACCACCCCBCCB\\r\\nCBACBBCBCBCABCABACA\\r\\nAACCAABBBCAAABACAAC\\r\\nACACCCBBBACACCAAABA\\r\\nAACAABCACCBCACCABBA\\r\\nAABBCCABACCACABACAA\\r\\nACBCCACBACCACABCABC\\r\\nAACAABCAACCBBAACBCA\\r\\nAAACACBAABCBACCAAAB\\r\\nAABACABBABCACAACBCA\\r\\nBABAAABCACBABACBBBC\\r\\nBAABCAAABCAABBCCAAC\\r\\nBCABCCBCCBCBABCBCCA\\r\\nBACACBACBCABBCBCABB\\r\\nABCACCBBBBCBBCABAAC\\r\\nBBBBCCBCBACAACBCBCA\\r\\nAAABBBBCACCACCAAACC\\r\\nCCCCCBAABAAAACCCBBA\\r\\n', 'output': ['3\\r\\n1 19\\r\\n']}, {'input': '20 18\\r\\nAABCAACCBBCBABBBBB\\r\\nBBCBAACCBCAACBBCCB\\r\\nACCBABABACBBACBBAB\\r\\nACBBBCBAAACAAAAABB\\r\\nBCBABABAACCCABBBCC\\r\\nBAAAAAACACABBCCCAC\\r\\nCBACCBCBACACAAACBC\\r\\nCBACAACBCBCAACACCA\\r\\nCCCBACCBACACCCBCCB\\r\\nCACABBBBBBCCBACCBA\\r\\nCCBCACABCBACABBCCB\\r\\nAACACCCCCABAABCACC\\r\\nCBBACCBBCBCBBCCAAB\\r\\nCABBABACCABACAABAB\\r\\nBBBABBCBCBACBCCABA\\r\\nBCCAACBCBCAAAABACA\\r\\nAAABACBBCCCACACBAC\\r\\nBABAAAACCBACBACAAA\\r\\nAABBABCBBBACAACBAB\\r\\nBBABBAABACBAABCCBB\\r\\n', 'output': ['27\\r\\n4 2\\r\\n']}, {'input': '1 1\\r\\nZ\\r\\n', 'output': ['1\\r\\n1 1\\r\\n']}, {'input': '2 2\\r\\nML\\r\\nWQ\\r\\n', 'output': ['4\\r\\n1 1\\r\\n']}, {'input': '3 3\\r\\nBXP\\r\\nUJF\\r\\nAQT\\r\\n', 'output': ['4\\r\\n1 1\\r\\n']}, {'input': '4 3\\r\\nOKJ\\r\\nXTV\\r\\nDVW\\r\\nHMK\\r\\n', 'output': ['5\\r\\n2 1\\r\\n']}, {'input': '5 5\\r\\nDZEZF\\r\\nOHZZC\\r\\nCNDOX\\r\\nNVYDP\\r\\nUCIAX\\r\\n', 'output': ['3\\r\\n1 5\\r\\n']}, {'input': '6 6\\r\\nQLXBOE\\r\\nKEEYTR\\r\\nZLPMSP\\r\\nWOKAHN\\r\\nLYXBXU\\r\\nSZOEZV\\r\\n', 'output': ['14\\r\\n2 1\\r\\n']}, {'input': '6 7\\r\\nGYSGYUL\\r\\nKGTJUVI\\r\\nFNRHOND\\r\\nZGZAFYZ\\r\\nQVCRZCA\\r\\nJCCXKGV\\r\\n', 'output': ['7\\r\\n2 1\\r\\n']}, {'input': '8 8\\r\\nTNMIIMOP\\r\\nJOAXSHVN\\r\\nQYHMVXGM\\r\\nQOXAIUMI\\r\\nLAAXNKCH\\r\\nORWESZUV\\r\\nPMIXHLEA\\r\\nAENPGVYK\\r\\n', 'output': ['13\\r\\n1 4\\r\\n']}, {'input': '9 9\\r\\nIZHKRCRTM\\r\\nLQBOENMNQ\\r\\nYLNVFBFUY\\r\\nACTTYWABL\\r\\nYSEGWNQHC\\r\\nTZASWPPAG\\r\\nLLZTKFPMV\\r\\nGXBETPPPN\\r\\nUCPEFNJKN\\r\\n', 'output': ['8\\r\\n1 3\\r\\n']}, {'input': '9 10\\r\\nXHPCDAAFPZ\\r\\nJRZCDTQBYP\\r\\nZBTAMDPIFY\\r\\nXBKTMXNIWM\\r\\nDAIONPEBYF\\r\\nAFHBCBDTKB\\r\\nKRVEBSUXRM\\r\\nWGMEZTWDBX\\r\\nNOJUCDZPZY\\r\\n', 'output': ['10\\r\\n3 1\\r\\n']}, {'input': '12 13\\r\\nTHSGJEPTDFEIJ\\r\\nOWPJGXSXJRYGD\\r\\nVYENWXFWSOSMX\\r\\nFZDFXFPWEIYYV\\r\\nOEODFOGQWJEEU\\r\\nSQRNSBTAMLQRU\\r\\nLXGZERSWTJWQK\\r\\nLGRJJMDTZVZWJ\\r\\nDWVBTSZKFUAHT\\r\\nHSSZHXAWVWMHB\\r\\nJZOCNFUHTHQYV\\r\\nTUHDMTZAQVWDL\\r\\n', 'output': ['10\\r\\n3 1\\r\\n']}, {'input': '14 13\\r\\nBGBALYLHQYMFM\\r\\nRLFOZFDFMRFEN\\r\\nGDWROOMXUVBOW\\r\\nDPXWRDPCEFMRQ\\r\\nJOSEGKGMHGHFC\\r\\nJHXUBTPOZOYGJ\\r\\nFHUUMHWSQRNEP\\r\\nVGWYMTMWHWGIL\\r\\nVMWDTBDJGEVZI\\r\\nLEJSIHTQKYDXY\\r\\nOLUOIWECMZVAI\\r\\nVDXSGRPMCCJEM\\r\\nMYWMDDAQAPBSG\\r\\nXQWPFRAPVEOYO\\r\\n', 'output': ['6\\r\\n7 1\\r\\n']}, {'input': '14 15\\r\\nJFLSOQHVDRTCPWZ\\r\\nWSROLOOQOCWPJNX\\r\\nEEUZVBLQXBFQKNA\\r\\nQIGZDIMDXVCHJFJ\\r\\nUDJGIZWDBMMMBJR\\r\\nEWXAQHPRYBQOYDT\\r\\nUDEAPOBVZOXNVMK\\r\\nAYEVKFIKNRUVRQC\\r\\nNLTLJBXWMUQXAZD\\r\\nKOXESBBUYLMIDOI\\r\\nZOJWEOJFCYTILHE\\r\\nRQDNTBZZXPKNCEN\\r\\nSYGFASAQUSMYYRP\\r\\nUOYCFYUDACJDTAD\\r\\n', 'output': ['13\\r\\n1 5\\r\\n']}, {'input': '16 15\\r\\nPFUMRKDISIBBVYP\\r\\nMZKXWWSQXADAPEB\\r\\nVTBYXGWQYZTHBHY\\r\\nONGURZKWHZDKIDF\\r\\nGCMHQQNJJXHHPVU\\r\\nNLMUXXKZOFNMFTG\\r\\nANDDDPHEDVWVHLC\\r\\nOYGXUHIMYPNIXCT\\r\\nILCGDQZNCSTIILX\\r\\nZVSYMJBHAUEXZMY\\r\\nMYOKFPJKKJLKVWI\\r\\nUEMUOOAJSNTOLEN\\r\\nLKIROZUNWRZBMZP\\r\\nYYWCXLGHLZQVPOB\\r\\nFMHPKABCBAAYCFA\\r\\nNRGFEWPLKNORSZR\\r\\n', 'output': ['18\\r\\n1 3\\r\\n']}, {'input': '14 17\\r\\nXGFETCAWEBHYYDECE\\r\\nCGFEUQEYMLSVHNKJA\\r\\nZMGSXZJASBUPTHRFQ\\r\\nGQREDKHDBTZPGWHEO\\r\\nQGACDHZVBAOGLHHEL\\r\\nLKLKVFVDHSRQNEDXC\\r\\nVNREYHZDJHPJKHXDO\\r\\nKBOMZYHZEUOYUOXSQ\\r\\nFNQGOBVDBTMUJPAKU\\r\\nXFPGQQXBPELKWSXCJ\\r\\nABUKLBPTFOGUJFDEQ\\r\\nKXPJEZJQCHTENYSKY\\r\\nXXOKEXESEVLQMFDZG\\r\\nVPGUBSJLGBWZWAMFZ\\r\\n', 'output': ['6\\r\\n7 1\\r\\n']}, {'input': '16 17\\r\\nFFOYWWWJRUPVBGSSJ\\r\\nVPOMWQMWUWYMMDAPB\\r\\nARQUYXZTHVSQZHMVJ\\r\\nCJAGELECYEXSHEYTU\\r\\nXRSZPRCBQPJQACNWR\\r\\nJISALKDCKJUWWHMYH\\r\\nGMISALZMLGRRGALJA\\r\\nCWPYTQYBXKLBGWKNF\\r\\nMJJYWBIHJLARHFNWB\\r\\nKEREXXISTPANXGGJG\\r\\nLECEJLPAFOZHLRTJM\\r\\nHBOWFNSQFRRGEJFMJ\\r\\nVEGIRVEXACMJVKFYN\\r\\nSCGOPQKUHEDNIPIRE\\r\\nLENRPPYJBEVDTOPOY\\r\\nFHJOESUHLIJRFPVBK\\r\\n', 'output': ['8\\r\\n4 1\\r\\n']}, {'input': '18 19\\r\\nLEXQWPUXGOWSELHIQPY\\r\\nZUYPTUDHEEQVRWBCXBU\\r\\nZUPMYQQQFHGKZZDMLFM\\r\\nCASSUVIKQKCEALUDDFK\\r\\nFDBZOXULVGFARYPNAQY\\r\\nWEFLTZOSOAGAMBWNGVC\\r\\nEVAPNTSSIMKNBOAHFSC\\r\\nUHTWEBRCEUJSARNEWYI\\r\\nGXGSDCDUIWYQRZUPQBZ\\r\\nFMYJUOHENURMDINJGCN\\r\\nHIBATJCOGWWRQWTLXDH\\r\\nRDDXJNZHQGUWPNGIDRO\\r\\nAJGHDUCGGLPYYDYSFRS\\r\\nAZGBVLJYYZWSQGBFJVU\\r\\nQJJRSHZFOECHGRGALML\\r\\nJKDMLPREFTISSSAJKJN\\r\\nGRHGVYSVQLYKCIMBIKA\\r\\nMSHRBZJJLDHBCAWAJBN\\r\\n', 'output': ['10\\r\\n3 1\\r\\n']}, {'input': '20 18\\r\\nNLBILWYVJJLCACSMUA\\r\\nAAMAWVGEZDTWUUZNMM\\r\\nWWNOTPPFXJSWWSPPRB\\r\\nYUJXZSHHNFGKXIXEJN\\r\\nLTKNJOJALEQURSYVBI\\r\\nSVXHFTUYWTLBXWFDXD\\r\\nLQUEBPXELRNAXFIKFT\\r\\nZGZEPWGVLVNMQVRMJM\\r\\nWTMIPWRNQCWKZACSKQ\\r\\nYGUREEGHTVMICOCUHE\\r\\nUNIJGNPINIFWCIHGIQ\\r\\nIRGJEHFRUJOHIXRSLF\\r\\nDQVCPHUSKYEHFGWBPS\\r\\nJIIGNJKTRAAPRBOGMQ\\r\\nHFNGDLVBUVECUMQDMT\\r\\nGEGCSOPRXQAEMDQAYO\\r\\nOHSBTADOWBVKZINKXC\\r\\nIIPWCAZSNDFVBMTGMI\\r\\nOZZTLUOFRYDNTPIAVA\\r\\nTFBGPAMJPIWLEZOKXB\\r\\n', 'output': ['33\\r\\n1 3\\r\\n']}, {'input': '2 4\\r\\nABAA\\r\\nABBB\\r\\n', 'output': ['2\\r\\n1 4\\r\\n']}, {'input': '6 6\\r\\nCCABCA\\r\\nBCBCBC\\r\\nBAAAAA\\r\\nCBBCAA\\r\\nACBBCA\\r\\nCCAABA\\r\\n', 'output': ['10\\r\\n1 6\\r\\n']}, {'input': '16 4\\r\\nBAAC\\r\\nBACA\\r\\nACBC\\r\\nABCC\\r\\nCCAC\\r\\nBBCC\\r\\nCCAB\\r\\nABCC\\r\\nCBCA\\r\\nBCBC\\r\\nBCBC\\r\\nCBBB\\r\\nBBAA\\r\\nBACA\\r\\nABCB\\r\\nAABA\\r\\n', 'output': ['9\\r\\n2 4\\r\\n']}, {'input': '2 14\\r\\nAABACBACBCBBCB\\r\\nBACCBBBCBAABBC\\r\\n', 'output': ['4\\r\\n1 7\\r\\n']}, {'input': '4 8\\r\\nCACABCCA\\r\\nABCBAACA\\r\\nACABBBCC\\r\\nAACCBCBB\\r\\n', 'output': ['8\\r\\n1 4\\r\\n']}, {'input': '12 18\\r\\nCBBCAACABACCACABBC\\r\\nABCAACABAABCBCBCCC\\r\\nBCAACCCBBBABBACBBA\\r\\nACCBCBBBAABACCACCC\\r\\nCAABCCCACACCBACACC\\r\\nBBBCBCACCABCCBCBBB\\r\\nBAABBCACAAAAACCBCB\\r\\nBAABAABACBCABACBCA\\r\\nAABCBCCBCCABACCCAC\\r\\nCCBBBAACCCBCACCCBB\\r\\nCBABACBBBABCBACCCB\\r\\nAABACCCBCCACBCACCB\\r\\n', 'output': ['24\\r\\n4 2\\r\\n']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint a = Integer.parseInt(st.nextToken());\n\t\tint b = Integer.parseInt(st.nextToken());\n\t\tchar[][] c = new char[a][b];\n\t\tfor (int i = 0; i < a; i++) {\n\t\t\tc[i] = br.readLine().toCharArray();\n\t\t}\n\t\tint[][] d = new int[a][b];\n\t\tfor (int i = 0; i < a; i++) {\n\t\t\tfor (int j = 0; j < b; j++) {\n\t\t\t\td[i][j] = c[i][j];\n\t\t\t}\n\t\t}\n\t\tint[][] e = new int[a][b];\n\t\tfor (int i = 0; i < a; i++) {\n\t\t\tfor (int j = 0; j < b; j++) {\n\t\t\t\te[i][j] = c[i][j];\n\t\t\t}\n\t\t}\n\t\tint[][] f = new int[a][b];\n\t\tfor (int i = 0; i < a; i++) {\n\t\t\tfor (int j = 0; j < b; j++) {\n\t\t\t\tf[i][j] = c[i][j];\n\t\t\t}\n\t\t}\n\t\tint[][] g = new int[a][b];\n\t\tfor (int i = 0; i < a; i++) {\n\t\t\tfor (int j = 0; j < b; j++) {\n\t\t\t\tg[i][j] = c[i][j];\n\t\t\t}\n\t\t}\n\t\tint[][] h = new int[a][b];\n\t\tfor (int i = 0; i < a; i++) {\n\t\t\tfor (int j = 0; j < b; j++) {\n\t\t\t\th[i][j] = c[i][j];\n\t\t\t}\n\t\t}\n\t\tint[][] i = new int[a][b];\n\t\tfor (int i"}
{"src_uid": "73291724a4609ddd4cc8a92c77e8496f", "id": 113, "lang_cluster": "java", "lang": "Java 11", "difficulty": 2600, "testcases": "[{'input': '3 3\\r\\nWBW\\r\\nBWB\\r\\nWBW\\r\\n', 'output': ['2\\r\\n']}, {'input': '2 3\\r\\nBBB\\r\\nBWB\\r\\n', 'output': ['1\\r\\n']}, {'input': '9 29\\r\\nBWBBBBBBBBBWBWWBBBWBWBBBWWBWW\\r\\nWBWBBWBBWBWWBWBBBWBWWWBWBBBBB\\r\\nBWBBBBWWBBBWBWBBWWBBWBBBBBBBB\\r\\nBBBWWBBWWBBBWBWBBBWWWWWWBBBBW\\r\\nBBWWWWBBBBBBBBBWBBBBBBBBBBWBW\\r\\nBBBWWBBBBWBBBWWBBBWBBBBWBBWBW\\r\\nBBBBBWBWBBBWWBBWBBBBBBBBBBBBW\\r\\nWWBBBWWBWBWBBBBWBBBBWWWBBBBBB\\r\\nBWWBWBBBBBWBBWBBBBBBBWBWBBBWW\\r\\n', 'output': ['4\\r\\n']}, {'input': '3 5\\r\\nBBBBB\\r\\nBWWBB\\r\\nWWBBB\\r\\n', 'output': ['1\\r\\n']}, {'input': '17 22\\r\\nBBWBBWWWBBWWWBBBBBBWWW\\r\\nWWBWBWWBBWBBBWWBBBBBWW\\r\\nBBBWBWBBWBWBWBWWBWWBBB\\r\\nBWBBBBWBBBWBWBBBBBWBWW\\r\\nBBWWWWWBBBBBWBWBBBBBBB\\r\\nBBBWBBWWWWBBWWBWBWWBBW\\r\\nBBBWWWWWWWBWWWBBBWWWWW\\r\\nBBBBWBBBWBWBBWBBBWWWBB\\r\\nBWWWWBBBWWWBBBBBBWBWWW\\r\\nBBBBWBWBWBWBBBWWBWBBBB\\r\\nBBWBWWBWWWBWBWWBWBBBBW\\r\\nWWBWWBBBBWBWBWBWWBBBBB\\r\\nWWWWBWBBBWBBBWWBBWWBBW\\r\\nBBBBBWWBBBBWWWWBWBBBWW\\r\\nBBBBBWBBWBWBBWBWWBBBBW\\r\\nWWBBBWBWBBWWWBBBWWBBBW\\r\\nWWBWBBBBWBBBWBBBWBBBBB\\r\\n', 'output': ['4\\r\\n']}, {'input': '23 12\\r\\nBWWWBBWWWWWW\\r\\nWWWWBWWWBWWW\\r\\nBWBWWWWBBWWB\\r\\nWBWWWWBWWBWW\\r\\nBWWWWWWWWWWW\\r\\nWWWWWWBWWWWW\\r\\nWWWWWBWBWWBB\\r\\nWBBWWWWWWWWW\\r\\nWWBWBBWWWBBW\\r\\nWWWWWWWWWWWW\\r\\nWWWWWWWWWWWW\\r\\nWWWWWWBWWWWW\\r\\nBWWWWBBWBWWB\\r\\nBWBWWWWWWBWW\\r\\nWWWWWWWBWWWW\\r\\nWWBBWWWBWWBW\\r\\nBBWBWBWWWWWW\\r\\nWWBWBBWWWBBW\\r\\nWBWWWWWBWWBW\\r\\nWWWWBBBWWWWW\\r\\nWWWWBWWBBWWW\\r\\nWWWBBWWWWWWW\\r\\nWWWBWWBWWWBW\\r\\n', 'output': ['2\\r\\n']}, {'input': '41 6\\r\\nWBBBWB\\r\\nWWBWBW\\r\\nBBBBWB\\r\\nBBWBBB\\r\\nBBBWWW\\r\\nBBBWBB\\r\\nBBWBBB\\r\\nBBWWBB\\r\\nWBBBBB\\r\\nWBBBBB\\r\\nBBBBBB\\r\\nBBBBBB\\r\\nBBBBBB\\r\\nBBBBBB\\r\\nBBBBBB\\r\\nBBBBBB\\r\\nWBBBBB\\r\\nBBBBBW\\r\\nBWBWBW\\r\\nBBBBBB\\r\\nWWWBWW\\r\\nBBBBBB\\r\\nWBBBWB\\r\\nBBBWBB\\r\\nBBWBBB\\r\\nBWBWBB\\r\\nBWBBBB\\r\\nWBWBBB\\r\\nBBWWBB\\r\\nBBBBBB\\r\\nBBBBBB\\r\\nBBBBWB\\r\\nBBBBBB\\r\\nBBBBBW\\r\\nBWBWBW\\r\\nBBBBWB\\r\\nWBBWBB\\r\\nWBWBBW\\r\\nBBWBWW\\r\\nBBBWWB\\r\\nBBWWBB\\r\\n', 'output': ['3\\r\\n']}, {'input': '2 7\\r\\nBBBBBBB\\r\\nBBBBBBB\\r\\n', 'output': ['1\\r\\n']}, {'input': '7 28\\r\\nWWWWWWWWWBBWWWBBWBWWBWWBWWWW\\r\\nWWBBBWWWWWWWBWBBBWWWWBBWBWBW\\r\\nBWWWBBWWBWBWWBWWWWWWBBWWWWWW\\r\\nWBWWWWWWWBBBBWBBWWWWWWWBWWBB\\r\\nWWWBWBWWWWWBBWBWWWWBWWBWWBWW\\r\\nWWBWWWBWWWBWWBBWBWWWWWWBWWWB\\r\\nBWWWWBWWWWWWWWWBWBWWBWWWWWWW\\r\\n', 'output': ['3\\r\\n']}, {'input': '25 6\\r\\nWWWWWB\\r\\nWWBBWW\\r\\nBWBWWB\\r\\nBBWWWW\\r\\nBWWWWW\\r\\nWWWWWW\\r\\nWWWWWW\\r\\nWWWBWW\\r\\nWBWWWW\\r\\nWWWWWW\\r\\nWWBWWW\\r\\nWWWWWW\\r\\nWWBWWW\\r\\nWWWWWW\\r\\nWWWBWW\\r\\nWWWBWW\\r\\nWWWBWB\\r\\nWWWWWW\\r\\nWWWWWW\\r\\nWBWWWB\\r\\nBWWWWW\\r\\nBWBWWB\\r\\nWBWWWB\\r\\nWWWBWB\\r\\nWWWWBW\\r\\n', 'output': ['2\\r\\n']}, {'input': '42 1\\r\\nW\\r\\nW\\r\\nW\\r\\nB\\r\\nW\\r\\nW\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nW\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nW\\r\\nB\\r\\nW\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nW\\r\\nW\\r\\nB\\r\\n', 'output': ['11\\r\\n']}, {'input': '42 8\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBWBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBWB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBWBBB\\r\\nBBBBBBBB\\r\\nBBWBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nWBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBWW\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBBBBBBBB\\r\\nBWBBBBBB\\r\\n', 'output': ['1\\r\\n']}, {'input': '4 38\\r\\nWWWWWBWWWWWWWWWWWWWWWWWWWWWWWWBWWWWWWW\\r\\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\\r\\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\\r\\nWWBWWWWWWWWWWWWWWBWWWWWWWWWWWWWWWWWWWW\\r\\n', 'output': ['2\\r\\n']}, {'input': '9 10\\r\\nWWWWWWBWWW\\r\\nWWWBWWWWWW\\r\\nWBWWWWBWWW\\r\\nWBWBWWWWWW\\r\\nWBWWWWWWWW\\r\\nWWWWWWWWWW\\r\\nWWWWWWWWWB\\r\\nWWWWWWWWBB\\r\\nWWBBWWBWWW\\r\\n', 'output': ['2\\r\\n']}, {'input': '7 47\\r\\nWBWBWWWWBBBBBBWWWWBBBWBWBWBWBBWWWWBBBBWWWWBBWWB\\r\\nWBBBWBWWBBWBWWBWWBWBBBBWWBWBWWBBBBBBBBBWBWBBBBW\\r\\nBBBBWBWBWWBBWWBBBBBWWBBBWWBWBWWWBWWWWBWBBWWBBBW\\r\\nBWBBBBWBBWWWWBWBBWBWBBBBBBWWWWWBBBBBBWWBBBWWBWB\\r\\nBWBBBBBBBBBWBBBBWBWWBWWBBWBBWBBBBBBBWBBBWBBBBWB\\r\\nBBWBBWWWBBWBBBBBWWBBBWWBWBBBWBBBBWWWWBWWBBBWBWB\\r\\nBBBWBBBBWWBWBBWBWBWWBBBBBBBWBBBBBWWBWBBBBBWBWBW\\r\\n', 'output': ['6\\r\\n']}, {'input': '42 1\\r\\nB\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nW\\r\\nB\\r\\nW\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nW\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nB\\r\\n', 'output': ['10\\r\\n']}, {'input': '25 10\\r\\nWWWWBBBWWW\\r\\nBBBWWBWWBB\\r\\nWBWWBWWWWB\\r\\nBWBWWWBBWB\\r\\nWBWWBWWWBW\\r\\nWBWWBWBBWW\\r\\nWWWWBBWBWW\\r\\nBWBWWWWBBB\\r\\nBBBWWBWWWW\\r\\nBWWWBWBBBW\\r\\nBBWBBBWBBB\\r\\nWBBWWBWWBW\\r\\nBBBBWWWWBW\\r\\nWWWWWWWWWB\\r\\nBWBBWBWBBB\\r\\nBBWWWBBWWW\\r\\nWBWWBWWWWW\\r\\nBWWBBWWWWB\\r\\nWWWWBBBWWW\\r\\nWBBWWWWWWB\\r\\nWBBWWWBBWB\\r\\nWBWWWBBWBW\\r\\nWWBWWWWWBW\\r\\nBWWBWWWBBW\\r\\nBWWWBBBBBB\\r\\n', 'output': ['3\\r\\n']}, {'input': '4 35\\r\\nBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\\r\\nBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\\r\\nBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\\r\\nBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\\r\\n', 'output': ['1\\r\\n']}, {'input': '39 1\\r\\nB\\r\\nB\\r\\nW\\r\\nW\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nW\\r\\nW\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nB\\r\\nB\\r\\nW\\r\\nW\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nW\\r\\nB\\r\\nW\\r\\nW\\r\\nB\\r\\n', 'output': ['10\\r\\n']}, {'input': '18 11\\r\\nBBBBBBBBBBB\\r\\nBBBBBBBBBBB\\r\\nBBBBWBBBBBB\\r\\nBBBBBBBBBBB\\r\\nBBBBBBBBBBB\\r\\nBBBBBBBBWBB\\r\\nBBBBBBBBBBB\\r\\nBBBBBBBBBBB\\r\\nBBBBBBBBBBB\\r\\nBBBBBBBBBBB\\r\\nBBBBBBBWBBB\\r\\nBBBBBBBBBBB\\r\\nBBBBBBBBBBB\\r\\nBBBBBBBBBBB\\r\\nBBBBBBBBBBB\\r\\nBBBBBBBBBBB\\r\\nBBBBBBBBBBB\\r\\nBBBBBBBBBBB\\r\\n', 'output': ['1\\r\\n']}, {'input': '7 20\\r\\nBBBBBBBBBBBBBBBBBBBB\\r\\nBBBBBBBBBBBBBBBBBBBB\\r\\nBBBBBBBBBBBBBBBBBBBB\\r\\nBBBBBBBBBBBBBBBBBBBB\\r\\nBBBBBBBBBBBBBBBBBBWB\\r\\nBBBBBBBBBBBBBBBBBBBB\\r\\nBBBBBBBBBBBBBBBBBBBB\\r\\n', 'output': ['1\\r\\n']}, {'input': '45 9\\r\\nBBWBWBBBW\\r\\nWBBBBWBWB\\r\\nBWWBBWWWW\\r\\nBBBBWWBBB\\r\\nWBBBBWWWB\\r\\nWWBWWBBBW\\r\\nBBWBBWBBB\\r\\nWBBBBWBWW\\r\\nBBBWBWBWW\\r\\nBWBWBBWWB\\r\\nBWBWBBWBW\\r\\nBWBBBWBWB\\r\\nBBWBBWWBB\\r\\nWBBBBWBBB\\r\\nWWBWBBBWB\\r\\nBWWBWWBBB\\r\\nBBWBWBWWB\\r\\nWBWWWWBBW\\r\\nBBBWBWBBB\\r\\nWBWWWBBBB\\r\\nBBBWWBWBB\\r\\nWWBBBBBWB\\r\\nBWBBBWWBB\\r\\nBBBWWBWWW\\r\\nBBWBBBBBW\\r\\nWBBWWWBBW\\r\\nBWBWBWWBB\\r\\nBBWBWBBWB\\r\\nBWWBBBBBB\\r\\nBBBBBBBWB\\r\\nBBBBBWWBB\\r\\nWWWBBBBBB\\r\\nWWWBBBBBW\\r\\nWWBBBBBWW\\r\\nWBWBWBWBB\\r\\nBBBBBBBWB\\r\\nBBWBBWBBB\\r\\nBBBWBBBWW\\r\\nWBWWWWWBW\\r\\nBBBBBBWBB\\r\\nBBWBBBWBW\\r\\nBWBBBBWWW\\r\\nBWWBWBBBB\\r\\nBWBBBBBBB\\r\\nBWBWBBBWW\\r\\n', 'output': ['6\\r\\n']}, {'input': '19 9\\r\\nWWWWBWWBW\\r\\nWBWBWBBWB\\r\\nWWBBWWWBB\\r\\nWWBWWWBWW\\r\\nBWBWBWWWW\\r\\nBBBBWBWWB\\r\\nWWWBBBWBW\\r\\nBWWWBWWWB\\r\\nBBBBWWBWW\\r\\nWWWBBBBBB\\r\\nWBWBWBWWW\\r\\nWBBWWWWBB\\r\\nWWBBWBWWB\\r\\nBBWBBBBWB\\r\\nWBWBBWWWB\\r\\nBWBWWBWBW\\r\\nWWBBBWWBW\\r\\nWBBWBWBWB\\r\\nBBWBBWBBB\\r\\n', 'output': ['5\\r\\n']}, {'input': '2 23\\r\\nBBBBWBBBBBBBBBBBWBBBBBW\\r\\nWBBBBWBWBBBBBBWBWBBBWBB\\r\\n', 'output': ['3\\r\\n']}, {'input': '11 1\\r\\nW\\r\\nW\\r\\nW\\r\\nW\\r\\nW\\r\\nW\\r\\nW\\r\\nW\\r\\nW\\r\\nW\\r\\nW\\r\\n', 'output': ['0\\r\\n']}, {'input': '2 39\\r\\nBBBBBBWWBBWBBBBBBBBBBBBBBWBBBBBBBBBBBBB\\r\\nBBBBBWBBBBBBBBBBWBWWBBWBBBBBBBBBBWBBBBB\\r\\n', 'output': ['2\\r\\n']}, {'input': '36 3\\r\\nBBB\\r\\nBBB\\r\\nWWB\\r\\nBBB\\r\\nBBB\\r\\nBWW\\r\\nWBB\\r\\nBBW\\r\\nWBW\\r\\nBBB\\r\\nBBB\\r\\nBBW\\r\\nBWW\\r\\nWBB\\r\\nBWB\\r\\nWWB\\r\\nBBW\\r\\nWBB\\r\\nBBW\\r\\nWBB\\r\\nBBB\\r\\nWWB\\r\\nWBW\\r\\nBBB\\r\\nBWW\\r\\nBBW\\r\\nWBB\\r\\nWBW\\r\\nWWW\\r\\nBWW\\r\\nBWB\\r\\nWBW\\r\\nBWB\\r\\nBBB\\r\\nBBB\\r\\nWBB\\r\\n', 'output': ['7\\r\\n']}, {'input': '5 20\\r\\nWWBBBBWWWWWBWBWBWWBW\\r\\nWBWWWWWWWWWBWWBWWWBW\\r\\nWBWWBWWBWWWWWBBWWWBW\\r\\nWBWBWWWWWBBWWWWBWWWW\\r\\nWBBWBWWBBWBWBWBBWWWW\\r\\n', 'output': ['3\\r\\n']}, {'input': '19 11\\r\\nWWWBWWBBBBB\\r\\nBWBWBWBWWBW\\r\\nWBBWBBBWWBB\\r\\nWWBBBWBBWWW\\r\\nWWWBBWBWBWW\\r\\nBBWBWBWBBBB\\r\\nBWWBWWWBWBB\\r\\nBWBWWBBWBBW\\r\\nBWBWBWWBWWW\\r\\nWWBWBWWWBWB\\r\\nBBBWWWBWWWW\\r\\nBWBWWWWWBBB\\r\\nBWWWBBBWWBB\\r\\nWWWBWBWWBWB\\r\\nWWWWBWWBWWB\\r\\nBWWWBWBWBBB\\r\\nBBWWWWWWWBW\\r\\nWBWWWBWBBWW\\r\\nWBWWWWBWBWB\\r\\n', 'output': ['4\\r\\n']}, {'input': '6 33\\r\\nWBBWWWWWWWWWBBBWWWWWWWWWWWWWWWBWW\\r\\nWBWWBBWBBWWBWWWWWBBBBBBBWWWBWBWBW\\r\\nWBBBBBBWBBWBWWBBWBBBWBWWBBBWWWWWW\\r\\nWWBWBWBBWBWWBWBWBWBBWWWBWWWWWWWWW\\r\\nWWBWWWWBWBBBBWWWWWWWWWBBWWWBWBWWW\\r\\nBWBWWBBBWBWWBWBBBBWBWBBBWWWWBBWWW\\r\\n', 'output': ['4\\r\\n']}, {'input': '22 17\\r\\nBBBBBWBBWWBBBWBBB\\r\\nBBBBBBBBBBBBWBBBB\\r\\nWBBBBBBBBBBBBBBBB\\r\\nBBBBBBBBBBBBBBBBB\\r\\nBBBBWBWBBBBWBBBBW\\r\\nBBBBBWBBWBBBWWBBB\\r\\nBBBWBWBBBBBBBBBBB\\r\\nBBBWBBBBBBBBBBBBB\\r\\nBWBBWWBBBBBBBBBBB\\r\\nBWBBWBBWBBBBBBBBW\\r\\nBBBBBBWWWBWBBBWWW\\r\\nBWBBWBBBBBBWBBWBB\\r\\nBWWBBBBBBBBBBBBBB\\r\\nBBBBBBBBWBWBWBBBB\\r\\nBBBBBBBBWBBBBBBBB\\r\\nBBBBBBBBBBBBBBWBB\\r\\nBBBWWBBBBBBWWBBBB\\r\\nBBBBBBBWBBBBBBBBB\\r\\nBBBWBBBBBBWBBBBBB\\r\\nWBWBWBBBBBBBWBBBB\\r\\nBBBBBWBBBBBBBBBBB\\r\\nBBBWBBBBBBBBBBBBB\\r\\n', 'output': ['1\\r\\n']}, {'input': '36 6\\r\\nBWWWBW\\r\\nBBBBWB\\r\\nBWWBBB\\r\\nBWBWBB\\r\\nBBBBBB\\r\\nBWWBBW\\r\\nBWBWBW\\r\\nWBBBBB\\r\\nWBBBBB\\r\\nBBWBBB\\r\\nBWBBWB\\r\\nBBWWWB\\r\\nWBBBBB\\r\\nBWBWBB\\r\\nBBBBBW\\r\\nBWWWWB\\r\\nBBBBWB\\r\\nBBBBBB\\r\\nBWBBBB\\r\\nWBWBWB\\r\\nBBBBWW\\r\\nBWBBWB\\r\\nWBBBBW\\r\\nBBBWWW\\r\\nWBBBBB\\r\\nBBBBBW\\r\\nBBBBBW\\r\\nBBBBWW\\r\\nBBBWBW\\r\\nBWBBBB\\r\\nBWBBBW\\r\\nWWBBBW\\r\\nWBWBWB\\r\\nBBBWBW\\r\\nBBWBBB\\r\\nBBBBBB\\r\\n', 'output': ['3\\r\\n']}, {'input': '24 1\\r\\nW\\r\\nB\\r\\nW\\r\\nW\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nW\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\nB\\r\\n', 'output': ['3\\r\\n']}, {'input': '7 7\\r\\nBBBBBBB\\r\\nBWWWWWB\\r\\nBWBBBWB\\r\\nBWBWBWB\\r\\nBWBBBWB\\r\\nBWWWWWB\\r\\nBBBBBBB\\r\\n', 'output': ['2\\r\\n']}, {'input': '4 4\\r\\nBWWW\\r\\nWBWB\\r\\nBWBW\\r\\nWBWB\\r\\n', 'output': ['3\\r\\n']}, {'input': '5 5\\r\\nWBWWW\\r\\nBWBWW\\r\\nWBWWB\\r\\nWWBBW\\r\\nWWBWB\\r\\n', 'output': ['3\\r\\n']}, {'input': '10 10\\r\\nBBWWBBBBBW\\r\\nBWWWWBWBWB\\r\\nWBWBWBBBBW\\r\\nWWBBWBBBBW\\r\\nBBBBBBBBBW\\r\\nBBBWWBBWWB\\r\\nWBBWBWWWWB\\r\\nWWWBBBBBWW\\r\\nWBBBBBWBBB\\r\\nWBWWBWWBBB\\r\\n', 'output': ['3\\r\\n']}, {'input': '7 7\\r\\nWBWBBBW\\r\\nBBBWBBW\\r\\nWWWWBWB\\r\\nBBWWBBW\\r\\nWWBWBWW\\r\\nBWWBBWW\\r\\nWWBWBWW\\r\\n', 'output': ['3\\r\\n']}, {'input': '6 6\\r\\nWWWWBB\\r\\nWBWBWW\\r\\nBBBWBW\\r\\nBWWWWB\\r\\nWBBBBW\\r\\nBBWWWB\\r\\n', 'output': ['3\\r\\n']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tstatic int n, m;\n\tstatic char[][] a;\n\tstatic int[][] d;\n\tstatic int[][] c;\n\tstatic int[][] p;\n\tstatic int[][] q;\n\tstatic int[][] s;\n\tstatic int[][] t;\n\tstatic int[][] u;\n\tstatic int[][] v;\n\tstatic int[][] w;\n\tstatic int[][] x;\n\tstatic int[][] y;\n\tstatic int[][] z;\n\tstatic int[][] zz;\n\tstatic int[][] zzz;\n\tstatic int[][] zzzz;\n\tstatic int[][] zzzzz;\n\tstatic int[][] zzzzzz;\n\tstatic int[][] zzzzzzz;\n\tstatic int[][] zzzzzzzz;\n\tstatic int[][] zzzzzzzzz;\n\tstatic int[][] zzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n\tstatic int[][] zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz;\n"}
{"src_uid": "1670a3d7dba83e29e98f0ac6fe4acb18", "id": 114, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1900, "testcases": "[{'input': '3\\r\\n1 2 3\\r\\n', 'output': ['YES\\r\\n0\\r\\n10\\r\\n110\\r\\n']}, {'input': '3\\r\\n1 1 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10\\r\\n4 4 4 4 4 4 4 4 4 4\\r\\n', 'output': ['YES\\r\\n0000\\r\\n0001\\r\\n0010\\r\\n0011\\r\\n0100\\r\\n0101\\r\\n0110\\r\\n0111\\r\\n1000\\r\\n1001\\r\\n']}, {'input': '20\\r\\n6 7 7 7 7 6 7 7 7 7 7 7 7 7 7 7 7 7 6 7\\r\\n', 'output': ['YES\\r\\n000000\\r\\n0000110\\r\\n0000111\\r\\n0001000\\r\\n0001001\\r\\n000001\\r\\n0001010\\r\\n0001011\\r\\n0001100\\r\\n0001101\\r\\n0001110\\r\\n0001111\\r\\n0010000\\r\\n0010001\\r\\n0010010\\r\\n0010011\\r\\n0010100\\r\\n0010101\\r\\n000010\\r\\n0010110\\r\\n']}, {'input': '30\\r\\n9 10 8 10 10 10 10 10 7 7 10 10 10 10 10 10 10 10 10 10 9 10 10 10 10 10 10 10 4 3\\r\\n', 'output': ['YES\\r\\n001101010\\r\\n0011011000\\r\\n00110100\\r\\n0011011001\\r\\n0011011010\\r\\n0011011011\\r\\n0011011100\\r\\n0011011101\\r\\n0011000\\r\\n0011001\\r\\n0011011110\\r\\n0011011111\\r\\n0011100000\\r\\n0011100001\\r\\n0011100010\\r\\n0011100011\\r\\n0011100100\\r\\n0011100101\\r\\n0011100110\\r\\n0011100111\\r\\n001101011\\r\\n0011101000\\r\\n0011101001\\r\\n0011101010\\r\\n0011101011\\r\\n0011101100\\r\\n0011101101\\r\\n0011101110\\r\\n0010\\r\\n000\\r\\n']}, {'input': '20\\r\\n4 4 3 4 4 4 4 4 4 4 4 3 3 2 1 4 4 3 3 3\\r\\n', 'output': ['NO\\r\\n']}, {'input': '30\\r\\n6 7 7 6 7 7 7 7 7 7 7 7 7 7 7 5 7 7 7 7 2 1 5 3 7 3 2 7 5 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '65\\r\\n7 8 6 9 10 9 10 10 9 10 10 10 10 10 10 9 9 10 9 10 10 6 9 7 7 6 8 10 10 8 4 5 2 3 5 3 6 5 2 4 10 4 2 8 10 1 1 4 5 3 8 5 6 7 6 1 10 5 2 8 4 9 1 2 7\\r\\n', 'output': ['NO\\r\\n']}, {'input': '85\\r\\n7 9 8 9 5 6 9 8 10 10 9 10 10 10 10 7 7 4 8 7 7 7 9 10 10 9 10 9 10 10 10 8 8 10 10 10 10 10 10 10 10 10 10 10 10 10 10 9 7 10 4 2 9 3 3 6 2 6 5 6 4 1 7 3 7 7 5 8 4 5 4 1 10 2 9 3 1 4 2 9 9 3 5 6 8\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10\\r\\n4 4 4 4 4 4 4 4 2 2\\r\\n', 'output': ['YES\\r\\n1000\\r\\n1001\\r\\n1010\\r\\n1011\\r\\n1100\\r\\n1101\\r\\n1110\\r\\n1111\\r\\n00\\r\\n01\\r\\n']}, {'input': '20\\r\\n5 4 5 5 5 6 5 6 4 5 6 4 5 4 2 4 6 4 4 5\\r\\n', 'output': ['YES\\r\\n10110\\r\\n0100\\r\\n10111\\r\\n11000\\r\\n11001\\r\\n111100\\r\\n11010\\r\\n111101\\r\\n0101\\r\\n11011\\r\\n111110\\r\\n0110\\r\\n11100\\r\\n0111\\r\\n00\\r\\n1000\\r\\n111111\\r\\n1001\\r\\n1010\\r\\n11101\\r\\n']}, {'input': '30\\r\\n7 8 6 4 2 8 8 7 7 10 4 6 4 7 4 4 7 6 7 9 7 3 5 5 10 4 5 8 5 8\\r\\n', 'output': ['YES\\r\\n1110110\\r\\n11111010\\r\\n111000\\r\\n0110\\r\\n00\\r\\n11111011\\r\\n11111100\\r\\n1110111\\r\\n1111000\\r\\n1111111110\\r\\n0111\\r\\n111001\\r\\n1000\\r\\n1111001\\r\\n1001\\r\\n1010\\r\\n1111010\\r\\n111010\\r\\n1111011\\r\\n111111110\\r\\n1111100\\r\\n010\\r\\n11000\\r\\n11001\\r\\n1111111111\\r\\n1011\\r\\n11010\\r\\n11111101\\r\\n11011\\r\\n11111110\\r\\n']}, {'input': '50\\r\\n4 7 9 7 7 5 5 5 8 9 9 7 9 7 7 6 5 6 4 9 6 5 6 6 5 7 7 6 6 6 5 8 2 7 8 7 6 5 7 9 8 7 5 6 6 8 6 6 7 7\\r\\n', 'output': ['YES\\r\\n0100\\r\\n1101110\\r\\n111111010\\r\\n1101111\\r\\n1110000\\r\\n01100\\r\\n01101\\r\\n01110\\r\\n11111000\\r\\n111111011\\r\\n111111100\\r\\n1110001\\r\\n111111101\\r\\n1110010\\r\\n1110011\\r\\n101010\\r\\n01111\\r\\n101011\\r\\n0101\\r\\n111111110\\r\\n101100\\r\\n10000\\r\\n101101\\r\\n101110\\r\\n10001\\r\\n1110100\\r\\n1110101\\r\\n101111\\r\\n110000\\r\\n110001\\r\\n10010\\r\\n11111001\\r\\n00\\r\\n1110110\\r\\n11111010\\r\\n1110111\\r\\n110010\\r\\n10011\\r\\n1111000\\r\\n111111111\\r\\n11111011\\r\\n1111001\\r\\n10100\\r\\n110011\\r\\n110100\\r\\n11111100\\r\\n110101\\r\\n110110\\r\\n1111010\\r\\n1111011\\r\\n']}, {'input': '20\\r\\n2 3 4 4 2 4 4 2 4 4 3 4 4 3 1 3 3 3 2 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '30\\r\\n6 6 6 5 6 7 3 4 6 5 2 4 6 4 5 4 6 5 4 4 6 6 2 1 4 4 6 1 6 7\\r\\n', 'output': ['NO\\r\\n']}, {'input': '65\\r\\n9 7 8 6 6 10 3 9 10 4 8 3 2 8 9 1 6 3 2 7 9 7 8 10 10 4 5 6 8 8 7 10 10 8 6 6 4 8 8 7 6 9 10 7 8 7 3 3 10 8 9 10 1 9 6 9 2 7 9 10 8 10 3 7 3\\r\\n', 'output': ['NO\\r\\n']}, {'input': '85\\r\\n9 10 4 5 10 4 10 4 5 7 4 8 10 10 9 6 10 10 7 1 10 8 4 4 7 6 3 9 4 4 9 6 3 3 8 9 8 8 10 6 10 10 4 9 6 9 4 3 4 5 8 6 1 5 9 9 9 7 10 10 7 10 4 4 8 2 1 8 10 10 7 1 3 10 7 10 4 5 10 1 10 8 6 2 10\\r\\n', 'output': ['NO\\r\\n']}, {'input': '200\\r\\n11 23 6 1 15 6 5 9 8 9 13 11 7 21 14 17 8 8 12 6 18 4 9 20 3 9 6 9 9 12 18 5 22 5 16 20 11 6 22 10 5 6 8 19 9 12 14 2 10 6 7 7 18 17 4 16 9 13 3 10 15 8 8 9 13 7 8 18 12 12 13 14 9 8 5 5 22 19 23 15 11 7 23 7 5 3 9 3 15 9 22 9 2 11 21 8 12 7 6 8 10 6 12 9 11 8 7 6 5 7 8 9 10 7 19 12 14 9 6 7 2 7 8 4 12 21 14 4 11 12 9 13 17 4 10 8 17 3 9 5 11 6 4 11 1 13 10 10 8 10 14 23 17 8 20 23 23 23 14 7 18 5 10 21 9 7 7 7 4 23 13 8 9 22 7 4 8 12 8 19 17 11 10 8 8 7 7 13 6 13 14 14 22 2 10 11 5 1 14 13\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1\\r\\n1\\r\\n', 'output': ['YES\\r\\n0\\r\\n']}, {'input': '2\\r\\n1 1\\r\\n', 'output': ['YES\\r\\n0\\r\\n1\\r\\n']}, {'input': '3\\r\\n1 1 2\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint[] arr = new int[n];\n\t\tst = new StringTokenizer(br.readLine());\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarr[i] = Integer.parseInt(st.nextToken());\n\t\t}\n\t\tArrays.sort(arr);\n\t\tint[][] dp = new int[n + 1][1001];\n\t\tfor (int i = 0; i < n + 1; i++) {\n\t\t\tArrays.fill(dp[i], -1);\n\t\t}\n\t\tdp[0][0] = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tfor (int j = 0; j < 1001; j++) {\n\t\t\t\tif (dp[i][j] == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (j + arr[i] <= 1000) {\n\t\t\t\t\tdp[i + 1][j + arr[i]] = 1;\n\t\t\t\t}\n\t\t\t\tif (j - arr[i] >= 0) {\n\t\t\t\t\tdp[i + 1][j - arr[i]] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (dp[n][0] == 1) {\n\t\t\tSystem.out.println(\"YES\");\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tsb.append(0);\n\t\t\t\tfor (int j = 0; j < arr[i]; j++) {\n\t\t\t\t\tsb.append(1);\n\t\t\t\t}\n\t\t\t\tsb.append(\"\\n\");\n\t\t\t}\n\t\t\tSystem.out.println(sb);\n\t\t} else {\n\t\t\tSystem.out.println(\"NO\");\n\t\t}\n\t}\n}"}
{"src_uid": "0ef5e0621f13107d0c8786766ae2ac56", "id": 115, "lang_cluster": "java", "lang": "Java 11", "difficulty": 2600, "testcases": "[{'input': '2\\r\\n', 'output': ['YES\\r\\n1\\r\\n1\\r\\n0\\r\\n']}, {'input': '3\\r\\n', 'output': ['NO\\r\\n']}, {'input': '13\\r\\n', 'output': ['YES\\r\\n1\\r\\n2\\r\\n0\\r\\n']}, {'input': '1729\\r\\n', 'output': ['YES\\r\\n1\\r\\n4\\r\\n1\\r\\n156\\r\\n']}, {'input': '1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '156\\r\\n', 'output': ['YES\\r\\n1\\r\\n4\\r\\n1\\r\\n1729\\r\\n']}, {'input': '144\\r\\n', 'output': ['NO\\r\\n']}, {'input': '15407021574586369\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n465813504\\r\\n5162766336\\r\\n61917613056\\r\\n743008391424\\r\\n8916100449984\\r\\n106993205379216\\r\\n1283918464548876\\r\\n']}, {'input': '1283918464548876\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n465813504\\r\\n5162766336\\r\\n61917613056\\r\\n743008391424\\r\\n8916100449984\\r\\n106993205379216\\r\\n15407021574586369\\r\\n']}, {'input': '106993205379216\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n465813504\\r\\n5162766336\\r\\n61917613056\\r\\n743008391424\\r\\n8916100449984\\r\\n1283918464548876\\r\\n15407021574586369\\r\\n']}, {'input': '8916100449984\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n465813504\\r\\n5162766336\\r\\n61917613056\\r\\n743008391424\\r\\n106993205379216\\r\\n1283918464548876\\r\\n15407021574586369\\r\\n']}, {'input': '743008391424\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n465813504\\r\\n5162766336\\r\\n61917613056\\r\\n8916100449984\\r\\n106993205379216\\r\\n1283918464548876\\r\\n15407021574586369\\r\\n']}, {'input': '61917613056\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n465813504\\r\\n5162766336\\r\\n743008391424\\r\\n8916100449984\\r\\n106993205379216\\r\\n1283918464548876\\r\\n15407021574586369\\r\\n']}, {'input': '5162766336\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n465813504\\r\\n61917613056\\r\\n743008391424\\r\\n8916100449984\\r\\n106993205379216\\r\\n1283918464548876\\r\\n15407021574586369\\r\\n']}, {'input': '465813504\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n5162766336\\r\\n61917613056\\r\\n743008391424\\r\\n8916100449984\\r\\n106993205379216\\r\\n1283918464548876\\r\\n15407021574586369\\r\\n']}, {'input': '1190892770349870530939783612223854919520376583681977765887915460625605936058755310651852367291739265953207545289130222590192089760107219016552443777446454737593270848929686985225627328165141495957916933183554147885929489200931370369335342990301385609877410822418323040587200691179244114277235163137\\r\\n', 'output': ['NO\\r\\n']}, {'input': '595446385174935265469891806111927459760188291840988882943957730312802968029377655325926183645869632976603772644565111295096044880053609508276221888723227368796635424464843492612813664082570747978958466591777073942964744600465685184667671495150692804938705411209161520293600345589622057138617581568\\r\\n', 'output': ['NO\\r\\n']}, {'input': '25\\r\\n', 'output': ['NO\\r\\n']}, {'input': '941796563564014133460267652699405064136604147775680640408635568423120076418612383600961606320075481457728632621229496557902028935524874377670656752361237195740789199168688114539822313589449591752852405348364368488613997844015773837981050319855641810991084718329572826001220219\\r\\n', 'output': ['NO\\r\\n']}, {'input': '79360359146807441660707083821018832188095237636414144034857851003419752010124705615779249215657075053438039921073878645370211154334804568157886814559909\\r\\n', 'output': ['NO\\r\\n']}, {'input': '63730052926382178992698271572\\r\\n', 'output': ['NO\\r\\n']}, {'input': '781127467969689863953686682245136076127159921705034542049372816247984349746396880068864077830521695515007722284098436125466526268962707778595903329840419133974864831578401355678018910046595664462\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6158324958633591462725987806787114657822761584945953440793358408\\r\\n', 'output': ['NO\\r\\n']}, {'input': '46865942276811740149949176718949673344632458696505595472917789224885825949034661409971763949176343056701403524645790892802371117466746709730235969308113002256137529699677021858777002204698794034488631496662175642982367736619451227\\r\\n', 'output': ['NO\\r\\n']}, {'input': '30237645054497458443810364460387991000047179363449854478913094584184671326397148735574822623728870964468880\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2340834982489248497640077401144544875656219324259480464300721974528452789353163588007890141857933775490305682107276886017882071992830194933217950703328428111517059826130590646975303231172522274173055168264136989194405810785131454927884294753122224538370897882934059\\r\\n', 'output': ['NO\\r\\n']}, {'input': '188808426143782131983811729737047667239979348184409855460833141044812532916921011366813880911319644625405122800255947507577498497005580408229\\r\\n', 'output': ['NO\\r\\n']}, {'input': '11\\r\\n', 'output': ['NO\\r\\n']}, {'input': '837952166310387766556098005402621146120844433859027080340550200820\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6658370691480968202384509492140362150472696196949673577340706113760133821635599667476781507918250717914609488172442814676\\r\\n', 'output': ['NO\\r\\n']}, {'input': '496620932866717074931903995027173085744596193421095444317407919730992986418713478580824584919587030125446806223296721174921873955469939680411818878465888018986191990428049489376\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1055050055824280186133547527395898666709023463559337207019374080060005629519967890329878081184599905695126755199503698703340223998620951421943134090897041663457029971964336512111472968057533187306110300592753045593222495258017559167383354672\\r\\n', 'output': ['NO\\r\\n']}, {'input': '833488\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6623739799588591251984406341341227075747347067457011846886851179047097\\r\\n', 'output': ['NO\\r\\n']}, {'input': '491137842784568289872893698937459777201151060689848471272003426250808340375567208957554901863756992593841404624991936090178731\\r\\n', 'output': ['NO\\r\\n']}, {'input': '921020945402270233565256424740666649108666245414796768645533036514715926608741510409618545180420952947917462937925573726593991655435868735899832746218676826629010574075553051352459309199055\\r\\n', 'output': ['NO\\r\\n']}, {'input': '73010581613999159726778758153209240813500342925961695523976131595080552126499402124287397930918281238199343324378719343080627189983992629778313739785259010389762036264197722427990331444297391895841265448905560880286941336214995793596526089977876\\r\\n', 'output': ['NO\\r\\n']}, {'input': '20046142930690780976270827075270\\r\\n', 'output': ['NO\\r\\n']}, {'input': '9685166910821197056344900917707673568669808490600751439157007968027004377622601634787545920946543261243701428886581331490848676434786296227674864970612484770201\\r\\n', 'output': ['NO\\r\\n']}, {'input': '8135498415686025907059626116077260223347794805104214588176486213766836727225732896611278946787711775240855660997946707132990500568944980168321229607627861318462551364491230037357687242571268657488824365976425738641613571689437917277074234256494445914221354904615014917288299991097350709814\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4805043123239964766764344326469867688727869311599746349016084457204677169811854267718990063526979167327981002200329174783850464\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2376595620091080825479292544658464163405755746884100218035485700973409491416884420742631899446144679322008453313773241425622490028383089317622842863337164723765526589656211098933400307364163919083790470365474085981340438888606855706394352678991102\\r\\n', 'output': ['NO\\r\\n']}, {'input': '99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\\r\\n', 'output': ['NO\\r\\n']}, {'input': '145\\r\\n', 'output': ['YES\\r\\n1\\r\\n3\\r\\n1\\r\\n24\\r\\n']}, {'input': '24\\r\\n', 'output': ['YES\\r\\n1\\r\\n3\\r\\n1\\r\\n145\\r\\n']}, {'input': '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tString s = st.nextToken();\n\t\tint n = s.length();\n\t\tint[] a = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = s.charAt(i) - '0';\n\t\t}\n\t\tint[][] ans = new int[n][2];\n\t\tint[][] ans2 = new int[n][2];\n\t\tint[][] ans3 = new int[n][2];\n\t\tint[][] ans4 = new int[n][2];\n\t\tint[][] ans5 = new int[n][2];\n\t\tint[][] ans6 = new int[n][2];\n\t\tint[][] ans7 = new int[n][2];\n\t\tint[][] ans8 = new int[n][2];\n\t\tint[][] ans9 = new int[n][2];\n\t\tint[][] ans10 = new int[n][2];\n\t\tint[][] ans11 = new int[n][2];\n\t\tint[][] ans12 = new int[n][2];\n\t\tint[][] ans13 = new int[n][2];\n\t\tint[][] ans14 = new int[n][2];\n\t\tint[][] ans15 = new int[n][2];\n\t\tint[][] ans16 = new int[n][2];\n\t\tint[][] ans17 = new int[n][2];\n\t\tint[][] ans18 = new int[n][2];\n\t\tint[][] ans19 = new int[n][2];\n\t\tint[][] ans20 = new int[n][2];\n\t\tint[][] ans21 = new int[n][2];\n\t\tint[][] ans22 = new int[n][2];\n\t\tint[][] ans23 = new int[n][2];\n\t\tint[][] ans24 = new int[n][2];\n\t\tint[][] ans25 = new int[n][2];\n\t\tint[][] ans26 = new int[n][2];\n\t\tint[][] ans27 = new int[n][2];\n\t\tint[][] ans28 = new int[n][2];\n\t\tint[][] ans29 = new int[n][2];\n\t\tint[][] ans30 = new int[n][2];\n\t\tint[][] ans31 = new int[n][2];\n\t\tint[][] ans32 = new int[n][2];\n\t\tint[][] ans33 = new int[n][2];\n\t\tint[][] ans34 = new int[n][2];\n\t\tint[][] ans35 = new int[n][2];\n\t\tint[][] ans36 = new int[n][2];\n\t\tint[][] ans37 = new int[n][2];\n\t\tint[][] ans38 = new int[n][2];\n\t\tint[][] ans39 = new int[n][2];\n\t\tint[][] ans40 = new int[n][2];\n\t\tint[][] ans41 = new int[n][2];\n\t\tint[][] ans42 = new int[n][2];\n\t\tint[][] ans43 = new int[n][2];\n\t\tint[][] ans44 = new int[n][2];\n\t\tint[][] ans45 = new int[n][2];\n\t\tint[][] ans46 = new int[n][2];\n\t\tint[][] ans47 = new int[n][2];\n\t\tint[][] ans48 = new int[n][2];\n\t\tint[][] ans49 = new int[n][2];\n\t\tint[][] ans50 = new int[n][2];\n\t\tint[][] ans51 = new int[n][2];\n\t\tint[][] ans52 = new int[n][2];\n\t\tint[][] ans53 = new int[n][2];\n\t\tint[][] ans54 = new int[n][2];\n\t\tint[][] ans55 = new int[n][2];\n\t\tint[][] ans56 = new int[n][2];\n\t\tint[][] ans57 = new int[n][2];\n\t\tint[][] ans58 = new int[n][2];\n\t\tint[][] ans59 = new int[n][2];\n\t\tint[][] ans60 = new int[n][2];\n\t\tint[][] ans61 = new int[n][2];\n\t\tint[][] ans62 = new int[n][2];\n\t\tint[][] ans63 = new int[n][2];\n\t\tint[][] ans64 = new int[n][2];\n\t\tint[][] ans65 = new int[n][2];\n\t\tint[][] ans66 = new int[n][2];\n\t\tint[][] ans67 = new int[n][2];\n\t\tint[][] ans68 = new int[n][2];\n\t\tint[][] ans69 = new int[n][2];\n\t\tint[][] ans70 = new int[n][2];\n\t\tint[][] ans71 = new int[n][2];\n\t\tint[][] ans72 = new int[n][2];\n\t\tint[][] ans73 = new int[n][2];\n\t\tint[][] ans74 = new int[n][2];\n\t\tint[][] ans75 = new int[n][2];\n\t\tint[][] ans76 = new int[n][2];\n\t\tint[][] ans77 = new int[n][2];\n\t\tint[][] ans78 = new int[n][2];\n\t\tint[][] ans79 = new int[n][2];\n\t\tint[][] ans80 = new int[n][2];\n\t\tint[][] ans81 = new int[n][2];\n\t\tint[][] ans82 = new int[n][2];\n\t\tint[][] ans83 = new int[n][2];\n\t\tint[][] ans84 = new int[n][2];\n\t\tint[][] ans85 = new int[n][2];\n\t\tint[][] ans86 = new int[n][2];\n\t\tint[][] ans87 = new int[n][2];\n\t\tint[][] ans88 = new int[n][2];\n\t\tint[][] ans89 = new int[n][2];\n\t\tint[][] ans90 = new int[n][2];\n\t\tint[][] ans91 = new int[n][2];\n\t\tint[][] ans92 = new int[n][2];\n\t\tint[][] ans93 = new int[n][2];\n\t\tint[][] ans94 = new int[n][2];\n\t\tint[][] ans95 = new int[n][2];\n\t\tint[][] ans96 = new int[n][2];\n\t\tint[][] ans97 = new int[n][2];\n\t\tint[][] ans98 = new int[n][2];\n\t\tint[][] ans99 = new int[n][2];\n\t\tint[][] ans100 = new int[n][2];\n\t\tint[][] ans101 = new int[n][2];\n\t\tint[][] ans102 = new int[n][2];\n\t\tint[][] ans103 = new int[n][2];\n\t\tint[][] ans104 = new int[n][2];\n\t\tint[][] ans105 = new int[n][2];\n\t\tint[][] ans106 = new int[n][2];\n\t\tint[][] ans107 = new int[n][2];\n\t\tint[][] ans108 = new int[n][2];\n\t\tint[][] ans109 = new int[n][2];\n\t\tint[][] ans110 = new int[n][2];\n\t\tint[][] ans111 = new int[n][2];\n\t\tint[][] ans112 = new int["}
{"src_uid": "52b13cca189853e6af02bea8d3d85276", "id": 116, "lang_cluster": "java", "lang": "Java 11", "difficulty": 2300, "testcases": "[{'input': '2 1 2\\r\\n1 2\\r\\nDmitry 1 1 1\\r\\nNatalia 2 0\\r\\nNatalia 1 1 1\\r\\nDmitry 2 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 4 3\\r\\n1 3\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\nArtem 1 1 4\\r\\nDmitry 1 1 2\\r\\nEdvard 4 2 1 3\\r\\nArtem 2 0\\r\\nDmitry 1 0\\r\\nEdvard 4 4 1 2 3 4\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 1 1\\r\\n2 1\\r\\nabsgdf 1 1 1\\r\\nabsgdf 1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '2 1 1\\r\\n2 1\\r\\nabsgdf 2 1 1\\r\\nabsgdf 1 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\na 1 1 1\\r\\nb 2 1 3\\r\\nc 3 1 2\\r\\na 3 1 3\\r\\nb 1 0\\r\\nc 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\na 1 1 1\\r\\nb 2 1 3\\r\\nc 3 1 2\\r\\nb 1 1 2\\r\\nc 2 1 3\\r\\na 3 1 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3 3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\nb 1 1 2\\r\\nc 2 1 3\\r\\na 3 1 1\\r\\na 3 1 3\\r\\nb 1 0\\r\\nc 2 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4 5 3\\r\\n1 2\\r\\n2 3\\r\\n2 4\\r\\n1 3\\r\\n1 3\\r\\na 1 2 4 3\\r\\nb 1 0\\r\\nc 4 3 1 2 5\\r\\na 1 2 4 3\\r\\nb 1 1 5\\r\\nc 4 2 1 2\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 2 2\\r\\n1 2\\r\\n2 1\\r\\nA 1 1 2\\r\\nB 1 1 1\\r\\nA 1 0\\r\\nB 2 2 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 2 4\\r\\n2 1\\r\\n4 3\\r\\na 1 1 1\\r\\nb 2 1 2\\r\\nc 3 0\\r\\nd 4 0\\r\\na 2 1 2\\r\\nb 1 1 1\\r\\nc 3 0\\r\\nd 4 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '4 2 4\\r\\n2 1\\r\\n4 3\\r\\na 1 1 1\\r\\nb 2 1 2\\r\\nc 3 0\\r\\nd 4 0\\r\\na 2 1 2\\r\\nb 1 1 1\\r\\nc 4 0\\r\\nd 3 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6 3 4\\r\\n1 2\\r\\n3 4\\r\\n5 6\\r\\na 1 2 1 3\\r\\nb 3 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\na 2 2 1 3\\r\\nb 4 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '6 3 4\\r\\n1 2\\r\\n3 4\\r\\n5 6\\r\\na 1 2 1 3\\r\\nb 3 1 2\\r\\nc 5 0\\r\\nd 6 0\\r\\na 2 1 1\\r\\nb 4 2 2 3\\r\\nc 5 0\\r\\nd 6 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 20 5\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n5 1\\r\\n6 5\\r\\n7 2\\r\\n8 5\\r\\n9 8\\r\\n10 6\\r\\n2 6\\r\\n3 5\\r\\n3 4\\r\\n10 5\\r\\n8 3\\r\\n9 4\\r\\n10 8\\r\\n9 2\\r\\n6 3\\r\\n3 8\\r\\n9 8\\r\\nDKkXdT 10 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\r\\nOzvgPXMzAr 5 0\\r\\nbjac 3 0\\r\\ncBPbJtoND 6 0\\r\\nw 5 0\\r\\nbjac 4 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\r\\nOzvgPXMzAr 2 0\\r\\ncBPbJtoND 5 0\\r\\nw 10 0\\r\\nDKkXdT 4 0\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 9 10\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\nInCeN 1 0\\r\\nIzHqPceNhj 2 1 9\\r\\neH 3 1 8\\r\\nJvgBsNFi 4 1 7\\r\\nBA 5 1 6\\r\\nRrjSTXJzhL 6 1 5\\r\\nDMx 7 1 4\\r\\nJzt 8 1 3\\r\\nhxBRlDlqwD 9 1 2\\r\\nImWeEPkggZ 10 1 1\\r\\neH 1 0\\r\\nImWeEPkggZ 2 1 9\\r\\nDMx 3 1 8\\r\\nIzHqPceNhj 4 1 7\\r\\nInCeN 5 1 6\\r\\nJvgBsNFi 6 1 5\\r\\nRrjSTXJzhL 7 1 4\\r\\nJzt 8 1 3\\r\\nhxBRlDlqwD 9 1 2\\r\\nBA 10 1 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '11 10 11\\r\\n1 2\\r\\n2 11\\r\\n3 4\\r\\n4 11\\r\\n5 6\\r\\n6 11\\r\\n7 8\\r\\n8 11\\r\\n9 10\\r\\n10 11\\r\\na 1 1 9\\r\\nb 2 1 10\\r\\nc 3 0\\r\\nd 4 1 1\\r\\ne 5 1 3\\r\\nf 6 1 4\\r\\ng 7 1 5\\r\\nh 8 1 6\\r\\ni 9 1 7\\r\\nj 10 1 8\\r\\nk 11 1 2\\r\\na 1 0\\r\\nb 2 0\\r\\nc 3 0\\r\\nd 4 0\\r\\ne 5 0\\r\\nf 6 0\\r\\ng 7 0\\r\\nh 8 0\\r\\ni 9 0\\r\\nj 10 0\\r\\nk 11 10 1 2 3 4 5 6 7 8 9 10\\r\\n', 'output': ['YES\\r\\n']}, {'input': '11 10 11\\r\\n1 2\\r\\n2 11\\r\\n3 4\\r\\n4 11\\r\\n5 6\\r\\n6 11\\r\\n7 8\\r\\n8 11\\r\\n9 10\\r\\n10 11\\r\\na 1 0\\r\\nb 2 0\\r\\nc 3 0\\r\\nd 4 0\\r\\ne 5 0\\r\\nf 6 0\\r\\ng 7 0\\r\\nh 8 0\\r\\ni 9 0\\r\\nj 10 0\\r\\nk 11 10 1 2 3 4 5 6 7 8 9 10\\r\\na 1 1 9\\r\\nb 2 1 10\\r\\nc 3 0\\r\\nd 4 1 1\\r\\ne 5 1 3\\r\\nf 6 1 4\\r\\ng 7 1 5\\r\\nh 8 1 6\\r\\ni 9 1 7\\r\\nj 10 1 8\\r\\nk 11 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '7 8 2\\r\\n3 7\\r\\n7 6\\r\\n1 2\\r\\n4 5\\r\\n1 3\\r\\n5 6\\r\\n4 6\\r\\n2 3\\r\\na 7 4 3 8 5 2\\r\\nb 7 4 4 6 7 1\\r\\na 1 4 3 8 5 2\\r\\nb 4 4 4 6 7 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 8 2\\r\\n3 7\\r\\n7 6\\r\\n1 2\\r\\n4 5\\r\\n1 3\\r\\n5 6\\r\\n4 6\\r\\n2 3\\r\\na 1 4 3 8 5 2\\r\\nb 4 4 4 6 7 1\\r\\na 3 4 3 8 5 2\\r\\nb 6 4 4 6 7 1\\r\\n', 'output': ['YES\\r\\n']}, {'input': '7 7 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\na 1 4 1 3 5 7\\r\\nb 2 3 2 4 6\\r\\na 7 4 1 3 5 7\\r\\nb 4 3 2 4 6\\r\\n', 'output': ['NO\\r\\n']}, {'input': '7 7 2\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\na 1 4 1 3 5 7\\r\\nb 2 3 2 4 6\\r\\na 4 4 1 3 5 7\\r\\nb 4 3 2 4 6\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 20 10\\r\\n1 10\\r\\n5 10\\r\\n2 9\\r\\n2 6\\r\\n9 6\\r\\n3 9\\r\\n7 1\\r\\n10 5\\r\\n7 8\\r\\n8 7\\r\\n2 3\\r\\n9 6\\r\\n1 6\\r\\n5 3\\r\\n4 3\\r\\n3 7\\r\\n8 2\\r\\n6 4\\r\\n2 3\\r\\n4 1\\r\\nTjOMmYPRUY 7 3 1 3 9\\r\\nj 6 2 11 15\\r\\nBanBSrUA 4 2 19 20\\r\\ncSWZxzR 8 1 8\\r\\nzVoRlNgt 10 2 6 7\\r\\nWLGaq 1 3 10 13 17\\r\\nKahHtTDj 1 2 2 14\\r\\nrUFZmkpI 6 1 16\\r\\ni 4 3 4 5 12\\r\\nKLGiua 6 1 18\\r\\nWLGaq 10 0\\r\\ncSWZxzR 3 1 4\\r\\nj 2 3 8 13 17\\r\\nrUFZmkpI 7 2 1 19\\r\\nKahHtTDj 5 1 16\\r\\nKLGiua 6 2 2 12\\r\\nBanBSrUA 2 4 6 7 10 15\\r\\nTjOMmYPRUY 9 3 3 9 18\\r\\nzVoRlNgt 10 2 11 20\\r\\ni 2 2 5 14\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 10 10\\r\\n7 10\\r\\n1 2\\r\\n4 3\\r\\n7 4\\r\\n9 2\\r\\n8 7\\r\\n10 8\\r\\n6 10\\r\\n5 2\\r\\n6 10\\r\\nznkkxCkkxv 9 1 10\\r\\nP 5 1 7\\r\\nKOF 1 2 3 9\\r\\nwYtfFWkb 3 0\\r\\nZPJiebeu 9 1 6\\r\\ndgzAhKY 4 0\\r\\nayqPf 3 0\\r\\nxFSb 9 0\\r\\nreYnbMDm 10 1 1\\r\\nydSIPy 6 4 2 4 5 8\\r\\nKOF 10 1 4\\r\\nayqPf 7 1 7\\r\\nreYnbMDm 4 1 5\\r\\nwYtfFWkb 5 1 6\\r\\nznkkxCkkxv 9 2 1 9\\r\\nydSIPy 10 0\\r\\nP 10 1 8\\r\\ndgzAhKY 7 1 2\\r\\nZPJiebeu 8 1 3\\r\\nxFSb 7 1 10\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 8 5\\r\\n1 3\\r\\n4 2\\r\\n1 3\\r\\n4 2\\r\\n1 5\\r\\n5 3\\r\\n2 5\\r\\n2 5\\r\\nTaMmKIk 1 0\\r\\nvrLryIxio 1 3 1 6 5\\r\\nGFKONi 2 1 4\\r\\nTzRVfh 3 2 3 8\\r\\nqp 4 2 7 2\\r\\nTaMmKIk 1 2 7 4\\r\\nvrLryIxio 1 3 1 6 5\\r\\nTzRVfh 3 1 8\\r\\nqp 4 1 3\\r\\nGFKONi 4 1 2\\r\\n', 'output': ['YES\\r\\n']}, {'input': '10 9 10\\r\\n4 7\\r\\n4 8\\r\\n8 3\\r\\n9 2\\r\\n8 3\\r\\n8 1\\r\\n6 9\\r\\n4 7\\r\\n7 4\\r\\nznkkxCkkxv 1 2 3 6\\r\\nQlf 3 0\\r\\nKOF 5 2 1 8\\r\\ndgzAhKY 5 0\\r\\nwYtfFWkb 6 2 4 7\\r\\nLbYfZPhWd 9 0\\r\\nP 10 1 9\\r\\nZPJiebeu 10 1 5\\r\\nayqPf 10 0\\r\\nzmZLwuf 10 1 2\\r\\nwYtfFWkb 2 2 7 4\\r\\nQlf 3 1 2\\r\\nznkkxCkkxv 3 3 6 3 9\\r\\nKOF 5 0\\r\\ndgzAhKY 5 0\\r\\nLbYfZPhWd 9 0\\r\\nP 10 1 5\\r\\nZPJiebeu 10 0\\r\\nayqPf 10 0\\r\\nzmZLwuf 10 2 1 8\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tstatic int n, m, k;\n\tstatic int[][] g;\n\tstatic int[][] h;\n\tstatic int[][] a;\n\tstatic int[][] b;\n\tstatic int[][] c;\n\tstatic int[][] d;\n\tstatic int[][] e;\n\tstatic int[][] f;\n\tstatic int[][] g2;\n\tstatic int[][] h2;\n\tstatic int[][] a2;\n\tstatic int[][] b2;\n\tstatic int[][] c2;\n\tstatic int[][] d2;\n\tstatic int[][] e2;\n\tstatic int[][] f2;\n\tstatic int[][] g3;\n\tstatic int[][] h3;\n\tstatic int[][] a3;\n\tstatic int[][] b3;\n\tstatic int[][] c3;\n\tstatic int[][] d3;\n\tstatic int[][] e3;\n\tstatic int[][] f3;\n\tstatic int[][] g4;\n\tstatic int[][] h4;\n\tstatic int[][] a4;\n\tstatic int[][] b4;\n\tstatic int[][] c4;\n\tstatic int[][] d4;\n\tstatic int[][] e4;\n\tstatic int[][] f4;\n\tstatic int[][] g5;\n\tstatic int[][] h5;\n\tstatic int[][] a5;\n\tstatic int[][] b5;\n\tstatic int[][] c5;\n\tstatic int[][] d5;\n\tstatic int[][] e5;\n\tstatic int[][] f5;\n\tstatic int[][] g6;\n\tstatic int[][] h6;\n\tstatic int[][] a6;\n\tstatic int[][] b6;\n\tstatic int[][] c6;\n\tstatic int[][] d6;\n\tstatic int[][] e6;\n\tstatic int[][] f6;\n\tstatic int[][] g7;\n\tstatic int[][] h7;\n\tstatic int[][] a7;\n\tstatic int[][] b7;\n\tstatic int[][] c7;\n\tstatic int[][] d7;\n\tstatic int[][] e7;\n\tstatic int[][] f7;\n\tstatic int[][] g8;\n\tstatic int[][] h8;\n\tstatic int[][] a8;\n\tstatic int[][] b8;\n\tstatic int[][] c8;\n\tstatic int[][] d8;\n\tstatic int[][] e8;\n\tstatic int[][] f8;\n\tstatic int[][] g9;\n\tstatic int[][] h9;\n\tstatic int[][] a9;\n\tstatic int[][] b9;\n\tstatic int[][] c9;\n\tstatic int[][] d9;\n\tstatic int[][] e9;\n\tstatic int[][] f9;\n\tstatic int[][] g10;\n\tstatic int[][] h10;\n\tstatic int[][] a10;\n\tstatic int[][] b10;\n\tstatic int[][] c10;\n\tstatic int[][] d10;\n\tstatic int[][] e10;\n\tstatic int[][] f10;\n\tstatic int[][] g11;\n\tstatic int[][] h11;\n\tstatic int[][] a11;\n\tstatic int[][] b11;\n\tstatic int[][] c11;\n\tstatic int[][] d11;\n\tstatic int[][] e11;\n\tstatic int[][] f11;\n\tstatic int[][] g12;\n\tstatic int[][] h12;\n\tstatic int[][] a12;\n\tstatic int[][] b12;\n\tstatic int[][] c12;\n\tstatic int[][] d12;\n\tstatic int[][] e12;\n\tstatic int[][] f12;\n\tstatic int[][] g13;\n\tstatic int[][] h13;\n\tstatic int[][] a13;\n\tstatic int[][] b13;\n\tstatic int[][] c13;\n\tstatic int[][] d13;\n\tstatic int[][] e13;\n\tstatic int[][] f13;\n\tstatic int[][] g14;\n\tstatic int[][] h14;\n\tstatic int[][] a14;\n\tstatic int[][] b14;\n\tstatic int[][] c14;\n\tstatic int[][] d14;\n\tstatic int[][] e14;\n\tstatic int[][] f14;\n\tstatic int[][] g15;\n\tstatic int[][] h15;\n\tstatic int[][] a15;\n\tstatic int[][] b15;\n\tstatic int[][] c15;\n\tstatic int[][] d15;\n\tstatic int[][] e15;\n\tstatic int[][] f15;\n\tstatic int[][] g16;\n\tstatic int[][] h16;\n\tstatic int[][] a16;\n\tstatic int[][] b16;\n\tstatic int[][] c16;\n\tstatic int[][] d16;\n\tstatic int[][] e16;\n\tstatic int[][] f16;\n\tstatic int[][] g17;\n\tstatic int[][] h17;\n\tstatic int[][] a17;\n\tstatic int[][] b17;\n\tstatic int[][] c17;\n\tstatic int[][] d17;\n\tstatic int[][] e17;\n\tstatic int[][] f17;\n\tstatic int[][] g18;\n\tstatic int[][] h18;\n\tstatic int[][] a18;\n\tstatic int[][] b18;\n\tstatic int[][] c18;\n\tstatic int[][] d18;\n\tstatic int[][] e18;\n\tstatic int[][] f18;\n\tstatic int[][] g19;\n\tstatic int[][] h19;\n\tstatic int[][] a19;\n\tstatic int[][] b19;\n\tstatic int[][] c19;\n\tstatic int[][] d19;\n\tstatic int[][] e19;\n\tstatic int[][] f19;\n\tstatic int[][] g20;\n\tstatic int[][] h20;\n\tstatic int[][] a20;\n\tstatic int[][] b20;\n\tstatic int[][] c20;\n\tstatic int[][] d20;\n\tstatic int[][] e20;\n\tstatic int[][] f20;\n\tstatic int[][] g21;\n\tstatic int[][] h21;\n\tstatic int[][] a21;\n\tstatic int[][] b21;\n\tstatic int[][] c21;\n\tstatic int[][] d21;\n\tstatic int[][] e21;\n\tstatic int[][] f21;\n\tstatic int[][] g22;\n\tstatic int[][] h22;\n\tstatic int[][] a22;\n\tstatic int[][] b22;\n\tstatic int[][] c22;\n\tstatic int[][] d22;\n\tstatic int[][] e22;\n\tstatic int[][] f22;\n\tstatic int[][] g23;\n\tstatic int[][] h23;\n\tstatic int[][] a23;\n\tstatic int[][] b23;\n\tstatic int[][] c23;\n\tstatic int[][] d23;\n\tstatic int[][] e23;\n\tstatic int[][] f23;\n\tstatic int[][] g24;\n\tstatic int[][] h24;\n\tstatic int[][] a24;\n\tstatic int[][] b24;\n\tstatic int[][] c24;\n\tstatic int[][] d24;\n\tstatic int[][] e24;\n\tstatic int[][] f24;\n\tstatic int[][] g25;\n\tstatic int[][] h25;\n\tstatic int[][] a25;\n\tstatic int[][] b25;\n\tstatic int[][] c25;\n\tstatic int[][] d25;\n\tstatic int[][] e25;\n\tstatic int[][] f25;\n\tstatic int[][] g26;\n\tstatic int[][] h26;\n\tstatic int[][] a26;\n\tstatic int[][] b26;\n\tstatic int[][] c26;\n\tstatic int[][] d26;\n\tstatic int[][] e26;\n\tstatic int[][] f26;\n\tstatic int[][] g27;\n\tstatic int[][] h27;"}
{"src_uid": "1503f0379bf8d7f25c191ddea9278842", "id": 117, "lang_cluster": "java", "lang": "Java 11", "difficulty": 2500, "testcases": "[{'input': '5\\r\\n4 8\\r\\n8 8\\r\\n9 4\\r\\n4 0\\r\\n0 4\\r\\n', 'output': ['5\\r\\n']}, {'input': '5\\r\\n4 8\\r\\n5 8\\r\\n5 4\\r\\n7 4\\r\\n2 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\n0 4\\r\\n5 4\\r\\n2 0\\r\\n', 'output': ['6\\r\\n']}, {'input': '4\\r\\n0 4\\r\\n5 4\\r\\n5 0\\r\\n0 0\\r\\n', 'output': ['6\\r\\n']}, {'input': '4\\r\\n100 200\\r\\n800 200\\r\\n500 100\\r\\n100 0\\r\\n', 'output': ['701\\r\\n']}, {'input': '5\\r\\n0 4\\r\\n5 4\\r\\n2 2\\r\\n4 0\\r\\n0 0\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n2 5\\r\\n5 5\\r\\n4 4\\r\\n5 3\\r\\n0 0\\r\\n', 'output': ['2\\r\\n']}, {'input': '6\\r\\n1 9\\r\\n10 9\\r\\n11 7\\r\\n9 5\\r\\n5 7\\r\\n1 0\\r\\n', 'output': ['6\\r\\n']}, {'input': '6\\r\\n1 9\\r\\n10 9\\r\\n5 7\\r\\n11 7\\r\\n9 5\\r\\n1 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\n10 150\\r\\n90 150\\r\\n10 15\\r\\n', 'output': ['81\\r\\n']}, {'input': '5\\r\\n0 100\\r\\n50 100\\r\\n50 99\\r\\n149 0\\r\\n0 0\\r\\n', 'output': ['50\\r\\n']}, {'input': '10\\r\\n1000 0\\r\\n100 0\\r\\n0 25\\r\\n100 50\\r\\n100 51\\r\\n99 102\\r\\n1001 102\\r\\n1000 51\\r\\n1000 50\\r\\n1100 25\\r\\n', 'output': ['899\\r\\n']}, {'input': '6\\r\\n1 1000000\\r\\n999999 1000000\\r\\n519023 50000\\r\\n520013 500\\r\\n300033 50\\r\\n400023 500000\\r\\n', 'output': ['1\\r\\n']}, {'input': '8\\r\\n100 100\\r\\n10 100\\r\\n0 200\\r\\n5 400\\r\\n20 800\\r\\n16 801\\r\\n50 900\\r\\n110 300\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\n588523 0\\r\\n411477 0\\r\\n400000 86602\\r\\n', 'output': ['177047\\r\\n']}, {'input': '15\\r\\n507852 0\\r\\n492148 0\\r\\n489545 9858\\r\\n489631 11995\\r\\n490865 14012\\r\\n491570 15795\\r\\n492996 17376\\r\\n495001 18605\\r\\n496671 19452\\r\\n498570 19850\\r\\n500373 19859\\r\\n502484 19363\\r\\n505000 18605\\r\\n506393 17344\\r\\n507857 15808\\r\\n', 'output': ['15705\\r\\n']}, {'input': '4\\r\\n889308 0\\r\\n110692 0\\r\\n0 461939\\r\\n146447 815492\\r\\n', 'output': ['778617\\r\\n']}, {'input': '5\\r\\n785915 0\\r\\n214085 0\\r\\n40939 436592\\r\\n128612 706421\\r\\n358143 873184\\r\\n', 'output': ['571831\\r\\n']}, {'input': '5\\r\\n999990 0\\r\\n0 0\\r\\n0 1000000\\r\\n1000000 1000000\\r\\n500000 50000\\r\\n', 'output': ['473685\\r\\n']}, {'input': '8\\r\\n3 0\\r\\n0 0\\r\\n0 1\\r\\n1 1\\r\\n1 2\\r\\n2 2\\r\\n2 1\\r\\n3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '6\\r\\n1 4\\r\\n3 4\\r\\n2 2\\r\\n1 1\\r\\n2 0\\r\\n0 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\n999998 999999\\r\\n1000000 999999\\r\\n0 0\\r\\n', 'output': ['3\\r\\n']}, {'input': '4\\r\\n999998 999999\\r\\n1000000 999999\\r\\n1 1\\r\\n0 0\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n500944 0\\r\\n499056 0\\r\\n498479 979\\r\\n498437 1288\\r\\n499191 1574\\r\\n499413 1796\\r\\n499300 1937\\r\\n500000 1987\\r\\n499995 1934\\r\\n500587 1796\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n0 4\\r\\n3 4\\r\\n2 2\\r\\n2 0\\r\\n0 0\\r\\n', 'output': ['3\\r\\n']}, {'input': '6\\r\\n4 0\\r\\n0 0\\r\\n2 2\\r\\n3 4\\r\\n2 5\\r\\n4 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '7\\r\\n0 5\\r\\n3 5\\r\\n2 3\\r\\n2 2\\r\\n1 2\\r\\n2 0\\r\\n0 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n10 0\\r\\n0 0\\r\\n2 2\\r\\n1 3\\r\\n1 6\\r\\n', 'output': ['7\\r\\n']}, {'input': '8\\r\\n0 6\\r\\n5 6\\r\\n5 4\\r\\n3 4\\r\\n3 2\\r\\n5 2\\r\\n5 0\\r\\n0 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '7\\r\\n0 6\\r\\n5 6\\r\\n5 4\\r\\n3 4\\r\\n3 2\\r\\n5 0\\r\\n0 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n0 999999\\r\\n1 999999\\r\\n1 999998\\r\\n1000000 0\\r\\n0 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n0 999999\\r\\n1 999999\\r\\n1 999998\\r\\n999999 0\\r\\n0 0\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n0 999999\\r\\n1 999999\\r\\n1 999998\\r\\n999998 0\\r\\n0 0\\r\\n', 'output': ['1\\r\\n']}, {'input': '6\\r\\n0 999999\\r\\n1 999999\\r\\n1 999998\\r\\n2 999998\\r\\n1000000 0\\r\\n0 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n999999 0\\r\\n0 0\\r\\n999999 999998\\r\\n1 1\\r\\n1000000 1000000\\r\\n', 'output': ['0\\r\\n']}, {'input': '6\\r\\n5 6\\r\\n7 6\\r\\n8 2\\r\\n6 2\\r\\n7 3\\r\\n6 4\\r\\n', 'output': ['0\\r\\n']}, {'input': '6\\r\\n7 8\\r\\n5 8\\r\\n4 12\\r\\n6 12\\r\\n5 11\\r\\n6 10\\r\\n', 'output': ['0\\r\\n']}, {'input': '6\\r\\n5 6\\r\\n12 6\\r\\n8 2\\r\\n6 2\\r\\n7 3\\r\\n6 4\\r\\n', 'output': ['3\\r\\n']}, {'input': '6\\r\\n10 12\\r\\n24 12\\r\\n16 4\\r\\n12 4\\r\\n14 6\\r\\n12 8\\r\\n', 'output': ['5\\r\\n']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint n = Integer.parseInt(br.readLine());\n\t\tint[] x = new int[n];\n\t\tint[] y = new int[n];\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tx[0] = Integer.parseInt(st.nextToken());\n\t\ty[0] = Integer.parseInt(st.nextToken());\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\tx[i] = Integer.parseInt(st.nextToken());\n\t\t\ty[i] = Integer.parseInt(st.nextToken());\n\t\t}\n\t\tint ans = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (x[i] == x[i + 1]) {\n\t\t\t\tif (y[i] <= y[i + 1]) {\n\t\t\t\t\tans += (y[i + 1] - y[i]) + 1;\n\t\t\t\t} else {\n\t\t\t\t\tans += (y[i] - y[i + 1]) + 1;\n\t\t\t\t}\n\t\t\t} else if (y[i] == y[i + 1]) {\n\t\t\t\tif (x[i] <= x[i + 1]) {\n\t\t\t\t\tans += (x[i + 1] - x[i]) + 1;\n\t\t\t\t} else {\n\t\t\t\t\tans += (x[i] - x[i + 1]) + 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (x[i] == x[i + 1]) {\n\t\t\t\t\tif (y[i] <= y[i + 1]) {\n\t\t\t\t\t\tans += (y[i + 1] - y[i]) + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tans += (y[i] - y[i + 1]) + 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (y[i] == y[i + 1]) {\n\t\t\t\t\tif (x[i] <= x[i + 1]) {\n\t\t\t\t\t\tans += (x[i + 1] - x[i]) + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tans += (x[i] - x[i + 1]) + 1;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (x[i] == x[i + 1]) {\n\t\t\t\t\t\tif (y[i] <= y[i + 1]) {\n\t\t\t\t\t\t\tans += (y[i + 1] - y[i]) + 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tans += (y[i] - y[i + 1]) + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (y[i] == y[i + 1]) {\n\t\t\t\t\t\tif (x[i] <= x[i + 1]) {\n\t\t\t\t\t\t\tans += (x[i + 1] - x[i]) + 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tans += (x[i] - x[i + 1]) + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (x[i] == x[i + 1]) {\n\t\t\t\t\t\t\tif (y[i] <= y[i + 1]) {\n\t\t\t\t\t\t\t\tans += (y[i + 1] - y[i]) + 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tans += (y[i] - y[i + 1]) + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (y[i] == y[i + 1]) {\n\t\t\t\t\t\t\tif (x[i] <= x[i + 1]) {\n\t\t\t\t\t\t\t\tans += (x[i + 1] - x[i]) + 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tans += (x[i] - x[i + 1]) + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (x[i] == x[i + 1]) {\n\t\t\t\t\t\t\t\tif (y[i] <= y[i + 1]) {\n\t\t\t\t\t\t\t\t\tans += (y[i + 1] - y[i]) + 1;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tans += (y[i] - y[i + 1]) + 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (y[i] == y[i + 1]) {\n\t\t\t\t\t\t\t\tif (x[i] <= x[i + 1]) {\n\t\t\t\t\t\t\t\t\tans += (x[i + 1] - x[i]) + 1;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tans += (x[i] - x[i + 1]) + 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (x[i] == x[i + 1]) {\n\t\t\t\t\t\t\t\t\tif (y[i] <= y[i + 1]) {\n\t\t\t\t\t\t\t\t\t\tans += (y[i + 1] - y[i]) + 1;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tans += (y[i] - y[i + 1]) + 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (y[i] == y[i + 1]) {\n\t\t\t\t\t\t\t\t\tif (x[i] <= x[i + 1]) {\n\t\t\t\t\t\t\t\t\t\tans += (x[i + 1] - x[i]) + 1;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tans += (x[i] - x[i + 1]) + 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (x[i] == x[i + 1]) {\n\t\t\t\t\t\t\t\t\t\tif (y[i] <= y[i + 1]) {\n\t\t\t\t\t\t\t\t\t\t\tans += (y[i + 1] - y[i]) + 1;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tans += (y[i] - y[i + 1]) + 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if (y[i] == y[i + 1]) {\n\t\t\t\t\t\t\t\t\t\tif (x[i] <= x[i + 1]) {\n\t\t\t\t\t\t\t\t\t\t\tans += (x[i + 1] - x[i]) + 1;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tans += (x[i] - x[i + 1]) + 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif (x[i] == x[i + 1]) {"}
{"src_uid": "645a6ca9a8dda6946c2cc055a4beb08f", "id": 118, "lang_cluster": "java", "lang": "Java 11", "difficulty": 1900, "testcases": "[{'input': '0 0 2 3\\r\\n1 1\\r\\n1 2\\r\\n', 'output': ['Anton']}, {'input': '0 0 2 4\\r\\n1 1\\r\\n1 2\\r\\n', 'output': ['Dasha']}, {'input': '0 0 5 100\\r\\n12 105\\r\\n15 59\\r\\n21 1\\r\\n27 6\\r\\n27 76\\r\\n', 'output': ['Anton']}, {'input': '0 0 5 100\\r\\n16 24\\r\\n29 6\\r\\n44 24\\r\\n66 37\\r\\n102 19\\r\\n', 'output': ['Anton']}, {'input': '0 0 5 100\\r\\n4 108\\r\\n5 170\\r\\n7 30\\r\\n7 101\\r\\n21 117\\r\\n', 'output': ['Anton']}, {'input': '0 0 5 100\\r\\n30 9\\r\\n53 14\\r\\n84 7\\r\\n94 18\\r\\n121 16\\r\\n', 'output': ['Anton']}, {'input': '0 0 5 100\\r\\n52 144\\r\\n55 58\\r\\n56 103\\r\\n98 65\\r\\n134 16\\r\\n', 'output': ['Anton']}, {'input': '0 0 5 100\\r\\n17 3\\r\\n42 24\\r\\n72 22\\r\\n72 25\\r\\n120 25\\r\\n', 'output': ['Dasha']}, {'input': '0 0 5 100\\r\\n21 38\\r\\n43 42\\r\\n59 29\\r\\n69 3\\r\\n84 52\\r\\n', 'output': ['Anton']}, {'input': '0 0 5 100\\r\\n2 164\\r\\n23 107\\r\\n30 167\\r\\n46 178\\r\\n66 148\\r\\n', 'output': ['Dasha']}, {'input': '3 -1 20 200\\r\\n2 27\\r\\n12 61\\r\\n14 76\\r\\n16 20\\r\\n19 72\\r\\n20 22\\r\\n30 27\\r\\n39 61\\r\\n42 44\\r\\n45 8\\r\\n46 23\\r\\n57 13\\r\\n62 56\\r\\n64 67\\r\\n80 30\\r\\n94 34\\r\\n94 77\\r\\n100 36\\r\\n101 13\\r\\n107 9\\r\\n', 'output': ['Anton']}, {'input': '3 -1 20 200\\r\\n1 139\\r\\n8 76\\r\\n10 97\\r\\n25 99\\r\\n26 147\\r\\n29 51\\r\\n48 79\\r\\n56 164\\r\\n67 80\\r\\n71 35\\r\\n89 90\\r\\n108 16\\r\\n108 127\\r\\n127 54\\r\\n137 13\\r\\n140 156\\r\\n146 104\\r\\n160 155\\r\\n164 138\\r\\n172 102\\r\\n', 'output': ['Anton']}, {'input': '3 -1 20 200\\r\\n1 28\\r\\n9 80\\r\\n20 92\\r\\n29 82\\r\\n38 65\\r\\n42 9\\r\\n50 65\\r\\n67 57\\r\\n71 60\\r\\n73 51\\r\\n78 89\\r\\n86 31\\r\\n90 39\\r\\n97 96\\r\\n104 27\\r\\n115 49\\r\\n119 59\\r\\n125 18\\r\\n132 37\\r\\n133 9\\r\\n', 'output': ['Anton']}, {'input': '3 -1 20 200\\r\\n3 51\\r\\n6 75\\r\\n7 105\\r\\n8 109\\r\\n12 59\\r\\n12 90\\r\\n15 71\\r\\n17 150\\r\\n18 161\\r\\n19 106\\r\\n23 71\\r\\n26 68\\r\\n34 95\\r\\n36 47\\r\\n38 29\\r\\n38 153\\r\\n41 91\\r\\n43 128\\r\\n43 164\\r\\n44 106\\r\\n', 'output': ['Anton']}, {'input': '3 -1 20 200\\r\\n19 12\\r\\n24 121\\r\\n25 32\\r\\n28 19\\r\\n28 87\\r\\n29 49\\r\\n32 88\\r\\n33 70\\r\\n37 77\\r\\n54 33\\r\\n56 27\\r\\n61 59\\r\\n67 42\\r\\n73 15\\r\\n76 40\\r\\n80 73\\r\\n83 39\\r\\n91 34\\r\\n91 112\\r\\n95 95\\r\\n', 'output': ['Anton']}, {'input': '-3 -14 20 200\\r\\n6 90\\r\\n7 12\\r\\n15 24\\r\\n16 67\\r\\n26 35\\r\\n34 63\\r\\n35 48\\r\\n36 30\\r\\n48 28\\r\\n56 35\\r\\n59 91\\r\\n60 34\\r\\n76 43\\r\\n77 90\\r\\n77 95\\r\\n79 34\\r\\n87 69\\r\\n93 6\\r\\n99 10\\r\\n99 41\\r\\n', 'output': ['Anton']}, {'input': '-3 -14 20 200\\r\\n5 54\\r\\n10 62\\r\\n20 43\\r\\n20 79\\r\\n21 47\\r\\n32 75\\r\\n33 48\\r\\n40 61\\r\\n44 65\\r\\n52 7\\r\\n52 28\\r\\n55 65\\r\\n55 67\\r\\n59 78\\r\\n68 52\\r\\n70 20\\r\\n71 72\\r\\n76 50\\r\\n90 100\\r\\n99 9\\r\\n', 'output': ['Dasha']}, {'input': '-3 -14 20 200\\r\\n1 60\\r\\n5 47\\r\\n10 6\\r\\n14 17\\r\\n14 32\\r\\n34 93\\r\\n40 9\\r\\n43 85\\r\\n44 47\\r\\n49 59\\r\\n57 85\\r\\n68 50\\r\\n69 93\\r\\n71 42\\r\\n71 57\\r\\n73 5\\r\\n74 70\\r\\n83 41\\r\\n83 83\\r\\n89 8\\r\\n', 'output': ['Anton']}, {'input': '-3 -14 20 200\\r\\n14 51\\r\\n26 54\\r\\n30 50\\r\\n38 41\\r\\n40 68\\r\\n47 12\\r\\n50 86\\r\\n63 4\\r\\n65 52\\r\\n67 83\\r\\n70 88\\r\\n71 61\\r\\n79 82\\r\\n82 53\\r\\n89 84\\r\\n90 16\\r\\n92 79\\r\\n97 37\\r\\n100 37\\r\\n100 93\\r\\n', 'output': ['Dasha']}, {'input': '-3 -14 20 200\\r\\n11 24\\r\\n13 8\\r\\n14 8\\r\\n15 44\\r\\n15 54\\r\\n20 79\\r\\n24 72\\r\\n27 7\\r\\n28 6\\r\\n30 18\\r\\n46 34\\r\\n51 5\\r\\n64 83\\r\\n69 48\\r\\n78 76\\r\\n79 2\\r\\n89 43\\r\\n92 31\\r\\n94 76\\r\\n99 64\\r\\n', 'output': ['Anton']}, {'input': '12 -11 20 200\\r\\n12 147\\r\\n14 181\\r\\n14 198\\r\\n33 51\\r\\n34 93\\r\\n43 29\\r\\n47 44\\r\\n56 161\\r\\n66 111\\r\\n96 119\\r\\n102 71\\r\\n117 184\\r\\n133 69\\r\\n151 189\\r\\n152 28\\r\\n173 27\\r\\n173 120\\r\\n176 12\\r\\n183 1\\r\\n188 196\\r\\n', 'output': ['Anton']}, {'input': '12 -11 20 200\\r\\n6 108\\r\\n14 188\\r\\n23 60\\r\\n28 44\\r\\n35 151\\r\\n36 82\\r\\n58 49\\r\\n65 81\\r\\n97 100\\r\\n104 26\\r\\n114 143\\r\\n136 156\\r\\n139 112\\r\\n142 119\\r\\n147 184\\r\\n148 46\\r\\n149 152\\r\\n175 178\\r\\n184 85\\r\\n187 12\\r\\n', 'output': ['Anton']}, {'input': '12 -11 20 200\\r\\n11 189\\r\\n12 108\\r\\n19 190\\r\\n21 27\\r\\n24 193\\r\\n26 86\\r\\n26 123\\r\\n31 180\\r\\n39 196\\r\\n107 193\\r\\n122 46\\r\\n129 103\\r\\n131 129\\r\\n132 135\\r\\n142 51\\r\\n157 22\\r\\n161 27\\r\\n195 163\\r\\n198 55\\r\\n199 64\\r\\n', 'output': ['Anton']}, {'input': '12 -11 20 200\\r\\n8 176\\r\\n11 162\\r\\n25 130\\r\\n32 124\\r\\n58 175\\r\\n59 170\\r\\n61 98\\r\\n66 37\\r\\n78 5\\r\\n87 150\\r\\n94 172\\r\\n99 171\\r\\n121 11\\r\\n121 31\\r\\n124 172\\r\\n131 71\\r\\n134 190\\r\\n162 50\\r\\n182 99\\r\\n194 119\\r\\n', 'output': ['Anton']}, {'input': '12 -11 20 200\\r\\n6 80\\r\\n12 62\\r\\n14 15\\r\\n16 133\\r\\n41 28\\r\\n43 47\\r\\n79 136\\r\\n90 196\\r\\n99 151\\r\\n99 187\\r\\n119 42\\r\\n121 11\\r\\n147 132\\r\\n149 166\\r\\n161 102\\r\\n174 4\\r\\n182 122\\r\\n194 50\\r\\n200 182\\r\\n200 197\\r\\n', 'output': ['Anton']}, {'input': '0 0 19 27\\r\\n1 25\\r\\n11 3\\r\\n12 38\\r\\n27 52\\r\\n35 111\\r\\n36 51\\r\\n44 7\\r\\n45 106\\r\\n58 104\\r\\n63 108\\r\\n75 4\\r\\n76 84\\r\\n89 2\\r\\n89 44\\r\\n92 23\\r\\n98 66\\r\\n111 58\\r\\n113 9\\r\\n114 76\\r\\n', 'output': ['Anton']}, {'input': '0 0 15 98\\r\\n5 14\\r\\n9 133\\r\\n10 128\\r\\n15 140\\r\\n17 53\\r\\n33 43\\r\\n50 15\\r\\n69 55\\r\\n74 134\\r\\n77 100\\r\\n99 82\\r\\n100 140\\r\\n102 12\\r\\n110 65\\r\\n128 110\\r\\n', 'output': ['Anton']}, {'input': '0 0 19 34\\r\\n0 116\\r\\n6 11\\r\\n6 32\\r\\n9 84\\r\\n14 3\\r\\n27 85\\r\\n42 58\\r\\n46 31\\r\\n52 104\\r\\n65 83\\r\\n66 37\\r\\n68 130\\r\\n69 69\\r\\n78 7\\r\\n78 23\\r\\n81 66\\r\\n90 27\\r\\n91 39\\r\\n96 10\\r\\n', 'output': ['Anton']}, {'input': '0 0 17 141\\r\\n9 30\\r\\n9 55\\r\\n11 64\\r\\n18 37\\r\\n20 94\\r\\n23 37\\r\\n23 140\\r\\n28 134\\r\\n36 43\\r\\n38 77\\r\\n50 47\\r\\n54 42\\r\\n70 32\\r\\n74 151\\r\\n85 68\\r\\n87 53\\r\\n88 91\\r\\n', 'output': ['Anton']}, {'input': '0 0 17 160\\r\\n31 75\\r\\n32 149\\r\\n49 132\\r\\n54 98\\r\\n54 100\\r\\n57 48\\r\\n65 20\\r\\n67 177\\r\\n72 76\\r\\n74 25\\r\\n99 49\\r\\n105 86\\r\\n128 116\\r\\n147 176\\r\\n156 130\\r\\n160 26\\r\\n178 177\\r\\n', 'output': ['Anton']}, {'input': '-100 -100 10 200\\r\\n0 1\\r\\n1 0\\r\\n1 1\\r\\n31 41\\r\\n3 4\\r\\n5 2\\r\\n1 2\\r\\n3 3\\r\\n9 8\\r\\n10 2\\r\\n', 'output': ['Anton']}, {'input': '-140 -140 2 200\\r\\n1 0\\r\\n0 1\\r\\n', 'output': ['Dasha']}, {'input': '-130 -130 20 200\\r\\n0 1\\r\\n1 0\\r\\n1 1\\r\\n31 41\\r\\n3 4\\r\\n5 2\\r\\n1 2\\r\\n3 3\\r\\n9 8\\r\\n10 2\\r\\n0 2\\r\\n0 3\\r\\n0 4\\r\\n0 5\\r\\n0 6\\r\\n2 0\\r\\n3 0\\r\\n4 0\\r\\n5 0\\r\\n6 0\\r\\n', 'output': ['Anton']}, {'input': '-133 -133 20 200\\r\\n1 0\\r\\n0 1\\r\\n1 1\\r\\n2 0\\r\\n0 2\\r\\n2 1\\r\\n1 2\\r\\n3 0\\r\\n0 3\\r\\n3 1\\r\\n3 2\\r\\n3 3\\r\\n2 2\\r\\n2 3\\r\\n1 3\\r\\n4 0\\r\\n0 4\\r\\n4 1\\r\\n1 4\\r\\n2 4\\r\\n', 'output': ['Anton']}, {'input': '-12 -34 5 200\\r\\n1 0\\r\\n2 0\\r\\n3 1\\r\\n10 3\\r\\n11 4\\r\\n', 'output': ['Dasha']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Dot {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\tint x = Integer.parseInt(st.nextToken());\n\t\tint y = Integer.parseInt(st.nextToken());\n\t\tint n = Integer.parseInt(st.nextToken());\n\t\tint d = Integer.parseInt(st.nextToken());\n\t\tint[][] v = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\tv[i][0] = Integer.parseInt(st.nextToken());\n\t\t\tv[i][1] = Integer.parseInt(st.nextToken());\n\t\t}\n\t\tint[][] v2 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv2[i][0] = v[i][1];\n\t\t\tv2[i][1] = v[i][0];\n\t\t}\n\t\tint[][] v3 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv3[i][0] = -v[i][0];\n\t\t\tv3[i][1] = -v[i][1];\n\t\t}\n\t\tint[][] v4 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv4[i][0] = -v2[i][0];\n\t\t\tv4[i][1] = -v2[i][1];\n\t\t}\n\t\tint[][] v5 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv5[i][0] = -v3[i][0];\n\t\t\tv5[i][1] = -v3[i][1];\n\t\t}\n\t\tint[][] v6 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv6[i][0] = -v4[i][0];\n\t\t\tv6[i][1] = -v4[i][1];\n\t\t}\n\t\tint[][] v7 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv7[i][0] = -v5[i][0];\n\t\t\tv7[i][1] = -v5[i][1];\n\t\t}\n\t\tint[][] v8 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv8[i][0] = -v6[i][0];\n\t\t\tv8[i][1] = -v6[i][1];\n\t\t}\n\t\tint[][] v9 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv9[i][0] = -v7[i][0];\n\t\t\tv9[i][1] = -v7[i][1];\n\t\t}\n\t\tint[][] v10 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv10[i][0] = -v8[i][0];\n\t\t\tv10[i][1] = -v8[i][1];\n\t\t}\n\t\tint[][] v11 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv11[i][0] = -v9[i][0];\n\t\t\tv11[i][1] = -v9[i][1];\n\t\t}\n\t\tint[][] v12 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv12[i][0] = -v10[i][0];\n\t\t\tv12[i][1] = -v10[i][1];\n\t\t}\n\t\tint[][] v13 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv13[i][0] = -v11[i][0];\n\t\t\tv13[i][1] = -v11[i][1];\n\t\t}\n\t\tint[][] v14 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv14[i][0] = -v12[i][0];\n\t\t\tv14[i][1] = -v12[i][1];\n\t\t}\n\t\tint[][] v15 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv15[i][0] = -v13[i][0];\n\t\t\tv15[i][1] = -v13[i][1];\n\t\t}\n\t\tint[][] v16 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv16[i][0] = -v14[i][0];\n\t\t\tv16[i][1] = -v14[i][1];\n\t\t}\n\t\tint[][] v17 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv17[i][0] = -v15[i][0];\n\t\t\tv17[i][1] = -v15[i][1];\n\t\t}\n\t\tint[][] v18 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv18[i][0] = -v16[i][0];\n\t\t\tv18[i][1] = -v16[i][1];\n\t\t}\n\t\tint[][] v19 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv19[i][0] = -v17[i][0];\n\t\t\tv19[i][1] = -v17[i][1];\n\t\t}\n\t\tint[][] v20 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv20[i][0] = -v18[i][0];\n\t\t\tv20[i][1] = -v18[i][1];\n\t\t}\n\t\tint[][] v21 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv21[i][0] = -v19[i][0];\n\t\t\tv21[i][1] = -v19[i][1];\n\t\t}\n\t\tint[][] v22 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv22[i][0] = -v20[i][0];\n\t\t\tv22[i][1] = -v20[i][1];\n\t\t}\n\t\tint[][] v23 = new int[n][2];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tv23[i][0] = -v21[i][0];\n\t\t\tv23[i][1] = -v21[i][1];\n\t\t}\n\t\tint[][] v24 = new int[n][2];\n\t\tfor ("}
{"src_uid": "6220f4058f9325dfb211fb1dd86e9464", "id": 119, "lang_cluster": "java", "lang": "Java 11", "difficulty": 2700, "testcases": "[{'input': '8\\r\\n1 0 0\\r\\n1 2 0\\r\\n1 2 2\\r\\n2 1 0\\r\\n1 0 2\\r\\n2 1 1\\r\\n2 2 1\\r\\n2 20 -1\\r\\n', 'output': ['YES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 0 0\\r\\n1 5 0\\r\\n1 0 5\\r\\n2 1 1\\r\\n2 10 10\\r\\n1 2 10\\r\\n2 1 1\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '5\\r\\n1 2 -2\\r\\n1 -2 2\\r\\n1 1 5\\r\\n2 3 -1\\r\\n2 3 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\n']}, {'input': '5\\r\\n1 -1 0\\r\\n1 1 0\\r\\n1 0 2\\r\\n2 0 1\\r\\n2 0 3\\r\\n', 'output': ['YES\\r\\nNO\\r\\n']}, {'input': '6\\r\\n1 -2 0\\r\\n1 2 0\\r\\n1 0 2\\r\\n2 4 0\\r\\n2 1 0\\r\\n2 2 0\\r\\n', 'output': ['NO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '11\\r\\n1 0 -1\\r\\n1 0 1\\r\\n1 1 -1\\r\\n1 -1 -5\\r\\n1 0 5\\r\\n2 5 1\\r\\n2 5 0\\r\\n2 5 -1\\r\\n2 0 0\\r\\n2 0 10\\r\\n2 0 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -37 889\\r\\n1 771 -764\\r\\n1 -119 938\\r\\n1 599 868\\r\\n1 56 161\\r\\n1 -67 86\\r\\n2 -692 99\\r\\n2 -995 158\\r\\n2 410 116\\r\\n1 -49 -864\\r\\n2 30 -580\\r\\n1 -930 454\\r\\n1 -706 301\\r\\n2 547 -606\\r\\n2 -252 -55\\r\\n2 662 152\\r\\n2 -621 -920\\r\\n1 -128 -595\\r\\n1 -401 -265\\r\\n1 434 388\\r\\n2 299 173\\r\\n1 104 -298\\r\\n1 -693 557\\r\\n2 840 -179\\r\\n2 382 -8\\r\\n1 461 618\\r\\n1 -928 628\\r\\n2 193 -972\\r\\n2 218 945\\r\\n2 490 571\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -619 -234\\r\\n1 -140 -846\\r\\n1 762 -792\\r\\n2 153 29\\r\\n1 -353 627\\r\\n2 -544 -418\\r\\n2 -922 -965\\r\\n1 -620 -692\\r\\n1 -34 295\\r\\n2 -326 -604\\r\\n2 -906 -867\\r\\n2 57 -690\\r\\n1 -87 -822\\r\\n2 -569 739\\r\\n2 -92 -927\\r\\n2 279 806\\r\\n1 -364 19\\r\\n2 -214 -629\\r\\n2 -283 662\\r\\n2 -324 650\\r\\n1 92 -511\\r\\n2 654 -597\\r\\n1 -87 747\\r\\n2 795 46\\r\\n2 870 -157\\r\\n2 -11 520\\r\\n1 -162 -686\\r\\n2 290 -660\\r\\n2 -660 780\\r\\n2 946 910\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '30\\r\\n1 -702 -823\\r\\n1 -330 -896\\r\\n1 -564 90\\r\\n1 559 818\\r\\n2 404 716\\r\\n1 -900 -379\\r\\n2 866 -218\\r\\n2 444 615\\r\\n2 -782 -887\\r\\n2 584 -919\\r\\n2 891 775\\r\\n1 117 887\\r\\n2 598 162\\r\\n2 759 -925\\r\\n2 713 -507\\r\\n1 -329 120\\r\\n2 546 185\\r\\n2 399 500\\r\\n1 -611 763\\r\\n1 -956 187\\r\\n2 82 -26\\r\\n2 -877 -906\\r\\n1 293 -637\\r\\n2 -685 -275\\r\\n2 -725 -927\\r\\n1 -627 777\\r\\n1 -609 -563\\r\\n2 402 54\\r\\n1 -106 -908\\r\\n2 175 808\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '30\\r\\n1 -64 -994\\r\\n1 -692 366\\r\\n1 -72 847\\r\\n2 -963 -251\\r\\n1 -651 -994\\r\\n1 -523 -861\\r\\n2 553 -129\\r\\n2 17 785\\r\\n2 -584 -880\\r\\n1 105 657\\r\\n1 649 98\\r\\n2 -572 -492\\r\\n1 -38 -481\\r\\n1 540 463\\r\\n1 -468 -540\\r\\n1 -730 100\\r\\n1 606 -119\\r\\n1 -254 -380\\r\\n1 169 280\\r\\n1 319 62\\r\\n1 452 -556\\r\\n1 -653 887\\r\\n1 407 -786\\r\\n2 -632 181\\r\\n1 925 -967\\r\\n2 996 -709\\r\\n1 568 517\\r\\n2 -478 76\\r\\n1 156 621\\r\\n2 -592 899\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '30\\r\\n1 836 -283\\r\\n1 299 629\\r\\n1 434 -481\\r\\n1 -500 -368\\r\\n2 -105 -216\\r\\n2 -617 443\\r\\n2 -579 811\\r\\n1 411 -242\\r\\n1 -652 41\\r\\n1 962 -483\\r\\n1 -732 579\\r\\n2 554 -147\\r\\n1 39 967\\r\\n1 917 -199\\r\\n2 686 397\\r\\n1 444 780\\r\\n1 278 462\\r\\n1 729 -18\\r\\n1 252 -864\\r\\n1 884 -952\\r\\n1 272 689\\r\\n2 366 -389\\r\\n1 443 924\\r\\n1 791 -249\\r\\n2 692 74\\r\\n2 -412 550\\r\\n2 506 -472\\r\\n2 -626 474\\r\\n1 -895 -42\\r\\n2 -390 -971\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '12\\r\\n1 0 0\\r\\n1 10 0\\r\\n1 8 1\\r\\n2 11 0\\r\\n1 2 0\\r\\n2 7 0\\r\\n2 9 0\\r\\n2 1 0\\r\\n1 1 1\\r\\n2 10 0\\r\\n2 9 0\\r\\n2 11 0\\r\\n', 'output': ['NO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 5000 5000\\r\\n2 3 0\\r\\n2 2 0\\r\\n2 4 0\\r\\n2 -1 0\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '4\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 2 2\\r\\n2 4 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4\\r\\n1 1 0\\r\\n1 3 0\\r\\n1 0 8\\r\\n2 4 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '11\\r\\n1 0 -1\\r\\n1 0 1\\r\\n1 -1 -5\\r\\n1 6 4\\r\\n1 -8 8\\r\\n2 6 -1\\r\\n2 6 1\\r\\n2 1 0\\r\\n2 1 -1\\r\\n2 1 1\\r\\n2 6 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '11\\r\\n1 5 4\\r\\n1 5 6\\r\\n1 4 0\\r\\n1 11 9\\r\\n1 -3 13\\r\\n2 11 4\\r\\n2 11 6\\r\\n2 6 5\\r\\n2 6 4\\r\\n2 6 6\\r\\n2 11 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -2 -1000000\\r\\n1 -1 -1000000\\r\\n1 -1 -999999\\r\\n1 1 1000000\\r\\n1 -231100 1000000\\r\\n2 0 0\\r\\n2 1 999999\\r\\n', 'output': ['YES\\r\\nNO\\r\\n']}, {'input': '10\\r\\n1 -1000000 -1000000\\r\\n1 -999999 -1000000\\r\\n1 999999 1000000\\r\\n1 1000000 1000000\\r\\n2 0 0\\r\\n2 1000000 999999\\r\\n2 999999 1000000\\r\\n2 999999 999999\\r\\n2 999999 999998\\r\\n2 999999 999997\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '9\\r\\n1 -2 -4\\r\\n1 2 4\\r\\n1 -3 3\\r\\n2 -1 -2\\r\\n2 -4 -8\\r\\n2 -3 -6\\r\\n2 1 2\\r\\n2 4 8\\r\\n2 3 6\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '16\\r\\n1 -10000 0\\r\\n1 10000 0\\r\\n1 0 -1\\r\\n2 50000 0\\r\\n2 -50000 0\\r\\n2 49000 0\\r\\n2 -49000 0\\r\\n2 27000 0\\r\\n2 -27000 0\\r\\n1 0 1\\r\\n2 50000 0\\r\\n2 -50000 0\\r\\n2 49000 0\\r\\n2 -49000 0\\r\\n2 27000 0\\r\\n2 -27000 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -7000 -9000\\r\\n1 7000 9000\\r\\n1 7000 -7000\\r\\n2 21 27\\r\\n2 -21 -27\\r\\n2 7007 9009\\r\\n2 -7007 -9009\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -7000 -9000\\r\\n1 7000 9000\\r\\n1 -7000 7000\\r\\n2 21 27\\r\\n2 -21 -27\\r\\n2 7007 9009\\r\\n2 -7007 -9009\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -9000 7000\\r\\n1 9000 -7000\\r\\n1 7000 7000\\r\\n2 -27 21\\r\\n2 27 -21\\r\\n2 -9009 7007\\r\\n2 9009 -7007\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '7\\r\\n1 -9000 7000\\r\\n1 9000 -7000\\r\\n1 -7000 -7000\\r\\n2 -27 21\\r\\n2 27 -21\\r\\n2 -9009 7007\\r\\n2 9009 -7007\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 7 6\\r\\n1 0 5\\r\\n1 0 4\\r\\n1 2 5\\r\\n1 8 0\\r\\n1 6 4\\r\\n1 1 1\\r\\n1 8 4\\r\\n2 1 1\\r\\n2 2 7\\r\\n1 2 3\\r\\n1 4 2\\r\\n2 4 3\\r\\n1 3 2\\r\\n1 7 2\\r\\n1 1 0\\r\\n2 3 5\\r\\n1 6 5\\r\\n2 5 7\\r\\n2 1 1\\r\\n2 3 2\\r\\n1 6 2\\r\\n2 6 0\\r\\n2 8 8\\r\\n1 4 6\\r\\n1 3 5\\r\\n2 3 8\\r\\n2 0 5\\r\\n2 1 6\\r\\n1 8 3\\r\\n1 2 2\\r\\n1 8 2\\r\\n1 6 8\\r\\n1 1 3\\r\\n1 3 3\\r\\n1 5 5\\r\\n2 2 0\\r\\n2 6 7\\r\\n2 1 6\\r\\n2 6 4\\r\\n', 'output': ['YES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 8\\r\\n1 6 7\\r\\n1 7 7\\r\\n2 5 5\\r\\n1 4 0\\r\\n1 0 0\\r\\n2 7 3\\r\\n1 0 2\\r\\n2 8 2\\r\\n2 5 1\\r\\n2 1 2\\r\\n2 1 5\\r\\n1 1 3\\r\\n1 7 1\\r\\n1 8 7\\r\\n1 2 4\\r\\n1 2 8\\r\\n2 8 5\\r\\n2 8 6\\r\\n1 2 1\\r\\n1 5 6\\r\\n1 2 3\\r\\n2 4 3\\r\\n1 8 3\\r\\n1 1 5\\r\\n2 2 2\\r\\n2 8 5\\r\\n1 0 7\\r\\n1 7 2\\r\\n1 5 5\\r\\n1 8 4\\r\\n1 4 1\\r\\n2 3 2\\r\\n2 6 0\\r\\n2 8 7\\r\\n2 5 7\\r\\n1 3 0\\r\\n2 1 0\\r\\n2 0 7\\r\\n2 5 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 8\\r\\n1 3 8\\r\\n1 7 4\\r\\n1 4 5\\r\\n1 4 1\\r\\n2 6 6\\r\\n2 5 8\\r\\n1 5 4\\r\\n1 7 8\\r\\n2 1 3\\r\\n2 6 1\\r\\n2 8 2\\r\\n2 6 8\\r\\n1 4 3\\r\\n2 2 8\\r\\n2 0 6\\r\\n1 0 3\\r\\n2 0 3\\r\\n1 6 6\\r\\n1 5 8\\r\\n1 5 5\\r\\n1 1 2\\r\\n2 6 7\\r\\n1 4 8\\r\\n2 1 2\\r\\n2 2 7\\r\\n2 2 3\\r\\n1 8 4\\r\\n2 8 4\\r\\n2 6 5\\r\\n1 8 2\\r\\n2 7 2\\r\\n2 3 5\\r\\n1 4 0\\r\\n2 6 2\\r\\n2 3 7\\r\\n1 4 6\\r\\n1 8 6\\r\\n1 0 5\\r\\n2 2 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 4 0\\r\\n1 7 1\\r\\n1 8 0\\r\\n1 1 2\\r\\n1 1 8\\r\\n1 6 1\\r\\n2 5 2\\r\\n1 7 7\\r\\n1 6 5\\r\\n2 8 1\\r\\n2 8 7\\r\\n1 7 8\\r\\n2 3 5\\r\\n2 6 6\\r\\n1 4 2\\r\\n1 8 3\\r\\n2 6 8\\r\\n1 4 8\\r\\n2 4 6\\r\\n2 1 7\\r\\n1 4 3\\r\\n2 0 8\\r\\n1 5 2\\r\\n2 5 5\\r\\n2 1 6\\r\\n1 5 5\\r\\n1 1 5\\r\\n2 3 3\\r\\n2 0 1\\r\\n1 1 0\\r\\n2 1 4\\r\\n2 3 6\\r\\n1 4 6\\r\\n2 7 6\\r\\n1 4 4\\r\\n1 7 6\\r\\n1 6 8\\r\\n2 1 1\\r\\n1 0 1\\r\\n2 0 2\\r\\n', 'output': ['YES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 3 0\\r\\n1 1 4\\r\\n1 2 7\\r\\n2 4 0\\r\\n1 0 5\\r\\n1 7 5\\r\\n2 6 3\\r\\n1 0 7\\r\\n2 5 7\\r\\n1 1 0\\r\\n2 0 6\\r\\n1 6 8\\r\\n1 3 5\\r\\n1 8 5\\r\\n1 0 6\\r\\n2 7 0\\r\\n1 4 6\\r\\n1 5 2\\r\\n2 6 2\\r\\n1 7 0\\r\\n2 6 3\\r\\n1 3 7\\r\\n2 4 2\\r\\n2 1 4\\r\\n1 1 3\\r\\n1 5 0\\r\\n2 0 7\\r\\n2 6 8\\r\\n1 4 0\\r\\n2 5 0\\r\\n2 3 2\\r\\n2 6 7\\r\\n1 7 2\\r\\n1 0 3\\r\\n1 6 6\\r\\n2 4 0\\r\\n2 2 4\\r\\n1 6 5\\r\\n2 0 8\\r\\n2 0 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 0 3\\r\\n1 6 0\\r\\n1 8 7\\r\\n2 2 6\\r\\n2 7 2\\r\\n2 7 5\\r\\n1 4 7\\r\\n1 2 3\\r\\n2 2 7\\r\\n2 3 1\\r\\n1 3 5\\r\\n1 8 5\\r\\n2 6 8\\r\\n1 2 8\\r\\n2 4 6\\r\\n1 7 3\\r\\n1 3 3\\r\\n2 2 4\\r\\n1 5 0\\r\\n1 5 6\\r\\n1 1 7\\r\\n2 3 3\\r\\n1 8 6\\r\\n2 7 4\\r\\n1 7 8\\r\\n1 5 8\\r\\n2 3 8\\r\\n1 6 6\\r\\n2 8 5\\r\\n1 5 1\\r\\n2 4 2\\r\\n1 7 7\\r\\n2 4 8\\r\\n1 6 1\\r\\n1 1 5\\r\\n2 1 8\\r\\n2 4 3\\r\\n1 5 5\\r\\n1 4 0\\r\\n2 0 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 5 2\\r\\n1 5 6\\r\\n1 2 1\\r\\n2 7 2\\r\\n2 6 2\\r\\n2 0 8\\r\\n2 0 6\\r\\n1 6 8\\r\\n1 2 0\\r\\n1 0 5\\r\\n2 3 0\\r\\n1 3 8\\r\\n2 8 6\\r\\n1 0 3\\r\\n1 8 8\\r\\n2 1 1\\r\\n1 1 4\\r\\n1 1 3\\r\\n2 0 0\\r\\n2 5 6\\r\\n1 0 0\\r\\n2 0 0\\r\\n1 2 7\\r\\n2 0 0\\r\\n2 3 6\\r\\n1 3 3\\r\\n1 3 2\\r\\n1 5 3\\r\\n1 7 8\\r\\n1 7 4\\r\\n1 8 7\\r\\n1 7 3\\r\\n2 0 3\\r\\n1 4 4\\r\\n2 5 0\\r\\n1 6 6\\r\\n1 8 0\\r\\n2 6 2\\r\\n2 4 8\\r\\n2 7 2\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 4\\r\\n1 1 5\\r\\n1 3 5\\r\\n2 8 2\\r\\n2 5 2\\r\\n1 7 3\\r\\n1 8 1\\r\\n2 6 5\\r\\n1 4 3\\r\\n1 2 4\\r\\n1 2 3\\r\\n2 8 3\\r\\n2 3 5\\r\\n2 2 0\\r\\n1 6 7\\r\\n2 2 8\\r\\n1 3 0\\r\\n2 5 1\\r\\n2 2 1\\r\\n1 4 5\\r\\n2 1 6\\r\\n1 8 5\\r\\n2 7 4\\r\\n2 2 0\\r\\n1 3 2\\r\\n1 2 2\\r\\n1 8 3\\r\\n2 3 4\\r\\n1 7 6\\r\\n1 3 7\\r\\n1 5 3\\r\\n1 2 0\\r\\n2 5 7\\r\\n2 0 7\\r\\n2 3 2\\r\\n2 1 0\\r\\n1 6 0\\r\\n2 8 5\\r\\n1 3 4\\r\\n2 0 3\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '40\\r\\n1 8 7\\r\\n1 0 6\\r\\n1 5 0\\r\\n2 6 7\\r\\n2 6 8\\r\\n1 3 5\\r\\n1 6 7\\r\\n1 0 0\\r\\n2 1 7\\r\\n1 2 3\\r\\n2 4 3\\r\\n2 5 5\\r\\n1 4 7\\r\\n2 2 0\\r\\n1 2 4\\r\\n1 4 2\\r\\n1 0 8\\r\\n2 0 3\\r\\n1 8 8\\r\\n2 8 1\\r\\n2 8 6\\r\\n2 4 8\\r\\n1 4 0\\r\\n1 6 6\\r\\n2 0 0\\r\\n1 6 2\\r\\n2 5 1\\r\\n1 3 0\\r\\n1 5 6\\r\\n1 8 1\\r\\n1 3 4\\r\\n1 1 3\\r\\n1 5 1\\r\\n1 5 7\\r\\n1 6 8\\r\\n1 1 5\\r\\n1 1 1\\r\\n1 6 1\\r\\n1 1 4\\r\\n2 7 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 8\\r\\n1 4 0\\r\\n1 0 6\\r\\n2 3 8\\r\\n2 4 5\\r\\n1 5 0\\r\\n2 7 6\\r\\n2 6 1\\r\\n2 1 7\\r\\n1 1 2\\r\\n1 5 4\\r\\n1 7 3\\r\\n2 6 4\\r\\n1 3 0\\r\\n2 2 8\\r\\n1 8 2\\r\\n1 8 8\\r\\n1 7 8\\r\\n2 2 5\\r\\n2 2 3\\r\\n2 4 6\\r\\n2 0 2\\r\\n2 6 7\\r\\n2 2 8\\r\\n1 8 3\\r\\n2 5 5\\r\\n1 4 8\\r\\n1 7 1\\r\\n2 7 3\\r\\n2 4 5\\r\\n2 1 1\\r\\n2 4 2\\r\\n1 1 1\\r\\n2 4 0\\r\\n1 2 4\\r\\n2 7 0\\r\\n1 4 1\\r\\n1 7 5\\r\\n1 6 6\\r\\n2 7 8\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 6 3\\r\\n1 5 3\\r\\n1 3 4\\r\\n1 2 3\\r\\n2 2 5\\r\\n1 6 1\\r\\n2 3 7\\r\\n1 0 0\\r\\n1 8 7\\r\\n1 3 8\\r\\n1 0 8\\r\\n1 3 5\\r\\n1 4 5\\r\\n1 0 5\\r\\n2 8 1\\r\\n2 4 7\\r\\n2 3 2\\r\\n1 6 4\\r\\n2 2 3\\r\\n2 6 3\\r\\n1 0 2\\r\\n2 1 2\\r\\n2 6 2\\r\\n1 5 7\\r\\n2 7 0\\r\\n1 4 8\\r\\n1 4 6\\r\\n2 8 7\\r\\n2 0 7\\r\\n1 7 8\\r\\n2 0 3\\r\\n1 5 5\\r\\n1 6 2\\r\\n2 4 5\\r\\n1 2 5\\r\\n2 3 3\\r\\n2 1 1\\r\\n1 8 3\\r\\n1 6 5\\r\\n2 5 5\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 6 5\\r\\n1 4 8\\r\\n1 5 7\\r\\n1 3 1\\r\\n2 4 2\\r\\n1 4 3\\r\\n1 0 7\\r\\n2 4 6\\r\\n2 4 2\\r\\n1 0 3\\r\\n2 1 5\\r\\n2 5 6\\r\\n1 8 8\\r\\n1 1 7\\r\\n1 3 3\\r\\n2 6 7\\r\\n1 7 4\\r\\n1 0 2\\r\\n1 8 4\\r\\n2 4 5\\r\\n2 0 7\\r\\n1 4 1\\r\\n1 4 4\\r\\n1 5 3\\r\\n1 1 0\\r\\n1 4 5\\r\\n2 1 4\\r\\n1 0 6\\r\\n2 1 0\\r\\n1 5 5\\r\\n2 5 6\\r\\n2 8 2\\r\\n2 1 7\\r\\n2 8 1\\r\\n2 0 5\\r\\n1 0 4\\r\\n1 6 6\\r\\n2 1 1\\r\\n1 8 0\\r\\n2 6 3\\r\\n', 'output': ['NO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 7\\r\\n1 3 3\\r\\n1 6 5\\r\\n1 7 3\\r\\n1 2 8\\r\\n1 3 0\\r\\n2 0 0\\r\\n1 7 7\\r\\n2 6 8\\r\\n2 6 0\\r\\n2 4 7\\r\\n1 7 8\\r\\n2 0 7\\r\\n2 0 5\\r\\n1 6 2\\r\\n1 7 1\\r\\n1 1 1\\r\\n2 4 8\\r\\n2 2 1\\r\\n2 7 0\\r\\n2 5 4\\r\\n1 2 4\\r\\n2 1 3\\r\\n2 0 5\\r\\n2 5 5\\r\\n2 1 4\\r\\n2 5 5\\r\\n1 2 6\\r\\n1 4 4\\r\\n2 0 8\\r\\n1 0 6\\r\\n2 0 5\\r\\n2 4 6\\r\\n2 8 1\\r\\n2 2 0\\r\\n2 3 3\\r\\n1 0 4\\r\\n1 3 7\\r\\n2 3 2\\r\\n2 3 7\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 7\\r\\n1 6 5\\r\\n1 2 0\\r\\n2 4 5\\r\\n1 1 0\\r\\n2 3 4\\r\\n1 7 3\\r\\n2 8 1\\r\\n2 0 0\\r\\n2 2 0\\r\\n1 7 4\\r\\n1 6 3\\r\\n2 8 1\\r\\n2 6 0\\r\\n1 4 7\\r\\n2 4 2\\r\\n1 4 5\\r\\n2 3 7\\r\\n2 6 8\\r\\n2 2 6\\r\\n2 7 4\\r\\n1 0 6\\r\\n2 1 7\\r\\n1 4 4\\r\\n2 2 3\\r\\n1 1 3\\r\\n1 8 5\\r\\n1 0 5\\r\\n1 1 1\\r\\n1 4 3\\r\\n2 5 3\\r\\n1 3 6\\r\\n1 7 0\\r\\n2 5 6\\r\\n2 5 6\\r\\n1 0 7\\r\\n2 7 0\\r\\n2 6 4\\r\\n1 3 7\\r\\n2 2 2\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 4 4\\r\\n1 2 6\\r\\n1 8 2\\r\\n2 4 6\\r\\n1 5 4\\r\\n2 5 8\\r\\n2 6 7\\r\\n2 4 8\\r\\n1 1 0\\r\\n1 3 1\\r\\n1 0 3\\r\\n1 8 1\\r\\n1 3 0\\r\\n2 7 4\\r\\n1 2 0\\r\\n1 8 5\\r\\n1 6 2\\r\\n2 2 0\\r\\n1 0 4\\r\\n1 1 1\\r\\n1 4 5\\r\\n2 8 3\\r\\n2 1 0\\r\\n2 5 5\\r\\n1 3 4\\r\\n2 0 7\\r\\n1 4 3\\r\\n1 7 0\\r\\n2 3 8\\r\\n1 0 1\\r\\n1 0 7\\r\\n2 4 1\\r\\n1 0 6\\r\\n2 1 2\\r\\n1 5 7\\r\\n2 7 2\\r\\n2 7 3\\r\\n1 3 6\\r\\n2 7 3\\r\\n2 7 0\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 0 8\\r\\n1 3 5\\r\\n1 0 2\\r\\n1 8 0\\r\\n1 5 3\\r\\n1 5 2\\r\\n2 8 2\\r\\n2 7 6\\r\\n1 6 1\\r\\n2 2 7\\r\\n2 6 5\\r\\n1 3 7\\r\\n2 7 8\\r\\n1 2 4\\r\\n1 4 2\\r\\n2 5 7\\r\\n2 0 6\\r\\n1 3 1\\r\\n2 2 3\\r\\n1 5 7\\r\\n2 2 8\\r\\n1 7 1\\r\\n1 3 0\\r\\n2 5 5\\r\\n1 7 4\\r\\n2 5 5\\r\\n1 2 0\\r\\n2 4 3\\r\\n2 8 1\\r\\n2 8 0\\r\\n1 2 6\\r\\n1 7 5\\r\\n2 4 8\\r\\n1 2 3\\r\\n2 6 6\\r\\n1 7 8\\r\\n2 7 5\\r\\n2 7 4\\r\\n1 8 1\\r\\n2 5 6\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 3\\r\\n1 7 2\\r\\n1 6 2\\r\\n2 0 8\\r\\n2 3 8\\r\\n2 0 3\\r\\n1 5 8\\r\\n2 7 1\\r\\n1 8 1\\r\\n2 8 7\\r\\n1 5 5\\r\\n2 2 4\\r\\n2 3 3\\r\\n2 2 4\\r\\n1 0 1\\r\\n1 2 0\\r\\n1 7 4\\r\\n2 7 4\\r\\n2 5 5\\r\\n1 1 1\\r\\n2 6 4\\r\\n2 1 7\\r\\n2 5 0\\r\\n1 8 0\\r\\n2 6 2\\r\\n1 7 1\\r\\n2 8 6\\r\\n1 8 7\\r\\n2 2 5\\r\\n1 7 3\\r\\n1 5 6\\r\\n1 4 0\\r\\n2 3 8\\r\\n2 8 6\\r\\n1 7 0\\r\\n2 3 5\\r\\n2 6 1\\r\\n1 2 6\\r\\n1 1 2\\r\\n2 7 1\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 4 4\\r\\n1 2 6\\r\\n1 7 2\\r\\n2 1 4\\r\\n2 0 2\\r\\n1 5 4\\r\\n2 5 1\\r\\n1 0 8\\r\\n1 1 7\\r\\n2 2 0\\r\\n1 8 4\\r\\n2 6 5\\r\\n2 8 0\\r\\n1 6 5\\r\\n2 8 7\\r\\n2 0 0\\r\\n2 4 0\\r\\n2 7 2\\r\\n2 6 8\\r\\n1 7 8\\r\\n2 8 8\\r\\n2 4 7\\r\\n1 7 1\\r\\n2 8 8\\r\\n1 5 8\\r\\n1 3 6\\r\\n1 4 6\\r\\n1 3 5\\r\\n2 6 1\\r\\n2 1 3\\r\\n2 8 4\\r\\n2 8 5\\r\\n2 1 3\\r\\n2 7 1\\r\\n2 5 8\\r\\n1 8 2\\r\\n2 6 1\\r\\n1 7 4\\r\\n1 8 5\\r\\n2 6 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 2 1\\r\\n1 4 7\\r\\n1 1 1\\r\\n1 2 4\\r\\n2 4 4\\r\\n1 4 4\\r\\n2 0 6\\r\\n2 7 6\\r\\n1 4 0\\r\\n2 6 5\\r\\n2 5 2\\r\\n1 6 1\\r\\n2 7 0\\r\\n1 6 2\\r\\n2 3 2\\r\\n1 0 6\\r\\n2 7 0\\r\\n1 8 6\\r\\n2 1 3\\r\\n2 0 1\\r\\n1 2 5\\r\\n1 0 2\\r\\n2 4 2\\r\\n2 6 8\\r\\n2 2 0\\r\\n2 5 7\\r\\n2 6 0\\r\\n1 2 2\\r\\n2 0 3\\r\\n1 7 4\\r\\n2 7 3\\r\\n1 4 1\\r\\n2 2 6\\r\\n2 8 2\\r\\n1 8 3\\r\\n1 8 7\\r\\n1 0 3\\r\\n1 7 0\\r\\n2 2 1\\r\\n2 6 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 7\\r\\n1 5 8\\r\\n1 4 4\\r\\n1 8 1\\r\\n1 4 6\\r\\n1 6 6\\r\\n2 5 0\\r\\n2 3 4\\r\\n1 5 3\\r\\n2 0 7\\r\\n2 3 1\\r\\n1 5 4\\r\\n1 3 4\\r\\n2 3 4\\r\\n2 8 2\\r\\n1 0 1\\r\\n1 0 8\\r\\n2 3 8\\r\\n1 0 4\\r\\n2 4 6\\r\\n1 7 3\\r\\n2 4 0\\r\\n1 2 3\\r\\n2 8 1\\r\\n2 8 4\\r\\n1 7 0\\r\\n2 2 6\\r\\n2 2 2\\r\\n1 2 2\\r\\n1 6 5\\r\\n1 7 1\\r\\n2 5 1\\r\\n1 2 4\\r\\n2 3 2\\r\\n1 8 4\\r\\n1 7 4\\r\\n1 1 2\\r\\n1 3 2\\r\\n2 7 3\\r\\n2 4 4\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 1 0\\r\\n1 0 7\\r\\n1 8 4\\r\\n2 1 6\\r\\n2 1 2\\r\\n1 0 0\\r\\n1 1 1\\r\\n2 5 2\\r\\n1 8 5\\r\\n1 0 6\\r\\n2 6 8\\r\\n1 4 2\\r\\n1 8 3\\r\\n2 2 3\\r\\n1 6 3\\r\\n2 6 0\\r\\n1 5 3\\r\\n2 0 5\\r\\n1 3 4\\r\\n2 4 4\\r\\n1 8 6\\r\\n1 1 2\\r\\n1 5 7\\r\\n1 5 1\\r\\n1 3 8\\r\\n2 7 0\\r\\n1 7 2\\r\\n1 3 3\\r\\n2 6 5\\r\\n2 5 0\\r\\n2 2 4\\r\\n2 5 5\\r\\n2 4 6\\r\\n1 6 1\\r\\n1 5 2\\r\\n2 7 5\\r\\n1 8 7\\r\\n1 1 6\\r\\n1 4 8\\r\\n2 8 5\\r\\n', 'output': ['YES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 8 1\\r\\n1 8 6\\r\\n1 1 1\\r\\n2 5 4\\r\\n2 7 8\\r\\n1 6 2\\r\\n1 7 4\\r\\n1 4 4\\r\\n2 3 7\\r\\n1 6 3\\r\\n2 0 1\\r\\n1 8 0\\r\\n2 0 3\\r\\n1 6 0\\r\\n1 3 4\\r\\n1 1 8\\r\\n1 3 3\\r\\n2 3 1\\r\\n2 4 0\\r\\n1 4 3\\r\\n2 1 3\\r\\n2 5 4\\r\\n1 8 5\\r\\n2 1 0\\r\\n1 4 7\\r\\n2 5 3\\r\\n2 4 1\\r\\n1 4 0\\r\\n1 6 8\\r\\n1 5 1\\r\\n2 8 3\\r\\n2 5 7\\r\\n1 3 2\\r\\n1 7 5\\r\\n1 7 3\\r\\n1 0 8\\r\\n1 7 8\\r\\n2 7 3\\r\\n2 6 7\\r\\n2 4 2\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '50\\r\\n1 58 -49\\r\\n1 -77 -90\\r\\n1 32 -52\\r\\n1 -89 -31\\r\\n1 99 -34\\r\\n1 -3 -59\\r\\n2 65 93\\r\\n2 67 -51\\r\\n2 25 -47\\r\\n1 -72 86\\r\\n2 48 -45\\r\\n2 64 -70\\r\\n2 -96 -43\\r\\n2 87 -58\\r\\n2 3 21\\r\\n2 39 -57\\r\\n1 -58 49\\r\\n2 -1 87\\r\\n2 -63 19\\r\\n2 -27 90\\r\\n2 31 3\\r\\n1 55 41\\r\\n1 90 39\\r\\n1 -53 28\\r\\n2 49 -51\\r\\n2 6 42\\r\\n1 50 15\\r\\n2 21 -2\\r\\n2 -6 70\\r\\n1 -13 -61\\r\\n2 -60 -69\\r\\n1 -22 33\\r\\n1 -22 17\\r\\n2 30 -98\\r\\n2 -56 -48\\r\\n2 -84 -77\\r\\n2 49 56\\r\\n1 81 29\\r\\n1 26 29\\r\\n1 -14 20\\r\\n2 -37 83\\r\\n1 -91 96\\r\\n2 57 19\\r\\n1 94 54\\r\\n2 25 -30\\r\\n1 92 5\\r\\n2 -48 51\\r\\n2 81 23\\r\\n1 39 -47\\r\\n2 34 89\\r\\n', 'output': ['NO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '50\\r\\n1 7 -8\\r\\n1 -30 -28\\r\\n1 -8 2\\r\\n1 -28 -29\\r\\n2 -8 -21\\r\\n2 -23 19\\r\\n2 -23 18\\r\\n1 6 27\\r\\n2 -17 20\\r\\n1 9 -5\\r\\n2 -27 29\\r\\n1 -8 27\\r\\n2 13 12\\r\\n2 -29 13\\r\\n2 -30 8\\r\\n2 -30 -8\\r\\n1 -24 -21\\r\\n1 -14 -15\\r\\n2 -23 14\\r\\n2 -12 -13\\r\\n1 15 -24\\r\\n1 28 6\\r\\n2 -20 -21\\r\\n1 -8 -13\\r\\n1 -15 -15\\r\\n1 11 20\\r\\n2 24 -26\\r\\n1 -30 -11\\r\\n2 -17 18\\r\\n1 -17 6\\r\\n2 5 -9\\r\\n2 -29 8\\r\\n2 -29 1\\r\\n2 10 24\\r\\n2 29 27\\r\\n2 -12 21\\r\\n2 5 -28\\r\\n2 28 27\\r\\n2 -4 -4\\r\\n1 -24 29\\r\\n1 17 -1\\r\\n1 0 17\\r\\n1 -2 -1\\r\\n2 -7 -10\\r\\n1 5 -16\\r\\n2 -3 -26\\r\\n2 -7 17\\r\\n1 -27 -26\\r\\n1 -3 -30\\r\\n2 28 -15\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\n']}, {'input': '10\\r\\n1 0 0\\r\\n1 6 0\\r\\n1 0 6\\r\\n2 0 0\\r\\n2 6 0\\r\\n2 0 6\\r\\n2 3 3\\r\\n2 3 0\\r\\n2 0 3\\r\\n2 2 2\\r\\n', 'output': ['YES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '50\\r\\n1 33 -21\\r\\n1 9 82\\r\\n1 -69 -54\\r\\n2 -3 84\\r\\n1 -9 -28\\r\\n2 -54 87\\r\\n2 26 -64\\r\\n2 8 52\\r\\n2 98 63\\r\\n2 -77 10\\r\\n2 -52 -46\\r\\n1 92 42\\r\\n2 -53 -69\\r\\n2 -48 44\\r\\n1 -52 90\\r\\n2 56 29\\r\\n2 -100 -13\\r\\n2 -23 1\\r\\n2 6 91\\r\\n2 53 -38\\r\\n1 48 -35\\r\\n2 19 -62\\r\\n2 -62 49\\r\\n1 59 78\\r\\n2 85 72\\r\\n2 28 76\\r\\n2 46 -91\\r\\n2 6 32\\r\\n2 -16 -59\\r\\n1 40 -53\\r\\n2 -6 87\\r\\n2 -79 -58\\r\\n2 -12 25\\r\\n2 73 49\\r\\n1 57 -42\\r\\n2 12 19\\r\\n1 -60 -5\\r\\n1 -40 -20\\r\\n1 90 35\\r\\n2 10 3\\r\\n2 63 -49\\r\\n1 50 10\\r\\n1 0 77\\r\\n1 92 24\\r\\n1 71 -7\\r\\n2 46 22\\r\\n1 19 81\\r\\n1 -3 -71\\r\\n2 -44 56\\r\\n2 92 34\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}, {'input': '40\\r\\n1 3 3\\r\\n1 3 1\\r\\n1 0 1\\r\\n2 3 0\\r\\n2 6 5\\r\\n2 1 5\\r\\n2 8 3\\r\\n2 0 5\\r\\n2 3 4\\r\\n1 7 6\\r\\n1 1 0\\r\\n1 0 8\\r\\n1 3 7\\r\\n2 4 5\\r\\n2 2 5\\r\\n2 2 0\\r\\n1 7 4\\r\\n2 7 3\\r\\n1 5 0\\r\\n1 4 6\\r\\n1 1 5\\r\\n1 7 8\\r\\n2 7 5\\r\\n1 0 4\\r\\n2 3 8\\r\\n1 1 8\\r\\n1 0 5\\r\\n1 4 8\\r\\n2 8 5\\r\\n1 8 5\\r\\n2 3 6\\r\\n1 8 7\\r\\n2 4 3\\r\\n1 5 2\\r\\n2 2 8\\r\\n2 5 3\\r\\n2 4 0\\r\\n1 4 4\\r\\n1 6 5\\r\\n2 2 7\\r\\n', 'output': ['NO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nNO\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\nYES\\r\\n']}]", "source_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.StringTokenizer;\n\npublic class ConvexHull {\n\tstatic class Point implements Comparable<Point> {\n\t\tint x, y;\n\n\t\tpublic Point(int x, int y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tpublic int compareTo(Point p) {\n\t\t\tif (this.x == p.x)\n\t\t\t\treturn this.y - p.y;\n\t\t\treturn this.x - p.x;\n\t\t}\n\n\t\tpublic String toString() {\n\t\t\treturn \"(\" + x + \",\" + y + \")\";\n\t\t}\n\t}\n\n\tstatic class Line {\n\t\tPoint p1, p2;\n\n\t\tpublic Line(Point p1, Point p2) {\n\t\t\tthis.p1 = p1;\n\t\t\tthis.p2 = p2;\n\t\t}\n\t}\n\n\tstatic class ConvexHull {\n\t\tArrayList<Point> points;\n\t\tArrayList<Line> lines;\n\n\t\tpublic ConvexHull() {\n\t\t\tpoints = new ArrayList<Point>();\n\t\t\tlines = new ArrayList<Line>();\n\t\t}\n\n\t\tpublic void addPoint(Point p) {\n\t\t\tpoints.add(p);\n\t\t}\n\n\t\tpublic void build() {\n\t\t\tCollections.sort(points);\n\t\t\tint n = points.size();\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tPoint p1 = points.get(i);\n\t\t\t\tPoint p2 = points.get((i + 1) % n);\n\t\t\t\tLine l = new Line(p1, p2);\n\t\t\t\tlines.add(l);\n\t\t\t}\n\t\t}\n\n\t\tpublic boolean isInside(Point p) {\n\t\t\tint n = lines.size();\n\t\t\tint cnt = 0;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tPoint p1 = lines.get(i).p1;\n\t\t\t\tPoint p2 = lines.get(i).p2;\n\t\t\t\tif (p1.x == p2.x) {\n\t\t\t\t\tif (p1.x == p.x) {\n\t\t\t\t\t\tif (p1.y <= p.y && p.y <= p2.y)\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (p.x < p1.x + (p2.x - p1.x) * (p.y - p1.y)\n\t\t\t\t\t\t\t/ (p2.y - p1.y))\n\t\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cnt % 2 == 0)\n\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(\n\t\t\t\tSystem.in));\n\t\tint q = Integer.parseInt(br.readLine());\n\t\tConvexHull ch = new ConvexHull();\n\t\tfor (int i = 0; i < q; i++) {\n\t\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n\t\t\tint t = Integer.parseInt(st.nextToken());\n\t\t\tint x = Integer.parseInt(st.nextToken());\n\t\t\tint y = Integer.parseInt(st.nextToken());\n\t\t\tPoint p = new Point(x, y);\n\t\t\tif (t == 1)\n\t\t\t\tch.addPoint(p);\n\t\t\telse {\n\t\t\t\tch.build();\n\t\t\t\tif (ch.isInside(p))\n\t\t\t\t\tSystem.out.println(\"YES\");\n\t\t\t\telse\n\t\t\t\t\tSystem.out.println(\"NO\");\n\t\t\t}\n\t\t}\n\t}\n}\n"}
{"src_uid": "560d70425c765c325f412152c8124d2d", "id": 120, "lang_cluster": "java", "lang": "Java 11", "difficulty": 2200, "testcases": "[{'input': '3 3 2\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['0']}, {'input': '4 2 2\\r\\n1 2\\r\\n3 4\\r\\n', 'output': ['0']}, {'input': '4 0 2\\r\\n', 'output': ['1']}, {'input': '4 0 3\\r\\n', 'output': ['1']}, {'input': '8 3 4\\r\\n1 4\\r\\n4 8\\r\\n8 1\\r\\n', 'output': ['1']}, {'input': '8 3 2\\r\\n1 4\\r\\n4 8\\r\\n8 1\\r\\n', 'output': ['2']}, {'input': '8 3 3\\r\\n1 4\\r\\n4 8\\r\\n8 1\\r\\n', 'output': ['1']}, {'input': '8 0 3\\r\\n', 'output': ['3']}, {'input': '50 0 50\\r\\n', 'output': ['24']}, {'input': '50 0 2\\r\\n', 'output': ['24']}, {'input': '50 0 100\\r\\n', 'output': ['24']}, {'input': '100 0 1\\r\\n', 'output': ['98']}, {'input': '3289 0 2\\r\\n', 'output': ['1644']}, {'input': '1000000 0 1\\r\\n', 'output': ['999998']}, {'input': '1000000 0 2\\r\\n', 'output': ['499999']}, {'input': '1000000 0 1000000\\r\\n', 'output': ['499999']}, {'input': '1000000 0 100\\r\\n', 'output': ['499999']}, {'input': '999999 0 1\\r\\n', 'output': ['999997']}, {'input': '999999 0 2\\r\\n', 'output': ['499999']}, {'input': '999999 0 999999\\r\\n', 'output': ['499999']}, {'input': '102 1 1\\r\\n23 58\\r\\n', 'output': ['99']}, {'input': '102 1 2\\r\\n1 62\\r\\n', 'output': ['49']}, {'input': '102 1 10000\\r\\n66 45\\r\\n', 'output': ['49']}, {'input': '1000000 1 1\\r\\n663349 495214\\r\\n', 'output': ['999997']}, {'input': '1000000 1 2\\r\\n998708 47343\\r\\n', 'output': ['499998']}, {'input': '1000000 1 5\\r\\n789076 458264\\r\\n', 'output': ['499998']}, {'input': '11 5 1\\r\\n8 11\\r\\n11 2\\r\\n2 5\\r\\n5 7\\r\\n8 2\\r\\n', 'output': ['5']}, {'input': '11 5 2\\r\\n1 6\\r\\n6 7\\r\\n7 2\\r\\n2 11\\r\\n2 1\\r\\n', 'output': ['2']}, {'input': '11 5 3\\r\\n2 7\\r\\n7 9\\r\\n9 8\\r\\n8 3\\r\\n8 7\\r\\n', 'output': ['2']}, {'input': '11 5 4\\r\\n9 8\\r\\n8 4\\r\\n4 1\\r\\n1 10\\r\\n8 1\\r\\n', 'output': ['1']}, {'input': '11 5 5\\r\\n10 8\\r\\n8 7\\r\\n7 11\\r\\n11 6\\r\\n10 7\\r\\n', 'output': ['1']}, {'input': '11 5 6\\r\\n10 1\\r\\n1 8\\r\\n8 7\\r\\n7 3\\r\\n10 7\\r\\n', 'output': ['1']}, {'input': '3 2 1\\r\\n1 2\\r\\n2 3\\r\\n', 'output': ['0']}, {'input': '2 0 1\\r\\n', 'output': ['0']}, {'input': '1 0 1\\r\\n', 'output': ['0']}, {'input': '3 0 1\\r\\n', 'output': ['1']}, {'input': '4 0 1\\r\\n', 'output': ['2']}, {'input': '4 1 1\\r\\n1 2\\r\\n', 'output': ['1']}, {'input': '4 2 1\\r\\n1 2\\r\\n3 4\\r\\n', 'output': ['0']}, {'input': '4 3 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n', 'output': ['0']}, {'input': '2 1 1\\r\\n1 2\\r\\n', 'output': ['0']}, {'input': '5 0 1\\r\\n', 'output': ['3']}, {'input': '5 1 1\\r\\n1 2\\r\\n', 'output': ['2']}, {'input': '5 2 1\\r\\n1 2\\r\\n2 3\\r\\n', 'output': ['1']}, {'input': '5 2 1\\r\\n1 2\\r\\n3 4\\r\\n', 'output': ['1']}, {'input': '5 3 1\\r\\n1 2\\r\\n2 3\\r\\n4 5\\r\\n', 'output': ['0']}, {'input': '10 0 1\\r\\n', 'output': ['8']}]", "source_code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n\n\tstatic int n, m, k;\n\tstatic int[][] g;\n\tstatic int[] cnt;\n\tstatic int[] sz;\n\tstatic int[] par;\n\tstatic int[] d;\n\tstatic int[] q;\n\tstatic int qh, qt;\n\tstatic int[] ans;\n\tstatic int[][] dp;\n\tstatic int[][] dp2;\n\tstatic int[][] dp3;\n\tstatic int[][] dp4;\n\tstatic int[][] dp5;\n\tstatic int[][] dp6;\n\tstatic int[][] dp7;\n\tstatic int[][] dp8;\n\tstatic int[][] dp9;\n\tstatic int[][] dp10;\n\tstatic int[][] dp11;\n\tstatic int[][] dp12;\n\tstatic int[][] dp13;\n\tstatic int[][] dp14;\n\tstatic int[][] dp15;\n\tstatic int[][] dp16;\n\tstatic int[][] dp17;\n\tstatic int[][] dp18;\n\tstatic int[][] dp19;\n\tstatic int[][] dp20;\n\tstatic int[][] dp21;\n\tstatic int[][] dp22;\n\tstatic int[][] dp23;\n\tstatic int[][] dp24;\n\tstatic int[][] dp25;\n\tstatic int[][] dp26;\n\tstatic int[][] dp27;\n\tstatic int[][] dp28;\n\tstatic int[][] dp29;\n\tstatic int[][] dp30;\n\tstatic int[][] dp31;\n\tstatic int[][] dp32;\n\tstatic int[][] dp33;\n\tstatic int[][] dp34;\n\tstatic int[][] dp35;\n\tstatic int[][] dp36;\n\tstatic int[][] dp37;\n\tstatic int[][] dp38;\n\tstatic int[][] dp39;\n\tstatic int[][] dp40;\n\tstatic int[][] dp41;\n\tstatic int[][] dp42;\n\tstatic int[][] dp43;\n\tstatic int[][] dp44;\n\tstatic int[][] dp45;\n\tstatic int[][] dp46;\n\tstatic int[][] dp47;\n\tstatic int[][] dp48;\n\tstatic int[][] dp49;\n\tstatic int[][] dp50;\n\tstatic int[][] dp51;\n\tstatic int[][] dp52;\n\tstatic int[][] dp53;\n\tstatic int[][] dp54;\n\tstatic int[][] dp55;\n\tstatic int[][] dp56;\n\tstatic int[][] dp57;\n\tstatic int[][] dp58;\n\tstatic int[][] dp59;\n\tstatic int[][] dp60;\n\tstatic int[][] dp61;\n\tstatic int[][] dp62;\n\tstatic int[][] dp63;\n\tstatic int[][] dp64;\n\tstatic int[][] dp65;\n\tstatic int[][] dp66;\n\tstatic int[][] dp67;\n\tstatic int[][] dp68;\n\tstatic int[][] dp69;\n\tstatic int[][] dp70;\n\tstatic int[][] dp71;\n\tstatic int[][] dp72;\n\tstatic int[][] dp73;\n\tstatic int[][] dp74;\n\tstatic int[][] dp75;\n\tstatic int[][] dp76;\n\tstatic int[][] dp77;\n\tstatic int[][] dp78;\n\tstatic int[][] dp79;\n\tstatic int[][] dp80;\n\tstatic int[][] dp81;\n\tstatic int[][] dp82;\n\tstatic int[][] dp83;\n\tstatic int[][] dp84;\n\tstatic int[][] dp85;\n\tstatic int[][] dp86;\n\tstatic int[][] dp87;\n\tstatic int[][] dp88;\n\tstatic int[][] dp89;\n\tstatic int[][] dp90;\n\tstatic int[][] dp91;\n\tstatic int[][] dp92;\n\tstatic int[][] dp93;\n\tstatic int[][] dp94;\n\tstatic int[][] dp95;\n\tstatic int[][] dp96;\n\tstatic int[][] dp97;\n\tstatic int[][] dp98;\n\tstatic int[][] dp99;\n\tstatic int[][] dp100;\n\tstatic int[][] dp101;\n\tstatic int[][] dp102;\n\tstatic int[][] dp103;\n\tstatic int[][] dp104;\n\tstatic int[][] dp105;\n\tstatic int[][] dp106;\n\tstatic int[][] dp107;\n\tstatic int[][] dp108;\n\tstatic int[][] dp109;\n\tstatic int[][] dp110;\n\tstatic int[][] dp111;\n\tstatic int[][] dp112;\n\tstatic int[][] dp113;\n\tstatic int[][] dp114;\n\tstatic int[][] dp115;\n\tstatic int[][] dp116;\n\tstatic int[][] dp117;\n\tstatic int[][] dp118;\n\tstatic int[][] dp119;\n\tstatic int[][] dp120;\n\tstatic int[][] dp121;\n\tstatic int[][] dp122;\n\tstatic int[][] dp123;\n\tstatic int[][] dp124;\n\tstatic int[][] dp125;\n\tstatic int[][] dp126;\n\tstatic int[][] dp127;\n\tstatic int[][] dp128;\n\tstatic int[][] dp129;\n\tstatic int[][] dp130;\n\tstatic int[][] dp131;\n\tstatic int[][] dp132;\n\tstatic int[][] dp133;\n\tstatic int[][] dp134;\n\tstatic int[][] dp135;\n\tstatic int[][] dp136;\n\tstatic int[][] dp137;\n\tstatic int[][] dp138;\n\tstatic int[][] dp139;\n\tstatic int[][] dp140;\n\tstatic int[][] dp141;\n\tstatic int[][] dp142;\n\tstatic int[][] dp143;\n\tstatic int[][] dp144;\n\tstatic int[][] dp145;\n\tstatic int[][] dp146;\n\tstatic int[][] dp147;\n\tstatic int[][] dp148;\n\tstatic int[][] dp149;\n\tstatic int[][] dp150;\n\tstatic int[][] dp151;\n\tstatic int[][] dp152;\n\tstatic int[][] dp153;\n\tstatic int[][] dp154;\n\tstatic int[][] dp155;\n\tstatic int[][] dp156;\n\tstatic int[][] dp157;\n\tstatic int[][] dp158;\n\tstatic int[][] dp159;\n\tstatic int[][] dp160;\n\tstatic int[][] dp161;\n\tstatic int[][] dp162;\n\tstatic int[][] dp163;\n\tstatic int[][] dp164;\n\tstatic int[][] dp165;\n\tstatic int[][] dp166;\n\tstatic int[][] dp167;\n\tstatic int[][] dp168;\n\tstatic int[][] dp169;\n\tstatic int[][] dp170;\n\tstatic int[][] dp171;\n\tstatic int[][] dp172;\n\tstatic int"}
{"src_uid": "6cfd3b0a403212ec68bac1667bce9ef1", "id": 121, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1300, "testcases": "[{'input': '6\\r\\n+ 12001\\r\\n- 12001\\r\\n- 1\\r\\n- 1200\\r\\n+ 1\\r\\n+ 7\\r\\n', 'output': ['3']}, {'input': '2\\r\\n- 1\\r\\n- 2\\r\\n', 'output': ['2']}, {'input': '2\\r\\n+ 1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '5\\r\\n+ 1\\r\\n- 1\\r\\n+ 2\\r\\n+ 3\\r\\n- 4\\r\\n', 'output': ['3']}, {'input': '3\\r\\n- 1\\r\\n- 2\\r\\n- 3\\r\\n', 'output': ['3']}, {'input': '4\\r\\n+ 1\\r\\n+ 2\\r\\n- 1\\r\\n+ 3\\r\\n', 'output': ['2']}, {'input': '6\\r\\n+ 1\\r\\n+ 2\\r\\n- 1\\r\\n+ 3\\r\\n- 2\\r\\n+ 4\\r\\n', 'output': ['2']}, {'input': '3\\r\\n+ 1\\r\\n+ 2\\r\\n- 3\\r\\n', 'output': ['3']}, {'input': '3\\r\\n- 1\\r\\n+ 2\\r\\n- 2\\r\\n', 'output': ['1']}, {'input': '4\\r\\n- 1\\r\\n- 2\\r\\n+ 3\\r\\n+ 4\\r\\n', 'output': ['2']}, {'input': '1\\r\\n+ 1\\r\\n', 'output': ['1']}, {'input': '1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '3\\r\\n- 1\\r\\n+ 1\\r\\n- 1\\r\\n', 'output': ['1']}, {'input': '10\\r\\n+ 1\\r\\n+ 2\\r\\n+ 3\\r\\n+ 4\\r\\n+ 5\\r\\n+ 6\\r\\n+ 7\\r\\n+ 8\\r\\n+ 9\\r\\n+ 10\\r\\n', 'output': ['10']}, {'input': '5\\r\\n+ 5\\r\\n+ 4\\r\\n- 4\\r\\n- 5\\r\\n+ 5\\r\\n', 'output': ['2']}, {'input': '50\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n+ 100\\r\\n- 100\\r\\n', 'output': ['1']}, {'input': '10\\r\\n- 8\\r\\n- 4\\r\\n+ 8\\r\\n+ 10\\r\\n+ 6\\r\\n- 8\\r\\n+ 9\\r\\n- 2\\r\\n- 7\\r\\n+ 4\\r\\n', 'output': ['5']}, {'input': '20\\r\\n+ 3\\r\\n- 3\\r\\n- 2\\r\\n+ 2\\r\\n+ 3\\r\\n- 5\\r\\n- 1\\r\\n+ 1\\r\\n- 3\\r\\n+ 4\\r\\n- 1\\r\\n+ 1\\r\\n+ 3\\r\\n- 3\\r\\n+ 5\\r\\n- 2\\r\\n- 1\\r\\n+ 2\\r\\n+ 1\\r\\n- 5\\r\\n', 'output': ['4']}, {'input': '50\\r\\n+ 4\\r\\n+ 5\\r\\n+ 3\\r\\n+ 2\\r\\n- 2\\r\\n- 3\\r\\n- 4\\r\\n+ 3\\r\\n+ 2\\r\\n- 3\\r\\n+ 4\\r\\n- 2\\r\\n- 4\\r\\n+ 2\\r\\n+ 3\\r\\n- 3\\r\\n- 5\\r\\n- 1\\r\\n+ 4\\r\\n+ 5\\r\\n- 5\\r\\n+ 3\\r\\n- 4\\r\\n- 3\\r\\n- 2\\r\\n+ 4\\r\\n+ 3\\r\\n+ 2\\r\\n- 2\\r\\n- 4\\r\\n+ 5\\r\\n+ 1\\r\\n+ 4\\r\\n+ 2\\r\\n- 2\\r\\n+ 2\\r\\n- 3\\r\\n- 5\\r\\n- 4\\r\\n- 1\\r\\n+ 5\\r\\n- 2\\r\\n- 5\\r\\n+ 5\\r\\n+ 3\\r\\n- 3\\r\\n+ 1\\r\\n+ 3\\r\\n+ 2\\r\\n- 1\\r\\n', 'output': ['5']}, {'input': '10\\r\\n- 2\\r\\n+ 1\\r\\n- 1\\r\\n+ 2\\r\\n- 2\\r\\n+ 2\\r\\n+ 1\\r\\n- 1\\r\\n- 2\\r\\n+ 1\\r\\n', 'output': ['2']}, {'input': '50\\r\\n+ 1\\r\\n+ 2\\r\\n+ 3\\r\\n+ 4\\r\\n+ 5\\r\\n+ 6\\r\\n+ 7\\r\\n+ 8\\r\\n+ 9\\r\\n+ 10\\r\\n+ 11\\r\\n+ 12\\r\\n+ 13\\r\\n+ 14\\r\\n+ 15\\r\\n+ 16\\r\\n+ 17\\r\\n+ 18\\r\\n+ 19\\r\\n+ 20\\r\\n+ 21\\r\\n+ 22\\r\\n+ 23\\r\\n+ 24\\r\\n+ 25\\r\\n+ 26\\r\\n+ 27\\r\\n+ 28\\r\\n+ 29\\r\\n+ 30\\r\\n+ 31\\r\\n+ 32\\r\\n+ 33\\r\\n+ 34\\r\\n+ 35\\r\\n+ 36\\r\\n+ 37\\r\\n+ 38\\r\\n+ 39\\r\\n+ 40\\r\\n+ 41\\r\\n+ 42\\r\\n+ 43\\r\\n+ 44\\r\\n+ 45\\r\\n+ 46\\r\\n+ 47\\r\\n+ 48\\r\\n+ 49\\r\\n+ 50\\r\\n', 'output': ['50']}, {'input': '50\\r\\n- 1\\r\\n- 2\\r\\n- 3\\r\\n- 4\\r\\n- 5\\r\\n- 6\\r\\n- 7\\r\\n- 8\\r\\n- 9\\r\\n- 10\\r\\n- 11\\r\\n- 12\\r\\n- 13\\r\\n- 14\\r\\n- 15\\r\\n- 16\\r\\n- 17\\r\\n- 18\\r\\n- 19\\r\\n- 20\\r\\n- 21\\r\\n- 22\\r\\n- 23\\r\\n- 24\\r\\n- 25\\r\\n- 26\\r\\n- 27\\r\\n- 28\\r\\n- 29\\r\\n- 30\\r\\n- 31\\r\\n- 32\\r\\n- 33\\r\\n- 34\\r\\n- 35\\r\\n- 36\\r\\n- 37\\r\\n- 38\\r\\n- 39\\r\\n- 40\\r\\n- 41\\r\\n- 42\\r\\n- 43\\r\\n- 44\\r\\n- 45\\r\\n- 46\\r\\n- 47\\r\\n- 48\\r\\n- 49\\r\\n- 50\\r\\n', 'output': ['50']}]", "source_code": "n = int(input())\n\nvisitors = set()\n\nfor i in range(n):\n    event = input().split()\n    if event[0] == '+':\n        visitors.add(event[1])\n    else:\n        visitors.remove(event[1])\n\nprint(len(visitors))\n"}
{"src_uid": "88d56c1e3a7ffa94354ce0c70d8e958f", "id": 122, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1300, "testcases": "[{'input': '24\\r\\n17:30\\r\\n', 'output': ['17:30\\r\\n']}, {'input': '12\\r\\n17:30\\r\\n', 'output': ['07:30\\r\\n']}, {'input': '24\\r\\n99:99\\r\\n', 'output': ['09:09\\r\\n']}, {'input': '12\\r\\n05:54\\r\\n', 'output': ['05:54\\r\\n']}, {'input': '12\\r\\n00:05\\r\\n', 'output': ['01:05\\r\\n']}, {'input': '24\\r\\n23:80\\r\\n', 'output': ['23:00\\r\\n']}, {'input': '24\\r\\n73:16\\r\\n', 'output': ['03:16\\r\\n']}, {'input': '12\\r\\n03:77\\r\\n', 'output': ['03:07\\r\\n']}, {'input': '12\\r\\n47:83\\r\\n', 'output': ['07:03\\r\\n']}, {'input': '24\\r\\n23:88\\r\\n', 'output': ['23:08\\r\\n']}, {'input': '24\\r\\n51:67\\r\\n', 'output': ['01:07\\r\\n']}, {'input': '12\\r\\n10:33\\r\\n', 'output': ['10:33\\r\\n']}, {'input': '12\\r\\n00:01\\r\\n', 'output': ['01:01\\r\\n']}, {'input': '12\\r\\n07:74\\r\\n', 'output': ['07:04\\r\\n']}, {'input': '12\\r\\n00:60\\r\\n', 'output': ['01:00\\r\\n']}, {'input': '24\\r\\n08:32\\r\\n', 'output': ['08:32\\r\\n']}, {'input': '24\\r\\n42:59\\r\\n', 'output': ['02:59\\r\\n']}, {'input': '24\\r\\n19:87\\r\\n', 'output': ['19:07\\r\\n']}, {'input': '24\\r\\n26:98\\r\\n', 'output': ['06:08\\r\\n']}, {'input': '12\\r\\n12:91\\r\\n', 'output': ['12:01\\r\\n']}, {'input': '12\\r\\n11:30\\r\\n', 'output': ['11:30\\r\\n']}, {'input': '12\\r\\n90:32\\r\\n', 'output': ['10:32\\r\\n']}, {'input': '12\\r\\n03:69\\r\\n', 'output': ['03:09\\r\\n']}, {'input': '12\\r\\n33:83\\r\\n', 'output': ['03:03\\r\\n']}, {'input': '24\\r\\n10:45\\r\\n', 'output': ['10:45\\r\\n']}, {'input': '24\\r\\n65:12\\r\\n', 'output': ['05:12\\r\\n']}, {'input': '24\\r\\n22:64\\r\\n', 'output': ['22:04\\r\\n']}, {'input': '24\\r\\n48:91\\r\\n', 'output': ['08:01\\r\\n']}, {'input': '12\\r\\n02:51\\r\\n', 'output': ['02:51\\r\\n']}, {'input': '12\\r\\n40:11\\r\\n', 'output': ['10:11\\r\\n']}, {'input': '12\\r\\n02:86\\r\\n', 'output': ['02:06\\r\\n']}, {'input': '12\\r\\n99:96\\r\\n', 'output': ['09:06\\r\\n']}, {'input': '24\\r\\n19:24\\r\\n', 'output': ['19:24\\r\\n']}, {'input': '24\\r\\n55:49\\r\\n', 'output': ['05:49\\r\\n']}, {'input': '24\\r\\n01:97\\r\\n', 'output': ['01:07\\r\\n']}, {'input': '24\\r\\n39:68\\r\\n', 'output': ['09:08\\r\\n']}, {'input': '24\\r\\n24:00\\r\\n', 'output': ['04:00\\r\\n']}, {'input': '12\\r\\n91:00\\r\\n', 'output': ['01:00\\r\\n']}, {'input': '24\\r\\n00:30\\r\\n', 'output': ['00:30\\r\\n']}, {'input': '12\\r\\n13:20\\r\\n', 'output': ['03:20\\r\\n']}, {'input': '12\\r\\n13:00\\r\\n', 'output': ['03:00\\r\\n']}, {'input': '12\\r\\n42:35\\r\\n', 'output': ['02:35\\r\\n']}, {'input': '12\\r\\n20:00\\r\\n', 'output': ['10:00\\r\\n']}, {'input': '12\\r\\n21:00\\r\\n', 'output': ['01:00\\r\\n']}, {'input': '24\\r\\n10:10\\r\\n', 'output': ['10:10\\r\\n']}, {'input': '24\\r\\n30:40\\r\\n', 'output': ['00:40\\r\\n']}, {'input': '24\\r\\n12:00\\r\\n', 'output': ['12:00\\r\\n']}, {'input': '12\\r\\n10:60\\r\\n', 'output': ['10:00\\r\\n']}, {'input': '24\\r\\n30:00\\r\\n', 'output': ['00:00\\r\\n']}, {'input': '24\\r\\n34:00\\r\\n', 'output': ['04:00\\r\\n']}, {'input': '12\\r\\n22:00\\r\\n', 'output': ['02:00\\r\\n']}, {'input': '12\\r\\n20:20\\r\\n', 'output': ['10:20\\r\\n']}]", "source_code": "import sys\n\ndef main():\n    format = int(input())\n    time = input()\n    if format == 12:\n        if time[0] == '0':\n            time = time[1:]\n            time = '0' + time\n        if time[0] == '1':\n            time = time[1:]\n            time = '1' + time\n        if time[0] == '2':\n            time = time[1:]\n            time = '2' + time\n        if time[0] == '3':\n            time = time[1:]\n            time = '3' + time\n        if time[0] == '4':\n            time = time[1:]\n            time = '4' + time\n        if time[0] == '5':\n            time = time[1:]\n            time = '5' + time\n        if time[0] == '6':\n            time = time[1:]\n            time = '6' + time\n        if time[0] == '7':\n            time = time[1:]\n            time = '7' + time\n        if time[0] == '8':\n            time = time[1:]\n            time = '8' + time\n        if time[0] == '9':\n            time = time[1:]\n            time = '9' + time\n        if time[1] == '0':\n            time = time[0] + '1' + time[2:]\n        if time[1] == '1':\n            time = time[0] + '1' + time[2:]\n        if time[1] == '2':\n            time = time[0] + '2' + time[2:]\n        if time[1] == '3':\n            time = time[0] + '3' + time[2:]\n        if time[1] == '4':\n            time = time[0] + '4' + time[2:]\n        if time[1] == '5':\n            time = time[0] + '5' + time[2:]\n        if time[1] == '6':\n            time = time[0] + '6' + time[2:]\n        if time[1] == '7':\n            time = time[0] + '7' + time[2:]\n        if time[1] == '8':\n            time = time[0] + '8' + time[2:]\n        if time[1] == '9':\n            time = time[0] + '9' + time[2:]\n        if time[3] == '0':\n            time = time[0] + time[1] + '1' + time[3:]\n        if time[3] == '1':\n            time = time[0] + time[1] + '1' + time[3:]\n        if time[3] == '2':\n            time = time[0] + time[1] + '2' + time[3:]\n        if time[3] == '3':\n            time = time[0] + time[1] + '3' + time[3:]\n        if time[3] == '4':\n            time = time[0] + time[1] + '4' + time[3:]\n        if time[3] == '5':\n            time = time[0] + time[1] + '5' + time[3:]\n        if time[3] == '6':\n            time = time[0] + time[1] + '6' + time[3:]\n        if time[3] == '7':\n            time = time[0] + time[1] + '7' + time[3:]\n        if time[3] == '8':\n            time = time[0] + time[1] + '8' + time[3:]\n        if time[3] == '9':\n            time = time[0] + time[1] + '9' + time[3:]\n    if format == 24:\n        if time[0] == '0':\n            time = time[1:]\n            time = '0' + time\n        if time[0] == '1':\n            time = time[1:]\n            time = '1' + time\n        if time[0] == '2':\n            time = time[1:]\n            time = '2' + time\n        if time[0] == '3':\n            time = time[1:]\n            time = '3' + time\n        if time[0] == '4':\n            time = time[1:]\n            time = '4' + time\n        if time[0] == '5':\n            time = time[1:]\n            time = '5' + time\n        if time[0] == '6':\n            time = time[1:]\n            time = '6' + time\n        if time[0] == '7':\n            time = time[1:]\n            time = '7' + time\n        if time[0] == '8':\n            time = time[1:]\n            time = '8' + time\n        if time[0] == '9':\n            time = time[1:]\n            time = '9' + time\n        if time[1] == '0':\n            time = time[0] + '1' + time[2:]\n        if time[1] == '1':\n            time = time[0] + '1' + time[2:]\n        if time[1] == '2':\n            time = time[0] + '2' + time[2:]\n        if time[1] == '3':\n            time = time[0] + '3' + time[2:]\n        if time[1] == '4':\n            time = time[0] + '4' + time[2:]\n        if time[1] == '5':\n            time = time[0] + '5' + time[2:]\n        if time[1] == '6':\n            time = time[0] + '6' + time[2:]\n        if time[1] == '7':\n            time = time[0] + '7' + time[2:]\n        if time[1] == '8':\n            time = time[0] + '8' + time[2:]\n        if time[1] == '9':\n            time = time[0] + '9' + time[2:]\n        if time[3] == '0':\n            time = time[0] + time[1] + '1' + time[3:]\n        if time[3] == '1':\n            time = time[0] + time[1] + '1' + time[3:]\n        if time[3] == '2':\n            time = time[0] + time[1] + '2' + time[3:]\n        if time[3] == '3':\n            time = time[0] + time[1] + '3' + time[3:]\n        if time[3] == '4':\n            time = time[0] + time[1] + '4' + time[3:]\n        if time[3] == '5':\n            time = time[0] + time[1] + '5' + time[3:]\n        if time[3] == '6':\n            time = time[0] + time[1] + '6' + time[3:]\n        if time[3] == '7':\n            time = time[0] + time[1] + '7' + time[3:]\n        if time[3] == '8':\n            time = time[0] + time[1] + '8' + time[3:]\n        if time[3] == '9':\n            time = time[0] + time[1] + '9' + time[3:]\n    print(time)\n\nif __name__ == '__main__':\n    main()\n"}
{"src_uid": "54c748dd983b6a0ea1af1153d08f1c01", "id": 123, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1100, "testcases": "[{'input': '1\\r\\n.\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\nL\\r\\n', 'output': ['0\\r\\n']}, {'input': '1\\r\\nR\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\nL.\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\nRL\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n..\\r\\n', 'output': ['2\\r\\n']}, {'input': '6\\r\\n..L.RL\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\nLR\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n.R\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\nR.\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n.L\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\nRLR\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\nLRL\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n.L.R.\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n.R.L.\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\nRL.RL\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\nL.R\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\nR..\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n..RL.\\r\\n', 'output': ['3\\r\\n']}, {'input': '4\\r\\n.LR.\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\nL..\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "n = int(input())\ns = input()\n\nl = []\nr = []\n\nfor i in range(n):\n    if s[i] == 'L':\n        l.append(i)\n    elif s[i] == 'R':\n        r.append(i)\n\nif len(l) == 0 or len(r) == 0:\n    print(0)\nelse:\n    print(max(l[-1], r[0]) - min(l[-1], r[0]) + 1)\n"}
{"src_uid": "bdd86c8bc54bbac6e2bb5a9d68b6eb1c", "id": 124, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1000, "testcases": "[{'input': '3\\r\\n3 1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n2 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n5 3 3 3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '5\\r\\n6 6 6 6 6\\r\\n', 'output': ['5\\r\\n']}, {'input': '10\\r\\n1 1 2 2 8 8 7 7 9 9\\r\\n', 'output': ['5\\r\\n']}, {'input': '8\\r\\n9 8 7 6 5 4 3 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '15\\r\\n1 2 3 4 5 5 4 3 2 1 1 2 3 4 5\\r\\n', 'output': ['10\\r\\n']}, {'input': '1\\r\\n1\\r\\n', 'output': ['0\\r\\n']}, {'input': '1\\r\\n5000\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n5000 5000 5000 5000\\r\\n', 'output': ['4\\r\\n']}, {'input': '5\\r\\n3366 3461 4 5 4370\\r\\n', 'output': ['3\\r\\n']}, {'input': '10\\r\\n8 2 10 3 4 6 1 7 9 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '10\\r\\n551 3192 3213 2846 3068 1224 3447 1 10 9\\r\\n', 'output': ['7\\r\\n']}, {'input': '15\\r\\n4 1459 12 4281 3241 2748 10 3590 14 845 3518 1721 2 2880 1974\\r\\n', 'output': ['10\\r\\n']}, {'input': '15\\r\\n15 1 8 2 13 11 12 7 3 14 6 10 9 4 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '15\\r\\n2436 2354 4259 1210 2037 2665 700 3578 2880 973 1317 1024 24 3621 4142\\r\\n', 'output': ['15\\r\\n']}, {'input': '30\\r\\n28 1 3449 9 3242 4735 26 3472 15 21 2698 7 4073 3190 10 3 29 1301 4526 22 345 3876 19 12 4562 2535 2 630 18 27\\r\\n', 'output': ['14\\r\\n']}, {'input': '100\\r\\n50 39 95 30 66 78 2169 4326 81 31 74 34 80 40 19 48 97 63 82 6 88 16 21 57 92 77 10 1213 17 93 32 91 38 4375 29 75 44 22 4 45 14 2395 3254 59 3379 2 85 96 8 83 27 94 1512 2960 100 9 73 79 7 25 55 69 90 99 51 87 98 62 18 35 43 4376 4668 28 72 56 4070 61 65 36 54 4106 11 24 15 86 70 71 4087 23 13 76 20 4694 26 4962 4726 37 14 64\\r\\n', 'output': ['18\\r\\n']}, {'input': '100\\r\\n340 14 3275 2283 2673 1107 817 2243 1226 32 2382 3638 4652 418 68 4962 387 764 4647 159 1846 225 2760 4904 3150 403 3 2439 91 4428 92 4705 75 348 1566 1465 69 6 49 4 62 4643 564 1090 3447 1871 2255 139 24 99 2669 969 86 61 4550 158 4537 3993 1589 872 2907 1888 401 80 1825 1483 63 1 2264 4068 4113 2548 41 885 4806 36 67 167 4447 34 1248 2593 82 202 81 1783 1284 4973 16 43 95 7 865 2091 3008 1793 20 947 4912 3604\\r\\n', 'output': ['70\\r\\n']}, {'input': '1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n5000 5000\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n1 2 3 4 5 6 7 1000 10 10\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "n = int(input())\na = list(map(int, input().split()))\n\ncount = 0\nfor i in range(n):\n    if a[i]!= i + 1:\n        count += 1\n\nprint(count)\n"}
{"src_uid": "0937a7e2f912fc094cc4275fd47cd457", "id": 125, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1500, "testcases": "[{'input': '3\\r\\n1 2 1\\r\\n', 'output': ['2\\r\\n1 2 \\r\\n1\\r\\n3 \\r\\n']}, {'input': '5\\r\\n2 3 3 1 1\\r\\n', 'output': ['3\\r\\n4 1 3 \\r\\n2\\r\\n5 2 \\r\\n']}, {'input': '10\\r\\n2 2 2 2 2 2 2 1 2 2\\r\\n', 'output': ['5\\r\\n8 2 4 6 9 \\r\\n5\\r\\n1 3 5 7 10 \\r\\n']}, {'input': '10\\r\\n2 3 3 1 3 1 1 1 2 2\\r\\n', 'output': ['5\\r\\n4 7 1 10 3 \\r\\n5\\r\\n6 8 9 2 5 \\r\\n']}, {'input': '10\\r\\n2 3 2 3 3 1 1 3 1 1\\r\\n', 'output': ['5\\r\\n6 9 1 2 5 \\r\\n5\\r\\n7 10 3 4 8 \\r\\n']}, {'input': '11\\r\\n1 3 1 2 1 2 2 2 1 1 1\\r\\n', 'output': ['6\\r\\n1 5 10 4 7 2 \\r\\n5\\r\\n3 9 11 6 8 \\r\\n']}, {'input': '11\\r\\n54 83 96 75 33 27 36 35 26 22 77\\r\\n', 'output': ['6\\r\\n10 6 8 1 11 3 \\r\\n5\\r\\n9 5 7 4 2 \\r\\n']}, {'input': '11\\r\\n1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['6\\r\\n1 3 5 7 9 11 \\r\\n5\\r\\n2 4 6 8 10 \\r\\n']}, {'input': '2\\r\\n1 1\\r\\n', 'output': ['1\\r\\n1 \\r\\n1\\r\\n2 \\r\\n']}, {'input': '2\\r\\n35 36\\r\\n', 'output': ['1\\r\\n1 \\r\\n1\\r\\n2 \\r\\n']}, {'input': '25\\r\\n1 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 1 2 2 2 1 1 2 2 1\\r\\n', 'output': ['13\\r\\n1 10 17 22 2 5 7 9 13 15 18 20 24 \\r\\n12\\r\\n4 11 21 25 3 6 8 12 14 16 19 23 \\r\\n']}, {'input': '27\\r\\n2 1 1 3 1 2 1 1 3 2 3 1 3 2 1 3 2 3 2 1 2 3 2 2 1 2 1\\r\\n', 'output': ['14\\r\\n2 5 8 15 25 1 10 17 21 24 4 11 16 22 \\r\\n13\\r\\n3 7 12 20 27 6 14 19 23 26 9 13 18 \\r\\n']}, {'input': '30\\r\\n2 2 2 3 4 3 4 4 3 2 3 2 2 4 1 4 2 4 2 2 1 4 3 2 1 3 1 1 4 3\\r\\n', 'output': ['15\\r\\n15 25 28 2 10 13 19 24 6 11 26 5 8 16 22 \\r\\n15\\r\\n21 27 1 3 12 17 20 4 9 23 30 7 14 18 29 \\r\\n']}, {'input': '100\\r\\n3 4 8 10 8 6 4 3 7 7 6 2 3 1 3 10 1 7 9 3 5 5 2 6 2 9 1 7 4 2 4 1 6 1 7 10 2 5 3 7 6 4 6 2 8 8 8 6 6 10 3 7 4 3 4 1 7 9 3 6 3 6 1 4 9 3 8 1 10 1 4 10 7 7 9 5 3 8 10 2 1 10 8 7 10 8 5 3 1 2 1 10 6 1 5 3 3 5 7 2\\r\\n', 'output': ['50\\r\\n14 27 34 63 70 89 94 23 30 44 90 1 13 20 51 59 66 88 97 7 31 53 64 21 38 87 98 11 33 43 49 62 9 18 35 52 73 84 3 45 47 78 86 26 65 4 36 69 79 85 \\r\\n50\\r\\n17 32 56 68 81 91 12 25 37 80 100 8 15 39 54 61 77 96 2 29 42 55 71 22 76 95 6 24 41 48 60 93 10 28 40 57 74 99 5 46 67 83 19 58 75 16 50 72 82 92 \\r\\n']}, {'input': '100\\r\\n85 50 17 89 65 89 5 20 86 26 16 21 85 14 44 31 87 31 6 2 48 67 8 80 79 1 48 36 97 1 5 30 79 50 78 12 2 55 76 100 54 40 26 81 97 96 68 56 87 14 51 17 54 37 52 33 69 62 38 63 74 15 62 78 9 19 67 2 60 58 93 60 18 96 55 48 34 7 79 82 32 58 90 67 20 50 27 15 7 89 98 10 11 15 99 49 4 51 77 52\\r\\n', 'output': ['50\\r\\n26 20 68 7 19 89 65 93 14 62 94 3 73 8 12 43 32 18 56 28 59 15 27 96 34 51 55 41 38 48 82 72 63 5 67 47 61 99 64 33 24 80 13 17 4 90 71 74 45 95 \\r\\n50\\r\\n30 37 97 31 78 23 92 36 50 88 11 52 66 85 10 87 16 81 77 54 42 21 76 2 86 98 100 53 75 70 69 58 60 22 84 57 39 35 25 79 44 1 9 49 6 83 46 29 91 40 \\r\\n']}, {'input': '100\\r\\n2382 7572 9578 1364 2325 2929 7670 5574 2836 2440 6553 1751 929 8785 6894 9373 9308 7338 6380 9541 9951 6785 8993 9942 5087 7544 6582 7139 8458 7424 9759 8199 9464 8817 7625 6200 4955 9373 9500 3062 849 4210 9337 5466 2190 8150 4971 3145 869 5675 1975 161 1998 378 5229 9000 8958 761 358 434 7636 8295 4406 73 375 812 2473 3652 9067 3052 5287 2850 6987 5442 2625 8894 8733 791 9763 5258 8259 9530 2050 7334 2118 2726 8221 5527 8827 1585 8334 8898 6399 6217 7400 2576 5164 9063 6247 9433\\r\\n', 'output': ['50\\r\\n64 59 54 58 66 49 4 12 53 85 5 10 96 86 72 70 48 42 37 25 55 71 44 8 36 99 93 27 15 28 18 30 2 61 46 87 62 29 14 89 92 23 98 17 16 100 39 20 31 24 \\r\\n50\\r\\n52 65 60 78 41 13 90 51 83 45 1 67 75 9 6 40 68 63 47 97 80 74 88 50 94 19 11 22 73 84 95 26 35 7 32 81 91 77 34 76 57 56 69 43 38 33 82 3 79 21 \\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n', 'output': ['2\\r\\n1 3 \\r\\n1\\r\\n2 \\r\\n']}, {'input': '3\\r\\n10 10 10\\r\\n', 'output': ['2\\r\\n1 3 \\r\\n1\\r\\n2 \\r\\n']}, {'input': '3\\r\\n5 10 10\\r\\n', 'output': ['2\\r\\n1 3 \\r\\n1\\r\\n2 \\r\\n']}, {'input': '5\\r\\n6 1 1 1 1\\r\\n', 'output': ['3\\r\\n2 4 1 \\r\\n2\\r\\n3 5 \\r\\n']}, {'input': '5\\r\\n1 100 2 200 3\\r\\n', 'output': ['3\\r\\n1 5 4 \\r\\n2\\r\\n3 2 \\r\\n']}]", "source_code": "n = int(input())\na = list(map(int, input().split()))\na.sort()\n\nx = []\ny = []\n\nfor i in range(n):\n    if len(x) < len(y) + 1:\n        x.append(i + 1)\n    else:\n        y.append(i + 1)\n\nprint(len(x))\nprint(' '.join(map(str, x)))\nprint(len(y))\nprint(' '.join(map(str, y)))\n"}
{"src_uid": "a37df9b239a40473516d1525d56a0da7", "id": 126, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1400, "testcases": "[{'input': '2 3\\r\\nAAB\\r\\nBAA\\r\\n', 'output': ['4\\r\\n']}, {'input': '4 5\\r\\nABABA\\r\\nBCGDG\\r\\nAAAAA\\r\\nYABSA\\r\\n', 'output': ['216\\r\\n']}, {'input': '1 1\\r\\nE\\r\\n', 'output': ['1\\r\\n']}, {'input': '2 2\\r\\nNS\\r\\nPD\\r\\n', 'output': ['4\\r\\n']}, {'input': '3 4\\r\\nPJKD\\r\\nNFJX\\r\\nFGFK\\r\\n', 'output': ['81\\r\\n']}, {'input': '4 5\\r\\nSXFMY\\r\\nATHLM\\r\\nKDDQW\\r\\nZWGDS\\r\\n', 'output': ['1024\\r\\n']}, {'input': '20 14\\r\\nJNFKBBBJYZHWQE\\r\\nLBOKZCPFNKDBJY\\r\\nXKNWGHQHIOXUPF\\r\\nDDNRUKVUGHWMXW\\r\\nMTIZFNAAFEAPHX\\r\\nIXBQOOHEULZYHU\\r\\nMRCSREUEOOMUUN\\r\\nHJTSQWKUFYZDQU\\r\\nGMCMUZCOPRVEIQ\\r\\nXBKKGGJECOBLTH\\r\\nXXHTLXCNJZJUAF\\r\\nVLJRKXXXWMTPKZ\\r\\nPTYMNPTBBCWKAD\\r\\nQYJGOBUBHMEDYE\\r\\nGTKUUVVNKAHTUI\\r\\nZNKXYZPCYLBZFP\\r\\nQCBLJTRMBDWNNE\\r\\nTDOKJOBKEOVNLZ\\r\\nFKZUITYAFJOQIM\\r\\nUWQNSGLXEEIRWF\\r\\n', 'output': ['515139391\\r\\n']}, {'input': '5 14\\r\\nAQRXUQQNSKZPGC\\r\\nDTTKSPFGGVCLPT\\r\\nVLZQWWESCHDTAZ\\r\\nCOKOWDWDRUOMHP\\r\\nXDTRBIZTTCIDGS\\r\\n', 'output': ['124999979\\r\\n']}, {'input': '9 23\\r\\nOILBYKHRGMPENVFNHLSIUOW\\r\\nLPJFHTUQUINAALRDGLSQUXR\\r\\nLYYJJEBNZATAFQWTDZSPUNZ\\r\\nHSJPIQKKWWERJZIEMLCZUKI\\r\\nOJYIEYDGPFWRHCMISJCCUEM\\r\\nLMGKZVFYIVDRTIHBWPCNUTG\\r\\nUBGGNCITVHAIPKXCLTSAULQ\\r\\nOWSAWUOXQDBSXXBHTLSXUVD\\r\\nUGQTIZQPBGMASRQPVPSFUWK\\r\\n', 'output': ['454717784\\r\\n']}, {'input': '25 4\\r\\nLVKG\\r\\nMICU\\r\\nZHKW\\r\\nLFGG\\r\\nOWQO\\r\\nLCQG\\r\\nLVXU\\r\\nOUKB\\r\\nLNQX\\r\\nZJTO\\r\\nOOQX\\r\\nLVQP\\r\\nMFQB\\r\\nMRQV\\r\\nOIQH\\r\\nOPXX\\r\\nXFKU\\r\\nFCQB\\r\\nZPKH\\r\\nLVCH\\r\\nNFCU\\r\\nOVQW\\r\\nOZKU\\r\\nLFHX\\r\\nLPXO\\r\\n', 'output': ['5733\\r\\n']}, {'input': '30 10\\r\\nUTNTGOKZYJ\\r\\nQHOUHNYZVW\\r\\nLTVGHJRZVW\\r\\nMZHYHOLZYJ\\r\\nERYEUEPZYE\\r\\nUZDBFTURYJ\\r\\nRVSMQTIZGW\\r\\nWDJQHMIRYY\\r\\nKCORHQPZYE\\r\\nRRPLFOZZVY\\r\\nJTXMFNNNYJ\\r\\nMVTGGOZZVV\\r\\nEHAFFNUZVF\\r\\nLBRNWJZNYE\\r\\nJVMOHTPZYJ\\r\\nWTARFJLZVV\\r\\nLVJCWOURVW\\r\\nLCLQFJYRVV\\r\\nQVBVGNJRYF\\r\\nNTZGHOLRYE\\r\\nMGQKHOUPYJ\\r\\nRRSSBXPZYJ\\r\\nRYCRGTLZYJ\\r\\nJRDEGNKRVW\\r\\nRZKFGHYRVG\\r\\nMDJBFNIZYG\\r\\nMPLWHXIZYE\\r\\nSRZMHMURVE\\r\\nMTEBBMRZYJ\\r\\nJPJIFOLZYM\\r\\n', 'output': ['919913906\\r\\n']}, {'input': '40 7\\r\\nPNTVVER\\r\\nPAHTQDR\\r\\nRXMJVAS\\r\\nVIQNLYC\\r\\nILPUSVX\\r\\nYJOXQDJ\\r\\nSEFODTO\\r\\nOTJMREL\\r\\nLIQRZGD\\r\\nLBJJPOR\\r\\nRUTYHQO\\r\\nRIWEPBD\\r\\nKQUMFIB\\r\\nISTRRYH\\r\\nXBTOTGK\\r\\nRFQODEY\\r\\nHDSTZTP\\r\\nYCXFAGL\\r\\nAREGRFU\\r\\nLELZUYU\\r\\nGVABDKH\\r\\nFJAMMME\\r\\nACVULXE\\r\\nJHVPJAS\\r\\nAAQNMBX\\r\\nJJGUCXG\\r\\nOQATILQ\\r\\nNEOSHJM\\r\\nHFLWOFM\\r\\nICYEQHY\\r\\nFACGLYP\\r\\nPLLXJEQ\\r\\nDCHXYPB\\r\\nAGDDZJJ\\r\\nLSQRXTN\\r\\nHDQZXIY\\r\\nNAHDDWW\\r\\nQCMXRQN\\r\\nFDUDSZO\\r\\nHKBEVTW\\r\\n', 'output': ['206575993\\r\\n']}, {'input': '2 2\\r\\nAA\\r\\nBB\\r\\n', 'output': ['4\\r\\n']}, {'input': '1 10\\r\\nAAAAAAAAAA\\r\\n', 'output': ['1\\r\\n']}, {'input': '2 8\\r\\nAAAAAAAA\\r\\nBBBBBBBB\\r\\n', 'output': ['256\\r\\n']}, {'input': '10 10\\r\\nAAAAAAAAAA\\r\\nBBBBBBBBBB\\r\\nCCCCCCCCCC\\r\\nDDDDDDDDDD\\r\\nAAAAAAAAAA\\r\\nBBBBBBBBBB\\r\\nCCCCCCCCCC\\r\\nDDDDDDDDDD\\r\\nAAAAAAAAAA\\r\\nBBBBBBBBBB\\r\\n', 'output': ['1048576\\r\\n']}, {'input': '1 20\\r\\nAAAAAAAAAAAAAAAAAAAA\\r\\n', 'output': ['1\\r\\n']}, {'input': '20 1\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\n', 'output': ['7\\r\\n']}, {'input': '5 60\\r\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\r\\nBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\\r\\nCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\\r\\nDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\\r\\nEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\\r\\n', 'output': ['449874206\\r\\n']}, {'input': '50 4\\r\\nAAAA\\r\\nBBBB\\r\\nCCCC\\r\\nDDDD\\r\\nEEEE\\r\\nFFFF\\r\\nGGGG\\r\\nHHHH\\r\\nIIII\\r\\nJJJJ\\r\\nAAAA\\r\\nBBBB\\r\\nCCCC\\r\\nDDDD\\r\\nEEEE\\r\\nFFFF\\r\\nGGGG\\r\\nHHHH\\r\\nIIII\\r\\nJJJJ\\r\\nAAAA\\r\\nBBBB\\r\\nCCCC\\r\\nDDDD\\r\\nEEEE\\r\\nFFFF\\r\\nGGGG\\r\\nHHHH\\r\\nIIII\\r\\nJJJJ\\r\\nAAAA\\r\\nBBBB\\r\\nCCCC\\r\\nDDDD\\r\\nEEEE\\r\\nFFFF\\r\\nGGGG\\r\\nHHHH\\r\\nIIII\\r\\nJJJJ\\r\\nAAAA\\r\\nBBBB\\r\\nCCCC\\r\\nDDDD\\r\\nEEEE\\r\\nFFFF\\r\\nGGGG\\r\\nHHHH\\r\\nIIII\\r\\nJJJJ\\r\\n', 'output': ['10000\\r\\n']}, {'input': '1 100\\r\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\r\\n', 'output': ['1\\r\\n']}, {'input': '100 1\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\nA\\r\\n', 'output': ['1\\r\\n']}, {'input': '100 1\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\nA\\r\\nB\\r\\n', 'output': ['2\\r\\n']}, {'input': '100 1\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nA\\r\\nB\\r\\n', 'output': ['14\\r\\n']}, {'input': '100 1\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nO\\r\\nP\\r\\nQ\\r\\nR\\r\\nS\\r\\nT\\r\\nU\\r\\nV\\r\\nW\\r\\nX\\r\\nY\\r\\nZ\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nO\\r\\nP\\r\\nQ\\r\\nR\\r\\nS\\r\\nT\\r\\nU\\r\\nV\\r\\nW\\r\\nX\\r\\nY\\r\\nZ\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nO\\r\\nP\\r\\nQ\\r\\nR\\r\\nS\\r\\nT\\r\\nU\\r\\nV\\r\\nW\\r\\nX\\r\\nY\\r\\nZ\\r\\nA\\r\\nB\\r\\nC\\r\\nD\\r\\nE\\r\\nF\\r\\nG\\r\\nH\\r\\nI\\r\\nJ\\r\\nK\\r\\nL\\r\\nM\\r\\nN\\r\\nO\\r\\nP\\r\\nQ\\r\\nR\\r\\nS\\r\\nT\\r\\nU\\r\\nV\\r\\n', 'output': ['26\\r\\n']}]", "source_code": "n, m = map(int, input().split())\n\nnames = []\nfor i in range(n):\n    names.append(input())\n\nmod = 1000000007\n\ndef count(name):\n    count = 1\n    for i in range(m):\n        if name[i]!= name[0]:\n            break\n        count *= 2\n    return count % mod\n\ndef count_all():\n    count = 0\n    for name in names:\n        count += count(name)\n    return count % mod\n\nprint(count_all())\n"}
{"src_uid": "9c90974a0bb860a5e180760042fd5045", "id": 127, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1100, "testcases": "[{'input': '3 3\\r\\ncba\\r\\nbcd\\r\\ncbc\\r\\n', 'output': ['abcd']}, {'input': '5 5\\r\\nfcofd\\r\\nooedo\\r\\nafaoa\\r\\nrdcdf\\r\\neofsf\\r\\n', 'output': ['codeforces']}, {'input': '4 4\\r\\nusah\\r\\nusha\\r\\nhasu\\r\\nsuha\\r\\n', 'output': ['ahhasusu']}, {'input': '7 5\\r\\naabcd\\r\\neffgh\\r\\niijkk\\r\\nlmnoo\\r\\npqqrs\\r\\nttuvw\\r\\nxxyyz\\r\\n', 'output': ['bcdeghjlmnprsuvwz']}, {'input': '10 10\\r\\naaaaaaaaaa\\r\\nbccceeeeee\\r\\ncdfffffffe\\r\\ncdfiiiiile\\r\\ncdfjjjjile\\r\\ndddddddile\\r\\nedfkkkkile\\r\\nedddddddde\\r\\ngggggggggg\\r\\nhhhhhhhhhe\\r\\n', 'output': ['b']}, {'input': '15 3\\r\\njhg\\r\\njkn\\r\\njui\\r\\nfth\\r\\noij\\r\\nyuf\\r\\nyfb\\r\\nugd\\r\\nhgd\\r\\noih\\r\\nhvc\\r\\nugg\\r\\nyvv\\r\\ntdg\\r\\nhgf\\r\\n', 'output': ['hkniftjfbctd']}, {'input': '17 19\\r\\nbmzbmweyydiadtlcoue\\r\\ngmdbyfwurpwbpuvhifn\\r\\nuapwyndmhtqvkgkbhty\\r\\ntszotwflegsjzzszfwt\\r\\nzfpnscguemwrczqxyci\\r\\nvdqnkypnxnnpmuduhzn\\r\\noaquudhavrncwfwujpc\\r\\nmiggjmcmkkbnjfeodxk\\r\\ngjgwxtrxingiqquhuwq\\r\\nhdswxxrxuzzfhkplwun\\r\\nfagppcoildagktgdarv\\r\\neusjuqfistulgbglwmf\\r\\ngzrnyxryetwzhlnfewc\\r\\nzmnoozlqatugmdjwgzc\\r\\nfabbkoxyjxkatjmpprs\\r\\nwkdkobdagwdwxsufees\\r\\nrvncbszcepigpbzuzoo\\r\\n', 'output': ['lcorviunqvgblgjfsgmrqxyivyxodhvrjpicbneodxjtfkpolvejqmllqadjwotmbgxrvs']}, {'input': '1 1\\r\\na\\r\\n', 'output': ['a']}, {'input': '2 2\\r\\nzx\\r\\nxz\\r\\n', 'output': ['zxxz']}, {'input': '1 2\\r\\nfg\\r\\n', 'output': ['fg']}, {'input': '2 1\\r\\nh\\r\\nj\\r\\n', 'output': ['hj']}, {'input': '1 3\\r\\niji\\r\\n', 'output': ['j']}, {'input': '3 1\\r\\nk\\r\\np\\r\\nk\\r\\n', 'output': ['p']}, {'input': '2 3\\r\\nmhw\\r\\nbfq\\r\\n', 'output': ['mhwbfq']}, {'input': '3 2\\r\\nxe\\r\\ner\\r\\nwb\\r\\n', 'output': ['xeerwb']}, {'input': '3 7\\r\\nnutuvjg\\r\\ntgqutfn\\r\\nyfjeiot\\r\\n', 'output': ['ntvjggqfnyfjeiot']}, {'input': '5 4\\r\\nuzvs\\r\\namfz\\r\\nwypl\\r\\nxizp\\r\\nfhmf\\r\\n', 'output': ['uzvsamfzwyplxizphm']}, {'input': '8 9\\r\\ntjqrtgrem\\r\\nrwjcfuoey\\r\\nywrjgpzca\\r\\nwabzggojv\\r\\najqmmcclh\\r\\nozilebskd\\r\\nqmgnbmtcq\\r\\nwakptzkjr\\r\\n', 'output': ['mrjcfuyyrjpzabzvalhozilebskdgnbtpzr']}, {'input': '9 3\\r\\njel\\r\\njws\\r\\ntab\\r\\nvyo\\r\\nkgm\\r\\npls\\r\\nabq\\r\\nbjx\\r\\nljt\\r\\n', 'output': ['elwtabvyokgmplabqbxlt']}, {'input': '7 6\\r\\neklgxi\\r\\nxmpzgf\\r\\nxvwcmr\\r\\nrqssed\\r\\nouiqpt\\r\\ndueiok\\r\\nbbuorv\\r\\n', 'output': ['eklgximpzgfvwcmrrqedoiqptdeiokuorv']}, {'input': '14 27\\r\\npzoshpvvjdpmwfoeojapmkxjrnk\\r\\nitoojpcorxjdxrwyewtmmlhjxhx\\r\\ndoyopbwusgsmephixzcilxpskxh\\r\\nygpvepeuxjbnezdrnjfwdhjwjka\\r\\nrfjlbypoalbtjwrpjxzenmeipfg\\r\\nkhjhrtktcnajrnbefhpavxxfnlx\\r\\nvwlwumqpfegjgvoezevqsolaqhh\\r\\npdrvrtzqsoujqfeitkqgtxwckrl\\r\\nxtepjflcxcrfomhqimhimnzfxzg\\r\\nwhkfkfvvjwkmwhfgeovwowshyhw\\r\\nolchgmhiehumivswgtfyhqfagbp\\r\\ntdudrkttpkryvaiepsijuejqvmq\\r\\nmuratfqqdbfpefmhjzercortroh\\r\\nwxkebkzchupxumfizftgqvuwgau\\r\\n', 'output': ['zshdanicdyldybwgclygzrhkayatwxznmicbpvlupfsoewcleploqngsyolceswtyqbpyasmuadbpcehqva']}, {'input': '1 100\\r\\nysijllpanprcrrtvokqmmupuptvawhvnekeybdkzqaduotmkfwybqvytkbjfzyqztmxckizheorvkhtyoohbswcmhknyzlgxordu\\r\\n', 'output': ['g']}, {'input': '2 100\\r\\ngplwoaggwuxzutpwnmxhotbexntzmitmcvnvmuxknwvcrnsagvdojdgaccfbheqojgcqievijxapvepwqolmnjqsbejtnkaifstp\\r\\noictcmphxbrylaarcwpruiastazvmfhlcgticvwhpxyiiqokxcjgwlnfykkqdsfmrfaedzchrfzlwdclqjxvidhomhxqnlmuoowg\\r\\n', 'output': ['rbe']}, {'input': '3 100\\r\\nonmhsoxoexfwavmamoecptondioxdjsoxfuqxkjviqnjukwqjwfadnohueaxrkreycicgxpmogijgejxsprwiweyvwembluwwqhj\\r\\nuofldyjyuhzgmkeurawgsrburovdppzjiyddpzxslhyesvmuwlgdjvzjqqcpubfgxliulyvxxloqyhxspoxvhllbrajlommpghlv\\r\\nvdohhghjlvihrzmwskxfatoodupmnouwyyfarhihxpdnbwrvrysrpxxptdidpqabwbfnxhiziiiqtozqjtnitgepxjxosspsjldo\\r\\n', 'output': ['blkck']}, {'input': '100 1\\r\\na\\r\\nm\\r\\nn\\r\\nh\\r\\na\\r\\nx\\r\\nt\\r\\na\\r\\no\\r\\np\\r\\nj\\r\\nz\\r\\nr\\r\\nk\\r\\nq\\r\\nl\\r\\nb\\r\\nr\\r\\no\\r\\ni\\r\\ny\\r\\ni\\r\\np\\r\\ni\\r\\nt\\r\\nn\\r\\nd\\r\\nc\\r\\nz\\r\\np\\r\\nu\\r\\nn\\r\\nw\\r\\ny\\r\\ng\\r\\ns\\r\\nt\\r\\nm\\r\\nz\\r\\ne\\r\\nv\\r\\ng\\r\\ny\\r\\nj\\r\\nd\\r\\nz\\r\\ny\\r\\na\\r\\nn\\r\\nx\\r\\nk\\r\\nd\\r\\nq\\r\\nn\\r\\nv\\r\\ng\\r\\nk\\r\\ni\\r\\nk\\r\\nf\\r\\na\\r\\nb\\r\\nw\\r\\no\\r\\nu\\r\\nw\\r\\nk\\r\\nk\\r\\nb\\r\\nz\\r\\nu\\r\\ni\\r\\nu\\r\\nv\\r\\ng\\r\\nv\\r\\nx\\r\\ng\\r\\np\\r\\ni\\r\\nz\\r\\ns\\r\\nv\\r\\nq\\r\\ns\\r\\nb\\r\\nw\\r\\ne\\r\\np\\r\\nk\\r\\nt\\r\\np\\r\\nd\\r\\nr\\r\\ng\\r\\nd\\r\\nk\\r\\nm\\r\\nf\\r\\nd\\r\\n', 'output': ['hlc']}, {'input': '100 2\\r\\nhd\\r\\ngx\\r\\nmz\\r\\nbq\\r\\nof\\r\\nst\\r\\nzc\\r\\ndg\\r\\nth\\r\\nba\\r\\new\\r\\nbw\\r\\noc\\r\\now\\r\\nvh\\r\\nqp\\r\\nin\\r\\neh\\r\\npj\\r\\nat\\r\\nnn\\r\\nbr\\r\\nij\\r\\nco\\r\\nlv\\r\\nsa\\r\\ntb\\r\\nbl\\r\\nsr\\r\\nxa\\r\\nbz\\r\\nrp\\r\\nsz\\r\\noi\\r\\nec\\r\\npw\\r\\nhf\\r\\njm\\r\\nwu\\r\\nhq\\r\\nra\\r\\npv\\r\\ntc\\r\\ngv\\r\\nik\\r\\nux\\r\\ntz\\r\\nbf\\r\\nty\\r\\ndk\\r\\nwo\\r\\nor\\r\\nza\\r\\nkv\\r\\nqt\\r\\nfa\\r\\njy\\r\\nbk\\r\\nuv\\r\\ngk\\r\\ncz\\r\\nds\\r\\nie\\r\\noq\\r\\nmf\\r\\nxn\\r\\nql\\r\\nxs\\r\\nfb\\r\\niv\\r\\ncj\\r\\nkn\\r\\nns\\r\\nlg\\r\\nji\\r\\nha\\r\\naj\\r\\ndg\\r\\nfj\\r\\nut\\r\\nsg\\r\\nju\\r\\noc\\r\\nov\\r\\nhe\\r\\nnw\\r\\nbl\\r\\nlp\\r\\nbx\\r\\nnm\\r\\nyq\\r\\ncw\\r\\nov\\r\\nxk\\r\\npg\\r\\noh\\r\\npl\\r\\nuo\\r\\ngf\\r\\nul\\r\\n', 'output': ['dvy']}, {'input': '100 3\\r\\nruy\\r\\nmye\\r\\njgp\\r\\nscn\\r\\nktq\\r\\nalx\\r\\nmvk\\r\\nlpm\\r\\nkry\\r\\norb\\r\\nmpu\\r\\nzcv\\r\\nlge\\r\\nkft\\r\\ndzp\\r\\ntfb\\r\\nhqz\\r\\nuur\\r\\nhry\\r\\nzjx\\r\\ncuo\\r\\nqqc\\r\\ntih\\r\\nenj\\r\\nvnp\\r\\nbwi\\r\\nzzh\\r\\nhkc\\r\\nwdr\\r\\nldh\\r\\nvel\\r\\nizj\\r\\nfhb\\r\\nqrn\\r\\nqpp\\r\\nvzs\\r\\nlhg\\r\\nkee\\r\\nlbq\\r\\nzhy\\r\\nwcl\\r\\nyaa\\r\\nton\\r\\nfly\\r\\nkyw\\r\\nept\\r\\ngwq\\r\\ncoe\\r\\nopd\\r\\neez\\r\\nnmx\\r\\nnjg\\r\\nwhy\\r\\nvel\\r\\nafq\\r\\nnbq\\r\\nulx\\r\\noxs\\r\\nbbo\\r\\nyhx\\r\\nfmz\\r\\nnrg\\r\\nnfm\\r\\njek\\r\\nbeu\\r\\ntya\\r\\nxgs\\r\\nsgg\\r\\nnkq\\r\\nbbv\\r\\nwkd\\r\\ntns\\r\\nfdt\\r\\neox\\r\\nobc\\r\\neab\\r\\nkkj\\r\\noub\\r\\ngji\\r\\nrht\\r\\nozv\\r\\nysk\\r\\nsbt\\r\\nflf\\r\\npbu\\r\\nlxb\\r\\npzs\\r\\nrzh\\r\\ncea\\r\\nkmi\\r\\nuea\\r\\nncc\\r\\nzng\\r\\nvkn\\r\\njhn\\r\\njqw\\r\\nlqc\\r\\nmbt\\r\\nlov\\r\\ngam\\r\\n', 'output': ['tvdiixs']}]", "source_code": "n, m = map(int, input().split())\n\ngrid = [list(input()) for _ in range(n)]\n\nfor i in range(n):\n    for j in range(m):\n        if grid[i][j] in grid[i]:\n            grid[i][j] =''\n\nfor i in range(m):\n    for j in range(n):\n        if grid[j][i] in [row[i] for row in grid]:\n            grid[j][i] =''\n\nprint(''.join([item for sublist in grid for item in sublist if item!='']))\n"}
{"src_uid": "d90da1e932a6aa546bec4e1bd4b1fbec", "id": 128, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1200, "testcases": "[{'input': '3 3\\r\\n1 2 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['6\\r\\n']}, {'input': '3 2\\r\\n2 3 4\\r\\n2 3\\r\\n2 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 4\\r\\n1 1 1 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n10 10 5 1\\r\\n2 1\\r\\n3 1\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 0\\r\\n9 8 2 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 5 9 6\\r\\n3 2\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 1 10 1\\r\\n2 1\\r\\n3 2\\r\\n1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n1 2 8 6\\r\\n1 3\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['15\\r\\n']}, {'input': '4 4\\r\\n9 3 3 1\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n4 3\\r\\n', 'output': ['15\\r\\n']}, {'input': '4 3\\r\\n6 8 10 1\\r\\n2 3\\r\\n1 4\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 5\\r\\n4 10 3 9\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n2 4\\r\\n4 3\\r\\n', 'output': ['17\\r\\n']}, {'input': '4 2\\r\\n2 9 8 4\\r\\n1 3\\r\\n4 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 3\\r\\n5 3 4 4\\r\\n2 1\\r\\n4 1\\r\\n3 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 6\\r\\n39 15 73 82 37 40\\r\\n2 1\\r\\n5 1\\r\\n1 6\\r\\n2 6\\r\\n6 3\\r\\n4 6\\r\\n', 'output': ['94\\r\\n']}, {'input': '6 7\\r\\n85 2 34 6 83 61\\r\\n1 2\\r\\n2 3\\r\\n4 2\\r\\n4 3\\r\\n1 5\\r\\n4 5\\r\\n6 3\\r\\n', 'output': ['42\\r\\n']}, {'input': '6 8\\r\\n64 44 5 31 14 16\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n2 5\\r\\n3 5\\r\\n6 1\\r\\n6 3\\r\\n6 4\\r\\n', 'output': ['85\\r\\n']}, {'input': '6 8\\r\\n36 19 99 8 52 77\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n4 3\\r\\n1 5\\r\\n5 4\\r\\n1 6\\r\\n6 2\\r\\n', 'output': ['132\\r\\n']}, {'input': '6 5\\r\\n59 69 52 38 93 53\\r\\n4 2\\r\\n1 5\\r\\n6 1\\r\\n4 6\\r\\n5 6\\r\\n', 'output': ['205\\r\\n']}, {'input': '6 11\\r\\n95 81 74 94 60 69\\r\\n3 2\\r\\n1 4\\r\\n4 2\\r\\n3 4\\r\\n1 5\\r\\n5 2\\r\\n5 3\\r\\n1 6\\r\\n2 6\\r\\n3 6\\r\\n4 6\\r\\n', 'output': ['215\\r\\n']}, {'input': '6 8\\r\\n69 36 41 23 91 35\\r\\n1 2\\r\\n3 1\\r\\n3 2\\r\\n1 4\\r\\n3 4\\r\\n3 5\\r\\n5 4\\r\\n4 6\\r\\n', 'output': ['133\\r\\n']}, {'input': '6 6\\r\\n33 76 98 59 4 69\\r\\n1 2\\r\\n3 2\\r\\n5 1\\r\\n2 5\\r\\n4 5\\r\\n6 5\\r\\n', 'output': ['113\\r\\n']}, {'input': '6 6\\r\\n92 56 15 83 30 28\\r\\n3 1\\r\\n4 1\\r\\n2 5\\r\\n5 4\\r\\n2 6\\r\\n6 3\\r\\n', 'output': ['-1\\r\\n']}, {'input': '6 10\\r\\n17 5 55 24 55 74\\r\\n1 3\\r\\n2 3\\r\\n3 4\\r\\n5 1\\r\\n5 2\\r\\n5 3\\r\\n4 5\\r\\n6 2\\r\\n6 3\\r\\n6 5\\r\\n', 'output': ['115\\r\\n']}, {'input': '3 3\\r\\n1000000 1000000 1000000\\r\\n2 1\\r\\n1 3\\r\\n3 2\\r\\n', 'output': ['3000000\\r\\n']}, {'input': '3 0\\r\\n1 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 3\\r\\n100000 100000 100001\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['300001\\r\\n']}, {'input': '3 3\\r\\n1 1 999999\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['1000001\\r\\n']}, {'input': '3 3\\r\\n999999 1 1\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['1000001\\r\\n']}, {'input': '3 3\\r\\n1000000 1000000 1000000\\r\\n1 2\\r\\n2 3\\r\\n1 3\\r\\n', 'output': ['3000000\\r\\n']}]", "source_code": "n,m=map(int,input().split())\na=list(map(int,input().split()))\nb=[]\nfor i in range(m):\n    b.append(list(map(int,input().split())))\nc=[]\nfor i in range(n):\n    c.append(0)\nfor i in range(m):\n    c[b[i][0]-1]+=1\n    c[b[i][1]-1]+=1\nd=[]\nfor i in range(n):\n    d.append(0)\nfor i in range(n):\n    if c[i]==2:\n        d[i]=1\nfor i in range(n):\n    if d[i]==1:\n        for j in range(i+1,n):\n            if d[j]==1:\n                for k in range(j+1,n):\n                    if d[k]==1:\n                        if a[i]==a[j]==a[k]:\n                            print(a[i]+a[j]+a[k])\n                            exit()\n                        elif a[i]==a[j] or a[i]==a[k] or a[j]==a[k]:\n                            print(a[i]+a[j]+a[k])\n                            exit()\nprint(-1)\n"}
{"src_uid": "138fd96bf5a677a6d59c20f88fd612f1", "id": 129, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1400, "testcases": "[{'input': '5 15 15\\r\\n', 'output': ['11\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '2 3 2\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 99 11\\r\\n', 'output': ['11\\r\\n']}, {'input': '3 254 18\\r\\n', 'output': ['16\\r\\n1\\r\\n1\\r\\n']}, {'input': '4 324 77\\r\\n', 'output': ['74\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '5 315 90\\r\\n', 'output': ['86\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '6 225 59\\r\\n', 'output': ['54\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '7 351 29\\r\\n', 'output': ['23\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '100 913723780421 955988\\r\\n', 'output': ['-1\\r\\n']}, {'input': '200 894176381082 945808\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1000 824905348050 909242\\r\\n', 'output': ['-1\\r\\n']}, {'input': '31000 819461299082 936240\\r\\n', 'output': ['-1\\r\\n']}, {'input': '44000 772772899626 923074\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99999 681508136225 925533\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99976 664640815001 915230\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100000 729199960625 953931\\r\\n', 'output': ['-1\\r\\n']}, {'input': '50 890543266647 943735\\r\\n', 'output': ['-1\\r\\n']}, {'input': '60 817630084499 904288\\r\\n', 'output': ['904229\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '99999 716046078026 946193\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10000 950051796437 984705\\r\\n', 'output': ['-1\\r\\n']}, {'input': '999 992972391401 997478\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 983300308227 991615\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 912219830404 955103\\r\\n', 'output': ['955102\\r\\n1\\r\\n']}, {'input': '3 934371623645 966631\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4 857839030421 926199\\r\\n', 'output': ['-1\\r\\n']}, {'input': '7 897398130730 947317\\r\\n', 'output': ['-1\\r\\n']}, {'input': '60 833021290059 912759\\r\\n', 'output': ['912700\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '1 860113420929 927423\\r\\n', 'output': ['927423\\r\\n']}, {'input': '2 933669982757 966267\\r\\n', 'output': ['966266\\r\\n1\\r\\n']}, {'input': '3 933157932003 966003\\r\\n', 'output': ['966001\\r\\n1\\r\\n1\\r\\n']}, {'input': '4 944626542564 971922\\r\\n', 'output': ['971919\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '7 937519681542 968262\\r\\n', 'output': ['968256\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '100000 1000000000000 1000000\\r\\n', 'output': ['-1\\r\\n']}, {'input': '99999 999999999999 999999\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '11 10 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 5 10\\r\\n', 'output': ['10\\r\\n']}, {'input': '10 3 8\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5 37 10\\r\\n', 'output': ['6\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}, {'input': '5 1 4\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1 1000000000000 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1000000\\r\\n', 'output': ['1000000\\r\\n']}, {'input': '100000 1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100000 1000000000000 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1000000000000 1000000\\r\\n', 'output': ['1000000\\r\\n']}]", "source_code": "n,x,y=map(int,input().split())\nif n==1:\n    if x<=y:\n        print(y)\n    else:\n        print(-1)\nelse:\n    if x<=y:\n        print(y)\n        for i in range(n-1):\n            print(1)\n    else:\n        print(-1)"}
{"src_uid": "b0301a2d79a1ec126511ed769ec0b743", "id": 130, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1500, "testcases": "[{'input': '3 1\\r\\nPetya\\r\\nVasya\\r\\nMasha\\r\\nPetya Vasya\\r\\n', 'output': ['2\\r\\nMasha\\r\\nPetya\\r\\n']}, {'input': '3 0\\r\\nPasha\\r\\nLesha\\r\\nVanya\\r\\n', 'output': ['3\\r\\nLesha\\r\\nPasha\\r\\nVanya\\r\\n']}, {'input': '7 12\\r\\nPasha\\r\\nLesha\\r\\nVanya\\r\\nTaras\\r\\nNikita\\r\\nSergey\\r\\nAndrey\\r\\nPasha Taras\\r\\nPasha Nikita\\r\\nPasha Andrey\\r\\nPasha Sergey\\r\\nLesha Taras\\r\\nLesha Nikita\\r\\nLesha Andrey\\r\\nLesha Sergey\\r\\nVanya Taras\\r\\nVanya Nikita\\r\\nVanya Andrey\\r\\nVanya Sergey\\r\\n', 'output': ['4\\r\\nAndrey\\r\\nNikita\\r\\nSergey\\r\\nTaras\\r\\n']}, {'input': '2 0\\r\\nAndrey\\r\\nTaras\\r\\n', 'output': ['2\\r\\nAndrey\\r\\nTaras\\r\\n']}, {'input': '16 0\\r\\nTaras\\r\\nNikita\\r\\nSergey\\r\\nAndrey\\r\\nRomka\\r\\nAlexey\\r\\nUra\\r\\nDenis\\r\\nEgor\\r\\nVadim\\r\\nAlena\\r\\nOlya\\r\\nVanya\\r\\nBrus\\r\\nJohn\\r\\nAlice\\r\\n', 'output': ['16\\r\\nAlena\\r\\nAlexey\\r\\nAlice\\r\\nAndrey\\r\\nBrus\\r\\nDenis\\r\\nEgor\\r\\nJohn\\r\\nNikita\\r\\nOlya\\r\\nRomka\\r\\nSergey\\r\\nTaras\\r\\nUra\\r\\nVadim\\r\\nVanya\\r\\n']}, {'input': '6 6\\r\\nAlena\\r\\nOlya\\r\\nVanya\\r\\nBrus\\r\\nJohn\\r\\nAlice\\r\\nAlena John\\r\\nAlena Alice\\r\\nOlya John\\r\\nOlya Alice\\r\\nVanya John\\r\\nVanya Alice\\r\\n', 'output': ['4\\r\\nAlena\\r\\nBrus\\r\\nOlya\\r\\nVanya\\r\\n']}, {'input': '7 6\\r\\nAlena\\r\\nOlya\\r\\nVanya\\r\\nBrus\\r\\nJohn\\r\\nAlice\\r\\nMariana\\r\\nAlena John\\r\\nAlena Alice\\r\\nOlya John\\r\\nOlya Alice\\r\\nVanya John\\r\\nVanya Alice\\r\\n', 'output': ['5\\r\\nAlena\\r\\nBrus\\r\\nMariana\\r\\nOlya\\r\\nVanya\\r\\n']}, {'input': '1 0\\r\\nPetr\\r\\n', 'output': ['1\\r\\nPetr\\r\\n']}, {'input': '2 0\\r\\nNgzlPJgFgz\\r\\nQfpagVpWz\\r\\n', 'output': ['2\\r\\nNgzlPJgFgz\\r\\nQfpagVpWz\\r\\n']}, {'input': '2 1\\r\\ncLWdg\\r\\nGoWegdDRp\\r\\nGoWegdDRp cLWdg\\r\\n', 'output': ['1\\r\\nGoWegdDRp\\r\\n']}, {'input': '3 0\\r\\nr\\r\\nyVwqs\\r\\nsdTDerOyhp\\r\\n', 'output': ['3\\r\\nr\\r\\nsdTDerOyhp\\r\\nyVwqs\\r\\n']}, {'input': '3 3\\r\\nvRVatwL\\r\\nWmkUGiYEn\\r\\nuvvsXKXcJ\\r\\nWmkUGiYEn vRVatwL\\r\\nuvvsXKXcJ vRVatwL\\r\\nuvvsXKXcJ WmkUGiYEn\\r\\n', 'output': ['1\\r\\nWmkUGiYEn\\r\\n']}, {'input': '16 11\\r\\njA\\r\\nkyRNTE\\r\\neY\\r\\nToLcqN\\r\\nbnenhMxiK\\r\\nzlkOe\\r\\nXCKZ\\r\\neaQrds\\r\\nqUdInpi\\r\\nKgPQA\\r\\nmQIl\\r\\ninOCWEZHxy\\r\\nyA\\r\\nPIZRMOu\\r\\nXtueKFM\\r\\nfRNwNn\\r\\ninOCWEZHxy qUdInpi\\r\\nKgPQA zlkOe\\r\\ninOCWEZHxy KgPQA\\r\\nfRNwNn XCKZ\\r\\ninOCWEZHxy eY\\r\\nyA mQIl\\r\\ninOCWEZHxy ToLcqN\\r\\nyA KgPQA\\r\\nqUdInpi ToLcqN\\r\\nqUdInpi eaQrds\\r\\nPIZRMOu eY\\r\\n', 'output': ['10\\r\\nKgPQA\\r\\nPIZRMOu\\r\\nToLcqN\\r\\nXCKZ\\r\\nXtueKFM\\r\\nbnenhMxiK\\r\\neaQrds\\r\\njA\\r\\nkyRNTE\\r\\nmQIl\\r\\n']}, {'input': '12 12\\r\\njWuGgOjV\\r\\nWs\\r\\njTZQMyH\\r\\nULp\\r\\nUfsnPRt\\r\\nk\\r\\nbPKrnP\\r\\nW\\r\\nJOaQdgglDG\\r\\nAodc\\r\\ncpRjAUyYIW\\r\\nMrjB\\r\\nbPKrnP ULp\\r\\nk Ws\\r\\ncpRjAUyYIW k\\r\\nULp jTZQMyH\\r\\nbPKrnP jWuGgOjV\\r\\ncpRjAUyYIW jTZQMyH\\r\\nW ULp\\r\\nk jTZQMyH\\r\\nk ULp\\r\\nMrjB ULp\\r\\ncpRjAUyYIW Aodc\\r\\nW k\\r\\n', 'output': ['8\\r\\nAodc\\r\\nJOaQdgglDG\\r\\nMrjB\\r\\nUfsnPRt\\r\\nW\\r\\nWs\\r\\nbPKrnP\\r\\njTZQMyH\\r\\n']}, {'input': '11 17\\r\\njFTNgFBO\\r\\ntZDgmdF\\r\\nIjeDjoj\\r\\nBEMAaYkNb\\r\\nRZRQl\\r\\ntK\\r\\nlNHWt\\r\\nIdG\\r\\nLAbVLYiY\\r\\notOBsWqJuo\\r\\nUoTy\\r\\ntK BEMAaYkNb\\r\\nBEMAaYkNb jFTNgFBO\\r\\nIjeDjoj tZDgmdF\\r\\nRZRQl jFTNgFBO\\r\\nlNHWt tZDgmdF\\r\\nRZRQl tZDgmdF\\r\\nUoTy LAbVLYiY\\r\\nBEMAaYkNb IjeDjoj\\r\\nIdG BEMAaYkNb\\r\\nLAbVLYiY tK\\r\\nLAbVLYiY jFTNgFBO\\r\\nUoTy IjeDjoj\\r\\nlNHWt jFTNgFBO\\r\\nlNHWt BEMAaYkNb\\r\\ntK IjeDjoj\\r\\nUoTy RZRQl\\r\\nBEMAaYkNb tZDgmdF\\r\\n', 'output': ['6\\r\\nIdG\\r\\nIjeDjoj\\r\\nLAbVLYiY\\r\\nRZRQl\\r\\nlNHWt\\r\\notOBsWqJuo\\r\\n']}, {'input': '11 13\\r\\ncZAMfd\\r\\nSWQnweM\\r\\nKlQW\\r\\nWRsnNZT\\r\\nix\\r\\nUC\\r\\nLWqsVHcWec\\r\\nfeb\\r\\ncBy\\r\\ntvk\\r\\nRXDlX\\r\\nfeb SWQnweM\\r\\ncBy WRsnNZT\\r\\nLWqsVHcWec KlQW\\r\\nRXDlX feb\\r\\nLWqsVHcWec cZAMfd\\r\\ncBy UC\\r\\nWRsnNZT SWQnweM\\r\\nRXDlX cBy\\r\\ntvk UC\\r\\ncBy SWQnweM\\r\\nUC KlQW\\r\\nRXDlX KlQW\\r\\nUC WRsnNZT\\r\\n', 'output': ['6\\r\\nKlQW\\r\\nWRsnNZT\\r\\ncZAMfd\\r\\nfeb\\r\\nix\\r\\ntvk\\r\\n']}, {'input': '4 2\\r\\nadQx\\r\\nrJGeodBycK\\r\\ntgPYZk\\r\\ncz\\r\\ncz tgPYZk\\r\\nrJGeodBycK adQx\\r\\n', 'output': ['2\\r\\nadQx\\r\\ncz\\r\\n']}, {'input': '4 2\\r\\noVemoZhjW\\r\\nHspFEry\\r\\nhFO\\r\\njxt\\r\\nhFO HspFEry\\r\\njxt oVemoZhjW\\r\\n', 'output': ['2\\r\\nHspFEry\\r\\njxt\\r\\n']}, {'input': '5 2\\r\\niBrgNFlNXd\\r\\nlnGPIV\\r\\nnb\\r\\nB\\r\\nVgqRcEOG\\r\\nlnGPIV iBrgNFlNXd\\r\\nB iBrgNFlNXd\\r\\n', 'output': ['4\\r\\nB\\r\\nVgqRcEOG\\r\\nlnGPIV\\r\\nnb\\r\\n']}, {'input': '5 1\\r\\nWEYUdpYmZp\\r\\nfhNmMpjr\\r\\nydARivBg\\r\\ncilTtE\\r\\nyeXxkhPzB\\r\\nyeXxkhPzB cilTtE\\r\\n', 'output': ['4\\r\\nWEYUdpYmZp\\r\\ncilTtE\\r\\nfhNmMpjr\\r\\nydARivBg\\r\\n']}, {'input': '6 9\\r\\noySkmhCD\\r\\nUIKWj\\r\\nmHolKkBx\\r\\nQBikssqz\\r\\nZ\\r\\nzoFUJYa\\r\\nZ UIKWj\\r\\nQBikssqz oySkmhCD\\r\\nQBikssqz UIKWj\\r\\nZ oySkmhCD\\r\\nzoFUJYa UIKWj\\r\\nzoFUJYa Z\\r\\nzoFUJYa mHolKkBx\\r\\nzoFUJYa QBikssqz\\r\\nQBikssqz mHolKkBx\\r\\n', 'output': ['3\\r\\nUIKWj\\r\\nmHolKkBx\\r\\noySkmhCD\\r\\n']}, {'input': '6 1\\r\\nuPVIuLBuYM\\r\\nVejWyKCtbN\\r\\nqqjgF\\r\\nulBD\\r\\nDRNzxJU\\r\\nCOzbXWOt\\r\\nulBD qqjgF\\r\\n', 'output': ['5\\r\\nCOzbXWOt\\r\\nDRNzxJU\\r\\nVejWyKCtbN\\r\\nqqjgF\\r\\nuPVIuLBuYM\\r\\n']}, {'input': '7 14\\r\\nFXCT\\r\\nn\\r\\no\\r\\nS\\r\\nMdFuonu\\r\\nmszv\\r\\nbqScOCw\\r\\nS o\\r\\nbqScOCw FXCT\\r\\nMdFuonu o\\r\\no n\\r\\nbqScOCw n\\r\\nmszv S\\r\\nbqScOCw MdFuonu\\r\\nmszv n\\r\\nS FXCT\\r\\nbqScOCw o\\r\\no FXCT\\r\\nmszv MdFuonu\\r\\nmszv FXCT\\r\\nbqScOCw mszv\\r\\n', 'output': ['3\\r\\nFXCT\\r\\nMdFuonu\\r\\nn\\r\\n']}, {'input': '7 6\\r\\nj\\r\\nZ\\r\\nPZNeTyY\\r\\nm\\r\\na\\r\\nUj\\r\\nsuaaSiKcK\\r\\nUj PZNeTyY\\r\\na j\\r\\nPZNeTyY Z\\r\\nPZNeTyY j\\r\\nm PZNeTyY\\r\\nm j\\r\\n', 'output': ['5\\r\\nUj\\r\\nZ\\r\\na\\r\\nm\\r\\nsuaaSiKcK\\r\\n']}, {'input': '8 6\\r\\nU\\r\\nC\\r\\nPEElYwaxf\\r\\nVubTXNI\\r\\nJ\\r\\nIxZUHV\\r\\nhLNFnzmqFE\\r\\nDPPvwuWvmA\\r\\nhLNFnzmqFE IxZUHV\\r\\nIxZUHV C\\r\\nJ PEElYwaxf\\r\\nIxZUHV PEElYwaxf\\r\\nPEElYwaxf C\\r\\nJ VubTXNI\\r\\n', 'output': ['5\\r\\nC\\r\\nDPPvwuWvmA\\r\\nJ\\r\\nU\\r\\nhLNFnzmqFE\\r\\n']}, {'input': '8 12\\r\\nBkgxqAF\\r\\nKhq\\r\\nNpIfk\\r\\nkheqUyDVG\\r\\niRBkHlRpp\\r\\nZDaQY\\r\\nNG\\r\\nqN\\r\\nqN BkgxqAF\\r\\nNpIfk BkgxqAF\\r\\niRBkHlRpp BkgxqAF\\r\\niRBkHlRpp NpIfk\\r\\nNG Khq\\r\\niRBkHlRpp Khq\\r\\nNG ZDaQY\\r\\nNG iRBkHlRpp\\r\\nNG NpIfk\\r\\nqN Khq\\r\\nZDaQY kheqUyDVG\\r\\nNpIfk Khq\\r\\n', 'output': ['3\\r\\nBkgxqAF\\r\\nKhq\\r\\nZDaQY\\r\\n']}, {'input': '9 5\\r\\nRFiow\\r\\naxgvtiBGbx\\r\\ngGBVZtI\\r\\nVWAxrqx\\r\\nmnASVEQI\\r\\ntZHzWGAvXc\\r\\nBeaCYhIRLy\\r\\nhTdUL\\r\\nFJd\\r\\nhTdUL RFiow\\r\\nhTdUL gGBVZtI\\r\\nFJd axgvtiBGbx\\r\\nFJd BeaCYhIRLy\\r\\nhTdUL axgvtiBGbx\\r\\n', 'output': ['7\\r\\nBeaCYhIRLy\\r\\nRFiow\\r\\nVWAxrqx\\r\\naxgvtiBGbx\\r\\ngGBVZtI\\r\\nmnASVEQI\\r\\ntZHzWGAvXc\\r\\n']}, {'input': '9 13\\r\\nYiUXqlBUx\\r\\nQNgYuX\\r\\ndPtyZ\\r\\nITtwRJCv\\r\\nLJ\\r\\nrAG\\r\\nOgxNq\\r\\nsitechE\\r\\nvVAAz\\r\\nOgxNq QNgYuX\\r\\nOgxNq dPtyZ\\r\\nsitechE rAG\\r\\nLJ QNgYuX\\r\\nQNgYuX YiUXqlBUx\\r\\nOgxNq LJ\\r\\nvVAAz OgxNq\\r\\nrAG dPtyZ\\r\\nvVAAz LJ\\r\\nvVAAz ITtwRJCv\\r\\nsitechE LJ\\r\\nrAG YiUXqlBUx\\r\\nsitechE QNgYuX\\r\\n', 'output': ['4\\r\\nITtwRJCv\\r\\nLJ\\r\\nYiUXqlBUx\\r\\ndPtyZ\\r\\n']}, {'input': '9 6\\r\\nfLfek\\r\\nEQPcotnrp\\r\\nCaAlbwoIL\\r\\nVG\\r\\nNAZKIBiKT\\r\\noFy\\r\\njFluh\\r\\nKqHXRNya\\r\\nQSwgobA\\r\\noFy EQPcotnrp\\r\\nKqHXRNya jFluh\\r\\noFy NAZKIBiKT\\r\\njFluh oFy\\r\\njFluh fLfek\\r\\noFy fLfek\\r\\n', 'output': ['7\\r\\nCaAlbwoIL\\r\\nEQPcotnrp\\r\\nKqHXRNya\\r\\nNAZKIBiKT\\r\\nQSwgobA\\r\\nVG\\r\\nfLfek\\r\\n']}, {'input': '9 14\\r\\nmoRNeufngu\\r\\nBSKI\\r\\nzXl\\r\\ngwmIDluW\\r\\nYFn\\r\\nHvasEgl\\r\\nXcAC\\r\\neVP\\r\\nAiOm\\r\\neVP BSKI\\r\\neVP YFn\\r\\nHvasEgl YFn\\r\\neVP XcAC\\r\\nAiOm HvasEgl\\r\\nXcAC YFn\\r\\nzXl moRNeufngu\\r\\neVP zXl\\r\\nHvasEgl BSKI\\r\\nXcAC gwmIDluW\\r\\nXcAC HvasEgl\\r\\nYFn moRNeufngu\\r\\nzXl BSKI\\r\\nHvasEgl gwmIDluW\\r\\n', 'output': ['4\\r\\nAiOm\\r\\nBSKI\\r\\nYFn\\r\\ngwmIDluW\\r\\n']}, {'input': '15 8\\r\\ncXeOANpvBF\\r\\nbkeDfi\\r\\nnsEUAKNxQI\\r\\noSIb\\r\\naU\\r\\nXYXYVo\\r\\nduZQ\\r\\naPkr\\r\\nPVrHpL\\r\\nmVgmv\\r\\nhHhukllwbf\\r\\nGkNPGYVxjY\\r\\nbgBjA\\r\\nslNKCLIlOv\\r\\nmPILXy\\r\\nbgBjA cXeOANpvBF\\r\\nGkNPGYVxjY cXeOANpvBF\\r\\nslNKCLIlOv GkNPGYVxjY\\r\\nGkNPGYVxjY mVgmv\\r\\nXYXYVo cXeOANpvBF\\r\\nslNKCLIlOv bkeDfi\\r\\nmVgmv aPkr\\r\\nslNKCLIlOv nsEUAKNxQI\\r\\n', 'output': ['12\\r\\nGkNPGYVxjY\\r\\nPVrHpL\\r\\nXYXYVo\\r\\naPkr\\r\\naU\\r\\nbgBjA\\r\\nbkeDfi\\r\\nduZQ\\r\\nhHhukllwbf\\r\\nmPILXy\\r\\nnsEUAKNxQI\\r\\noSIb\\r\\n']}, {'input': '15 3\\r\\na\\r\\nYclKFJoaIA\\r\\nhalYcB\\r\\nbLOlPzAeQ\\r\\ntckjt\\r\\noDFijpx\\r\\nb\\r\\npz\\r\\nVDLb\\r\\nlCEHPibt\\r\\noF\\r\\npzJD\\r\\nMC\\r\\nqklsX\\r\\nTAU\\r\\npzJD tckjt\\r\\nqklsX oF\\r\\nMC pzJD\\r\\n', 'output': ['13\\r\\nMC\\r\\nTAU\\r\\nVDLb\\r\\nYclKFJoaIA\\r\\na\\r\\nb\\r\\nbLOlPzAeQ\\r\\nhalYcB\\r\\nlCEHPibt\\r\\noDFijpx\\r\\noF\\r\\npz\\r\\ntckjt\\r\\n']}, {'input': '16 8\\r\\nJIo\\r\\nINanHVnP\\r\\nKaxyCBWt\\r\\nkVfnsz\\r\\nRAwFYCrSvI\\r\\nF\\r\\nvIEWWIvh\\r\\nTGF\\r\\nFeuhJJwJ\\r\\nTngcmS\\r\\nSqI\\r\\nRmcaVngp\\r\\neGwhme\\r\\nlwaFfXzM\\r\\noabGmpvVH\\r\\nTMT\\r\\nFeuhJJwJ F\\r\\neGwhme FeuhJJwJ\\r\\nRmcaVngp SqI\\r\\nINanHVnP JIo\\r\\nSqI FeuhJJwJ\\r\\nF kVfnsz\\r\\nTGF F\\r\\nTMT TGF\\r\\n', 'output': ['11\\r\\nF\\r\\nINanHVnP\\r\\nKaxyCBWt\\r\\nRAwFYCrSvI\\r\\nRmcaVngp\\r\\nTMT\\r\\nTngcmS\\r\\neGwhme\\r\\nlwaFfXzM\\r\\noabGmpvVH\\r\\nvIEWWIvh\\r\\n']}, {'input': '16 25\\r\\nbBZ\\r\\nEr\\r\\nZ\\r\\nrYJmfZLgmx\\r\\nPaJNrF\\r\\naHtRqSxOO\\r\\nD\\r\\nhsagsG\\r\\nMDuBOXrmWH\\r\\nSgjMQZ\\r\\nYXgWq\\r\\nxDwpppG\\r\\nSDY\\r\\nJwZWx\\r\\ncOzrgrBaE\\r\\nFJYX\\r\\nYXgWq SgjMQZ\\r\\nSDY PaJNrF\\r\\nFJYX rYJmfZLgmx\\r\\nhsagsG Er\\r\\nxDwpppG rYJmfZLgmx\\r\\naHtRqSxOO rYJmfZLgmx\\r\\nhsagsG bBZ\\r\\nJwZWx hsagsG\\r\\nFJYX cOzrgrBaE\\r\\nSDY YXgWq\\r\\nFJYX Z\\r\\nJwZWx rYJmfZLgmx\\r\\nD rYJmfZLgmx\\r\\nYXgWq Z\\r\\nrYJmfZLgmx Z\\r\\naHtRqSxOO bBZ\\r\\nSDY rYJmfZLgmx\\r\\ncOzrgrBaE D\\r\\nYXgWq hsagsG\\r\\nSDY aHtRqSxOO\\r\\ncOzrgrBaE xDwpppG\\r\\nSDY bBZ\\r\\nSDY Er\\r\\nJwZWx xDwpppG\\r\\nFJYX JwZWx\\r\\n', 'output': ['8\\r\\nD\\r\\nEr\\r\\nJwZWx\\r\\nMDuBOXrmWH\\r\\nPaJNrF\\r\\nSgjMQZ\\r\\nZ\\r\\naHtRqSxOO\\r\\n']}, {'input': '16 37\\r\\ntIWi\\r\\nq\\r\\nIEAYCq\\r\\nXozwkum\\r\\nCC\\r\\niPwfd\\r\\nS\\r\\nXEf\\r\\nWqEiwkH\\r\\nWX\\r\\ne\\r\\nltmruh\\r\\nKGx\\r\\nauTUYZRC\\r\\nmeJa\\r\\nM\\r\\nmeJa q\\r\\nKGx e\\r\\nXEf Xozwkum\\r\\ne q\\r\\nauTUYZRC KGx\\r\\ne CC\\r\\nM CC\\r\\nM meJa\\r\\nWX CC\\r\\nWqEiwkH IEAYCq\\r\\nauTUYZRC WqEiwkH\\r\\nKGx WX\\r\\nmeJa KGx\\r\\nXEf q\\r\\nauTUYZRC XEf\\r\\nauTUYZRC IEAYCq\\r\\nWX XEf\\r\\nM XEf\\r\\nWqEiwkH q\\r\\nM KGx\\r\\nKGx CC\\r\\nM e\\r\\nWqEiwkH Xozwkum\\r\\nCC q\\r\\nS Xozwkum\\r\\nKGx tIWi\\r\\nWX q\\r\\nXEf S\\r\\nauTUYZRC S\\r\\nCC IEAYCq\\r\\nKGx IEAYCq\\r\\ne WqEiwkH\\r\\nM S\\r\\nauTUYZRC q\\r\\nS tIWi\\r\\nM ltmruh\\r\\nM iPwfd\\r\\n', 'output': ['8\\r\\nIEAYCq\\r\\nWX\\r\\nXozwkum\\r\\ne\\r\\niPwfd\\r\\nltmruh\\r\\nmeJa\\r\\ntIWi\\r\\n']}, {'input': '16 11\\r\\ntulhZxeKgo\\r\\nbrAXY\\r\\nyQUkaihDAg\\r\\nmwjlDVaktK\\r\\nweVtBIP\\r\\nzRwb\\r\\nds\\r\\nhXPfJrL\\r\\nAdIfP\\r\\nazQeXn\\r\\nB\\r\\nJlmscIUOxO\\r\\nZuxr\\r\\nV\\r\\nOfyLIUO\\r\\nuaMl\\r\\nhXPfJrL yQUkaihDAg\\r\\nweVtBIP yQUkaihDAg\\r\\nazQeXn hXPfJrL\\r\\nV tulhZxeKgo\\r\\nzRwb yQUkaihDAg\\r\\nds mwjlDVaktK\\r\\nzRwb brAXY\\r\\nyQUkaihDAg brAXY\\r\\nB yQUkaihDAg\\r\\nAdIfP mwjlDVaktK\\r\\nbrAXY tulhZxeKgo\\r\\n', 'output': ['11\\r\\nAdIfP\\r\\nB\\r\\nJlmscIUOxO\\r\\nOfyLIUO\\r\\nV\\r\\nZuxr\\r\\nazQeXn\\r\\nbrAXY\\r\\nds\\r\\nuaMl\\r\\nweVtBIP\\r\\n']}, {'input': '5 10\\r\\nTaras\\r\\nNikita\\r\\nSergey\\r\\nAndrey\\r\\nRomka\\r\\nTaras Romka\\r\\nTaras Nikita\\r\\nTaras Sergey\\r\\nTaras Andrey\\r\\nRomka Nikita\\r\\nRomka Sergey\\r\\nRomka Andrey\\r\\nNikita Sergey\\r\\nNikita Andrey\\r\\nSergey Andrey\\r\\n', 'output': ['1\\r\\nAndrey\\r\\n']}]", "source_code": "n, m = map(int, input().split())\nnames = []\nfor i in range(n):\n    names.append(input())\n\nfor i in range(m):\n    a, b = input().split()\n    if a in names:\n        names.remove(a)\n    if b in names:\n        names.remove(b)\n\nnames.sort()\nprint(len(names))\nfor i in names:\n    print(i)\n"}
{"src_uid": "f8315dc903b0542c453cab4577bcb20d", "id": 131, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1200, "testcases": "[{'input': '3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n', 'output': ['0\\r\\n']}, {'input': '6 3\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '6 5\\r\\n1 4\\r\\n2 4\\r\\n3 4\\r\\n5 4\\r\\n6 4\\r\\n', 'output': ['1\\r\\n']}, {'input': '100 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '5 5\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 1\\r\\n', 'output': ['0\\r\\n']}, {'input': '5 4\\r\\n1 4\\r\\n4 3\\r\\n4 5\\r\\n5 2\\r\\n', 'output': ['2\\r\\n']}, {'input': '11 10\\r\\n1 2\\r\\n1 3\\r\\n3 4\\r\\n1 5\\r\\n5 6\\r\\n6 7\\r\\n1 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n', 'output': ['4\\r\\n']}, {'input': '7 7\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n1 4\\r\\n4 5\\r\\n4 6\\r\\n4 7\\r\\n', 'output': ['2\\r\\n']}, {'input': '12 49\\r\\n6 3\\r\\n12 9\\r\\n10 11\\r\\n3 5\\r\\n10 2\\r\\n6 9\\r\\n8 5\\r\\n6 12\\r\\n7 3\\r\\n3 12\\r\\n3 2\\r\\n5 6\\r\\n7 5\\r\\n9 2\\r\\n11 1\\r\\n7 6\\r\\n5 4\\r\\n8 7\\r\\n12 5\\r\\n5 11\\r\\n8 9\\r\\n10 3\\r\\n6 2\\r\\n10 4\\r\\n9 10\\r\\n9 11\\r\\n11 3\\r\\n5 9\\r\\n11 6\\r\\n10 8\\r\\n7 9\\r\\n10 7\\r\\n4 6\\r\\n3 8\\r\\n4 11\\r\\n12 2\\r\\n4 9\\r\\n2 11\\r\\n7 11\\r\\n1 5\\r\\n7 2\\r\\n8 1\\r\\n4 12\\r\\n9 1\\r\\n4 2\\r\\n8 2\\r\\n11 12\\r\\n3 1\\r\\n1 6\\r\\n', 'output': ['0\\r\\n']}, {'input': '10 29\\r\\n4 5\\r\\n1 7\\r\\n4 2\\r\\n3 8\\r\\n7 6\\r\\n8 10\\r\\n10 6\\r\\n4 1\\r\\n10 1\\r\\n6 2\\r\\n7 4\\r\\n7 10\\r\\n2 7\\r\\n9 8\\r\\n5 10\\r\\n2 5\\r\\n8 5\\r\\n4 9\\r\\n2 8\\r\\n5 7\\r\\n4 8\\r\\n7 3\\r\\n6 5\\r\\n1 3\\r\\n1 9\\r\\n10 4\\r\\n10 9\\r\\n10 2\\r\\n2 3\\r\\n', 'output': ['0\\r\\n']}, {'input': '9 33\\r\\n5 7\\r\\n5 9\\r\\n9 6\\r\\n9 1\\r\\n7 4\\r\\n3 5\\r\\n7 8\\r\\n8 6\\r\\n3 6\\r\\n8 2\\r\\n3 8\\r\\n1 6\\r\\n1 8\\r\\n1 4\\r\\n4 2\\r\\n1 2\\r\\n2 5\\r\\n3 4\\r\\n8 5\\r\\n2 6\\r\\n3 1\\r\\n1 5\\r\\n1 7\\r\\n3 2\\r\\n5 4\\r\\n9 4\\r\\n3 9\\r\\n7 3\\r\\n6 4\\r\\n9 8\\r\\n7 9\\r\\n8 4\\r\\n6 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '7 8\\r\\n5 7\\r\\n2 7\\r\\n1 6\\r\\n1 3\\r\\n3 7\\r\\n6 3\\r\\n6 4\\r\\n2 6\\r\\n', 'output': ['1\\r\\n']}, {'input': '6 15\\r\\n3 1\\r\\n4 5\\r\\n1 4\\r\\n6 2\\r\\n3 5\\r\\n6 3\\r\\n1 6\\r\\n1 5\\r\\n2 3\\r\\n2 5\\r\\n6 4\\r\\n5 6\\r\\n4 2\\r\\n1 2\\r\\n3 4\\r\\n', 'output': ['0\\r\\n']}, {'input': '7 11\\r\\n5 3\\r\\n6 5\\r\\n6 4\\r\\n1 6\\r\\n7 1\\r\\n2 6\\r\\n7 5\\r\\n2 5\\r\\n3 1\\r\\n3 4\\r\\n2 4\\r\\n', 'output': ['0\\r\\n']}, {'input': '95 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '100 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '62 30\\r\\n29 51\\r\\n29 55\\r\\n4 12\\r\\n53 25\\r\\n36 28\\r\\n32 11\\r\\n29 11\\r\\n47 9\\r\\n21 8\\r\\n25 4\\r\\n51 19\\r\\n26 56\\r\\n22 21\\r\\n37 9\\r\\n9 33\\r\\n7 25\\r\\n16 7\\r\\n40 49\\r\\n15 21\\r\\n49 58\\r\\n34 30\\r\\n20 46\\r\\n62 48\\r\\n53 57\\r\\n33 6\\r\\n60 37\\r\\n41 34\\r\\n62 36\\r\\n36 43\\r\\n11 39\\r\\n', 'output': ['2\\r\\n']}, {'input': '56 25\\r\\n12 40\\r\\n31 27\\r\\n18 40\\r\\n1 43\\r\\n9 10\\r\\n25 47\\r\\n27 29\\r\\n26 28\\r\\n19 38\\r\\n19 40\\r\\n22 14\\r\\n21 51\\r\\n29 31\\r\\n55 29\\r\\n51 33\\r\\n20 17\\r\\n24 15\\r\\n3 48\\r\\n31 56\\r\\n15 29\\r\\n49 42\\r\\n50 4\\r\\n22 42\\r\\n25 17\\r\\n18 51\\r\\n', 'output': ['3\\r\\n']}, {'input': '51 29\\r\\n36 30\\r\\n37 45\\r\\n4 24\\r\\n40 18\\r\\n47 35\\r\\n15 1\\r\\n30 38\\r\\n15 18\\r\\n32 40\\r\\n34 42\\r\\n2 47\\r\\n35 21\\r\\n25 28\\r\\n13 1\\r\\n13 28\\r\\n36 1\\r\\n46 47\\r\\n22 17\\r\\n41 45\\r\\n43 45\\r\\n40 15\\r\\n29 35\\r\\n47 15\\r\\n30 21\\r\\n9 14\\r\\n18 38\\r\\n18 50\\r\\n42 10\\r\\n31 41\\r\\n', 'output': ['3\\r\\n']}, {'input': '72 45\\r\\n5 15\\r\\n8 18\\r\\n40 25\\r\\n71 66\\r\\n67 22\\r\\n6 44\\r\\n16 25\\r\\n8 23\\r\\n19 70\\r\\n26 34\\r\\n48 15\\r\\n24 2\\r\\n54 68\\r\\n44 43\\r\\n17 37\\r\\n49 19\\r\\n71 49\\r\\n34 38\\r\\n59 1\\r\\n65 70\\r\\n11 54\\r\\n5 11\\r\\n15 31\\r\\n29 50\\r\\n48 16\\r\\n70 57\\r\\n25 59\\r\\n2 59\\r\\n56 12\\r\\n66 62\\r\\n24 16\\r\\n46 27\\r\\n45 67\\r\\n68 43\\r\\n31 11\\r\\n31 30\\r\\n8 44\\r\\n64 33\\r\\n38 44\\r\\n54 10\\r\\n13 9\\r\\n7 51\\r\\n25 4\\r\\n40 70\\r\\n26 65\\r\\n', 'output': ['5\\r\\n']}, {'input': '56 22\\r\\n17 27\\r\\n48 49\\r\\n29 8\\r\\n47 20\\r\\n32 7\\r\\n44 5\\r\\n14 39\\r\\n5 13\\r\\n40 2\\r\\n50 42\\r\\n38 9\\r\\n18 37\\r\\n16 44\\r\\n21 32\\r\\n21 39\\r\\n37 54\\r\\n19 46\\r\\n30 47\\r\\n17 13\\r\\n30 31\\r\\n49 16\\r\\n56 7\\r\\n', 'output': ['4\\r\\n']}, {'input': '81 46\\r\\n53 58\\r\\n31 14\\r\\n18 54\\r\\n43 61\\r\\n57 65\\r\\n6 38\\r\\n49 5\\r\\n6 40\\r\\n6 10\\r\\n17 72\\r\\n27 48\\r\\n58 39\\r\\n21 75\\r\\n21 43\\r\\n78 20\\r\\n34 4\\r\\n15 35\\r\\n74 48\\r\\n76 15\\r\\n49 38\\r\\n46 51\\r\\n78 9\\r\\n80 5\\r\\n26 42\\r\\n64 31\\r\\n46 72\\r\\n1 29\\r\\n20 17\\r\\n32 45\\r\\n53 43\\r\\n24 5\\r\\n52 59\\r\\n3 80\\r\\n78 19\\r\\n61 17\\r\\n80 12\\r\\n17 8\\r\\n63 2\\r\\n8 4\\r\\n44 10\\r\\n53 72\\r\\n18 60\\r\\n68 15\\r\\n17 58\\r\\n79 71\\r\\n73 35\\r\\n', 'output': ['4\\r\\n']}, {'input': '82 46\\r\\n64 43\\r\\n32 24\\r\\n57 30\\r\\n24 46\\r\\n70 12\\r\\n23 41\\r\\n63 39\\r\\n46 70\\r\\n4 61\\r\\n19 12\\r\\n39 79\\r\\n14 28\\r\\n37 3\\r\\n12 27\\r\\n15 20\\r\\n35 39\\r\\n25 64\\r\\n59 16\\r\\n68 63\\r\\n37 14\\r\\n76 7\\r\\n67 29\\r\\n9 5\\r\\n14 55\\r\\n46 26\\r\\n71 79\\r\\n47 42\\r\\n5 55\\r\\n18 45\\r\\n28 40\\r\\n44 78\\r\\n74 9\\r\\n60 53\\r\\n44 19\\r\\n52 81\\r\\n65 52\\r\\n40 13\\r\\n40 19\\r\\n43 1\\r\\n24 23\\r\\n68 9\\r\\n16 20\\r\\n70 14\\r\\n41 40\\r\\n29 10\\r\\n45 65\\r\\n', 'output': ['8\\r\\n']}, {'input': '69 38\\r\\n63 35\\r\\n52 17\\r\\n43 69\\r\\n2 57\\r\\n12 5\\r\\n26 36\\r\\n13 10\\r\\n16 68\\r\\n5 18\\r\\n5 41\\r\\n10 4\\r\\n60 9\\r\\n39 22\\r\\n39 28\\r\\n53 57\\r\\n13 52\\r\\n66 38\\r\\n49 61\\r\\n12 19\\r\\n27 46\\r\\n67 7\\r\\n25 8\\r\\n23 58\\r\\n52 34\\r\\n29 2\\r\\n2 42\\r\\n8 53\\r\\n57 43\\r\\n68 11\\r\\n48 28\\r\\n56 19\\r\\n46 33\\r\\n63 21\\r\\n57 16\\r\\n68 59\\r\\n67 34\\r\\n28 43\\r\\n56 36\\r\\n', 'output': ['4\\r\\n']}, {'input': '75 31\\r\\n32 50\\r\\n52 8\\r\\n21 9\\r\\n68 35\\r\\n12 72\\r\\n47 26\\r\\n38 58\\r\\n40 55\\r\\n31 70\\r\\n53 75\\r\\n44 1\\r\\n65 22\\r\\n33 22\\r\\n33 29\\r\\n14 39\\r\\n1 63\\r\\n16 52\\r\\n70 15\\r\\n12 27\\r\\n63 31\\r\\n47 9\\r\\n71 31\\r\\n43 17\\r\\n43 49\\r\\n8 26\\r\\n11 39\\r\\n9 22\\r\\n30 45\\r\\n65 47\\r\\n32 9\\r\\n60 70\\r\\n', 'output': ['4\\r\\n']}, {'input': '77 41\\r\\n48 45\\r\\n50 36\\r\\n6 69\\r\\n70 3\\r\\n22 21\\r\\n72 6\\r\\n54 3\\r\\n49 31\\r\\n2 23\\r\\n14 59\\r\\n68 58\\r\\n4 54\\r\\n60 12\\r\\n63 60\\r\\n44 24\\r\\n28 24\\r\\n40 8\\r\\n5 1\\r\\n13 24\\r\\n29 15\\r\\n19 76\\r\\n70 50\\r\\n65 71\\r\\n23 33\\r\\n58 16\\r\\n50 42\\r\\n71 28\\r\\n58 54\\r\\n24 73\\r\\n6 17\\r\\n29 13\\r\\n60 4\\r\\n42 4\\r\\n21 60\\r\\n77 39\\r\\n57 9\\r\\n51 19\\r\\n61 6\\r\\n49 36\\r\\n24 32\\r\\n41 66\\r\\n', 'output': ['3\\r\\n']}, {'input': '72 39\\r\\n9 44\\r\\n15 12\\r\\n2 53\\r\\n34 18\\r\\n41 70\\r\\n54 72\\r\\n39 19\\r\\n26 7\\r\\n4 54\\r\\n53 59\\r\\n46 49\\r\\n70 6\\r\\n9 10\\r\\n64 51\\r\\n31 60\\r\\n61 53\\r\\n59 71\\r\\n9 60\\r\\n67 16\\r\\n4 16\\r\\n34 3\\r\\n2 61\\r\\n16 23\\r\\n34 6\\r\\n10 18\\r\\n13 38\\r\\n66 40\\r\\n59 9\\r\\n40 14\\r\\n38 24\\r\\n31 48\\r\\n7 69\\r\\n20 39\\r\\n49 52\\r\\n32 67\\r\\n61 35\\r\\n62 45\\r\\n37 54\\r\\n5 27\\r\\n', 'output': ['8\\r\\n']}, {'input': '96 70\\r\\n30 37\\r\\n47 56\\r\\n19 79\\r\\n15 28\\r\\n2 43\\r\\n43 54\\r\\n59 75\\r\\n42 22\\r\\n38 18\\r\\n18 14\\r\\n47 41\\r\\n60 29\\r\\n35 11\\r\\n90 4\\r\\n14 41\\r\\n11 71\\r\\n41 24\\r\\n68 28\\r\\n45 92\\r\\n14 15\\r\\n34 63\\r\\n77 32\\r\\n67 38\\r\\n36 8\\r\\n37 4\\r\\n58 95\\r\\n68 84\\r\\n69 81\\r\\n35 23\\r\\n56 63\\r\\n78 91\\r\\n35 44\\r\\n66 63\\r\\n80 19\\r\\n87 88\\r\\n28 14\\r\\n62 35\\r\\n24 23\\r\\n83 37\\r\\n54 89\\r\\n14 40\\r\\n9 35\\r\\n94 9\\r\\n56 46\\r\\n92 70\\r\\n16 58\\r\\n96 31\\r\\n53 23\\r\\n56 5\\r\\n36 42\\r\\n89 77\\r\\n29 51\\r\\n26 13\\r\\n46 70\\r\\n25 56\\r\\n95 96\\r\\n3 51\\r\\n76 8\\r\\n36 82\\r\\n44 85\\r\\n54 56\\r\\n89 67\\r\\n32 5\\r\\n82 78\\r\\n33 65\\r\\n43 28\\r\\n35 1\\r\\n94 13\\r\\n26 24\\r\\n10 51\\r\\n', 'output': ['4\\r\\n']}, {'input': '76 49\\r\\n15 59\\r\\n23 26\\r\\n57 48\\r\\n49 51\\r\\n42 76\\r\\n36 40\\r\\n37 40\\r\\n29 15\\r\\n28 71\\r\\n47 70\\r\\n27 39\\r\\n76 21\\r\\n55 16\\r\\n21 18\\r\\n19 1\\r\\n25 31\\r\\n51 71\\r\\n54 42\\r\\n28 9\\r\\n61 69\\r\\n33 9\\r\\n18 19\\r\\n58 51\\r\\n51 45\\r\\n29 34\\r\\n9 67\\r\\n26 8\\r\\n70 37\\r\\n11 62\\r\\n24 22\\r\\n59 76\\r\\n67 17\\r\\n59 11\\r\\n54 1\\r\\n12 57\\r\\n23 3\\r\\n46 47\\r\\n37 20\\r\\n65 9\\r\\n51 12\\r\\n31 19\\r\\n56 13\\r\\n58 22\\r\\n26 59\\r\\n39 76\\r\\n27 11\\r\\n48 64\\r\\n59 35\\r\\n44 75\\r\\n', 'output': ['5\\r\\n']}, {'input': '52 26\\r\\n29 41\\r\\n16 26\\r\\n18 48\\r\\n31 17\\r\\n37 42\\r\\n26 1\\r\\n11 7\\r\\n29 6\\r\\n23 17\\r\\n12 47\\r\\n34 23\\r\\n41 16\\r\\n15 35\\r\\n25 21\\r\\n45 7\\r\\n52 2\\r\\n37 10\\r\\n28 19\\r\\n1 27\\r\\n30 47\\r\\n42 35\\r\\n50 30\\r\\n30 34\\r\\n19 30\\r\\n42 25\\r\\n47 31\\r\\n', 'output': ['3\\r\\n']}, {'input': '86 48\\r\\n59 34\\r\\n21 33\\r\\n45 20\\r\\n62 23\\r\\n4 68\\r\\n2 65\\r\\n63 26\\r\\n64 20\\r\\n51 34\\r\\n64 21\\r\\n68 78\\r\\n61 80\\r\\n81 3\\r\\n38 39\\r\\n47 48\\r\\n24 34\\r\\n44 71\\r\\n72 78\\r\\n50 2\\r\\n13 51\\r\\n82 78\\r\\n11 74\\r\\n14 48\\r\\n2 75\\r\\n49 55\\r\\n63 85\\r\\n20 85\\r\\n4 53\\r\\n51 15\\r\\n11 67\\r\\n1 15\\r\\n2 64\\r\\n10 81\\r\\n6 7\\r\\n68 18\\r\\n84 28\\r\\n77 69\\r\\n10 36\\r\\n15 14\\r\\n32 86\\r\\n16 79\\r\\n26 13\\r\\n38 55\\r\\n47 43\\r\\n47 39\\r\\n45 37\\r\\n58 81\\r\\n42 35\\r\\n', 'output': ['8\\r\\n']}, {'input': '58 29\\r\\n27 24\\r\\n40 52\\r\\n51 28\\r\\n44 50\\r\\n7 28\\r\\n14 53\\r\\n10 16\\r\\n16 45\\r\\n8 56\\r\\n35 26\\r\\n39 6\\r\\n6 14\\r\\n45 22\\r\\n35 13\\r\\n20 17\\r\\n42 6\\r\\n37 21\\r\\n4 11\\r\\n26 56\\r\\n54 55\\r\\n3 57\\r\\n40 3\\r\\n55 27\\r\\n4 51\\r\\n35 29\\r\\n50 16\\r\\n47 7\\r\\n48 20\\r\\n1 37\\r\\n', 'output': ['3\\r\\n']}, {'input': '51 23\\r\\n46 47\\r\\n31 27\\r\\n1 20\\r\\n49 16\\r\\n2 10\\r\\n29 47\\r\\n13 27\\r\\n34 26\\r\\n31 2\\r\\n28 20\\r\\n17 40\\r\\n39 4\\r\\n29 26\\r\\n28 44\\r\\n3 39\\r\\n50 12\\r\\n19 1\\r\\n30 21\\r\\n41 23\\r\\n2 29\\r\\n16 3\\r\\n49 28\\r\\n49 41\\r\\n', 'output': ['4\\r\\n']}, {'input': '75 43\\r\\n46 34\\r\\n33 12\\r\\n51 39\\r\\n47 74\\r\\n68 64\\r\\n40 46\\r\\n20 51\\r\\n47 19\\r\\n4 5\\r\\n57 59\\r\\n12 26\\r\\n68 65\\r\\n38 42\\r\\n73 37\\r\\n5 74\\r\\n36 61\\r\\n8 18\\r\\n58 33\\r\\n34 73\\r\\n42 43\\r\\n10 49\\r\\n70 50\\r\\n49 18\\r\\n24 53\\r\\n71 73\\r\\n44 24\\r\\n49 56\\r\\n24 29\\r\\n44 67\\r\\n70 46\\r\\n57 25\\r\\n73 63\\r\\n3 51\\r\\n30 71\\r\\n41 44\\r\\n17 69\\r\\n17 18\\r\\n19 68\\r\\n42 7\\r\\n11 51\\r\\n1 5\\r\\n72 23\\r\\n65 53\\r\\n', 'output': ['5\\r\\n']}]", "source_code": "n, m = map(int, input().split())\n\nadj = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b = map(int, input().split())\n    adj[a - 1].append(b - 1)\n    adj[b - 1].append(a - 1)\n\nans = 0\nwhile True:\n    cnt = [0] * n\n    for i in range(n):\n        for j in adj[i]:\n            cnt[i] += 1\n    if max(cnt) == 1:\n        break\n    for i in range(n):\n        if cnt[i] == 1:\n            adj[i] = []\n            ans += 1\nprint(ans)\n"}
{"src_uid": "65fea461d3caa5a932d1e2c13e99a59e", "id": 132, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1100, "testcases": "[{'input': '5 50\\r\\n1 2 3 4 5\\r\\n', 'output': ['12.000000\\r\\n11.000000\\r\\n10.000000\\r\\n9.000000\\r\\n8.000000\\r\\n']}, {'input': '2 2\\r\\n1 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2 2\\r\\n1 1\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n']}, {'input': '3 2\\r\\n1 2 1\\r\\n', 'output': ['1.000000\\r\\n0.000000\\r\\n1.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 1\\r\\n', 'output': ['2.000000\\r\\n1.000000\\r\\n2.000000\\r\\n']}, {'input': '10 95\\r\\n0 0 0 0 0 1 1 1 1 1\\r\\n', 'output': ['10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n10.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n9.000000\\r\\n']}, {'input': '3 5\\r\\n1 2 3\\r\\n', 'output': ['2.666667\\r\\n1.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n1 3 2\\r\\n', 'output': ['2.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n2 1 3\\r\\n', 'output': ['1.666667\\r\\n2.666667\\r\\n0.666667\\r\\n']}, {'input': '3 5\\r\\n2 3 1\\r\\n', 'output': ['1.666667\\r\\n0.666667\\r\\n2.666667\\r\\n']}, {'input': '3 5\\r\\n3 1 2\\r\\n', 'output': ['0.666667\\r\\n2.666667\\r\\n1.666667\\r\\n']}, {'input': '3 5\\r\\n3 2 1\\r\\n', 'output': ['0.666667\\r\\n1.666667\\r\\n2.666667\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '2 1\\r\\n2 2\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '3 2\\r\\n2 1 2\\r\\n', 'output': ['0.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '3 3\\r\\n2 2 1\\r\\n', 'output': ['0.666667\\r\\n0.666667\\r\\n1.666667\\r\\n']}, {'input': '3 3\\r\\n3 1 2\\r\\n', 'output': ['0.000000\\r\\n2.000000\\r\\n1.000000\\r\\n']}, {'input': '100 100\\r\\n37 97 75 52 33 29 51 22 33 37 45 96 96 60 82 58 86 71 28 73 38 50 6 6 90 17 26 76 13 41 100 47 17 93 4 1 56 16 41 74 25 17 69 61 39 37 96 73 49 93 52 14 62 24 91 30 9 97 52 100 6 16 85 8 12 26 10 3 94 63 80 27 29 78 9 48 79 64 60 18 98 75 81 35 24 81 2 100 23 70 21 60 98 38 29 29 58 37 49 72\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 100\\r\\n1 3 7 7 9 5 9 3 7 8 10 1 3 10 10 6 1 3 10 4 3 9 4 9 5 4 9 2 8 7 4 3 3 3 5 10 8 9 10 1 9 2 4 8 3 10 9 2 3 9 8 2 4 4 4 7 1 1 7 3 7 8 9 5 1 2 6 7 1 10 9 10 5 10 1 10 5 2 4 3 10 1 6 5 6 7 8 9 3 8 6 10 8 7 2 3 8 6 3 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 61\\r\\n81 80 83 72 87 76 91 92 77 93 77 94 76 73 71 88 88 76 87 73 89 73 85 81 79 90 76 73 82 93 79 93 71 75 72 71 78 85 92 89 88 93 74 87 71 94 74 87 85 89 90 93 86 94 92 87 90 91 75 73 90 84 92 94 92 79 74 85 74 74 89 76 84 84 84 83 86 84 82 71 76 74 83 81 89 73 73 74 71 77 90 94 73 94 73 75 93 89 84 92\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10 100\\r\\n52 52 51 52 52 52 51 51 52 52\\r\\n', 'output': ['9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n9.700000\\r\\n10.700000\\r\\n10.700000\\r\\n9.700000\\r\\n9.700000\\r\\n']}, {'input': '10 100\\r\\n13 13 13 13 12 13 12 13 12 12\\r\\n', 'output': ['9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n9.600000\\r\\n10.600000\\r\\n10.600000\\r\\n']}, {'input': '10 100\\r\\n50 51 47 51 48 46 49 51 46 51\\r\\n', 'output': ['9.000000\\r\\n8.000000\\r\\n12.000000\\r\\n8.000000\\r\\n11.000000\\r\\n13.000000\\r\\n10.000000\\r\\n8.000000\\r\\n13.000000\\r\\n8.000000\\r\\n']}, {'input': '10 100\\r\\n13 13 9 12 12 11 13 8 10 13\\r\\n', 'output': ['8.400000\\r\\n8.400000\\r\\n12.400000\\r\\n9.400000\\r\\n9.400000\\r\\n10.400000\\r\\n8.400000\\r\\n13.400000\\r\\n11.400000\\r\\n8.400000\\r\\n']}, {'input': '13 97\\r\\n52 52 51 51 52 52 51 52 51 51 52 52 52\\r\\n', 'output': ['7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n8.076923\\r\\n7.076923\\r\\n8.076923\\r\\n8.076923\\r\\n7.076923\\r\\n7.076923\\r\\n7.076923\\r\\n']}, {'input': '17 99\\r\\n13 13 12 13 11 12 12 12 13 13 11 13 13 13 13 12 13\\r\\n', 'output': ['5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n7.294118\\r\\n6.294118\\r\\n6.294118\\r\\n6.294118\\r\\n5.294118\\r\\n5.294118\\r\\n7.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n5.294118\\r\\n6.294118\\r\\n5.294118\\r\\n']}, {'input': '9 91\\r\\n52 51 50 52 52 51 50 48 51\\r\\n', 'output': ['8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n8.888889\\r\\n8.888889\\r\\n9.888889\\r\\n10.888889\\r\\n12.888889\\r\\n9.888889\\r\\n']}, {'input': '17 91\\r\\n13 13 13 13 12 12 13 13 12 13 12 13 10 12 13 13 12\\r\\n', 'output': ['4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n5.823529\\r\\n4.823529\\r\\n7.823529\\r\\n5.823529\\r\\n4.823529\\r\\n4.823529\\r\\n5.823529\\r\\n']}, {'input': '2 3\\r\\n1 1\\r\\n', 'output': ['1.500000\\r\\n1.500000\\r\\n']}, {'input': '2 90\\r\\n0 89\\r\\n', 'output': ['89.500000\\r\\n0.500000\\r\\n']}, {'input': '4 17\\r\\n3 4 8 1\\r\\n', 'output': ['5.250000\\r\\n4.250000\\r\\n0.250000\\r\\n7.250000\\r\\n']}, {'input': '2 9\\r\\n5 5\\r\\n', 'output': ['4.500000\\r\\n4.500000\\r\\n']}, {'input': '7 28\\r\\n1 3 9 10 9 6 10\\r\\n', 'output': ['9.857143\\r\\n7.857143\\r\\n1.857143\\r\\n0.857143\\r\\n1.857143\\r\\n4.857143\\r\\n0.857143\\r\\n']}, {'input': '5 11\\r\\n1 2 3 4 5\\r\\n', 'output': ['4.200000\\r\\n3.200000\\r\\n2.200000\\r\\n1.200000\\r\\n0.200000\\r\\n']}, {'input': '2 1\\r\\n1 1\\r\\n', 'output': ['0.500000\\r\\n0.500000\\r\\n']}, {'input': '5 3\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n0.600000\\r\\n']}, {'input': '3 1\\r\\n100 100 100\\r\\n', 'output': ['0.333333\\r\\n0.333333\\r\\n0.333333\\r\\n']}, {'input': '5 50\\r\\n2 2 3 2 2\\r\\n', 'output': ['10.200000\\r\\n10.200000\\r\\n9.200000\\r\\n10.200000\\r\\n10.200000\\r\\n']}, {'input': '3 3\\r\\n2 2 3\\r\\n', 'output': ['1.333333\\r\\n1.333333\\r\\n0.333333\\r\\n']}, {'input': '2 52\\r\\n2 100\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 2\\r\\n2 2 3\\r\\n', 'output': ['1.000000\\r\\n1.000000\\r\\n0.000000\\r\\n']}, {'input': '5 1\\r\\n1 1 1 1 1\\r\\n', 'output': ['0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n0.200000\\r\\n']}, {'input': '2 4\\r\\n1 2\\r\\n', 'output': ['2.500000\\r\\n1.500000\\r\\n']}, {'input': '5 49\\r\\n1 2 3 4 5\\r\\n', 'output': ['11.800000\\r\\n10.800000\\r\\n9.800000\\r\\n8.800000\\r\\n7.800000\\r\\n']}]", "source_code": "n,b=map(int,input().split())\na=list(map(int,input().split()))\ns=sum(a)\nif s>b:\n    print(-1)\nelse:\n    for i in range(n):\n        print(a[i]+(b-s)/n)\n"}
{"src_uid": "782b819eb0bfc86d6f96f15ac09d5085", "id": 133, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1300, "testcases": "[{'input': ['1\\r\\n'], 'output': ['3\\r\\n']}, {'input': ['2\\r\\n'], 'output': ['10\\r\\n']}, {'input': ['385599124\\r\\n'], 'output': ['493875375\\r\\n']}, {'input': ['989464295\\r\\n'], 'output': ['31966163\\r\\n']}, {'input': ['376367012\\r\\n'], 'output': ['523204186\\r\\n']}, {'input': ['529357306\\r\\n'], 'output': ['142578489\\r\\n']}, {'input': ['782916801\\r\\n'], 'output': ['51174574\\r\\n']}, {'input': ['74859961358140080\\r\\n'], 'output': ['478768275\\r\\n']}, {'input': ['0\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['252509053898415171\\r\\n'], 'output': ['886314547\\r\\n']}, {'input': ['760713016078377938\\r\\n'], 'output': ['79611270\\r\\n']}, {'input': ['919845424847912644\\r\\n'], 'output': ['388845650\\r\\n']}, {'input': ['585335721566249104\\r\\n'], 'output': ['301383716\\r\\n']}, {'input': ['522842183413115087\\r\\n'], 'output': ['556012763\\r\\n']}, {'input': ['148049062285906746\\r\\n'], 'output': ['913927498\\r\\n']}, {'input': ['84324827171274022\\r\\n'], 'output': ['462535280\\r\\n']}, {'input': ['354979172034763159\\r\\n'], 'output': ['239287993\\r\\n']}, {'input': ['1312148742261680\\r\\n'], 'output': ['799725655\\r\\n']}, {'input': ['269587448053313253\\r\\n'], 'output': ['536645997\\r\\n']}, {'input': ['645762257531682045\\r\\n'], 'output': ['543988614\\r\\n']}, {'input': ['615812227854199662\\r\\n'], 'output': ['357939938\\r\\n']}, {'input': ['819875140559301751\\r\\n'], 'output': ['968653685\\r\\n']}, {'input': ['349993003033420740\\r\\n'], 'output': ['709392758\\r\\n']}, {'input': ['891351282398722856\\r\\n'], 'output': ['70758467\\r\\n']}, {'input': ['563324730406715801\\r\\n'], 'output': ['353494903\\r\\n']}, {'input': ['520974001002628386\\r\\n'], 'output': ['164118419\\r\\n']}, {'input': ['666729339260489789\\r\\n'], 'output': ['784700006\\r\\n']}, {'input': ['856674609788912527\\r\\n'], 'output': ['720540265\\r\\n']}, {'input': ['791809296233191092\\r\\n'], 'output': ['369199735\\r\\n']}, {'input': ['711066335916901717\\r\\n'], 'output': ['15590358\\r\\n']}, {'input': ['931356501703211379\\r\\n'], 'output': ['239824013\\r\\n']}, {'input': ['234122431978145893\\r\\n'], 'output': ['905163056\\r\\n']}, {'input': ['1000000000000000000\\r\\n'], 'output': ['899770636\\r\\n']}, {'input': ['3\\r\\n'], 'output': ['36\\r\\n']}, {'input': ['4\\r\\n'], 'output': ['136\\r\\n']}, {'input': ['5\\r\\n'], 'output': ['528\\r\\n']}, {'input': ['6\\r\\n'], 'output': ['2080\\r\\n']}, {'input': ['7\\r\\n'], 'output': ['8256\\r\\n']}, {'input': ['8\\r\\n'], 'output': ['32896\\r\\n']}, {'input': ['9\\r\\n'], 'output': ['131328\\r\\n']}, {'input': ['10\\r\\n'], 'output': ['524800\\r\\n']}, {'input': ['11\\r\\n'], 'output': ['2098176\\r\\n']}, {'input': ['12\\r\\n'], 'output': ['8390656\\r\\n']}, {'input': ['13\\r\\n'], 'output': ['33558528\\r\\n']}, {'input': ['14\\r\\n'], 'output': ['134225920\\r\\n']}, {'input': ['15\\r\\n'], 'output': ['536887296\\r\\n']}, {'input': ['16\\r\\n'], 'output': ['147516402\\r\\n']}, {'input': ['0\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['6265\\r\\n'], 'output': ['980996097\\r\\n']}]", "source_code": "n = int(input())\n\ndef f(n):\n    if n == 0:\n        return 1\n    if n == 1:\n        return 3\n    if n == 2:\n        return 10\n    if n == 3:\n        return 2"}
{"src_uid": "d526af933b5afe9abfdf9815e9664144", "id": 134, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1100, "testcases": "[{'input': '4\\r\\n10 3 5 10\\r\\n', 'output': ['5\\r\\n']}, {'input': '5\\r\\n10 2 8 3 5\\r\\n', 'output': ['5\\r\\n']}, {'input': '10\\r\\n10 3 1 6 7 1 3 3 8 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n26 72 10 52 2 5 61 2 39 64\\r\\n', 'output': ['5\\r\\n']}, {'input': '100\\r\\n8 2 1 2 8 3 5 8 5 1 9 3 4 1 5 6 4 2 9 10 6 10 10 3 9 4 10 5 3 1 5 10 7 6 8 10 2 6 4 4 2 2 10 7 2 7 3 2 6 3 6 4 7 6 2 5 5 8 6 9 5 2 7 5 8 6 5 8 10 6 10 8 5 3 1 10 6 1 7 5 1 8 10 5 1 3 10 7 10 5 7 1 4 3 8 6 3 4 9 6\\r\\n', 'output': ['2\\r\\n']}, {'input': '100\\r\\n10 2 8 7 5 1 5 4 9 2 7 9 3 5 6 2 3 6 10 1 2 7 1 4 8 8 6 1 7 8 8 1 5 8 1 2 7 4 10 7 3 1 2 5 8 1 1 4 9 7 7 4 7 3 8 8 7 1 5 1 6 9 8 8 1 10 4 4 7 7 10 9 5 1 1 3 6 2 6 3 6 4 9 8 2 9 6 2 7 8 10 9 9 6 3 5 3 1 4 8\\r\\n', 'output': ['1\\r\\n']}, {'input': '100\\r\\n21 57 14 6 58 61 37 54 43 22 90 90 90 14 10 97 47 43 19 66 96 58 88 92 22 62 99 97 15 36 58 93 44 42 45 38 41 21 16 30 66 92 39 70 1 73 83 27 63 21 20 84 30 30 30 77 93 30 62 96 33 34 28 59 48 89 68 62 50 16 18 19 42 42 80 58 31 59 40 81 92 26 28 47 26 8 8 74 86 80 88 82 98 27 41 97 11 91 42 67\\r\\n', 'output': ['8\\r\\n']}, {'input': '100\\r\\n37 75 11 81 60 33 17 80 37 77 26 86 31 78 59 23 92 38 8 15 30 91 99 75 79 34 78 80 19 51 48 48 61 74 59 30 26 2 71 74 48 42 42 81 20 55 49 69 60 10 53 2 21 44 10 18 45 64 21 18 5 62 3 34 52 72 16 28 70 31 93 5 21 69 21 90 31 90 91 79 54 94 77 27 97 4 74 9 29 29 81 5 33 81 75 37 61 73 57 75\\r\\n', 'output': ['15\\r\\n']}, {'input': '100\\r\\n190 544 642 723 577 689 757 509 165 193 396 972 742 367 83 294 404 308 683 399 551 770 564 721 465 839 379 68 687 554 821 719 304 533 146 180 596 713 546 743 949 100 458 735 17 525 568 907 957 670 914 374 347 801 227 884 284 444 686 410 127 508 504 273 624 213 873 658 336 79 819 938 3 722 649 368 733 747 577 746 940 308 970 963 145 487 102 559 790 243 609 77 552 565 151 492 726 448 393 837\\r\\n', 'output': ['180\\r\\n']}, {'input': '100\\r\\n606 358 399 589 724 454 741 183 571 244 984 867 828 232 189 821 642 855 220 839 585 203 135 305 970 503 362 658 491 562 706 62 721 465 560 880 833 646 365 23 679 549 317 834 583 947 134 253 250 768 343 996 541 163 355 925 336 874 997 632 498 529 932 487 415 391 766 224 364 790 486 512 183 458 343 751 633 126 688 536 845 380 423 447 904 779 520 843 977 392 406 147 888 520 886 179 176 129 8 750\\r\\n', 'output': ['129\\r\\n']}, {'input': '5\\r\\n3 2 3 4 2\\r\\n', 'output': ['2\\r\\n']}, {'input': '5\\r\\n4 8 9 10 6\\r\\n', 'output': ['4\\r\\n']}, {'input': '5\\r\\n2 21 6 5 9\\r\\n', 'output': ['2\\r\\n']}, {'input': '5\\r\\n34 39 30 37 35\\r\\n', 'output': ['34\\r\\n']}, {'input': '5\\r\\n14 67 15 28 21\\r\\n', 'output': ['14\\r\\n']}, {'input': '5\\r\\n243 238 138 146 140\\r\\n', 'output': ['140\\r\\n']}, {'input': '5\\r\\n46 123 210 119 195\\r\\n', 'output': ['46\\r\\n']}, {'input': '5\\r\\n725 444 477 661 761\\r\\n', 'output': ['477\\r\\n']}, {'input': '10\\r\\n2 2 3 4 4 1 5 3 1 2\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n1 10 1 10 1 1 7 8 6 7\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 17 8 1 10 20 9 18 12 20\\r\\n', 'output': ['5\\r\\n']}, {'input': '10\\r\\n18 11 23 7 9 10 28 29 46 21\\r\\n', 'output': ['9\\r\\n']}, {'input': '10\\r\\n2 17 53 94 95 57 36 47 68 48\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n93 231 176 168 177 222 22 137 110 4\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n499 173 45 141 425 276 96 290 428 95\\r\\n', 'output': ['95\\r\\n']}, {'input': '10\\r\\n201 186 897 279 703 376 238 93 253 316\\r\\n', 'output': ['201\\r\\n']}, {'input': '25\\r\\n3 2 3 2 2 2 3 4 5 1 1 4 1 2 1 3 5 5 3 5 1 2 4 1 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '25\\r\\n9 9 1 9 10 5 6 4 6 1 5 2 2 1 2 8 4 6 5 7 1 10 5 4 9\\r\\n', 'output': ['2\\r\\n']}, {'input': '25\\r\\n2 17 21 4 13 6 14 18 17 1 16 13 24 4 12 7 8 16 9 25 25 9 11 20 18\\r\\n', 'output': ['2\\r\\n']}, {'input': '25\\r\\n38 30 9 35 33 48 8 4 49 2 39 19 34 35 47 49 33 4 23 5 42 35 49 11 30\\r\\n', 'output': ['8\\r\\n']}, {'input': '25\\r\\n75 34 77 68 60 38 76 89 35 68 28 36 96 63 43 12 9 4 37 75 88 30 11 58 35\\r\\n', 'output': ['9\\r\\n']}, {'input': '25\\r\\n108 3 144 140 239 105 59 126 224 181 147 102 94 201 68 121 167 94 60 130 64 162 45 95 235\\r\\n', 'output': ['94\\r\\n']}, {'input': '25\\r\\n220 93 216 467 134 408 132 220 292 11 363 404 282 253 141 313 310 356 214 256 380 81 42 128 363\\r\\n', 'output': ['81\\r\\n']}, {'input': '25\\r\\n371 884 75 465 891 510 471 52 382 829 514 610 660 642 179 108 41 818 346 106 738 993 706 574 623\\r\\n', 'output': ['108\\r\\n']}, {'input': '50\\r\\n1 2 1 3 2 5 2 2 2 3 4 4 4 3 3 4 1 2 3 1 5 4 1 2 2 1 5 3 2 2 1 5 4 5 2 5 4 1 1 3 5 2 1 4 5 5 1 5 5 5\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n2 4 9 8 1 3 7 1 2 3 8 9 8 8 5 2 10 5 8 1 3 1 8 2 3 7 9 10 2 9 9 7 3 8 6 10 6 5 4 8 1 1 5 6 8 9 5 9 5 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n22 9 5 3 24 21 25 13 17 21 14 8 22 18 2 3 22 9 10 11 25 22 5 10 16 7 15 3 2 13 2 12 9 24 3 14 2 18 3 22 8 2 19 6 16 4 5 20 10 12\\r\\n', 'output': ['3\\r\\n']}, {'input': '50\\r\\n14 4 20 37 50 46 19 20 25 47 10 6 34 12 41 47 9 22 28 41 34 47 40 12 42 9 4 15 15 27 8 38 9 4 17 8 13 47 7 9 38 30 48 50 7 41 34 23 11 16\\r\\n', 'output': ['9\\r\\n']}, {'input': '50\\r\\n69 9 97 15 22 69 27 7 23 84 73 74 60 94 43 98 13 4 63 49 7 31 93 23 6 75 32 63 49 32 99 43 68 48 16 54 20 38 40 65 34 28 21 55 79 50 2 18 22 95\\r\\n', 'output': ['13\\r\\n']}, {'input': '50\\r\\n50 122 117 195 42 178 153 194 7 89 142 40 158 230 213 104 179 56 244 196 85 159 167 19 157 20 230 201 152 98 250 242 10 52 96 242 139 181 90 107 178 52 196 79 23 61 212 47 97 97\\r\\n', 'output': ['50\\r\\n']}, {'input': '50\\r\\n354 268 292 215 187 232 35 38 179 79 108 491 346 384 345 103 14 260 148 322 459 238 220 493 374 237 474 148 21 221 88 377 289 121 201 198 490 117 382 454 359 390 346 456 294 325 130 306 484 83\\r\\n', 'output': ['38\\r\\n']}, {'input': '50\\r\\n94 634 27 328 629 967 728 177 379 908 801 715 787 192 427 48 559 923 841 6 759 335 251 172 193 593 456 780 647 638 750 881 206 129 278 744 91 49 523 248 286 549 593 451 216 753 471 325 870 16\\r\\n', 'output': ['16\\r\\n']}, {'input': '100\\r\\n5 5 4 3 5 1 2 5 1 1 3 5 4 4 1 1 1 1 5 4 4 5 1 5 5 1 2 1 3 1 5 1 3 3 3 2 2 2 1 1 5 1 3 4 1 1 3 2 5 2 2 5 5 4 4 1 3 4 3 3 4 5 3 3 3 1 2 1 4 2 4 4 1 5 1 3 5 5 5 5 3 4 4 3 1 2 5 2 3 5 4 2 4 5 3 2 4 2 4 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '100\\r\\n3 4 8 10 8 6 4 3 7 7 6 2 3 1 3 10 1 7 9 3 5 5 2 6 2 9 1 7 4 2 4 1 6 1 7 10 2 5 3 7 6 4 6 2 8 8 8 6 6 10 3 7 4 3 4 1 7 9 3 6 3 6 1 4 9 3 8 1 10 1 4 10 7 7 9 5 3 8 10 2 1 10 8 7 10 8 5 3 1 2 1 10 6 1 5 3 3 5 7 2\\r\\n', 'output': ['2\\r\\n']}, {'input': '100\\r\\n14 7 6 21 12 5 22 23 2 9 8 1 9 2 20 2 24 7 14 24 8 19 15 19 10 24 9 4 21 12 3 21 9 16 9 22 18 4 17 19 19 9 6 1 13 15 23 3 14 3 7 15 17 10 7 24 4 18 21 14 25 20 19 19 14 25 24 21 16 10 2 16 1 21 1 24 13 7 13 20 12 20 2 16 3 6 6 2 19 9 16 4 1 2 7 18 15 14 10 22\\r\\n', 'output': ['2\\r\\n']}, {'input': '100\\r\\n2 46 4 6 38 19 15 34 10 35 37 30 3 25 5 45 40 45 33 31 6 20 10 44 11 9 2 14 35 5 9 23 20 2 48 22 25 35 38 31 24 33 35 16 4 30 27 10 12 22 6 24 12 30 23 21 14 12 32 21 7 12 25 43 18 34 34 28 47 13 28 43 18 39 44 42 35 26 35 14 8 29 32 20 29 3 20 6 20 9 9 27 8 42 10 37 42 27 8 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '100\\r\\n85 50 17 89 65 89 5 20 86 26 16 21 85 14 44 31 87 31 6 2 48 67 8 80 79 1 48 36 97 1 5 30 79 50 78 12 2 55 76 100 54 40 26 81 97 96 68 56 87 14 51 17 54 37 52 33 69 62 38 63 74 15 62 78 9 19 67 2 60 58 93 60 18 96 55 48 34 7 79 82 32 58 90 67 20 50 27 15 7 89 98 10 11 15 99 49 4 51 77 52\\r\\n', 'output': ['5\\r\\n']}, {'input': '100\\r\\n26 171 37 63 189 202 180 210 179 131 43 33 227 5 211 130 105 23 229 48 174 48 182 68 174 146 200 166 246 116 106 86 72 206 216 207 70 148 83 149 94 64 142 8 241 211 27 190 58 116 113 96 210 237 73 240 180 110 34 115 167 4 42 30 162 114 74 131 34 206 174 168 216 101 216 149 212 172 180 220 123 201 25 116 42 143 105 40 30 123 174 220 57 238 145 222 105 184 131 162\\r\\n', 'output': ['26\\r\\n']}, {'input': '100\\r\\n182 9 8 332 494 108 117 203 43 473 451 426 119 408 342 84 88 35 383 84 48 69 31 54 347 363 342 69 422 489 194 16 55 171 71 355 116 142 181 246 275 402 155 282 160 179 240 448 49 101 42 499 434 258 21 327 95 376 38 422 68 381 170 372 427 149 38 48 400 224 246 438 62 43 280 40 108 385 351 379 224 311 66 125 300 41 372 358 5 221 223 341 201 261 455 165 74 379 214 10\\r\\n', 'output': ['9\\r\\n']}, {'input': '100\\r\\n836 969 196 706 812 64 743 262 667 27 227 730 50 510 374 915 124 527 778 528 175 151 439 994 835 87 197 91 121 243 534 634 4 410 936 6 979 227 745 734 492 792 209 95 602 446 299 533 376 595 971 879 36 126 528 759 116 499 571 664 787 820 870 838 604 240 334 872 477 415 57 689 870 690 304 122 487 191 253 610 301 348 358 806 828 911 8 320 414 172 268 867 978 205 812 60 845 395 406 155\\r\\n', 'output': ['121\\r\\n']}, {'input': '250\\r\\n5 3 5 1 3 5 3 4 4 3 1 5 2 2 1 1 5 2 3 3 2 5 4 3 2 4 2 3 5 4 1 2 3 5 2 2 5 4 1 3 3 5 4 4 4 4 4 2 4 2 3 5 1 4 3 3 2 3 5 3 3 4 4 2 3 1 3 4 1 4 5 4 1 2 3 4 1 5 3 3 2 3 5 4 2 5 2 2 3 5 4 3 5 4 2 1 4 1 4 1 1 3 5 1 1 2 1 3 4 5 4 3 2 5 1 3 5 1 1 3 3 5 1 4 5 1 2 1 1 5 5 3 5 1 4 1 4 4 4 4 4 1 4 3 4 5 4 1 2 2 5 2 2 4 2 3 5 3 5 5 3 3 2 2 2 1 1 4 4 4 2 1 4 5 3 1 5 4 4 5 5 5 3 3 5 2 1 4 5 4 1 1 1 5 3 5 2 3 3 2 1 3 4 1 4 1 5 3 1 2 5 5 2 1 4 4 2 3 5 2 4 1 3 4 5 5 4 3 2 2 3 2 4 2 5 3 5 5 1 5 3 2 2 4 2 5 5 5 2 5\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n987\\r\\n', 'output': ['987\\r\\n']}, {'input': '1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n2 5 5 5 5\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n500\\r\\n', 'output': ['500\\r\\n']}]", "source_code": "n = int(input())\na = list(map(int, input().split()))\n\nif a[0] < a[n - 1]:\n    print(a[0])\nelif a[n - 1] < a[0]:\n    print(a[n - 1])\nelse:\n    print(min(a[0], a[n - 1]))\n"}
{"src_uid": "5e055bad1da5bdc84599d6f2f89fbd12", "id": 135, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1500, "testcases": "[{'input': '3\\r\\n4 7\\r\\n4 7\\r\\n7 4\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n4 7\\r\\n7 4\\r\\n2 11\\r\\n9 7\\r\\n1 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1\\r\\n1 1\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['0\\r\\n']}, {'input': '7\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n', 'output': ['-1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n2 1\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\n7 7\\r\\n1 2\\r\\n2 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 1\\r\\n2 5\\r\\n3 6\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4\\r\\n1000000000 1000000000\\r\\n999999999 1000000000\\r\\n999999997 999999998\\r\\n47 74\\r\\n', 'output': ['1\\r\\n']}, {'input': '6\\r\\n1 2\\r\\n3 1\\r\\n4 7\\r\\n4 1\\r\\n9 1\\r\\n7 2\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n1 2\\r\\n1 2\\r\\n2 1\\r\\n2 1\\r\\n', 'output': ['0\\r\\n']}, {'input': '7\\r\\n4 7\\r\\n7 4\\r\\n4 7\\r\\n1 1\\r\\n2 2\\r\\n3 3\\r\\n4 4\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n1000000000 999999999\\r\\n47 74\\r\\n47474 75785445\\r\\n8798878 458445\\r\\n1 2\\r\\n888888888 777777777\\r\\n99999999 1000000000\\r\\n9999999 1000000000\\r\\n999999 1000000000\\r\\n99999 1000000000\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n9 1000000000\\r\\n47 74\\r\\n47474 75785445\\r\\n8798878 458445\\r\\n1 2\\r\\n888888888 777777777\\r\\n99999999 1000000000\\r\\n9999999 1000000000\\r\\n999999 1000000000\\r\\n99999 1000000000\\r\\n', 'output': ['5\\r\\n']}, {'input': '10\\r\\n1 10\\r\\n1 10\\r\\n1 1\\r\\n7 8\\r\\n6 7\\r\\n9 5\\r\\n4 1\\r\\n2 3\\r\\n3 10\\r\\n2 8\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10\\r\\n262253762 715261903\\r\\n414831157 8354405\\r\\n419984358 829693421\\r\\n376600467 175941985\\r\\n367533995 350629286\\r\\n681027822 408529849\\r\\n654503328 717740407\\r\\n539773033 704670473\\r\\n55322828 380422378\\r\\n46174018 186723478\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10\\r\\n2 2\\r\\n1 1\\r\\n1 1\\r\\n1 2\\r\\n1 2\\r\\n2 2\\r\\n2 1\\r\\n1 1\\r\\n1 2\\r\\n1 1\\r\\n', 'output': ['0\\r\\n']}, {'input': '12\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n', 'output': ['0\\r\\n']}, {'input': '47\\r\\n53 63\\r\\n43 57\\r\\n69 52\\r\\n66 47\\r\\n74 5\\r\\n5 2\\r\\n6 56\\r\\n19 27\\r\\n46 27\\r\\n31 45\\r\\n41 38\\r\\n20 20\\r\\n69 43\\r\\n17 74\\r\\n39 43\\r\\n28 70\\r\\n73 24\\r\\n73 59\\r\\n23 11\\r\\n56 49\\r\\n51 37\\r\\n70 16\\r\\n66 36\\r\\n4 7\\r\\n1 49\\r\\n7 65\\r\\n38 5\\r\\n47 74\\r\\n34 38\\r\\n17 22\\r\\n59 3\\r\\n70 40\\r\\n21 15\\r\\n10 5\\r\\n17 30\\r\\n9 12\\r\\n28 48\\r\\n70 42\\r\\n39 70\\r\\n18 53\\r\\n71 49\\r\\n66 25\\r\\n37 51\\r\\n10 62\\r\\n55 7\\r\\n18 53\\r\\n40 50\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100\\r\\n1 2\\r\\n2 1\\r\\n2 1\\r\\n1 2\\r\\n1 1\\r\\n1 2\\r\\n2 1\\r\\n1 1\\r\\n2 2\\r\\n2 1\\r\\n2 1\\r\\n1 1\\r\\n1 1\\r\\n2 1\\r\\n2 1\\r\\n2 1\\r\\n2 1\\r\\n2 1\\r\\n1 1\\r\\n2 1\\r\\n1 1\\r\\n1 1\\r\\n2 2\\r\\n1 2\\r\\n1 2\\r\\n1 2\\r\\n2 2\\r\\n1 2\\r\\n1 2\\r\\n2 1\\r\\n1 2\\r\\n2 1\\r\\n1 2\\r\\n2 2\\r\\n1 1\\r\\n2 1\\r\\n1 2\\r\\n2 1\\r\\n2 1\\r\\n1 2\\r\\n2 1\\r\\n2 1\\r\\n1 2\\r\\n2 1\\r\\n1 1\\r\\n1 2\\r\\n1 1\\r\\n1 1\\r\\n2 2\\r\\n2 2\\r\\n2 1\\r\\n2 1\\r\\n1 2\\r\\n2 2\\r\\n1 1\\r\\n2 1\\r\\n2 2\\r\\n1 1\\r\\n1 1\\r\\n1 2\\r\\n2 2\\r\\n2 1\\r\\n2 1\\r\\n2 2\\r\\n1 1\\r\\n1 1\\r\\n2 1\\r\\n2 1\\r\\n2 1\\r\\n2 2\\r\\n2 2\\r\\n2 1\\r\\n1 1\\r\\n1 2\\r\\n2 1\\r\\n2 2\\r\\n2 1\\r\\n1 1\\r\\n2 1\\r\\n2 1\\r\\n1 1\\r\\n1 2\\r\\n1 2\\r\\n2 1\\r\\n2 1\\r\\n2 1\\r\\n2 2\\r\\n1 2\\r\\n1 2\\r\\n2 1\\r\\n1 1\\r\\n1 1\\r\\n1 2\\r\\n2 1\\r\\n1 2\\r\\n2 2\\r\\n1 2\\r\\n2 1\\r\\n2 2\\r\\n2 1\\r\\n', 'output': ['0\\r\\n']}, {'input': '7\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n2 3\\r\\n4 5\\r\\n6 7\\r\\n8 9\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1\\r\\n1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '7\\r\\n1000000000 999999999\\r\\n1000000000 999999999\\r\\n1000000000 999999999\\r\\n1000000000 999999999\\r\\n1000000000 999999999\\r\\n1000000000 999999999\\r\\n1000000000 999999999\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n2 3\\r\\n', 'output': ['0\\r\\n']}, {'input': '2\\r\\n47 74\\r\\n47 85874\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n5 8\\r\\n9 10\\r\\n5 17\\r\\n5 24\\r\\n1 147\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n1 7\\r\\n2 7\\r\\n3 7\\r\\n4 7\\r\\n5 7\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n1 10\\r\\n2 10\\r\\n3 10\\r\\n4 10\\r\\n5 10\\r\\n', 'output': ['3\\r\\n']}, {'input': '3\\r\\n2 1\\r\\n3 1\\r\\n4 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '5\\r\\n1 2\\r\\n1 3\\r\\n4 1\\r\\n5 1\\r\\n6 7\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n4 7\\r\\n4 7\\r\\n2 7\\r\\n9 7\\r\\n1 1\\r\\n', 'output': ['3\\r\\n']}, {'input': '8\\r\\n1 2\\r\\n2 1\\r\\n2 1\\r\\n3 1\\r\\n4 2\\r\\n5 2\\r\\n6 2\\r\\n7 2\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n98751 197502\\r\\n296253 395004\\r\\n493755 592506\\r\\n', 'output': ['-1\\r\\n']}, {'input': '5\\r\\n1 5\\r\\n2 5\\r\\n3 5\\r\\n4 7\\r\\n2 5\\r\\n', 'output': ['3\\r\\n']}, {'input': '10\\r\\n1 10\\r\\n2 10\\r\\n3 10\\r\\n4 10\\r\\n5 10\\r\\n10 1\\r\\n10 2\\r\\n10 3\\r\\n10 4\\r\\n10 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '7\\r\\n1 2\\r\\n1 2\\r\\n1 2\\r\\n3 1\\r\\n3 1\\r\\n3 1\\r\\n2 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n1 6\\r\\n2 6\\r\\n3 6\\r\\n4 6\\r\\n5 6\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n1 6\\r\\n2 6\\r\\n3 6\\r\\n4 4\\r\\n5 5\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n1 1\\r\\n1 1\\r\\n2 2\\r\\n2 2\\r\\n3 3\\r\\n', 'output': ['-1\\r\\n']}, {'input': '4\\r\\n1 5\\r\\n2 5\\r\\n3 5\\r\\n4 4\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "n = int(input())\n\nd = {}\nfor i in range(n):\n    a, b = map(int, input().split())\n    if a in d:\n        d[a].append(b)\n    else:\n        d[a] = [b]\n\nans}
{"src_uid": "1ae2942b72ebb7c55359c41e141900d7", "id": 136, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1200, "testcases": "[{'input': '3\\r\\n3 10 4\\r\\n2 4 10 15 20\\r\\n', 'output': ['1 1 1 0 0 \\r\\n1\\r\\n']}, {'input': '4\\r\\n10 4 39 2\\r\\n3 5 10 11 12\\r\\n', 'output': ['3 0 1 0 3 \\r\\n0\\r\\n']}, {'input': '1\\r\\n45\\r\\n1 2 3 4 5\\r\\n', 'output': ['0 0 0 0 9 \\r\\n0\\r\\n']}, {'input': '1\\r\\n50\\r\\n1 2 4 5 6\\r\\n', 'output': ['0 1 0 0 8 \\r\\n0\\r\\n']}, {'input': '1\\r\\n6\\r\\n1 2 4 6 7\\r\\n', 'output': ['0 0 0 1 0 \\r\\n0\\r\\n']}, {'input': '1\\r\\n11\\r\\n1 2 3 6 8\\r\\n', 'output': ['0 0 1 0 1 \\r\\n0\\r\\n']}, {'input': '45\\r\\n54672703 354223499 798425228 192616902 934526477 130046515 120969797 1128116 221465324 487958664 211577865 653388287 538234 467693667 387627267 811104156 26715905 108515494 288069433 106690737 712686358 683861047 56548860 385125409 178325602 329144983 320699771 611743158 176982141 882718242 574909811 18981354 497482742 126502373 342328066 970474066 352019823 333022487 625437081 18635432 354739941 509867062 781623566 885791347 684953358\\r\\n1 2 3 4 5\\r\\n', 'output': ['10 15 9 7 3554511651 \\r\\n0\\r\\n']}, {'input': '5\\r\\n43 4 16 36 41\\r\\n5 6 7 8 9\\r\\n', 'output': ['0 0 2 0 14 \\r\\n0\\r\\n']}, {'input': '5\\r\\n6 6 47 32 28\\r\\n1 2 6 9 11\\r\\n', 'output': ['2 1 3 1 8 \\r\\n0\\r\\n']}, {'input': '5\\r\\n30 25 31 47 40\\r\\n1 3 6 13 20\\r\\n', 'output': ['6 3 3 0 7 \\r\\n0\\r\\n']}, {'input': '10\\r\\n588141495 24894836 162095938 610922780 767639361 522148294 556163403 302924834 618125209 410537083\\r\\n1 2 3 4 5\\r\\n', 'output': ['2 0 3 3 912718642 \\r\\n0\\r\\n']}, {'input': '10\\r\\n5 37 8 21 10 13 36 4 40 26\\r\\n3 5 6 7 10\\r\\n', 'output': ['1 2 1 3 16 \\r\\n0\\r\\n']}, {'input': '10\\r\\n3 25 17 20 25 26 15 35 47 16\\r\\n5 8 11 14 15\\r\\n', 'output': ['1 1 3 0 12 \\r\\n3\\r\\n']}, {'input': '10\\r\\n1 10 34 9 49 42 45 8 42 7\\r\\n2 6 11 13 14\\r\\n', 'output': ['5 5 1 0 14 \\r\\n0\\r\\n']}, {'input': '15\\r\\n13 44 13 13 38 25 43 25 40 28 5 23 25 41 6\\r\\n1 2 3 4 5\\r\\n', 'output': ['2 0 7 1 71 \\r\\n0\\r\\n']}, {'input': '15\\r\\n195995511 767544072 924890005 342377584 638748004 904551320 222776859 921356712 204326392 225923474 90658415 610365756 971907038 41090763 853207872\\r\\n5 7 8 9 10\\r\\n', 'output': ['3 0 3 2 791571972 \\r\\n0\\r\\n']}, {'input': '15\\r\\n14 19 5 16 11 22 40 7 13 21 24 26 49 22 26\\r\\n1 2 7 8 9\\r\\n', 'output': ['4 19 2 2 27 \\r\\n0\\r\\n']}, {'input': '15\\r\\n5 41 46 48 22 49 5 37 10 4 19 2 16 32 24\\r\\n2 11 15 18 20\\r\\n', 'output': ['30 1 2 1 12 \\r\\n1\\r\\n']}, {'input': '15\\r\\n50 12 36 11 38 28 4 11 29 34 22 46 43 2 29\\r\\n7 8 10 17 23\\r\\n', 'output': ['1 0 6 3 12 \\r\\n1\\r\\n']}, {'input': '15\\r\\n676837988 94471701 777591167 399710490 409807125 414445437 8315750 102835211 36239666 141260442 589733329 572072035 789807197 431009789 123234386\\r\\n20 39 45 46 48\\r\\n', 'output': ['5 2 1 0 115986906 \\r\\n2\\r\\n']}, {'input': '25\\r\\n26 29 17 11 35 21 11 22 17 24 41 44 27 34 42 24 44 3 8 25 23 6 16 41 2\\r\\n1 2 3 4 5\\r\\n', 'output': ['8 6 3 6 108 \\r\\n0\\r\\n']}, {'input': '25\\r\\n46 37 12 28 16 9 26 12 31 49 28 23 39 49 21 40 1 31 8 6 33 46 4 12 20\\r\\n5 6 7 8 10\\r\\n', 'output': ['1 2 2 3 57 \\r\\n2\\r\\n']}, {'input': '25\\r\\n48 3 22 29 40 21 28 31 22 16 17 3 47 37 38 15 16 27 41 48 17 11 22 15 15\\r\\n10 11 12 13 15\\r\\n', 'output': ['1 1 1 2 38 \\r\\n0\\r\\n']}, {'input': '49\\r\\n150841996 278751430 236103841 373294104 702072537 197872718 286517088 985323686 816421587 49928785 500114241 47334350 280942286 86728792 606895563 70696090 770589765 492645787 250574857 747511645 224488546 90659419 587972065 281798558 133719196 726362846 487266436 311413921 795767163 779792904 646907905 87907470 461431159 273590163 584894453 408543297 215247358 47704043 300890973 570589101 134168725 904691113 260042124 834209517 554685974 348043433 100083255 966828009 508031511\\r\\n1 2 3 4 5\\r\\n', 'output': ['12 7 12 7 4111778339 \\r\\n0\\r\\n']}, {'input': '25\\r\\n43 34 26 43 11 13 34 8 6 25 39 41 21 34 27 12 11 1 36 45 47 12 18 43 38\\r\\n1 2 10 24 25\\r\\n', 'output': ['11 46 19 0 15 \\r\\n0\\r\\n']}, {'input': '25\\r\\n38 30 40 7 7 18 43 5 29 49 50 9 4 18 30 35 21 22 15 33 9 31 32 22 6\\r\\n2 14 15 40 48\\r\\n', 'output': ['48 0 22 2 2 \\r\\n1\\r\\n']}, {'input': '50\\r\\n667406402 354775600 95220950 604569294 945922983 82947113 120853697 25192357 911801905 8804755 572528228 687361070 180664274 949243037 5283222 74969288 23627567 882714363 413386071 937062768 916521072 864701923 328941225 17876118 770879655 928962609 331124489 236187404 878629850 202558122 227732104 296494363 555832750 391788125 553472395 587090096 991781042 382982437 764518939 870576820 596491334 48319052 813976810 545209721 619789095 955839818 282149347 476620368 134986392 655856299\\r\\n1 2 3 4 5\\r\\n', 'output': ['3 13 11 9 4954444924 \\r\\n0\\r\\n']}, {'input': '50\\r\\n7 33 16 27 6 26 21 46 28 43 34 28 44 21 40 32 47 47 29 22 25 18 31 18 37 3 47 43 37 25 33 10 29 43 44 33 45 14 43 5 27 25 35 20 9 13 49 9 21 26\\r\\n3 4 5 7 9\\r\\n', 'output': ['4 6 6 15 138 \\r\\n1\\r\\n']}, {'input': '45\\r\\n18 21 6 3 48 23 5 26 37 6 49 6 42 19 8 39 38 47 36 22 13 21 14 32 43 42 5 30 35 36 16 34 32 8 1 37 14 29 39 50 25 26 10 25 39\\r\\n1 6 7 8 14\\r\\n', 'output': ['77 5 4 19 62 \\r\\n0\\r\\n']}, {'input': '45\\r\\n28 28 3 4 7 34 44 2 8 7 20 29 27 49 20 33 11 31 47 38 41 40 11 16 5 20 12 47 49 25 25 6 40 3 2 3 32 38 34 21 28 48 12 39 43\\r\\n9 10 12 14 20\\r\\n', 'output': ['4 5 2 8 44 \\r\\n8\\r\\n']}, {'input': '50\\r\\n17 30 29 29 50 42 15 18 34 10 30 3 44 11 4 35 42 8 14 41 30 4 11 1 3 23 7 28 35 6 24 37 6 12 8 7 36 40 41 26 13 46 15 40 32 34 15 28 46 31\\r\\n20 24 40 46 50\\r\\n', 'output': ['4 11 9 5 5 \\r\\n7\\r\\n']}]", "source_code": "n = int(input())\np = list(map(int, input().split()))\na, b, c, d, e = map(int, input().split())\n\nm = 0\nt = 0\nb = 0\ng = 0\nc = 0\n\nfor i in range(n):\n    if p[i] >= e:\n        p[i] -= e\n        c += 1\n    elif p[i] >= d:\n        p[i] -= d\n        g += 1\n    elif p[i] >= c:\n        p[i] -= c\n        b += 1\n    elif p[i] >= b:\n        p[i] -= b\n        t += 1\n    elif p[i] >= a:\n        p[i] -= a\n        m += 1\n\nprint(m, t, b, g, c)\nprint(p[n - 1])\n"}
{"src_uid": "102667eaa3aee012fef70f4192464674", "id": 137, "lang_cluster": "python", "lang": "Python 3", "difficulty": 900, "testcases": "[{'input': '2\\r\\n4 5\\r\\n3\\r\\n12 13 15\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n1 2 3 4\\r\\n5\\r\\n10 11 12 13 14\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 7 11 13\\r\\n4\\r\\n51 119 187 221\\r\\n', 'output': ['4\\r\\n']}, {'input': '4\\r\\n2 3 4 5\\r\\n3\\r\\n1 2 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n6 12 13 20 48 53 74 92 96 97\\r\\n10\\r\\n1 21 32 36 47 54 69 75 95 97\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 9 10 14 15 17 19 22 24 26\\r\\n10\\r\\n2 11 17 19 21 22 24 25 27 28\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n24 53 56 126 354 432 442 740 795 856\\r\\n10\\r\\n273 438 494 619 689 711 894 947 954 958\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n3 4 6 7 8 10 14 16 19 20\\r\\n10\\r\\n3 4 5 7 8 10 15 16 18 20\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n1 6 8 14 15 17 25 27 34 39\\r\\n10\\r\\n1 8 16 17 19 22 32 39 44 50\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n5 21 22 23 25 32 35 36 38 39\\r\\n10\\r\\n3 7 8 9 18 21 23 24 36 38\\r\\n', 'output': ['4\\r\\n']}, {'input': '50\\r\\n5 8 13 16 19 20 21 22 24 27 28 29 30 32 33 34 35 43 45 48 50 51 54 55 58 59 60 61 62 65 70 71 72 76 78 79 80 81 83 84 85 87 89 91 92 94 97 98 99 100\\r\\n50\\r\\n2 3 5 6 7 10 15 16 17 20 23 28 29 30 31 34 36 37 40 42 45 46 48 54 55 56 58 59 61 62 69 70 71 72 75 76 78 82 84 85 86 87 88 89 90 91 92 97 99 100\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n3 5 6 8 9 11 13 19 21 23 24 32 34 35 42 50 51 52 56 58 59 69 70 72 73 75 76 77 78 80 83 88 90 95 96 100 101 102 108 109 113 119 124 135 138 141 142 143 145 150\\r\\n50\\r\\n5 8 10 11 18 19 23 30 35 43 51 53 55 58 63 68 69 71 77 78 79 82 83 86 88 89 91 92 93 94 96 102 103 105 109 110 113 114 116 123 124 126 127 132 133 135 136 137 142 149\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 16 24 25 27 33 36 40 51 60 62 65 71 72 75 77 85 87 91 93 98 102 103 106 117 118 120 121 122 123 125 131 134 136 143 148 155 157 160 161 164 166 170 178 184 187 188 192 194 197\\r\\n50\\r\\n5 9 17 23 27 34 40 44 47 59 62 70 81 82 87 88 89 90 98 101 102 110 113 114 115 116 119 122 124 128 130 137 138 140 144 150 152 155 159 164 166 169 171 175 185 186 187 189 190 193\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 22 23 31 32 35 48 63 76 79 88 97 101 102 103 104 106 113 114 115 116 126 136 138 145 152 155 156 162 170 172 173 179 180 182 203 208 210 212 222 226 229 231 232 235 237 245 246 247 248\\r\\n50\\r\\n2 5 6 16 28 44 45 46 54 55 56 63 72 80 87 93 94 96 97 100 101 103 132 135 140 160 164 165 167 168 173 180 182 185 186 192 194 198 199 202 203 211 213 216 217 227 232 233 236 245\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n14 19 33 35 38 41 51 54 69 70 71 73 76 80 84 94 102 104 105 106 107 113 121 128 131 168 180 181 187 191 195 201 205 207 210 216 220 238 249 251 263 271 272 275 281 283 285 286 291 294\\r\\n50\\r\\n2 3 5 20 21 35 38 40 43 48 49 52 55 64 73 77 82 97 109 113 119 121 125 132 137 139 145 146 149 180 182 197 203 229 234 241 244 251 264 271 274 281 284 285 287 291 292 293 294 298\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n2 4 5 16 18 19 22 23 25 26 34 44 48 54 67 79 80 84 92 110 116 133 138 154 163 171 174 202 205 218 228 229 234 245 247 249 250 263 270 272 274 275 277 283 289 310 312 334 339 342\\r\\n50\\r\\n1 5 17 18 25 37 46 47 48 59 67 75 80 83 84 107 115 122 137 141 159 162 175 180 184 204 221 224 240 243 247 248 249 258 259 260 264 266 269 271 274 293 294 306 329 330 334 335 342 350\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n6 9 11 21 28 39 42 56 60 63 81 88 91 95 105 110 117 125 149 165 174 176 185 189 193 196 205 231 233 268 278 279 281 286 289 292 298 303 305 306 334 342 350 353 361 371 372 375 376 378\\r\\n50\\r\\n6 17 20 43 45 52 58 59 82 83 88 102 111 118 121 131 145 173 190 191 200 216 224 225 232 235 243 256 260 271 290 291 321 322 323 329 331 333 334 341 343 348 351 354 356 360 366 379 387 388\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n17 239 443 467 661 1069 1823 2333 3767 4201\\r\\n20\\r\\n51 83 97 457 593 717 997 1329 1401 1459 1471 1983 2371 2539 3207 3251 3329 5469 6637 6999\\r\\n', 'output': ['8\\r\\n']}, {'input': '20\\r\\n179 359 401 467 521 601 919 941 1103 1279 1709 1913 1949 2003 2099 2143 2179 2213 2399 4673\\r\\n20\\r\\n151 181 191 251 421 967 1109 1181 1249 1447 1471 1553 1619 2327 2551 2791 3049 3727 6071 7813\\r\\n', 'output': ['3\\r\\n']}, {'input': '20\\r\\n79 113 151 709 809 983 1291 1399 1409 1429 2377 2659 2671 2897 3217 3511 3557 3797 3823 4363\\r\\n10\\r\\n19 101 659 797 1027 1963 2129 2971 3299 9217\\r\\n', 'output': ['3\\r\\n']}, {'input': '30\\r\\n19 47 109 179 307 331 389 401 461 509 547 569 617 853 883 1249 1361 1381 1511 1723 1741 1783 2459 2531 2621 3533 3821 4091 5557 6217\\r\\n20\\r\\n401 443 563 941 967 997 1535 1567 1655 1747 1787 1945 1999 2251 2305 2543 2735 4415 6245 7555\\r\\n', 'output': ['8\\r\\n']}, {'input': '30\\r\\n3 43 97 179 257 313 353 359 367 389 397 457 547 599 601 647 1013 1021 1063 1433 1481 1531 1669 3181 3373 3559 3769 4157 4549 5197\\r\\n50\\r\\n13 15 17 19 29 79 113 193 197 199 215 223 271 293 359 485 487 569 601 683 895 919 941 967 1283 1285 1289 1549 1565 1765 1795 1835 1907 1931 1945 1985 1993 2285 2731 2735 2995 3257 4049 4139 5105 5315 7165 7405 7655 8345\\r\\n', 'output': ['20\\r\\n']}, {'input': '50\\r\\n11 17 23 53 59 109 137 149 173 251 353 379 419 421 439 503 593 607 661 773 821 877 941 997 1061 1117 1153 1229 1289 1297 1321 1609 1747 2311 2389 2543 2693 3041 3083 3137 3181 3209 3331 3373 3617 3767 4201 4409 4931 6379\\r\\n50\\r\\n55 59 67 73 85 89 101 115 211 263 295 353 545 599 607 685 739 745 997 1031 1255 1493 1523 1667 1709 1895 1949 2161 2195 2965 3019 3035 3305 3361 3373 3673 3739 3865 3881 4231 4253 4385 4985 5305 5585 5765 6145 6445 8045 8735\\r\\n', 'output': ['23\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'output': ['24\\r\\n']}, {'input': '5\\r\\n33 78 146 3055 4268\\r\\n5\\r\\n2211 2584 5226 9402 9782\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n35 48 52 86 8001\\r\\n10\\r\\n332 3430 3554 4704 4860 5096 6215 7583 8228 8428\\r\\n', 'output': ['4\\r\\n']}, {'input': '10\\r\\n97 184 207 228 269 2084 4450 6396 7214 9457\\r\\n16\\r\\n338 1179 1284 1545 1570 2444 3167 3395 3397 5550 6440 7245 7804 7980 9415 9959\\r\\n', 'output': ['5\\r\\n']}, {'input': '30\\r\\n25 30 41 57 58 62 70 72 76 79 84 85 88 91 98 101 104 109 119 129 136 139 148 151 926 1372 3093 3936 5423 7350\\r\\n25\\r\\n1600 1920 2624 3648 3712 3968 4480 4608 4864 5056 5376 5440 5632 5824 6272 6464 6656 6934 6976 7616 8256 8704 8896 9472 9664\\r\\n', 'output': ['24\\r\\n']}, {'input': '47\\r\\n66 262 357 457 513 530 538 540 592 691 707 979 1015 1242 1246 1667 1823 1886 1963 2133 2649 2679 2916 2949 3413 3523 3699 3958 4393 4922 5233 5306 5799 6036 6302 6629 7208 7282 7315 7822 7833 7927 8068 8150 8870 8962 9987\\r\\n39\\r\\n167 199 360 528 1515 1643 1986 1988 2154 2397 2856 3552 3656 3784 3980 4096 4104 4240 4320 4736 4951 5266 5656 5849 5850 6169 6517 6875 7244 7339 7689 7832 8120 8716 9503 9509 9933 9936 9968\\r\\n', 'output': ['12\\r\\n']}, {'input': '1\\r\\n94\\r\\n50\\r\\n423 446 485 1214 1468 1507 1853 1930 1999 2258 2271 2285 2425 2543 2715 2743 2992 3196 4074 4108 4448 4475 4652 5057 5250 5312 5356 5375 5731 5986 6298 6501 6521 7146 7255 7276 7332 7481 7998 8141 8413 8665 8908 9221 9336 9491 9504 9677 9693 9706\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n51 67 75 186 194 355 512 561 720 876 1077 1221 1503 1820 2153 2385 2568 2608 2937 2969 3271 3311 3481 4081 4093 4171 4255 4256 4829 5020 5192 5636 5817 6156 6712 6717 7153 7436 7608 7612 7866 7988 8264 8293 8867 9311 9879 9882 9889 9908\\r\\n1\\r\\n5394\\r\\n', 'output': ['1\\r\\n']}, {'input': '50\\r\\n26 367 495 585 675 789 855 1185 1312 1606 2037 2241 2587 2612 2628 2807 2873 2924 3774 4067 4376 4668 4902 5001 5082 5100 5104 5209 5345 5515 5661 5777 5902 5907 6155 6323 6675 6791 7503 8159 8207 8254 8740 8848 8855 8933 9069 9164 9171 9586\\r\\n5\\r\\n1557 6246 7545 8074 8284\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n25 58 91 110 2658\\r\\n50\\r\\n21 372 909 1172 1517 1554 1797 1802 1843 1977 2006 2025 2137 2225 2317 2507 2645 2754 2919 3024 3202 3212 3267 3852 4374 4487 4553 4668 4883 4911 4916 5016 5021 5068 5104 5162 5683 5856 6374 6871 7333 7531 8099 8135 8173 8215 8462 8776 9433 9790\\r\\n', 'output': ['4\\r\\n']}, {'input': '45\\r\\n37 48 56 59 69 70 79 83 85 86 99 114 131 134 135 145 156 250 1739 1947 2116 2315 2449 3104 3666 4008 4406 4723 4829 5345 5836 6262 6296 6870 7065 7110 7130 7510 7595 8092 8442 8574 9032 9091 9355\\r\\n50\\r\\n343 846 893 1110 1651 1837 2162 2331 2596 3012 3024 3131 3294 3394 3528 3717 3997 4125 4347 4410 4581 4977 5030 5070 5119 5229 5355 5413 5418 5474 5763 5940 6151 6161 6164 6237 6506 6519 6783 7182 7413 7534 8069 8253 8442 8505 9135 9308 9828 9902\\r\\n', 'output': ['17\\r\\n']}, {'input': '50\\r\\n17 20 22 28 36 38 46 47 48 50 52 57 58 62 63 69 70 74 75 78 79 81 82 86 87 90 93 95 103 202 292 442 1756 1769 2208 2311 2799 2957 3483 4280 4324 4932 5109 5204 6225 6354 6561 7136 8754 9670\\r\\n40\\r\\n68 214 957 1649 1940 2078 2134 2716 3492 3686 4462 4559 4656 4756 4850 5044 5490 5529 5592 5626 6014 6111 6693 6790 7178 7275 7566 7663 7702 7857 7954 8342 8511 8730 8957 9021 9215 9377 9445 9991\\r\\n', 'output': ['28\\r\\n']}, {'input': '39\\r\\n10 13 21 25 36 38 47 48 58 64 68 69 73 79 86 972 2012 2215 2267 2503 3717 3945 4197 4800 5266 6169 6612 6824 7023 7322 7582 7766 8381 8626 8879 9079 9088 9838 9968\\r\\n50\\r\\n432 877 970 1152 1202 1223 1261 1435 1454 1578 1843 1907 2003 2037 2183 2195 2215 2425 3065 3492 3615 3637 3686 3946 4189 4415 4559 4656 4665 4707 4886 4887 5626 5703 5955 6208 6521 6581 6596 6693 6985 7013 7081 7343 7663 8332 8342 8637 9207 9862\\r\\n', 'output': ['15\\r\\n']}, {'input': '50\\r\\n7 144 269 339 395 505 625 688 709 950 1102 1152 1350 1381 1641 1830 1977 1999 2093 2180 2718 3308 3574 4168 4232 4259 4393 4689 4982 5154 5476 5581 5635 5721 6159 6302 6741 7010 7152 7315 7417 7482 8116 8239 8640 9347 9395 9614 9661 9822\\r\\n20\\r\\n84 162 292 1728 1866 2088 3228 3470 4068 5318 5470 6060 6380 6929 7500 8256 8399 8467 8508 9691\\r\\n', 'output': ['8\\r\\n']}, {'input': '50\\r\\n159 880 1070 1139 1358 1608 1691 1841 2073 2171 2213 2597 2692 2759 2879 2931 3173 3217 3441 4201 4878 5106 5129 5253 5395 5647 5968 6019 6130 6276 6286 6330 6409 6728 7488 7713 7765 7828 7899 8064 8264 8457 8483 8685 8900 8946 8965 9133 9187 9638\\r\\n45\\r\\n57 159 1070 1139 1391 1608 1691 1841 2171 2213 2692 2759 2931 3173 3217 3441 4201 4878 5106 5129 5253 5647 5968 6130 6276 6286 6409 7488 7694 7713 7765 7828 7899 8003 8064 8081 8244 8264 8685 8900 8946 8965 9133 9638 9673\\r\\n', 'output': ['38\\r\\n']}, {'input': '3\\r\\n3 4 5\\r\\n3\\r\\n6 20 25\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n2 3 5 8\\r\\n4\\r\\n2 6 8 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n3 5 7 11\\r\\n4\\r\\n3 5 7 22\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n3\\r\\n20 30 50\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n4\\r\\n2 4 6 49\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n4 5\\r\\n3\\r\\n12 15 20\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n2 5 7\\r\\n3\\r\\n4 5 7\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n3 5 8\\r\\n3\\r\\n6 8 10\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 9 33\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 3\\r\\n4\\r\\n4 6 21 40\\r\\n', 'output': ['1\\r\\n']}, {'input': '3\\r\\n4 9 10\\r\\n3\\r\\n8 9 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n1 5 6 9 51\\r\\n5\\r\\n5 12 18 27 10000\\r\\n', 'output': ['1\\r\\n']}, {'input': '13\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\r\\n1\\r\\n14\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nb = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(m):\n        if a[i] % b[j] == 0:\n            ans += 1\n\nprint(ans)\n"}
{"src_uid": "cb4dbff31d967c3dab8fe0495eb871dc", "id": 138, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1200, "testcases": "[{'input': '2\\r\\n2 1\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n2 1\\r\\n4 1\\r\\n', 'output': ['0\\r\\n']}, {'input': '24\\r\\n171 35\\r\\n261 20\\r\\n4 206\\r\\n501 446\\r\\n961 912\\r\\n581 748\\r\\n946 978\\r\\n463 514\\r\\n841 889\\r\\n341 466\\r\\n842 967\\r\\n54 102\\r\\n235 261\\r\\n925 889\\r\\n682 672\\r\\n623 636\\r\\n268 94\\r\\n635 710\\r\\n474 510\\r\\n697 794\\r\\n586 663\\r\\n182 184\\r\\n806 663\\r\\n468 459\\r\\n', 'output': ['21\\r\\n']}, {'input': '17\\r\\n660 646\\r\\n440 442\\r\\n689 618\\r\\n441 415\\r\\n922 865\\r\\n950 972\\r\\n312 366\\r\\n203 229\\r\\n873 860\\r\\n219 199\\r\\n344 308\\r\\n169 176\\r\\n961 992\\r\\n153 84\\r\\n201 230\\r\\n987 938\\r\\n834 815\\r\\n', 'output': ['16\\r\\n']}, {'input': '11\\r\\n798 845\\r\\n722 911\\r\\n374 270\\r\\n629 537\\r\\n748 856\\r\\n831 885\\r\\n486 641\\r\\n751 829\\r\\n609 492\\r\\n98 27\\r\\n654 663\\r\\n', 'output': ['10\\r\\n']}, {'input': '1\\r\\n321 88\\r\\n', 'output': ['0\\r\\n']}, {'input': '9\\r\\n811 859\\r\\n656 676\\r\\n76 141\\r\\n945 951\\r\\n497 455\\r\\n18 55\\r\\n335 294\\r\\n267 275\\r\\n656 689\\r\\n', 'output': ['7\\r\\n']}, {'input': '7\\r\\n948 946\\r\\n130 130\\r\\n761 758\\r\\n941 938\\r\\n971 971\\r\\n387 385\\r\\n509 510\\r\\n', 'output': ['6\\r\\n']}, {'input': '6\\r\\n535 699\\r\\n217 337\\r\\n508 780\\r\\n180 292\\r\\n393 112\\r\\n732 888\\r\\n', 'output': ['5\\r\\n']}, {'input': '14\\r\\n25 23\\r\\n499 406\\r\\n193 266\\r\\n823 751\\r\\n219 227\\r\\n101 138\\r\\n978 992\\r\\n43 74\\r\\n997 932\\r\\n237 189\\r\\n634 538\\r\\n774 740\\r\\n842 767\\r\\n742 802\\r\\n', 'output': ['13\\r\\n']}, {'input': '12\\r\\n548 506\\r\\n151 198\\r\\n370 380\\r\\n655 694\\r\\n654 690\\r\\n407 370\\r\\n518 497\\r\\n819 827\\r\\n765 751\\r\\n802 771\\r\\n741 752\\r\\n653 662\\r\\n', 'output': ['11\\r\\n']}, {'input': '40\\r\\n685 711\\r\\n433 403\\r\\n703 710\\r\\n491 485\\r\\n616 619\\r\\n288 282\\r\\n884 871\\r\\n367 352\\r\\n500 511\\r\\n977 982\\r\\n51 31\\r\\n576 564\\r\\n508 519\\r\\n755 762\\r\\n22 20\\r\\n368 353\\r\\n232 225\\r\\n953 955\\r\\n452 436\\r\\n311 330\\r\\n967 988\\r\\n369 364\\r\\n791 803\\r\\n150 149\\r\\n651 661\\r\\n118 93\\r\\n398 387\\r\\n748 766\\r\\n852 852\\r\\n230 228\\r\\n555 545\\r\\n515 519\\r\\n667 678\\r\\n867 862\\r\\n134 146\\r\\n859 863\\r\\n96 99\\r\\n486 469\\r\\n303 296\\r\\n780 786\\r\\n', 'output': ['38\\r\\n']}, {'input': '3\\r\\n175 201\\r\\n907 909\\r\\n388 360\\r\\n', 'output': ['2\\r\\n']}, {'input': '7\\r\\n312 298\\r\\n86 78\\r\\n73 97\\r\\n619 594\\r\\n403 451\\r\\n538 528\\r\\n71 86\\r\\n', 'output': ['6\\r\\n']}, {'input': '19\\r\\n802 820\\r\\n368 248\\r\\n758 794\\r\\n455 378\\r\\n876 888\\r\\n771 814\\r\\n245 177\\r\\n586 555\\r\\n844 842\\r\\n364 360\\r\\n820 856\\r\\n731 624\\r\\n982 975\\r\\n825 856\\r\\n122 121\\r\\n862 896\\r\\n42 4\\r\\n792 841\\r\\n828 820\\r\\n', 'output': ['16\\r\\n']}, {'input': '32\\r\\n643 877\\r\\n842 614\\r\\n387 176\\r\\n99 338\\r\\n894 798\\r\\n652 728\\r\\n611 648\\r\\n622 694\\r\\n579 781\\r\\n243 46\\r\\n322 305\\r\\n198 438\\r\\n708 579\\r\\n246 325\\r\\n536 459\\r\\n874 593\\r\\n120 277\\r\\n989 907\\r\\n223 110\\r\\n35 130\\r\\n761 692\\r\\n690 661\\r\\n518 766\\r\\n226 93\\r\\n678 597\\r\\n725 617\\r\\n661 574\\r\\n775 496\\r\\n56 416\\r\\n14 189\\r\\n358 359\\r\\n898 901\\r\\n', 'output': ['31\\r\\n']}, {'input': '32\\r\\n325 327\\r\\n20 22\\r\\n72 74\\r\\n935 933\\r\\n664 663\\r\\n726 729\\r\\n785 784\\r\\n170 171\\r\\n315 314\\r\\n577 580\\r\\n984 987\\r\\n313 317\\r\\n434 435\\r\\n962 961\\r\\n55 54\\r\\n46 44\\r\\n743 742\\r\\n434 433\\r\\n617 612\\r\\n332 332\\r\\n883 886\\r\\n940 936\\r\\n793 792\\r\\n645 644\\r\\n611 607\\r\\n418 418\\r\\n465 465\\r\\n219 218\\r\\n167 164\\r\\n56 54\\r\\n403 405\\r\\n210 210\\r\\n', 'output': ['29\\r\\n']}, {'input': '32\\r\\n652 712\\r\\n260 241\\r\\n27 154\\r\\n188 16\\r\\n521 351\\r\\n518 356\\r\\n452 540\\r\\n790 827\\r\\n339 396\\r\\n336 551\\r\\n897 930\\r\\n828 627\\r\\n27 168\\r\\n180 113\\r\\n134 67\\r\\n794 671\\r\\n812 711\\r\\n100 241\\r\\n686 813\\r\\n138 289\\r\\n384 506\\r\\n884 932\\r\\n913 959\\r\\n470 508\\r\\n730 734\\r\\n373 478\\r\\n788 862\\r\\n392 426\\r\\n148 68\\r\\n113 49\\r\\n713 852\\r\\n924 894\\r\\n', 'output': ['29\\r\\n']}, {'input': '14\\r\\n685 808\\r\\n542 677\\r\\n712 747\\r\\n832 852\\r\\n187 410\\r\\n399 338\\r\\n626 556\\r\\n530 635\\r\\n267 145\\r\\n215 209\\r\\n559 684\\r\\n944 949\\r\\n753 596\\r\\n601 823\\r\\n', 'output': ['13\\r\\n']}, {'input': '5\\r\\n175 158\\r\\n16 2\\r\\n397 381\\r\\n668 686\\r\\n957 945\\r\\n', 'output': ['4\\r\\n']}, {'input': '5\\r\\n312 284\\r\\n490 509\\r\\n730 747\\r\\n504 497\\r\\n782 793\\r\\n', 'output': ['4\\r\\n']}, {'input': '2\\r\\n802 903\\r\\n476 348\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n325 343\\r\\n425 442\\r\\n785 798\\r\\n275 270\\r\\n', 'output': ['3\\r\\n']}, {'input': '28\\r\\n462 483\\r\\n411 401\\r\\n118 94\\r\\n111 127\\r\\n5 6\\r\\n70 52\\r\\n893 910\\r\\n73 63\\r\\n818 818\\r\\n182 201\\r\\n642 633\\r\\n900 886\\r\\n893 886\\r\\n684 700\\r\\n157 173\\r\\n953 953\\r\\n671 660\\r\\n224 225\\r\\n832 801\\r\\n152 157\\r\\n601 585\\r\\n115 101\\r\\n739 722\\r\\n611 606\\r\\n659 642\\r\\n461 469\\r\\n702 689\\r\\n649 653\\r\\n', 'output': ['25\\r\\n']}, {'input': '36\\r\\n952 981\\r\\n885 900\\r\\n803 790\\r\\n107 129\\r\\n670 654\\r\\n143 132\\r\\n66 58\\r\\n813 819\\r\\n849 837\\r\\n165 198\\r\\n247 228\\r\\n15 39\\r\\n619 618\\r\\n105 138\\r\\n868 855\\r\\n965 957\\r\\n293 298\\r\\n613 599\\r\\n227 212\\r\\n745 754\\r\\n723 704\\r\\n877 858\\r\\n503 487\\r\\n678 697\\r\\n592 595\\r\\n155 135\\r\\n962 982\\r\\n93 89\\r\\n660 673\\r\\n225 212\\r\\n967 987\\r\\n690 680\\r\\n804 813\\r\\n489 518\\r\\n240 221\\r\\n111 124\\r\\n', 'output': ['34\\r\\n']}, {'input': '30\\r\\n89 3\\r\\n167 156\\r\\n784 849\\r\\n943 937\\r\\n144 95\\r\\n24 159\\r\\n80 120\\r\\n657 683\\r\\n585 596\\r\\n43 147\\r\\n909 964\\r\\n131 84\\r\\n345 389\\r\\n333 321\\r\\n91 126\\r\\n274 325\\r\\n859 723\\r\\n866 922\\r\\n622 595\\r\\n690 752\\r\\n902 944\\r\\n127 170\\r\\n426 383\\r\\n905 925\\r\\n172 284\\r\\n793 810\\r\\n414 510\\r\\n890 884\\r\\n123 24\\r\\n267 255\\r\\n', 'output': ['29\\r\\n']}, {'input': '5\\r\\n664 666\\r\\n951 941\\r\\n739 742\\r\\n844 842\\r\\n2 2\\r\\n', 'output': ['4\\r\\n']}, {'input': '3\\r\\n939 867\\r\\n411 427\\r\\n757 708\\r\\n', 'output': ['2\\r\\n']}, {'input': '36\\r\\n429 424\\r\\n885 972\\r\\n442 386\\r\\n512 511\\r\\n751 759\\r\\n4 115\\r\\n461 497\\r\\n496 408\\r\\n8 23\\r\\n542 562\\r\\n296 331\\r\\n448 492\\r\\n412 395\\r\\n109 166\\r\\n622 640\\r\\n379 355\\r\\n251 262\\r\\n564 586\\r\\n66 115\\r\\n275 291\\r\\n666 611\\r\\n629 534\\r\\n510 567\\r\\n635 666\\r\\n738 803\\r\\n420 369\\r\\n92 17\\r\\n101 144\\r\\n141 92\\r\\n258 258\\r\\n184 235\\r\\n492 456\\r\\n311 210\\r\\n394 357\\r\\n531 512\\r\\n634 636\\r\\n', 'output': ['34\\r\\n']}, {'input': '29\\r\\n462 519\\r\\n871 825\\r\\n127 335\\r\\n156 93\\r\\n576 612\\r\\n885 830\\r\\n634 779\\r\\n340 105\\r\\n744 795\\r\\n716 474\\r\\n93 139\\r\\n563 805\\r\\n137 276\\r\\n177 101\\r\\n333 14\\r\\n391 437\\r\\n873 588\\r\\n817 518\\r\\n460 597\\r\\n572 670\\r\\n140 303\\r\\n392 441\\r\\n273 120\\r\\n862 578\\r\\n670 639\\r\\n410 161\\r\\n544 577\\r\\n193 116\\r\\n252 195\\r\\n', 'output': ['28\\r\\n']}, {'input': '23\\r\\n952 907\\r\\n345 356\\r\\n812 807\\r\\n344 328\\r\\n242 268\\r\\n254 280\\r\\n1000 990\\r\\n80 78\\r\\n424 396\\r\\n595 608\\r\\n755 813\\r\\n383 380\\r\\n55 56\\r\\n598 633\\r\\n203 211\\r\\n508 476\\r\\n600 593\\r\\n206 192\\r\\n855 882\\r\\n517 462\\r\\n967 994\\r\\n642 657\\r\\n493 488\\r\\n', 'output': ['22\\r\\n']}, {'input': '10\\r\\n579 816\\r\\n806 590\\r\\n830 787\\r\\n120 278\\r\\n677 800\\r\\n16 67\\r\\n188 251\\r\\n559 560\\r\\n87 67\\r\\n104 235\\r\\n', 'output': ['8\\r\\n']}, {'input': '23\\r\\n420 424\\r\\n280 303\\r\\n515 511\\r\\n956 948\\r\\n799 803\\r\\n441 455\\r\\n362 369\\r\\n299 289\\r\\n823 813\\r\\n982 967\\r\\n876 878\\r\\n185 157\\r\\n529 551\\r\\n964 989\\r\\n655 656\\r\\n1 21\\r\\n114 112\\r\\n45 56\\r\\n935 937\\r\\n1000 997\\r\\n934 942\\r\\n360 366\\r\\n648 621\\r\\n', 'output': ['22\\r\\n']}, {'input': '23\\r\\n102 84\\r\\n562 608\\r\\n200 127\\r\\n952 999\\r\\n465 496\\r\\n322 367\\r\\n728 690\\r\\n143 147\\r\\n855 867\\r\\n861 866\\r\\n26 59\\r\\n300 273\\r\\n255 351\\r\\n192 246\\r\\n70 111\\r\\n365 277\\r\\n32 104\\r\\n298 319\\r\\n330 354\\r\\n241 141\\r\\n56 125\\r\\n315 298\\r\\n412 461\\r\\n', 'output': ['22\\r\\n']}, {'input': '7\\r\\n429 506\\r\\n346 307\\r\\n99 171\\r\\n853 916\\r\\n322 263\\r\\n115 157\\r\\n906 924\\r\\n', 'output': ['6\\r\\n']}, {'input': '3\\r\\n1 1\\r\\n2 1\\r\\n2 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '4\\r\\n1 1\\r\\n1 2\\r\\n2 1\\r\\n2 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n1 1\\r\\n1 2\\r\\n2 2\\r\\n3 1\\r\\n3 3\\r\\n', 'output': ['0\\r\\n']}, {'input': '6\\r\\n1 1\\r\\n1 2\\r\\n2 2\\r\\n3 1\\r\\n3 2\\r\\n3 3\\r\\n', 'output': ['0\\r\\n']}, {'input': '20\\r\\n1 1\\r\\n2 2\\r\\n3 3\\r\\n3 9\\r\\n4 4\\r\\n5 2\\r\\n5 5\\r\\n5 7\\r\\n5 8\\r\\n6 2\\r\\n6 6\\r\\n6 9\\r\\n7 7\\r\\n8 8\\r\\n9 4\\r\\n9 7\\r\\n9 9\\r\\n10 2\\r\\n10 9\\r\\n10 10\\r\\n', 'output': ['1\\r\\n']}, {'input': '21\\r\\n1 1\\r\\n1 9\\r\\n2 1\\r\\n2 2\\r\\n2 5\\r\\n2 6\\r\\n2 9\\r\\n3 3\\r\\n3 8\\r\\n4 1\\r\\n4 4\\r\\n5 5\\r\\n5 8\\r\\n6 6\\r\\n7 7\\r\\n8 8\\r\\n9 9\\r\\n10 4\\r\\n10 10\\r\\n11 5\\r\\n11 11\\r\\n', 'output': ['1\\r\\n']}, {'input': '22\\r\\n1 1\\r\\n1 3\\r\\n1 4\\r\\n1 8\\r\\n1 9\\r\\n1 11\\r\\n2 2\\r\\n3 3\\r\\n4 4\\r\\n4 5\\r\\n5 5\\r\\n6 6\\r\\n6 8\\r\\n7 7\\r\\n8 3\\r\\n8 4\\r\\n8 8\\r\\n9 9\\r\\n10 10\\r\\n11 4\\r\\n11 9\\r\\n11 11\\r\\n', 'output': ['3\\r\\n']}, {'input': '50\\r\\n1 1\\r\\n2 2\\r\\n2 9\\r\\n3 3\\r\\n4 4\\r\\n4 9\\r\\n4 16\\r\\n4 24\\r\\n5 5\\r\\n6 6\\r\\n7 7\\r\\n8 8\\r\\n8 9\\r\\n8 20\\r\\n9 9\\r\\n10 10\\r\\n11 11\\r\\n12 12\\r\\n13 13\\r\\n14 7\\r\\n14 14\\r\\n14 16\\r\\n14 25\\r\\n15 4\\r\\n15 6\\r\\n15 15\\r\\n15 22\\r\\n16 6\\r\\n16 16\\r\\n17 17\\r\\n18 18\\r\\n19 6\\r\\n19 19\\r\\n20 20\\r\\n21 21\\r\\n22 6\\r\\n22 22\\r\\n23 23\\r\\n24 6\\r\\n24 7\\r\\n24 8\\r\\n24 9\\r\\n24 24\\r\\n25 1\\r\\n25 3\\r\\n25 5\\r\\n25 7\\r\\n25 23\\r\\n25 24\\r\\n25 25\\r\\n', 'output': ['7\\r\\n']}, {'input': '55\\r\\n1 1\\r\\n1 14\\r\\n2 2\\r\\n2 19\\r\\n3 1\\r\\n3 3\\r\\n3 8\\r\\n3 14\\r\\n3 23\\r\\n4 1\\r\\n4 4\\r\\n5 5\\r\\n5 8\\r\\n5 15\\r\\n6 2\\r\\n6 3\\r\\n6 4\\r\\n6 6\\r\\n7 7\\r\\n8 8\\r\\n8 21\\r\\n9 9\\r\\n10 1\\r\\n10 10\\r\\n11 9\\r\\n11 11\\r\\n12 12\\r\\n13 13\\r\\n14 14\\r\\n15 15\\r\\n15 24\\r\\n16 5\\r\\n16 16\\r\\n17 5\\r\\n17 10\\r\\n17 17\\r\\n17 18\\r\\n17 22\\r\\n17 27\\r\\n18 18\\r\\n19 19\\r\\n20 20\\r\\n21 20\\r\\n21 21\\r\\n22 22\\r\\n23 23\\r\\n24 14\\r\\n24 24\\r\\n25 25\\r\\n26 8\\r\\n26 11\\r\\n26 26\\r\\n27 3\\r\\n27 27\\r\\n28 28\\r\\n', 'output': ['5\\r\\n']}, {'input': '3\\r\\n1 2\\r\\n2 1\\r\\n2 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '6\\r\\n4 4\\r\\n3 4\\r\\n5 4\\r\\n4 5\\r\\n4 3\\r\\n3 1\\r\\n', 'output': ['0\\r\\n']}, {'input': '4\\r\\n1 1\\r\\n1 2\\r\\n2 1\\r\\n2 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\n1 1\\r\\n2 2\\r\\n1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '8\\r\\n1 3\\r\\n1 1\\r\\n4 1\\r\\n2 2\\r\\n2 5\\r\\n5 9\\r\\n5 1\\r\\n5 4\\r\\n', 'output': ['1\\r\\n']}, {'input': '10\\r\\n1 1\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n5 5\\r\\n6 6\\r\\n7 7\\r\\n8 8\\r\\n9 9\\r\\n100 100\\r\\n', 'output': ['6\\r\\n']}, {'input': '7\\r\\n1 1\\r\\n2 2\\r\\n3 3\\r\\n4 4\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n', 'output': ['0\\r\\n']}, {'input': '6\\r\\n1 1\\r\\n2 1\\r\\n2 2\\r\\n2 4\\r\\n4 3\\r\\n2 3\\r\\n', 'output': ['0\\r\\n']}, {'input': '4\\r\\n3 1\\r\\n2 1\\r\\n2 2\\r\\n1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '6\\r\\n1 1\\r\\n2 2\\r\\n2 1\\r\\n2 4\\r\\n4 3\\r\\n2 3\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n', 'output': ['0\\r\\n']}, {'input': '4\\r\\n1 1\\r\\n2 2\\r\\n1 2\\r\\n2 1\\r\\n', 'output': ['0\\r\\n']}, {'input': '4\\r\\n1 3\\r\\n2 1\\r\\n3 2\\r\\n3 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '7\\r\\n1 1\\r\\n1 2\\r\\n2 2\\r\\n3 3\\r\\n3 4\\r\\n4 4\\r\\n1 4\\r\\n', 'output': ['0\\r\\n']}, {'input': '21\\r\\n12 12\\r\\n13 12\\r\\n12 11\\r\\n13 13\\r\\n10 10\\r\\n11 10\\r\\n11 11\\r\\n501 500\\r\\n501 501\\r\\n503 502\\r\\n500 500\\r\\n503 503\\r\\n502 501\\r\\n502 502\\r\\n700 700\\r\\n702 702\\r\\n703 702\\r\\n701 701\\r\\n702 701\\r\\n703 703\\r\\n701 700\\r\\n', 'output': ['2\\r\\n']}, {'input': '6\\r\\n1 11\\r\\n6 8\\r\\n11 10\\r\\n1 10\\r\\n11 11\\r\\n6 9\\r\\n', 'output': ['1\\r\\n']}, {'input': '4\\r\\n1 1\\r\\n2 2\\r\\n3 2\\r\\n3 1\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\n1 2\\r\\n3 4\\r\\n3 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\n1 1\\r\\n1 2\\r\\n2 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '4\\r\\n5 5\\r\\n5 4\\r\\n6 3\\r\\n6 4\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\n1 1\\r\\n2 2\\r\\n2 1\\r\\n', 'output': ['0\\r\\n']}]", "source_code": "n = int(input())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\n\ndef bfs(x, y):\n    visited = [[False for i in range(1001)] for j in range(1001)]\n    visited[x][y] = True\n    q = []\n    q.append((x, y))\n    while len(q) > 0:\n        x, y = q.pop(0)\n        for i in range(4):\n            nx = x + dx[i]\n            ny = y + dy[i]\n            if not visited[nx][ny]:\n                visited[nx][ny] = True\n                q.append((nx, ny))\n\n\ndx = [0, 1, 0, -1]\ndy = [1, 0, -1, 0]\n\nfor i in range(n):\n    for j in range(n):\n        if a[i][0] == a[j][0] and a[i][1] == a[j][1]:\n            continue\n        bfs(a[i][0], a[i][1])\n        bfs(a[j][0], a[j][1])\n\n\nans = 0\nfor i in range(1001):\n    for j in range(1001):\n        if not visited[i][j]:\n            ans += 1\n\nprint(ans)\n"}
{"src_uid": "c3244e952830643938d51ce14f043d7d", "id": 139, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1200, "testcases": "[{'input': 'atob\\r\\na\\r\\nb\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aaacaaa\\r\\naca\\r\\naa\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aaa\\r\\naa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'astalavista\\r\\nastla\\r\\nlavista\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'abacabadabacaba\\r\\nabacaba\\r\\nabacaba\\r\\n', 'output': ['both\\r\\n']}, {'input': 'a\\r\\na\\r\\na\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'ab\\r\\nb\\r\\na\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaa\\r\\naaaa\\r\\naaaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'bbabbbbababbaabaabaa\\r\\nabb\\r\\nbaab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'babaabababaaaababaabababaabababababababbababbbabbaabababaababbaabbababaababaaabababaabbaababaaababaa\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'bbbbbbbbbbbbbbbbbbbbbbbbb\\r\\nbbbb\\r\\nbbbbb\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aababaaababaabbaabababaaababaabababbaabbabaabababaabbabbbababbababababababaabababaababaaaabababaabab\\r\\nabaabababaa\\r\\nabaabbaa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'aaaa\\r\\naaa\\r\\naa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzzzz\\r\\nzzzz\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'zzzz\\r\\nzz\\r\\nzz\\r\\n', 'output': ['both\\r\\n']}, {'input': 'aabaa\\r\\naab\\r\\nbaa\\r\\n', 'output': ['fantasy\\r\\n']}, {'input': 'aabaab\\r\\naba\\r\\nab\\r\\n', 'output': ['forward\\r\\n']}, {'input': 'aab\\r\\nb\\r\\naa\\r\\n', 'output': ['backward\\r\\n']}, {'input': 'abacaba\\r\\naca\\r\\nba\\r\\n', 'output': ['both\\r\\n']}]", "source_code": "s = input()\na = input()\nb = input()\n\nif a in s and b in s:\n    print('both')\nelif a in s:\n    print('forward')\nelif b in s:\n    print('backward')\nelse:\n    print('fantasy')\n"}
{"src_uid": "15fa49860e978d3b3fb7a20bf9f8aa86", "id": 140, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1200, "testcases": "[{'input': '4 5 2\\r\\n0 2 4 6\\r\\n4 1\\r\\n', 'output': ['3']}, {'input': '2 1 1\\r\\n0 100000\\r\\n100000 100000\\r\\n', 'output': ['2']}, {'input': '6 5 1\\r\\n0 1 2 3 4 5\\r\\n0 0\\r\\n', 'output': ['2']}, {'input': '4 100 10\\r\\n0 118 121 178\\r\\n220 220\\r\\n', 'output': ['4']}, {'input': '4 3 3\\r\\n0 6 8 10\\r\\n7 -4\\r\\n', 'output': ['2']}, {'input': '5 900 1\\r\\n0 37474 80030 85359 97616\\r\\n-1 -1\\r\\n', 'output': ['2']}, {'input': '5 200 400\\r\\n0 8068 28563 51720 66113\\r\\n5423 -34\\r\\n', 'output': ['2']}, {'input': '6 10 3\\r\\n0 12 14 16 19 20\\r\\n14 0\\r\\n', 'output': ['3']}, {'input': '6 13 11\\r\\n0 16 27 31 39 42\\r\\n54 3\\r\\n', 'output': ['6']}, {'input': '11 853 721\\r\\n0 134 1971 2369 3381 3997 4452 6875 8983 9360 9399\\r\\n7345 333\\r\\n', 'output': ['8']}, {'input': '35 35 12\\r\\n0 90486 90543 90763 91127 91310 92047 92405 93654 93814 94633 94752 94969 94994 95287 96349 96362 96723 96855 96883 97470 97482 97683 97844 97926 98437 98724 98899 98921 99230 99253 99328 99444 99691 99947\\r\\n96233 -7777\\r\\n', 'output': ['9']}, {'input': '55 11 44\\r\\n0 3343 3387 3470 3825 3832 3971 4026 4043 4389 4492 4886 5015 5084 5161 5436 5595 5616 5677 5987 6251 6312 6369 6469 6487 6493 6507 6641 6928 7067 7159 7280 7303 7385 7387 7465 7536 7572 7664 7895 7921 7955 8110 8191 8243 8280 8523 8525 8581 8877 9221 9462 9505 9594 9596\\r\\n8000 0\\r\\n', 'output': ['2']}, {'input': '72 1000 777\\r\\n0 215 2814 5104 5226 5925 6734 9213 11697 13739 14015 16101 17234 19013 19566 19683 20283 20837 21332 21432 25490 26284 27728 29911 30112 30133 31494 31595 32499 32932 33289 36611 37736 43548 44440 44537 47656 47699 48327 50942 52178 53759 56925 57671 62024 65441 67958 70346 71606 75235 75466 75553 75905 76173 76512 77784 78183 80425 81339 81543 84537 88384 89953 90214 92107 92274 93328 93550 93987 97546 99459 99532\\r\\n63421 35\\r\\n', 'output': ['45']}, {'input': '76 1 1\\r\\n0 1000 1754 2749 3687 4983 8121 10299 11043 12986 14125 15910 17070 17189 17551 17953 17973 20816 25436 26150 27446 27788 28466 28941 29537 33965 37566 40845 40930 41304 41614 41615 43042 45098 45844 49878 50453 50936 55480 58410 59258 59287 62789 64127 64333 64450 64862 65404 66451 67626 69294 69804 71988 72165 74196 74560 75407 76611 77055 77344 79470 83566 84550 87458 87627 88205 89880 90255 90586 91970 93795 95308 99032 99442 99547 99549\\r\\n0 0\\r\\n', 'output': ['2']}, {'input': '94 2 1\\r\\n0 5000 5001 5002 5003 5004 5005 5006 5007 5008 5009 5010 5011 5012 5013 5014 5015 5016 5017 5018 5019 5020 5021 5022 5023 5024 5025 5026 5027 5028 5029 5030 5031 5032 5033 5034 5035 5036 5037 5038 5040 5041 5042 5043 5044 5045 5046 5047 5048 5049 5050 5051 5052 5053 5054 5055 5056 5057 5058 5059 5060 5061 5062 5063 5064 5065 5066 5067 5068 5069 5070 5071 5072 5073 5074 5075 5076 5077 5078 5079 5080 5081 5082 5083 5084 5085 5086 5087 5088 5089 5090 5091 5092 5093\\r\\n5050 -100000\\r\\n', 'output': ['2']}, {'input': '100 1 2\\r\\n0 1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\r\\n100 0\\r\\n', 'output': ['2']}, {'input': '100 1000 1\\r\\n0 505 506 514 515 520 523 527 529 530 538 547 550 554 559 562 566 568 569 580 582 584 588 597 609 621 624 629 630 631 634 641 646 653 657 666 673 678 680 683 685 690 695 698 699 700 705 709 716 731 734 735 736 738 756 761 762 765 769 772 776 779 784 790 794 812 814 816 833 837 842 845 850 854 855 863 868 872 882 892 893 898 899 900 901 902 915 916 917 932 936 954 962 968 975 978 983 992 996 998\\r\\n600 7778\\r\\n', 'output': ['23']}, {'input': '2 1 1\\r\\n0 100000\\r\\n-100000 -100000\\r\\n', 'output': ['2']}, {'input': '2 1000 1000\\r\\n0 1\\r\\n1 0\\r\\n', 'output': ['2']}, {'input': '3 1 1\\r\\n0 1 2\\r\\n2 0\\r\\n', 'output': ['3']}]", "source_code": "n,vb,vs=map(int,input().split())\nx=list(map(int,input().split()))\nxu,yu=map(int,input().split())\n\nans=0\nfor i in range(n):\n    if i==0:\n        continue\n    if (x[i]-x[i-1])*vs<(xu-x[i])*vb:\n        ans=i\nprint(ans+1)\n"}
{"src_uid": "c31fed523230af1f904218b2fe0d663d", "id": 141, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1200, "testcases": "[{'input': '2 2\\r\\n0 4\\r\\n6 2\\r\\n', 'output': ['4\\r\\n']}, {'input': '2 2\\r\\n0 4\\r\\n5 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '2 3\\r\\n0 4\\r\\n5 2\\r\\n', 'output': ['2\\r\\n']}, {'input': '1 1\\r\\n1 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '1 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '2 1\\r\\n2 1\\r\\n1 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '2 2\\r\\n0 4\\r\\n7 4\\r\\n', 'output': ['4\\r\\n']}, {'input': '4 1\\r\\n-12 1\\r\\n-14 1\\r\\n4 1\\r\\n-11 1\\r\\n', 'output': ['5\\r\\n']}, {'input': '6 15\\r\\n19 1\\r\\n2 3\\r\\n6 2\\r\\n-21 2\\r\\n-15 2\\r\\n23 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '10 21\\r\\n-61 6\\r\\n55 2\\r\\n-97 1\\r\\n37 1\\r\\n-39 1\\r\\n26 2\\r\\n21 1\\r\\n64 3\\r\\n-68 1\\r\\n-28 6\\r\\n', 'output': ['6\\r\\n']}, {'input': '26 51\\r\\n783 54\\r\\n-850 6\\r\\n-997 59\\r\\n573 31\\r\\n-125 20\\r\\n472 52\\r\\n101 5\\r\\n-561 4\\r\\n625 35\\r\\n911 14\\r\\n-47 33\\r\\n677 55\\r\\n-410 54\\r\\n13 53\\r\\n173 31\\r\\n968 30\\r\\n-497 7\\r\\n832 42\\r\\n271 59\\r\\n-638 52\\r\\n-301 51\\r\\n378 36\\r\\n-813 7\\r\\n-206 22\\r\\n-737 37\\r\\n-911 9\\r\\n', 'output': ['35\\r\\n']}, {'input': '14 101\\r\\n121 88\\r\\n-452 91\\r\\n635 28\\r\\n-162 59\\r\\n-872 26\\r\\n-996 8\\r\\n468 86\\r\\n742 63\\r\\n892 89\\r\\n-249 107\\r\\n300 51\\r\\n-753 17\\r\\n-620 31\\r\\n-13 34\\r\\n', 'output': ['16\\r\\n']}, {'input': '3 501\\r\\n827 327\\r\\n-85 480\\r\\n-999 343\\r\\n', 'output': ['6\\r\\n']}, {'input': '2 999\\r\\n-999 471\\r\\n530 588\\r\\n', 'output': ['4\\r\\n']}, {'input': '22 54\\r\\n600 43\\r\\n806 19\\r\\n-269 43\\r\\n-384 78\\r\\n222 34\\r\\n392 10\\r\\n318 30\\r\\n488 73\\r\\n-756 49\\r\\n-662 22\\r\\n-568 50\\r\\n-486 16\\r\\n-470 2\\r\\n96 66\\r\\n864 16\\r\\n934 15\\r\\n697 43\\r\\n-154 30\\r\\n775 5\\r\\n-876 71\\r\\n-33 78\\r\\n-991 31\\r\\n', 'output': ['30\\r\\n']}, {'input': '17 109\\r\\n52 7\\r\\n216 24\\r\\n-553 101\\r\\n543 39\\r\\n391 92\\r\\n-904 67\\r\\n95 34\\r\\n132 14\\r\\n730 103\\r\\n952 118\\r\\n-389 41\\r\\n-324 36\\r\\n-74 2\\r\\n-147 99\\r\\n-740 33\\r\\n233 1\\r\\n-995 3\\r\\n', 'output': ['16\\r\\n']}, {'input': '4 512\\r\\n-997 354\\r\\n-568 216\\r\\n-234 221\\r\\n603 403\\r\\n', 'output': ['4\\r\\n']}, {'input': '3 966\\r\\n988 5\\r\\n15 2\\r\\n-992 79\\r\\n', 'output': ['6\\r\\n']}, {'input': '2 1000\\r\\n-995 201\\r\\n206 194\\r\\n', 'output': ['4\\r\\n']}, {'input': '50 21\\r\\n-178 1\\r\\n49 1\\r\\n-98 1\\r\\n-220 1\\r\\n152 1\\r\\n-160 3\\r\\n17 2\\r\\n77 1\\r\\n-24 1\\r\\n214 2\\r\\n-154 2\\r\\n-141 1\\r\\n79 1\\r\\n206 1\\r\\n8 1\\r\\n-208 1\\r\\n36 1\\r\\n231 3\\r\\n-2 2\\r\\n-130 2\\r\\n-14 2\\r\\n34 1\\r\\n-187 2\\r\\n14 1\\r\\n-83 2\\r\\n-241 1\\r\\n149 2\\r\\n73 1\\r\\n-233 3\\r\\n-45 1\\r\\n197 1\\r\\n145 2\\r\\n-127 2\\r\\n-229 4\\r\\n-85 1\\r\\n-66 1\\r\\n-76 2\\r\\n104 1\\r\\n175 1\\r\\n70 1\\r\\n131 3\\r\\n-108 1\\r\\n-5 4\\r\\n140 1\\r\\n33 1\\r\\n248 3\\r\\n-36 3\\r\\n134 1\\r\\n-183 1\\r\\n56 2\\r\\n', 'output': ['9\\r\\n']}, {'input': '50 1\\r\\n37 1\\r\\n-38 1\\r\\n7 1\\r\\n47 1\\r\\n-4 1\\r\\n24 1\\r\\n-32 1\\r\\n-23 1\\r\\n-3 1\\r\\n-19 1\\r\\n5 1\\r\\n-50 1\\r\\n11 1\\r\\n-11 1\\r\\n49 1\\r\\n-39 1\\r\\n0 1\\r\\n43 1\\r\\n-10 1\\r\\n6 1\\r\\n19 1\\r\\n1 1\\r\\n27 1\\r\\n29 1\\r\\n-47 1\\r\\n-40 1\\r\\n-46 1\\r\\n-26 1\\r\\n-42 1\\r\\n-37 1\\r\\n13 1\\r\\n-29 1\\r\\n-30 1\\r\\n3 1\\r\\n44 1\\r\\n10 1\\r\\n4 1\\r\\n-14 1\\r\\n-2 1\\r\\n34 1\\r\\n18 1\\r\\n-33 1\\r\\n-44 1\\r\\n9 1\\r\\n-36 1\\r\\n-7 1\\r\\n25 1\\r\\n22 1\\r\\n-20 1\\r\\n-41 1\\r\\n', 'output': ['43\\r\\n']}, {'input': '50 1\\r\\n-967 7\\r\\n696 7\\r\\n-366 4\\r\\n557 1\\r\\n978 2\\r\\n800 4\\r\\n-161 2\\r\\n-773 2\\r\\n-248 2\\r\\n134 3\\r\\n869 6\\r\\n-932 2\\r\\n-262 14\\r\\n191 3\\r\\n669 2\\r\\n72 5\\r\\n0 1\\r\\n757 8\\r\\n859 2\\r\\n-131 8\\r\\n-169 3\\r\\n543 10\\r\\n-120 2\\r\\n-87 8\\r\\n-936 6\\r\\n-620 3\\r\\n-281 11\\r\\n684 3\\r\\n886 10\\r\\n497 4\\r\\n380 4\\r\\n833 1\\r\\n-727 6\\r\\n470 11\\r\\n584 9\\r\\n66 6\\r\\n-609 12\\r\\n-661 4\\r\\n-57 8\\r\\n628 7\\r\\n635 4\\r\\n-924 3\\r\\n-982 4\\r\\n-201 7\\r\\n-9 8\\r\\n-560 9\\r\\n712 7\\r\\n-330 8\\r\\n-191 1\\r\\n-892 7\\r\\n', 'output': ['96\\r\\n']}, {'input': '1 1000\\r\\n0 1000\\r\\n', 'output': ['2\\r\\n']}]", "source_code": "n,t=map(int,input().split())\na=[]\nfor i in range(n):\n    x,y=map(int,input().split())\n    a.append([x-y,x+y])\na.sort()\nans=0\nfor i in range(n):\n    if a[i][0]>=t:\n        ans+=2\n    elif a[i][0]>=0:\n        ans+=1\n    elif a[i][1]<=t:\n        ans+=2\n    elif a[i][1]<=0:\n        ans+=1\n    else:\n        ans+=2\nprint(ans)"}
{"src_uid": "6f6859aabc1c9cbb9ee0d910064d87c2", "id": 142, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1100, "testcases": "[{'input': '6\\r\\n549871\\r\\n', 'output': ['54-98-71']}, {'input': '7\\r\\n1198733\\r\\n', 'output': ['119-87-33']}, {'input': '2\\r\\n74\\r\\n', 'output': ['74']}, {'input': '2\\r\\n33\\r\\n', 'output': ['33']}, {'input': '3\\r\\n074\\r\\n', 'output': ['074']}, {'input': '3\\r\\n081\\r\\n', 'output': ['081']}, {'input': '4\\r\\n3811\\r\\n', 'output': ['38-11']}, {'input': '5\\r\\n21583\\r\\n', 'output': ['215-83']}, {'input': '8\\r\\n33408349\\r\\n', 'output': ['33-40-83-49']}, {'input': '9\\r\\n988808426\\r\\n', 'output': ['988-80-84-26']}, {'input': '10\\r\\n0180990956\\r\\n', 'output': ['01-80-99-09-56']}, {'input': '15\\r\\n433488906230138\\r\\n', 'output': ['433-48-89-06-23-01-38']}, {'input': '22\\r\\n7135498415686025907059\\r\\n', 'output': ['71-35-49-84-15-68-60-25-90-70-59']}, {'input': '49\\r\\n2429965524999668169991253653390090510755018570235\\r\\n', 'output': ['242-99-65-52-49-99-66-81-69-99-12-53-65-33-90-09-05-10-75-50-18-57-02-35']}, {'input': '72\\r\\n491925337784111770500147619881727525570039735507439360627744863794794290\\r\\n', 'output': ['49-19-25-33-77-84-11-17-70-50-01-47-61-98-81-72-75-25-57-00-39-73-55-07-43-93-60-62-77-44-86-37-94-79-42-90']}, {'input': '95\\r\\n32543414456047900690980198395035321172843693417425457554204776648220562494524275489599199209210\\r\\n', 'output': ['325-43-41-44-56-04-79-00-69-09-80-19-83-95-03-53-21-17-28-43-69-34-17-42-54-57-55-42-04-77-66-48-22-05-62-49-45-24-27-54-89-59-91-99-20-92-10']}, {'input': '97\\r\\n9362344595153688016434451101547661156123505108492010669557671355055642365998461003851354321478898\\r\\n', 'output': ['936-23-44-59-51-53-68-80-16-43-44-51-10-15-47-66-11-56-12-35-05-10-84-92-01-06-69-55-76-71-35-50-55-64-23-65-99-84-61-00-38-51-35-43-21-47-88-98']}, {'input': '98\\r\\n65521815795893886057122984634320900545031770769333931308009346017867969790810907868670369236928568\\r\\n', 'output': ['65-52-18-15-79-58-93-88-60-57-12-29-84-63-43-20-90-05-45-03-17-70-76-93-33-93-13-08-00-93-46-01-78-67-96-97-90-81-09-07-86-86-70-36-92-36-92-85-68']}, {'input': '99\\r\\n455213856470326729480192345541970106407563996625458559297407682539801838244443866898560852503660390\\r\\n', 'output': ['455-21-38-56-47-03-26-72-94-80-19-23-45-54-19-70-10-64-07-56-39-96-62-54-58-55-92-97-40-76-82-53-98-01-83-82-44-44-38-66-89-85-60-85-25-03-66-03-90']}, {'input': '100\\r\\n4004223124942730640235383244438257614581534320356060987241659784249551110165034719443327659510644224\\r\\n', 'output': ['40-04-22-31-24-94-27-30-64-02-35-38-32-44-43-82-57-61-45-81-53-43-20-35-60-60-98-72-41-65-97-84-24-95-51-11-01-65-03-47-19-44-33-27-65-95-10-64-42-24']}]", "source_code": "n = int(input())\ns = input()\n\nif n % 2 == 0:\n    print('-'.join([s[i:i+2] for i in range(0, n, 2)]))\nelse:\n    print('-'.join([s[i:i+3] for i in range(0, n, 3)]))"}
{"src_uid": "8a9adc116abbd387a6a64dd754436f8a", "id": 143, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1400, "testcases": "[{'input': '2 18 2\\r\\n', 'output': ['3']}, {'input': '-1 8 3\\r\\n', 'output': ['-2']}, {'input': '0 0 10\\r\\n', 'output': ['5']}, {'input': '1 16 5\\r\\n', 'output': ['No solution']}, {'input': '0 1 2\\r\\n', 'output': ['No solution']}, {'input': '3 0 4\\r\\n', 'output': ['0']}, {'input': '1 1000 1\\r\\n', 'output': ['1000']}, {'input': '7 896 7\\r\\n', 'output': ['2']}, {'input': '4 972 1\\r\\n', 'output': ['243']}, {'input': '-1 -1 5\\r\\n', 'output': ['1']}, {'input': '-1 0 4\\r\\n', 'output': ['0']}, {'input': '-7 0 1\\r\\n', 'output': ['0']}, {'input': '-5 -5 3\\r\\n', 'output': ['1']}, {'input': '-5 -5 9\\r\\n', 'output': ['1']}, {'input': '-5 -5 6\\r\\n', 'output': ['1']}, {'input': '-4 0 1\\r\\n', 'output': ['0']}, {'input': '-5 0 3\\r\\n', 'output': ['0']}, {'input': '-4 4 9\\r\\n', 'output': ['-1']}, {'input': '10 0 6\\r\\n', 'output': ['0']}, {'input': '-5 3 4\\r\\n', 'output': ['No solution']}, {'input': '0 3 6\\r\\n', 'output': ['No solution']}, {'input': '3 6 10\\r\\n', 'output': ['No solution']}, {'input': '-3 7 5\\r\\n', 'output': ['No solution']}, {'input': '-526 526 1\\r\\n', 'output': ['-1']}, {'input': '-373 373 3\\r\\n', 'output': ['-1']}, {'input': '-141 0 8\\r\\n', 'output': ['0']}, {'input': '7 175 1\\r\\n', 'output': ['25']}, {'input': '-5 -560 1\\r\\n', 'output': ['112']}, {'input': '-1 -512 10\\r\\n', 'output': ['No solution']}, {'input': '-3 -768 8\\r\\n', 'output': ['2']}, {'input': '-3 -768 7\\r\\n', 'output': ['No solution']}, {'input': '-3 -768 9\\r\\n', 'output': ['No solution']}, {'input': '-3 -768 4\\r\\n', 'output': ['4']}, {'input': '4 972 4\\r\\n', 'output': ['No solution']}, {'input': '4 972 5\\r\\n', 'output': ['3']}, {'input': '4 972 6\\r\\n', 'output': ['No solution']}, {'input': '4 972 1\\r\\n', 'output': ['243']}, {'input': '4 972 2\\r\\n', 'output': ['No solution']}, {'input': '1 1000 1\\r\\n', 'output': ['1000']}, {'input': '1 961 2\\r\\n', 'output': ['31']}, {'input': '1 1000 3\\r\\n', 'output': ['10']}, {'input': '1 625 4\\r\\n', 'output': ['5']}, {'input': '4 972 5\\r\\n', 'output': ['3']}, {'input': '1 729 6\\r\\n', 'output': ['3']}, {'input': '7 896 7\\r\\n', 'output': ['2']}, {'input': '3 768 8\\r\\n', 'output': ['2']}, {'input': '1 512 9\\r\\n', 'output': ['2']}, {'input': '1 1000 1\\r\\n', 'output': ['1000']}, {'input': '1 961 2\\r\\n', 'output': ['31']}, {'input': '1 1000 3\\r\\n', 'output': ['10']}, {'input': '1 625 4\\r\\n', 'output': ['5']}, {'input': '4 972 5\\r\\n', 'output': ['3']}, {'input': '1 729 6\\r\\n', 'output': ['3']}, {'input': '7 896 7\\r\\n', 'output': ['2']}, {'input': '3 768 8\\r\\n', 'output': ['2']}, {'input': '1 512 9\\r\\n', 'output': ['2']}, {'input': '1 1000 1\\r\\n', 'output': ['1000']}, {'input': '1 961 2\\r\\n', 'output': ['31']}, {'input': '1 1000 3\\r\\n', 'output': ['10']}, {'input': '1 625 4\\r\\n', 'output': ['5']}, {'input': '4 972 5\\r\\n', 'output': ['3']}, {'input': '1 729 6\\r\\n', 'output': ['3']}, {'input': '7 896 7\\r\\n', 'output': ['2']}, {'input': '3 768 8\\r\\n', 'output': ['2']}, {'input': '1 512 9\\r\\n', 'output': ['2']}, {'input': '1 1 5\\r\\n', 'output': ['1']}, {'input': '1 1 4\\r\\n', 'output': ['1']}, {'input': '1 -1 1\\r\\n', 'output': ['-1']}]", "source_code": "a,b,n=map(int,input().split())\nif a==0 and b!=0:\n    print(\"No solution\")\nelif a==0 and b==0:\n    print(0)\nelse:\n    for i in range(1,n+1):\n        if a*i==b:\n            print(i)\n            break\n        elif a*i>b:\n            print(\"No solution\")\n            break\n"}
{"src_uid": "3d6411d67c85f6293f1999ccff2cd8ba", "id": 144, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1200, "testcases": "[{'input': '4 4\\r\\n1 2 2 3\\r\\n', 'output': ['4']}, {'input': '4 3\\r\\n1 1 1 1\\r\\n', 'output': ['5']}, {'input': '3 3\\r\\n1 2 3\\r\\n', 'output': ['2']}, {'input': '1 1\\r\\n1\\r\\n', 'output': ['0']}, {'input': '1 5\\r\\n1\\r\\n', 'output': ['4']}, {'input': '1 5\\r\\n4\\r\\n', 'output': ['1']}, {'input': '2 6\\r\\n2 5\\r\\n', 'output': ['4']}, {'input': '6 10\\r\\n1 1 3 4 9 9\\r\\n', 'output': ['10']}, {'input': '7 7\\r\\n1 1 1 1 1 1 7\\r\\n', 'output': ['11']}, {'input': '10 10\\r\\n1 1 1 3 3 4 7 8 8 8\\r\\n', 'output': ['11']}, {'input': '10 13\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['21']}, {'input': '10 13\\r\\n2 6 6 7 9 9 9 10 12 12\\r\\n', 'output': ['11']}, {'input': '17 9\\r\\n2 3 4 5 5 5 5 5 6 6 7 7 8 8 8 8 8\\r\\n', 'output': ['17']}, {'input': '18 24\\r\\n3 3 3 4 5 7 8 8 9 9 9 9 10 10 11 11 11 11\\r\\n', 'output': ['30']}, {'input': '23 2\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\\r\\n', 'output': ['12']}, {'input': '37 42\\r\\n1 1 1 1 1 2 2 2 2 2 3 4 4 4 4 5 5 5 5 6 6 6 6 6 6 6 6 7 7 7 7 7 8 8 8 8 8\\r\\n', 'output': ['70']}, {'input': '44 50\\r\\n38 38 38 38 38 38 38 39 39 39 39 39 39 39 40 40 40 40 40 41 41 41 41 41 41 41 42 42 42 43 43 43 44 44 44 44 45 45 45 46 46 46 46 46\\r\\n', 'output': ['47']}, {'input': '57 100\\r\\n2 2 4 7 8 10 12 12 14 15 16 18 19 21 21 22 25 26 26 33 38 40 44 44 44 45 47 47 50 51 51 54 54 54 54 55 56 58 61 65 67 68 68 70 74 75 78 79 83 86 89 90 92 95 96 96 97\\r\\n', 'output': ['99']}, {'input': '78 10\\r\\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\\r\\n', 'output': ['78']}, {'input': '96 78\\r\\n20 20 20 20 20 21 21 21 22 23 23 24 24 25 25 27 28 29 30 30 30 32 32 32 33 33 33 33 34 34 35 36 37 37 39 39 41 41 41 41 42 42 43 43 43 44 44 45 46 46 48 48 49 50 51 51 51 52 53 55 55 56 56 56 56 57 58 59 60 61 61 61 62 62 62 63 63 64 64 64 65 65 65 66 66 67 68 69 71 72 72 73 73 75 75 75\\r\\n', 'output': ['98']}, {'input': '100 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['0']}, {'input': '100 100\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['198']}, {'input': '100 100\\r\\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\\r\\n', 'output': ['0']}, {'input': '100 100\\r\\n1 1 4 4 5 5 7 9 10 10 11 11 12 12 12 13 14 15 16 16 16 17 18 18 19 20 22 25 26 27 29 32 33 34 34 35 35 35 36 36 37 37 38 39 39 40 41 42 44 44 46 47 47 47 47 50 53 53 53 55 56 56 57 57 58 58 59 59 62 64 64 64 64 68 68 68 69 70 70 71 74 77 77 77 79 80 80 81 84 86 88 88 91 93 94 96 96 99 99 99\\r\\n', 'output': ['108']}, {'input': '100 100\\r\\n1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 3 3 3 3 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 7 7 7 7 8 8 8 8 8 9 9 9 9 9 9 9 10 10 10 10 10 11 11 11 11 11 12 12 12 12 12 12 13 13 13 13 13 13 13 14 14 14 14 14 14 14 14 14 14 14 14 14 15 15 15 15 15\\r\\n', 'output': ['184']}, {'input': '100 100\\r\\n20 20 20 21 21 21 21 21 22 23 23 23 23 23 23 24 24 25 25 26 26 26 26 26 27 27 27 27 28 28 28 28 29 29 29 29 29 30 30 30 30 31 32 32 34 34 34 34 34 34 34 34 35 35 35 36 36 37 37 37 37 37 37 38 38 38 39 40 41 41 42 42 42 42 42 43 43 43 44 44 44 44 44 45 45 45 45 45 46 46 46 46 46 47 47 47 48 48 48 50\\r\\n', 'output': ['150']}, {'input': '100 2\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\r\\n', 'output': ['59']}, {'input': '30 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 49\\r\\n', 'output': ['77']}, {'input': '40 20\\r\\n5 5 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 18 20 20 20 20 20 20 20 20 20 20\\r\\n', 'output': ['31']}, {'input': '81 90\\r\\n1 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90\\r\\n', 'output': ['89']}, {'input': '100 20\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 13 13 13 13 13 13 13 13 13\\r\\n', 'output': ['106']}, {'input': '100 100\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 100\\r\\n', 'output': ['197']}, {'input': '100 100\\r\\n49 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 51\\r\\n', 'output': ['148']}, {'input': '1 100\\r\\n1\\r\\n', 'output': ['99']}, {'input': '4 3\\r\\n1 1 2 2\\r\\n', 'output': ['4']}, {'input': '10 100\\r\\n98 99 99 99 99 99 99 100 100 100\\r\\n', 'output': ['7']}, {'input': '5 100\\r\\n1 2 2 100 100\\r\\n', 'output': ['100']}]", "source_code": "n,k=map(int,input().split())\na=list(map(int,input().split()))\nif a.count(k)==n:\n    print(0)\nelse:\n    c=0\n    while a.count(k)!=n:\n        a.sort()\n        for i in range(len(a)):\n            if a[i]!=k:\n                a[i]+=1\n                c+=1\n                break\n    print(c)"}
{"src_uid": "5d11fa8528f1dc873d50b3417bef8c79", "id": 145, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1100, "testcases": "[{'input': '1\\r\\n2\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n1 2 1 2 1\\r\\n', 'output': ['3\\r\\n']}, {'input': '8\\r\\n1 2 1 1 1 3 3 4\\r\\n', 'output': ['6\\r\\n']}, {'input': '10\\r\\n1 2 3 4 5 6 7 8 9 10\\r\\n', 'output': ['10\\r\\n']}, {'input': '10\\r\\n10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['10\\r\\n']}, {'input': '2\\r\\n100 100\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n100 100 100\\r\\n', 'output': ['3\\r\\n']}, {'input': '11\\r\\n1 2 3 4 5 6 5 4 3 2 1\\r\\n', 'output': ['11\\r\\n']}, {'input': '100\\r\\n1 2 3 4 5 6 7 8 9 10 11 100 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 1 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['61\\r\\n']}, {'input': '100\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 1 82 83 84 85 86 87 88 89 90 91 92 93 94 100 5 4 3 2 1\\r\\n', 'output': ['81\\r\\n']}, {'input': '100\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 1 86 87 88 89 90 91 92 93 100 6 5 4 3 2 1\\r\\n', 'output': ['85\\r\\n']}, {'input': '100\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 1 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 100 7 6 5 4 3 2 1\\r\\n', 'output': ['61\\r\\n']}, {'input': '100\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 100 8 7 6 1 4 3 2 1\\r\\n', 'output': ['96\\r\\n']}, {'input': '100\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 100 10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['100\\r\\n']}, {'input': '100\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 1 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 100 11 10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['55\\r\\n']}, {'input': '100\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 1 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 100 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['59\\r\\n']}, {'input': '100\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 1 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 100 13 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['86\\r\\n']}, {'input': '100\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 1 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 100 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['83\\r\\n']}, {'input': '100\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 100 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 1 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['74\\r\\n']}, {'input': '100\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 100 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['100\\r\\n']}, {'input': '100\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 100 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 1 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\r\\n', 'output': ['52\\r\\n']}, {'input': '100\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 100 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 1 2 1\\r\\n', 'output': ['98\\r\\n']}, {'input': '10\\r\\n1 4 4 4 4 4 1 2 4 3\\r\\n', 'output': ['7\\r\\n']}]", "source_code": "n = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] == 1:\n        continue\n    ans = max(ans, 1 + a.count(1))\n    a[i] = 1\n\nprint(ans)\n"}
{"src_uid": "facd9cd4fc1e53f50a1e6f947d78e942", "id": 146, "lang_cluster": "python", "lang": "Python 3", "difficulty": 800, "testcases": "[{'input': '5\\r\\n10 12 13 15 10\\r\\n', 'output': ['5 1\\r\\n']}, {'input': '4\\r\\n10 20 30 40\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '6\\r\\n744 359 230 586 944 442\\r\\n', 'output': ['2 3\\r\\n']}, {'input': '5\\r\\n826 747 849 687 437\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '5\\r\\n999 999 993 969 999\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '5\\r\\n4 24 6 1 15\\r\\n', 'output': ['3 4\\r\\n']}, {'input': '2\\r\\n511 32\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '3\\r\\n907 452 355\\r\\n', 'output': ['2 3\\r\\n']}, {'input': '4\\r\\n303 872 764 401\\r\\n', 'output': ['4 1\\r\\n']}, {'input': '10\\r\\n684 698 429 694 956 812 594 170 937 764\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '20\\r\\n646 840 437 946 640 564 936 917 487 752 844 734 468 969 674 646 728 642 514 695\\r\\n', 'output': ['7 8\\r\\n']}, {'input': '30\\r\\n996 999 998 984 989 1000 996 993 1000 983 992 999 999 1000 979 992 987 1000 996 1000 1000 989 981 996 995 999 999 989 999 1000\\r\\n', 'output': ['12 13\\r\\n']}, {'input': '50\\r\\n93 27 28 4 5 78 59 24 19 134 31 128 118 36 90 32 32 1 44 32 33 13 31 10 12 25 38 50 25 12 4 22 28 53 48 83 4 25 57 31 71 24 8 7 28 86 23 80 101 58\\r\\n', 'output': ['16 17\\r\\n']}, {'input': '88\\r\\n1000 1000 1000 1000 1000 998 998 1000 1000 1000 1000 999 999 1000 1000 1000 999 1000 997 999 997 1000 999 998 1000 999 1000 1000 1000 999 1000 999 999 1000 1000 999 1000 999 1000 1000 998 1000 1000 1000 998 998 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 999 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 998 1000 1000 998 1000 999 1000 1000 1000 1000\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '99\\r\\n4 4 21 6 5 3 13 2 6 1 3 4 1 3 1 9 11 1 6 17 4 5 20 4 1 9 5 11 3 4 14 1 3 3 1 4 3 5 27 1 1 2 10 7 11 4 19 7 11 6 11 13 3 1 10 7 2 1 16 1 9 4 29 13 2 12 14 2 21 1 9 8 26 12 12 5 2 14 7 8 8 8 9 4 12 2 6 6 7 16 8 14 2 10 20 15 3 7 4\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '100\\r\\n713 572 318 890 577 657 646 146 373 783 392 229 455 871 20 593 573 336 26 381 280 916 907 732 820 713 111 840 570 446 184 711 481 399 788 647 492 15 40 530 549 506 719 782 126 20 778 996 712 761 9 74 812 418 488 175 103 585 900 3 604 521 109 513 145 708 990 361 682 827 791 22 596 780 596 385 450 643 158 496 876 975 319 783 654 895 891 361 397 81 682 899 347 623 809 557 435 279 513 438\\r\\n', 'output': ['86 87\\r\\n']}, {'input': '100\\r\\n31 75 86 68 111 27 22 22 26 30 54 163 107 75 160 122 14 23 17 26 27 20 43 58 59 71 21 148 9 32 43 91 133 286 132 70 90 156 84 14 77 93 23 18 13 72 18 131 33 28 72 175 30 86 249 20 14 208 28 57 63 199 6 10 24 30 62 267 43 479 60 28 138 1 45 3 19 47 7 166 116 117 50 140 28 14 95 85 93 43 61 15 2 70 10 51 7 95 9 25\\r\\n', 'output': ['7 8\\r\\n']}, {'input': '100\\r\\n896 898 967 979 973 709 961 968 806 967 896 967 826 975 936 903 986 856 851 931 852 971 786 837 949 978 686 936 952 909 965 749 908 916 943 973 983 975 939 886 964 928 960 976 907 788 994 773 949 871 947 980 945 985 726 981 887 943 907 990 931 874 840 867 948 951 961 904 888 901 976 967 994 921 828 970 972 722 755 970 860 855 914 869 714 899 969 978 898 862 642 939 904 936 819 934 884 983 955 964\\r\\n', 'output': ['1 2\\r\\n']}, {'input': '100\\r\\n994 927 872 970 815 986 952 996 965 1000 877 986 978 999 950 990 936 997 993 960 921 860 895 869 943 998 983 968 973 953 999 990 995 871 853 979 973 963 953 938 997 989 993 964 960 973 946 975 1000 962 920 746 989 957 904 965 920 979 966 961 1000 993 975 952 846 971 991 979 985 969 984 973 956 1000 952 778 983 974 956 927 995 997 980 997 1000 970 960 970 988 983 947 904 935 972 1000 863 992 996 932 967\\r\\n', 'output': ['81 82\\r\\n']}, {'input': '100\\r\\n48 108 63 21 27 8 49 21 75 8 24 42 149 18 8 28 21 18 25 35 59 70 59 33 40 1 67 34 120 82 4 115 72 87 3 15 15 63 37 12 40 27 83 14 38 20 14 58 93 10 31 3 39 6 197 77 54 16 31 146 9 49 14 8 77 82 5 11 80 116 8 61 50 24 7 103 29 11 3 3 1 12 46 24 21 131 39 29 36 2 107 40 16 99 31 41 29 48 17 17\\r\\n', 'output': ['36 37\\r\\n']}]", "source_code": "n = int(input())\na = list(map(int, input().split()))\n\nmin_diff}
{"src_uid": "69850c2af99d60711bcff5870575e15e", "id": 147, "lang_cluster": "python", "lang": "Python 3", "difficulty": 800, "testcases": "[{'input': '3\\r\\n5 6\\r\\n1 2\\r\\n', 'output': ['5\\r\\n']}, {'input': '3\\r\\n5 6\\r\\n1 3\\r\\n', 'output': ['11\\r\\n']}, {'input': '2\\r\\n55\\r\\n1 2\\r\\n', 'output': ['55\\r\\n']}, {'input': '3\\r\\n85 78\\r\\n1 3\\r\\n', 'output': ['163\\r\\n']}, {'input': '4\\r\\n63 4 49\\r\\n2 3\\r\\n', 'output': ['4\\r\\n']}, {'input': '5\\r\\n93 83 42 56\\r\\n2 5\\r\\n', 'output': ['181\\r\\n']}, {'input': '6\\r\\n22 9 87 89 57\\r\\n1 6\\r\\n', 'output': ['264\\r\\n']}, {'input': '7\\r\\n52 36 31 23 74 78\\r\\n2 7\\r\\n', 'output': ['242\\r\\n']}, {'input': '8\\r\\n82 14 24 5 91 49 94\\r\\n3 8\\r\\n', 'output': ['263\\r\\n']}, {'input': '9\\r\\n12 40 69 39 59 21 59 5\\r\\n4 6\\r\\n', 'output': ['98\\r\\n']}, {'input': '10\\r\\n95 81 32 59 71 30 50 61 100\\r\\n1 6\\r\\n', 'output': ['338\\r\\n']}, {'input': '15\\r\\n89 55 94 4 15 69 19 60 91 77 3 94 91 62\\r\\n3 14\\r\\n', 'output': ['617\\r\\n']}, {'input': '20\\r\\n91 1 41 51 95 67 92 35 23 70 44 91 57 50 21 8 9 71 40\\r\\n8 17\\r\\n', 'output': ['399\\r\\n']}, {'input': '25\\r\\n70 95 21 84 97 39 12 98 53 24 78 29 84 65 70 22 100 17 69 27 62 48 35 80\\r\\n8 23\\r\\n', 'output': ['846\\r\\n']}, {'input': '30\\r\\n35 69 50 44 19 56 86 56 98 24 21 2 61 24 85 30 2 22 57 35 59 84 12 77 92 53 50 92 9\\r\\n1 16\\r\\n', 'output': ['730\\r\\n']}, {'input': '35\\r\\n2 34 47 15 27 61 6 88 67 20 53 65 29 68 77 5 78 86 44 98 32 81 91 79 54 84 95 23 65 97 22 33 42 87\\r\\n8 35\\r\\n', 'output': ['1663\\r\\n']}, {'input': '40\\r\\n32 88 59 36 95 45 28 78 73 30 97 13 13 47 48 100 43 21 22 45 88 25 15 13 63 25 72 92 29 5 25 11 50 5 54 51 48 84 23\\r\\n7 26\\r\\n', 'output': ['862\\r\\n']}, {'input': '45\\r\\n83 74 73 95 10 31 100 26 29 15 80 100 22 70 31 88 9 56 19 70 2 62 48 30 27 47 52 50 94 44 21 94 23 85 15 3 95 72 43 62 94 89 68 88\\r\\n17 40\\r\\n', 'output': ['1061\\r\\n']}, {'input': '50\\r\\n28 8 16 29 19 82 70 51 96 84 74 72 17 69 12 21 37 21 39 3 18 66 19 49 86 96 94 93 2 90 96 84 59 88 58 15 61 33 55 22 35 54 51 29 64 68 29 38 40\\r\\n23 28\\r\\n', 'output': ['344\\r\\n']}, {'input': '60\\r\\n24 28 25 21 43 71 64 73 71 90 51 83 69 43 75 43 78 72 56 61 99 7 23 86 9 16 16 94 23 74 18 56 20 72 13 31 75 34 35 86 61 49 4 72 84 7 65 70 66 52 21 38 6 43 69 40 73 46 5\\r\\n28 60\\r\\n', 'output': ['1502\\r\\n']}, {'input': '70\\r\\n69 95 34 14 67 61 6 95 94 44 28 94 73 66 39 13 19 71 73 71 28 48 26 22 32 88 38 95 43 59 88 77 80 55 17 95 40 83 67 1 38 95 58 63 56 98 49 2 41 4 73 8 78 41 64 71 60 71 41 61 67 4 4 19 97 14 39 20 27\\r\\n9 41\\r\\n', 'output': ['1767\\r\\n']}, {'input': '80\\r\\n65 15 43 6 43 98 100 16 69 98 4 54 25 40 2 35 12 23 38 29 10 89 30 6 4 8 7 96 64 43 11 49 89 38 20 59 54 85 46 16 16 89 60 54 28 37 32 34 67 9 78 30 50 87 58 53 99 48 77 3 5 6 19 99 16 20 31 10 80 76 82 56 56 83 72 81 84 60 28\\r\\n18 24\\r\\n', 'output': ['219\\r\\n']}, {'input': '90\\r\\n61 35 100 99 67 87 42 90 44 4 81 65 29 63 66 56 53 22 55 87 39 30 34 42 27 80 29 97 85 28 81 22 50 22 24 75 67 86 78 79 94 35 13 97 48 76 68 66 94 13 82 1 22 85 5 36 86 73 65 97 43 56 35 26 87 25 74 47 81 67 73 75 99 75 53 38 70 21 66 78 38 17 57 40 93 57 68 55 1\\r\\n12 44\\r\\n', 'output': ['1713\\r\\n']}, {'input': '95\\r\\n37 74 53 96 65 84 65 72 95 45 6 77 91 35 58 50 51 51 97 30 51 20 79 81 92 10 89 34 40 76 71 54 26 34 73 72 72 28 53 19 95 64 97 10 44 15 12 38 5 63 96 95 86 8 36 96 45 53 81 5 18 18 47 97 65 9 33 53 41 86 37 53 5 40 15 76 83 45 33 18 26 5 19 90 46 40 100 42 10 90 13 81 40 53\\r\\n6 15\\r\\n', 'output': ['570\\r\\n']}, {'input': '96\\r\\n51 32 95 75 23 54 70 89 67 3 1 51 4 100 97 30 9 35 56 38 54 77 56 98 43 17 60 43 72 46 87 61 100 65 81 22 74 38 16 96 5 10 54 22 23 22 10 91 9 54 49 82 29 73 33 98 75 8 4 26 24 90 71 42 90 24 94 74 94 10 41 98 56 63 18 43 56 21 26 64 74 33 22 38 67 66 38 60 64 76 53 10 4 65 76\\r\\n21 26\\r\\n', 'output': ['328\\r\\n']}, {'input': '97\\r\\n18 90 84 7 33 24 75 55 86 10 96 72 16 64 37 9 19 71 62 97 5 34 85 15 46 72 82 51 52 16 55 68 27 97 42 72 76 97 32 73 14 56 11 86 2 81 59 95 60 93 1 22 71 37 77 100 6 16 78 47 78 62 94 86 16 91 56 46 47 35 93 44 7 86 70 10 29 45 67 62 71 61 74 39 36 92 24 26 65 14 93 92 15 28 79 59\\r\\n6 68\\r\\n', 'output': ['3385\\r\\n']}, {'input': '98\\r\\n32 47 26 86 43 42 79 72 6 68 40 46 29 80 24 89 29 7 21 56 8 92 13 33 50 79 5 7 84 85 24 23 1 80 51 21 26 55 96 51 24 2 68 98 81 88 57 100 64 84 54 10 14 2 74 1 89 71 1 20 84 85 17 31 42 58 69 67 48 60 97 90 58 10 21 29 2 21 60 61 68 89 77 39 57 18 61 44 67 100 33 74 27 40 83 29 6\\r\\n8 77\\r\\n', 'output': ['3319\\r\\n']}, {'input': '99\\r\\n46 5 16 66 53 12 84 89 26 27 35 68 41 44 63 17 88 43 80 15 59 1 42 50 53 34 75 16 16 55 92 30 28 11 12 71 27 65 11 28 86 47 24 10 60 47 7 53 16 75 6 49 56 66 70 3 20 78 75 41 38 57 89 23 16 74 30 39 1 32 49 84 9 33 25 95 75 45 54 59 17 17 29 40 79 96 47 11 69 86 73 56 91 4 87 47 31 24\\r\\n23 36\\r\\n', 'output': ['514\\r\\n']}, {'input': '100\\r\\n63 65 21 41 95 23 3 4 12 23 95 50 75 63 58 34 71 27 75 31 23 94 96 74 69 34 43 25 25 55 44 19 43 86 68 17 52 65 36 29 72 96 84 25 84 23 71 54 6 7 71 7 21 100 99 58 93 35 62 47 36 70 68 9 75 13 35 70 76 36 62 22 52 51 2 87 66 41 54 35 78 62 30 35 65 44 74 93 78 37 96 70 26 32 71 27 85 85 63\\r\\n43 92\\r\\n', 'output': ['2599\\r\\n']}, {'input': '51\\r\\n85 38 22 38 42 36 55 24 36 80 49 15 66 91 88 61 46 82 1 61 89 92 6 56 28 8 46 80 56 90 91 38 38 17 69 64 57 68 13 44 45 38 8 72 61 39 87 2 73 88\\r\\n15 27\\r\\n', 'output': ['618\\r\\n']}, {'input': '2\\r\\n3\\r\\n1 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n6 8 22 22\\r\\n2 3\\r\\n', 'output': ['8\\r\\n']}, {'input': '6\\r\\n3 12 27 28 28\\r\\n3 4\\r\\n', 'output': ['27\\r\\n']}, {'input': '9\\r\\n1 2 2 2 2 3 3 5\\r\\n3 7\\r\\n', 'output': ['9\\r\\n']}, {'input': '10\\r\\n1 1 1 1 1 1 1 1 1\\r\\n6 8\\r\\n', 'output': ['2\\r\\n']}, {'input': '20\\r\\n1 1 1 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 3\\r\\n5 17\\r\\n', 'output': ['23\\r\\n']}, {'input': '25\\r\\n1 1 1 4 5 6 8 11 11 11 11 12 13 14 14 14 15 16 16 17 17 17 19 19\\r\\n4 8\\r\\n', 'output': ['23\\r\\n']}, {'input': '35\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\r\\n30 31\\r\\n', 'output': ['2\\r\\n']}, {'input': '45\\r\\n1 1 1 1 2 2 2 2 2 2 2 3 3 3 3 3 3 4 5 5 5 5 6 6 6 6 6 6 6 7 7 7 7 8 8 8 9 9 9 9 9 10 10 10\\r\\n42 45\\r\\n', 'output': ['30\\r\\n']}, {'input': '50\\r\\n1 8 8 13 14 15 15 16 19 21 22 24 26 31 32 37 45 47 47 47 50 50 51 54 55 56 58 61 61 61 63 63 64 66 66 67 67 70 71 80 83 84 85 92 92 94 95 95 100\\r\\n4 17\\r\\n', 'output': ['285\\r\\n']}, {'input': '60\\r\\n1 2 4 4 4 6 6 8 9 10 10 13 14 18 20 20 21 22 23 23 26 29 30 32 33 34 35 38 40 42 44 44 46 48 52 54 56 56 60 60 66 67 68 68 69 73 73 74 80 80 81 81 82 84 86 86 87 89 89\\r\\n56 58\\r\\n', 'output': ['173\\r\\n']}, {'input': '70\\r\\n1 2 3 3 4 5 5 7 7 7 8 8 8 8 9 9 10 12 12 12 12 13 16 16 16 16 16 16 17 17 18 18 20 20 21 23 24 25 25 26 29 29 29 29 31 32 32 34 35 36 36 37 37 38 39 39 40 40 40 40 41 41 42 43 44 44 44 45 45\\r\\n62 65\\r\\n', 'output': ['126\\r\\n']}, {'input': '80\\r\\n1 1 1 1 1 1 1 1 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 4 4 4 4 5 5 5 5 5 5 5 6 7 7 7 7 7 7 8 8 8 8 9 9 9 9 9 9 9 9 9 10 10 10 10 10 10 10 10 10 11 11 11 11 11 11 11 12 12 12 12 12 12 12 12\\r\\n17 65\\r\\n', 'output': ['326\\r\\n']}, {'input': '90\\r\\n1 1 3 5 8 9 10 11 11 11 11 12 13 14 15 15 15 16 16 19 19 20 22 23 24 25 25 28 29 29 30 31 33 34 35 37 37 38 41 43 43 44 45 47 51 54 55 56 58 58 59 59 60 62 66 67 67 67 68 68 69 70 71 72 73 73 76 77 77 78 78 78 79 79 79 82 83 84 85 85 87 87 89 93 93 93 95 99 99\\r\\n28 48\\r\\n', 'output': ['784\\r\\n']}, {'input': '95\\r\\n2 2 3 3 4 6 6 7 7 7 9 10 12 12 12 12 13 14 15 16 17 18 20 20 20 20 21 21 21 21 22 22 22 22 22 23 23 23 25 26 26 27 27 27 28 29 29 30 30 31 32 33 34 36 37 37 38 39 39 39 42 43 43 43 45 47 48 50 50 51 52 53 54 54 54 55 55 55 58 59 60 61 61 61 61 62 62 63 64 65 66 67 67 67\\r\\n64 93\\r\\n', 'output': ['1636\\r\\n']}, {'input': '96\\r\\n1 1 2 3 3 5 8 9 9 10 10 10 11 11 11 11 11 12 13 13 13 14 15 15 16 16 17 17 17 17 18 18 20 20 20 21 21 21 23 24 24 25 25 26 27 27 27 27 29 29 29 30 30 30 32 32 32 32 32 32 33 33 34 34 34 35 35 35 36 36 37 37 37 38 39 40 41 41 41 41 42 42 43 43 45 45 45 46 46 47 47 49 50 52 52\\r\\n76 96\\r\\n', 'output': ['898\\r\\n']}, {'input': '98\\r\\n2 3 4 4 5 7 8 10 10 10 11 11 12 12 12 12 13 14 15 15 16 16 18 19 19 20 21 21 21 21 22 23 24 25 26 26 27 27 27 27 29 29 30 30 31 31 37 40 40 40 41 41 41 42 43 44 44 44 46 46 47 49 49 50 50 50 51 53 55 55 56 56 56 56 56 57 57 58 59 60 60 60 62 62 63 64 64 64 65 66 66 67 68 70 70 71 71\\r\\n8 90\\r\\n', 'output': ['3016\\r\\n']}, {'input': '99\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n66 95\\r\\n', 'output': ['29\\r\\n']}, {'input': '100\\r\\n1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 3 3 3 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 8 8 8 8 9 9 9 9 10 10 10 10 11 11 11 11 12 12 12 13 13 13 13 13 13 13 13 13 13 14 14 14 14 14 14 15 15 15 15 15 15 16 16 16 17 17\\r\\n39 52\\r\\n', 'output': ['82\\r\\n']}, {'input': '51\\r\\n5 7 9 16 19 25 26 29 29 30 31 32 32 41 43 44 47 49 50 50 51 52 54 55 56 63 64 66 67 70 74 74 77 78 79 80 80 85 86 87 89 89 90 92 93 94 94 95 95 97\\r\\n3 44\\r\\n', 'output': ['2268\\r\\n']}]", "source_code": "n = int(input())\nd = list(map(int, input().split()))\na, b = map(int, input().split())\n\nprint(sum(d[a-1:b-1]))"}
{"src_uid": "991516fa6f3ed5a71c547a3a50ea1a2b", "id": 148, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1400, "testcases": "[{'input': '4 2\\r\\n1 2 3 4\\r\\n', 'output': ['8\\r\\n']}, {'input': '5 3\\r\\n5 5 7 3 1\\r\\n', 'output': ['15\\r\\n']}, {'input': '2 3\\r\\n1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '2 2\\r\\n3 3\\r\\n', 'output': ['6\\r\\n']}, {'input': '5 2\\r\\n2 4 1 1 3\\r\\n', 'output': ['8\\r\\n']}, {'input': '7 4\\r\\n3 2 1 1 1 3 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '10 1\\r\\n1 2 2 6 6 1 2 5 5 6\\r\\n', 'output': ['36\\r\\n']}, {'input': '10 2\\r\\n6 3 1 1 6 4 6 1 6 3\\r\\n', 'output': ['33\\r\\n']}, {'input': '15 6\\r\\n1 6 6 5 2 10 4 4 7 8 7 3 5 1 2\\r\\n', 'output': ['36\\r\\n']}, {'input': '20 2\\r\\n13 3 6 11 6 11 9 1 1 2 5 2 9 15 14 10 3 12 3 13\\r\\n', 'output': ['136\\r\\n']}, {'input': '25 20\\r\\n10 8 4 6 12 14 19 18 19 9 21 16 16 15 10 15 12 12 18 18 9 22 12 14 14\\r\\n', 'output': ['42\\r\\n']}, {'input': '30 15\\r\\n93 99 77 69 43 86 56 15 9 9 75 84 56 1 42 45 10 23 83 87 86 99 46 48 40 69 95 10 61 47\\r\\n', 'output': ['1455\\r\\n']}, {'input': '35 3\\r\\n13 12 38 45 71 61 42 75 58 40 50 70 27 38 16 37 21 12 36 7 39 4 65 12 32 26 1 21 66 63 29 56 32 29 26\\r\\n', 'output': ['1236\\r\\n']}, {'input': '40 33\\r\\n33 52 83 32 59 90 25 90 38 31 60 30 76 77 9 13 48 1 55 39 84 28 58 83 12 3 77 34 33 73 15 35 29 8 3 21 63 4 21 75\\r\\n', 'output': ['1089\\r\\n']}, {'input': '45 1\\r\\n1 1 2 3 1 2 3 1 1 1 1 2 2 2 2 3 1 1 2 2 3 3 2 3 3 1 3 3 3 1 2 3 2 1 2 1 1 2 1 2 1 1 2 2 2\\r\\n', 'output': ['84\\r\\n']}, {'input': '50 70\\r\\n60 21 1 35 20 10 35 59 27 12 57 67 76 49 27 72 39 47 56 36 36 13 62 16 6 16 39 46 35 9 67 59 61 52 1 44 70 40 60 3 5 2 14 29 56 32 4 28 35 73\\r\\n', 'output': ['280\\r\\n']}, {'input': '55 12\\r\\n15 5 11 16 17 3 5 28 19 15 1 9 5 26 25 3 14 14 33 12 3 21 16 30 22 18 7 16 24 28 2 17 24 25 16 16 31 9 11 9 6 13 25 23 32 18 4 21 10 32 11 5 4 32 14\\r\\n', 'output': ['588\\r\\n']}, {'input': '60 10\\r\\n42 89 35 19 51 41 31 77 10 8 73 27 47 26 66 91 43 33 74 62 77 23 5 44 18 23 74 6 51 21 30 17 31 39 74 4 55 39 3 34 21 3 18 41 61 37 31 91 69 55 75 67 77 30 11 16 35 68 62 19\\r\\n', 'output': ['2240\\r\\n']}, {'input': '65 7\\r\\n1 5 4 1 4 11 9 1 11 7 6 11 9 4 2 6 10 11 10 12 4 6 1 12 12 5 1 11 7 9 11 6 10 10 7 8 4 1 3 5 2 3 2 10 11 10 5 8 7 10 12 5 11 6 8 6 2 9 9 7 2 4 12 7 7\\r\\n', 'output': ['245\\r\\n']}, {'input': '70 12\\r\\n6 8 11 13 11 30 4 26 16 24 8 12 14 25 7 26 1 24 1 9 7 19 25 11 18 23 27 26 27 19 8 10 9 20 23 2 14 27 24 24 14 21 31 5 1 14 24 20 2 1 11 17 12 7 17 20 8 21 16 17 31 25 9 25 5 18 6 19 22 27\\r\\n', 'output': ['756\\r\\n']}, {'input': '75 19\\r\\n3 35 38 25 5 17 12 37 26 34 20 3 30 33 16 26 16 31 17 5 13 40 4 40 16 4 24 31 39 13 12 3 25 40 21 2 27 26 21 2 18 24 24 25 18 3 15 20 5 6 23 10 16 37 20 13 39 4 6 28 9 25 14 7 6 15 34 9 4 16 36 19 17 30 33\\r\\n', 'output': ['817\\r\\n']}, {'input': '80 1\\r\\n7 13 38 24 17 20 11 3 25 23 36 16 41 36 18 9 33 10 37 20 8 7 42 8 17 1 39 30 39 24 36 17 8 11 3 33 23 42 36 16 36 3 30 20 29 35 43 17 32 26 33 4 41 34 9 37 14 26 6 40 16 24 8 26 16 31 11 12 18 24 42 34 24 37 5 23 32 13 8 14\\r\\n', 'output': ['1810\\r\\n']}, {'input': '85 2\\r\\n26 5 48 55 22 22 43 29 55 29 6 53 48 35 58 22 44 7 14 26 48 17 66 44 2 10 50 4 19 35 29 61 55 57 25 5 54 64 18 17 43 16 14 63 46 22 55 23 8 52 65 30 10 13 24 18 7 44 65 7 42 63 29 54 32 23 55 17 3 11 67 14 45 31 33 22 36 28 27 54 46 45 15 40 55\\r\\n', 'output': ['2796\\r\\n']}, {'input': '90 3\\r\\n44 16 62 40 33 17 53 32 66 18 68 33 18 76 14 66 41 8 18 57 39 63 9 41 30 39 30 35 46 12 27 33 6 4 21 26 32 24 18 25 35 39 14 49 65 32 54 38 55 64 75 2 53 21 72 11 46 47 63 60 33 62 13 35 40 21 26 15 66 74 55 48 24 26 76 69 65 68 62 12 74 58 21 13 53 5 40 56 66 67\\r\\n', 'output': ['3492\\r\\n']}, {'input': '91 6\\r\\n4 2 4 2 6 2 4 1 2 6 5 3 3 3 3 2 5 4 2 5 3 2 1 3 5 2 4 5 1 3 3 3 6 6 5 3 4 1 5 6 2 5 2 2 5 4 1 5 4 1 2 6 1 2 3 4 3 3 3 3 2 1 4 5 1 6 5 1 6 5 3 5 6 3 3 5 4 4 5 4 5 2 5 2 3 1 5 6 6 4 2\\r\\n', 'output': ['66\\r\\n']}, {'input': '92 8\\r\\n3 4 6 9 7 9 12 12 7 4 9 1 3 9 2 12 4 5 12 2 6 5 9 9 5 2 7 5 12 2 1 7 7 11 11 1 4 10 11 7 5 6 3 5 12 2 9 1 11 1 9 11 1 9 7 9 7 8 1 5 8 8 1 8 6 6 4 5 6 10 7 9 7 1 6 2 12 11 7 6 12 11 5 11 6 10 1 9 3 9 11 9\\r\\n', 'output': ['306\\r\\n']}, {'input': '93 10\\r\\n6 47 6 89 21 91 51 72 32 48 54 89 36 12 25 38 58 62 54 16 5 52 52 85 67 33 81 72 6 42 91 16 29 78 56 62 75 48 69 12 89 34 27 15 7 80 14 57 29 6 80 46 64 94 83 96 1 42 11 41 15 26 17 36 44 11 68 73 93 45 73 35 91 14 84 48 7 8 63 84 59 68 87 26 91 10 54 41 74 71 74 62 24\\r\\n', 'output': ['4110\\r\\n']}, {'input': '94 12\\r\\n40 66 66 35 43 23 77 6 55 44 68 90 20 59 11 95 78 13 75 98 30 22 40 29 2 23 82 26 53 48 16 100 97 100 74 96 73 30 35 72 23 38 25 86 7 45 53 20 18 77 68 95 41 45 1 94 42 94 54 9 33 84 53 71 6 68 98 94 35 78 58 34 84 78 28 65 58 11 2 78 96 5 8 36 34 26 76 10 69 49 25 9 77 30\\r\\n', 'output': ['4173\\r\\n']}, {'input': '95 17\\r\\n1 24 17 9 41 5 39 30 6 32 17 30 27 11 13 25 22 23 12 31 19 31 35 43 8 23 39 23 39 41 10 17 25 17 38 39 37 23 37 11 6 15 43 4 15 44 44 42 29 2 14 6 1 6 31 45 26 21 14 18 15 17 23 11 39 12 16 6 11 19 15 31 18 10 33 10 2 8 21 4 26 3 42 45 16 1 11 28 43 24 18 45 25 39 9\\r\\n', 'output': ['1360\\r\\n']}, {'input': '96 9\\r\\n4 5 1 10 2 6 1 9 2 6 3 2 9 4 1 1 3 10 10 4 6 8 6 4 4 6 4 6 2 9 1 9 3 6 9 10 4 3 7 2 7 4 4 4 6 4 1 7 9 4 9 2 1 7 7 3 4 10 10 5 1 3 10 5 1 9 8 4 10 4 7 2 9 6 9 4 2 3 6 9 8 1 1 2 9 4 10 4 9 7 7 5 1 10 9 10\\r\\n', 'output': ['225\\r\\n']}, {'input': '97 28\\r\\n13 12 30 2 17 29 28 28 26 10 27 27 20 14 8 28 10 5 33 19 17 31 15 4 8 13 21 23 32 3 20 9 33 17 11 13 11 9 19 30 19 25 1 18 1 13 1 20 19 9 17 31 32 26 1 34 7 34 6 22 7 13 29 6 29 3 13 28 3 6 7 29 17 34 28 32 14 33 23 25 23 11 19 19 27 27 3 20 17 13 24 2 8 25 10 31 34\\r\\n', 'output': ['672\\r\\n']}, {'input': '98 14\\r\\n23 3 39 39 6 35 2 35 38 9 11 24 42 35 35 46 23 46 20 36 25 46 23 9 21 24 21 38 43 9 9 38 38 46 3 28 17 31 30 14 29 12 37 15 5 45 46 32 35 39 39 27 25 15 42 40 19 19 11 6 32 16 25 29 46 2 45 44 5 36 21 11 14 18 39 1 39 26 18 14 1 23 38 24 10 38 14 42 15 3 8 8 23 46 40 19 14 29\\r\\n', 'output': ['1876\\r\\n']}, {'input': '99 57\\r\\n69 27 70 70 16 66 64 35 44 1 51 38 69 17 19 35 83 7 47 4 10 22 60 64 64 56 80 54 83 34 51 42 46 51 41 75 54 10 13 44 66 46 27 79 55 13 13 40 18 12 2 33 20 13 75 45 70 75 51 39 80 25 22 27 77 52 41 83 40 33 23 76 81 21 23 59 27 74 45 68 42 20 83 50 66 58 5 8 55 62 76 81 27 52 55 67 28 65 71\\r\\n', 'output': ['2030\\r\\n']}, {'input': '100 2\\r\\n2 2 1 1 1 1 1 1 1 2 2 1 1 2 2 1 1 2 1 1 1 1 1 1 2 2 2 1 1 2 1 2 1 2 2 1 1 1 1 2 1 1 1 2 2 1 1 2 1 1 2 2 2 2 2 1 2 1 2 1 1 2 1 2 2 2 2 1 2 1 2 1 2 1 2 2 2 1 1 2 2 1 2 1 1 1 1 2 1 2 2 2 1 2 1 1 1 2 2 1\\r\\n', 'output': ['92\\r\\n']}, {'input': '100 2\\r\\n79 84 2 24 18 95 57 79 67 60 78 85 75 23 68 68 76 30 39 31 32 81 42 90 50 33 49 9 63 18 74 46 34 55 48 41 7 75 74 90 14 90 2 49 20 29 33 65 43 7 11 12 58 45 17 100 1 28 3 12 26 94 45 5 45 19 3 28 95 11 71 68 89 47 59 5 74 92 43 100 15 63 78 85 70 38 62 100 78 76 29 69 64 2 32 68 48 61 82 100\\r\\n', 'output': ['4978\\r\\n']}, {'input': '100 17\\r\\n20 61 7 74 87 84 87 35 64 7 36 5 72 20 62 29 29 58 67 51 50 45 82 20 76 79 39 21 5 39 94 13 65 11 3 21 26 2 15 56 20 75 49 27 64 48 51 96 32 80 57 10 57 48 36 83 51 25 45 65 24 22 3 92 45 52 52 58 15 90 23 43 56 88 46 50 72 70 60 47 91 68 40 24 16 44 82 90 17 17 51 71 25 94 13 42 26 25 53 95\\r\\n', 'output': ['3961\\r\\n']}]", "source_code": "n,l=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\ns=0\nfor i in range(n):\n    if a[i]>=l:\n        s+=a[i]//l\nprint(s*l)\n"}
{"src_uid": "b1ef19d7027dc82d76859d64a6f43439", "id": 149, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1100, "testcases": "[{'input': 'Instead of dogging Your footsteps it disappears but you dont notice anything\\r\\nwhere is your dog\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'Instead of dogging Your footsteps it disappears but you dont notice anything\\r\\nYour dog is upstears\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'Instead of dogging your footsteps it disappears but you dont notice anything\\r\\nYour dog is upstears\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'abcdefg hijk\\r\\nk j i h g f e d c b a\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'HpOKgo\\r\\neAtAVB\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'GRZGc\\r\\nLPzD\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'GtPXu\\r\\nd\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'FVF\\r\\nr \\r\\n', 'output': ['NO\\r\\n']}, {'input': 'HpOKgo\\r\\nogK\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'GRZGc\\r\\nZG\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'HpOKgoueAtAVBdGffvQheJDejNDHhhwyKJisugiRAH OseK yUwqPPNuThUxTfthqIUeb wS jChGOdFDarNrKRT  MlwKecxWNoKEeD BbiHAruE XMlvKYVsJGPP\\r\\nAHN  XvoaNwV  AVBKwKjr u      U K wKE D K   Jy KiHsR h d W  Js IHyMPK Br iSqe  E fDA   g H\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'GRZGcsLPzDrCSXhhNTaibJqVphhjbcPoZhCDUlzAbDnRWjHvxLKtpGiFWiGbfeDxBwCrdJmJGCGv GebAOinUsFrlqKTILOmxrFjSpEoVGoTdSSstJWVgMLKMPettxHASaQZNdOIObcTxtF qTHWBdNIKwj\\r\\nWqrxze Ji x q aT GllLrRV jMpGiMDTwwS JDsPGpAZKACmsFCOS CD Sj  bCDgKF  jJxa RddtLFAi VGLHH SecObzG q  hPF \\r\\n', 'output': ['YES\\r\\n']}, {'input': 'GtPXuwdAxNhODQbjRslDDKciOALJrCifTjDQurQEBeFUUSZWwCZQPdYwZkYbrduMijFjgodAOrKIuUKwSXageZuOWMIhAMexyLRzFuzuXqBDTEaWMzVdbzhxDGSJC SsIYuYILwpiwwcObEHWpFvHeBkWYNitqYrxqgHReHcKnHbtjcWZuaxPBVPb\\r\\nTQIKyqFaewOkY lZUOOuxEw EwuKcArxRQGFYkvVWIAe SuanPeHuDjquurJu aSxwgOSw jYMwjxItNUUArQjO BIujAhSwttLWp\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'FVFSr unvtXbpKWF vPaAgNaoTqklzVqiGYcUcBIcattzBrRuNSnKUtmdGKbjcE\\r\\nUzrU K  an GFGR        Wc zt iBa     P c    T K v p     V In   b           B   c\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'lSwjnYLYtDNIZjxHiTawdh ntSzggZogcIZTuiTMWVgwyloMtEhqkrOxgIcFvwvsboXUPILPIymFAEXnhApewJXJNtFyZ\\r\\nAoxe  jWZ u  yImg  o AZ FNI w lpj  tNhT g y  ZYcb rc J    w Dlv\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'kvlekcdJqODUKdsJlXkRaileTmdGwUHWWgvgUokQxRzzbpFnswvNKiDnjfOFGvFcnaaiRnBGQmqoPxDHepgYasLhzjDgmvaFfVNEcSPVQCJKAbSyTGpXsAjIHr\\r\\nGjzUllNaGGKXUdYmDFpqFAKIwvTpjmqnyswWRTnxlBnavAGvavxJemrjvRJc\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'kWbvhgvvoYOhwXmgTwOSCDXrtFHhqwvMlCvsuuAUXMmWaYXiqHplFZZemhgkTuvsUtIaUxtyYauBIpjdbyYxjZ ZkaBPzwqPfqF kCqGRmXvWuabnQognnkvdNDtRUsSUvSzgBuxCMBWJifbxWegsknp\\r\\nBsH   bWHJD n Ca T xq  PRCv  tatn Wjy sm  I q s WCjFqdWe  t W XUs  Do  eb Pfh ii  hTbF  O Fll\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'OTmLdkMhmDEOMQMiW ZpzEIjyElHFrNCfFQDp SZyoZaEIUIpyCHfwOUqiSkKtFHggrTBGkqfOxkChPztmPrsHoxVwAdrxbZLKxPXHlMnrkgMgiaHFopiFFiUEtKwCjpJtwdwkbJCgA bxeDIscFdmHQJLAMNhWlrZisQrHQpvbALWTwpf jnx\\r\\nDbZwrQbydCdkJMCrftiwtPFfpMiwwrfIrKidEChKECxQUBVUEfFirbGWiLkFQkdJiFtkrtkbIAEXCEDkwLpK\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'NwcGaIeSkOva\\r\\naIa\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'gSrAcVYgAdbdayzbKGhIzLDjyznLRIJH KyvilAaEddmgkBPCNzpmPNeGEbmmpAyHvUSoPvnaORrPUuafpReEGoDOQsAYnUHYfBqhdcopQfxJuGXgKnbdVMQNhJYkyjiJDKlShqBTtnnDQQzEijOMcYRGMgPGVhfIReYennKBLwDTVvcHMIHMgVpJkvzTrezxqS\\r\\nHJerIVvRyfrPgAQMTI AqGNO mQDfDwQHKgeeYmuRmozKHILvehMPOJNMRtPTAfvKvsoGKi xHEeKqDAYmQJPUXRJbIbHrgVOMGMTdvYiLui\\r\\n', 'output': ['YES\\r\\n']}, {'input': 'ReB hksbHqQXxUgpvoNK bFqmNVCEiOyKdKcAJQRkpeohpfuqZabvrLfmpZOMcfyFBJGZwVMxiUPP pbZZtJjxhEwvrAba\\r\\nJTCpQnIViIGIdQtLnmkVzmcbBZR CoxAdTtWSYpbOglDFifqIVQ vfGKGtLpxpJHiHSWCMeRcrVOXBGBhoEnVhNTPWGTOErNtSvokcGdgZXbgTEtISUyTwaXUEIlJMmutsdCbiyrPZPJyRdOjnSuAGttLy\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'hrLzRegCuDGxTrhDgVvM KowwyYuXGzIpcXdSMgeQVfVOtJZdkhNYSegwFWWoPqcZoeapbQnyCtojgkcyezUNHGGIZrhzsKrvvcrtokIdcnqXXkCNKjrOjrnEAKBNxyDdiMVeyLvXxUYMZQRFdlcdlcxzKTeYzBlmpNiwWbNAAhWkMoGpRxkCuyqkzXdKWwGH\\r\\nJESKDOfnFdxPvUOCkrgSBEPQHJtJHzuNGstRbTCcchRWJvCcveSEAtwtOmZZiW\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'yDBxCtUygQwWqONxQCcuAvVCkMGlqgC zvkfEkwqbhMCQxnkwQIUhucCbVUyOBUcXvTNEGriTBwMDMfdsPZgWRgIUDqM\\r\\neptVnORTTyixxmWIBpSTEwOXqGZllBgSxPenYCDlFwckJlWsoVwWLAIbPOmFqcKcTcoQqahetl KLfVSyaLVebzsGwPSVbtQAeUdZAaJtfxlCEvvaRhLlVvRJhKat IaB awdqcDlrrhTbRxjEbzGwcdmdavkhcjHjzmwbxAgw\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'jlMwnnotSdlQMluKWkJwAeCetcqbIEnKeNyLWoKCGONDRBQOjbkGpUvDlmSFUJ bWhohqmmIUWTlDsvelUArAcZJBipMDwUvRfBsYzMdQnPDPAuBaeJmAxVKwUMJrwMDxNtlrtAowVWqWiwFGtmquZAcrpFsLHCrvMSMMlvQUqypAihQWrFMNoaqfs IBg\\r\\nNzeWQ bafrmDsYlpNHSGTBBgPl WIcuNhyNaNOEFvL\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'zyWvXBcUZqGqjHwZHQryBtFliLYnweXAoMKNpLaunaOlzaauWmLtywsEvWPiwxJapocAFRMjrqWJXYqfKEbBKnzLO\\r\\npsbi bsXpSeJaCkIuPWfSRADXdIClxcDCowwJzGCDTyAl\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'kKhuIwRPLCwPFfcnsyCfBdnsraGeOCcLTfXuGjqFSGPSAeDZJSS bXKFanNqWjpFnvRpWxHJspvisDlADJBioxXNbVoXeUedoPcNEpUyEeYxdJXhGzFAmpAiHotSVwbZQsuWjIVhVaEGgqbZHIoDpiEmjTtFylCwCkWWzUOoUfOHxEZvDwNpXhBWamHn\\r\\nK VpJjGhNbwCRhcfmNGVjewBFpEmPlIKeTuWiukDtEWpjgqciqglkyNfWrBLbGAKvlNWxaUelJmSlSoakSpRzePvJsshOsTYrMPXdxKpaShjyVIXGhRIAdtiGpNwtiRmGTBZhkJqIMdxMHX RMxCMYcWjcjhtCHyFnCvjjezGbkRDRiVxkbh\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'AXssNpFKyQmJcBdBdfkhhMUzfqJVgcLBddkwtnFSzSRUCjiDcdtmkzIGkCKSxWUEGhmHmciktJyGMkgCductyHx\\r\\nI nYhmJfPnvoKUiXYUBIPIcxNYTtvwPUoXERZvY ahlDpQFNMmVZqEBiYqYlHNqcpSCmhFczBlOAhsYFeqMGfqL EJsDNOgwoJfBzqijKOFcYQ\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'lkhrzDZmkdbjzYKPNMRkiwCFoZsMzBQMnxxdKKVJezSBjnLjPpUYtabcPTIaDJeDEobbWHdKOdVfMQwDXzDDcSrwVenDEYpMqfiOQ xSsqApWnAMoyhQXCKFzHvvzvUvkWwmwZrvZz\\r\\nsUzGspYpRFsHRbRgTQuCBgnFgPkisTUfFNwyEEWWRiweWWgjRkVQxgTwxOzdsOwfrGIH O gCXpzvHzfItuEHaihmugEyymSJIogYwX qAwcwIItidfnzZDhZgQHi eRjMAeVkJHceDZuJkmxGowOsmcGYYvk Ajtgi TxwihvjLViNZjvscTWvsaQUelTSivLShhEl\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'BRsVjyNhrqRHVwrJzuzRigEhdpbDmaACSPfed\\r\\nlWqKTjlrqOCUbgBBZdZDGCeQJDXawPnnDkQdZDgwrEQk\\r\\n', 'output': ['NO\\r\\n']}, {'input': 'KRmINuyBYPwiTsdlyiNVuylToysJKmOpcLovAtwGPqrgFJQNAYvuAiyQRkeFMECVZvkDEmTauXlyjAaYRnTJXORMZRnTakBaUzSelMilejySDIZjQjzcOIrwXdvDvpeRIkoBgreyFXIyyIZutjiEBtwrmzQtPVUhvvdEtDMbXjBpoPVjGdM EXTAK JbCnw\\r\\nXZZqlJvzKKtvdNlzFPDTYxidqlsgufVzyEmO FZuLQ vVQsJESNviUCovCK NwwlbxsmPtOJNmAonCqrOZ bZ LVKAsQGmoLnYjeekvEIECFk\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "s1 = input()\ns2 = input()\n\ns1 = s1.replace(\" \", \"\")\ns2 = s2.replace(\" \", \"\")\n\ns1 = list(s1)\ns2 = list(s2)\n\ns1.sort()\ns2.sort()\n\nif s1 == s2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"}
{"src_uid": "7170c40405cf7a5e0f2bd15e4c7d189d", "id": 150, "lang_cluster": "python", "lang": "Python 3", "difficulty": 800, "testcases": "[{'input': '10\\r\\n', 'output': ['2 4 7 1 6 2 9 7 6\\r\\n']}, {'input': '3\\r\\n', 'output': ['2 1\\r\\n']}, {'input': '4\\r\\n', 'output': ['2 4 3\\r\\n']}, {'input': '5\\r\\n', 'output': ['2 4 2 1\\r\\n']}, {'input': '6\\r\\n', 'output': ['2 4 1 5 4\\r\\n']}, {'input': '7\\r\\n', 'output': ['2 4 7 4 2 1\\r\\n']}, {'input': '8\\r\\n', 'output': ['2 4 7 3 8 6 5\\r\\n']}, {'input': '9\\r\\n', 'output': ['2 4 7 2 7 4 2 1\\r\\n']}, {'input': '2\\r\\n', 'output': ['2\\r\\n']}, {'input': '11\\r\\n', 'output': ['2 4 7 11 5 11 7 4 2 1\\r\\n']}, {'input': '12\\r\\n', 'output': ['2 4 7 11 4 10 5 1 10 8 7\\r\\n']}, {'input': '13\\r\\n', 'output': ['2 4 7 11 3 9 3 11 7 4 2 1\\r\\n']}, {'input': '20\\r\\n', 'output': ['2 4 7 11 16 2 9 17 6 16 7 19 12 6 1 17 14 12 11\\r\\n']}, {'input': '25\\r\\n', 'output': ['2 4 7 11 16 22 4 12 21 6 17 4 17 6 21 12 4 22 16 11 7 4 2 1\\r\\n']}, {'input': '30\\r\\n', 'output': ['2 4 7 11 16 22 29 7 16 26 7 19 2 16 1 17 4 22 11 1 22 14 7 1 26 22 19 17 16\\r\\n']}, {'input': '35\\r\\n', 'output': ['2 4 7 11 16 22 29 2 11 21 32 9 22 1 16 32 14 32 16 1 22 9 32 21 11 2 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '40\\r\\n', 'output': ['2 4 7 11 16 22 29 37 6 16 27 39 12 26 1 17 34 12 31 11 32 14 37 21 6 32 19 7 36 26 17 9 2 36 31 27 24 22 21\\r\\n']}, {'input': '45\\r\\n', 'output': ['2 4 7 11 16 22 29 37 1 11 22 34 2 16 31 2 19 37 11 31 7 29 7 31 11 37 19 2 31 16 2 34 22 11 1 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '50\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 6 17 29 42 6 21 37 4 22 41 11 32 4 27 1 26 2 29 7 36 16 47 29 12 46 31 17 4 42 31 21 12 4 47 41 36 32 29 27 26\\r\\n']}, {'input': '55\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 1 12 24 37 51 11 27 44 7 26 46 12 34 2 26 51 22 49 22 51 26 2 34 12 46 26 7 44 27 11 51 37 24 12 1 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '60\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 7 19 32 46 1 17 34 52 11 31 52 14 37 1 26 52 19 47 16 46 17 49 22 56 31 7 44 22 1 41 22 4 47 31 16 2 49 37 26 16 7 59 52 46 41 37 34 32 31\\r\\n']}, {'input': '65\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 2 14 27 41 56 7 24 42 61 16 37 59 17 41 1 27 54 17 46 11 42 9 42 11 46 17 54 27 1 41 17 59 37 16 61 42 24 7 56 41 27 14 2 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '70\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 9 22 36 51 67 14 32 51 1 22 44 67 21 46 2 29 57 16 46 7 39 2 36 1 37 4 42 11 51 22 64 37 11 56 32 9 57 36 16 67 49 32 16 1 57 44 32 21 11 2 64 57 51 46 42 39 37 36\\r\\n']}, {'input': '75\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 4 17 31 46 62 4 22 41 61 7 29 52 1 26 52 4 32 61 16 47 4 37 71 31 67 29 67 31 71 37 4 47 16 61 32 4 52 26 1 52 29 7 61 41 22 4 62 46 31 17 4 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '80\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 12 26 41 57 74 12 31 51 72 14 37 61 6 32 59 7 36 66 17 49 2 36 71 27 64 22 61 21 62 24 67 31 76 42 9 57 26 76 47 19 72 46 21 77 54 32 11 71 52 34 17 1 66 52 39 27 16 6 77 69 62 56 51 47 44 42 41\\r\\n']}, {'input': '85\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 7 21 36 52 69 2 21 41 62 84 22 46 71 12 39 67 11 41 72 19 52 1 36 72 24 62 16 56 12 54 12 56 16 62 24 72 36 1 52 19 72 41 11 67 39 12 71 46 22 84 62 41 21 2 69 52 36 21 7 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '90\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 2 16 31 47 64 82 11 31 52 74 7 31 56 82 19 47 76 16 47 79 22 56 1 37 74 22 61 11 52 4 47 1 46 2 49 7 56 16 67 29 82 46 11 67 34 2 61 31 2 64 37 11 76 52 29 7 76 56 37 19 2 76 61 47 34 22 11 1 82 74 67 61 56 52 49 47 46\\r\\n']}, {'input': '95\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 11 26 42 59 77 1 21 42 64 87 16 41 67 94 27 56 86 22 54 87 26 61 2 39 77 21 61 7 49 92 41 86 37 84 37 86 41 92 49 7 61 21 77 39 2 61 26 87 54 22 86 56 27 94 67 41 16 87 64 42 21 1 77 59 42 26 11 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '96\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 10 25 41 58 76 95 19 40 62 85 13 38 64 91 23 52 82 17 49 82 20 55 91 32 70 13 53 94 40 83 31 76 26 73 25 74 28 79 35 88 46 5 61 22 80 43 7 68 34 1 65 34 4 71 43 16 86 61 37 14 88 67 47 28 10 89 73 58 44 31 19 8 94 85 77 70 64 59 55 52 50 49\\r\\n']}, {'input': '97\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 9 24 40 57 75 94 17 38 60 83 10 35 61 88 19 48 78 12 44 77 14 49 85 25 63 5 45 86 31 74 21 66 15 62 13 62 15 66 21 74 31 86 45 5 63 25 85 49 14 77 44 12 78 48 19 88 61 35 10 83 60 38 17 94 75 57 40 24 9 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '98\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 8 23 39 56 74 93 15 36 58 81 7 32 58 85 15 44 74 7 39 72 8 43 79 18 56 95 37 78 22 65 11 56 4 51 1 50 2 53 7 60 16 71 29 86 46 7 67 30 92 57 23 88 56 25 93 64 36 9 81 56 32 9 85 64 44 25 7 88 72 57 43 30 18 7 95 86 78 71 65 60 56 53 51 50\\r\\n']}, {'input': '99\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 7 22 38 55 73 92 13 34 56 79 4 29 55 82 11 40 70 2 34 67 2 37 73 11 49 88 29 70 13 56 1 46 92 40 88 38 88 40 92 46 1 56 13 70 29 88 49 11 73 37 2 67 34 2 70 40 11 82 55 29 4 79 56 34 13 92 73 55 38 22 7 92 79 67 56 46 37 29 22 16 11 7 4 2 1\\r\\n']}, {'input': '100\\r\\n', 'output': ['2 4 7 11 16 22 29 37 46 56 67 79 92 6 21 37 54 72 91 11 32 54 77 1 26 52 79 7 36 66 97 29 62 96 31 67 4 42 81 21 62 4 47 91 36 82 29 77 26 76 27 79 32 86 41 97 54 12 71 31 92 54 17 81 46 12 79 47 16 86 57 29 2 76 51 27 4 82 61 41 22 4 87 71 56 42 29 17 6 96 87 79 72 66 61 57 54 52 51\\r\\n']}]", "source_code": "n = int(input())\n\nfor i in range(1, n):\n    print(i * 2 % n + 1, end=' ')\nprint(2)\n"}
{"src_uid": "14_E", "id": 151, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1900, "testcases": "[{'input': ['6 1\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['4 2\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['3 1\\r\\n'], 'output': ['14\\r\\n']}, {'input': ['3 2\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['3 3\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['3 10\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['4 1\\r\\n'], 'output': ['22\\r\\n']}, {'input': ['4 3\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['4 9\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['5 1\\r\\n'], 'output': ['16\\r\\n']}, {'input': ['5 2\\r\\n'], 'output': ['70\\r\\n']}, {'input': ['5 3\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['5 5\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['5 9\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['5 10\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['6 1\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['6 2\\r\\n'], 'output': ['232\\r\\n']}, {'input': ['6 3\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['6 4\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['6 10\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['19 1\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['19 2\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['19 3\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['19 4\\r\\n'], 'output': ['32632\\r\\n']}, {'input': ['19 5\\r\\n'], 'output': ['4594423\\r\\n']}, {'input': ['19 6\\r\\n'], 'output': ['69183464\\r\\n']}, {'input': ['19 7\\r\\n'], 'output': ['197939352\\r\\n']}, {'input': ['19 8\\r\\n'], 'output': ['109824208\\r\\n']}, {'input': ['19 9\\r\\n'], 'output': ['5846414\\r\\n']}, {'input': ['19 10\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['20 1\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['20 2\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['20 3\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['20 4\\r\\n'], 'output': ['12628\\r\\n']}, {'input': ['20 5\\r\\n'], 'output': ['3715462\\r\\n']}, {'input': ['20 6\\r\\n'], 'output': ['96046590\\r\\n']}, {'input': ['20 7\\r\\n'], 'output': ['468541040\\r\\n']}, {'input': ['20 8\\r\\n'], 'output': ['503245466\\r\\n']}, {'input': ['20 9\\r\\n'], 'output': ['90700276\\r\\n']}, {'input': ['20 10\\r\\n'], 'output': ['0\\r\\n']}]", "source_code": "n, t = map(int, input().split())\n\nans = 0\nfor i in range(1, 5):\n    for j in range(1, 5):\n        if i == j:\n            continue\n        if i > j:\n            ans += 4\n        else:\n            ans += 3\n\nfor i in range(1, n):\n    if i % 2 == 0:\n        ans += 4\n    else:\n        ans += 3\n\nprint(ans)\n"}
{"src_uid": "17_D", "id": 152, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2400, "testcases": "[{'input': ['2 3 3\\r\\n'], 'output': ['1']}, {'input': ['2 3 4\\r\\n'], 'output': ['4']}, {'input': ['9 1 79\\r\\n'], 'output': ['8']}, {'input': ['9 1 345\\r\\n'], 'output': ['8']}, {'input': ['9 9 999982045\\r\\n'], 'output': ['344373768']}, {'input': ['4 42 44\\r\\n'], 'output': ['12']}, {'input': ['6 43 659\\r\\n'], 'output': ['365']}, {'input': ['8 54 999992388\\r\\n'], 'output': ['741886148']}, {'input': ['861 11 17\\r\\n'], 'output': ['14']}, {'input': ['89 34 119\\r\\n'], 'output': ['80']}, {'input': ['84 67 999993310\\r\\n'], 'output': ['829809148']}, {'input': ['9219 537 98\\r\\n'], 'output': ['98']}, {'input': ['763 582 510\\r\\n'], 'output': ['96']}, {'input': ['6355 60160 999982994\\r\\n'], 'output': ['904671182']}, {'input': ['396882961 9936448 752\\r\\n'], 'output': ['528']}, {'input': ['394292559875270 34297300532732 28\\r\\n'], 'output': ['28']}, {'input': ['8523703220091 953421047275844 163\\r\\n'], 'output': ['30']}, {'input': ['713030357739784847 61197710123555584 999992531\\r\\n'], 'output': ['207016405']}, {'input': ['75903940600326238527 492179977057716178 954\\r\\n'], 'output': ['450']}, {'input': ['8085477143815539692925721 57241684823084777591460 968\\r\\n'], 'output': ['304']}, {'input': ['67609394386924890416446 78162115935271414671181267 999987217\\r\\n'], 'output': ['926946271']}, {'input': ['3351262437484130462277638791970372162118802730187825044167229944871677684706592699530322737272222086076517455404652584348 147310576952932829345029460612849431175622785231399764423717734155248977073541821053441627535488066058597900989095431439 999998948\\r\\n'], 'output': ['930694076']}, {'input': ['61063034544457239668509642598956869508193198481915116469015956878854905975766584002919896320353661294612971855029955483257741525207429239630069409321331850413146512850720681578339422084340720535114848966742045420860633093949996367883 965415513080902927493169838825380834798188421277961155726185690857844534367611949025561401481462737822765050755128163519122172969767981851117402342816829930821131453945898813517587656899608854645391515043085723743408226445117376493281975889755859761322184701256801 999998603\\r\\n'], 'output': ['60342257']}, {'input': ['9 1000000000000000000000000000000000000000000000000000000 345\\r\\n'], 'output': ['192']}, {'input': ['8053063680000000000000000000000000002 268435456000000000000005 805306368\\r\\n'], 'output': ['268435456']}, {'input': ['8053063680000000000000000000000000002 2684354560000000000000025 805306368\\r\\n'], 'output': ['268435456']}, {'input': ['8053063680000000000000000000000000002 2684354560000000000000026 805306368\\r\\n'], 'output': ['536870912']}, {'input': ['8053063680000000000000000000000000002 2684354560000000000000027 805306368\\r\\n'], 'output': ['268435456']}, {'input': ['8053063680000000000000000000000000002 2684354560000000000000028 805306368\\r\\n'], 'output': ['536870912']}, {'input': ['8053063680000000000000000000000000002 2684354560000000000000029 805306368\\r\\n'], 'output': ['268435456']}, {'input': ['8053063680000000000000000000000000002 2684354560000000000000030 805306368\\r\\n'], 'output': ['536870912']}, {'input': ['8053063680000000000000000000000000002 2684354560000000000000031 805306368\\r\\n'], 'output': ['268435456']}, {'input': ['2271048430505293080737093330373572593316324321603522463486966273671353266974713306925326907468317965879775893196923719457524955744 8990615363653447573832140957083458603886706189959668013719622351914533208654357508127820477597609318856255372184258450991108060161 53727872\\r\\n'], 'output': ['26470400']}, {'input': ['244741007655429712 1 297825872\\r\\n'], 'output': ['297825871']}]", "source_code": "b, n, c = map(int, input().split())\n\nif b == 2:\n    print(c if c < n else n)\nelse:\n    print(c if c < n else n % c)\n"}
{"src_uid": "21_A", "id": 153, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1900, "testcases": "[{'input': ['mike@codeforces.com\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['john.smith@codeforces.ru/contest.icpc/12\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['test@test.ri/abacaba\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['@ops\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['this-is-the-test\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['mike@codeforces.commike@codeforces.com\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['oooop/oooop\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['w@S8/XU.5._R7fHq.@../e.WP!54Ey1L\\x7f.9jv\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['lNC9D1L5U@.L!_!CcAOEEx.0z.aiW/S430sbQT\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['@/YTd.K1@lD\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['Fyi!d1l@.OesGopTnRn.81xdSb8q\\x7f./MzuI\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['_TlPy65\\x7fw/@.Vl@.8k\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['xpS@._s8.e0l\\x7fJci/.LdiT\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['lGwo\\x7f8.D2@.3\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['Ccz9T5rKZQuEerGo@6l.\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['Y@5nh@8.9P.Bx5AaY.1g.Tc_MK7.g_..0.\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['Q2/6y!SP9s\\x7fG@7zIGr.Du_nR8.\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['eWfLL@gW!BEJUxF\\x7fh@dghf.d4.FiYp/2.Pr7a/5O6zXdAkikjCEDrb\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['8oI/\\x7fa@Q\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['J@Y9Gz550l@\\x7fPqVZdQ!u\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['VTE6aTTta@DHe4xeG@6.c2R.J.O7sndWEEW.9j@.l..3Bs\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['aeo2XkK@UX.nQJN!Tg..wGN5YOi68U.oP2Yl3/\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['m13zREg8LbPr@T2.Z9@g.9u.v.A..XNH/1/tloIceXydZf3\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['4@@..f3ZT./oUGZ@\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['G.rVAxwDx@a.PVSe!KtpX4tzs/0yQGzZCPJPJoda\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['SV9T5RR425Sl0b@kzj.XT.PFWc..ho/VE7gjf\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['bgko@1../xwSj_\\x7fJ\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['n5ymLC.bE@ukio.im2../.\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['zr.KB_6ZMSwI2GA5@R/4iP1ZKHpszW!YN/\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['@alK@pR\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['al_Y2I4IKp@A_N.\\x7fruCw0VL/hRzJtx.S7sp/r!c.n9ffh\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['C1rE26_rTAVzLm@6@X5OGX.ibJ9./kkBEVlcU\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['feGSXP@eyUfr\\x7f8.x4Re.JL.6B.r/fX_\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['Ht15T@50eo.E@.\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['k9MITs_Ar.JL2RRs4@VRq.wCuJ.6..amF.fE4.5I.6fJ7gz7\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['Mi\\x7fWPE8@fc./IViqq4T4PSUuMdhH\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['pxSCmv!NbMvz2@pTQ.t!.Ntz/QEh_sl\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['s@mH@RO\\x7f_/iWD\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['UP51i49wX@pvx@2LWm8w/G4M3J./9L6Szy\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['xC_5Vx8NgF..\\x7fln@X1.drRTX..1vx.Xb3of@/PQYPeq@_y8!h_iF\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['qG3@LKp\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['flTq1knyb@2!Mtfss\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['/pqi7WXQPJFM4q1@hxUyUy\\x7f/_pWo0n\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['zXme@.Dq.TWBs.fB.M\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['o3EaAnc3K6@h\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['G/AZdVMTzRLV4Ucm@eQ!..pq!..tRTi5.Ejkqa/HGpFYk\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['.c_V@L.1v!AFAEk7glM\\x7fq.ag8Sy8@0.Qm/OLKoJpZlac\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['WKxNIM79u\\x7f@I.RM\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['POTjlYcxAZsbyZPDh@sPm.z6aVaO.H1wEUhD9YvROQFUk/M_jTHS_6!\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['pbRIiuA@KZ2hVed2fMikA.@ebd.tE2Y\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['OlS_OwxYhH@im.0A7o/juNlxB\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['xkjHHDRBEFwgNP@G9TGStEs2Lu.BJge3EBXw3c9EfE\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['bK@8X7tQO.pXBHJpDewD\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['kKUXy6@0WefbXz39ywP.Q3r7uF\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['SllbRLdZ6@.T.E3x.BE2nIv.5db_.38./zgVGNjpldr\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['4lBJkY8c097oa@ZYmVbtiyyYN.gbj\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['F@JX4.SI1/0EY3XmYatfY\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['oLo01@B77Pu.9R.vtAZG0.HQSunv0J.\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['xLEctap0T@22U9W_fA/7iQeJGFu1lSgMZ\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['WYh@yUWfOQiF.gOK9k8aEa\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['BPxNVANhtEh@Oh_go.\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['mGIY@cHRNC8GlJ/2pcl3LYxpi3PaKGs\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['x6yfn7BGwqWd@.N/UXC\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['cUIr@cP.eGQC2xJXvI1X7\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['MLZ6e1vgZ4hOI@ktWk.Ro.o6C4/i8cnKHT\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['XCJIa@jFaP.Eu28YaoT9Z.Epk.Z/4TBzLWf724zE1r\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['Cz1U1xjg6iW0U@.97HoVA.YG.Qd.eI.DCXxtibi6HG.GV/0sN\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['nrKbWV@P0irxQoRxDsNvG/69WxCwCsfB\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['yI1nRv3FbuhgaI@.Y9vKe.8oc.BLi.6JfYT/tT5d36\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['IGsma3L6YTJRrXS@1g.yR3mC.c.xoCns7Wo1.9C.Oe.5ebkR/_97Ltj3\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['Uu538LDu9Bye@Gu0W0P5a.b9zA9nSaNhzB_TQ2.z/qfi5CZrH\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['bdHl525me@XzR_iO23v.YFXbnHUybbgw.i/WVEhm\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['NQsZ0K@eE8VMB.w2nYtKImB.4nUF\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['186@E.MmBaKLj.WYpt4wPZkzv93\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['hmhYxkGtWYRJFtBU@Drg3L7WKujE.lU61Ljqxv./FJ4X\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['t1RIUz9l3FA15@tOL9.rv.NjhouD.\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['_I4ytjyccT@q.WIc.Cqn\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['LwHHRYq@whOoq.e9b6i0xnoWBl7z.SGJiJe/iUij1x7\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['Yesx@9_KiJq2cBI6.\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['Zu5VFUtSbIw@ner5e\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['test@test.\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['test@.test\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['est.@test\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['test@test.ru/\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['asd@asd@\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['@\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['/\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['.\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['mike@\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['@mike\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['@mail.ru\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['test.me\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['$@ru\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['testme@o.o.o.o.o/ooooo\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['oooop/oooop\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['mail.ru/a\\r\\n'], 'output': ['NO\\r\\n']}, {'input': ['mike@mail.ru/aaa\\r\\n'], 'output': ['YES\\r\\n']}, {'input': ['mike@mike.mike\\r\\n'], 'output': ['YES\\r\\n']}]", "source_code": "import re\n\ns = input()\n\nif re.match(r'^[a-zA-Z0-9_]+@[a-zA-Z0-9_]+\\.[a-zA-Z0-9_]+(\\.[a-zA-Z0-9_]+)?(/[a-zA-Z0-9_]+)?$', s):\n    print('YES')\nelse:\n    print('NO')\n"}
{"src_uid": "21_C", "id": 154, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2000, "testcases": "[{'input': ['1\\r\\n-3\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['2\\r\\n0 0\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['3\\r\\n0 0 0\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['4\\r\\n-2 3 3 2\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['5\\r\\n-6 3 -1 2 -7\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['6\\r\\n2 3 -3 0 -3 1\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['7\\r\\n-1 1 -3 4 3 0 2\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['8\\r\\n2 0 0 2 -1 3 4 5\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['9\\r\\n-5 -2 1 1 5 0 -4 4 0\\r\\n'], 'output': ['3\\r\\n']}, {'input': ['10\\r\\n-1 5 2 3 1 5 0 2 2 5\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['100\\r\\n3 0 -5 2 -3 -1 -1 0 -2 -5 -4 2 1 2 -2 -1 -1 -4 3 -1 -3 -1 5 0 -4 -4 -1 0 -2 -2 0 1 -1 -2 -1 -5 -4 -2 3 1 -3 0 -1 1 0 -1 2 0 -2 -1 -3 1 -2 2 3 2 -3 -5 2 2 -2 -2 1 2 -2 -1 3 0 -4 7 -2 2 1 4 -9 -1 -2 -1 0 -1 0 -2 -2 -1 1 1 -4 2 -3 -3 7 1 1 -3 -7 0 -2 0 5 -2\\r\\n'], 'output': ['5\\r\\n']}]", "source_code": "n = int(input())\na = list(map(int, input().split()))\ns = sum(a)\nif s % 3!= 0:\n    print(0)\n    exit()\ns //= 3\n\ncnt = 0\nfor i in range(n):\n    if a[i] == s:\n        cnt += 1\n\nprint(cnt)\n"}
{"src_uid": "383_E", "id": 155, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2700, "testcases": "[{'input': ['5\\r\\nabc\\r\\naaa\\r\\nada\\r\\nbcd\\r\\ndef\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['100\\r\\namd\\r\\namj\\r\\natr\\r\\nbcp\\r\\nbjm\\r\\ncna\\r\\ncpj\\r\\ncse\\r\\ndij\\r\\ndjp\\r\\ndlv\\r\\nebk\\r\\nedf\\r\\nelw\\r\\nfbr\\r\\nfcl\\r\\nfhs\\r\\nflo\\r\\nfmj\\r\\ngcg\\r\\ngen\\r\\nghg\\r\\ngvb\\r\\ngxx\\r\\nhbe\\r\\nhbf\\r\\nhgu\\r\\nhlv\\r\\nhqa\\r\\nibg\\r\\nifp\\r\\nima\\r\\nitt\\r\\nivl\\r\\nixu\\r\\njle\\r\\njli\\r\\nket\\r\\nkit\\r\\nkws\\r\\nlep\\r\\nles\\r\\nleu\\r\\nmbp\\r\\nmci\\r\\nmdv\\r\\nmhf\\r\\nmih\\r\\nmll\\r\\nmop\\r\\nndp\\r\\nnfs\\r\\nngl\\r\\nnng\\r\\noic\\r\\nomo\\r\\nooj\\r\\noti\\r\\npax\\r\\npfo\\r\\npjd\\r\\npup\\r\\nqer\\r\\nrad\\r\\nrdg\\r\\nrfq\\r\\nrvt\\r\\nrwa\\r\\nrxj\\r\\nshc\\r\\nsjv\\r\\nswx\\r\\ntcu\\r\\ntlm\\r\\ntmb\\r\\ntml\\r\\ntmw\\r\\ntvr\\r\\ntvx\\r\\nuid\\r\\nuir\\r\\nukf\\r\\nulg\\r\\nvce\\r\\nves\\r\\nvfb\\r\\nvok\\r\\nvut\\r\\nvvi\\r\\nvwb\\r\\nwab\\r\\nwba\\r\\nwdf\\r\\nweq\\r\\nwog\\r\\nwsl\\r\\nxbk\\r\\nxiq\\r\\nxop\\r\\nxpp\\r\\n'], 'output': ['13888\\r\\n']}, {'input': ['100\\r\\naip\\r\\nbfl\\r\\nbld\\r\\nblh\\r\\nbpk\\r\\nbqd\\r\\nbtk\\r\\ncfu\\r\\nciv\\r\\nckf\\r\\ncog\\r\\ncro\\r\\nctt\\r\\ncve\\r\\ncvn\\r\\ndlj\\r\\neer\\r\\negw\\r\\negx\\r\\nffi\\r\\nfld\\r\\nggk\\r\\ngis\\r\\ngkv\\r\\ngnq\\r\\ngvj\\r\\nhdo\\r\\nhgf\\r\\nhgu\\r\\nhjt\\r\\nhla\\r\\nhni\\r\\nhnk\\r\\nifa\\r\\niir\\r\\niml\\r\\njfa\\r\\njgl\\r\\nkbf\\r\\nliv\\r\\nlqo\\r\\nmlw\\r\\nmot\\r\\nmpx\\r\\nnas\\r\\nnlo\\r\\nobt\\r\\nodo\\r\\nodx\\r\\nolr\\r\\nolw\\r\\nonc\\r\\npac\\r\\npdp\\r\\nphn\\r\\npku\\r\\npng\\r\\npsd\\r\\nptl\\r\\npuq\\r\\npvk\\r\\npvx\\r\\nqjj\\r\\nqju\\r\\nqpf\\r\\nqqv\\r\\nqsf\\r\\nrac\\r\\nrgj\\r\\nrrg\\r\\nsbm\\r\\nsdf\\r\\nsif\\r\\nsil\\r\\nsnv\\r\\nspt\\r\\nsxt\\r\\ntou\\r\\nttj\\r\\nufi\\r\\nuht\\r\\nujm\\r\\null\\r\\nupm\\r\\nuqf\\r\\nvof\\r\\nvpq\\r\\nwae\\r\\nwck\\r\\nwed\\r\\nwhd\\r\\nwjn\\r\\nwpp\\r\\nwvd\\r\\nxbx\\r\\nxdv\\r\\nxeh\\r\\nxmq\\r\\nxsm\\r\\nxsp\\r\\n'], 'output': ['8624\\r\\n']}, {'input': ['10\\r\\nhjk\\r\\nkkw\\r\\nmsw\\r\\nnht\\r\\noqu\\r\\npcx\\r\\npet\\r\\nshd\\r\\nutb\\r\\nwbw\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['20\\r\\netf\\r\\nffq\\r\\ngqe\\r\\nhpj\\r\\nido\\r\\niep\\r\\nkbv\\r\\nlgs\\r\\nlkl\\r\\nlvg\\r\\nmhs\\r\\nocr\\r\\nonc\\r\\nonv\\r\\npmv\\r\\nqhk\\r\\nrck\\r\\nrgj\\r\\nsib\\r\\nuox\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['30\\r\\nagf\\r\\naov\\r\\ncac\\r\\ncdq\\r\\nclc\\r\\ncue\\r\\ndmh\\r\\ndrr\\r\\ndxv\\r\\nfrv\\r\\njmg\\r\\nkih\\r\\nkii\\r\\nkqm\\r\\nkwc\\r\\nnri\\r\\nohw\\r\\nrfk\\r\\nrrd\\r\\nrrk\\r\\ntmp\\r\\ntsc\\r\\nuhg\\r\\nuhx\\r\\nujw\\r\\nvms\\r\\nvrg\\r\\nwer\\r\\nxml\\r\\nxuv\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['40\\r\\nbhw\\r\\nblh\\r\\ncal\\r\\nccg\\r\\ncdd\\r\\ncsm\\r\\ndir\\r\\ndux\\r\\nefp\\r\\nfnw\\r\\ngcr\\r\\nhuc\\r\\niaf\\r\\nipv\\r\\niva\\r\\niwl\\r\\njeb\\r\\njwk\\r\\nlot\\r\\nmcf\\r\\nmnk\\r\\nnak\\r\\nopl\\r\\norb\\r\\noxj\\r\\nqws\\r\\nrbl\\r\\nsmo\\r\\nsuw\\r\\nsws\\r\\ntgt\\r\\numg\\r\\nvhn\\r\\nvud\\r\\nwml\\r\\nwqg\\r\\nxbv\\r\\nxgj\\r\\nxlm\\r\\nxxv\\r\\n'], 'output': ['944\\r\\n']}, {'input': ['50\\r\\nagj\\r\\nbnk\\r\\nbtg\\r\\ncqt\\r\\ncxs\\r\\ndjv\\r\\neft\\r\\neqt\\r\\nfbf\\r\\nfbp\\r\\nfko\\r\\nfrg\\r\\ngdb\\r\\ngdw\\r\\ngie\\r\\ngvv\\r\\nhdw\\r\\nijo\\r\\nixc\\r\\njif\\r\\njph\\r\\nkad\\r\\nkje\\r\\nlel\\r\\nles\\r\\nlhw\\r\\nlkw\\r\\nmht\\r\\nnii\\r\\nnsb\\r\\nnuo\\r\\nnwp\\r\\nolm\\r\\nomb\\r\\noti\\r\\notm\\r\\nove\\r\\npnl\\r\\npqf\\r\\npwc\\r\\nrfq\\r\\nrkl\\r\\nsrm\\r\\nthb\\r\\ntje\\r\\ntpw\\r\\nugo\\r\\nwhk\\r\\nwwq\\r\\nxpx\\r\\n'], 'output': ['1184\\r\\n']}, {'input': ['50\\r\\naah\\r\\naoh\\r\\naqc\\r\\nauo\\r\\ncnk\\r\\ndfa\\r\\ndok\\r\\nfvd\\r\\nhxk\\r\\nibb\\r\\nicl\\r\\nigj\\r\\nird\\r\\njjv\\r\\njmv\\r\\nkbo\\r\\nkgj\\r\\nkji\\r\\nkxp\\r\\nlnf\\r\\nlqe\\r\\nndq\\r\\nnoi\\r\\nohh\\r\\noro\\r\\npdg\\r\\npio\\r\\npjq\\r\\npkw\\r\\npsg\\r\\npvt\\r\\nqdi\\r\\nqmo\\r\\nrba\\r\\nrkh\\r\\nrpk\\r\\nrrm\\r\\nrxs\\r\\nssu\\r\\ntcn\\r\\ntea\\r\\ntjb\\r\\ntkr\\r\\nuuh\\r\\nvmn\\r\\nvqd\\r\\nwaj\\r\\nwnl\\r\\nwqp\\r\\nxtw\\r\\n'], 'output': ['2736\\r\\n']}, {'input': ['50\\r\\nabh\\r\\navn\\r\\nbrx\\r\\ndcp\\r\\ndqe\\r\\nedr\\r\\neub\\r\\nfmg\\r\\ngda\\r\\ngmm\\r\\ngpn\\r\\nhbd\\r\\nhnw\\r\\nhta\\r\\nhuk\\r\\nhun\\r\\nieo\\r\\nifc\\r\\niwn\\r\\nixm\\r\\njpc\\r\\njsr\\r\\nkrj\\r\\nksc\\r\\nlie\\r\\nljj\\r\\nllb\\r\\nlqp\\r\\nmap\\r\\nmkx\\r\\nnob\\r\\nogl\\r\\nokh\\r\\noxq\\r\\npqu\\r\\npxk\\r\\nqfv\\r\\nqkt\\r\\nrjw\\r\\nseu\\r\\ntpe\\r\\nupe\\r\\nvlk\\r\\nwbw\\r\\nwce\\r\\nxae\\r\\nxqk\\r\\nxsv\\r\\nxve\\r\\nxvk\\r\\n'], 'output': ['224\\r\\n']}, {'input': ['50\\r\\nbpx\\r\\ncpq\\r\\ncqo\\r\\ndct\\r\\ndhh\\r\\ndid\\r\\ndlr\\r\\ndpl\\r\\neie\\r\\nesj\\r\\nfnc\\r\\nfse\\r\\nfxp\\r\\ngat\\r\\nghq\\r\\ngmg\\r\\nhan\\r\\nhdq\\r\\nhqn\\r\\nhse\\r\\nhwt\\r\\nibk\\r\\njbg\\r\\njda\\r\\nkgi\\r\\nkrr\\r\\nkrt\\r\\nkvo\\r\\nlwe\\r\\nmuh\\r\\nmve\\r\\nnfp\\r\\noac\\r\\nodw\\r\\nofq\\r\\npdr\\r\\nqlr\\r\\nrjm\\r\\nsdl\\r\\nsfj\\r\\nshs\\r\\ntae\\r\\ntdt\\r\\nual\\r\\nukf\\r\\nuup\\r\\nvkw\\r\\nvnj\\r\\nwbh\\r\\nxsp\\r\\n'], 'output': ['3200\\r\\n']}, {'input': ['50\\r\\nbfu\\r\\nbqa\\r\\ncew\\r\\nclt\\r\\ncnx\\r\\ncor\\r\\ncvq\\r\\nddq\\r\\ndgm\\r\\ndme\\r\\nehr\\r\\neua\\r\\newd\\r\\nfhq\\r\\nhep\\r\\nill\\r\\njmp\\r\\njnc\\r\\njng\\r\\njts\\r\\njtt\\r\\njww\\r\\nkei\\r\\nkjr\\r\\nkmk\\r\\nkoq\\r\\nkxi\\r\\nmgu\\r\\nnbb\\r\\nnqa\\r\\nnrp\\r\\nntq\\r\\nnwg\\r\\nost\\r\\notf\\r\\noxc\\r\\npia\\r\\nqgo\\r\\nqli\\r\\nqqa\\r\\nrrx\\r\\nrug\\r\\nsaj\\r\\nsjc\\r\\ntqm\\r\\nvoh\\r\\nvoo\\r\\nvwd\\r\\nwke\\r\\nwqg\\r\\n'], 'output': ['2432\\r\\n']}, {'input': ['100\\r\\nacs\\r\\nako\\r\\naqn\\r\\navw\\r\\naxm\\r\\nbea\\r\\nbmw\\r\\nbro\\r\\nbrw\\r\\nbvn\\r\\nciv\\r\\ncpn\\r\\ndas\\r\\ndex\\r\\ndjo\\r\\ndwq\\r\\neat\\r\\nedq\\r\\negu\\r\\neqw\\r\\nfkt\\r\\nflt\\r\\nfqv\\r\\nfrf\\r\\nfwg\\r\\ngab\\r\\nhcs\\r\\nhfw\\r\\nhoq\\r\\nhwu\\r\\nicq\\r\\niji\\r\\nins\\r\\nirs\\r\\nivn\\r\\njga\\r\\njng\\r\\nkcq\\r\\nkfe\\r\\nkox\\r\\nkps\\r\\nkts\\r\\nlmt\\r\\nlok\\r\\nlvm\\r\\nlwt\\r\\nmfd\\r\\nmlc\\r\\nmnm\\r\\nmwu\\r\\nnad\\r\\nnai\\r\\nnot\\r\\nogr\\r\\nope\\r\\noqm\\r\\nosd\\r\\novq\\r\\nprj\\r\\nqad\\r\\nqoh\\r\\nqqk\\r\\nrnq\\r\\nrqx\\r\\nrsh\\r\\nrug\\r\\nrxg\\r\\nsar\\r\\nsbn\\r\\nsbu\\r\\nsbw\\r\\nseg\\r\\nskp\\r\\nsqm\\r\\nssx\\r\\ntoo\\r\\nttm\\r\\nuch\\r\\nuek\\r\\nuhm\\r\\nuhn\\r\\nusv\\r\\nvaw\\r\\nvcw\\r\\nvkm\\r\\nvsj\\r\\nvwi\\r\\nwbm\\r\\nwcg\\r\\nwqr\\r\\nwri\\r\\nwsw\\r\\nxbs\\r\\nxcn\\r\\nxhw\\r\\nxip\\r\\nxoq\\r\\nxue\\r\\nxuk\\r\\nxvg\\r\\n'], 'output': ['7488\\r\\n']}, {'input': ['100\\r\\naie\\r\\naoq\\r\\nban\\r\\nbdw\\r\\ncdk\\r\\ncgw\\r\\ncls\\r\\ncoq\\r\\ncsp\\r\\ncwi\\r\\ndmg\\r\\negd\\r\\negi\\r\\nejd\\r\\nfbs\\r\\nfiv\\r\\nfjv\\r\\nfrp\\r\\nfto\\r\\ngcf\\r\\ngfb\\r\\ngkg\\r\\ngvg\\r\\nhfe\\r\\nhfr\\r\\nhgi\\r\\nhgx\\r\\nhpe\\r\\nhwt\\r\\nhxn\\r\\nibd\\r\\nifb\\r\\nihu\\r\\nipf\\r\\niwe\\r\\njds\\r\\njfe\\r\\njkb\\r\\njkx\\r\\njvq\\r\\nkdr\\r\\nkjh\\r\\nkll\\r\\nkog\\r\\nltk\\r\\nmik\\r\\nmsb\\r\\nnci\\r\\nndl\\r\\nnfo\\r\\nnfp\\r\\nnio\\r\\nnkr\\r\\nnmi\\r\\nnpk\\r\\noch\\r\\nogx\\r\\noka\\r\\nolf\\r\\nopm\\r\\norv\\r\\nphm\\r\\npmd\\r\\npuo\\r\\npxq\\r\\nqae\\r\\nqik\\r\\nqlp\\r\\nqna\\r\\nqst\\r\\nqth\\r\\nqxm\\r\\nrak\\r\\nrpj\\r\\nrqd\\r\\nsbq\\r\\nsfv\\r\\nstw\\r\\ntaj\\r\\nteh\\r\\ntlw\\r\\ntmj\\r\\ntmm\\r\\ntqv\\r\\nujn\\r\\nuko\\r\\nunb\\r\\nuvm\\r\\nvdb\\r\\nvjd\\r\\nvtp\\r\\nvvt\\r\\nwme\\r\\nwnq\\r\\nwqs\\r\\nwwj\\r\\nxan\\r\\nxdn\\r\\nxjg\\r\\nxkd\\r\\n'], 'output': ['8960\\r\\n']}, {'input': ['100\\r\\nahd\\r\\nahw\\r\\narc\\r\\naro\\r\\natd\\r\\naui\\r\\nbas\\r\\nbeg\\r\\nblc\\r\\nbmu\\r\\nboo\\r\\nbpt\\r\\nbqa\\r\\ncds\\r\\nchn\\r\\ncni\\r\\ncsh\\r\\nddt\\r\\ndjb\\r\\ndkh\\r\\neal\\r\\near\\r\\necr\\r\\neea\\r\\nefr\\r\\nekf\\r\\nekq\\r\\netb\\r\\neui\\r\\nfau\\r\\nfcr\\r\\nfdc\\r\\nfhp\\r\\nfpc\\r\\nfwv\\r\\ngaf\\r\\ngoo\\r\\ngut\\r\\nhek\\r\\nheu\\r\\nhfq\\r\\nhjk\\r\\nhjx\\r\\nhmk\\r\\nhqp\\r\\nhsa\\r\\niax\\r\\nijm\\r\\njlf\\r\\njlw\\r\\njok\\r\\njqi\\r\\njss\\r\\njte\\r\\nknb\\r\\nkrt\\r\\nlbi\\r\\nlej\\r\\nlqu\\r\\nlva\\r\\nlxf\\r\\nmll\\r\\nndb\\r\\nndf\\r\\nngc\\r\\nolh\\r\\nope\\r\\npds\\r\\npli\\r\\npuk\\r\\nqec\\r\\nqgi\\r\\nqkr\\r\\nqqu\\r\\nrks\\r\\nrsj\\r\\nscb\\r\\nsig\\r\\nsnj\\r\\ntdc\\r\\ntpa\\r\\ntro\\r\\nttc\\r\\ntwn\\r\\nuef\\r\\nuhh\\r\\nujb\\r\\nujn\\r\\nuka\\r\\nulk\\r\\nuss\\r\\nuwa\\r\\nuwu\\r\\nvmr\\r\\nvmt\\r\\nvoq\\r\\nwug\\r\\nwvh\\r\\nxef\\r\\nxrk\\r\\n'], 'output': ['6624\\r\\n']}, {'input': ['100\\r\\nagg\\r\\nals\\r\\naxf\\r\\nbdd\\r\\nbex\\r\\nbsx\\r\\nchb\\r\\nclr\\r\\ncmm\\r\\ndaf\\r\\ndbf\\r\\nddw\\r\\ndng\\r\\nduw\\r\\nebp\\r\\nech\\r\\neex\\r\\neff\\r\\nefg\\r\\neqt\\r\\nerp\\r\\nexg\\r\\nfbd\\r\\nffg\\r\\nfif\\r\\nfta\\r\\nghv\\r\\ngqn\\r\\ngrf\\r\\nhcc\\r\\nhdc\\r\\nhos\\r\\nhqh\\r\\nims\\r\\nipf\\r\\niro\\r\\nixu\\r\\njhx\\r\\njil\\r\\njqn\\r\\njuh\\r\\nkeb\\r\\nknl\\r\\nkol\\r\\nksj\\r\\nksl\\r\\nkxn\\r\\nlbn\\r\\nlci\\r\\nlfr\\r\\nliw\\r\\nlpc\\r\\nmdq\\r\\nmhx\\r\\nmts\\r\\nmwl\\r\\nnde\\r\\nnik\\r\\nnlo\\r\\nnnk\\r\\nnpc\\r\\nntt\\r\\nohr\\r\\nona\\r\\npap\\r\\npfb\\r\\npgm\\r\\npgo\\r\\npql\\r\\npsd\\r\\npvd\\r\\nqax\\r\\nqcj\\r\\nqfj\\r\\nqiv\\r\\nqke\\r\\nqks\\r\\nrhu\\r\\nrrg\\r\\nseo\\r\\nskr\\r\\ntjp\\r\\ntlt\\r\\ntof\\r\\ntop\\r\\ntpn\\r\\ntxe\\r\\nvfl\\r\\nvpn\\r\\nvrh\\r\\nwbd\\r\\nwet\\r\\nwgo\\r\\nwlm\\r\\nwox\\r\\nwwi\\r\\nxas\\r\\nxmg\\r\\nxng\\r\\nxqj\\r\\n'], 'output': ['13408\\r\\n']}, {'input': ['100\\r\\navm\\r\\nbir\\r\\nbmx\\r\\nbve\\r\\nbvx\\r\\ncbr\\r\\nccq\\r\\nckn\\r\\ncmd\\r\\ncuu\\r\\ncxh\\r\\nddw\\r\\ndfb\\r\\ndgt\\r\\ndmo\\r\\ndqd\\r\\neon\\r\\nerm\\r\\nerp\\r\\neux\\r\\newl\\r\\nfau\\r\\nfek\\r\\nfss\\r\\nftg\\r\\nfvb\\r\\ngfu\\r\\ngkw\\r\\nguj\\r\\ngwe\\r\\nhjf\\r\\nhrq\\r\\nibk\\r\\njjs\\r\\njmp\\r\\njqs\\r\\nkbu\\r\\nklu\\r\\nkqw\\r\\nkqx\\r\\nlaa\\r\\nlbe\\r\\nmek\\r\\nmga\\r\\nmio\\r\\nmle\\r\\nmls\\r\\nmma\\r\\nmoj\\r\\nmpb\\r\\nmxu\\r\\nnfs\\r\\nnht\\r\\noap\\r\\nods\\r\\noee\\r\\nokc\\r\\noqr\\r\\npdh\\r\\npdt\\r\\nphq\\r\\nphw\\r\\npwa\\r\\nqgt\\r\\nqji\\r\\nqnj\\r\\nqqt\\r\\nqvu\\r\\nqwb\\r\\nqwc\\r\\nrdv\\r\\nrfq\\r\\nrnx\\r\\nrse\\r\\nruq\\r\\nrvs\\r\\nsoo\\r\\nsxe\\r\\nthh\\r\\ntop\\r\\ntrg\\r\\ntud\\r\\ntur\\r\\nugu\\r\\nupj\\r\\nupt\\r\\nvak\\r\\nver\\r\\nvhu\\r\\nvul\\r\\nwes\\r\\nwkm\\r\\nwqc\\r\\nwuf\\r\\nxbk\\r\\nxdf\\r\\nxlh\\r\\nxnv\\r\\nxqo\\r\\nxvu\\r\\n'], 'output': ['10864\\r\\n']}]", "source_code": "n = int(input())\n\nvowels = set()\n\nfor i in range(n):\n    word = input()\n    vowels.add(word[0])\n    vowels.add(word[1])\n    vowels.add(word[2])\n\nans = 0\nfor i in range(2**24):\n    s = bin(i)[2:]\n    s = '0'*(24-len(s)) + s\n    cnt = 0\n    for j in range(24):\n        if s[j] == '1':\n            cnt += 1\n    if cnt in vowels:\n        ans ^= 1\n    else:\n        ans ^= 0\n\nprint(ans)\n"}
{"src_uid": "6_E", "id": 156, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1900, "testcases": "[{'input': ['3 3\\r\\n14 12 10\\r\\n'], 'output': ['2 2\\r\\n1 2\\r\\n2 3\\r\\n']}, {'input': ['2 0\\r\\n10 10\\r\\n'], 'output': ['2 1\\r\\n1 2\\r\\n']}, {'input': ['4 5\\r\\n8 19 10 13\\r\\n'], 'output': ['2 1\\r\\n3 4\\r\\n']}, {'input': ['1 1\\r\\n1\\r\\n'], 'output': ['1 1\\r\\n1 1\\r\\n']}, {'input': ['2 10\\r\\n35 45\\r\\n'], 'output': ['2 1\\r\\n1 2\\r\\n']}, {'input': ['4 8\\r\\n89 33 54 75\\r\\n'], 'output': ['1 4\\r\\n1 1\\r\\n2 2\\r\\n3 3\\r\\n4 4\\r\\n']}, {'input': ['5 1\\r\\n9 6 8 7 5\\r\\n'], 'output': ['2 1\\r\\n3 4\\r\\n']}, {'input': ['3 3\\r\\n3 8 6\\r\\n'], 'output': ['2 1\\r\\n2 3\\r\\n']}, {'input': ['4 1000000\\r\\n100001 1 200001 300001\\r\\n'], 'output': ['4 1\\r\\n1 4\\r\\n']}, {'input': ['4 1000\\r\\n11497 9999 10730 12280\\r\\n'], 'output': ['2 1\\r\\n2 3\\r\\n']}, {'input': ['3 0\\r\\n1000000 1000000 1000000\\r\\n'], 'output': ['3 1\\r\\n1 3\\r\\n']}, {'input': ['4 50\\r\\n165 182 157 132\\r\\n'], 'output': ['4 1\\r\\n1 4\\r\\n']}, {'input': ['5 173\\r\\n350 250 200 300 400\\r\\n'], 'output': ['4 1\\r\\n1 4\\r\\n']}, {'input': ['4 0\\r\\n1 1 1 1\\r\\n'], 'output': ['4 1\\r\\n1 4\\r\\n']}, {'input': ['2 1000000\\r\\n1 1000000\\r\\n'], 'output': ['2 1\\r\\n1 2\\r\\n']}, {'input': ['7 14\\r\\n28 28 29 35 25 29 28\\r\\n'], 'output': ['7 1\\r\\n1 7\\r\\n']}, {'input': ['10 163\\r\\n7541 2535 5883 5775 2821 5962 4489 5548 2852 4595\\r\\n'], 'output': ['2 1\\r\\n3 4\\r\\n']}, {'input': ['15 793\\r\\n98580 27440 3719 73977 34819 64092 89939 75329 72884 66502 17464 73662 6666 47984 45348\\r\\n'], 'output': ['1 15\\r\\n1 1\\r\\n2 2\\r\\n3 3\\r\\n4 4\\r\\n5 5\\r\\n6 6\\r\\n7 7\\r\\n8 8\\r\\n9 9\\r\\n10 10\\r\\n11 11\\r\\n12 12\\r\\n13 13\\r\\n14 14\\r\\n15 15\\r\\n']}, {'input': ['28 543\\r\\n1921 1700 1363 2580 2693 3144 2269 908 3863 3750 2151 3039 1581 3395 1133 1804 1464 2040 2372 2475 1240 800 3521 3270 2815 1026 3625 2930\\r\\n'], 'output': ['3 1\\r\\n18 20\\r\\n']}, {'input': ['55 1000\\r\\n2612 1306 4300 1790 3173 9493 7209 7763 8563 4534 7466 1281 4483 6863 3787 7292 3957 8775 7221 4016 5743 6556 2070 2119 4795 9094 1913 2077 8786 4520 1865 2357 7871 3288 8231 5808 9383 9820 9974 3056 5343 2169 5177 6299 5805 8132 9315 6747 5226 3531 1206 4073 8290 1423 6720\\r\\n'], 'output': ['3 1\\r\\n37 39\\r\\n']}]", "source_code": "n,k=map(int,input().split())\na=list(map(int,input().split()))\nb=[]\nc=[]\nd=[]\ne=[]\nf=[]\ng=[]\nh=[]\ni=0\nj=0\nwhile i<n:\n    if j==0:\n        j=i\n    if a[i]-a[j]<=k:\n        j+=1\n    else:\n        b.append([j+1,i])\n        j=i\n    i+=1\nif j!=i:\n    b.append([j+1,i])\nprint(len(b),len(b))\nfor i in range(len(b)):\n    print(b[i][0],b[i][1])\n"}
{"src_uid": "1214_D", "id": 157, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1900, "testcases": "[{'input': ['2 2\\r\\n..\\r\\n..\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['5 1\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['1 3\\r\\n.#.\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['6 1\\r\\n.\\r\\n.\\r\\n#\\r\\n.\\r\\n.\\r\\n.\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['5 2\\r\\n..\\r\\n..\\r\\n..\\r\\n..\\r\\n#.\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['4 2\\r\\n..\\r\\n#.\\r\\n..\\r\\n..\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['2 2\\r\\n.#\\r\\n..\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['4 5\\r\\n.####\\r\\n#####\\r\\n#####\\r\\n####.\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['5 4\\r\\n.###\\r\\n####\\r\\n####\\r\\n####\\r\\n###.\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['3 6\\r\\n.#####\\r\\n######\\r\\n#####.\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['6 3\\r\\n.##\\r\\n###\\r\\n###\\r\\n###\\r\\n###\\r\\n##.\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['6 3\\r\\n.##\\r\\n###\\r\\n.##\\r\\n.##\\r\\n#.#\\r\\n#..\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['6 3\\r\\n.##\\r\\n###\\r\\n.##\\r\\n..#\\r\\n..#\\r\\n#..\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['6 3\\r\\n.##\\r\\n.##\\r\\n.##\\r\\n..#\\r\\n..#\\r\\n#..\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['10 2\\r\\n..\\r\\n..\\r\\n..\\r\\n..\\r\\n..\\r\\n..\\r\\n..\\r\\n..\\r\\n..\\r\\n..\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['20 1\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n#\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['20 1\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n.\\r\\n'], 'output': ['1\\r\\n']}]", "source_code": "import sys\n\nn, m = map(int, sys.stdin.readline().split())\n\ns = []\nfor i in range(n):\n    s.append(sys.stdin.readline().strip())\n\n\ndef dfs(x, y):\n    if x < 0 or y < 0 or x >= n or y >= m:\n        return\n    if s[x][y] == \"#\":\n        return\n    s[x][y] = \"#\"\n    dfs(x + 1, y)\n    dfs(x, y + 1)\n\n\ndfs(0, 0)\n\nprint(len(s) * len(s[0]) - 2)\n"}
{"src_uid": "1215_E", "id": 158, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2200, "testcases": "[{'input': ['7\\r\\n3 4 2 3 4 2 2\\r\\n'], 'output': ['3\\r\\n']}, {'input': ['5\\r\\n20 1 14 10 2\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['13\\r\\n5 5 4 4 3 5 7 6 5 4 4 6 5\\r\\n'], 'output': ['21\\r\\n']}, {'input': ['10\\r\\n13 13 13 13 13 13 13 9 9 13\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['100\\r\\n11 16 16 11 16 11 16 16 11 16 16 16 16 16 16 16 16 16 11 16 16 16 16 16 16 11 16 11 16 11 16 16 16 11 5 16 16 11 16 16 16 16 16 11 16 11 5 16 16 16 16 5 16 16 11 11 16 16 5 16 11 11 16 16 16 11 11 16 11 16 16 16 16 16 16 11 11 16 16 5 16 5 20 5 16 16 16 11 16 16 16 16 16 16 11 16 20 11 16 5\\r\\n'], 'output': ['1030\\r\\n']}, {'input': ['10\\r\\n14 14 14 14 14 14 14 14 14 14\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['100\\r\\n1 9 15 1 1 12 1 9 1 15 9 1 9 1 1 1 1 1 15 15 12 1 1 1 1 15 1 15 1 1 1 1 1 12 15 1 15 9 1 1 9 15 1 1 12 15 9 1 15 15 1 1 1 1 15 1 1 1 1 1 1 15 1 15 1 1 9 9 12 1 1 15 1 15 15 15 1 15 9 9 1 15 12 1 12 1 15 1 15 9 15 15 15 15 1 9 1 12 1 1\\r\\n'], 'output': ['1342\\r\\n']}, {'input': ['10\\r\\n6 6 7 7 6 7 6 6 7 17\\r\\n'], 'output': ['8\\r\\n']}, {'input': ['100\\r\\n1 1 3 3 5 14 3 1 1 3 3 3 3 3 14 3 14 3 4 3 3 14 14 14 3 5 14 5 14 3 4 1 14 4 3 3 14 14 1 3 3 14 3 14 3 3 5 5 3 1 3 1 3 3 1 3 1 3 5 14 14 14 5 3 5 3 3 3 3 3 4 14 3 5 3 3 3 3 1 1 4 3 3 5 3 5 3 14 3 14 1 3 3 5 3 5 3 3 14 1\\r\\n'], 'output': ['1482\\r\\n']}, {'input': ['10\\r\\n6 6 4 6 6 6 6 9 4 9\\r\\n'], 'output': ['5\\r\\n']}, {'input': ['100\\r\\n4 7 19 19 16 16 1 1 7 1 19 1 16 19 19 7 1 19 1 19 4 16 7 1 1 16 16 1 1 19 7 7 19 7 1 16 1 4 19 19 16 16 4 4 1 19 4 4 16 4 19 4 4 7 19 4 1 7 1 1 19 7 16 4 1 7 4 7 4 7 19 16 7 4 1 4 1 4 19 7 16 7 19 1 16 1 16 4 1 19 19 7 1 4 19 4 19 4 16 4\\r\\n'], 'output': ['1691\\r\\n']}, {'input': ['10\\r\\n14 12 12 14 14 12 14 12 12 14\\r\\n'], 'output': ['12\\r\\n']}, {'input': ['100\\r\\n5 16 6 5 16 5 5 8 6 8 8 5 16 8 16 8 5 6 16 5 6 5 16 16 5 6 16 5 8 5 5 5 8 5 5 5 6 16 5 5 5 5 8 6 5 16 5 5 16 5 5 5 8 16 5 5 5 8 16 6 16 5 6 16 16 5 5 16 8 5 16 16 5 16 8 5 6 5 5 16 5 16 6 5 8 20 16 8 16 16 20 5 5 16 5 8 16 16 20 16\\r\\n'], 'output': ['1350\\r\\n']}, {'input': ['10\\r\\n18 8 18 18 18 18 18 18 17 8\\r\\n'], 'output': ['7\\r\\n']}, {'input': ['100\\r\\n16 16 8 2 16 8 2 16 1 16 16 16 16 16 16 16 16 8 2 1 16 8 8 16 16 16 8 16 2 16 16 16 16 16 1 1 2 16 2 16 1 8 16 8 16 16 16 8 2 16 8 8 16 16 2 8 1 8 16 1 16 1 16 8 8 16 8 8 16 8 16 8 8 16 16 8 8 16 16 8 8 8 16 8 16 2 16 16 8 8 2 2 16 8 1 2 16 16 16 16\\r\\n'], 'output': ['1373\\r\\n']}, {'input': ['10\\r\\n11 11 11 11 11 3 11 11 3 11\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['100\\r\\n15 2 15 15 15 15 15 15 2 15 2 2 15 15 3 15 2 2 2 15 15 15 15 2 15 15 15 3 2 15 15 2 5 2 15 15 15 15 2 5 3 15 5 2 3 15 15 15 15 15 15 2 15 2 5 15 15 15 15 5 15 2 15 15 15 15 2 2 2 5 2 15 2 15 2 15 15 15 15 2 15 15 2 15 15 2 15 15 15 2 15 2 2 15 15 2 15 15 15 15\\r\\n'], 'output': ['1253\\r\\n']}, {'input': ['2\\r\\n2 1\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['2\\r\\n13 13\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['9\\r\\n1 3 4 1 1 2 3 4 3\\r\\n'], 'output': ['9\\r\\n']}, {'input': ['26\\r\\n1 1 2 2 2 2 2 2 2 2 2 3 3 3 3 3 2 2 1 1 1 1 2 2 2 2\\r\\n'], 'output': ['86\\r\\n']}, {'input': ['8\\r\\n1 2 2 3 1 2 1 2\\r\\n'], 'output': ['8\\r\\n']}, {'input': ['6\\r\\n1 2 3 1 1 2\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['7\\r\\n1 2 2 3 1 1 2\\r\\n'], 'output': ['7\\r\\n']}, {'input': ['6\\r\\n3 1 2 3 3 1\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['9\\r\\n1 2 3 4 5 6 7 8 9\\r\\n'], 'output': ['0\\r\\n']}, {'input': ['7\\r\\n2 1 1 3 2 2 1\\r\\n'], 'output': ['7\\r\\n']}]", "source_code": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(20):\n    cnt = 0\n    for j in range(n):\n        if a[j] == i + 1:\n            cnt += 1\n        else:\n            ans += cnt * (cnt - 1) // 2\n            cnt = 0\n    ans += cnt * (cnt - 1) // 2\nprint(ans)\n"}
{"src_uid": "1216_E1", "id": 159, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1900, "testcases": "[{'input': ['5\\r\\n1\\r\\n3\\r\\n20\\r\\n38\\r\\n56\\r\\n'], 'output': ['1\\r\\n2\\r\\n5\\r\\n2\\r\\n0\\r\\n']}, {'input': ['4\\r\\n2132\\r\\n506\\r\\n999999999\\r\\n1000000000\\r\\n'], 'output': ['8\\r\\n2\\r\\n9\\r\\n8\\r\\n']}, {'input': ['1\\r\\n388645\\r\\n'], 'output': ['3\\r\\n']}, {'input': ['1\\r\\n472069\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['1\\r\\n555493\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1\\r\\n671621\\r\\n'], 'output': ['3\\r\\n']}, {'input': ['1\\r\\n755045\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['1\\r\\n838469\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['1\\r\\n921893\\r\\n'], 'output': ['8\\r\\n']}, {'input': ['1\\r\\n123151223\\r\\n'], 'output': ['7\\r\\n']}, {'input': ['2\\r\\n555831672\\r\\n1395496\\r\\n'], 'output': ['5\\r\\n1\\r\\n']}, {'input': ['10\\r\\n1\\r\\n10\\r\\n100\\r\\n1000\\r\\n10000\\r\\n100000\\r\\n1000000\\r\\n10000000\\r\\n100000000\\r\\n1000000000\\r\\n'], 'output': ['1\\r\\n4\\r\\n1\\r\\n4\\r\\n9\\r\\n2\\r\\n6\\r\\n2\\r\\n6\\r\\n8\\r\\n']}]", "source_code": "q = int(input())\nfor i in range(q):\n    k = int(input())\n    if k <= 10:\n        print(k-1)\n    else:\n        k -= 10\n        if k % 2 == 0:\n            print(k//2)\n        else:\n            print(k//2 + 1)"}
{"src_uid": "1216_E2", "id": 160, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2200, "testcases": "[{'input': ['5\\r\\n1\\r\\n3\\r\\n20\\r\\n38\\r\\n56\\r\\n'], 'output': ['1\\r\\n2\\r\\n5\\r\\n2\\r\\n0\\r\\n']}, {'input': ['4\\r\\n2132\\r\\n506\\r\\n999999999999999999\\r\\n1000000000000000000\\r\\n'], 'output': ['8\\r\\n2\\r\\n4\\r\\n1\\r\\n']}, {'input': ['1\\r\\n388645\\r\\n'], 'output': ['3\\r\\n']}, {'input': ['1\\r\\n472069\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['1\\r\\n555493\\r\\n'], 'output': ['2\\r\\n']}, {'input': ['1\\r\\n671621\\r\\n'], 'output': ['3\\r\\n']}, {'input': ['1\\r\\n755045\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['1\\r\\n838469\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['1\\r\\n921893\\r\\n'], 'output': ['8\\r\\n']}, {'input': ['1\\r\\n1231513123\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['1\\r\\n306200613881388645\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['1\\r\\n307026857059472069\\r\\n'], 'output': ['5\\r\\n']}, {'input': ['1\\r\\n307853100237555493\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['1\\r\\n308679339120671621\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['1\\r\\n309505582298755045\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['1\\r\\n310331825476838469\\r\\n'], 'output': ['5\\r\\n']}, {'input': ['1\\r\\n311158068654921893\\r\\n'], 'output': ['4\\r\\n']}, {'input': ['2\\r\\n555221491191831672\\r\\n1395496\\r\\n'], 'output': ['7\\r\\n1\\r\\n']}, {'input': ['19\\r\\n1\\r\\n10\\r\\n100\\r\\n1000\\r\\n10000\\r\\n100000\\r\\n1000000\\r\\n10000000\\r\\n100000000\\r\\n1000000000\\r\\n10000000000\\r\\n100000000000\\r\\n1000000000000\\r\\n10000000000000\\r\\n100000000000000\\r\\n1000000000000000\\r\\n10000000000000000\\r\\n100000000000000000\\r\\n1000000000000000000\\r\\n'], 'output': ['1\\r\\n4\\r\\n1\\r\\n4\\r\\n9\\r\\n2\\r\\n6\\r\\n2\\r\\n6\\r\\n8\\r\\n1\\r\\n1\\r\\n9\\r\\n8\\r\\n3\\r\\n7\\r\\n6\\r\\n1\\r\\n1\\r\\n']}, {'input': ['1\\r\\n9124\\r\\n'], 'output': ['4\\r\\n']}]", "source_code": "q = int(input())\nfor i in range(q):\n    k = int(input())\n    if k <= 10:\n        print(k)\n    else:\n        k -= 10\n        if k % 9 == 0:\n            print(9)\n        else:\n            print(k % 9)"}
{"src_uid": "1217_D", "id": 161, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2100, "testcases": "[{'input': ['4 5\\r\\n1 2\\r\\n1 3\\r\\n3 4\\r\\n2 4\\r\\n1 4\\r\\n'], 'output': ['1\\r\\n1 1 1 1 1 \\r\\n']}, {'input': ['3 3\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n'], 'output': ['2\\r\\n1 1 2 \\r\\n']}, {'input': ['6 8\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n4 3\\r\\n5 4\\r\\n6 5\\r\\n1 6\\r\\n6 2\\r\\n'], 'output': ['2\\r\\n1 1 2 1 1 1 1 1 \\r\\n']}, {'input': ['3 4\\r\\n1 2\\r\\n2 3\\r\\n3 2\\r\\n3 1\\r\\n'], 'output': ['2\\r\\n1 1 2 2 \\r\\n']}, {'input': ['3 6\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n2 1\\r\\n1 3\\r\\n3 2\\r\\n'], 'output': ['2\\r\\n1 1 2 2 1 2 \\r\\n']}, {'input': ['3 6\\r\\n1 2\\r\\n2 3\\r\\n3 1\\r\\n2 1\\r\\n3 2\\r\\n1 3\\r\\n'], 'output': ['2\\r\\n1 1 2 2 2 1 \\r\\n']}, {'input': ['10 2\\r\\n8 7\\r\\n10 5\\r\\n'], 'output': ['1\\r\\n1 1 \\r\\n']}, {'input': ['12 7\\r\\n11 8\\r\\n4 2\\r\\n7 5\\r\\n2 9\\r\\n7 2\\r\\n5 4\\r\\n10 8\\r\\n'], 'output': ['1\\r\\n1 1 1 1 1 1 1 \\r\\n']}, {'input': ['2 1\\r\\n2 1\\r\\n'], 'output': ['1\\r\\n1 \\r\\n']}, {'input': ['2 2\\r\\n2 1\\r\\n1 2\\r\\n'], 'output': ['2\\r\\n2 1 \\r\\n']}, {'input': ['7 10\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 1\\r\\n1 3\\r\\n3 5\\r\\n5 7\\r\\n'], 'output': ['2\\r\\n1 1 1 1 1 1 2 1 1 1 \\r\\n']}, {'input': ['14 50\\r\\n8 10\\r\\n5 11\\r\\n3 6\\r\\n14 6\\r\\n4 11\\r\\n6 8\\r\\n9 8\\r\\n3 7\\r\\n4 9\\r\\n4 8\\r\\n5 10\\r\\n13 5\\r\\n8 3\\r\\n13 12\\r\\n5 8\\r\\n4 5\\r\\n12 1\\r\\n14 10\\r\\n10 13\\r\\n6 13\\r\\n2 5\\r\\n6 4\\r\\n14 4\\r\\n11 12\\r\\n5 7\\r\\n1 13\\r\\n9 1\\r\\n5 12\\r\\n9 7\\r\\n7 10\\r\\n3 13\\r\\n3 10\\r\\n5 4\\r\\n13 3\\r\\n11 2\\r\\n10 3\\r\\n7 11\\r\\n7 3\\r\\n13 14\\r\\n6 2\\r\\n7 1\\r\\n14 11\\r\\n10 9\\r\\n4 3\\r\\n11 5\\r\\n12 2\\r\\n8 12\\r\\n13 10\\r\\n12 11\\r\\n2 10\\r\\n'], 'output': ['2\\r\\n2 1 1 1 2 1 1 1 1 1 1 1 2 1 1 2 2 1 2 2 2 1 1 1 1 1 2 1 1 2 2 2 1 1 1 1 2 2 1 2 2 1 1 2 2 1 2 1 2 1 \\r\\n']}, {'input': ['19 27\\r\\n6 13\\r\\n15 5\\r\\n12 15\\r\\n16 18\\r\\n9 18\\r\\n9 17\\r\\n1 16\\r\\n3 14\\r\\n8 7\\r\\n19 7\\r\\n14 6\\r\\n16 13\\r\\n15 12\\r\\n14 12\\r\\n13 5\\r\\n2 3\\r\\n13 11\\r\\n6 8\\r\\n7 14\\r\\n3 17\\r\\n8 2\\r\\n9 12\\r\\n18 14\\r\\n11 16\\r\\n17 3\\r\\n13 18\\r\\n1 3\\r\\n'], 'output': ['2\\r\\n1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 2 2 2 1 \\r\\n']}, {'input': ['8 6\\r\\n3 5\\r\\n8 3\\r\\n3 6\\r\\n8 5\\r\\n4 6\\r\\n2 5\\r\\n'], 'output': ['1\\r\\n1 1 1 1 1 1 \\r\\n']}, {'input': ['3 4\\r\\n3 1\\r\\n1 3\\r\\n2 3\\r\\n3 2\\r\\n'], 'output': ['2\\r\\n2 1 2 1 \\r\\n']}, {'input': ['5 12\\r\\n4 1\\r\\n4 5\\r\\n5 3\\r\\n5 4\\r\\n2 4\\r\\n5 1\\r\\n1 5\\r\\n1 4\\r\\n3 4\\r\\n3 5\\r\\n2 1\\r\\n4 2\\r\\n'], 'output': ['2\\r\\n2 2 1 1 2 2 1 1 1 2 2 1 \\r\\n']}, {'input': ['3 5\\r\\n1 3\\r\\n1 2\\r\\n3 2\\r\\n3 1\\r\\n2 3\\r\\n'], 'output': ['2\\r\\n1 1 1 2 2 \\r\\n']}, {'input': ['16 21\\r\\n7 9\\r\\n5 1\\r\\n3 9\\r\\n4 7\\r\\n15 5\\r\\n12 13\\r\\n12 7\\r\\n7 5\\r\\n1 4\\r\\n9 3\\r\\n13 16\\r\\n13 15\\r\\n9 15\\r\\n7 15\\r\\n16 3\\r\\n13 5\\r\\n3 7\\r\\n1 7\\r\\n5 13\\r\\n1 2\\r\\n2 9\\r\\n'], 'output': ['2\\r\\n1 2 2 1 1 1 1 1 1 1 1 2 1 1 1 2 2 1 1 1 1 \\r\\n']}, {'input': ['18 74\\r\\n12 17\\r\\n6 3\\r\\n7 5\\r\\n11 13\\r\\n13 12\\r\\n16 2\\r\\n15 3\\r\\n10 6\\r\\n18 1\\r\\n6 1\\r\\n10 18\\r\\n3 16\\r\\n16 5\\r\\n14 12\\r\\n12 1\\r\\n9 6\\r\\n13 11\\r\\n11 17\\r\\n13 1\\r\\n1 7\\r\\n18 12\\r\\n6 8\\r\\n11 15\\r\\n2 9\\r\\n9 12\\r\\n7 4\\r\\n8 15\\r\\n6 9\\r\\n11 9\\r\\n11 18\\r\\n3 6\\r\\n5 7\\r\\n1 16\\r\\n2 6\\r\\n17 11\\r\\n4 8\\r\\n14 1\\r\\n7 13\\r\\n18 14\\r\\n7 16\\r\\n15 5\\r\\n11 2\\r\\n18 17\\r\\n9 16\\r\\n4 13\\r\\n17 5\\r\\n8 6\\r\\n18 6\\r\\n6 4\\r\\n17 10\\r\\n10 7\\r\\n5 9\\r\\n7 6\\r\\n17 1\\r\\n9 13\\r\\n7 11\\r\\n9 5\\r\\n4 17\\r\\n18 15\\r\\n12 4\\r\\n8 3\\r\\n9 2\\r\\n7 2\\r\\n8 4\\r\\n8 11\\r\\n16 10\\r\\n13 18\\r\\n16 12\\r\\n3 10\\r\\n18 10\\r\\n12 3\\r\\n12 14\\r\\n9 14\\r\\n3 11\\r\\n'], 'output': ['2\\r\\n1 1 1 1 2 1 2 2 2 2 1 1 2 2 2 1 2 2 2 1 1 1 1 2 1 1 1 2 2 2 2 2 1 2 1 1 2 1 1 1 2 1 1 1 1 2 2 2 1 2 2 1 1 2 1 1 2 1 1 1 2 1 1 2 1 1 2 1 1 2 2 1 1 1 \\r\\n']}, {'input': ['14 23\\r\\n8 5\\r\\n6 3\\r\\n5 9\\r\\n3 1\\r\\n6 1\\r\\n13 11\\r\\n11 2\\r\\n14 4\\r\\n14 5\\r\\n4 2\\r\\n10 3\\r\\n14 6\\r\\n4 1\\r\\n8 2\\r\\n11 1\\r\\n14 1\\r\\n5 13\\r\\n1 4\\r\\n9 5\\r\\n8 13\\r\\n1 2\\r\\n4 8\\r\\n2 6\\r\\n'], 'output': ['2\\r\\n1 1 1 2 2 1 1 1 1 1 1 1 2 1 2 1 1 1 2 1 1 1 1 \\r\\n']}, {'input': ['4 4\\r\\n4 2\\r\\n3 1\\r\\n2 3\\r\\n4 1\\r\\n'], 'output': ['1\\r\\n1 1 1 1 \\r\\n']}, {'input': ['10 44\\r\\n9 2\\r\\n3 9\\r\\n3 10\\r\\n6 8\\r\\n10 9\\r\\n2 1\\r\\n5 9\\r\\n10 1\\r\\n4 2\\r\\n3 1\\r\\n3 6\\r\\n3 7\\r\\n1 9\\r\\n1 4\\r\\n1 8\\r\\n9 7\\r\\n7 3\\r\\n1 6\\r\\n4 9\\r\\n7 5\\r\\n1 2\\r\\n4 3\\r\\n10 7\\r\\n8 1\\r\\n8 10\\r\\n9 8\\r\\n6 10\\r\\n6 5\\r\\n2 9\\r\\n9 1\\r\\n3 4\\r\\n5 7\\r\\n6 3\\r\\n2 8\\r\\n7 6\\r\\n4 5\\r\\n8 6\\r\\n2 10\\r\\n10 2\\r\\n5 8\\r\\n2 7\\r\\n8 7\\r\\n3 5\\r\\n9 6\\r\\n'], 'output': ['2\\r\\n1 2 2 2 2 2 2 2 2 2 1 2 1 1 1 1 1 1 2 1 1 2 1 2 1 1 2 1 2 2 1 2 2 1 1 1 1 1 2 2 1 1 1 1 \\r\\n']}]", "source_code": "import sys\n\ndef dfs(v, color, used):\n    used[v] = True\n    for u in graph[v]:\n        if not used[u]:\n            color[u] = color[v]\n            dfs(u, color, used)\n        elif color[u] == color[v]:\n            color[u] = (color[u] + 1) % K\n\n\ndef solve():\n    N, M = map(int, input().split())\n    graph = [[] for _ in range(N)]\n    for _ in range(M):\n        u, v = map(int, input().split())\n        u -= 1\n        v -= 1\n        graph[u].append(v)\n\n    K = 1\n    color = [0] * N\n    used = [False] * N\n    for i in range(N):\n        if not used[i]:\n            dfs(i, color, used)\n            K = max(K, max(color) + 1)\n\n    print(K)\n    for i in range(M):\n        u, v = map(int, input().split())\n        u -= 1\n        v -= 1\n        print(color[u] + 1, end=' ')\n\n\nif __name__ == '__main__':\n    solve()\n"}
{"src_uid": "22_D", "id": 162, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1900, "testcases": "[{'input': ['2\\r\\n0 2\\r\\n2 5\\r\\n'], 'output': ['1\\r\\n2 ']}, {'input': ['5\\r\\n0 3\\r\\n4 2\\r\\n4 8\\r\\n8 10\\r\\n7 7\\r\\n'], 'output': ['3\\r\\n3 7 10 ']}, {'input': ['3\\r\\n40 -83\\r\\n52 -80\\r\\n-21 -4\\r\\n'], 'output': ['1\\r\\n-4 ']}, {'input': ['4\\r\\n67 -88\\r\\n37 -62\\r\\n-26 91\\r\\n-99 -50\\r\\n'], 'output': ['2\\r\\n-50 91 ']}, {'input': ['5\\r\\n45 58\\r\\n22 6\\r\\n-32 36\\r\\n49 -37\\r\\n43 62\\r\\n'], 'output': ['2\\r\\n22 58 ']}, {'input': ['10\\r\\n47 -85\\r\\n71 40\\r\\n-87 64\\r\\n76 73\\r\\n52 -51\\r\\n-20 -57\\r\\n-14 -77\\r\\n-45 -11\\r\\n-56 -48\\r\\n81 20\\r\\n'], 'output': ['4\\r\\n-48 -11 71 76 ']}, {'input': ['35\\r\\n-47 61\\r\\n-73 -15\\r\\n9 43\\r\\n43 -49\\r\\n13 -6\\r\\n48 -65\\r\\n49 -84\\r\\n-6 76\\r\\n40 6\\r\\n-41 11\\r\\n-63 -42\\r\\n-7 -66\\r\\n47 -98\\r\\n-17 61\\r\\n79 99\\r\\n47 -98\\r\\n61 31\\r\\n85 72\\r\\n-50 -17\\r\\n-67 45\\r\\n14 -50\\r\\n-45 61\\r\\n-6 -96\\r\\n-47 -83\\r\\n56 -58\\r\\n-69 -15\\r\\n14 20\\r\\n-95 -82\\r\\n47 93\\r\\n-4 -7\\r\\n70 9\\r\\n91 -18\\r\\n-71 31\\r\\n55 -20\\r\\n81 -8\\r\\n'], 'output': ['6\\r\\n-82 -42 -4 20 61 85 ']}, {'input': ['1\\r\\n0 0\\r\\n'], 'output': ['1\\r\\n0 ']}, {'input': ['4\\r\\n1 1\\r\\n0 0\\r\\n10000 10000\\r\\n-10000 -10000\\r\\n'], 'output': ['4\\r\\n-10000 0 1 10000 ']}, {'input': ['3\\r\\n55 55\\r\\n55 55\\r\\n55 55\\r\\n'], 'output': ['1\\r\\n55 ']}, {'input': ['4\\r\\n55 55\\r\\n55 55\\r\\n55 55\\r\\n55 56\\r\\n'], 'output': ['1\\r\\n55 ']}, {'input': ['1\\r\\n-2244 5023\\r\\n'], 'output': ['1\\r\\n5023 ']}]", "source_code": "n = int(input())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\na.sort()\n\nans = []\n\nfor i in range(n):\n    if a[i][0] == a[i][1]:\n        continue\n    if a[i][0] > a[i][1]:\n        a[i][0], a[i][1] = a[i][1], a[i][0]\n    if a[i][0] in ans:\n        continue\n    if a[i][1] in ans:\n        continue\n    ans.append(a[i][0])\n    ans.append(a[i][1])\n\nans.sort()\n\nprint(len(ans) // 2)\n\nfor i in range(0, len(ans), 2):\n    print(ans[i], end ='')\nprint()\n"}
{"src_uid": "351_D", "id": 163, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2700, "testcases": "[{'input': ['5\\r\\n2 2 1 1 2\\r\\n5\\r\\n1 5\\r\\n1 1\\r\\n2 2\\r\\n1 3\\r\\n2 3\\r\\n'], 'output': ['2\\r\\n1\\r\\n1\\r\\n2\\r\\n2\\r\\n']}, {'input': ['10\\r\\n2 1 3 3 3 3 1 3 1 1\\r\\n10\\r\\n4 8\\r\\n2 10\\r\\n1 10\\r\\n4 4\\r\\n1 3\\r\\n2 4\\r\\n6 7\\r\\n1 9\\r\\n2 5\\r\\n1 1\\r\\n'], 'output': ['2\\r\\n3\\r\\n3\\r\\n1\\r\\n3\\r\\n2\\r\\n2\\r\\n3\\r\\n2\\r\\n1\\r\\n']}, {'input': ['15\\r\\n3 3 2 2 1 2 4 1 3 1 1 3 1 4 1\\r\\n15\\r\\n4 10\\r\\n8 9\\r\\n12 12\\r\\n7 9\\r\\n11 12\\r\\n1 1\\r\\n4 10\\r\\n12 13\\r\\n2 2\\r\\n3 5\\r\\n5 6\\r\\n1 1\\r\\n2 3\\r\\n2 4\\r\\n7 14\\r\\n'], 'output': ['4\\r\\n2\\r\\n1\\r\\n3\\r\\n2\\r\\n1\\r\\n4\\r\\n2\\r\\n1\\r\\n2\\r\\n2\\r\\n1\\r\\n2\\r\\n2\\r\\n3\\r\\n']}, {'input': ['20\\r\\n3 2 2 1 4 4 1 2 3 1 1 5 5 3 4 4 1 2 3 1\\r\\n20\\r\\n13 17\\r\\n2 2\\r\\n5 5\\r\\n19 20\\r\\n5 9\\r\\n10 14\\r\\n2 2\\r\\n7 15\\r\\n10 12\\r\\n16 17\\r\\n9 9\\r\\n2 3\\r\\n4 4\\r\\n1 4\\r\\n11 19\\r\\n1 2\\r\\n1 18\\r\\n3 13\\r\\n10 18\\r\\n3 9\\r\\n'], 'output': ['4\\r\\n1\\r\\n1\\r\\n2\\r\\n4\\r\\n3\\r\\n1\\r\\n5\\r\\n2\\r\\n2\\r\\n1\\r\\n1\\r\\n1\\r\\n3\\r\\n5\\r\\n2\\r\\n5\\r\\n5\\r\\n5\\r\\n4\\r\\n']}, {'input': ['25\\r\\n3 1 3 4 1 3 5 3 6 6 2 1 1 1 6 1 3 4 2 6 6 1 5 6 6\\r\\n25\\r\\n1 1\\r\\n10 12\\r\\n1 6\\r\\n1 8\\r\\n17 18\\r\\n2 20\\r\\n1 2\\r\\n1 1\\r\\n8 17\\r\\n11 19\\r\\n3 5\\r\\n17 25\\r\\n14 19\\r\\n5 12\\r\\n1 6\\r\\n1 17\\r\\n14 14\\r\\n9 13\\r\\n10 14\\r\\n18 22\\r\\n6 22\\r\\n10 11\\r\\n13 20\\r\\n3 4\\r\\n17 21\\r\\n'], 'output': ['1\\r\\n3\\r\\n3\\r\\n4\\r\\n2\\r\\n6\\r\\n2\\r\\n1\\r\\n4\\r\\n5\\r\\n3\\r\\n6\\r\\n5\\r\\n5\\r\\n3\\r\\n6\\r\\n1\\r\\n3\\r\\n3\\r\\n4\\r\\n6\\r\\n2\\r\\n5\\r\\n2\\r\\n4\\r\\n']}, {'input': ['30\\r\\n5 2 2 6 5 7 1 4 7 4 7 4 5 5 2 5 3 6 7 4 1 5 4 1 2 1 1 7 2 1\\r\\n30\\r\\n1 23\\r\\n19 23\\r\\n10 14\\r\\n8 22\\r\\n6 16\\r\\n4 13\\r\\n13 25\\r\\n9 14\\r\\n16 16\\r\\n7 7\\r\\n11 11\\r\\n17 30\\r\\n17 29\\r\\n8 9\\r\\n9 9\\r\\n1 1\\r\\n1 11\\r\\n14 17\\r\\n8 25\\r\\n6 6\\r\\n16 26\\r\\n7 24\\r\\n10 24\\r\\n1 16\\r\\n2 13\\r\\n14 22\\r\\n5 14\\r\\n14 19\\r\\n8 23\\r\\n18 19\\r\\n'], 'output': ['7\\r\\n4\\r\\n3\\r\\n7\\r\\n5\\r\\n5\\r\\n7\\r\\n3\\r\\n1\\r\\n1\\r\\n1\\r\\n7\\r\\n7\\r\\n2\\r\\n1\\r\\n1\\r\\n6\\r\\n3\\r\\n7\\r\\n1\\r\\n7\\r\\n7\\r\\n7\\r\\n6\\r\\n6\\r\\n7\\r\\n4\\r\\n5\\r\\n7\\r\\n2\\r\\n']}, {'input': ['35\\r\\n8 6 1 3 8 8 1 6 5 6 5 2 8 2 3 5 5 2 1 6 5 8 1 4 5 1 7 8 6 5 1 3 6 7 6\\r\\n35\\r\\n18 32\\r\\n13 23\\r\\n20 22\\r\\n11 15\\r\\n8 8\\r\\n2 13\\r\\n2 3\\r\\n8 14\\r\\n17 26\\r\\n7 14\\r\\n16 32\\r\\n15 16\\r\\n14 35\\r\\n2 14\\r\\n15 20\\r\\n10 14\\r\\n4 19\\r\\n13 17\\r\\n9 13\\r\\n4 4\\r\\n18 24\\r\\n9 18\\r\\n8 8\\r\\n2 17\\r\\n4 6\\r\\n3 16\\r\\n30 31\\r\\n1 35\\r\\n2 12\\r\\n22 24\\r\\n17 17\\r\\n21 27\\r\\n3 5\\r\\n1 29\\r\\n12 12\\r\\n'], 'output': ['8\\r\\n6\\r\\n3\\r\\n4\\r\\n1\\r\\n6\\r\\n2\\r\\n4\\r\\n6\\r\\n5\\r\\n8\\r\\n2\\r\\n8\\r\\n6\\r\\n5\\r\\n4\\r\\n6\\r\\n4\\r\\n4\\r\\n1\\r\\n6\\r\\n5\\r\\n1\\r\\n6\\r\\n2\\r\\n6\\r\\n2\\r\\n8\\r\\n6\\r\\n3\\r\\n1\\r\\n5\\r\\n3\\r\\n8\\r\\n1\\r\\n']}, {'input': ['40\\r\\n7 5 2 8 5 4 1 5 6 7 7 9 9 2 1 6 2 5 4 7 6 1 6 7 5 9 4 8 4 6 8 1 7 2 3 7 4 5 2 9\\r\\n40\\r\\n25 36\\r\\n21 39\\r\\n1 26\\r\\n2 21\\r\\n11 31\\r\\n12 33\\r\\n4 4\\r\\n2 8\\r\\n6 6\\r\\n2 9\\r\\n2 24\\r\\n23 23\\r\\n25 39\\r\\n3 11\\r\\n10 21\\r\\n11 24\\r\\n39 39\\r\\n25 29\\r\\n3 7\\r\\n1 7\\r\\n1 2\\r\\n15 36\\r\\n5 34\\r\\n31 33\\r\\n6 30\\r\\n8 13\\r\\n10 37\\r\\n33 35\\r\\n14 39\\r\\n2 12\\r\\n11 12\\r\\n6 11\\r\\n33 34\\r\\n17 23\\r\\n17 35\\r\\n4 5\\r\\n17 29\\r\\n10 19\\r\\n2 25\\r\\n12 30\\r\\n'], 'output': ['9\\r\\n9\\r\\n8\\r\\n8\\r\\n8\\r\\n8\\r\\n1\\r\\n5\\r\\n1\\r\\n6\\r\\n8\\r\\n1\\r\\n9\\r\\n7\\r\\n7\\r\\n7\\r\\n1\\r\\n4\\r\\n5\\r\\n6\\r\\n2\\r\\n9\\r\\n8\\r\\n3\\r\\n8\\r\\n4\\r\\n9\\r\\n3\\r\\n9\\r\\n8\\r\\n2\\r\\n5\\r\\n2\\r\\n6\\r\\n9\\r\\n2\\r\\n8\\r\\n7\\r\\n8\\r\\n8\\r\\n']}, {'input': ['45\\r\\n10 9 3 4 5 1 3 4 2 10 9 10 9 10 2 4 6 2 5 3 6 4 9 10 3 9 8 1 2 5 9 2 10 4 6 10 8 10 9 1 2 5 8 6 6\\r\\n45\\r\\n27 31\\r\\n7 13\\r\\n1 10\\r\\n6 22\\r\\n14 36\\r\\n17 18\\r\\n26 44\\r\\n27 34\\r\\n14 39\\r\\n29 35\\r\\n33 44\\r\\n29 42\\r\\n7 10\\r\\n2 2\\r\\n12 30\\r\\n1 2\\r\\n2 32\\r\\n1 1\\r\\n14 42\\r\\n5 8\\r\\n16 36\\r\\n1 37\\r\\n17 23\\r\\n6 7\\r\\n16 25\\r\\n1 22\\r\\n40 44\\r\\n15 27\\r\\n12 28\\r\\n19 20\\r\\n12 14\\r\\n1 42\\r\\n6 19\\r\\n7 13\\r\\n27 38\\r\\n7 8\\r\\n29 38\\r\\n6 11\\r\\n4 17\\r\\n1 34\\r\\n4 5\\r\\n9 16\\r\\n4 8\\r\\n11 42\\r\\n9 20\\r\\n'], 'output': ['5\\r\\n5\\r\\n7\\r\\n8\\r\\n9\\r\\n2\\r\\n8\\r\\n7\\r\\n9\\r\\n6\\r\\n8\\r\\n8\\r\\n4\\r\\n1\\r\\n9\\r\\n2\\r\\n9\\r\\n1\\r\\n9\\r\\n4\\r\\n9\\r\\n9\\r\\n6\\r\\n2\\r\\n7\\r\\n8\\r\\n5\\r\\n8\\r\\n9\\r\\n2\\r\\n2\\r\\n9\\r\\n8\\r\\n5\\r\\n8\\r\\n2\\r\\n7\\r\\n6\\r\\n8\\r\\n9\\r\\n2\\r\\n4\\r\\n4\\r\\n9\\r\\n7\\r\\n']}, {'input': ['50\\r\\n1 4 10 6 8 5 3 7 3 2 9 4 5 11 11 5 11 10 2 1 2 4 1 2 10 4 2 1 3 8 3 3 5 11 7 7 9 6 6 3 6 10 5 1 11 10 2 1 4 9\\r\\n50\\r\\n26 27\\r\\n25 50\\r\\n2 44\\r\\n6 20\\r\\n1 17\\r\\n9 15\\r\\n6 10\\r\\n13 40\\r\\n4 9\\r\\n2 11\\r\\n4 11\\r\\n7 46\\r\\n2 3\\r\\n16 23\\r\\n2 28\\r\\n24 45\\r\\n25 32\\r\\n25 29\\r\\n8 9\\r\\n5 10\\r\\n6 20\\r\\n12 17\\r\\n19 38\\r\\n12 48\\r\\n8 32\\r\\n11 24\\r\\n13 21\\r\\n6 41\\r\\n16 28\\r\\n9 28\\r\\n42 47\\r\\n8 27\\r\\n1 4\\r\\n5 9\\r\\n2 44\\r\\n25 29\\r\\n25 43\\r\\n2 16\\r\\n33 35\\r\\n2 2\\r\\n7 21\\r\\n20 41\\r\\n20 30\\r\\n23 43\\r\\n20 27\\r\\n2 2\\r\\n1 34\\r\\n21 23\\r\\n19 19\\r\\n39 39\\r\\n'], 'output': ['2\\r\\n11\\r\\n11\\r\\n9\\r\\n11\\r\\n6\\r\\n4\\r\\n11\\r\\n5\\r\\n9\\r\\n7\\r\\n11\\r\\n2\\r\\n6\\r\\n11\\r\\n11\\r\\n6\\r\\n5\\r\\n2\\r\\n5\\r\\n9\\r\\n3\\r\\n11\\r\\n11\\r\\n10\\r\\n7\\r\\n5\\r\\n11\\r\\n6\\r\\n8\\r\\n5\\r\\n9\\r\\n4\\r\\n4\\r\\n11\\r\\n5\\r\\n11\\r\\n10\\r\\n3\\r\\n1\\r\\n9\\r\\n11\\r\\n6\\r\\n11\\r\\n4\\r\\n1\\r\\n11\\r\\n3\\r\\n1\\r\\n1\\r\\n']}, {'input': ['10\\r\\n1 2 3 1 2 3 1 1 1 100000\\r\\n5\\r\\n1 10\\r\\n2 9\\r\\n3 8\\r\\n1 7\\r\\n1 3\\r\\n'], 'output': ['4\\r\\n3\\r\\n3\\r\\n3\\r\\n3\\r\\n']}, {'input': ['1\\r\\n1\\r\\n1\\r\\n1 1\\r\\n'], 'output': ['1\\r\\n']}, {'input': ['1\\r\\n100000\\r\\n5\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n1 1\\r\\n'], 'output': ['1\\r\\n1\\r\\n1\\r\\n1\\r\\n1\\r\\n']}]", "source_code": "import sys\ninput = sys.stdin.readline\n\nm = int(input())\nb = list(map(int, input().split()))\n\nq = int(input())\n\nb_dict = {}\nfor i in range(m):\n    b_dict[b[i]] = i\n\nans = []\nfor _ in range(q):\n    l, r = map(int, input().split())\n    l = b_dict[l]\n    r = b_dict[r]\n    ans.append(str(r - l + 1))\n\nprint('\\n'.join(ans))\n"}
{"src_uid": "40002052843ca0357dbd3158b16d59f4", "id": 164, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2700, "testcases": "[{'input': '3\\r\\n2 1 4\\r\\n', 'output': ['5']}, {'input': '4\\r\\n3 1 4 4\\r\\n', 'output': ['6']}, {'input': '4\\r\\n3 1 4 1\\r\\n', 'output': ['6']}, {'input': '5\\r\\n3 1 4 1 5\\r\\n', 'output': ['11']}, {'input': '11\\r\\n5000 5000 5000 5000 5000 5000 0 1 0 1 0\\r\\n', 'output': ['77835']}, {'input': '1\\r\\n0\\r\\n', 'output': ['0']}, {'input': '1\\r\\n1\\r\\n', 'output': ['0']}, {'input': '4\\r\\n0 1 1 0\\r\\n', 'output': ['0']}, {'input': '17\\r\\n1 9 2 8 4 5 7 3 8 4 6 2 8 4 1 0 5\\r\\n', 'output': ['87']}, {'input': '4\\r\\n57 918 827 953\\r\\n', 'output': ['7835']}, {'input': '51\\r\\n17 26 14 0 41 18 40 14 29 25 5 23 46 20 8 14 12 27 8 38 9 42 17 16 31 2 5 45 16 35 37 1 46 27 27 16 20 38 11 48 11 3 23 40 10 46 31 47 32 49 17\\r\\n', 'output': ['2366']}, {'input': '95\\r\\n28 12 46 4 24 37 23 19 7 22 29 34 10 10 9 11 9 17 26 23 8 42 12 31 33 39 25 17 1 41 30 21 11 26 14 43 19 24 32 14 3 42 29 47 40 16 27 43 33 28 6 25 40 4 0 21 5 36 2 3 35 38 49 41 32 34 0 27 30 44 45 18 2 6 1 50 13 22 20 20 7 5 16 18 13 15 15 36 39 37 31 35 48 38 8\\r\\n', 'output': ['4286']}, {'input': '49\\r\\n27 12 48 48 9 10 29 50 48 48 48 48 11 14 18 27 48 48 48 48 1 48 33 48 27 48 48 48 12 16 48 48 22 48 48 36 31 32 31 48 50 43 20 48 48 48 48 48 16\\r\\n', 'output': ['3484']}, {'input': '17\\r\\n12 12 5 1 3 12 4 2 12 12 12 12 6 12 7 12 0\\r\\n', 'output': ['179']}, {'input': '70\\r\\n50 0 50 0 0 0 0 0 0 50 50 50 50 0 50 50 0 50 50 0 0 0 50 50 0 0 50 0 50 0 50 0 0 50 0 0 0 0 50 50 50 50 0 0 0 0 0 0 0 0 50 0 50 50 0 50 0 0 0 0 50 0 50 0 0 50 0 50 0 0\\r\\n', 'output': ['3024']}, {'input': '295060\\r\\n38 23 17 20 28 38 38 28 32 7 20 0 14 31 41 16 46 39 41 8 40 14 33 36 11 2 40 8 19 36 13 29 4 22 4 12 17 38 50 35 10 40 21 7 21 2 27 34 30 40 22 37 20 5 12 42 33 16 22 45 14 26 16 27 7 24 48 1 15 40 0 27 47 25 29 42 23 23 16 17 20 1 6 38 12 0 19 34 20 43 44 8 47 23 17 5 38 40 43 46 12 29 41 10 2 4 23 22 24 45 42 39 11 19 0 4 7 1 0 13 42 3 42 49 43 39 22 36 47 17 0 35 39 15 42 16 6 20 17 43 17 4 4 30 14 45 3 7 47 12 10 41 16 45 11 5 13 37 49 36 44 24 38 3 48 26 5 10 26 32 4 35 13 40 9 42 42 40 36 22 ...', 'output': ['14408680']}, {'input': '68484\\r\\n45 1 16 1 50 16 29 39 50 46 28 5 11 28 19 5 41 23 15 30 20 7 18 6 30 27 35 31 33 13 3 1 12 11 46 28 42 17 13 5 43 36 21 45 1 38 39 36 29 10 42 6 26 37 26 3 36 0 45 27 2 9 42 33 45 39 21 19 48 14 10 14 20 12 47 38 29 32 37 17 50 10 29 6 5 48 37 48 24 26 36 7 4 26 12 42 40 35 32 22 17 35 9 47 11 13 10 10 4 13 32 23 30 26 22 20 20 0 49 38 33 16 46 50 21 40 2 15 13 26 16 3 22 47 37 35 23 34 22 40 22 12 42 13 39 25 46 25 47 12 1 43 25 1 32 25 26 18 8 50 27 45 45 9 42 25 12 27 48 6 15 2 14 41 3 7 6 0 29 2...', 'output': ['3345881']}, {'input': '1000000\\r\\n3722 452 4276 30 137 3139 4268 4696 1846 2667 4961 3074 4236 4685 4087 2731 3444 4322 4932 2801 3270 3 1629 4477 3073 4958 3274 760 978 4270 3836 1343 4543 1770 2995 2073 3085 1190 4630 635 3582 1483 1953 990 4430 1546 1787 916 3572 2781 189 1832 2275 3122 714 931 4259 2670 241 3550 387 1032 3317 3802 1423 160 1717 1783 3911 4966 1947 4002 1905 2708 3798 4609 2264 399 4637 705 19 1194 1688 1682 1543 3335 521 4343 3036 3527 398 3205 444 1392 1226 3770 3775 4669 3394 3907 3857 4711 3696 2203 395 222...', 'output': ['7607420444']}, {'input': '1000000\\r\\n522 4027 3242 3953 143 2524 1807 4590 574 4082 4545 59 1875 3013 2181 906 2440 892 727 1900 57 480 1275 1115 4406 2958 4632 3920 1901 1611 1826 3199 2393 1268 1140 1549 3367 3625 4123 4996 4480 3553 1483 1236 3965 4973 4534 4546 2637 1999 1073 929 4043 1343 1310 850 188 1005 4228 2198 388 1001 2549 4137 212 3001 3231 1987 3806 2926 4746 355 1552 431 635 3372 1820 396 1425 3998 1362 3213 2589 4102 2081 761 438 409 902 4512 1274 520 1789 3499 414 2074 542 1784 1706 2436 199 1508 4900 1968 527 1815 3...', 'output': ['7605550222']}, {'input': '1000000\\r\\n2976 2807 1350 3599 2725 1350 2266 3745 1350 1350 1607 4715 1803 1350 1350 2355 1350 1350 1350 1350 1350 1350 3814 1008 2634 4272 153 1350 2335 1350 1350 2952 2395 1187 2912 1392 1350 208 1350 1350 2711 1350 4116 195 130 3661 2624 1350 1350 3561 1350 1350 1350 1350 1350 1350 1350 3830 4407 1056 1350 1350 3003 1212 1350 2702 1469 1483 1025 3345 1350 4493 1350 1350 1350 3324 1350 1350 1693 2153 1350 4035 1772 1350 1350 1350 1350 1469 2034 3780 1920 1050 1350 1350 1350 1921 4707 3667 1350 1350 1887 1...', 'output': ['5780430738']}, {'input': '1000000\\r\\n935 1374 1374 1834 1431 4393 1520 1678 1374 917 4059 1374 1374 1374 4957 1374 808 1374 1374 1374 1374 122 1374 1374 1374 3800 396 1374 1374 1374 1374 878 1374 648 1374 1374 1374 1374 2763 845 1374 1374 1374 1122 1374 1374 1374 1374 1374 1374 1374 1374 4696 1915 3392 1374 3781 1374 3861 4681 1864 1374 1374 2556 1978 1374 4166 1374 4140 1374 1374 4675 1436 1374 3101 1374 1374 83 1374 1374 4251 143 1374 4060 2303 1374 341 1374 1374 1374 1374 1374 269 1374 4575 1925 1374 1374 1374 3286 1374 3996 1374 ...', 'output': ['5811523118']}, {'input': '1000000\\r\\n0 0 0 0 0 0 0 0 0 0 5000 5000 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 5000 0 0 0 0 0 0 0 0 0 0 5000 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 5000 0 0 5000 0 0 0 0 0 0 0 0 0 5000 0 5000 5000 0 0 5000 0 5000 0 0 5000 0 0 0 0 5000 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 5000 0 0 0 0 0 0 0 0 0 0 0 5000 5000 0 0 0 0 0 5000 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 5000 0 0 0 0 0 0 0 5000 0 0...', 'output': ['1950296028']}, {'input': '1000000\\r\\n5000 0 5000 0 0 0 0 0 5000 0 0 5000 0 5000 0 0 0 5000 0 0 0 0 0 0 0 0 5000 0 0 5000 0 0 0 0 0 5000 0 0 5000 0 0 0 0 5000 5000 5000 0 0 5000 0 0 0 5000 5000 0 0 0 5000 5000 0 0 0 0 0 5000 0 5000 0 0 0 0 0 5000 5000 0 5000 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 5000 0 0 5000 0 0 0 0 5000 0 0 0 0 0 5000 5000 0 0 5000 0 0 0 0 0 0 0 0 0 5000 0 5000 5000 0 0 0 0 0 5000 5000 5000 5000 0 0 0 0 0 0 0 5000 5000 0 0 0 0 0 0 5000 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 5000 0 0 0 0 5000 5000 0 5000 ...', 'output': ['3888512064']}, {'input': '1000000\\r\\noutput': ['7779561549']}, {'input': '1000000\\r\\noutput': ['3888449796']}, {'input': '1000000\\r\\noutput': ['1947260463']}, {'input': '1000000\\r\\noutput': ['0']}, {'input': '13\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 50\\r\\n', 'output': ['108']}, {'input': '45\\r\\n50 0 0 0 0 0 0 0 0 50 0 0 50 0 0 50 50 0 0 0 0 0 50 0 0 0 0 0 50 50 0 0 0 0 50 0 50 0 50 0 0 0 0 0 50\\r\\n', 'output': ['1296']}, {'input': '24\\r\\n50 0 50 50 50 0 50 50 0 50 50 50 50 50 0 50 50 0 50 50 50 50 50 50\\r\\n', 'output': ['540']}, {'input': '68\\r\\n50 50 50 50 50 50 50 50 0 0 50 50 50 50 50 50 50 50 50 50 50 50 0 50 50 50 50 50 50 50 50 50 50 50 0 50 50 50 50 50 50 50 50 50 50 50 50 50 0 50 50 0 0 50 50 50 50 50 50 50 50 0 50 50 50 50 50 50\\r\\n', 'output': ['864']}, {'input': '75\\r\\n2597 1818 260 4655 4175 2874 2987 4569 2029 4314 444 2276 4937 1209 1797 4965 3526 275 3535 2198 4402 2144 1369 13 4453 1655 4456 711 3563 1650 3997 885 782 147 2426 974 2917 2100 4549 2465 3015 3485 3238 4086 171 3934 1903 133 2278 2573 688 551 872 459 2044 1401 2429 4933 3747 587 2781 4173 4651 4012 1407 2352 1461 566 2062 4599 1430 2269 3914 1820 4728\\r\\n', 'output': ['565559']}, {'input': '29\\r\\n8 27 14 21 6 20 2 11 3 19 10 16 0 25 18 4 23 17 15 26 28 1 13 5 9 22 12 7 24\\r\\n', 'output': ['692']}, {'input': '87\\r\\n1120 1120 1120 872 1120 731 3583 2815 4019 1291 4568 973 1120 1705 1120 822 203 1120 1120 1120 1120 4196 3166 4589 3030 1120 1120 1120 711 1120 500 1120 1120 3551 1120 1120 1120 1700 1120 1120 2319 4554 1120 1312 1120 1120 4176 1120 1120 3661 1120 1120 1120 1120 142 63 4125 1120 4698 3469 1829 567 1120 1120 1083 486 1120 1120 1120 1120 3763 1120 247 4496 454 1120 1120 1532 1120 4142 352 1120 359 2880 1120 1120 4494\\r\\n', 'output': ['438276']}, {'input': '27\\r\\n9 1144 1144 2 8 1144 12 0 1144 1144 7 3 1144 1144 11 10 1 1144 1144 5 1144 4 1144 1144 1144 1144 6\\r\\n', 'output': ['43222']}, {'input': '27\\r\\n0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 5000 0 0 0 5000\\r\\n', 'output': ['62268']}, {'input': '59\\r\\n0 0 0 5000 0 0 0 5000 5000 0 5000 0 0 0 5000 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 5000 0 5000 0 5000 0 0 5000 0 5000 0 0 0 0 0 0 5000 0 0 0 0 5000 0 0 0 5000 0 0 0 5000\\r\\n', 'output': ['233505']}, {'input': '80\\r\\n0 0 0 0 5000 0 0 5000 5000 5000 0 5000 0 5000 5000 0 0 0 0 5000 5000 0 0 5000 0 5000 5000 5000 0 5000 0 5000 5000 5000 0 0 5000 0 0 5000 5000 0 0 5000 0 5000 5000 5000 0 0 5000 5000 5000 0 0 5000 0 0 5000 0 5000 5000 0 5000 0 5000 0 5000 0 5000 0 0 0 0 5000 5000 5000 0 0 0\\r\\n', 'output': ['591546']}, {'input': '20\\r\\n0 5000 5000 5000 5000 5000 0 5000 5000 0 5000 5000 5000 0 5000 5000 5000 5000 0 5000\\r\\n', 'output': ['77835']}, {'input': '78\\r\\n0 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 0 5000 5000 5000 5000 5000 5000 0 0 5000 5000 5000 5000 5000 0 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 5000 0 5000 5000 0 5000 0 5000 5000 5000 5000 0 5000 5000 5000 5000 5000 5000 5000 0 5000 5000 0 0 0 5000 5000 5000 5000 0 5000 5000 5000 5000 5000 5000 0 5000 5000 0 5000\\r\\n', 'output': ['249072']}, {'input': '3241\\r\\n20 31 49 20 24 6 33 50 24 30 6 50 45 34 43 40 35 10 27 4 43 19 42 16 20 49 20 32 18 41 36 32 26 37 9 21 29 16 22 27 9 48 47 29 30 15 43 24 26 20 3 11 4 35 12 42 48 11 44 46 31 44 20 47 0 7 7 18 47 3 18 8 4 9 2 48 28 22 32 4 24 37 32 26 49 12 4 10 44 50 41 23 5 26 1 5 34 4 1 13 39 26 24 25 25 9 37 5 22 15 12 49 48 2 28 37 42 44 45 30 4 41 43 7 44 39 9 21 47 41 7 17 18 14 19 13 35 8 36 39 1 18 47 25 48 22 44 41 12 17 5 5 44 48 9 4 49 37 34 9 13 37 21 40 45 13 3 32 22 12 25 48 24 6 28 9 41 2 45 28 31 9 ...', 'output': ['160831']}, {'input': '3569\\r\\n11 34 14 46 1 12 5 13 5 46 35 8 36 28 7 16 16 47 29 45 27 36 47 22 2 33 5 38 23 34 24 48 15 27 20 14 31 8 18 15 44 10 47 28 17 36 34 48 10 48 29 35 31 15 19 17 26 42 15 45 21 16 9 31 30 32 50 12 48 37 46 2 10 32 36 8 38 25 20 3 26 7 35 33 38 6 16 30 42 38 47 16 20 23 36 30 20 24 38 5 1 16 40 31 14 6 10 27 2 4 32 1 12 6 43 43 34 32 19 9 47 34 22 37 9 50 33 18 45 42 20 19 49 20 49 25 3 41 36 46 41 21 21 26 43 50 37 23 11 34 32 3 32 42 35 6 18 45 47 16 19 33 2 34 35 44 11 47 13 24 10 31 13 37 48 42 22 3...', 'output': ['174332']}, {'input': '5489\\r\\n2 18 8 33 36 26 20 18 26 0 26 42 26 5 10 26 26 26 26 2 26 0 28 26 26 26 26 26 28 30 25 24 26 2 26 26 39 26 26 26 26 31 26 26 26 46 26 5 26 26 45 16 26 7 26 26 26 26 49 26 26 1 0 8 26 19 3 18 8 38 26 14 40 31 44 26 26 26 26 26 30 42 26 10 26 18 29 32 8 29 3 26 26 26 6 26 26 6 26 26 26 34 26 26 4 10 0 47 49 26 26 26 1 18 29 12 23 2 39 50 4 17 26 29 8 26 13 35 26 16 42 30 26 26 46 6 42 26 26 26 5 24 26 26 46 29 26 35 26 26 26 23 26 26 26 26 26 26 26 26 26 26 26 26 50 33 26 31 26 26 47 26 26 26 26 6 26 2...', 'output': ['260842']}, {'input': '5817\\r\\n41 18 41 41 25 41 41 39 1 6 41 40 41 41 41 41 0 41 41 41 41 17 41 41 41 39 41 12 41 0 41 36 40 41 41 41 41 11 41 27 13 41 29 41 22 41 41 33 14 19 18 41 41 32 41 5 41 2 34 13 47 41 41 41 41 45 18 41 43 42 41 12 9 41 41 41 35 10 41 41 41 41 44 41 41 30 41 7 25 41 46 42 41 12 41 41 48 13 23 41 17 41 44 41 1 41 24 3 41 41 41 26 41 41 6 7 41 0 10 2 16 29 41 34 41 39 36 41 3 41 41 36 2 24 35 38 36 37 41 41 38 8 42 36 0 35 37 2 41 28 41 38 36 13 41 41 16 41 31 43 1 38 19 23 41 41 41 17 9 41 25 41 45 19 10 4...', 'output': ['377254']}, {'input': '2871\\r\\noutput': ['37260']}, {'input': '2543\\r\\n0 0 0 0 50 50 0 0 0 0 0 0 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50 0 0 0 0 50 0 0 0 50 0 0 0 0 0 0 0 0 50 0 0 0 0 0 0 50 0 50 0 0 50 0 50 50 0 0 0 0 0 0 50 50 0 0 0 50 50 0 50 0 0 0 50 50 0 0 0 0 50 0 0 0 0 0 0 0 0 50 0 0 0 50 0 50 0 0 50 0 50 0 0 0 50 0 0 50 50 0 0 0 0 50 0 0 50 0 0 0 0 0 50 0 50 0 0 0 0 0 0 0 0 0 0 50 50 50 0 0 0 0 0 0 0 0 0 50 0 0 0 0 0 50 0 0 0 0 0 0 50 50 0 0 50 0 0 50 0 0 0 0 0 0 0 0 0 50 50 0 0 0 0 50 0 0 50 0 0 50 50 0 0 0 50 50 0 0 50 0 0 0 0 0 0 0 0 0 50 0 50 0 0 0 0 0 0 0 0 0 0 0...', 'output': ['66744']}, {'input': '6658\\r\\n50 50 50 0 0 50 0 0 50 0 0 50 50 0 50 50 0 0 50 50 0 50 50 50 50 0 50 0 0 50 50 0 50 0 0 0 0 0 50 0 0 0 50 0 50 50 50 50 0 50 0 50 50 50 50 50 50 50 0 0 50 0 0 50 0 50 0 0 50 50 50 0 0 0 0 0 50 0 0 0 50 0 0 0 50 0 50 0 50 50 50 50 0 0 50 50 0 50 50 0 0 0 50 50 0 0 50 50 0 0 0 50 0 0 50 50 50 50 50 0 0 0 0 50 50 50 50 0 0 0 0 0 0 0 50 0 50 50 50 0 0 0 50 0 50 50 50 50 50 0 0 50 50 0 0 0 0 50 0 50 0 50 50 0 0 0 50 50 0 50 50 50 0 50 0 0 0 0 0 50 50 50 0 50 0 0 0 0 0 0 50 50 0 0 50 50 0 50 50 0 50 50 0 ...', 'output': ['357156']}, {'input': '7782\\r\\n50 50 0 0 0 50 50 50 50 50 50 50 0 50 50 0 50 50 50 50 50 50 0 50 50 50 0 50 50 0 0 50 50 0 0 50 50 50 50 50 0 50 50 0 50 50 50 50 50 50 50 0 50 50 50 0 0 50 50 0 50 0 50 0 0 50 50 0 50 0 50 50 50 0 50 50 50 50 50 50 0 50 50 50 0 50 0 50 50 0 0 50 50 0 0 50 50 50 50 50 0 50 50 50 0 0 50 50 50 0 50 0 50 0 0 50 0 50 50 50 50 50 50 50 50 50 50 50 50 50 50 0 50 0 50 50 50 0 50 50 50 50 0 50 0 50 50 50 50 50 50 50 0 50 50 50 50 50 50 50 50 50 0 0 0 50 0 0 50 50 50 50 50 50 50 50 50 50 50 0 50 50 50 50 50 ...', 'output': ['202284']}, {'input': '8110\\r\\noutput': ['109080']}, {'input': '4463\\r\\n2612 1495 2859 1941 1446 2716 4690 4357 2841 4862 2243 3269 4454 995 3373 2249 4637 3365 2276 1330 3211 572 826 4368 2894 905 137 718 2081 3137 3718 4107 3420 1398 193 1255 504 325 879 3991 3579 4223 315 1854 418 1143 1822 4198 2589 1918 4633 1210 86 52 336 3709 2138 838 3815 866 595 3296 4810 699 234 2559 4523 349 3190 1770 267 987 489 2936 4000 907 4032 1122 293 1486 3054 4489 412 4844 3924 1750 1249 300 1593 2535 1028 1469 4747 4522 3000 1326 4214 2544 789 3632 2556 4190 2426 1185 2402 1880 3382 7...', 'output': ['33446396']}, {'input': '5587\\r\\n2623 467 1074 276 33 2358 829 2301 820 160 398 3363 4748 2942 4704 2516 1274 4663 634 4071 4825 143 2912 2888 2968 3925 3589 3793 3172 3541 3494 75 4914 342 2901 1959 45 4692 3580 1458 4080 3297 1947 2236 127 3280 3318 4024 1199 2520 4506 3727 4205 2762 4291 235 3535 2536 2526 2609 4920 2257 3986 2082 1471 2106 311 4015 3822 455 3335 2263 616 1187 464 390 1366 3124 4893 1719 4779 1197 2097 3292 1653 33 504 1596 1158 3852 3262 4875 428 854 1140 2848 3166 2498 1219 3806 556 4607 3368 421 1312 4387 4448...', 'output': ['38501618']}, {'input': '5915\\r\\n3291 884 4366 156 3584 3291 2124 2353 3291 3291 123 3989 805 3291 3291 3160 1562 3291 793 2707 3291 3291 3291 1504 3291 3291 891 3291 3291 3291 582 3291 3291 3291 3291 2333 715 4753 3291 3291 4111 4457 4577 3793 3291 3291 3291 1652 1916 3291 3882 251 912 4595 577 1650 3291 3291 3291 143 3506 1658 1944 3291 3291 3673 3291 3291 3291 646 3575 4523 3291 434 3291 1526 3291 3291 3853 4708 2083 3291 3291 2560 2032 825 3291 1770 3291 3291 2960 3291 1517 795 3291 3235 3601 2124 1798 3291 3291 1093 3291 3291 3...', 'output': ['51854645']}, {'input': '7039\\r\\n1790 834 1882 1790 1790 2803 2541 1790 3268 24 922 1790 1790 1790 2078 1790 939 1790 2717 1790 2404 1790 1790 1790 1480 1867 2257 3412 1790 1812 1790 1790 1790 3469 1790 2214 679 1919 3173 468 1790 1790 1790 2321 3045 1790 1790 1790 1329 1790 1790 1790 1790 1730 541 3140 1790 264 1604 2703 1790 1790 1790 2166 1790 1790 1790 1790 1790 949 1790 3427 1217 519 1790 1916 2692 1790 1199 2023 3315 1790 2503 1790 302 1790 1790 1790 1790 1790 2009 1790 1203 3040 1790 2836 1869 1790 1790 2613 1790 1790 2898 15...', 'output': ['37192065']}, {'input': '7716\\r\\n0 0 5000 0 0 0 0 0 0 0 5000 0 0 0 5000 0 0 0 0 0 5000 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 5000 0 5000 0 0 5000 0 0 0 0 0 0 5000 5000 5000 0 0 0 5000 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 5000 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 5000 0 0 0 5000 0 0 0 0 5000 5000 0 5000 0 0 0 0 0 0 0 0 0 5000 0 0 5000 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 5000 0 0 5000 0 0 0 5000 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['15317928']}, {'input': '6592\\r\\n0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 5000 0 5000 0 0 0 5000 5000 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 5000 0 0 0 5000 0 0 0 0 0 5000 5000 0 0 0 0 5000 0 0 5000 5000 0 0 5000 0 5000 0 0 0 5000 0 5000 0 0 0 0 0 5000 0 5000 0 0 5000 5000 0 0 0 0 0 0 0 0 5000 5000 5000 0 0 0 0 0 5000 0 0 0 0 5000 0 0 5000 0 0 0 5000 0 0 5000 5000 0 5000 0 0 0 0 5000 0 0 5000 0 0 0 0 5000 0 0 0 0 0 5000 5000 0 0 5000 0 0 0 5000 0 5000 0 0 5000 0 0 0 0 0 0 5000 0 0 0 5000 0 5000 5000 0 5000 5000 0 0 0 0 5000...', 'output': ['26993178']}, {'input': '6927\\r\\n5000 0 0 5000 5000 0 0 0 5000 5000 5000 0 0 0 0 5000 0 5000 5000 0 0 5000 5000 5000 0 5000 0 5000 0 0 5000 0 0 0 0 0 0 0 5000 0 5000 0 0 0 5000 5000 0 0 0 0 5000 5000 0 5000 5000 0 0 5000 5000 5000 0 0 0 5000 0 5000 5000 5000 0 5000 5000 0 0 5000 5000 0 0 0 5000 0 0 0 5000 0 0 5000 5000 0 5000 5000 5000 0 0 0 5000 5000 0 0 0 5000 0 0 5000 0 0 0 0 0 0 0 0 5000 0 0 5000 5000 0 0 0 0 5000 0 5000 5000 0 5000 0 0 5000 0 5000 0 5000 0 0 5000 5000 0 5000 5000 0 5000 0 5000 5000 0 5000 5000 5000 5000 0 0 500...', 'output': ['53675016']}, {'input': '8051\\r\\noutput': ['31865649']}, {'input': '8379\\r\\noutput': ['16516587']}, {'input': '831909\\r\\n17 49 28 4 26 17 17 17 34 17 3 18 17 0 28 17 17 45 17 17 17 7 13 17 17 17 17 17 17 17 17 17 19 0 17 43 17 17 17 17 43 17 17 17 17 6 36 17 27 19 47 17 44 0 17 17 20 24 17 17 17 32 15 17 17 25 30 17 17 17 18 3 47 17 17 45 17 17 20 40 3 17 29 17 17 17 17 40 17 17 17 17 31 17 4 47 24 17 19 17 39 17 37 17 47 13 17 3 17 17 20 17 17 48 17 49 34 18 17 13 20 30 19 17 17 17 17 17 12 47 22 42 29 17 20 17 17 17 32 7 7 17 17 17 17 17 46 32 20 17 5 17 17 50 17 17 38 21 17 36 37 18 17 38 17 11 9 8 17 17 48 29 25 ...', 'output': ['31683596']}, {'input': '258037\\r\\n33 8 33 0 33 33 33 48 33 16 40 33 38 23 33 33 33 33 33 4 46 33 17 17 33 6 33 27 33 19 5 33 10 33 27 33 48 12 33 33 33 20 23 33 33 28 11 33 33 33 28 33 50 33 33 33 33 5 33 33 33 33 35 47 33 33 33 3 13 11 33 17 33 33 33 38 33 33 44 3 33 33 33 31 33 33 33 33 33 33 18 8 29 10 33 33 33 33 15 1 37 7 7 33 17 5 33 31 38 33 27 44 17 38 33 33 49 33 33 2 33 33 30 33 31 13 39 46 33 18 28 41 42 33 14 33 33 33 10 8 33 33 33 33 33 33 33 46 33 33 33 25 34 22 33 39 33 30 24 33 33 1 33 44 15 15 33 41 20 33 45 33 27 ...', 'output': ['14441842']}, {'input': '328921\\r\\noutput': ['4404996']}, {'input': '555497\\r\\noutput': ['14931972']}, {'input': '207904\\r\\n50 50 50 0 0 50 0 50 50 50 0 50 50 50 0 50 50 50 50 0 50 0 0 0 50 0 0 0 50 0 0 50 0 50 0 0 0 50 50 0 50 50 50 0 50 0 0 0 0 50 0 50 50 0 50 0 0 0 50 50 50 50 50 50 50 50 50 0 0 50 50 0 50 50 50 50 0 0 0 0 0 50 50 50 0 0 50 0 50 0 50 0 0 0 50 0 50 0 0 50 0 50 50 50 50 50 0 0 50 0 50 0 0 50 50 0 50 0 50 0 0 0 50 0 0 50 0 0 0 0 0 50 0 50 0 50 0 50 0 0 50 50 50 50 50 0 0 0 50 0 50 50 50 50 50 0 50 50 0 0 50 0 50 0 0 0 50 0 50 50 50 0 0 50 0 50 50 50 0 0 0 0 50 50 0 0 50 50 50 50 50 50 50 0 0 0 50 50 50 ...', 'output': ['11221740']}, {'input': '971328\\r\\n50 0 0 0 50 50 0 50 50 50 50 50 50 50 0 50 50 50 50 0 50 50 50 0 50 50 50 50 0 50 50 50 50 0 50 50 50 50 50 50 50 50 0 0 50 50 0 50 50 50 0 0 0 50 50 50 50 50 0 0 50 50 0 0 50 50 0 50 50 50 0 0 50 50 50 0 50 0 50 0 50 50 0 50 0 50 0 50 50 0 50 50 50 50 0 50 50 50 50 50 50 50 50 0 50 50 50 0 0 50 50 0 0 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 0 50 50 50 50 50 50 50 50 50 0 50 50 50 0 50 0 50 0 0 50 0 50 50 0 0 50 50 50 50 50 50 50 0 50 0 50 50 0 0 0 0 50 50 0 50 50 0 50 50 50 50 50 50 50 50 ...', 'output': ['26290440']}, {'input': '744752\\r\\noutput': ['10077264']}, {'input': '973217\\r\\n2233 4962 2835 1271 712 2124 3765 510 914 3364 2648 3399 744 3777 1516 739 3844 3879 261 863 2101 791 2276 1691 2145 1603 819 2340 415 3123 3260 1225 4746 4672 937 742 3927 25 2177 640 72 245 4053 3213 1322 3725 2842 883 216 4345 815 1534 633 4222 1677 2151 949 2691 2931 1897 1678 2599 4295 953 656 2864 2956 4134 4556 2839 3201 878 4447 270 1517 647 4010 3382 683 660 1393 785 3285 1115 1057 3672 3462 1434 882 122 505 3504 1946 1152 2997 3360 605 966 4034 4790 1344 1579 4482 2472 4484 3325 2852 543 ...', 'output': ['7404434821']}, {'input': '103937\\r\\n1662 2609 1161 2445 296 1285 3447 58 3521 1582 3524 1259 2360 3741 3130 4570 2215 3091 2032 3518 2969 3181 1414 1632 2101 4556 3642 1734 1388 4300 1631 182 1633 3970 1837 3967 1914 3162 915 2404 1208 4583 4334 279 747 2251 4671 4416 4752 3641 3811 1089 3213 740 1502 3880 2044 2766 777 3050 2475 4741 1121 2863 1065 4146 4872 2094 139 755 2780 4115 3442 2104 4030 1891 3037 2769 739 2274 3313 3098 2415 3909 4771 2761 1623 4084 3038 3130 4758 2667 3792 247 8 2846 3218 3485 3149 3845 470 4108 1031 484 3...', 'output': ['783928844']}, {'input': '520065\\r\\n756 4889 1279 756 756 756 756 4981 756 756 3514 3153 756 1559 563 3198 756 1696 756 1161 756 756 4853 1600 2623 3399 756 756 2736 756 756 756 756 756 4089 756 756 1407 3919 1546 1651 756 2430 756 756 756 756 756 756 4836 4582 1305 1304 763 756 4644 4890 756 3162 2611 3242 4455 1792 1882 756 2208 2014 4995 756 2947 2876 4738 756 756 1113 756 891 756 756 756 265 3619 756 756 756 4725 756 756 756 774 4476 4539 214 756 756 125 2452 3861 2363 2240 3842 756 4106 756 1183 756 756 756 756 756 1798 1694 793...', 'output': ['2532637708']}, {'input': '293489\\r\\n1084 4053 780 780 950 694 780 3823 780 780 2601 780 780 1469 3089 780 780 780 780 4707 780 2191 3268 2411 2892 171 3953 4307 340 1869 780 780 4373 4183 3523 780 2859 1053 780 1433 780 780 780 780 780 320 780 780 780 780 1948 2097 780 4234 780 780 780 4624 3124 780 780 3087 780 335 4642 780 780 2633 780 1447 780 780 4153 4532 780 780 3217 780 2340 2143 4089 2517 2085 780 2774 4590 3449 780 780 780 780 3715 4933 1026 2606 780 780 780 927 1997 3757 3730 780 780 780 780 780 4839 1369 780 602 780 1430 2...', 'output': ['1431772162']}, {'input': '546122\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 5000 0 5000 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 5000 0 0 0 0 5000 0 0 0 0 0 5000 0 0 0 0 5000 0 0 0 0 0 0 0 5000 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 5000 5000 5000 5000 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0...', 'output': ['1063817646']}, {'input': '772698\\r\\n0 5000 0 5000 0 0 0 0 0 5000 5000 0 0 0 0 5000 0 5000 0 0 0 5000 0 0 0 0 0 0 5000 5000 0 0 0 0 0 5000 0 0 0 0 0 5000 5000 0 5000 0 5000 0 0 0 0 5000 5000 0 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 5000 0 0 0 0 5000 0 5000 5000 0 0 0 5000 0 0 0 5000 0 5000 5000 0 0 0 5000 0 0 0 5000 0 0 5000 0 0 0 0 0 0 5000 0 5000 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 5000 0 0 0 0 0 0 0 0 0 0 0 0 5000 0 5000 5000 0 0 0 0 5000 0 0 0 5000 0 0 0 0 0 5000 0 0 5000 5000 0 5000 0 0 0 0 5000 0...', 'output': ['3012463572']}, {'input': '331312\\r\\noutput': ['2575933758']}, {'input': '104736\\r\\noutput': ['409458801']}, {'input': '868160\\r\\noutput': ['1683384246']}, {'input': '652655\\r\\n3334 3647 3955 1615 3535 4170 4440 916 3449 2474 1705 3926 4990 3602 1931 3593 1063 1637 3035 3592 4867 1381 2636 4148 2037 3053 2672 4117 3999 3410 3987 3809 1214 2506 4227 1035 3947 2980 4434 4606 1941 506 2430 4660 4704 2335 3672 659 3575 4897 2110 3191 1255 4677 4945 1118 1910 2386 928 630 4433 1229 3359 4875 1579 912 3160 2739 967 2438 4642 2192 4582 4089 4592 4265 2103 1404 4987 2649 601 4729 1050 1838 3316 964 4887 3663 1072 1898 921 2139 1880 4576 4828 3720 4421 1337 2919 4725 573 4563 714 ...', 'output': ['5470312646']}, {'input': '426079\\r\\n2838 696 521 2882 1816 4549 1788 4865 847 828 3444 3010 3490 4211 1926 2653 1094 2830 1268 3453 4906 532 2632 1988 2018 3161 2738 4149 3293 3844 3397 4545 2797 920 2672 2489 3556 1906 4249 662 2529 3906 1460 2151 1230 2527 1916 1727 1206 1011 1446 2586 4323 999 3917 3068 2849 2543 4319 3752 3258 2376 3342 4053 1804 1481 4853 2579 1163 2305 1735 4229 4686 2331 1992 3311 3851 1731 2098 2361 4830 941 3025 1566 3201 1692 2927 1751 4691 1394 3965 3014 1311 3986 1112 1710 3773 555 2357 2535 1687 1859 276...', 'output': ['3563797440']}, {'input': '199503\\r\\n819 819 4407 819 2634 1942 1127 819 1841 2488 819 819 774 4506 4800 1081 599 3091 819 819 4720 3629 819 819 2127 819 1115 819 819 819 819 819 819 819 2505 4087 2733 819 819 819 4835 2398 819 1588 819 2857 3465 819 4081 4347 3965 3529 2022 819 819 2856 819 819 1121 1828 819 819 2151 1524 2595 819 819 819 3629 3952 819 819 819 819 855 819 819 819 4197 819 2830 1026 2311 2606 819 819 4789 1104 2866 819 819 4562 2823 819 819 819 4389 819 3175 819 1115 819 819 819 819 819 3432 3480 819 3975 2524 3140 81...', 'output': ['1068954149']}, {'input': '615631\\r\\n3009 3663 3663 3663 2397 2553 3747 2143 2156 2962 3663 3826 4164 3663 3663 1309 1934 3663 4312 1760 1737 4296 3663 4739 3663 3663 3663 3663 4846 3663 3663 3663 986 2467 3663 3663 3663 3663 3663 2818 3663 3663 3663 3663 3663 3372 3663 3663 3663 4656 3663 3663 4912 3720 3663 3663 3663 4085 3663 3663 3663 4188 1082 4132 4775 1118 3663 3561 1043 3663 2132 4242 4604 3663 3663 3663 3663 3663 3663 3476 3663 2419 3349 3663 3663 3663 1120 3663 3663 3663 3663 2097 3663 4132 3663 4381 4692 3349 3663 3663 2768...', 'output': ['6032856551']}, {'input': '201235\\r\\noutput': ['422388015']}, {'input': '427811\\r\\noutput': ['1809031255']}, {'input': '462860\\r\\noutput': ['3916819805']}, {'input': '236284\\r\\noutput': ['1003533735']}, {'input': '999708\\r\\noutput': ['2120768420']}, {'input': '1000000\\r\\n48 8 20 45 21 24 8 0 42 18 16 5 49 40 18 22 40 43 41 47 30 15 17 36 25 9 24 29 8 33 29 41 22 5 15 40 21 18 13 49 39 4 38 3 24 36 27 39 9 5 0 38 40 16 42 27 24 10 12 50 41 19 3 19 34 12 42 18 2 7 17 22 11 20 25 48 18 16 25 49 19 34 21 37 4 46 16 21 9 22 1 48 28 27 36 3 49 41 43 48 36 39 8 14 38 0 18 11 37 31 23 12 14 16 38 41 47 14 45 29 34 44 32 13 17 26 44 12 46 50 37 39 40 49 30 11 22 43 19 50 32 27 30 20 28 10 24 2 17 34 12 37 36 29 26 37 21 48 4 11 31 7 30 46 15 6 0 44 47 40 24 10 33 48 33 48 ...', 'output': ['48889749']}, {'input': '1000000\\r\\n14 46 0 25 40 23 14 44 34 31 11 45 22 44 30 13 12 10 5 13 50 46 12 44 18 45 16 11 34 6 37 3 46 18 18 42 42 5 39 24 4 7 35 2 24 24 48 7 44 30 41 44 26 38 41 13 20 23 41 40 48 41 24 2 2 45 47 32 17 44 8 47 46 3 31 2 12 6 34 38 49 41 35 9 40 5 46 24 4 5 30 18 21 15 29 32 49 50 8 40 44 34 24 32 36 34 32 14 18 22 29 4 4 11 31 0 25 28 47 27 17 15 32 9 5 19 45 36 33 44 47 14 18 42 33 40 19 5 25 26 32 6 0 27 37 15 25 49 49 2 35 50 2 13 45 31 15 18 22 28 36 32 5 39 44 41 17 38 1 25 18 17 48 40 3 3 31 29 19...', 'output': ['48862349']}, {'input': '1000000\\r\\n2 27 42 2 2 2 2 4 17 47 2 45 17 2 2 2 2 14 2 42 2 5 15 37 4 5 37 40 2 2 14 17 48 2 2 2 2 37 2 2 46 8 2 45 24 47 29 35 2 2 15 2 2 12 2 34 2 2 43 2 2 23 19 49 2 42 2 3 2 2 2 2 0 5 2 2 2 37 2 2 2 2 3 2 29 2 36 22 50 2 2 43 2 2 2 34 14 1 10 2 19 33 40 3 2 50 21 41 35 13 0 18 18 2 2 2 2 29 21 2 7 2 2 36 8 2 2 2 38 21 30 30 12 2 38 41 2 42 2 16 2 2 43 38 2 42 2 2 2 14 2 2 2 8 15 2 2 5 31 49 41 2 2 29 2 2 2 32 14 2 18 2 2 23 2 2 2 2 2 41 32 2 2 29 2 2 2 21 2 2 2 2 2 24 25 13 2 2 32 2 17 2 2 11 2 21 2 29 ...', 'output': ['24924286']}, {'input': '1000000\\r\\n32 18 30 28 18 36 18 16 18 8 19 18 43 18 18 18 18 18 46 16 18 15 18 4 31 20 26 6 18 14 18 0 18 14 18 17 38 5 30 41 50 18 47 31 18 1 18 18 18 7 18 19 18 12 2 8 26 18 18 18 0 18 17 18 18 18 36 18 44 18 18 18 18 18 18 45 18 43 18 28 37 18 18 18 18 18 5 18 24 18 18 18 18 5 15 19 18 49 18 3 18 18 47 39 18 19 18 2 18 18 32 18 48 31 18 18 12 18 14 28 5 10 5 18 18 46 18 18 18 42 18 9 18 3 18 18 18 7 35 16 18 18 18 18 10 18 18 39 18 41 33 30 10 18 24 18 34 32 18 15 3 15 18 18 1 34 22 18 41 17 18 10 18 18 1...', 'output': ['39529186']}, {'input': '1000000\\r\\noutput': ['13477752']}, {'input': '1000000\\r\\noutput': ['26977860']}, {'input': '1000000\\r\\n50 50 50 50 50 50 0 50 0 0 0 0 0 0 0 0 50 50 50 0 0 0 50 0 0 0 0 50 0 0 50 50 50 50 50 50 0 0 50 50 0 0 0 50 0 0 0 0 50 50 0 0 50 50 50 50 50 0 0 0 0 0 50 50 0 50 0 50 0 50 0 50 0 50 0 0 0 50 0 50 0 0 50 0 50 0 0 50 0 50 0 0 50 50 0 50 0 0 50 0 0 0 0 0 50 0 50 50 0 0 0 0 0 0 0 50 0 0 0 0 0 0 50 50 0 50 0 50 50 0 0 50 50 50 50 50 0 50 0 50 50 50 0 0 0 50 0 0 0 50 50 0 0 50 0 50 50 0 0 0 50 50 0 0 0 50 50 50 0 50 50 0 50 0 0 50 50 50 50 50 50 50 0 50 0 50 50 0 50 50 0 50 50 50 50 50 50 50 0 0 50 0 5...', 'output': ['53993952']}, {'input': '1000000\\r\\noutput': ['26987364']}, {'input': '1000000\\r\\noutput': ['13460904']}, {'input': '1000000\\r\\n4928 5000 4744 3545 3738 2132 1318 4951 2071 1952 2436 3340 2119 2695 4938 4493 4798 575 4969 3520 2191 2873 1960 4032 3857 4548 2212 3864 2948 3089 4829 1148 1656 4725 1963 2766 1319 1971 2937 2979 3194 1866 4461 1519 3195 704 2802 4208 4242 937 1797 2331 3923 801 1677 1718 3754 770 1402 1801 3480 1839 3134 1069 4671 4776 3159 1728 2554 2091 751 626 2234 1416 640 610 1634 4110 4476 1075 2240 3216 3739 4099 4694 925 2824 3432 4434 4320 3411 4658 1378 2193 4301 2762 3768 3874 3815 3882 2439 2911 45...', 'output': ['8384253798']}, {'input': '1000000\\r\\n4637 1302 2880 1973 4301 4845 2403 2820 3359 1121 1066 3885 1101 1911 2875 865 3402 3883 1943 2415 4562 693 1895 2528 2203 2858 3316 3183 3462 3194 1180 667 3088 1856 2257 684 4941 599 1784 4124 2997 729 4662 2207 1177 4995 2535 1128 2688 4949 989 2888 3918 2059 2028 1444 2432 4254 2685 1889 2049 2391 2534 2133 3021 3290 4710 3200 1581 1147 4271 2676 2283 598 1333 1733 3408 1993 2692 2252 4442 1469 3112 960 2265 1455 4820 2984 4120 4641 1432 3231 3896 960 1817 1911 3379 1879 1417 2363 4263 1442 30...', 'output': ['8374983176']}, {'input': '1000000\\r\\n1616 3742 1616 1616 1616 1616 1787 4057 1616 710 4642 3132 1616 1616 1280 1616 3392 1680 1616 1202 2794 1616 714 1036 1616 666 1616 1616 2066 1616 4643 1616 1616 2370 1393 4716 1616 1616 4295 960 2721 3010 1616 1616 1616 3783 1616 3737 2293 1921 2932 3666 4864 1616 1616 3161 1933 1616 2214 4578 1616 1616 2040 2520 1616 1616 4641 1616 1150 1616 1616 896 3297 1616 1616 1185 4532 1616 2888 1616 1616 1616 1246 1616 1616 1616 1616 4534 1616 1616 1753 1174 1616 940 1616 1616 1616 1616 3180 1616 737 2174...', 'output': ['6573578424']}, {'input': '1000000\\r\\n2691 1471 1769 1769 1769 2426 1769 1769 1769 1603 1769 1769 1769 1769 510 1567 1524 1666 1769 1769 1153 1769 1769 1769 2414 1769 1074 1769 3210 2644 1201 3796 1766 1769 1644 577 1769 1918 1855 1769 3024 1769 1769 2995 1769 1769 4565 1769 3576 864 1769 1769 3337 1769 1769 1945 4876 2367 704 1769 1769 3704 1769 3168 1769 2401 1769 2844 1769 4175 2420 4683 1769 1769 1769 3560 1769 1769 1769 1769 1769 2808 1769 4057 4544 1769 1769 2697 2150 1737 2724 1769 3524 1769 1769 3502 1769 1769 1769 1769 1620 2...', 'output': ['6808525559']}, {'input': '1000000\\r\\n501 501 5000 501 501 501 501 5000 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 5000 501 501 501 501 501 501 501 501 501 5000 501 501 501 501 501 501 501 501 501 501 501 501 5000 501 501 501 501 501 5000 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 501 5000 501 501 501 501 501 501 501 501 501 501 501 501 5000 501 5000 501 501 5000 501 501 5000 501 501 501 501 501 501 501 501 501 501...', 'output': ['2113787080']}, {'input': '1000000\\r\\n501 5000 5000 501 501 501 5000 501 5000 501 501 501 501 5000 501 501 5000 501 501 5000 501 501 501 501 501 501 501 5000 501 501 501 5000 501 5000 5000 501 501 501 501 501 5000 5000 501 501 501 501 501 501 501 501 501 501 5000 5000 501 501 5000 5000 501 5000 5000 501 501 5000 501 501 501 501 501 501 5000 501 501 5000 501 501 501 501 501 501 501 501 501 501 501 501 501 5000 501 501 5000 501 501 5000 501 5000 501 501 5000 501 5000 501 501 5000 501 501 501 501 501 501 5000 5000 501 501 501 5000 501 50...', 'output': ['4241621565']}, {'input': '1000000\\r\\noutput': ['8464722245']}, {'input': '1000000\\r\\noutput': ['4229505890']}, {'input': '1000000\\r\\noutput': ['2122852655']}, {'input': '1000000\\r\\n3491 3862 4899 1602 3307 2481 2146 1000 2479 2072 1534 2587 3924 4181 4835 2449 1976 4441 2217 3227 3297 2989 1754 1498 3742 1437 3766 3234 1072 3972 2514 1055 3883 4655 3452 1827 1874 1349 3202 2450 2946 3550 3879 3214 3123 2445 3893 1771 4218 3032 1325 4404 1421 1531 3754 1412 3178 4801 3290 4438 3677 4018 3175 1981 3353 3939 1512 3645 3759 3630 3769 3848 2031 1011 1771 1278 3021 2768 4761 1697 3561 4706 1464 3090 4827 1058 1120 3602 1808 2849 2244 4170 1928 3584 4395 2628 3674 1812 4074 1723 35...', 'output': ['8999391475']}, {'input': '1000000\\r\\n4525 1819 4273 3463 1648 2372 4978 2585 2374 2402 3570 2924 1135 1647 4411 924 1539 2671 1396 1592 2253 3152 2052 4858 4538 2952 1123 1441 2052 2404 2073 4052 4954 1331 4834 2353 1980 3243 4991 1389 2920 2050 1337 3188 2953 2753 2451 2119 3315 2174 3910 3759 3410 4935 2996 1728 1229 1070 1719 3715 2233 1699 3794 1656 4410 4356 3740 4240 4249 3772 2740 3670 3711 4863 1584 4255 1217 3831 4379 2230 2132 1625 3418 1469 4672 4632 1416 979 1173 3364 1419 1460 3118 3410 1250 1531 4916 3057 4448 4483 3900...', 'output': ['9003221879']}, {'input': '1000000\\r\\n1442 3254 3079 1274 4816 1653 3079 3079 3079 1396 4595 2894 3079 3079 1060 3079 4646 3079 3079 3567 3079 3079 3079 1111 2788 3079 913 3020 1455 3026 3079 3079 4799 3079 1018 3079 3079 3079 3079 2703 4596 3079 3079 3079 3079 3790 4649 3079 3079 3803 1425 3079 1956 3886 3861 3663 3079 3121 2774 2577 4524 3079 3079 1760 3079 3079 3545 3079 3079 3079 1009 3079 3775 4972 4066 3079 1602 3079 1288 3079 3079 3079 3079 3079 3079 1482 3079 3079 3079 3079 3079 2153 3079 1233 4758 1729 3079 1361 2370 3522 119...', 'output': ['9192195816']}, {'input': '1000000\\r\\n3085 4754 3064 4924 4924 3593 3916 3300 4924 2820 3819 4924 2825 2127 4924 3321 3323 4924 2612 4924 4924 4924 4924 4924 2572 4357 4924 4924 1690 4012 3790 4924 4924 4924 4924 2601 1049 4032 3940 4651 3530 4924 2765 2847 3710 2400 3405 2217 4924 4924 4546 1228 4924 4924 2806 4900 1510 4924 4924 4924 4924 3746 2527 4475 3412 4924 4924 4133 4924 4924 4924 3474 4924 4924 1006 4924 4924 1683 2651 2822 2382 2521 3814 4924 2554 4924 4215 3787 4685 2481 3981 4924 4924 3234 4112 4924 1758 4924 4924 4924 37...', 'output': ['12154389312']}, {'input': '4\\r\\n13 14 15 16\\r\\n', 'output': ['76']}, {'input': '3\\r\\n1 5 6\\r\\n', 'output': ['10']}, {'input': '3\\r\\n15 13 2\\r\\n', 'output': ['42']}, {'input': '3\\r\\n1 8 9\\r\\n', 'output': ['20']}, {'input': '3\\r\\n2 5 6\\r\\n', 'output': ['11']}]", "source_code": "import math\n\ndef prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    k = list(map(int, input().split()))\n    k.sort()\n    ans = 0\n    for i in range(n):\n        if k[i] == 0:\n            ans += 1\n        else:\n            ans += k[i]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"}
{"src_uid": "ba9c136f84375cd317f0f8b53e3939c7", "id": 165, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2600, "testcases": "[{'input': '2 1\\r\\n0 1\\r\\n2 1\\r\\n', 'output': ['332748119\\r\\n332748119']}, {'input': '1 2\\r\\n1\\r\\n1\\r\\n', 'output': ['3']}, {'input': '3 3\\r\\n0 1 1\\r\\n4 3 5\\r\\n', 'output': ['160955686\\r\\n185138929\\r\\n974061117']}, {'input': '5 5\\r\\n0 1 0 0 1\\r\\n9 8 3 8 8\\r\\n', 'output': ['45170585\\r\\n105647559\\r\\n680553097\\r\\n483815788\\r\\n105647559']}, {'input': '10 10\\r\\n0 1 0 0 1 1 1 1 1 1\\r\\n12 18 6 18 7 2 9 18 1 9\\r\\n', 'output': ['199115375\\r\\n823101465\\r\\n598679864\\r\\n797795239\\r\\n486469073\\r\\n424203836\\r\\n910672909\\r\\n823101465\\r\\n212101918\\r\\n910672909']}, {'input': '20 20\\r\\n1 1 1 1 0 1 1 1 0 1 0 1 0 0 1 0 1 1 0 1\\r\\n1 13 7 11 17 15 19 18 14 11 15 1 12 4 5 16 14 11 18 9\\r\\n', 'output': ['688505688\\r\\n964619120\\r\\n826562404\\r\\n585852097\\r\\n851622699\\r\\n345141790\\r\\n104431483\\r\\n414170148\\r\\n349014804\\r\\n585852097\\r\\n516550769\\r\\n688505688\\r\\n13942874\\r\\n670143860\\r\\n447795381\\r\\n684086734\\r\\n654880455\\r\\n585852097\\r\\n20914311\\r\\n207085074']}, {'input': '30 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0\\r\\n1 2 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 1 2 1 1 2 1 2 2 1 1 2 2 2\\r\\n', 'output': ['346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n346646202\\r\\n542025302\\r\\n693292404\\r\\n346646202\\r\\n346646202\\r\\n693292404\\r\\n693292404\\r\\n693292404']}, {'input': '40 40\\r\\n1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n28 13 22 35 22 13 23 35 14 36 30 10 10 15 3 9 35 35 9 29 14 28 8 29 22 30 4 31 39 24 4 19 37 4 20 7 11 17 3 25\\r\\n', 'output': ['368107101\\r\\n848286965\\r\\n360530176\\r\\n210572788\\r\\n199380339\\r\\n848286965\\r\\n195418938\\r\\n210572788\\r\\n683175727\\r\\n45461550\\r\\n37884625\\r\\n544374860\\r\\n345376326\\r\\n518064489\\r\\n502910639\\r\\n510487564\\r\\n210572788\\r\\n210572788\\r\\n510487564\\r\\n202995863\\r\\n683175727\\r\\n526005255\\r\\n675598802\\r\\n202995863\\r\\n360530176\\r\\n37884625\\r\\n337799401\\r\\n871017740\\r\\n548372189\\r\\n30307700\\r\\n337799401\\r\\n855863890\\r\\n878594665\\r\\n337799401\\r\\n690752652\\r\\n840710040\\r\\n180265088\\r\\n187842013\\r\\n502910639\\r\\n863440815']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n13 18 27 40 3 1 20 11 25 11 2 31 22 15 36 12 11 24 8 39 31 36 19 24 10 39 27 4 10 22 14 3 25 5 24 19 20 33 17 19 30 15 37 33 3 27 26 29 37 34\\r\\n', 'output': ['30685719\\r\\n733580163\\r\\n601248068\\r\\n631933787\\r\\n621385537\\r\\n539876630\\r\\n815089070\\r\\n947421165\\r\\n519739161\\r\\n947421165\\r\\n81508907\\r\\n764265882\\r\\n896597977\\r\\n112194626\\r\\n468915973\\r\\n489053442\\r\\n947421165\\r\\n978106884\\r\\n326035628\\r\\n92057157\\r\\n764265882\\r\\n468915973\\r\\n275212440\\r\\n978106884\\r\\n407544535\\r\\n92057157\\r\\n601248068\\r\\n163017814\\r\\n407544535\\r\\n896597977\\r\\n570562349\\r\\n621385537\\r\\n519739161\\r\\n702894444\\r\\n978106884\\r\\n275212440\\r\\n815089070\\r\\n845774789\\r\\n193703533\\r\\n275212440\\r\\n224389252\\r\\n112194626\\r\\n10548250\\r\\n845774789\\r\\n621385537\\r\\n601248068\\r\\n61371438\\r\\n...']}, {'input': '50 50\\r\\n0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0\\r\\n2 50 37 21 21 2 26 49 15 44 8 27 30 28 26 40 26 45 41 37 27 34 8 35 2 23 2 49 13 1 39 37 12 42 7 11 4 50 42 21 27 50 28 31 17 22 10 43 46 13\\r\\n', 'output': ['380563607\\r\\n529890998\\r\\n551838435\\r\\n502062638\\r\\n635094670\\r\\n380563607\\r\\n954349479\\r\\n816391328\\r\\n358616170\\r\\n386444530\\r\\n907437062\\r\\n645509106\\r\\n717232340\\r\\n336668733\\r\\n954349479\\r\\n623561669\\r\\n954349479\\r\\n77604157\\r\\n314721296\\r\\n453480088\\r\\n645509106\\r\\n480115201\\r\\n907437062\\r\\n725742999\\r\\n380563607\\r\\n362831759\\r\\n725981442\\r\\n838731371\\r\\n976296916\\r\\n362990721\\r\\n932402042\\r\\n551838435\\r\\n286892936\\r\\n5880923\\r\\n832850448\\r\\n998164872\\r\\n761127214\\r\\n529890998\\r\\n5880923\\r\\n502062638\\r\\n645509106\\r\\n181137696\\r\\n181296658\\r\\n408391967\\r\\n739179777\\r\\n193222265\\r\\n904573682\\r...']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 1 2 2 2 1 1 1\\r\\n', 'output': ['665496237\\r\\n332748121\\r\\n332748121\\r\\n665496237\\r\\n332748121\\r\\n332748121\\r\\n332748121\\r\\n665496237\\r\\n665496237\\r\\n665496237']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 0 1 1\\r\\n2 1 2 2 1 1 1 1 1 1\\r\\n', 'output': ['771370640\\r\\n385685320\\r\\n771370640\\r\\n771370640\\r\\n385685320\\r\\n385685320\\r\\n385685320\\r\\n635246407\\r\\n385685320\\r\\n385685320']}, {'input': '10 10\\r\\n0 0 0 1 0 0 0 0 0 0\\r\\n2 2 2 2 2 2 2 1 2 2\\r\\n', 'output': ['973938381\\r\\n973938381\\r\\n973938381\\r\\n791643586\\r\\n973938381\\r\\n973938381\\r\\n973938381\\r\\n986091367\\r\\n973938381\\r\\n973938381']}, {'input': '10 10\\r\\n0 0 1 0 0 0 1 0 0 0\\r\\n2 1 2 1 1 2 1 1 1 1\\r\\n', 'output': ['44896189\\r\\n521570271\\r\\n482402083\\r\\n521570271\\r\\n521570271\\r\\n44896189\\r\\n740323218\\r\\n521570271\\r\\n521570271\\r\\n521570271']}, {'input': '10 10\\r\\n1 0 0 0 1 1 1 0 1 0\\r\\n1 2 1 2 1 1 2 2 2 1\\r\\n', 'output': ['910950063\\r\\n595918255\\r\\n797081304\\r\\n595918255\\r\\n910950063\\r\\n910950063\\r\\n823655773\\r\\n595918255\\r\\n823655773\\r\\n797081304']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n17 10 8 34 5 4 3 44 20 14\\r\\n', 'output': ['709444118\\r\\n6278277\\r\\n803618104\\r\\n420643883\\r\\n502261315\\r\\n401809052\\r\\n301356789\\r\\n426922160\\r\\n12556554\\r\\n408087329']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 0 1\\r\\n40 36 29 4 36 35 9 38 40 18\\r\\n', 'output': ['59109317\\r\\n951618303\\r\\n17898146\\r\\n105735367\\r\\n951618303\\r\\n675623373\\r\\n487465664\\r\\n505363810\\r\\n736385984\\r\\n974931328']}, {'input': '10 10\\r\\n0 0 0 0 0 0 0 1 0 0\\r\\n8 33 37 18 30 48 45 34 25 48\\r\\n', 'output': ['211347083\\r\\n497465085\\r\\n104016450\\r\\n725092025\\r\\n542990473\\r\\n269838145\\r\\n315363533\\r\\n227335634\\r\\n286118002\\r\\n269838145']}, {'input': '10 10\\r\\n0 0 1 0 0 0 0 0 1 0\\r\\n47 34 36 9 3 16 17 46 47 1\\r\\n', 'output': ['167709201\\r\\n57603825\\r\\n597597985\\r\\n690531016\\r\\n562925123\\r\\n673030499\\r\\n527924089\\r\\n312815611\\r\\n253346183\\r\\n853137943']}, {'input': '10 10\\r\\n1 0 0 1 1 0 1 0 0 1\\r\\n24 7 10 9 6 13 27 17 6 39\\r\\n', 'output': ['976715988\\r\\n573793375\\r\\n391885813\\r\\n865390672\\r\\n244178997\\r\\n209978251\\r\\n599683310\\r\\n965679188\\r\\n634429229\\r\\n89796951']}, {'input': '10 10\\r\\n0 0 0 0 0 1 0 0 0 0\\r\\n34 34 34 34 34 34 34 34 34 34\\r\\n', 'output': ['971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n754874965\\r\\n971203339\\r\\n971203339\\r\\n971203339\\r\\n971203339']}, {'input': '10 10\\r\\n1 1 1 1 1 1 1 1 1 1\\r\\n43 43 43 43 43 43 43 43 43 43\\r\\n', 'output': ['44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44\\r\\n44']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 2 1 1 2 1 1 1 2 1 1 2 1 2 1 2 1 2 1 2 2 2 1 2 2 2 2 1\\r\\n', 'output': ['260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n520823144\\r\\n260411572']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1\\r\\n2 1 1 1 2 1 1 2 1 1 1 2 1 1 1 1 2 2 2 2 1 2 1 2 1 1 1 1 2 1\\r\\n', 'output': ['720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n720162001\\r\\n720162001\\r\\n720162001\\r\\n859203177\\r\\n720162001\\r\\n859203177\\r\\n720162001\\r\\n427819009\\r\\n859203177\\r\\n859203177\\r\\n859203177\\r\\n720162001\\r\\n859203177']}, {'input': '30 30\\r\\n0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n2 1 1 2 1 2 2 2 2 2 1 1 2 2 2 1 2 2 2 1 2 1 1 1 1 1 2 1 1 1\\r\\n', 'output': ['188114875\\r\\n593179614\\r\\n593179614\\r\\n550614566\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n593179614']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 1 1 1 2 1 2 2 1 2 1 2 1 1 2 2 1 2 1 2 1 2 2 2 1 1 2 1 2 2\\r\\n', 'output': ['593179614\\r\\n593179614\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n275307283\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n275307283\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875\\r\\n188114875\\r\\n593179614\\r\\n593179614\\r\\n188114875\\r\\n593179614\\r\\n188114875\\r\\n188114875']}, {'input': '30 30\\r\\n1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 1 1 0 1 0 1 0 0 1 1 0 1 0 1 0\\r\\n1 1 1 2 2 1 2 1 2 1 1 2 2 2 1 2 1 1 1 1 1 2 1 2 1 2 1 2 1 1\\r\\n', 'output': ['297674502\\r\\n297674502\\r\\n297674502\\r\\n101192689\\r\\n595349004\\r\\n549718521\\r\\n101192689\\r\\n297674502\\r\\n595349004\\r\\n297674502\\r\\n549718521\\r\\n101192689\\r\\n101192689\\r\\n101192689\\r\\n549718521\\r\\n595349004\\r\\n297674502\\r\\n549718521\\r\\n297674502\\r\\n549718521\\r\\n297674502\\r\\n101192689\\r\\n549718521\\r\\n595349004\\r\\n297674502\\r\\n101192689\\r\\n297674502\\r\\n101192689\\r\\n297674502\\r\\n549718521']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n23 45 44 49 17 36 32 26 40 8 36 11 5 19 41 16 7 38 23 40 13 16 24 44 22 13 1 2 32 31\\r\\n', 'output': ['42365832\\r\\n603712812\\r\\n124449607\\r\\n524276926\\r\\n161519661\\r\\n283321379\\r\\n362757265\\r\\n481911094\\r\\n203885493\\r\\n839372581\\r\\n283321379\\r\\n280673490\\r\\n399827319\\r\\n121801718\\r\\n683148698\\r\\n680500809\\r\\n360109376\\r\\n243603436\\r\\n42365832\\r\\n203885493\\r\\n240955547\\r\\n680500809\\r\\n521629037\\r\\n124449607\\r\\n561346980\\r\\n240955547\\r\\n479263205\\r\\n958526410\\r\\n362757265\\r\\n881738413']}, {'input': '30 30\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n41 39 15 34 45 27 18 7 48 33 46 11 24 16 35 43 7 31 26 17 30 15 5 9 29 20 21 37 3 7\\r\\n', 'output': ['61128841\\r\\n655563720\\r\\n98563838\\r\\n955457225\\r\\n295691514\\r\\n377063779\\r\\n916872088\\r\\n578393446\\r\\n115755411\\r\\n17191573\\r\\n235712813\\r\\n338478642\\r\\n556999882\\r\\n38585137\\r\\n895478524\\r\\n415648916\\r\\n578393446\\r\\n137148975\\r\\n437042480\\r\\n976850789\\r\\n197127676\\r\\n98563838\\r\\n698350848\\r\\n458436044\\r\\n257106377\\r\\n796914686\\r\\n736935985\\r\\n775521122\\r\\n818308250\\r\\n578393446']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n29 38 18 19 46 28 12 5 46 17 31 20 24 33 9 6 47 2 2 41 34 2 50 5 47 10 40 21 49 28\\r\\n', 'output': ['528451192\\r\\n658031067\\r\\n259159750\\r\\n828137710\\r\\n218632982\\r\\n957717585\\r\\n838269402\\r\\n848401094\\r\\n218632982\\r\\n688426143\\r\\n942792071\\r\\n398871317\\r\\n678294451\\r\\n807874326\\r\\n129579875\\r\\n419134701\\r\\n787610942\\r\\n139711567\\r\\n139711567\\r\\n368476241\\r\\n378607933\\r\\n139711567\\r\\n498056116\\r\\n848401094\\r\\n787610942\\r\\n698557835\\r\\n797742634\\r\\n967849277\\r\\n927322509\\r\\n957717585']}, {'input': '30 30\\r\\n0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 12 9 1 5 32 38 25 34 31 27 43 13 38 48 40 5 42 20 45 1 4 35 38 1 44 31 42 8 37\\r\\n', 'output': ['399967190\\r\\n806628868\\r\\n604971651\\r\\n399967190\\r\\n3347244\\r\\n800038448\\r\\n225087925\\r\\n16736220\\r\\n621707871\\r\\n420050654\\r\\n816670600\\r\\n228435169\\r\\n208351705\\r\\n225087925\\r\\n231782413\\r\\n26777952\\r\\n3347244\\r\\n51806110\\r\\n13388976\\r\\n30125196\\r\\n399967190\\r\\n601624407\\r\\n23430708\\r\\n225087925\\r\\n399967190\\r\\n628402359\\r\\n420050654\\r\\n826712332\\r\\n205004461\\r\\n823365088']}, {'input': '30 30\\r\\n0 1 1 0 0 1 1 1 1 0 0 1 0 0 1 0 0 0 1 0 1 1 0 0 0 1 1 1 1 0\\r\\n5 20 47 27 17 5 18 30 43 23 44 6 47 8 23 41 2 46 49 33 45 27 33 16 36 2 42 36 8 23\\r\\n', 'output': ['114252107\\r\\n760713694\\r\\n489959522\\r\\n18014766\\r\\n787754905\\r\\n689300600\\r\\n484993454\\r\\n142826188\\r\\n936763395\\r\\n126261951\\r\\n805769671\\r\\n827160720\\r\\n475023194\\r\\n781749983\\r\\n176049701\\r\\n138271795\\r\\n444998584\\r\\n252523902\\r\\n765679762\\r\\n354766165\\r\\n214239282\\r\\n727490181\\r\\n354766165\\r\\n565255613\\r\\n24019688\\r\\n275720240\\r\\n798903275\\r\\n969986908\\r\\n104636607\\r\\n126261951']}, {'input': '30 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\r\\n39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39\\r\\n', 'output': ['417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n417992317\\r\\n142843895']}, {'input': '30 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22\\r\\n', 'output': ['23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23\\r\\n23']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n2 1 1 2 2 1 2 1 1 2 2 2 1 2 2 1 1 1 2 1 2 1 2 2 2 1 2 1 1 2 2 2 2 2 1 2 2 2 2 2 2 1 2 1 2 2 2 1 1 2\\r\\n', 'output': ['714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n357396128\\r\\n714792256\\r\\n714792256\\r\\n71479...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 1 2 1 1 1 1 1 2 1 1 1 2 2 2 1 1 1 1 2 2 1 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 2 1 1 2 2 2 1\\r\\n', 'output': ['964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n824636640\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n964858256\\r\\n931472159\\r\\n964858256\\r\\n931472159\\r\\n931472159\\r\\n964858256\\r\\n964858256\\r\\n93147...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0\\r\\n1 2 2 2 2 2 2 1 1 2 2 1 1 2 1 2 2 1 2 1 2 2 1 2 2 2 1 1 1 1 2 2 2 1 2 2 1 2 2 1 1 2 2 2 2 2 1 2 2 1\\r\\n', 'output': ['512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n512801870\\r\\n512801870\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n27359387\\r\\n96131098\\r\\n27359387\\r\\n27359387\\r\\n5128...']}, {'input': '50 50\\r\\n0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\r\\n2 1 1 1 1 2 2 2 1 1 2 2 2 1 2 1 2 2 2 1 1 1 1 2 2 1 1 1 1 2 1 2 2 2 2 1 1 1 2 1 2 1 1 2 2 1 1 2 2 1\\r\\n', 'output': ['303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n480354901\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n303976482\\r\\n151988241\\r\\n151988241\\r\\n303976482\\r\\n303976482\\r\\n151988241\\r\\n15198...']}, {'input': '50 50\\r\\n0 0 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 0 0\\r\\n1 1 1 1 1 2 2 1 1 2 2 2 1 1 1 2 2 2 1 1 1 1 2 1 1 1 2 2 1 1 1 2 2 1 1 2 1 1 2 2 2 2 2 2 2 2 2 1 2 1\\r\\n', 'output': ['525100120\\r\\n525100120\\r\\n392384920\\r\\n525100120\\r\\n525100120\\r\\n51955887\\r\\n784769840\\r\\n525100120\\r\\n392384920\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n392384920\\r\\n392384920\\r\\n525100120\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n392384920\\r\\n392384920\\r\\n392384920\\r\\n392384920\\r\\n784769840\\r\\n392384920\\r\\n525100120\\r\\n392384920\\r\\n51955887\\r\\n784769840\\r\\n525100120\\r\\n392384920\\r\\n525100120\\r\\n51955887\\r\\n51955887\\r\\n525100120\\r\\n392384920\\r\\n784769840\\r\\n525100120\\r\\n525100120\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n51955887\\r\\n784769840\\r\\n784769840\\r\\n51955887\\r\\n784769840\\r\\n51955887\\r\\n5251...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n32 22 24 45 22 17 10 5 27 1 48 15 14 43 11 16 38 31 24 19 5 28 2 4 34 29 18 32 47 11 2 34 39 29 36 11 39 24 23 16 41 45 17 39 30 15 16 3 3 8\\r\\n', 'output': ['118672439\\r\\n268758118\\r\\n837687594\\r\\n821980974\\r\\n268758118\\r\\n842923134\\r\\n848158674\\r\\n424079337\\r\\n692837455\\r\\n284464738\\r\\n677130835\\r\\n273993658\\r\\n987773273\\r\\n253051498\\r\\n134379059\\r\\n558458396\\r\\n827216514\\r\\n832452054\\r\\n837687594\\r\\n413608257\\r\\n424079337\\r\\n977302193\\r\\n568929476\\r\\n139614599\\r\\n687601915\\r\\n263522578\\r\\n129143519\\r\\n118672439\\r\\n392666097\\r\\n134379059\\r\\n568929476\\r\\n687601915\\r\\n113436899\\r\\n263522578\\r\\n258287038\\r\\n134379059\\r\\n113436899\\r\\n837687594\\r\\n553222856\\r\\n558458396\\r\\n682366375\\r\\n821980974\\r\\n842923134\\r\\n113436899\\r\\n547987316\\r\\n273993658\\r\\n55845...']}, {'input': '50 50\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n49 34 4 15 32 20 22 35 3 28 15 46 4 46 16 11 45 42 11 4 15 36 29 10 27 32 1 1 23 11 6 34 35 19 11 5 2 37 9 20 39 33 27 4 21 33 6 23 37 50\\r\\n', 'output': ['41887747\\r\\n858571128\\r\\n101008368\\r\\n378781380\\r\\n808066944\\r\\n505041840\\r\\n555546024\\r\\n883823220\\r\\n75756276\\r\\n707058576\\r\\n378781380\\r\\n163351879\\r\\n101008368\\r\\n163351879\\r\\n404033472\\r\\n277773012\\r\\n138099787\\r\\n62343511\\r\\n277773012\\r\\n101008368\\r\\n378781380\\r\\n909075312\\r\\n732310668\\r\\n252520920\\r\\n681806484\\r\\n808066944\\r\\n25252092\\r\\n25252092\\r\\n580798116\\r\\n277773012\\r\\n151512552\\r\\n858571128\\r\\n883823220\\r\\n479789748\\r\\n277773012\\r\\n126260460\\r\\n50504184\\r\\n934327404\\r\\n227268828\\r\\n505041840\\r\\n984831588\\r\\n833319036\\r\\n681806484\\r\\n101008368\\r\\n530293932\\r\\n833319036\\r\\n151512552\\r\\n...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n12 29 36 24 44 22 38 43 30 19 15 2 39 8 13 50 29 18 37 19 32 39 42 41 20 11 14 25 4 35 14 23 17 29 1 19 3 6 8 31 26 46 9 31 36 49 21 38 17 27\\r\\n', 'output': ['820896192\\r\\n985588111\\r\\n466199870\\r\\n643548031\\r\\n15219645\\r\\n506731999\\r\\n603015902\\r\\n945055982\\r\\n986069299\\r\\n301507951\\r\\n27875887\\r\\n136816032\\r\\n671423918\\r\\n547264128\\r\\n889304208\\r\\n425667741\\r\\n985588111\\r\\n233099935\\r\\n534607886\\r\\n301507951\\r\\n192567806\\r\\n671423918\\r\\n876647966\\r\\n808239950\\r\\n369915967\\r\\n752488176\\r\\n957712224\\r\\n711956047\\r\\n273632064\\r\\n397791854\\r\\n957712224\\r\\n575140015\\r\\n164691919\\r\\n985588111\\r\\n68408016\\r\\n301507951\\r\\n205224048\\r\\n410448096\\r\\n547264128\\r\\n124159790\\r\\n780364063\\r\\n152035677\\r\\n615672144\\r\\n124159790\\r\\n466199870\\r\\n357259725\\r\\n43832398...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n25 31 26 45 2 6 25 14 35 23 31 16 24 36 44 8 18 41 36 3 27 21 15 44 45 45 25 8 3 43 7 25 48 45 44 33 25 49 8 46 14 12 12 46 45 43 29 40 1 47\\r\\n', 'output': ['26673909\\r\\n312584066\\r\\n906195896\\r\\n646959648\\r\\n760799621\\r\\n285910157\\r\\n26673909\\r\\n334375582\\r\\n835938955\\r\\n264118641\\r\\n312584066\\r\\n96930850\\r\\n145396275\\r\\n717216589\\r\\n765682014\\r\\n48465425\\r\\n857730471\\r\\n123604759\\r\\n717216589\\r\\n642077255\\r\\n787473530\\r\\n501563373\\r\\n215653216\\r\\n765682014\\r\\n646959648\\r\\n108381283\\r\\n26673909\\r\\n48465425\\r\\n642077255\\r\\n884404380\\r\\n167187791\\r\\n26673909\\r\\n290792550\\r\\n646959648\\r\\n765682014\\r\\n75139334\\r\\n614792020\\r\\n172070184\\r\\n48465425\\r\\n528237282\\r\\n334375582\\r\\n571820314\\r\\n571820314\\r\\n528237282\\r\\n646959648\\r\\n884404380\\r\\n550028798\\r\\n242...']}, {'input': '50 50\\r\\n0 0 0 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 0 0\\r\\n45 49 17 22 28 34 24 38 5 46 22 36 11 12 43 21 47 39 38 38 38 27 10 49 19 46 23 7 46 35 11 38 25 16 7 32 12 13 44 14 41 36 7 31 4 46 40 28 28 46\\r\\n', 'output': ['644620779\\r\\n102973792\\r\\n443172276\\r\\n267699221\\r\\n201448503\\r\\n886344552\\r\\n745782947\\r\\n99391617\\r\\n196964962\\r\\n259647944\\r\\n267699221\\r\\n619552244\\r\\n632971787\\r\\n371547745\\r\\n416322096\\r\\n28657358\\r\\n254279678\\r\\n338433480\\r\\n344697565\\r\\n344697565\\r\\n99391617\\r\\n464664183\\r\\n143249062\\r\\n102973792\\r\\n548817985\\r\\n15237815\\r\\n129823972\\r\\n675048688\\r\\n259647944\\r\\n380510381\\r\\n756520580\\r\\n344697565\\r\\n984824810\\r\\n829936749\\r\\n675048688\\r\\n658045869\\r\\n371547745\\r\\n112811160\\r\\n535398442\\r\\n599846428\\r\\n188023413\\r\\n619552244\\r\\n299923214\\r\\n44774351\\r\\n956167452\\r\\n259647944\\r\\n577475343\\r...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47 47\\r\\n', 'output': ['529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n988406960\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n529479959\\r\\n52947...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\\r\\n', 'output': ['9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9\\r\\n9']}, {'input': '5 50\\r\\n1 1 1 1 1\\r\\n1 1 4 2 3\\r\\n', 'output': ['635246412\\r\\n635246412\\r\\n544496942\\r\\n272248471\\r\\n907494883']}, {'input': '10 50\\r\\n0 0 0 0 0 0 0 0 1 0\\r\\n3 1 3 3 1 3 1 2 2 1\\r\\n', 'output': ['187134581\\r\\n727874429\\r\\n187134581\\r\\n187134581\\r\\n727874429\\r\\n187134581\\r\\n727874429\\r\\n457504505\\r\\n124563167\\r\\n727874429']}, {'input': '20 50\\r\\n1 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1\\r\\n1 2 2 1 2 2 2 2 2 2 1 1 2 2 2 1 1 1 2 2\\r\\n', 'output': ['853605709\\r\\n708967065\\r\\n708967065\\r\\n853605709\\r\\n708967065\\r\\n708967065\\r\\n708967065\\r\\n922030188\\r\\n708967065\\r\\n922030188\\r\\n853605709\\r\\n853605709\\r\\n708967065\\r\\n922030188\\r\\n708967065\\r\\n461015094\\r\\n853605709\\r\\n853605709\\r\\n708967065\\r\\n708967065']}, {'input': '20 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 2 2 2 2 2 1 2 1 2 1 2 1 1 2 1 2 2 1\\r\\n', 'output': ['436731907\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n436731907\\r\\n873463814\\r\\n436731907\\r\\n873463814\\r\\n873463814\\r\\n436731907']}, {'input': '40 50\\r\\n0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0\\r\\n33 26 4 19 42 43 19 32 13 23 19 1 18 43 43 43 19 31 4 25 28 23 33 37 36 23 5 12 18 32 34 1 21 22 34 35 37 16 41 39\\r\\n', 'output': ['729284231\\r\\n60340485\\r\\n239647233\\r\\n389641092\\r\\n20685064\\r\\n829280137\\r\\n389641092\\r\\n918933511\\r\\n529292419\\r\\n629288325\\r\\n366487398\\r\\n808595073\\r\\n579290372\\r\\n829280137\\r\\n829280137\\r\\n41331201\\r\\n389641092\\r\\n110338438\\r\\n239647233\\r\\n249989765\\r\\n679286278\\r\\n629288325\\r\\n426374038\\r\\n968931464\\r\\n160336391\\r\\n629288325\\r\\n49997953\\r\\n718941699\\r\\n579290372\\r\\n918933511\\r\\n539634951\\r\\n808595073\\r\\n89829960\\r\\n818937605\\r\\n539634951\\r\\n349985671\\r\\n968931464\\r\\n958588932\\r\\n210334344\\r\\n589632904']}, {'input': '41 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 2 4 2 3 2 4 3 1 1 3 1 3 2 5 3 3 5 4 4 1 1 2 3 2 1 5 5 5 4 2 2 2 1 2 4 4 5 2 1 4\\r\\n', 'output': ['394710173\\r\\n789420346\\r\\n580596339\\r\\n789420346\\r\\n185886166\\r\\n789420346\\r\\n580596339\\r\\n185886166\\r\\n394710173\\r\\n394710173\\r\\n185886166\\r\\n394710173\\r\\n581788048\\r\\n789420346\\r\\n636898629\\r\\n185886166\\r\\n185886166\\r\\n975306512\\r\\n580596339\\r\\n580596339\\r\\n394710173\\r\\n394710173\\r\\n55110581\\r\\n185886166\\r\\n55110581\\r\\n394710173\\r\\n975306512\\r\\n975306512\\r\\n975306512\\r\\n580596339\\r\\n789420346\\r\\n789420346\\r\\n789420346\\r\\n394710173\\r\\n789420346\\r\\n580596339\\r\\n580596339\\r\\n975306512\\r\\n789420346\\r\\n394710173\\r\\n580596339']}, {'input': '42 50\\r\\n0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0\\r\\n2 4 6 8 1 3 6 1 4 1 3 4 3 7 6 6 8 7 4 1 7 4 6 9 3 1 9 7 1 2 9 3 1 6 1 5 1 8 2 6 8 8\\r\\n', 'output': ['11284873\\r\\n329090227\\r\\n33854619\\r\\n45139492\\r\\n504764613\\r\\n995500935\\r\\n33854619\\r\\n504764613\\r\\n22569746\\r\\n504764613\\r\\n516049486\\r\\n22569746\\r\\n516049486\\r\\n538619232\\r\\n33854619\\r\\n33854619\\r\\n45139492\\r\\n538619232\\r\\n22569746\\r\\n504764613\\r\\n538619232\\r\\n22569746\\r\\n33854619\\r\\n549904105\\r\\n516049486\\r\\n504764613\\r\\n549904105\\r\\n538619232\\r\\n504764613\\r\\n11284873\\r\\n990014099\\r\\n516049486\\r\\n504764613\\r\\n33854619\\r\\n504764613\\r\\n527334359\\r\\n504764613\\r\\n45139492\\r\\n663667290\\r\\n33854619\\r\\n45139492\\r\\n45139492']}, {'input': '43 50\\r\\n1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n13 7 13 15 8 9 11 1 15 9 3 7 3 15 4 7 7 16 9 13 12 16 16 1 5 5 14 5 17 2 1 13 4 13 10 17 17 6 11 15 14 3 6\\r\\n', 'output': ['175780254\\r\\n94650906\\r\\n163530008\\r\\n802992688\\r\\n561362014\\r\\n881093354\\r\\n522311681\\r\\n319731340\\r\\n802992688\\r\\n881093354\\r\\n959194020\\r\\n241630674\\r\\n959194020\\r\\n802992688\\r\\n280681007\\r\\n241630674\\r\\n241630674\\r\\n124479675\\r\\n881093354\\r\\n163530008\\r\\n842043021\\r\\n124479675\\r\\n124479675\\r\\n13521558\\r\\n600412347\\r\\n600412347\\r\\n483261348\\r\\n67607790\\r\\n444211015\\r\\n639462680\\r\\n319731340\\r\\n163530008\\r\\n280681007\\r\\n163530008\\r\\n202580341\\r\\n444211015\\r\\n444211015\\r\\n920143687\\r\\n522311681\\r\\n802992688\\r\\n483261348\\r\\n959194020\\r\\n920143687']}, {'input': '44 50\\r\\n0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\r\\n2 6 6 11 2 4 11 10 5 15 15 20 20 7 9 8 17 4 16 19 12 16 12 13 2 11 20 2 6 10 2 18 7 5 18 10 15 6 11 9 7 5 17 11\\r\\n', 'output': ['327775237\\r\\n983325711\\r\\n983325711\\r\\n305397274\\r\\n327775237\\r\\n853173373\\r\\n305397274\\r\\n640631832\\r\\n320315916\\r\\n960947748\\r\\n960947748\\r\\n272889453\\r\\n283019311\\r\\n648091153\\r\\n975866390\\r\\n312856595\\r\\n290478632\\r\\n655550474\\r\\n625713190\\r\\n618253869\\r\\n968407069\\r\\n625713190\\r\\n968407069\\r\\n633172511\\r\\n327775237\\r\\n305397274\\r\\n283019311\\r\\n327775237\\r\\n983325711\\r\\n640631832\\r\\n327775237\\r\\n953488427\\r\\n648091153\\r\\n816905628\\r\\n953488427\\r\\n640631832\\r\\n960947748\\r\\n983325711\\r\\n305397274\\r\\n975866390\\r\\n648091153\\r\\n320315916\\r\\n290478632\\r\\n305397274']}, {'input': '45 50\\r\\n0 1 0 1 0 1 0 1 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 1 0\\r\\n4 4 23 23 13 23 9 16 4 18 20 15 21 24 22 20 22 1 15 7 10 17 20 6 15 7 4 10 16 7 14 9 13 17 10 14 22 23 3 5 20 11 4 24 24\\r\\n', 'output': ['630266647\\r\\n555616275\\r\\n379739073\\r\\n948743787\\r\\n301438985\\r\\n948743787\\r\\n669416691\\r\\n225976394\\r\\n555616275\\r\\n340589029\\r\\n156600176\\r\\n835755590\\r\\n563727926\\r\\n786866823\\r\\n560278630\\r\\n781592669\\r\\n970855676\\r\\n388465157\\r\\n835755590\\r\\n853405544\\r\\n889918511\\r\\n614441551\\r\\n156600176\\r\\n446277794\\r\\n117450132\\r\\n853405544\\r\\n630266647\\r\\n78300088\\r\\n225976394\\r\\n722767393\\r\\n708566735\\r\\n669416691\\r\\n58825276\\r\\n931705632\\r\\n78300088\\r\\n708566735\\r\\n970855676\\r\\n948743787\\r\\n223138897\\r\\n39150044\\r\\n781592669\\r\\n280139315\\r\\n555616275\\r\\n338964591\\r\\n786866823']}, {'input': '46 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n29 22 30 33 13 31 19 11 12 21 5 4 24 21 20 6 28 16 27 18 21 11 3 24 21 8 8 33 24 7 34 12 13 32 26 33 33 22 18 2 3 7 24 17 9 30\\r\\n', 'output': ['265429165\\r\\n98093399\\r\\n859759619\\r\\n646262275\\r\\n738585431\\r\\n455845720\\r\\n311590743\\r\\n548168876\\r\\n144254977\\r\\n502007298\\r\\n975163564\\r\\n380833110\\r\\n288509954\\r\\n502007298\\r\\n905921197\\r\\n571249665\\r\\n669343064\\r\\n525088087\\r\\n75012610\\r\\n715504642\\r\\n502007298\\r\\n548168876\\r\\n784747009\\r\\n288509954\\r\\n502007298\\r\\n761666220\\r\\n761666220\\r\\n646262275\\r\\n288509954\\r\\n167335766\\r\\n242348376\\r\\n144254977\\r\\n738585431\\r\\n51931821\\r\\n478926509\\r\\n646262275\\r\\n646262275\\r\\n98093399\\r\\n715504642\\r\\n190416555\\r\\n784747009\\r\\n167335766\\r\\n288509954\\r\\n121174188\\r\\n357752321\\r\\n859759619']}, {'input': '47 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n30 32 21 7 15 4 39 36 23 17 13 4 8 18 38 24 13 27 37 27 32 16 8 12 7 23 28 38 11 36 19 33 10 34 4 8 5 22 3 29 21 30 7 32 35 26 23\\r\\n', 'output': ['243227082\\r\\n658739962\\r\\n369907828\\r\\n456050727\\r\\n121613541\\r\\n831025760\\r\\n116546336\\r\\n491521369\\r\\n785420708\\r\\n537126421\\r\\n704345014\\r\\n831025760\\r\\n663807167\\r\\n744882861\\r\\n907034249\\r\\n993177148\\r\\n704345014\\r\\n618202115\\r\\n699277809\\r\\n618202115\\r\\n658739962\\r\\n329369981\\r\\n663807167\\r\\n496588574\\r\\n456050727\\r\\n785420708\\r\\n825958555\\r\\n907034249\\r\\n288832134\\r\\n491521369\\r\\n952639301\\r\\n866496402\\r\\n81075694\\r\\n76008489\\r\\n831025760\\r\\n663807167\\r\\n40537847\\r\\n577664268\\r\\n623269320\\r\\n35470642\\r\\n369907828\\r\\n243227082\\r\\n456050727\\r\\n658739962\\r\\n283764929\\r\\n410445675\\r\\n785420708...']}, {'input': '48 50\\r\\n1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 1\\r\\n9 42 15 12 2 9 41 13 23 14 17 42 25 10 10 2 38 36 41 31 9 20 31 41 20 41 40 28 7 37 14 25 23 38 27 17 6 40 2 19 19 3 8 32 13 22 41 20\\r\\n', 'output': ['386033769\\r\\n373559702\\r\\n643389615\\r\\n677156688\\r\\n85785282\\r\\n507867516\\r\\n317129978\\r\\n557604333\\r\\n299639299\\r\\n790016136\\r\\n959305308\\r\\n803246569\\r\\n74071672\\r\\n564297240\\r\\n564297240\\r\\n112859448\\r\\n631676005\\r\\n34981358\\r\\n760353928\\r\\n751077091\\r\\n386033769\\r\\n130350127\\r\\n751077091\\r\\n760353928\\r\\n130350127\\r\\n760353928\\r\\n717461287\\r\\n581787919\\r\\n395008068\\r\\n91411082\\r\\n790016136\\r\\n412498747\\r\\n299639299\\r\\n631676005\\r\\n159856954\\r\\n959305308\\r\\n338578344\\r\\n717461287\\r\\n112859448\\r\\n814960179\\r\\n73920403\\r\\n169289172\\r\\n451437792\\r\\n807506815\\r\\n733586412\\r\\n243209575\\r\\n317129978\\r...']}, {'input': '49 50\\r\\n0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0\\r\\n2 3 2 3 4 2 1 1 1 1 1 1 3 1 2 3 2 4 1 2 2 1 1 2 4 3 2 4 1 2 1 1 2 3 1 3 3 2 2 1 4 3 4 1 3 3 4 1 3\\r\\n', 'output': ['136570933\\r\\n703978576\\r\\n136570933\\r\\n703978576\\r\\n273141866\\r\\n136570933\\r\\n567407643\\r\\n478951804\\r\\n567407643\\r\\n567407643\\r\\n478951804\\r\\n478951804\\r\\n703978576\\r\\n567407643\\r\\n136570933\\r\\n703978576\\r\\n136570933\\r\\n273141866\\r\\n567407643\\r\\n136570933\\r\\n136570933\\r\\n567407643\\r\\n567407643\\r\\n136570933\\r\\n273141866\\r\\n703978576\\r\\n957903608\\r\\n273141866\\r\\n567407643\\r\\n136570933\\r\\n567407643\\r\\n567407643\\r\\n136570933\\r\\n703978576\\r\\n567407643\\r\\n438611059\\r\\n438611059\\r\\n136570933\\r\\n136570933\\r\\n478951804\\r\\n273141866\\r\\n703978576\\r\\n917562863\\r\\n478951804\\r\\n703978576\\r\\n703978576\\r\\n27314...']}, {'input': '50 50\\r\\n0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\\r\\n1 9 24 8 8 11 21 11 8 5 16 32 31 15 29 14 16 20 5 18 5 10 31 23 21 4 4 20 20 11 1 4 4 15 9 14 5 30 13 16 32 27 19 10 19 24 21 1 21 15\\r\\n', 'output': ['475420905\\r\\n285810733\\r\\n429413837\\r\\n935878068\\r\\n808634181\\r\\n787710167\\r\\n1395475\\r\\n787710167\\r\\n808634181\\r\\n85801616\\r\\n619024009\\r\\n748779213\\r\\n762627113\\r\\n143603104\\r\\n896947114\\r\\n666426552\\r\\n619024009\\r\\n343206464\\r\\n380615819\\r\\n571621466\\r\\n380615819\\r\\n171603232\\r\\n132672278\\r\\n952237285\\r\\n1395475\\r\\n467939034\\r\\n467939034\\r\\n524218923\\r\\n343206464\\r\\n238408190\\r\\n616106935\\r\\n467939034\\r\\n467939034\\r\\n143603104\\r\\n285810733\\r\\n639542266\\r\\n85801616\\r\\n514809696\\r\\n23435331\\r\\n619024009\\r\\n748779213\\r\\n662977597\\r\\n725343882\\r\\n761231638\\r\\n48798018\\r\\n429413837\\r\\n959313399\\r\\n61...']}, {'input': '47 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39\\r\\n', 'output': ['573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n573459562\\r\\n57345...']}, {'input': '48 50\\r\\n1 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 0 0 1\\r\\n42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42\\r\\n', 'output': ['612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n612040887\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n271232481\\r\\n27123...']}, {'input': '49 50\\r\\n0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0\\r\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\\r\\n', 'output': ['371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n872512215\\r\\n872512215\\r\\n371008012\\r\\n371008012\\r\\n37100...']}, {'input': '50 50\\r\\n0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\\r\\n33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33\\r\\n', 'output': ['677141055\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141057\\r\\n677141057\\r\\n677141057\\r\\n677141055\\r\\n677141055\\r\\n677141055\\r\\n67714...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n982795629\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n834950403\\r\\n83495...']}, {'input': '50 50\\r\\n1 0 1 0 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 1 0 1 0 1 0 1 1 0 0 1 1 0 0 1 0 0 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n996306346\\r\\n996306346\\r\\n996306344\\r\\n996306344\\r\\n99630...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n584830027\\r\\n70582...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n', 'output': ['2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2\\r\\n2']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\r\\n', 'output': ['382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n798399400\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n382995896\\r\\n38299...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\r\\n', 'output': ['459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n533798960\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n459085224\\r\\n45908...']}, {'input': '50 50\\r\\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n273616393\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n311169062\\r\\n31116...']}, {'input': '50 50\\r\\n0 0 0 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 1 1 0 0\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['123180764\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n123180764\\r\\n123180766\\r\\n123180764\\r\\n12318...']}, {'input': '50 50\\r\\n0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['80661140\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858868\\r\\n286858...']}, {'input': '50 50\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\r\\n', 'output': ['51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51\\r\\n51']}, {'input': '5 5\\r\\n0 1 0 0 1\\r\\n2 4 1 2 1\\r\\n', 'output': ['665717847\\r\\n333191345\\r\\n831981100\\r\\n665717847\\r\\n831981101']}, {'input': '20 20\\r\\n0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 0\\r\\n109 1 24 122 136 42 25 112 110 15 26 48 35 10 86 13 41 6 24 15\\r\\n', 'output': ['217595927\\r\\n149660176\\r\\n322657182\\r\\n290143118\\r\\n388896876\\r\\n296261274\\r\\n86540143\\r\\n507489163\\r\\n979723241\\r\\n248413934\\r\\n896431517\\r\\n195977977\\r\\n246884395\\r\\n633562669\\r\\n891842900\\r\\n947337935\\r\\n146601098\\r\\n897961056\\r\\n597111165\\r\\n451221827']}, {'input': '100 100\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n2360379 9167688 488710 6896065 5243867 11762954 673012 1669264 265550 10921726 9383074 9523863 13429215 3223202 5372988 8197773 13052301 6045370 18630475 23534272 14923100 17181531 1112172 24623774 16991041 2363652 10720874 7171147 1261895 13127315 454592 1510882 12229327 15445105 15722482 5467131 92...', 'output': ['19790585\\r\\n929149870\\r\\n158142558\\r\\n415179791\\r\\n770973301\\r\\n197788614\\r\\n662208363\\r\\n968610058\\r\\n711622366\\r\\n89060603\\r\\n49510939\\r\\n593110743\\r\\n227455934\\r\\n197704062\\r\\n89005665\\r\\n237287745\\r\\n266986632\\r\\n365753331\\r\\n365877936\\r\\n464762563\\r\\n879788817\\r\\n148424226\\r\\n355820880\\r\\n830466826\\r\\n583301068\\r\\n553505420\\r\\n59407792\\r\\n988431747\\r\\n889537165\\r\\n425125094\\r\\n978481639\\r\\n494195332\\r\\n98957157\\r\\n850143163\\r\\n474568826\\r\\n889578801\\r\\n691943729\\r\\n751249179\\r\\n29723781\\r\\n385464681\\r\\n494219413\\r\\n968727719\\r\\n622687463\\r\\n929103141\\r\\n89090024\\r\\n563393484\\r\\n29714966\\r\\n484...']}, {'input': '1000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['652684471\\r\\n652684471\\r\\n959809060\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n652684471\\r\\n614249178\\r\\n307124589\\r\\n307124589\\r\\n307124589\\r\\n959809060\\r\\n652684471\\r\\n652684471\\r\\n959809060\\r\\n307124589\\r\\n307124589\\r\\n614249178\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n307124589\\r\\n307124589\\r\\n652684471\\r\\n268689296\\r\\n307124589\\r\\n959809060\\r\\n652684471\\r\\n307124589\\r\\n652684471\\r\\n614249178\\r\\n959809060\\r\\n652684471\\r\\n652684471\\r\\n307124589\\r\\n614249178\\r\\n307124589\\r\\n652684471\\r\\n652684471\\r\\n959809060\\r\\n307124589\\r\\n959809060\\r\\n307124589\\r\\n307124589\\r\\n959809060\\r\\n307124589\\r\\n95980...']}, {'input': '50000 1000\\r\\n1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 1 0 0 0 1 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 0 0 1 1 1 0 0 1 0 0 0 0 1 0 1 0 0 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 1 1 1 1 0 1 0 1 1 0 0 1 0 1 0 0 1 0 0 1 0 1 1 0 1 0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0...', 'output': ['512182090\\r\\n641172382\\r\\n697325018\\r\\n818311552\\r\\n590906119\\r\\n461103680\\r\\n370418391\\r\\n653972733\\r\\n766040380\\r\\n237657896\\r\\n893425807\\r\\n807372188\\r\\n964959592\\r\\n319396135\\r\\n111079234\\r\\n137994713\\r\\n9663504\\r\\n92358638\\r\\n965938119\\r\\n98687680\\r\\n675026792\\r\\n279244742\\r\\n15543727\\r\\n479206408\\r\\n519670811\\r\\n684652624\\r\\n777078382\\r\\n554151828\\r\\n865485075\\r\\n937290032\\r\\n565154228\\r\\n221807985\\r\\n218937300\\r\\n112386612\\r\\n310142313\\r\\n986922988\\r\\n267227503\\r\\n40988675\\r\\n369434552\\r\\n763776107\\r\\n694666611\\r\\n182771968\\r\\n494768207\\r\\n633944759\\r\\n635638470\\r\\n761724538\\r\\n162219074\\r\\n...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['967977965\\r\\n983111159\\r\\n952844771\\r\\n937711577\\r\\n937711577\\r\\n771246443\\r\\n483715757\\r\\n892311995\\r\\n967977965\\r\\n801512831\\r\\n846912413\\r\\n831779219\\r\\n967977965\\r\\n786379637\\r\\n892311995\\r\\n604781309\\r\\n710713667\\r\\n952844771\\r\\n952844771\\r\\n937711577\\r\\n874943312\\r\\n120519101\\r\\n892311995\\r\\n589648115\\r\\n619914503\\r\\n665314085\\r\\n374637533\\r\\n892311995\\r\\n937711577\\r\\n892311995\\r\\n650180891\\r\\n771246443\\r\\n922578383\\r\\n877178801\\r\\n483715757\\r\\n892311995\\r\\n952844771\\r\\n619914503\\r\\n574514921\\r\\n62834123\\r\\n907445189\\r\\n816646025\\r\\n846912413\\r\\n816646025\\r\\n937711577\\r\\n756113249\\r\\n846912...']}, {'input': '200000 3000\\r\\n0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 0 1 0 0 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 1 1 0 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 ...', 'output': ['568390992\\r\\n182388528\\r\\n352385861\\r\\n315979953\\r\\n743372559\\r\\n632628120\\r\\n995395434\\r\\n506334569\\r\\n667771666\\r\\n453192833\\r\\n680429762\\r\\n407446046\\r\\n471154985\\r\\n147648615\\r\\n936047905\\r\\n830053040\\r\\n251214636\\r\\n602162072\\r\\n263562703\\r\\n990790012\\r\\n150217484\\r\\n82075059\\r\\n932318671\\r\\n687474214\\r\\n345881774\\r\\n771937952\\r\\n356541287\\r\\n15233024\\r\\n811478946\\r\\n737405100\\r\\n892805310\\r\\n176354033\\r\\n997083988\\r\\n281716722\\r\\n628262667\\r\\n556117647\\r\\n359954433\\r\\n926451677\\r\\n992018326\\r\\n134736321\\r\\n139309832\\r\\n510415929\\r\\n125029199\\r\\n222157092\\r\\n859462710\\r\\n16077301\\r\\n83159806...']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 1 3 2 1 3 2 1 1 2 1 1 2 2 4 2 1 5 2 3\\r\\n', 'output': ['249561090\\r\\n249561090\\r\\n748683270\\r\\n499122180\\r\\n249561090\\r\\n748683270\\r\\n499122180\\r\\n249561090\\r\\n249561090\\r\\n499122180\\r\\n249561090\\r\\n249561090\\r\\n499122180\\r\\n499122180\\r\\n7\\r\\n499122180\\r\\n249561090\\r\\n249561097\\r\\n499122180\\r\\n748683270']}, {'input': '20 30\\r\\n1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n1 2 1 3 1 4 1 5 1 1 2 3 1 1 3 3 2 2 1 2\\r\\n', 'output': ['902255482\\r\\n806266611\\r\\n902255482\\r\\n710277740\\r\\n902255482\\r\\n537377994\\r\\n902255482\\r\\n518299998\\r\\n902255482\\r\\n902255482\\r\\n806266611\\r\\n710277740\\r\\n902255482\\r\\n902255482\\r\\n710277740\\r\\n710277740\\r\\n806266611\\r\\n806266611\\r\\n902255482\\r\\n806266611']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\\r\\n3 4 1 2 1 1 1 2 5 2 1 2 3 1 1 2 3 2 1 2\\r\\n', 'output': ['441078046\\r\\n920852179\\r\\n479774133\\r\\n959548266\\r\\n479774133\\r\\n479774133\\r\\n479774133\\r\\n959548266\\r\\n402381959\\r\\n263018694\\r\\n479774133\\r\\n959548266\\r\\n441078046\\r\\n479774133\\r\\n479774133\\r\\n959548266\\r\\n441078046\\r\\n959548266\\r\\n479774133\\r\\n959548266']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0\\r\\n1 1 3 2 3 1 2 2 3 2 2 2 2 2 2 3 3 1 1 2\\r\\n', 'output': ['550803098\\r\\n550803098\\r\\n654164941\\r\\n103361843\\r\\n654164941\\r\\n550803098\\r\\n103361843\\r\\n103361843\\r\\n654164941\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n103361843\\r\\n276551708\\r\\n654164941\\r\\n654164941\\r\\n138275854\\r\\n550803098\\r\\n103361843']}, {'input': '20 30\\r\\n0 0 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1\\r\\n1 2 2 2 2 2 1 1 2 1 4 1 2 5 3 4 1 1 2 1\\r\\n', 'output': ['297511613\\r\\n595023226\\r\\n756311680\\r\\n756311680\\r\\n756311680\\r\\n595023226\\r\\n297511613\\r\\n378155840\\r\\n595023226\\r\\n297511613\\r\\n514379007\\r\\n297511613\\r\\n595023226\\r\\n892534847\\r\\n136223167\\r\\n514379007\\r\\n378155840\\r\\n297511613\\r\\n595023226\\r\\n378155840']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n765 451 7275 385 1686 78 554 114 1980 394 776 232 627 760 782 7 486 32 1100 1516\\r\\n', 'output': ['491636110\\r\\n498623506\\r\\n486651408\\r\\n182179980\\r\\n6989399\\r\\n10980766\\r\\n871467875\\r\\n92836839\\r\\n509106603\\r\\n951327263\\r\\n211628580\\r\\n83852758\\r\\n11480438\\r\\n618912260\\r\\n58897200\\r\\n820057743\\r\\n605934809\\r\\n183676993\\r\\n948333237\\r\\n341401087']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1\\r\\n779 1317 1275 234 857 1531 785 265 679 767 1994 11 918 1146 1807 71 813 245 3926 580\\r\\n', 'output': ['552990868\\r\\n90431251\\r\\n712871250\\r\\n952916426\\r\\n537881559\\r\\n151361542\\r\\n321464532\\r\\n89445141\\r\\n86037605\\r\\n17799187\\r\\n586392419\\r\\n241031286\\r\\n40642277\\r\\n699465709\\r\\n481837969\\r\\n920500985\\r\\n572000768\\r\\n195703359\\r\\n903238702\\r\\n911489090']}, {'input': '20 30\\r\\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n128 574 205 490 611 1294 283 1690 1466 1896 272 19 1020 5032 357 1500 36 1749 1202 176\\r\\n', 'output': ['389864218\\r\\n157345415\\r\\n537589523\\r\\n962131647\\r\\n753565149\\r\\n104281847\\r\\n378440811\\r\\n873692367\\r\\n690552162\\r\\n658861420\\r\\n578900375\\r\\n198248582\\r\\n923070965\\r\\n228091231\\r\\n572635926\\r\\n887695253\\r\\n795942304\\r\\n70748620\\r\\n510359933\\r\\n785624388']}, {'input': '20 30\\r\\n1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0\\r\\n61 849 320 1007 624 441 1332 3939 1176 718 419 634 657 914 858 882 1019 1567 62 2521\\r\\n', 'output': ['514012356\\r\\n393871659\\r\\n166092575\\r\\n569465276\\r\\n74319433\\r\\n306884170\\r\\n254628439\\r\\n656312237\\r\\n485609669\\r\\n216694535\\r\\n825782618\\r\\n110704962\\r\\n294216114\\r\\n131255421\\r\\n733108087\\r\\n613768340\\r\\n14181299\\r\\n610566194\\r\\n624888021\\r\\n887363731']}, {'input': '20 30\\r\\n0 1 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 0 0\\r\\n244 1901 938 1350 1010 763 318 2158 1645 534 1356 563 295 1449 2306 224 1302 195 639 810\\r\\n', 'output': ['300071414\\r\\n595185476\\r\\n40756239\\r\\n113904636\\r\\n440148868\\r\\n947268885\\r\\n456535325\\r\\n542868956\\r\\n183161324\\r\\n427608407\\r\\n61171180\\r\\n375813928\\r\\n43680359\\r\\n55509680\\r\\n30410255\\r\\n360521133\\r\\n535772284\\r\\n722568686\\r\\n663107799\\r\\n390646234']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n126679203 179924771 16639504 67055540 14134870 36407782 15024189 39367944 121531542 5400023 5834434 8539193 3686913 11287136 36370086 71808281 138206490 59846864 19052959 21446598\\r\\n', 'output': ['615913610\\r\\n488825486\\r\\n773371096\\r\\n742795989\\r\\n193664548\\r\\n323188752\\r\\n32686082\\r\\n709701410\\r\\n293733249\\r\\n161181348\\r\\n193396792\\r\\n354491196\\r\\n708550409\\r\\n644392716\\r\\n323187536\\r\\n646345011\\r\\n487479735\\r\\n1930544\\r\\n322628919\\r\\n966734748']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\\r\\n144831196 28660251 62050800 52660762 23189000 12771861 73096012 25119113 119648684 16011144 51600638 74708999 6312006 26945863 68746869 58112898 5070 19157938 74351320 60263898\\r\\n', 'output': ['132556548\\r\\n711988928\\r\\n6999755\\r\\n208709864\\r\\n320161276\\r\\n865416376\\r\\n320896979\\r\\n458941660\\r\\n671806481\\r\\n158009043\\r\\n351362956\\r\\n78248147\\r\\n927871852\\r\\n882014191\\r\\n988190329\\r\\n830735503\\r\\n1958329\\r\\n787106839\\r\\n942059547\\r\\n341315444']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0\\r\\n34095514 37349809 60555988 40280455 19504485 77297461 41415742 66290058 20631093 185280391 7151718 64927972 15611855 4317891 24600598 24588269 60808977 9108470 13217752 191209824\\r\\n', 'output': ['313283482\\r\\n21804622\\r\\n682197550\\r\\n361027027\\r\\n756362680\\r\\n151917509\\r\\n716108102\\r\\n131732975\\r\\n237068086\\r\\n731869119\\r\\n190595295\\r\\n847684643\\r\\n847454143\\r\\n501579235\\r\\n129856516\\r\\n246699402\\r\\n205385635\\r\\n639100445\\r\\n614421017\\r\\n227076269']}, {'input': '20 30\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0\\r\\n9380933 34450681 12329733 7732927 73910078 16165679 149467043 56914401 21809098 36934833 71019254 168559440 12033996 40465391 7156881 3312348 37150678 130625432 42709585 66115911\\r\\n', 'output': ['813231583\\r\\n458087744\\r\\n445793615\\r\\n651101155\\r\\n484645642\\r\\n506668954\\r\\n896602699\\r\\n556862659\\r\\n145127201\\r\\n302005399\\r\\n558418033\\r\\n213871822\\r\\n57299634\\r\\n564466143\\r\\n767349204\\r\\n290138481\\r\\n12657688\\r\\n925337836\\r\\n827843024\\r\\n119362169']}, {'input': '20 30\\r\\n0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 0 1 0 1\\r\\n66166717 200301718 6725634 95379617 42880832 48874211 64912554 36809296 13248978 58406666 53142218 45080678 19902257 58554006 23570140 14484661 7589423 78746789 11072716 52395211\\r\\n', 'output': ['823107880\\r\\n742699237\\r\\n987770596\\r\\n549924308\\r\\n730188349\\r\\n913535291\\r\\n936423447\\r\\n122869154\\r\\n581668441\\r\\n749452306\\r\\n615454312\\r\\n176148736\\r\\n874336841\\r\\n897418997\\r\\n235568492\\r\\n24727530\\r\\n143875067\\r\\n15270097\\r\\n200154604\\r\\n356406452']}, {'input': '20 30\\r\\n0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661\\r\\n', 'output': ['76898501\\r\\n989279651\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501\\r\\n76898501']}, {'input': '20 30\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\r\\n5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803\\r\\n', 'output': ['504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981\\r\\n504888981']}, {'input': '2000 300\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1...', 'output': ['527557309\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n819771096\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n762900831\\r\\n762900831\\r\\n292213787\\r\\n762900831\\r\\n527557309\\r\\n292213787\\r\\n762900831\\r\\n292213787\\r\\n527557309\\r\\n762900831\\r\\n292213787\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n819771096\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n292213787\\r\\n762900831\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n527557309\\r\\n762900831\\r\\n762900831\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n762900831\\r\\n527557309\\r\\n76290...', '126026410\\r\\n26532090\\r\\n89545496\\r\\n348227668\\r\\n407921745\\r\\n822476105\\r\\n815841057\\r\\n129343473\\r\\n683184486\\r\\n182403525\\r\\n971714643\\r\\n669922973\\r\\n195669656\\r\\n643389211\\r\\n596958847\\r\\n991612114\\r\\n26531426\\r\\n494147799\\r\\n587007825\\r\\n646703323\\r\\n192353616\\r\\n198987665\\r\\n116075186\\r\\n208935334\\r\\n451035127\\r\\n991612774\\r\\n630129722\\r\\n673238446\\r\\n965081504\\r\\n404604334\\r\\n762781111\\r\\n945182265\\r\\n613540647\\r\\n855640163\\r\\n540577710\\r\\n739563385\\r\\n185720640\\r\\n13265829\\r\\n460984258\\r\\n182404969\\r\\n988297561\\r\\n726301539\\r\\n301795019\\r\\n46434122\\r\\n882170987\\r\\n533948601\\r\\n729615799\\r...', '257947573\\r\\n350833899\\r\\n998147431\\r\\n282054341\\r\\n689337877\\r\\n802790225\\r\\n636332064\\r\\n611526839\\r\\n405886622\\r\\n295781176\\r\\n577883978\\r\\n211877869\\r\\n476761551\\r\\n471920813\\r\\n313000296\\r\\n8886097\\r\\n165109708\\r\\n231143899\\r\\n91489412\\r\\n972042214\\r\\n584771626\\r\\n771892731\\r\\n841370746\\r\\n736106038\\r\\n702414716\\r\\n368751476\\r\\n510452873\\r\\n253155296\\r\\n619859862\\r\\n14376831\\r\\n37833603\\r\\n94933236\\r\\n485696109\\r\\n96233228\\r\\n33691322\\r\\n403791251\\r\\n233190809\\r\\n447164049\\r\\n173248887\\r\\n549683390\\r\\n863382143\\r\\n717538465\\r\\n704413165\\r\\n210480955\\r\\n414122723\\r\\n922528686\\r\\n131321464\\r\\n40...', '723727157\\r\\n723727157\\r\\n898419922\\r\\n449209961\\r\\n898419922\\r\\n174692765\\r\\n723727157\\r\\n723727157\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n174692765\\r\\n723727157\\r\\n174692765\\r\\n723727157\\r\\n723727157\\r\\n623902726\\r\\n723727157\\r\\n723727157\\r\\n449209961\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n174692765\\r\\n723727157\\r\\n449209961\\r\\n349385530\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n723727157\\r\\n449209961\\r\\n449209961\\r\\n449209961\\r\\n623902726\\r\\n449209961\\r\\n449209961\\r\\n898419922\\r\\n898419922\\r\\n723727157\\r\\n449209961\\r\\n723727157\\r\\n723727157\\r\\n723727157\\r\\n174692765\\r\\n17469...', '449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n449543865\\r\\n44954...', '228892698\\r\\n323233274\\r\\n31331450\\r\\n583630535\\r\\n530020844\\r\\n200867506\\r\\n762566026\\r\\n461091654\\r\\n900597519\\r\\n687197433\\r\\n232025843\\r\\n294169404\\r\\n557699810\\r\\n988325579\\r\\n966739790\\r\\n633933968\\r\\n156657250\\r\\n762046687\\r\\n338898999\\r\\n134379009\\r\\n458304735\\r\\n975792999\\r\\n343970609\\r\\n589896825\\r\\n188161813\\r\\n733675269\\r\\n708610109\\r\\n303222613\\r\\n919742615\\r\\n718701996\\r\\n235158988\\r\\n5746951\\r\\n831841442\\r\\n194601216\\r\\n389029319\\r\\n946729129\\r\\n65449819\\r\\n768486090\\r\\n213226973\\r\\n847160941\\r\\n853773457\\r\\n913476325\\r\\n847334054\\r\\n435334042\\r\\n997551901\\r\\n781018670\\r\\n847334054...', '280562572\\r\\n27981324\\r\\n930424996\\r\\n580126064\\r\\n653672085\\r\\n638998124\\r\\n192370181\\r\\n304975360\\r\\n268606553\\r\\n887998181\\r\\n902057157\\r\\n419880164\\r\\n965999027\\r\\n37849969\\r\\n655704617\\r\\n915939588\\r\\n290316653\\r\\n133632797\\r\\n916310849\\r\\n291352554\\r\\n315435621\\r\\n753760137\\r\\n617080324\\r\\n863678858\\r\\n719694519\\r\\n658038314\\r\\n750307459\\r\\n915589744\\r\\n530437886\\r\\n512060713\\r\\n157922588\\r\\n178644172\\r\\n5715303\\r\\n194942404\\r\\n852097346\\r\\n696406228\\r\\n891303846\\r\\n489183600\\r\\n892182349\\r\\n437838373\\r\\n390449491\\r\\n931412865\\r\\n520118475\\r\\n724052962\\r\\n624309238\\r\\n315358057\\r\\n157108994...']}, {'input': '2000 300\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...', 'output': ['510770111\\r\\n586552453\\r\\n521518610\\r\\n729496815\\r\\n925336870\\r\\n218501419\\r\\n210003823\\r\\n721775463\\r\\n410294316\\r\\n59753754\\r\\n445916833\\r\\n149785626\\r\\n397166471\\r\\n850878761\\r\\n322612228\\r\\n400512598\\r\\n962933991\\r\\n238352988\\r\\n481795882\\r\\n312429269\\r\\n230724223\\r\\n668360989\\r\\n538774766\\r\\n7521020\\r\\n782227455\\r\\n932947153\\r\\n766620629\\r\\n621895347\\r\\n948462500\\r\\n49828435\\r\\n465611859\\r\\n508795684\\r\\n965408363\\r\\n876217222\\r\\n27461852\\r\\n849541586\\r\\n889517699\\r\\n887546242\\r\\n347913548\\r\\n274305965\\r\\n434804057\\r\\n916014055\\r\\n822187302\\r\\n339400794\\r\\n604867800\\r\\n368133826\\r\\n799958426\\r...', '738045334\\r\\n159282105\\r\\n578763229\\r\\n578763229\\r\\n477846315\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n738045334\\r\\n159282105\\r\\n578763229\\r\\n738045334\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n738045334\\r\\n578763229\\r\\n578763229\\r\\n578763229\\r\\n159282105\\r\\n578763229\\r\\n318564210\\r\\n578763229\\r\\n578763229\\r\\n159282105\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n159282105\\r\\n578763229\\r\\n159282105\\r\\n738045334\\r\\n578763229\\r\\n159282105\\r\\n159282105\\r\\n578763229\\r\\n738045334\\r\\n159282105\\r\\n738045334\\r\\n318564210\\r\\n73804...', '536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n536539890\\r\\n53653...', '544865927\\r\\n362689553\\r\\n554047941\\r\\n662901553\\r\\n528631083\\r\\n623245685\\r\\n408599623\\r\\n383515404\\r\\n454842332\\r\\n96411147\\r\\n49835799\\r\\n979215047\\r\\n123957189\\r\\n241194187\\r\\n232012173\\r\\n930510515\\r\\n682596137\\r\\n940690446\\r\\n985602599\\r\\n592905181\\r\\n837226469\\r\\n463026429\\r\\n366947921\\r\\n259890854\\r\\n259558215\\r\\n423037922\\r\\n336940056\\r\\n739152127\\r\\n906091574\\r\\n273663875\\r\\n103463977\\r\\n218239152\\r\\n323832313\\r\\n988397061\\r\\n861312771\\r\\n369742383\\r\\n261687399\\r\\n997579075\\r\\n494364850\\r\\n668490477\\r\\n306599552\\r\\n268740229\\r\\n776878100\\r\\n482521724\\r\\n140192033\\r\\n252172746\\r\\n5279658...', '156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n52020618\\r\\n104041236\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n156061854\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n208082472\\r\\n208082472\\r\\n104041236\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n156061854\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n52020618\\r\\n156061854\\r\\n104041236\\r\\n52020618\\r\\n104041236\\r\\n104041236\\r\\n104041236\\r\\n156061854\\r\\n52020618\\r...', '696015721\\r\\n931773777\\r\\n559486112\\r\\n847360916\\r\\n520999237\\r\\n330674091\\r\\n901387332\\r\\n817005789\\r\\n311776972\\r\\n19589756\\r\\n894472615\\r\\n644360731\\r\\n540588993\\r\\n761762342\\r\\n387103251\\r\\n712279217\\r\\n24626123\\r\\n870308250\\r\\n487286532\\r\\n403104550\\r\\n728773592\\r\\n564260282\\r\\n775161336\\r\\n604919022\\r\\n382066884\\r\\n133895986\\r\\n14584707\\r\\n323728056\\r\\n371794589\\r\\n189832070\\r\\n664212684\\r\\n375120849\\r\\n841631912\\r\\n277833388\\r\\n899970740\\r\\n674023221\\r\\n550168651\\r\\n205864687\\r\\n292155898\\r\\n484652909\\r\\n899246785\\r\\n641496229\\r\\n604195067\\r\\n520275282\\r\\n140579824\\r\\n200828320\\r\\n88943624...', '381761597\\r\\n749914123\\r\\n734966985\\r\\n451112838\\r\\n254375974\\r\\n408043495\\r\\n50147455\\r\\n317426730\\r\\n691474180\\r\\n297424671\\r\\n16576556\\r\\n950550287\\r\\n615062290\\r\\n508772409\\r\\n574097914\\r\\n755479957\\r\\n504073337\\r\\n232598914\\r\\n376960541\\r\\n704800943\\r\\n722703963\\r\\n943084953\\r\\n852281936\\r\\n604167024\\r\\n430991955\\r\\n691776511\\r\\n979477939\\r\\n916779041\\r\\n928976757\\r\\n9004809\\r\\n66623088\\r\\n160364271\\r\\n569831785\\r\\n753768578\\r\\n10158931\\r\\n829943628\\r\\n860984852\\r\\n599688760\\r\\n746963293\\r\\n90503616\\r\\n665117495\\r\\n843614199\\r\\n773004798\\r\\n52464119\\r\\n40225734\\r\\n193061049\\r\\n476979003\\r\\n451...']}, {'input': '2000 300\\r\\n1 1 1 0 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 1 0...', 'output': ['520991218\\r\\n260495609\\r\\n781486827\\r\\n281527765\\r\\n460706912\\r\\n260495609\\r\\n43738083\\r\\n819065206\\r\\n639886059\\r\\n260495609\\r\\n639886059\\r\\n520991218\\r\\n520991218\\r\\n639886059\\r\\n819065206\\r\\n520991218\\r\\n639886059\\r\\n819065206\\r\\n639886059\\r\\n43738083\\r\\n781486827\\r\\n260495609\\r\\n520991218\\r\\n781486827\\r\\n819065206\\r\\n639886059\\r\\n281527765\\r\\n819065206\\r\\n460706912\\r\\n260495609\\r\\n639886059\\r\\n260495609\\r\\n304233692\\r\\n781486827\\r\\n260495609\\r\\n260495609\\r\\n43738083\\r\\n260495609\\r\\n639886059\\r\\n260495609\\r\\n819065206\\r\\n520991218\\r\\n520991218\\r\\n639886059\\r\\n639886059\\r\\n460706912\\r\\n26049560...']}, {'input': '2000 300\\r\\n1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 1 1 0 1 0 1 0 0 0 1 1 0 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 1 0 0 1 0 1 0 1 0 1 0 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 1 1 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1...', 'output': ['967309723\\r\\n488979754\\r\\n894231131\\r\\n227079250\\r\\n800673042\\r\\n803173636\\r\\n302660701\\r\\n49359452\\r\\n361182334\\r\\n613837368\\r\\n903714465\\r\\n783149148\\r\\n772569418\\r\\n153771444\\r\\n347053203\\r\\n383800081\\r\\n305903959\\r\\n591371347\\r\\n504143617\\r\\n554819601\\r\\n711091639\\r\\n993123371\\r\\n662636534\\r\\n799549517\\r\\n755795853\\r\\n257472564\\r\\n749178682\\r\\n44165553\\r\\n754769201\\r\\n677121173\\r\\n77251408\\r\\n825363165\\r\\n94378162\\r\\n905743915\\r\\n555723948\\r\\n401067893\\r\\n365827394\\r\\n778249947\\r\\n641361749\\r\\n657808321\\r\\n76885722\\r\\n205390090\\r\\n357248290\\r\\n762413024\\r\\n471855369\\r\\n953559875\\r\\n452364595\\r...']}, {'input': '2000 300\\r\\n1 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 0 1 0 0 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 1 0 1 0 1 0 0 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 0 0 1 0 0 0 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 0 0 1 1 0 1...', 'output': ['353668818\\r\\n180952778\\r\\n350267066\\r\\n85276305\\r\\n498935339\\r\\n570367769\\r\\n947922902\\r\\n520199571\\r\\n977020824\\r\\n311854081\\r\\n369942273\\r\\n709342799\\r\\n241020253\\r\\n306637091\\r\\n574362410\\r\\n924893301\\r\\n259050261\\r\\n881412462\\r\\n505397126\\r\\n426307000\\r\\n368001455\\r\\n187561592\\r\\n507502858\\r\\n422600821\\r\\n840032307\\r\\n570586935\\r\\n847077944\\r\\n633577890\\r\\n21924242\\r\\n429617104\\r\\n40169532\\r\\n200231692\\r\\n301247265\\r\\n526536756\\r\\n236599712\\r\\n449404280\\r\\n482154139\\r\\n74891321\\r\\n744845075\\r\\n202529472\\r\\n497487224\\r\\n750227627\\r\\n791509388\\r\\n365064757\\r\\n435991351\\r\\n911452637\\r\\n230155510...']}, {'input': '200000 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n830309264\\r\\n83030...', '746090912\\r\\n987874942\\r\\n493937471\\r\\n493937471\\r\\n241784030\\r\\n493937471\\r\\n746090912\\r\\n241784030\\r\\n746090912\\r\\n987874942\\r\\n493937471\\r\\n241784030\\r\\n493937471\\r\\n493937471\\r\\n987874942\\r\\n493937471\\r\\n987874942\\r\\n746090912\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n493937471\\r\\n493937471\\r\\n483568060\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n241784030\\r\\n746090912\\r\\n746090912\\r\\n987874942\\r\\n493937471\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n746090912\\r\\n493937471\\r\\n746090912\\r\\n746090912\\r\\n746090912\\r\\n241784030\\r\\n493937471\\r\\n746090912\\r\\n241784030\\r\\n493937471\\r\\n49393...', '249477932\\r\\n163324885\\r\\n619370540\\r\\n591761649\\r\\n381202278\\r\\n400495236\\r\\n181619933\\r\\n483987183\\r\\n768059384\\r\\n853879792\\r\\n648642618\\r\\n525566838\\r\\n955999425\\r\\n754753895\\r\\n409143808\\r\\n470016419\\r\\n322658124\\r\\n100123809\\r\\n150684670\\r\\n101454359\\r\\n634006577\\r\\n229187060\\r\\n466357410\\r\\n35592186\\r\\n769389935\\r\\n547853534\\r\\n85820409\\r\\n289061762\\r\\n201245531\\r\\n244821008\\r\\n910095485\\r\\n40581744\\r\\n910760760\\r\\n733797749\\r\\n450390828\\r\\n440079067\\r\\n811634863\\r\\n573799237\\r\\n619703176\\r\\n460037301\\r\\n90144696\\r\\n512261348\\r\\n656958547\\r\\n636002401\\r\\n271099351\\r\\n573799237\\r\\n748766427...', '337242164\\r\\n175981139\\r\\n705993748\\r\\n951319188\\r\\n208728534\\r\\n926966446\\r\\n894219051\\r\\n142402527\\r\\n394342301\\r\\n747271382\\r\\n832167014\\r\\n925728471\\r\\n915824671\\r\\n371227534\\r\\n265828671\\r\\n404110515\\r\\n737503168\\r\\n526705442\\r\\n275596885\\r\\n225789012\\r\\n140757794\\r\\n548311062\\r\\n834642964\\r\\n960680644\\r\\n982693022\\r\\n298440480\\r\\n97139796\\r\\n357880981\\r\\n649164783\\r\\n74025029\\r\\n270644985\\r\\n37970467\\r\\n945129313\\r\\n422137796\\r\\n739979118\\r\\n389390401\\r\\n815106536\\r\\n311922619\\r\\n858860120\\r\\n411267193\\r\\n976503147\\r\\n835880939\\r\\n13346553\\r\\n661137775\\r\\n978979097\\r\\n527943417\\r\\n707231723...', '895547075\\r\\n50488475\\r\\n972784199\\r\\n737802803\\r\\n134349212\\r\\n579628449\\r\\n120501272\\r\\n588315405\\r\\n599840552\\r\\n714837825\\r\\n262849659\\r\\n448375127\\r\\n596572279\\r\\n172710075\\r\\n108458976\\r\\n317466571\\r\\n845058600\\r\\n348860806\\r\\n506174996\\r\\n501269960\\r\\n76979425\\r\\n561049607\\r\\n754144168\\r\\n500496863\\r\\n56852638\\r\\n736253107\\r\\n323142953\\r\\n631062404\\r\\n987492303\\r\\n864152840\\r\\n155163780\\r\\n16686131\\r\\n341291713\\r\\n213479047\\r\\n623578627\\r\\n815212310\\r\\n74571316\\r\\n580316230\\r\\n11782846\\r\\n9977202\\r\\n56164857\\r\\n453363728\\r\\n283577160\\r\\n112674480\\r\\n770828548\\r\\n441236116\\r\\n475210843\\r\\n997...', '743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n743696736\\r\\n74369...', '743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n743692044\\r\\n74369...', '34499784\\r\\n374247743\\r\\n362747815\\r\\n297560637\\r\\n574121750\\r\\n869682055\\r\\n449997441\\r\\n458622387\\r\\n930182193\\r\\n940681955\\r\\n376622642\\r\\n28249737\\r\\n622933686\\r\\n969931858\\r\\n400622664\\r\\n671871138\\r\\n811807848\\r\\n331623096\\r\\n223311188\\r\\n305748258\\r\\n203623639\\r\\n439935004\\r\\n185436339\\r\\n481622243\\r\\n517559518\\r\\n585621678\\r\\n66124586\\r\\n679996001\\r\\n894244918\\r\\n45999712\\r\\n243436062\\r\\n887057463\\r\\n525184298\\r\\n990056732\\r\\n154311620\\r\\n198873841\\r\\n227623661\\r\\n430809975\\r\\n12937419\\r\\n194561368\\r\\n140374035\\r\\n610059025\\r\\n715495951\\r\\n677058261\\r\\n731308352\\r\\n710120554\\r\\n143749100\\r...', '743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n743697003\\r\\n74369...', '563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n563659040\\r\\n56365...', '948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n948860384\\r\\n94886...', '616415891\\r\\n743692045\\r\\n743692045\\r\\n616415891\\r\\n489139737\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n870968199\\r\\n616415891\\r\\n743692045\\r\\n616415891\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n489139737\\r\\n870968199\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n616415891\\r\\n743692045\\r\\n743692045\\r\\n743692045\\r\\n361863583\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n870968199\\r\\n870968199\\r\\n616415891\\r\\n870968199\\r\\n743692045\\r\\n743692045\\r\\n107311275\\r\\n743692045\\r\\n870968199\\r\\n870968199\\r\\n87096...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['534464893\\r\\n70685433\\r\\n141370866\\r\\n605150326\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n605150326\\r\\n605150326\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n141370866\\r\\n70685433\\r\\n534464893\\r\\n141370866\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n534464893\\r\\n70685433\\r\\n70685433\\r\\n605150326\\r\\n70685433\\r\\n70685433\\r\\n70685433\\r\\n...', '434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n434349889\\r\\n43434...', '479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n479343004\\r\\n47934...', '983882738\\r\\n723119688\\r\\n459823065\\r\\n556901314\\r\\n70724963\\r\\n266615302\\r\\n669551615\\r\\n128160584\\r\\n374823721\\r\\n636048406\\r\\n410086236\\r\\n880577836\\r\\n119251355\\r\\n80183061\\r\\n594759171\\r\\n13376576\\r\\n422252375\\r\\n548479185\\r\\n235532967\\r\\n555429175\\r\\n697576973\\r\\n194705367\\r\\n244991065\\r\\n696417466\\r\\n575930209\\r\\n911572937\\r\\n690252582\\r\\n173917166\\r\\n286156762\\r\\n203240195\\r\\n371392343\\r\\n232850391\\r\\n10955702\\r\\n65159878\\r\\n81942367\\r\\n928468125\\r\\n286592932\\r\\n499727395\\r\\n803102816\\r\\n81855133\\r\\n235158566\\r\\n824901521\\r\\n295851097\\r\\n716980269\\r\\n913157775\\r\\n996485047\\r\\n807919099\\r\\n4...', '535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n535630737\\r\\n53563...', '483259721\\r\\n483259721\\r\\n451534810\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n709027126\\r\\n483259721\\r\\n966519442\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n740752037\\r\\n225767405\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n451534810\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n966519442\\r\\n225767405\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n740752037\\r\\n483259721\\r\\n740752037\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n483259721\\r\\n225767405\\r\\n740752037\\r\\n483259721\\r\\n225767405\\r\\n740752037\\r\\n74075...', '365182673\\r\\n453133330\\r\\n646237559\\r\\n383557795\\r\\n419033749\\r\\n340436101\\r\\n116418016\\r\\n678527788\\r\\n945667567\\r\\n79030627\\r\\n870994872\\r\\n815130278\\r\\n370916978\\r\\n677151415\\r\\n467150520\\r\\n882361399\\r\\n890542201\\r\\n249936864\\r\\n39196741\\r\\n947579002\\r\\n636680384\\r\\n295607138\\r\\n675342063\\r\\n808325849\\r\\n29104504\\r\\n25918779\\r\\n103037971\\r\\n291784268\\r\\n445589673\\r\\n215200138\\r\\n658241231\\r\\n704446567\\r\\n478414964\\r\\n374535682\\r\\n193639291\\r\\n871632017\\r\\n186732779\\r\\n291784268\\r\\n138616008\\r\\n491795009\\r\\n475331322\\r\\n689894315\\r\\n243667497\\r\\n853256895\\r\\n714003742\\r\\n774124185\\r\\n363271238...', '985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n985422205\\r\\n98542...', '155925765\\r\\n487818429\\r\\n547205425\\r\\n780737503\\r\\n891037610\\r\\n578930143\\r\\n825301017\\r\\n138861660\\r\\n552655747\\r\\n896394864\\r\\n881431780\\r\\n167493014\\r\\n480546290\\r\\n147428613\\r\\n697960072\\r\\n762448385\\r\\n870903408\\r\\n251332589\\r\\n614973238\\r\\n898519152\\r\\n581333635\\r\\n223833180\\r\\n271513325\\r\\n829479792\\r\\n130457576\\r\\n488950374\\r\\n631091534\\r\\n259853008\\r\\n403102846\\r\\n643511524\\r\\n491144463\\r\\n683066789\\r\\n279987210\\r\\n916459265\\r\\n497517327\\r\\n461078693\\r\\n513286618\\r\\n11055375\\r\\n943036132\\r\\n453946156\\r\\n770116063\\r\\n285321197\\r\\n954649915\\r\\n686299755\\r\\n305432132\\r\\n314991428\\r\\n917591...', '979248391\\r\\n467909552\\r\\n175190733\\r\\n498757573\\r\\n436634896\\r\\n282945489\\r\\n831422982\\r\\n525572199\\r\\n608769567\\r\\n291190788\\r\\n623553625\\r\\n907228321\\r\\n19120025\\r\\n908756352\\r\\n635157558\\r\\n367120190\\r\\n895500325\\r\\n121864053\\r\\n271093430\\r\\n805461626\\r\\n799170993\\r\\n621048261\\r\\n209948086\\r\\n214834751\\r\\n291190788\\r\\n88084033\\r\\n941559039\\r\\n256433435\\r\\n462472189\\r\\n261870798\\r\\n718354926\\r\\n62673375\\r\\n599120300\\r\\n207566785\\r\\n71042737\\r\\n669914911\\r\\n844128311\\r\\n594233635\\r\\n758976277\\r\\n186492094\\r\\n238841441\\r\\n949377703\\r\\n280013490\\r\\n621474896\\r\\n309333480\\r\\n356245464\\r\\n817740320...']}, {'input': '200000 3000\\r\\n0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 1 1 1 0 1 1 0 0 1 0 0 0 1 1 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 1 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 0 1 0 0 1 0 0 0 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 0 0 1 0 0 0 1 1 0 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 ...', 'output': ['684128648\\r\\n534537704\\r\\n70831055\\r\\n605368759\\r\\n605368759\\r\\n534537704\\r\\n55897238\\r\\n70831055\\r\\n534537704\\r\\n534537704\\r\\n605368759\\r\\n684128648\\r\\n55897238\\r\\n740025886\\r\\n534537704\\r\\n70831055\\r\\n70831055\\r\\n684128648\\r\\n70831055\\r\\n684128648\\r\\n425910181\\r\\n70831055\\r\\n605368759\\r\\n534537704\\r\\n534537704\\r\\n605368759\\r\\n684128648\\r\\n70831055\\r\\n684128648\\r\\n605368759\\r\\n70831055\\r\\n370012943\\r\\n370012943\\r\\n370012943\\r\\n605368759\\r\\n70831055\\r\\n534537704\\r\\n70831055\\r\\n370012943\\r\\n141662110\\r\\n534537704\\r\\n370012943\\r\\n370012943\\r\\n70831055\\r\\n684128648\\r\\n370012943\\r\\n684128648\\r\\n5345377...']}, {'input': '200000 3000\\r\\n1 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 1 1 0 1 1 1 1 0 0 1 0 1 0 0 1 0 1 1 0 1 0 1 1 0 0 1 1 0 0 1 0 1 0 1 1 0 0 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 1 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 0 1 0 0 0 1 1 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 1 ...', 'output': ['331265679\\r\\n248932636\\r\\n609274319\\r\\n474255977\\r\\n102055814\\r\\n485644908\\r\\n626044190\\r\\n431097835\\r\\n319780031\\r\\n47044666\\r\\n687413158\\r\\n404806427\\r\\n125126455\\r\\n282606731\\r\\n307585492\\r\\n584577913\\r\\n604465119\\r\\n366599088\\r\\n490459582\\r\\n11853006\\r\\n753101524\\r\\n749114305\\r\\n816668970\\r\\n25465595\\r\\n942396724\\r\\n387086401\\r\\n558715961\\r\\n470999022\\r\\n908318742\\r\\n535377307\\r\\n712631115\\r\\n501708418\\r\\n465458062\\r\\n906281962\\r\\n309027298\\r\\n466289495\\r\\n88346508\\r\\n21689911\\r\\n46580591\\r\\n650678352\\r\\n435081076\\r\\n202663995\\r\\n554027989\\r\\n280201535\\r\\n865380747\\r\\n516485969\\r\\n226759102\\r\\n...']}, {'input': '200000 3000\\r\\n0 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 ...', 'output': ['702758762\\r\\n222668721\\r\\n663197048\\r\\n675792950\\r\\n759259581\\r\\n332486741\\r\\n171127920\\r\\n414458191\\r\\n349087590\\r\\n847918503\\r\\n522872021\\r\\n540727038\\r\\n813504457\\r\\n278812310\\r\\n949679696\\r\\n784095578\\r\\n918470307\\r\\n482110597\\r\\n535952792\\r\\n109088580\\r\\n967478176\\r\\n268019403\\r\\n523209396\\r\\n80286422\\r\\n566422901\\r\\n182974112\\r\\n166764579\\r\\n716767192\\r\\n203579125\\r\\n975507557\\r\\n770975186\\r\\n884777286\\r\\n433828625\\r\\n891459014\\r\\n519109900\\r\\n907459392\\r\\n591988953\\r\\n479131884\\r\\n989822907\\r\\n846824242\\r\\n304414023\\r\\n13755521\\r\\n6710438\\r\\n355497544\\r\\n718926904\\r\\n912736930\\r\\n173287893...']}, {'input': '10 3000\\r\\n1 1 1 1 1 0 0 0 1 1\\r\\n6 22 5 2 4 15 4 7 31 4\\r\\n', 'output': ['561258918\\r\\n61460660\\r\\n467715765\\r\\n187086306\\r\\n374172612\\r\\n538110090\\r\\n143496024\\r\\n251118042\\r\\n903349037\\r\\n374172612']}, {'input': '100 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\r\\n10 8 1 9 7 5 12 9 15 7 16 5 17 5 17 21 11 3 4 4 30 17 3 84 12 30 2 8 2 2 22 24 15 11 15 13 7 17 1 12 8 4 3 6 5 15 1 3 4 2 27 3 11 11 3 3 3 5 14 2 5 13 6 2 6 5 6 19 3 16 4 12 11 2 2 3 25 14 6 11 22 4 10 32 9 19 14 2 2 3 4 3 2 5 18 14 2 7 3 8\\r\\n', 'output': ['23677346\\r\\n418239618\\r\\n800963217\\r\\n220958482\\r\\n615520754\\r\\n11838673\\r\\n627359427\\r\\n220958482\\r\\n35516019\\r\\n615520754\\r\\n836479236\\r\\n11838673\\r\\n639198100\\r\\n11838673\\r\\n639198100\\r\\n848317909\\r\\n824640563\\r\\n406400945\\r\\n209119809\\r\\n209119809\\r\\n71032038\\r\\n639198100\\r\\n406400945\\r\\n398538577\\r\\n627359427\\r\\n71032038\\r\\n603682081\\r\\n418239618\\r\\n19778681\\r\\n603682081\\r\\n651036773\\r\\n256474501\\r\\n35516019\\r\\n824640563\\r\\n35516019\\r\\n430078291\\r\\n615520754\\r\\n639198100\\r\\n800963217\\r\\n627359427\\r\\n418239618\\r\\n209119809\\r\\n406400945\\r\\n812801890\\r\\n11838673\\r\\n35516019\\r\\n800963217\\r\\n406400...']}, {'input': '1000 3000\\r\\n0 0 1 0 1 0 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 ...', 'output': ['984664827\\r\\n971085301\\r\\n837724678\\r\\n984664827\\r\\n225735001\\r\\n971085301\\r\\n984664827\\r\\n611989677\\r\\n65215326\\r\\n611989677\\r\\n837724678\\r\\n984664827\\r\\n225735001\\r\\n984664827\\r\\n971085301\\r\\n225735001\\r\\n225735001\\r\\n984664827\\r\\n971085301\\r\\n957505775\\r\\n971085301\\r\\n984664827\\r\\n943926249\\r\\n225735001\\r\\n971085301\\r\\n611989677\\r\\n837724678\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n984664827\\r\\n971085301\\r\\n943926249\\r\\n943926249\\r\\n611989677\\r\\n971085301\\r\\n984664827\\r\\n957505775\\r\\n971085301\\r\\n225735001\\r\\n971085301\\r\\n971085301\\r\\n225735001\\r\\n837724678\\r\\n611989...']}, {'input': '1000 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n5\\r\\n5\\r\\n499122184\\r\\n10\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122184\\r\\n5\\r\\n499122184\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122179\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122184\\r\\n5\\r\\n499122179\\r\\n5\\r\\n499122179\\r\\n499122184\\r\\n499122184\\r\\n5...']}, {'input': '199990 3000\\r\\n1 0 0 1 0 1 1 0 0 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 0 1 1 0 0 1 0 0 1 1 0 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 0 0 1 0 1 0 ...', 'output': ['646452156\\r\\n960868656\\r\\n118518242\\r\\n184272685\\r\\n747024268\\r\\n964037469\\r\\n951101180\\r\\n377347150\\r\\n254993892\\r\\n11139421\\r\\n70322210\\r\\n525571057\\r\\n926475930\\r\\n63428346\\r\\n756018063\\r\\n626131891\\r\\n466781454\\r\\n656042659\\r\\n69698706\\r\\n359694160\\r\\n226813875\\r\\n191435355\\r\\n897230167\\r\\n851910875\\r\\n872964055\\r\\n741910138\\r\\n963242791\\r\\n859073545\\r\\n501205753\\r\\n252469038\\r\\n77916365\\r\\n622358084\\r\\n867246600\\r\\n381481659\\r\\n57646031\\r\\n326439010\\r\\n37314488\\r\\n267966014\\r\\n386173645\\r\\n224253188\\r\\n693822089\\r\\n652063749\\r\\n209704954\\r\\n936775840\\r\\n675102836\\r\\n581756207\\r\\n18809453\\r\\n84...']}, {'input': '199991 3000\\r\\n1 0 1 0 0 1 1 0 0 1 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 1 ...', 'output': ['576788803\\r\\n851579816\\r\\n464431389\\r\\n925910539\\r\\n240339104\\r\\n317886519\\r\\n67707478\\r\\n262772669\\r\\n221595177\\r\\n612937974\\r\\n736137684\\r\\n268724388\\r\\n68361383\\r\\n847191682\\r\\n557301933\\r\\n913346054\\r\\n648280739\\r\\n171995554\\r\\n235269506\\r\\n530242292\\r\\n148650394\\r\\n908499525\\r\\n304200830\\r\\n721371958\\r\\n474031015\\r\\n817280262\\r\\n825707282\\r\\n465373250\\r\\n245622892\\r\\n341231679\\r\\n845696111\\r\\n853007293\\r\\n68361383\\r\\n915771149\\r\\n987480726\\r\\n726171771\\r\\n707992711\\r\\n478931968\\r\\n847890178\\r\\n687514833\\r\\n732279394\\r\\n927044872\\r\\n856499296\\r\\n862463110\\r\\n77307104\\r\\n484794642\\r\\n615409785...']}, {'input': '199992 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 ...', 'output': ['944579271\\r\\n815447430\\r\\n121435610\\r\\n89385736\\r\\n85360285\\r\\n56962924\\r\\n289585947\\r\\n344015172\\r\\n223771444\\r\\n652123221\\r\\n591303048\\r\\n4248454\\r\\n306743823\\r\\n968709911\\r\\n670850059\\r\\n672191876\\r\\n417953645\\r\\n24521845\\r\\n946915719\\r\\n777789018\\r\\n60838440\\r\\n839186865\\r\\n79733480\\r\\n134590444\\r\\n755625163\\r\\n504520550\\r\\n752912502\\r\\n172585260\\r\\n452314215\\r\\n812559060\\r\\n865646468\\r\\n584772439\\r\\n717751255\\r\\n344015172\\r\\n217454686\\r\\n551825\\r\\n985330789\\r\\n733776192\\r\\n951920831\\r\\n371680341\\r\\n447096882\\r\\n332238689\\r\\n688429333\\r\\n390729899\\r\\n623930596\\r\\n453096625\\r\\n858100172\\r\\n14638...']}, {'input': '199993 3000\\r\\n1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...', 'output': ['189220773\\r\\n219328456\\r\\n767760662\\r\\n806220888\\r\\n797979411\\r\\n545740580\\r\\n219383989\\r\\n75297991\\r\\n40929720\\r\\n935115229\\r\\n532004785\\r\\n529257626\\r\\n49282263\\r\\n789793467\\r\\n545740580\\r\\n962586819\\r\\n485358615\\r\\n471678353\\r\\n907699172\\r\\n803473729\\r\\n408604762\\r\\n963918788\\r\\n35602001\\r\\n847372740\\r\\n611561330\\r\\n216636830\\r\\n729467035\\r\\n298885001\\r\\n73784562\\r\\n95928433\\r\\n405857603\\r\\n312620796\\r\\n126147182\\r\\n518268990\\r\\n353717115\\r\\n501841569\\r\\n512830205\\r\\n685568024\\r\\n252294364\\r\\n962586819\\r\\n477172671\\r\\n252637898\\r\\n246744513\\r\\n434391811\\r\\n52084955\\r\\n807039242\\r\\n414043547\\r\\n2...']}, {'input': '199994 3000\\r\\n0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 1 0 0 1 1 0 0 1 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 0 1 0 1 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 ...', 'output': ['336654971\\r\\n732535\\r\\n815250185\\r\\n326444659\\r\\n729180253\\r\\n129624924\\r\\n358796707\\r\\n444866639\\r\\n754810869\\r\\n843551608\\r\\n256744726\\r\\n70820418\\r\\n164515107\\r\\n207034102\\r\\n575220043\\r\\n87535002\\r\\n682699176\\r\\n43984065\\r\\n797070531\\r\\n806189316\\r\\n815982720\\r\\n704840912\\r\\n900587582\\r\\n585042405\\r\\n921264248\\r\\n459213067\\r\\n352526818\\r\\n883140463\\r\\n815669240\\r\\n511377385\\r\\n785483692\\r\\n225259507\\r\\n505565288\\r\\n832271475\\r\\n46481077\\r\\n860266192\\r\\n560703064\\r\\n99613410\\r\\n150730663\\r\\n410704936\\r\\n704840912\\r\\n915837096\\r\\n953960881\\r\\n968477860\\r\\n589004487\\r\\n187389378\\r\\n517884662\\r\\n93...']}, {'input': '199995 3000\\r\\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 ...', 'output': ['662762303\\r\\n929872487\\r\\n874878479\\r\\n456275271\\r\\n715183658\\r\\n400437516\\r\\n521458497\\r\\n76578537\\r\\n927594887\\r\\n897280874\\r\\n185062970\\r\\n530346011\\r\\n941267798\\r\\n71793140\\r\\n377419134\\r\\n675559304\\r\\n591654880\\r\\n719511098\\r\\n599406031\\r\\n622421976\\r\\n250476393\\r\\n605557988\\r\\n772627865\\r\\n133099572\\r\\n594620634\\r\\n848508553\\r\\n404542070\\r\\n193952921\\r\\n255031593\\r\\n40568087\\r\\n771704693\\r\\n756662785\\r\\n869935052\\r\\n847369753\\r\\n36238210\\r\\n358730629\\r\\n164552385\\r\\n938076721\\r\\n767600139\\r\\n458579571\\r\\n693757159\\r\\n843723156\\r\\n975014694\\r\\n858992824\\r\\n955398666\\r\\n756432588\\r\\n585958443...']}, {'input': '199996 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 ...', 'output': ['670876956\\r\\n282683795\\r\\n377011834\\r\\n803395587\\r\\n676385588\\r\\n935914218\\r\\n718622147\\r\\n536417373\\r\\n403228588\\r\\n282205508\\r\\n715874782\\r\\n593703261\\r\\n180906172\\r\\n125082949\\r\\n159213672\\r\\n79114647\\r\\n828013417\\r\\n919922217\\r\\n269261194\\r\\n677998414\\r\\n539957249\\r\\n116020539\\r\\n719578721\\r\\n947915860\\r\\n933837007\\r\\n911830283\\r\\n475864127\\r\\n320232037\\r\\n207122926\\r\\n915004383\\r\\n801796663\\r\\n301300804\\r\\n489000308\\r\\n929955103\\r\\n208735752\\r\\n169096397\\r\\n431236133\\r\\n485282467\\r\\n675865595\\r\\n711172563\\r\\n31711484\\r\\n780760415\\r\\n330893371\\r\\n339149368\\r\\n107928605\\r\\n630648538\\r\\n1150500...']}, {'input': '199997 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...', 'output': ['509540793\\r\\n120976575\\r\\n549866318\\r\\n103886913\\r\\n46471726\\r\\n486304930\\r\\n356783524\\r\\n889560180\\r\\n199228995\\r\\n889560180\\r\\n825998792\\r\\n728258080\\r\\n40325525\\r\\n723460820\\r\\n584045642\\r\\n849234655\\r\\n398457990\\r\\n44073096\\r\\n355733835\\r\\n753892573\\r\\n259042812\\r\\n526630455\\r\\n218717287\\r\\n69707589\\r\\n445979405\\r\\n843088454\\r\\n549866318\\r\\n900503641\\r\\n915194673\\r\\n110033114\\r\\n233408319\\r\\n632915998\\r\\n443580775\\r\\n883413979\\r\\n356783524\\r\\n63561388\\r\\n314059369\\r\\n628118738\\r\\n543720117\\r\\n420344912\\r\\n705022217\\r\\n89195881\\r\\n535175286\\r\\n987300892\\r\\n72106219\\r\\n543720117\\r\\n785673267\\r\\n2...', '791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n791536630\\r\\n79153...']}, {'input': '199998 3000\\r\\n1 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 1 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 1 1 1 0 0 1 0 1 0 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 1 0 0 1 0 0 1 1 1 1 0 0 1 1 0 0 ...', 'output': ['728321596\\r\\n638956912\\r\\n987568459\\r\\n799092377\\r\\n597086927\\r\\n782772546\\r\\n770287170\\r\\n255784080\\r\\n699516389\\r\\n256762390\\r\\n656812813\\r\\n513524780\\r\\n416026596\\r\\n285567597\\r\\n279669471\\r\\n136357125\\r\\n790734343\\r\\n479381626\\r\\n898668365\\r\\n822581531\\r\\n870855601\\r\\n827897584\\r\\n408064799\\r\\n759611276\\r\\n235779603\\r\\n990282556\\r\\n571135194\\r\\n279669471\\r\\n311516659\\r\\n287631268\\r\\n607109724\\r\\n822559637\\r\\n639460200\\r\\n369129744\\r\\n111968446\\r\\n157186402\\r\\n495141278\\r\\n652212868\\r\\n143815634\\r\\n367752526\\r\\n165008822\\r\\n592117981\\r\\n400788425\\r\\n793754430\\r\\n966900453\\r\\n2484473\\r\\n9089752...', '964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n278374139\\r\\n278374139\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n964927693\\r\\n278374139\\r\\n964927693\\r\\n96492...']}, {'input': '199999 3000\\r\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 ...', 'output': ['659992102\\r\\n43534688\\r\\n613251861\\r\\n688791385\\r\\n969096633\\r\\n244584877\\r\\n407865304\\r\\n186960964\\r\\n243317864\\r\\n549539932\\r\\n991833247\\r\\n262687380\\r\\n543128826\\r\\n494636937\\r\\n223625258\\r\\n610530943\\r\\n823731817\\r\\n148706567\\r\\n321255216\\r\\n793342431\\r\\n574351284\\r\\n666241663\\r\\n731705240\\r\\n759075965\\r\\n574351284\\r\\n267483036\\r\\n533214424\\r\\n650213898\\r\\n38254397\\r\\n748651581\\r\\n341432457\\r\\n458755021\\r\\n851102542\\r\\n458618823\\r\\n777016923\\r\\n879306339\\r\\n831596828\\r\\n223948348\\r\\n334458632\\r\\n214654779\\r\\n250672893\\r\\n599162636\\r\\n601914362\\r\\n888897651\\r\\n620419998\\r\\n546470577\\r\\n2155987...', '959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n550771238\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n550771238\\r\\n959626450\\r\\n959626450\\r\\n959626450\\r\\n95962...']}, {'input': '200000 3000\\r\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 ...', 'output': ['893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n917300718\\r\\n917300718\\r\\n917300718\\r\\n893407370\\r\\n893407370\\r\\n893407370\\r\\n89340...', '777798569\\r\\n231173131\\r\\n230887037\\r\\n573284389\\r\\n184819702\\r\\n389069614\\r\\n336642733\\r\\n374568480\\r\\n855432105\\r\\n25206655\\r\\n4356888\\r\\n605147597\\r\\n575616793\\r\\n296362756\\r\\n407873071\\r\\n112177054\\r\\n213967495\\r\\n814007752\\r\\n159623960\\r\\n280717246\\r\\n614422648\\r\\n758973286\\r\\n52239134\\r\\n765343745\\r\\n464084652\\r\\n192059356\\r\\n447272940\\r\\n617899428\\r\\n590679202\\r\\n570104616\\r\\n874554395\\r\\n774321789\\r\\n991301706\\r\\n991873894\\r\\n397156637\\r\\n113523353\\r\\n617052059\\r\\n46639523\\r\\n446403745\\r\\n35361814\\r\\n921640272\\r\\n891146426\\r\\n273084002\\r\\n58808253\\r\\n533015325\\r\\n30707919\\r\\n154980978\\r\\n71...']}, {'input': '200000 3000\\r\\n1 0 0 0 0 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 0 0 0 1 0 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 1 0 1 0 0 1 0 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 1 0 ...', 'output': ['203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n712662175\\r\\n203557555\\r\\n712662175\\r\\n203557555\\r\\n203557555\\r\\n71266...']}, {'input': '200000 3000\\r\\n0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 1 0 1 0 1 1 1 0 0 0 1 0 1 1 0 1 1 0 0 0 1 0 1 1 0 0 0 1 0 1 0 1 0 0 1 0 1 0 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 0 1 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 0 1 1 0 1 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 0 1 1 1 1 1 1 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 0 1 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 ...', 'output': ['532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n532284272\\r\\n23179652\\r\\n532284272\\r\\n23179652\\r\\n23179652\\r\\n532284272\\r\\n532284272\\r\\n53...']}]", "source_code": "import sys\ninput = sys.stdin.readline\n\nn,m = map(int,input().split())\na = list(map(int,input().split()))\nw = list(map(int,input().split()))\n\ns = sum(w)\n\np = 0\nq = 0\n\nfor i in range(n):\n    if a[i] == 0:\n        p += w[i]\n    else:\n        q += w[i]\n\np = (p + m) % 998244353\nq = (q + m) % 998244353\n\nans = [0]*n\n\nfor i in range(n):\n    if a[i] == 0:\n        ans[i] = (q * pow(p,998244353-2,998244353) + w[i]) % 998244353\n    else:\n        ans[i] = (p * pow(q,998244353-2,998244353) + w[i]) % 998244353\n\nfor i in ans:\n    print(i)\n"}
{"src_uid": "c16c49baf7b2d179764871204475036e", "id": 166, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1900, "testcases": "[{'input': '?01???\\r\\n', 'output': ['4\\r\\n']}, {'input': '?\\r\\n', 'output': ['2\\r\\n']}, {'input': '**12\\r\\n', 'output': ['0\\r\\n']}, {'input': '1\\r\\n', 'output': ['0\\r\\n']}, {'input': '?01*??****\\r\\n', 'output': ['4\\r\\n']}, {'input': '0\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n', 'output': ['0\\r\\n']}, {'input': '*\\r\\n', 'output': ['1\\r\\n']}, {'input': '0*\\r\\n', 'output': ['0\\r\\n']}, {'input': '0?\\r\\n', 'output': ['1\\r\\n']}, {'input': '01\\r\\n', 'output': ['0\\r\\n']}, {'input': '1*\\r\\n', 'output': ['1\\r\\n']}, {'input': '1?\\r\\n', 'output': ['1\\r\\n']}, {'input': '?1?\\r\\n', 'output': ['2\\r\\n']}, {'input': '12\\r\\n', 'output': ['0\\r\\n']}, {'input': '2*\\r\\n', 'output': ['0\\r\\n']}, {'input': '2?\\r\\n', 'output': ['0\\r\\n']}, {'input': '2??\\r\\n', 'output': ['0\\r\\n']}, {'input': '?2?\\r\\n', 'output': ['1\\r\\n']}, {'input': '?2*?2*??1*2**?2*1???*2???100?????*???*?*????0????2?*?*?1??1??*?01**2**1001??**??**??1*?*???00??**??*\\r\\n', 'output': ['147483634\\r\\n']}, {'input': '00***???01\\r\\n', 'output': ['0\\r\\n']}, {'input': '21?20*0000?2?22??0001*?1??12?20020200?**0*12?*221*0*1200*?0*11?022*110*2*2022120*2*2100*0?0*02?012?1\\r\\n', 'output': ['0\\r\\n']}]", "source_code": "import sys\n\ndef main():\n    s = sys.stdin.readline().strip()\n    n = len(s)\n    if n == 1:\n        if s == '?':\n            print(2)\n        else:\n            print(0)\n        return\n    if s[0] == '*':\n        s = '0' + s\n        n += 1\n    if s[-1] == '*':\n        s += '0'\n        n += 1\n    if s[0] == '?':\n        s = '0' + s\n        n += 1\n    if s[-1] == '?':\n        s += '0'\n        n += 1\n    if s[0] == '0' and s[1] == '0':\n        print(0)\n        return\n    if s[-1] == '0' and s[-2] == '0':\n        print(0)\n        return\n    if s[0] == '1' and s[1] == '1':\n        print(0)\n        return\n    if s[-1] == '1' and s[-2] == '1':\n        print(0)\n        return\n    if s[0] == '2' and s[1] == '2':\n        print(0)\n        return\n    if s[-1] == '2' and s[-2] == '2':\n        print(0)\n        return\n    if s[0] == '*' and s[1] == '*':\n        print(0)\n        return\n    if s[-1] == '*' and s[-2] == '*':\n        print(0)\n        return\n    if s[0] == '?' and s[1] == '?':\n        print(2)\n        return\n    if s[-1] == '?' and s[-2] == '?':\n        print(2)\n        return\n    if s[0] == '*' and s[1] == '?':\n        print(2)\n        return\n    if s[-1] == '*' and s[-2] == '?':\n        print(2)\n        return\n    if s[0] == '?' and s[1] == '*':\n        print(2)\n        return\n    if s[-1] == '?' and s[-2] == '*':\n        print(2)\n        return\n    if s[0] == '0' and s[1] == '?':\n        print(2)\n        return\n    if s[-1] == '0' and s[-2] == '?':\n        print(2)\n        return\n    if s[0] == '1' and s[1] == '?':\n        print(2)\n        return\n    if s[-1] == '1' and s[-2] == '?':\n        print(2)\n        return\n    if s[0] == '2' and s[1] == '?':\n        print(2)\n        return\n    if s[-1] == '2' and s[-2] == '?':\n        print(2)\n        return\n    if s[0] == '?' and s[1] == '0':\n        print(2)\n        return\n    if s[-1] == '?' and s[-2] == '0':\n        print(2)\n        return\n    if s[0] == '*' and s[1] == '0':\n        print(2)\n        return\n    if s[-1] == '*' and s[-2] == '0':\n        print(2)\n        return\n    if s[0] == '?' and s[1] == '1':\n        print(2)\n        return\n    if s[-1] == '?' and s[-2] == '1':\n        print(2)\n        return\n    if s[0] == '*' and s[1] == '1':\n        print(2)\n        return\n    if s[-1] == '*' and s[-2] == '1':\n        print(2)\n        return\n    if s[0] == '?' and s[1] == '2':\n        print(2)\n        return\n    if s[-1] == '?' and s[-2] == '2':\n        print(2)\n        return\n    if s[0] == '*' and s[1] == '2':\n        print(2)\n        return\n    if s[-1] == '*' and s[-2] == '2':\n        print(2)\n        return\n    if s[0] == '0' and s[1] == '1':\n        print(0)\n        return\n    if s[-1] == '0' and s[-2] == '1':\n        print(0)\n        return\n    if s[0] == '1' and s[1] == '0':\n        print(0)\n        return\n    if s[-1] == '1' and s[-2] == '0':\n        print(0)\n        return\n    if s[0] == '0' and s[1] == '2':\n        print(0)\n        return\n    if s[-1] == '0' and s[-2] == '2':\n        print(0)\n        return\n    if s[0] == '2' and s[1] == '0':\n        print(0)\n        return\n    if s[-1] == '2' and s[-2] == '0':\n        print(0)\n        return\n    if s[0] == '1' and s[1] == '2':\n        print(0)\n        return\n    if s[-1] == '1' and s[-2] == '2':\n        print(0)\n        return\n    if s[0] == '2' and s[1] == '1':\n        print(0)\n        return\n    if s[-1] == '2' and s[-2] == '1':\n        print(0)\n        return\n    if s[0] == '?' and s[1] == '?':\n        print(4)\n        return\n    if s[-1] == '?' and s[-2] == '?':\n        print(4)\n        return\n    if s[0] == '*' and s[1] == '?':\n        print(4)\n        return\n    if s[-1] == '*' and s[-2] == '?':\n        print(4)\n        return\n    if s[0] == '?' and s[1] == '*':\n        print(4)\n        return\n    if s[-1] == '?' and s[-2] == '*':\n        print(4)\n        return\n    if s[0] == '*' and s[1] == '0':\n        print(4)\n        return\n    if s[-1] == '*' and s[-2] == '0':\n        print(4)\n        return\n    if s[0] == '?' and s[1] == '1':\n        print(4)\n        return\n    if s[-1] == '?' and s[-2] == '1':\n        print(4)\n        return\n    if s[0] == '*' and s[1] == '1':\n        print(4)\n        return\n    if s[-1] == '*' and s[-2] == '1':\n        print(4)\n        return\n    if s[0] == '?' and s[1] == '2':\n        print(4)\n        return\n    if s[-1] == '?' and s[-2] == '2':\n        print(4)\n        return\n    if s[0] == '*' and s[1] == '2':\n        print(4)\n        return\n    if s[-1] == '*' and s[-2] == '2':\n        print(4)\n        return\n    if s[0] == '0' and s[1] == '1':\n        print(0)\n        return\n    if s[-1] == '0' and s[-2] == '1':\n        print(0)\n        return\n    if s[0] == '1' and s[1] == '0':\n        print(0)\n        return\n    if s[-1] == '1' and s[-2] == '0':\n        print(0)\n        return\n    if s[0] == '0' and s[1] == '2':\n        print(0)\n        return\n    if s[-1] == '0' and s[-2] =="}
{"src_uid": "34b67958a37865e1ca0529bbf528dd9a", "id": 167, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1900, "testcases": "[{'input': '198\\r\\n', 'output': ['981\\r\\n819']}, {'input': '500\\r\\n', 'output': ['500\\r\\n500']}, {'input': '1061\\r\\n', 'output': ['1160\\r\\n1160', '6110\\r\\n6110']}, {'input': '1099\\r\\n', 'output': ['9901\\r\\n1099']}, {'input': '4877\\r\\n', 'output': ['4778\\r\\n4778', '8774\\r\\n8774']}, {'input': '787027\\r\\n', 'output': ['877720\\r\\n777280']}, {'input': '7665711\\r\\n', 'output': ['7766115\\r\\n7766115']}, {'input': '670042\\r\\n', 'output': ['672400\\r\\n427600']}, {'input': '87417\\r\\n', 'output': ['77481\\r\\n77418', '87741\\r\\n87741', '14778\\r\\n14778']}, {'input': '27183007\\r\\n', 'output': ['78721300\\r\\n31278700']}, {'input': '2603340571199714716025114079373828413509944752618962350632892540710372640383149198328312562980217104434880337288055817064\\r\\n', 'output': ['9444433333332219999999998888888888888777777777776666666655555555544444444433333333222222222221111111111111000000000100000\\r\\n4444333333322110000000001111111111111222222222223333333344444444455555555566666666777777777778888888888888999999999900000', '4444333333322109999999999888888888888877777777777666666665555555554444444443333333322222222222111111111111100000000010000\\r\\n4444333333322110000000000111111111111122222222222333333334444444445555555556666666677777777777888888888888899999999990000']}, {'input': '8679647744\\r\\n', 'output': ['9877766444\\r\\n9877764446']}, {'input': '220737406285\\r\\n', 'output': ['877654322200\\r\\n222345677800']}, {'input': '993522733475817\\r\\n', 'output': ['997533877542213\\r\\n995333122457787']}, {'input': '5057017252180797906185\\r\\n', 'output': ['7765551998877221100500\\r\\n7765551001122778899500']}, {'input': '12414711447744142772\\r\\n', 'output': ['11111222444444477777\\r\\n11111222444444477777', '77444444411111777222\\r\\n77444444411111222777', '77777444444422211111\\r\\n77777444444422211111']}, {'input': '3037225037514100860827276704\\r\\n', 'output': ['7887777665544332222113000000\\r\\n3112222334455667777887000000']}, {'input': '346762409573609367635944363650432097309\\r\\n', 'output': ['774499999776666666555444333333322000003\\r\\n744300000223333333444555666666677999997']}, {'input': '21504009080570645002760268009722803470954749000131\\r\\n', 'output': ['69999888777776655554444332222211100004000000000000\\r\\n40000111222223344445555667777788899996000000000000']}, {'input': '3311314413231141411421432122343321141133112122342341334443214\\r\\n', 'output': ['4444444444444433333333333333332222222222211111111111111111111\\r\\n4444444444444433333333333333332222222222211111111111111111111', '1111111111111111111122222222222333333333333333344444444444444\\r\\n1111111111111111111122222222222333333333333333344444444444444']}, {'input': '9070901003919040000887091134838800004472724709967020097067025050205000220352709096100405900207957128\\r\\n', 'output': ['7999999999999888888777777777766655555544444433322222222221111110000000000003000000000000000000000000\\r\\n3000000000000111111222222222233344444455555566677777777778888889999999999997000000000000000000000000']}, {'input': '41818138314831348134448848318148131818813388313344833114141141184383813143343448843131343384181384844431384114113314313144848133488818418384818848341344811441811141313448341888341118488811314338434488\\r\\n', 'output': ['88888888888888888888888888888888888888888888888888844444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111\\r\\n88888888888888888888888888888888888888888888888888844444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111', '11111111111111111111111111111111111111111111111111111133333333333333333333333333333333333333333333344444444444444444444444444444444444444444444444444888888888888888888888888888888888888888888888888888\\r\\n11111111111111111111111111111111111111111111111111111...', '44444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111888888888888888888888888888888888888888888888888888111111111111111111111111111111111111111111111111111\\r\\n44444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333111111111111111111111111111111111111111111111111111111888888888888888888888888888888888888888888888888888']}, {'input': '73552900025351606679224588872327647961330089042655630665222580520508672870102563487600132539752481214659858863022476410484266570139810532470714984092503934751571221521306943121997450187110428026190962582430971693370613087381790614697689671767000004095232276975952292053272119035138483846537407714434012224979098527763281110363860729062927455745190194649\\r\\n', 'output': ['66655222222221111111199999999999999999999999999999999988888888888888888888888888877777777777777777777777777777777777776666666666666666666666666666666555555555555555555555555555555544444444444444444444444444444443333333333333333333333333333333222222222222222222222222222222222222211111111111111111111111111100000000000000000000000000000000050000000000000\\r\\n666552222222211111111000000000000000000000000000000000111111111111111111111111111222222222222222222222222222222222222233333333333333333333333333333334444444...']}, {'input': '3660060360865606405406648718470765048005409506710925001850101061700007022407913434780234609002664580600302035550131007145010003815754853838580300966004029000300434981894159106340481587649046330570701648116012056320463003313141680800500509429100191307403765300801130020535489060555504004005803272823494700970010952879008030098004480465890588039380501581078422931611654908930340540303783403661632050700948101050151020160623940430284004280902060684751066629489507855752580027410505650019760020009138500203642800308...', 'output': ['8999999999999999999999999999999999888888888888888888888888888888888888888888888888888777777777777777777777777777777777666666666666666666666666666666666666666666666666666665555555555555555555555555555555555555555555555555555555554444444444444444444444444444444444444444444444444444444443333333333333333333333333333333333333333333333333333322222222222222222222222222222222211111111111111111111111111111111111111111111111111100000000000000000000000000000000020000000000000000000000000000000000000000000000000000000...']}, {'input': '3988405032201869838583516133943649897563464963199720203573666195109254972807095125585153139107836315540802254503122202208671231062969287785325745149827780975637820846694844717512181082423246460831153198676512327424647704185170864814344819230405434252307112870463387306341417126663194715993207482864102823774828380347931676663905538788367741598351252166769604140992179418820043419699163449596439979329298654494702555801641339987965927031928141345579024032222443566448480995335779507500358684011237604341216194860...', 'output}, {'input': '5562193853810918945620627929172131555837473643554362967763887812413927487628705169826152884386226149418373951049986250969308862515359891001338285242920050910490906828048000561263856034031835539717283086698037020184346364592477218030068494838985393388772969774556866175869082513319040937289891361048143148841837267534830052901494206187747905771299059141380597767985198813756458221849136120811572042106826621666519843756406853641666119992871613251441378811527654575794639431472815236597945545443592839760099142175...', 'output}, {'input': '1730422676082588834860375440897683748061653034160089035356410303853087273043400007064082808873506818021832173796672909286031070430706710420988411005000807994008004024283001700960690091562564065800969314020467274006854259128883092106143502490180340506154995307707013371796800069059205904006180070480509165819304195087071960902368005201049042530842923912727019572672086010287001109827122078050756623098907147400115030307257820452003056013088910107770590352130772036869022135230000406249627027600081343058909708407...', 'output}, {'input': '1188618183388611381111868863636138313333318818183316831361113811386318881168331361688618161613168636818383186336633113388318838136613388313111138111638188133138611181663863163386311813118638838866886113361631311686863836336863366813363683838881686613163833833813818131863311861368333636631363361331668363336363133666111611188181133381186813313311188138316336861381168838138611618113313831613331631133161186833631636661616388613133631666888311386383811818886633183161338681333381366386313631818363861111388386336...', 'output': ['3333333333333333333333333333333333333333111188888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666...', '8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666333333333333333333333333333333333...']}, {'input': '4243694432732244021095331595848137532367241195639191582163152600248271436184171538206044964067675106064159822875846011534297438582909683899088886549812421326048203391195680776887732457754143569028983164195293260537822023061273285507094731086855967279325960871356767018241344379707565856468765648033087664400397093527921657664579022705211823347324199918200113662278819911280201671779336001809547757878558876551737537928583698853638809689051510513192892880892879923602951533842587693618320930509403954665244464014...', 'output}, {'input': '5437214130838098132393123187069383986299021704931433096622499682915037838279737829812626065978576360754157333866084773073470536769353978446234788082062466105585127249713791721276273253638073234535447123880003542275055023902223874569552201863700202729293434430147174682302760783914011412039339697895841967107362265388874914846141521997037412954401235418335972353607055044874973461347888021255272429429744517830123078766552437060613565467908259410563840960055743267873948181932990399762986852911078878324107938917...', 'output}, {'input': '4944847984484499897477888998874784884474797788999888498989748984997797774478988749487787787944998784444748977844777488984798748984848479947894989998987487879949447848848898888479487898778984788988844874979497894779489449989797494497448984798494794487487499897944798844794498988947898787974874948989778778787978779999884994978894997949747744747987949784774894974798444899479997779484979789977489799448894478894447988489844888844979484789849479784487487984494474787484798944879774787979844984474989994948844498848...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '7688754930503622624249376302050721830065980218099156664541044701341628003496939103577693880283583449467297533469375121979331361424629165453875685841427085813980899970901793449283121463702841677303321796810682892574801165017961242552369171251649136915268463307740719648716991029731139504104601780245826323470355102044393062687794743810560411082474390672510942974815216433066730925915777989481449608904036597675354340429734413866576289385161415247796862427872213476834038054015404274700559772991390769430573604588...', 'output}, {'input': '6185037014707879384301592707009200430885687987529770162683115103088000085680865822274850080279809974072320607292351515828318654276346545329009080458123889570600021478058963049335300526437402130814087220633083010320092359393947423676191603547547874099010090263715163042641015092023212068194008006284379105933507405589730536098173006808291862017372694644277904949390565867842170703665006250410053210368067399451324395605280164900094231101070015087506700869427482073857397072913460003007919234200185280014042400788...', 'output': ['0999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...', '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '9965675082563929077799639762147786621291924398160624989369600320192031503878569896057485302667512360792029743474568614205998702183738012739853871916032407255123289056032335037954093166786819460498686316030169623643193583487898113843927174667792205951098904610616262292296460934603477941718344667867924960280476601880750505510840781238530728533026536005269229659829632892079936763214347808150429912908943447565716781168693866762946019658346001623995714859531084238467607308795481083815672444891116656361208045970...', 'output}, {'input': '9399099847230403397608550745456155491158833773727348957376326513008223271678368456249540347230059416611594526577303833136258789778891864775273632464015119183546285134805758447349338707895134660480829159525233548918538910475304570679493939658220667016376015440024476591414811967116176614232543688298600080829981632901950723372865951651419680198089502103871677882895994538059569016616295154550051663786468623844991852957332803481973612908697320851672235286727280608094255910265465949153761572434331191352427728064...', 'output}, {'input': '8677967897698796789869977698966986766668767667877789687666777969877868866999778969776786886687667966666886998976666676977779778769966697999998779777897676767686769769786987879887997776899999678878889896989896786778987668667889996989798796789766787977696988889666979897677886999868886976889987967696786768799888977677869978788766888766766967966876677799699997999866877688987986667899667687969687976867888778966777679767976979686899989799966976677796988888678867987797979987688869998677678689766966799667798866777...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '9169971377710854296307256878741743698904124875448188271438951731205465267096367879254423883111502855461268175261428259841277349539147022226480518218151857953676017222027859200956811168178482461083232476828773371751606247028165410567693365659977753752229668485142842096080257823565015585554974200804379221344492030870542627558563729072598095907764908903382419976933178549658032518931968565924190202313496291962510432634753675507873015068004621111683336737250908340689201372884809217551652679954580369879266423996...', 'output': ['6999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6402786117688907443629724676831861533380180662220326080501780992805834946738488906845349427183566546511120382042723532624475030689025499486454271766674879981315283125798751257569414757976374038693161455471776288448466249042222232425875808224403027744003704733955856398480964728375104262593788637777991997226599166814909071700171931478113019658198262741949705020331053974720755616818262843218961549805697021892940521399666343560867144526146538816131915538024059710094503485967378568082586947837283236875658146083...', 'output}, {'input': '2070584715958145931421943242877190736958188253532149113773257317774198852654268041861390688937915459566813326558023375873717875659623285221404908938186814771148690466010226989170254197736185741906851849474335844294393346935985196002604635838488633689366270270816465659353721056863151769188355135996953267698927714458440941550608272933473999407843409218797782406542610740951897694088643421505259321077956931953401390506157198305673803989694229999834828559332611372520954127118391729272331426793792414035235978292...', 'output}, {'input': '8830861889084051137643095774667654091986146869638648806288355834264695705797997204636152837277104079861551043640411014476918595066178670622283784697836347266655410475651455424263984398400662652738282678568304261152268090472444853374162421538590461473160139331604155280883012526754572269223633721300073239964775068679107842867167988931514560036166077584920827099541095153530279147684552577281385808157457305366848324391930843148351467387609038643560823897910018058987387476315080167238324082347653316905346938679...', 'output}, {'input': '8305353302042045132812713478589540940020097002309955880051290302345538886542504324100015141590915418707137647116069301978829579921838244596449533937725450722688600320224550552507030093558787751655874747352271037965806257211323568094024519907197752098052106271348046013549239460290417613713576981256525956964865075252410470149725070078486001965401206111081063737511835054192700776299150006487937152257808653940563700849221029782962584151954350056927572215246004027016540143697744783917148900624067210069508161787...', 'output': ['8999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6704583818391588725469181550354102907239957098358358841717401300766278881560400090038110916014289948657235584423606594158621824161523469830236380607965385255791396338932174225438170797034425037147862456636103346837327265294351641494623753674273621107344771242622310334986605935646991773638608552637622046669634226820615541845784212711291886281633637512336684846321599254977042239750805332860293274970565739990902560439745089146186062321750856522530810958656665834465619613523446131577586425662419972532205004271...', 'output': ['4444444444444444444444444444444444444444444444444444443333333333333333333333333333333333333333333333333333333333333333333333333333332222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111099999999999999999999999999999999999999999...', '9444444444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333333333333333333333333333333333333222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222211111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111199999999999999999999999999999999999999999...']}, {'input': '9689938698889663898863839636966699683986893699339386968338899966338869996936888869663833336868866886386686639839963333996866369633899638368886998389968998699366836388883663893393688389893963669968369396688338969698386338398836839988388898698688996366986968989699663989989698666833338689688393939988989389688683933989888969993363986386998399368636639933366866638686886936996998988399363868338933366966866996963866669896888669699698386869968968863868939688838383896969669866999369969399938388639699888886838393936...', 'output': ['9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '6023899695120557896013140711187680503448138679874588624050077803801854865697769353263222770960826861606106727886113310607069728272963227255389496899919068931344113537068309946879921059042444576366749994436144274847702102456819164989911861327124734838196173853563309843214631874712516961632171049329502507717957033924841978867659693226643101620967990111518453074600938886866941984226547980772170089838147109088768785941748600078140887848218226465026331411736734765922485300427498987217333097493592537246554457873...', 'output}, {'input': '404\\r\\n', 'output': ['440\\r\\n440']}, {'input': '545\\r\\n', 'output': ['545\\r\\n455']}, {'inputoutput': ['5999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '1486913458965407214474383051348880508797108309397132594608042047940314727604051381139181936657952113296264075630972575614980513092531236791260521858939901778974029659858701463047070106689549279462422735787009718900006205995325189656713599230841667711463676680976775990350526357505751432136802865972492235528750512640736169514063847705640465671951212885515298612577866350659145039585877518710392780320811778565480073883045746578885361310463306158402059382132691444825799882582584615455011180820034013186375611788...', 'output}, {'input': '735529000253516066792245888723276479613300890426556306652225805205086728701025634876001325397524812146598588630224764104842665701398105324707149840925039347515712215213069431219974501871104280261909625824309716933706130873817906146976896717670000040952322...', 'output': ['666552222222211111111999999999999999999999999999999999888888888888888888888888888777777777777777777777777777777777777766666666666666666666666666666665555555555555555555555555555555444444444444444444444444444444433333333333333333333333333333332222222222222...']}, {'input': '366006036086560640540664871847076504800540950671092500185010106170000702240791343478023460900266458060030203555013100714501000381575485383858030096600402900030043498189415910634048158764904633057070164811601205632046300331314168080050050942910019130740376...', 'output': ['899999999999999999999999999999999988888888888888888888888888888888888888888888888888877777777777777777777777777777777766666666666666666666666666666666666666666666666666666555555555555555555555555555555555555555555555555555555555444444444444444444444444444...']}, {'input': '398840503220186983858351613394364989756346496319972020357366619510925497280709512558515313910783631554080225450312220220867123106296928778532574514982778097563782084669484471751218108242324646083115319867651232742464770418517086481434481923040543425230711...', 'output': ['999999999999964444444444444444442221111111111199999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777...']}, {'input': '556219385381091894562062792917213155583747364355436296776388781241392748762870516982615288438622614941837395104998625096930886251535989100133828524292005091049090682804800056126385603403183553971728308669803702018434636459247721803006849483898539338877296...', 'output': ['999999999999999999999997777777777777755555599999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777766...']}, {'input': '173042267608258883486037544089768374806165303416008903535641030385308727304340000706408280887350681802183217379667290928603107043070671042098841100500080799400800402428300170096069009156256406580096931402046727400685425912888309210614350249018034050615499...', 'output': ['799999999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888887777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666...']}, {'input': '118861818338861138111186886363613831333331881818331683136111381138631888116833136168861816161316863681838318633663311338831883813661338831311113811163818813313861118166386316338631181311863883886688611336163131168686383633686336681336368383888168661316383...', 'output': ['111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111...']}, {'input': '424369443273224402109533159584813753236724119563919158216315260024827143618417153820604496406767510606415982287584601153429743858290968389908888654981242132604820339119568077688773245775414356902898316419529326053782202306127328550709473108685596727932596...', 'output': ['998888888443322999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999988888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888877777777777777777777777777777777777777777...']}, {'input': '543721413083809813239312318706938398629902170493143309662249968291503783827973782981262606597857636075415733386608477307347053676935397844623478808206246610558512724971379172127627325363807323453544712388000354227505502390222387456955220186370020272929343...', 'output': ['888888888888888888888888888666666666666664444444444444444444444444444444444444444444444999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '494484798448449989747788899887478488447479778899988849898974898499779777447898874948778778794499878444474897784477748898479874898484847994789498999898748787994944784884889888847948789877898478898884487497949789477948944998979749449744898479849479448748749...', 'output': ['444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444...']}, {'input': '768875493050362262424937630205072183006598021809915666454104470134162800349693910357769388028358344946729753346937512197933136142462916545387568584142708581398089997090179344928312146370284167730332179681068289257480116501796124255236917125164913691526846...', 'output': ['777777777777777777777777777777777777777777777777777774444433333333333333333333333333333333333331111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '618503701470787938430159270700920043088568798752977016268311510308800008568086582227485008027980997407232060729235151582831865427634654532900908045812388957060002147805896304933530052643740213081408722063308301032009235939394742367619160354754787409901009...', 'output': ['099999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '996567508256392907779963976214778662129192439816062498936960032019203150387856989605748530266751236079202974347456861420599870218373801273985387191603240725512328905603233503795409316678681946049868631603016962364319358348789811384392717466779220595109890...', 'output': ['777777777777777777777776666666666666666666666666666666666666666666666666666666444411111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '939909984723040339760855074545615549115883377372734895737632651300822327167836845624954034723005941661159452657730383313625878977889186477527363246401511918354628513480575844734933870789513466048082915952523354891853891047530457067949393965822066701637601...', 'output': ['777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666644444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444111111111111111111111111111111111...']}, {'input': '867796789769879678986997769896698676666876766787778968766677796987786886699977896977678688668766796666688699897666667697777977876996669799999877977789767676768676976978698787988799777689999967887888989698989678677898766866788999698979879678976678797769698...', 'output': ['666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666...']}, {'input': '916997137771085429630725687874174369890412487544818827143895173120546526709636787925442388311150285546126817526142825984127734953914702222648051821815185795367601722202785920095681116817848246108323247682877337175160624702816541056769336565997775375222966...', 'output': ['699999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '640278611768890744362972467683186153338018066222032608050178099280583494673848890684534942718356654651112038204272353262447503068902549948645427176667487998131528312579875125756941475797637403869316145547177628844846624904222223242587580822440302774400370...', 'output': ['666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666444444444444444444444444444444444444444444444444444444444444444444444444442222222222222222222222222222222222...']}, {'input': '207058471595814593142194324287719073695818825353214911377325731777419885265426804186139068893791545956681332655802337587371787565962328522140490893818681477114869046601022698917025419773618574190685184947433584429439334693598519600260463583848863368936627...', 'output': ['666664444444444444444444444422222222222222222222222222111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111119999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '883086188908405113764309577466765409198614686963864880628835583426469570579799720463615283727710407986155104364041101447691859506617867062228378469783634726665541047565145542426398439840066265273828267856830426115226809047244485337416242153859046147316013...', 'output': ['999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777766666666666666666666666666666666666666666666666666666666666666666...']}, {'input': '830535330204204513281271347858954094002009700230995588005129030234553888654250432410001514159091541870713764711606930197882957992183824459644953393772545072268860032022455055250703009355878775165587474735227103796580625721132356809402451990719775209805210...', 'output': ['899999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '670458381839158872546918155035410290723995709835835884171740130076627888156040009003811091601428994865723558442360659415862182416152346983023638060796538525579139633893217422543817079703442503714786245663610334683732726529435164149462375367427362110734477...', 'output': ['444444444444444444444444444444444444444444444444444444333333333333333333333333333333333333333333333333333333333333333333333333333333222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222211...']}, {'input': '968993869888966389886383963696669968398689369933938696833889996633886999693688886966383333686886688638668663983996333399686636963389963836888699838996899869936683638888366389339368838989396366996836939668833896969838633839883683998838889869868899636698696...', 'output': ['333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333...']}, {'input': '602389969512055789601314071118768050344813867987458862405007780380185486569776935326322277096082686160610672788611331060706972827296322725538949689991906893134411353706830994687992105904244457636674999443614427484770210245681916498991186132712473483819617...', 'output': ['999999999999999999999988888888888888888888888888888888888888888888888888888888888888888884444444444444444444444444444444444444444444444444444444444444444444444444433333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333...']}, {'input': '909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909...', 'output': ['599999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999...']}, {'input': '126254092095959027850416433832655426981078106611255074552648515499659121878087190358961591096171231715312122879634738062251247629492483043125748065235158236635181790420183641430917548189219521011748435487445986824532619160561716073648857875108255827252014...', 'output': ['888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888884444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444...']}]", "source_code": "n = input()\n\nzeroes = n.count('0')\n\nprint(n, end='')\n\nif zeroes > 0:\n    print('0' * zeroes, end='')\nelse:\n    print('0', end='')\n\nprint()\n\nif zeroes > 0:\n    print('0' * zeroes, end='')\nelse:\n    print('0', end='')\n\nprint(n)\n"}
{"src_uid": "cb47d710361979de0f975cc34fc22c7a", "id": 168, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1700, "testcases": "[{'input': '2 2\\r\\n0 1\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 2\\r\\n0 1\\r\\n1 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '5 5\\r\\n0 1\\r\\n0 2\\r\\n0 3\\r\\n0 4\\r\\n0 5\\r\\n', 'output': ['16\\r\\n']}, {'input': '3 3\\r\\n1 2\\r\\n2 3\\r\\n1 3\\r\\n', 'output': ['0\\r\\n']}, {'input': '10 10\\r\\n0 1\\r\\n0 2\\r\\n0 3\\r\\n0 4\\r\\n0 5\\r\\n0 6\\r\\n0 7\\r\\n0 8\\r\\n0 9\\r\\n0 10\\r\\n', 'output': ['512\\r\\n']}, {'input': '6 6\\r\\n3 4\\r\\n2 3\\r\\n3 5\\r\\n0 1\\r\\n1 2\\r\\n3 6\\r\\n', 'output': ['4\\r\\n']}, {'input': '7 7\\r\\n0 1\\r\\n1 3\\r\\n2 3\\r\\n4 6\\r\\n5 7\\r\\n4 5\\r\\n5 7\\r\\n', 'output': ['0\\r\\n']}, {'input': '1000000000 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '8 8\\r\\n0 1\\r\\n4 5\\r\\n7 8\\r\\n3 4\\r\\n2 3\\r\\n6 7\\r\\n5 6\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '6 1\\r\\n0 6\\r\\n', 'output': ['1\\r\\n']}, {'input': '6 4\\r\\n0 3\\r\\n1 2\\r\\n4 5\\r\\n4 6\\r\\n', 'output': ['0\\r\\n']}, {'input': '5 15\\r\\n0 1\\r\\n0 2\\r\\n0 3\\r\\n0 4\\r\\n0 5\\r\\n1 2\\r\\n1 3\\r\\n1 4\\r\\n1 5\\r\\n2 3\\r\\n2 4\\r\\n2 5\\r\\n3 4\\r\\n3 5\\r\\n4 5\\r\\n', 'output': ['360\\r\\n']}, {'input': '5 3\\r\\n0 1\\r\\n2 3\\r\\n4 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '5 15\\r\\n0 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n3 4\\r\\n4 5\\r\\n4 5\\r\\n', 'output': ['120\\r\\n']}, {'input': '8 94\\r\\n2 8\\r\\n3 8\\r\\n5 6\\r\\n1 2\\r\\n4 6\\r\\n2 7\\r\\n2 4\\r\\n3 5\\r\\n0 2\\r\\n0 1\\r\\n7 8\\r\\n0 7\\r\\n0 5\\r\\n1 4\\r\\n2 7\\r\\n3 4\\r\\n6 7\\r\\n1 5\\r\\n4 6\\r\\n4 6\\r\\n2 8\\r\\n4 5\\r\\n0 1\\r\\n3 8\\r\\n5 8\\r\\n1 3\\r\\n3 4\\r\\n1 6\\r\\n1 6\\r\\n1 7\\r\\n1 7\\r\\n1 4\\r\\n5 6\\r\\n5 7\\r\\n2 4\\r\\n3 8\\r\\n0 1\\r\\n0 4\\r\\n4 8\\r\\n1 8\\r\\n3 8\\r\\n2 4\\r\\n5 7\\r\\n2 4\\r\\n2 7\\r\\n3 8\\r\\n3 7\\r\\n0 6\\r\\n1 2\\r\\n0 2\\r\\n2 7\\r\\n0 4\\r\\n0 3\\r\\n3 6\\r\\n0 2\\r\\n5 7\\r\\n4 8\\r\\n3 6\\r\\n0 3\\r\\n3 5\\r\\n2 3\\r\\n1 8\\r\\n3 7\\r\\n0 6\\r\\n4 6\\r\\n1 8\\r\\n1 2\\r\\n3 5\\r\\n1 5\\r\\n1 2\\r\\n0 2\\r\\n0 3\\r\\n4 7\\r\\n1 4\\r\\n2 5\\r\\n5 8\\r\\n0 3\\r\\n5 7\\r\\n5 8\\r\\n0 2\\r\\n1 5\\r\\n4 6\\r\\n3 6\\r\\n5 6\\r\\n0 6\\r\\n1 7\\r\\n7 8\\r\\n2 7\\r\\n2 4\\r\\n1 7\\r\\n0 7\\r\\n1 6\\r\\n3 8\\r\\n0 7\\r\\n', 'output': ['203624961\\r\\n']}, {'input': '97 53\\r\\n21 34\\r\\n19 95\\r\\n0 6\\r\\n28 40\\r\\n26 41\\r\\n39 41\\r\\n47 85\\r\\n32 46\\r\\n2 17\\r\\n55 73\\r\\n18 67\\r\\n36 85\\r\\n77 96\\r\\n77 97\\r\\n1 53\\r\\n12 49\\r\\n9 71\\r\\n29 92\\r\\n35 89\\r\\n40 43\\r\\n5 78\\r\\n13 92\\r\\n2 97\\r\\n11 22\\r\\n4 6\\r\\n22 92\\r\\n60 87\\r\\n25 47\\r\\n10 59\\r\\n51 70\\r\\n13 95\\r\\n27 43\\r\\n5 71\\r\\n48 73\\r\\n82 94\\r\\n45 51\\r\\n85 97\\r\\n51 89\\r\\n15 66\\r\\n44 80\\r\\n78 93\\r\\n65 84\\r\\n9 75\\r\\n28 30\\r\\n39 69\\r\\n50 89\\r\\n41 77\\r\\n14 31\\r\\n12 97\\r\\n69 86\\r\\n15 18\\r\\n14 56\\r\\n38 47\\r\\n', 'output': ['478604297\\r\\n']}, {'input': '33 5\\r\\n17 18\\r\\n5 27\\r\\n18 29\\r\\n12 24\\r\\n14 31\\r\\n', 'output': ['0\\r\\n']}, {'input': '93 69\\r\\n9 92\\r\\n31 37\\r\\n58 83\\r\\n28 93\\r\\n36 44\\r\\n22 90\\r\\n61 88\\r\\n76 83\\r\\n19 85\\r\\n25 87\\r\\n55 84\\r\\n45 47\\r\\n5 27\\r\\n54 82\\r\\n4 65\\r\\n12 81\\r\\n49 55\\r\\n16 52\\r\\n16 34\\r\\n34 44\\r\\n17 36\\r\\n62 64\\r\\n7 34\\r\\n19 21\\r\\n16 73\\r\\n3 55\\r\\n12 62\\r\\n49 91\\r\\n2 36\\r\\n47 65\\r\\n17 37\\r\\n70 80\\r\\n52 71\\r\\n59 77\\r\\n1 17\\r\\n23 81\\r\\n15 67\\r\\n38 67\\r\\n14 48\\r\\n70 82\\r\\n33 51\\r\\n31 88\\r\\n28 51\\r\\n10 54\\r\\n6 71\\r\\n37 88\\r\\n5 60\\r\\n2 91\\r\\n88 91\\r\\n30 91\\r\\n17 58\\r\\n12 72\\r\\n14 77\\r\\n34 90\\r\\n15 42\\r\\n44 47\\r\\n54 87\\r\\n84 90\\r\\n3 49\\r\\n26 71\\r\\n40 87\\r\\n71 74\\r\\n20 60\\r\\n86 92\\r\\n76 83\\r\\n40 80\\r\\n3 31\\r\\n18 33\\r\\n5 82\\r\\n', 'output': ['0\\r\\n']}, {'input': '10 59\\r\\n4 7\\r\\n4 8\\r\\n0 4\\r\\n5 7\\r\\n6 9\\r\\n7 8\\r\\n0 9\\r\\n6 7\\r\\n4 9\\r\\n1 10\\r\\n5 6\\r\\n1 4\\r\\n0 4\\r\\n4 9\\r\\n3 6\\r\\n1 7\\r\\n4 9\\r\\n3 7\\r\\n1 2\\r\\n0 1\\r\\n4 7\\r\\n0 8\\r\\n8 10\\r\\n0 3\\r\\n2 5\\r\\n0 7\\r\\n1 8\\r\\n2 10\\r\\n0 3\\r\\n0 9\\r\\n7 8\\r\\n2 6\\r\\n1 6\\r\\n2 10\\r\\n3 10\\r\\n3 4\\r\\n0 2\\r\\n0 8\\r\\n3 8\\r\\n9 10\\r\\n1 6\\r\\n7 10\\r\\n6 9\\r\\n2 10\\r\\n2 10\\r\\n3 5\\r\\n9 10\\r\\n4 10\\r\\n0 8\\r\\n5 9\\r\\n4 6\\r\\n0 10\\r\\n6 9\\r\\n1 2\\r\\n6 7\\r\\n1 5\\r\\n0 6\\r\\n0 7\\r\\n0 6\\r\\n', 'output': ['28167561\\r\\n']}, {'input': '66 35\\r\\n49 55\\r\\n9 30\\r\\n28 54\\r\\n44 62\\r\\n55 61\\r\\n1 21\\r\\n6 37\\r\\n8 10\\r\\n26 33\\r\\n19 37\\r\\n12 23\\r\\n24 42\\r\\n34 64\\r\\n8 56\\r\\n36 40\\r\\n16 58\\r\\n21 30\\r\\n16 36\\r\\n36 38\\r\\n19 45\\r\\n26 49\\r\\n6 62\\r\\n1 11\\r\\n22 48\\r\\n33 38\\r\\n8 41\\r\\n29 53\\r\\n58 60\\r\\n27 66\\r\\n2 19\\r\\n48 53\\r\\n25 47\\r\\n48 56\\r\\n61 65\\r\\n45 46\\r\\n', 'output': ['0\\r\\n']}, {'input': '31 26\\r\\n15 21\\r\\n4 25\\r\\n5 19\\r\\n16 18\\r\\n5 23\\r\\n3 25\\r\\n7 18\\r\\n24 31\\r\\n6 9\\r\\n8 25\\r\\n18 29\\r\\n12 27\\r\\n15 16\\r\\n12 20\\r\\n2 7\\r\\n14 26\\r\\n13 22\\r\\n5 19\\r\\n5 24\\r\\n15 23\\r\\n4 7\\r\\n8 12\\r\\n14 26\\r\\n28 30\\r\\n1 30\\r\\n24 31\\r\\n', 'output': ['0\\r\\n']}, {'input': '69 68\\r\\n49 62\\r\\n3 38\\r\\n1 43\\r\\n42 58\\r\\n12 64\\r\\n1 37\\r\\n35 59\\r\\n7 43\\r\\n2 29\\r\\n8 65\\r\\n19 47\\r\\n4 27\\r\\n41 58\\r\\n25 60\\r\\n17 37\\r\\n34 40\\r\\n16 38\\r\\n28 52\\r\\n35 63\\r\\n6 65\\r\\n57 58\\r\\n38 50\\r\\n8 28\\r\\n6 8\\r\\n10 44\\r\\n48 63\\r\\n2 42\\r\\n46 58\\r\\n26 62\\r\\n37 45\\r\\n7 22\\r\\n0 21\\r\\n19 48\\r\\n6 67\\r\\n6 15\\r\\n28 38\\r\\n19 22\\r\\n16 20\\r\\n27 40\\r\\n0 3\\r\\n33 69\\r\\n2 66\\r\\n10 24\\r\\n29 48\\r\\n26 69\\r\\n15 53\\r\\n24 34\\r\\n34 58\\r\\n20 47\\r\\n21 23\\r\\n38 68\\r\\n34 45\\r\\n60 68\\r\\n7 15\\r\\n21 34\\r\\n16 30\\r\\n14 58\\r\\n2 62\\r\\n24 66\\r\\n13 27\\r\\n24 40\\r\\n32 37\\r\\n10 37\\r\\n22 40\\r\\n44 50\\r\\n27 31\\r\\n0 44\\r\\n20 32\\r\\n', 'output': ['622740890\\r\\n']}, {'input': '1 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '68 74\\r\\n51 54\\r\\n3 22\\r\\n12 24\\r\\n3 27\\r\\n32 42\\r\\n36 55\\r\\n60 64\\r\\n1 4\\r\\n4 23\\r\\n11 64\\r\\n54 62\\r\\n50 56\\r\\n21 34\\r\\n27 63\\r\\n15 54\\r\\n28 61\\r\\n13 57\\r\\n39 53\\r\\n12 32\\r\\n32 40\\r\\n33 67\\r\\n55 61\\r\\n33 67\\r\\n30 37\\r\\n15 49\\r\\n27 45\\r\\n21 41\\r\\n8 42\\r\\n24 63\\r\\n40 48\\r\\n28 41\\r\\n30 67\\r\\n0 4\\r\\n7 15\\r\\n27 59\\r\\n60 62\\r\\n25 65\\r\\n30 31\\r\\n38 67\\r\\n24 43\\r\\n14 64\\r\\n26 46\\r\\n8 12\\r\\n34 41\\r\\n32 67\\r\\n11 42\\r\\n11 53\\r\\n45 55\\r\\n2 47\\r\\n7 51\\r\\n30 54\\r\\n21 44\\r\\n7 52\\r\\n40 62\\r\\n16 50\\r\\n10 41\\r\\n26 65\\r\\n16 51\\r\\n6 29\\r\\n1 31\\r\\n48 54\\r\\n9 42\\r\\n33 45\\r\\n19 59\\r\\n25 37\\r\\n21 62\\r\\n20 58\\r\\n23 59\\r\\n12 61\\r\\n2 46\\r\\n19 49\\r\\n44 60\\r\\n1 20\\r\\n19 66\\r\\n', 'output': ['0\\r\\n']}, {'input': '79 68\\r\\n26 47\\r\\n55 70\\r\\n5 40\\r\\n7 45\\r\\n16 21\\r\\n31 38\\r\\n19 62\\r\\n40 55\\r\\n42 78\\r\\n60 61\\r\\n43 69\\r\\n50 73\\r\\n3 77\\r\\n2 45\\r\\n2 29\\r\\n10 58\\r\\n2 11\\r\\n62 76\\r\\n57 70\\r\\n65 73\\r\\n37 67\\r\\n9 24\\r\\n4 28\\r\\n8 16\\r\\n31 44\\r\\n10 66\\r\\n47 70\\r\\n19 45\\r\\n17 28\\r\\n5 36\\r\\n9 68\\r\\n2 35\\r\\n55 77\\r\\n51 71\\r\\n1 59\\r\\n6 33\\r\\n21 53\\r\\n39 49\\r\\n59 70\\r\\n17 44\\r\\n18 64\\r\\n49 78\\r\\n0 52\\r\\n24 56\\r\\n65 79\\r\\n19 51\\r\\n42 77\\r\\n37 78\\r\\n20 39\\r\\n47 56\\r\\n19 78\\r\\n50 78\\r\\n3 67\\r\\n37 47\\r\\n5 27\\r\\n40 51\\r\\n24 29\\r\\n50 54\\r\\n45 50\\r\\n13 76\\r\\n29 31\\r\\n0 28\\r\\n26 36\\r\\n21 44\\r\\n71 77\\r\\n55 58\\r\\n38 61\\r\\n22 44\\r\\n', 'output': ['317376853\\r\\n']}, {'input': '45 51\\r\\n2 12\\r\\n6 18\\r\\n4 17\\r\\n8 25\\r\\n16 24\\r\\n3 23\\r\\n29 31\\r\\n31 40\\r\\n7 26\\r\\n5 6\\r\\n35 37\\r\\n1 36\\r\\n9 45\\r\\n18 36\\r\\n12 27\\r\\n5 15\\r\\n11 16\\r\\n19 29\\r\\n8 23\\r\\n1 27\\r\\n0 30\\r\\n25 38\\r\\n21 44\\r\\n34 39\\r\\n10 41\\r\\n4 16\\r\\n11 36\\r\\n0 8\\r\\n15 38\\r\\n3 33\\r\\n11 31\\r\\n2 33\\r\\n5 34\\r\\n24 28\\r\\n7 32\\r\\n15 25\\r\\n2 27\\r\\n16 44\\r\\n31 40\\r\\n35 45\\r\\n13 38\\r\\n29 42\\r\\n18 23\\r\\n8 25\\r\\n13 21\\r\\n3 39\\r\\n3 41\\r\\n5 6\\r\\n13 21\\r\\n11 20\\r\\n23 42\\r\\n', 'output': ['493168232\\r\\n']}, {'input': '5 31\\r\\n0 2\\r\\n3 4\\r\\n3 5\\r\\n2 4\\r\\n1 3\\r\\n1 2\\r\\n2 5\\r\\n1 5\\r\\n0 2\\r\\n2 5\\r\\n1 4\\r\\n0 2\\r\\n1 3\\r\\n0 5\\r\\n2 3\\r\\n1 5\\r\\n1 2\\r\\n2 3\\r\\n0 1\\r\\n0 1\\r\\n2 4\\r\\n0 4\\r\\n1 2\\r\\n0 3\\r\\n1 2\\r\\n3 4\\r\\n0 2\\r\\n0 4\\r\\n1 2\\r\\n2 5\\r\\n1 5\\r\\n', 'output': ['8595\\r\\n']}, {'input': '81 52\\r\\n33 48\\r\\n59 61\\r\\n37 77\\r\\n58 73\\r\\n29 54\\r\\n1 17\\r\\n8 29\\r\\n50 73\\r\\n7 26\\r\\n35 41\\r\\n22 26\\r\\n9 22\\r\\n0 11\\r\\n40 73\\r\\n25 57\\r\\n35 55\\r\\n36 54\\r\\n29 41\\r\\n56 66\\r\\n42 77\\r\\n29 48\\r\\n41 66\\r\\n25 36\\r\\n2 55\\r\\n58 64\\r\\n0 61\\r\\n23 31\\r\\n9 61\\r\\n27 45\\r\\n2 71\\r\\n14 29\\r\\n4 31\\r\\n0 35\\r\\n31 77\\r\\n21 39\\r\\n0 54\\r\\n46 68\\r\\n18 62\\r\\n41 45\\r\\n12 28\\r\\n59 66\\r\\n39 71\\r\\n10 59\\r\\n29 77\\r\\n16 48\\r\\n13 46\\r\\n30 73\\r\\n2 41\\r\\n42 55\\r\\n19 61\\r\\n28 29\\r\\n20 42\\r\\n', 'output': ['0\\r\\n']}, {'input': '84 50\\r\\n33 46\\r\\n19 40\\r\\n51 64\\r\\n37 45\\r\\n35 81\\r\\n44 81\\r\\n6 57\\r\\n57 60\\r\\n14 53\\r\\n15 49\\r\\n4 30\\r\\n35 49\\r\\n2 51\\r\\n8 72\\r\\n15 18\\r\\n49 51\\r\\n14 49\\r\\n50 71\\r\\n41 59\\r\\n28 60\\r\\n61 81\\r\\n9 12\\r\\n34 79\\r\\n5 56\\r\\n60 67\\r\\n21 60\\r\\n39 71\\r\\n31 60\\r\\n13 35\\r\\n16 84\\r\\n17 33\\r\\n48 57\\r\\n36 61\\r\\n50 55\\r\\n5 84\\r\\n66 79\\r\\n61 70\\r\\n42 49\\r\\n19 39\\r\\n47 49\\r\\n3 82\\r\\n59 65\\r\\n8 44\\r\\n71 80\\r\\n66 77\\r\\n8 65\\r\\n1 81\\r\\n7 82\\r\\n50 74\\r\\n10 17\\r\\n', 'output': ['0\\r\\n']}, {'input': '100 68\\r\\n77 89\\r\\n19 71\\r\\n11 46\\r\\n23 70\\r\\n16 47\\r\\n4 61\\r\\n7 96\\r\\n38 74\\r\\n79 95\\r\\n68 75\\r\\n14 86\\r\\n10 55\\r\\n7 13\\r\\n88 99\\r\\n19 21\\r\\n4 94\\r\\n17 83\\r\\n11 16\\r\\n7 50\\r\\n58 96\\r\\n4 58\\r\\n17 72\\r\\n44 56\\r\\n35 91\\r\\n50 88\\r\\n9 37\\r\\n36 52\\r\\n83 89\\r\\n8 16\\r\\n1 80\\r\\n12 75\\r\\n3 27\\r\\n92 93\\r\\n53 88\\r\\n37 49\\r\\n34 78\\r\\n31 66\\r\\n39 55\\r\\n36 94\\r\\n22 67\\r\\n47 85\\r\\n20 58\\r\\n62 98\\r\\n41 89\\r\\n85 96\\r\\n11 73\\r\\n39 95\\r\\n44 68\\r\\n25 33\\r\\n36 45\\r\\n66 70\\r\\n66 93\\r\\n17 97\\r\\n1 71\\r\\n49 53\\r\\n47 54\\r\\n19 95\\r\\n10 12\\r\\n38 57\\r\\n47 68\\r\\n21 70\\r\\n32 93\\r\\n53 71\\r\\n45 59\\r\\n27 48\\r\\n47 63\\r\\n75 76\\r\\n8 57\\r\\n', 'output': ['0\\r\\n']}, {'input': '918949684 6\\r\\n351553415 785588657\\r\\n423490842 845475457\\r\\n351553415 918949684\\r\\n740298829 785588657\\r\\n351328841 610486484\\r\\n423490842 847590951\\r\\n', 'output': ['0\\r\\n']}, {'input': '863261873 5\\r\\n137690029 666186924\\r\\n137690029 379800754\\r\\n515537329 666186924\\r\\n442925959 722302912\\r\\n137690029 863261873\\r\\n', 'output': ['0\\r\\n']}, {'input': '735324925 2\\r\\n642054038 735324925\\r\\n170935185 642054038\\r\\n', 'output': ['0\\r\\n']}, {'input': '977743286 6\\r\\n317778866 395496218\\r\\n395496218 932112884\\r\\n98371691 432544933\\r\\n440553 922085291\\r\\n440553 432544933\\r\\n586988624 922085291\\r\\n', 'output': ['0\\r\\n']}, {'input': '977700285 7\\r\\n386643627 467079072\\r\\n116215943 914856211\\r\\n15183537 386643627\\r\\n424146511 977700285\\r\\n15183537 620050423\\r\\n336304090 947990602\\r\\n116215943 914856211\\r\\n', 'output': ['0\\r\\n']}, {'input': '768016717 4\\r\\n242598247 348534209\\r\\n33560125 170667468\\r\\n348534209 700314158\\r\\n700314158 768016717\\r\\n', 'output': ['0\\r\\n']}, {'input': '814609521 3\\r\\n622460875 697824636\\r\\n283825432 369448402\\r\\n614658965 622460875\\r\\n', 'output': ['0\\r\\n']}, {'input': '931612300 8\\r\\n64655010 186892167\\r\\n25283092 580196656\\r\\n297609123 628681221\\r\\n25283092 186892167\\r\\n186892167 221075230\\r\\n221075230 634105512\\r\\n25283092 156293949\\r\\n86333513 156293949\\r\\n', 'output': ['0\\r\\n']}, {'input': '947714605 4\\r\\n23890708 35992029\\r\\n35992029 947714605\\r\\n93644635 629491402\\r\\n23890708 947714605\\r\\n', 'output': ['0\\r\\n']}, {'input': '768016717 4\\r\\n242598247 348534209\\r\\n33560125 170667468\\r\\n348534209 700314158\\r\\n700314158 768016717\\r\\n', 'output': ['0\\r\\n']}, {'input': '1000000000 2\\r\\n0 500000000\\r\\n500000000 1000000000\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "n, m = map(int, input().split())\n\nbus = [0] * (n + 1)\n\nfor i in range(m):\n    s, t = map(int, input().split())\n    bus[s] += 1\n    bus[t] -= 1\n\nfor i in range(1, n + 1):\n    bus[i] += bus[i - 1]\n\nprint(bus[n])\n"}
{"src_uid": "ffafd385ec79aa28b8d30224baf6bcfe", "id": 169, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1600, "testcases": "[{'input': '3 2 1\\r\\n2 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 2 1\\r\\n1 1\\r\\n', 'output': ['-1\\r\\n']}, {'input': '3 2 1\\r\\n2 2\\r\\n', 'output': ['0.666667\\r\\n']}, {'input': '3 2 1\\r\\n1 2\\r\\n', 'output': ['0.000000\\r\\n']}, {'input': '6 5 3\\r\\n5 2 3 10 5\\r\\n', 'output': ['0.380435\\r\\n']}, {'input': '7 10 6\\r\\n9 10 2 3 3 6 9 9 3 7\\r\\n', 'output': ['0.420946\\r\\n']}, {'input': '17 5 1\\r\\n10 4 9 6 2\\r\\n', 'output': ['0.999860\\r\\n']}, {'input': '5 8 3\\r\\n9 7 2 5 2 10 3 4\\r\\n', 'output': ['0.097561\\r\\n']}, {'input': '14 8 4\\r\\n6 2 10 6 2 8 4 2\\r\\n', 'output': ['0.885750\\r\\n']}, {'input': '14 9 9\\r\\n9 4 7 2 1 2 4 3 9\\r\\n', 'output': ['0.971132\\r\\n']}, {'input': '46 73 68\\r\\n4 2 6 4 1 9 8 10 7 8 7 2 6 4 7 9 7 9 9 1 5 1 5 1 8 2 10 2 1 7 10 2 8 3 5 3 8 9 10 5 3 4 10 4 9 6 8 1 1 6 3 1 9 6 9 4 4 3 4 5 8 1 6 2 4 10 5 7 2 6 7 4 2\\r\\n', 'output': ['0.525158\\r\\n']}, {'input': '24 55 54\\r\\n8 3 6 4 8 9 10 2 2 6 6 8 3 4 5 6 6 6 10 4 8 2 3 2 2 2 10 7 10 1 6 1 6 8 10 9 2 8 9 6 6 4 1 2 7 2 2 9 3 7 3 7 6 8 4\\r\\n', 'output': ['0.433479\\r\\n']}, {'input': '63 25 24\\r\\n6 7 7 1 2 5 5 9 9 1 9 8 1 2 10 10 5 10 2 9 5 4 9 5 7\\r\\n', 'output': ['0.891560\\r\\n']}, {'input': '44 94 2\\r\\n2 4 10 9 5 1 9 8 1 3 6 5 5 9 4 6 6 2 6 2 4 5 7 3 8 6 5 10 2 1 1 9 1 9 3 1 9 6 2 4 9 7 4 6 1 4 5 2 7 8 2 1 1 1 4 2 5 5 5 8 2 8 2 1 1 8 1 7 7 7 1 2 5 3 8 9 8 7 2 10 5 2 2 8 9 1 4 7 7 2 6 2 8 5\\r\\n', 'output': ['0.259627\\r\\n']}, {'input': '44 35 7\\r\\n10 2 2 6 4 2 8 3 10 1 9 9 7 9 10 6 6 1 4 5 7 4 9 7 10 10 7 9 6 1 7 7 2 10 7\\r\\n', 'output': ['0.793743\\r\\n']}, {'input': '27 47 44\\r\\n8 5 2 5 10 6 7 9 5 10 8 5 9 5 10 5 10 8 5 1 1 2 2 10 3 2 5 9 6 3 3 1 5 4 10 5 2 2 4 4 4 4 4 1 1 3 7\\r\\n', 'output': ['0.000000\\r\\n']}, {'input': '21 67 49\\r\\n4 4 3 5 7 5 10 2 8 5 2 2 6 3 6 2 8 6 2 6 2 9 3 3 4 1 9 9 3 3 6 3 6 7 8 9 10 6 10 5 1 5 2 3 3 9 10 5 10 7 1 6 4 5 4 7 8 5 4 2 9 3 3 5 7 1 10\\r\\n', 'output': ['0.414860\\r\\n']}, {'input': '42 71 67\\r\\n2 1 4 1 10 5 1 8 8 5 2 1 1 7 2 2 8 10 8 2 10 8 2 2 9 6 5 10 7 1 7 2 10 3 5 6 10 10 4 6 10 5 6 6 9 4 1 6 1 8 10 6 1 5 3 2 4 1 8 5 10 10 9 3 10 7 5 9 1 9 3\\r\\n', 'output': ['0.362240\\r\\n']}, {'input': '50 93 28\\r\\n2 5 9 5 5 8 1 3 9 2 7 10 3 1 10 10 8 5 2 7 5 4 3 9 5 2 8 9 10 8 2 7 8 9 8 1 9 8 4 3 3 6 10 10 1 2 10 1 8 10 5 8 5 2 4 1 5 6 9 8 6 7 4 6 6 1 5 1 4 6 8 4 1 7 2 8 7 5 1 3 3 7 4 2 1 5 7 5 8 3 8 7 2\\r\\n', 'output': ['0.563739\\r\\n']}, {'input': '33 90 4\\r\\n5 10 2 3 9 6 9 3 3 8 6 4 8 4 9 3 5 9 5 6 4 1 10 6 4 5 4 5 9 5 7 1 3 9 6 6 5 6 2 4 8 7 8 5 4 5 10 9 3 1 1 8 6 9 5 1 5 9 4 6 6 4 9 4 5 7 3 7 9 1 5 6 4 1 1 4 2 4 4 2 6 4 5 5 4 9 1 10 2 2\\r\\n', 'output': ['0.132213\\r\\n']}, {'input': '65 173 136\\r\\n26 18 8 11 1 22 44 6 15 22 13 49 30 36 37 41 25 27 9 36 36 1 45 20 7 47 28 30 30 21 33 32 9 11 16 5 19 12 44 40 25 40 32 36 15 34 4 43 28 19 29 33 7 11 18 13 40 18 10 26 1 48 20 38 1 20 34 8 46 8 32 35 16 49 26 36 11 16 4 29 35 44 14 21 22 42 10 1 3 12 35 30 14 45 2 24 32 15 2 28 35 17 48 31 7 26 44 43 37 4 14 26 25 41 18 40 15 32 16 7 40 22 43 8 25 21 35 21 47 45 7 21 50 38 23 13 4 49 10 27 31 38 43 40 10 24 39 35 31 33 9 6 15 18 2 14 20 14 12 12 29 47 9 49 25 17 41 35 9 40 19 50 34\\r\\n', 'output': ['0.165731\\r\\n']}, {'input': '77 155 26\\r\\n15 18 38 46 13 15 43 37 36 28 22 26 9 46 14 32 20 11 8 28 20 42 38 40 31 20 2 43 1 42 25 28 40 47 6 50 42 45 36 28 38 43 31 14 9 22 49 4 41 9 24 35 38 40 19 31 4 9 13 19 15 48 2 34 46 49 41 15 13 29 15 24 15 50 8 26 10 23 24 15 2 46 47 46 25 36 41 29 44 36 24 22 41 7 48 17 42 41 4 46 15 26 48 27 35 19 35 22 47 7 40 1 15 46 6 34 44 6 9 5 29 24 5 25 12 38 46 10 35 12 8 15 1 9 1 16 2 12 24 31 37 49 27 41 33 5 26 48 42 37 20 18 49 40 16\\r\\n', 'output': ['0.299854\\r\\n']}, {'input': '67 108 14\\r\\n33 40 13 10 26 31 27 24 48 1 42 28 38 29 9 28 48 41 12 19 27 50 6 45 46 7 34 47 8 18 40 27 42 4 33 3 10 25 10 29 39 3 5 39 1 17 40 10 6 8 41 50 27 43 40 42 43 25 18 34 6 15 5 9 11 37 13 4 16 25 49 33 14 40 13 16 50 24 4 43 45 12 31 38 40 36 3 4 4 19 18 12 20 44 4 44 8 50 21 5 44 34 9 9 6 39 43 21\\r\\n', 'output': ['0.504558\\r\\n']}, {'input': '82 135 73\\r\\n22 18 8 45 35 8 19 46 40 6 30 40 10 41 43 38 41 40 1 43 19 23 5 13 29 16 30 9 4 42 42 3 24 16 21 26 5 4 24 24 31 30 1 10 45 50 33 21 21 47 42 37 47 15 30 23 4 2 28 15 38 33 45 30 31 32 6 14 6 4 39 12 50 29 26 45 19 12 40 4 33 9 16 12 44 36 47 42 43 17 18 12 12 42 45 38 6 10 19 10 14 31 6 21 2 15 21 26 5 3 3 6 6 22 44 48 9 11 33 31 34 43 39 40 48 26 1 29 48 11 22 38 23 11 20\\r\\n', 'output': ['0.706768\\r\\n']}, {'input': '73 121 102\\r\\n11 21 12 1 48 30 22 42 42 35 33 12 23 11 27 15 50 49 24 2 48 2 21 32 16 48 36 26 32 13 38 46 36 15 27 24 7 21 43 49 19 13 3 41 35 17 5 22 42 19 37 20 40 42 11 31 48 16 21 5 42 23 29 44 9 30 46 21 44 27 9 17 39 24 30 33 48 3 43 18 16 18 17 46 19 26 37 5 24 36 42 12 18 29 7 49 1 9 27 12 21 29 19 38 6 19 43 46 33 42 9 30 19 38 25 10 44 23 50 25 46\\r\\n', 'output': ['0.470538\\r\\n']}, {'input': '50 113 86\\r\\n2 17 43 22 48 40 42 47 32 29 10 4 9 14 20 50 8 29 12 11 50 41 3 22 30 4 48 37 27 19 50 50 23 34 13 21 3 36 31 39 22 27 7 21 31 21 14 18 36 19 27 42 19 8 5 41 7 8 22 40 38 32 44 25 21 48 4 12 10 16 23 30 25 41 16 45 3 26 19 34 34 25 26 6 9 21 46 33 36 45 3 13 28 44 30 29 22 41 20 1 20 38 4 33 36 15 41 18 13 11 13 18 6\\r\\n', 'output': ['0.298885\\r\\n']}, {'input': '74 146 112\\r\\n10 31 40 32 9 17 31 26 32 7 20 18 50 10 15 28 6 41 21 27 11 5 14 36 48 45 10 42 45 40 4 11 41 23 47 31 34 4 42 49 48 9 37 34 25 27 30 27 44 33 30 25 22 13 25 41 8 34 32 22 11 12 32 9 37 9 42 7 37 13 20 40 28 26 2 6 2 49 41 46 11 9 32 18 43 28 39 48 45 36 18 10 28 35 26 5 20 12 16 2 34 28 31 13 18 39 40 1 39 12 33 31 1 31 46 1 47 38 39 49 32 12 2 8 16 27 48 41 16 27 38 42 21 27 26 8 31 41 20 43 47 5 39 25 47 34\\r\\n', 'output': ['0.437111\\r\\n']}, {'input': '78 124 41\\r\\n5 28 46 46 13 48 36 2 28 31 31 12 9 28 40 35 34 50 50 30 17 11 6 36 16 30 29 8 18 16 21 8 15 30 29 20 12 5 29 20 11 44 12 42 49 10 11 7 25 15 2 38 30 29 17 34 4 5 44 49 25 15 16 33 26 8 8 34 21 9 33 16 14 8 43 50 45 17 15 43 44 22 37 36 22 47 6 13 49 48 37 44 50 9 35 13 38 31 15 6 35 48 22 14 18 8 40 18 4 23 2 26 41 41 27 40 43 33 2 17 11 40 42 32\\r\\n', 'output': ['0.218709\\r\\n']}, {'input': '51 153 26\\r\\n19 32 28 7 25 50 22 31 29 39 5 4 28 26 24 1 19 23 36 2 50 50 33 28 15 17 31 35 10 40 16 7 6 43 50 29 20 25 31 37 10 18 38 38 44 30 36 47 37 6 16 48 41 49 14 16 30 7 29 42 36 8 31 37 26 15 43 42 32 3 46 12 16 37 33 12 18 16 15 14 46 11 2 50 34 34 34 32 28 24 44 12 9 38 35 12 11 15 2 6 28 35 14 46 25 30 9 1 26 5 35 26 4 32 2 30 36 29 22 4 5 1 44 38 6 48 48 6 43 45 24 19 44 18 37 18 40 45 25 35 20 27 21 29 43 18 26 46 22 39 29 41 1\\r\\n', 'output': ['0.183488\\r\\n']}, {'input': '100 10 5\\r\\n10 8 7 5 8 1 2 4 3 10\\r\\n', 'output': ['-1\\r\\n']}, {'input': '100 10 8\\r\\n1 8 9 7 6 4 4 6 8 5\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 1 1\\r\\n1\\r\\n', 'output': ['0.000000\\r\\n']}, {'input': '1 1 1\\r\\n2\\r\\n', 'output': ['0.000000\\r\\n']}, {'input': '1 1 1\\r\\n100\\r\\n', 'output': ['0.000000\\r\\n']}, {'input': '100 1 1\\r\\n100\\r\\n', 'output': ['1\\r\\n']}, {'input': '99 1 1\\r\\n100\\r\\n', 'output': ['1\\r\\n']}, {'input': '100 2 1\\r\\n100 1\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "n, m, h = map(int, input().split())\ns = list(map(int, input().split()))\n\nif n > sum(s):\n    print(-1)\nelse:\n    ans = 1\n    for i in range(1, m + 1):\n        if i!= h:\n            ans *= s[i - 1] / (sum(s) - 1)\n    print(1 - ans)"}
{"src_uid": "09249ddeefb69734c50f9df3222ec7cb", "id": 170, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2100, "testcases": "[{'input': '2 10\\r\\n12\\r\\n43\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 12\\r\\n1423\\r\\n6624\\r\\n6625\\r\\n', 'output': ['6\\r\\n']}, {'input': '5 9\\r\\n10345\\r\\n23456\\r\\n34567\\r\\n45678\\r\\n56789\\r\\n', 'output': ['5\\r\\n']}, {'input': '4 1000000\\r\\n444444444\\r\\n444444444\\r\\n444444444\\r\\n444444444\\r\\n', 'output': ['4\\r\\n']}, {'input': '3 7\\r\\n901\\r\\n922\\r\\n934\\r\\n', 'output': ['3\\r\\n']}, {'input': '3 9\\r\\n888\\r\\n456\\r\\n226\\r\\n', 'output': ['4\\r\\n']}, {'input': '3 9\\r\\n777\\r\\n120\\r\\n345\\r\\n', 'output': ['1\\r\\n']}, {'input': '3 6\\r\\n122\\r\\n322\\r\\n000\\r\\n', 'output': ['3\\r\\n']}, {'input': '3 7\\r\\n922\\r\\n322\\r\\n022\\r\\n', 'output': ['9\\r\\n']}, {'input': '3 12\\r\\n123\\r\\n045\\r\\n666\\r\\n', 'output': ['5\\r\\n']}, {'input': '3 22\\r\\n1111\\r\\n0273\\r\\n4443\\r\\n', 'output': ['7\\r\\n']}, {'input': '5 1000000\\r\\n11100\\r\\n00200\\r\\n03330\\r\\n03330\\r\\n00000\\r\\n', 'output': ['3\\r\\n']}, {'input': '4 9995\\r\\n11122\\r\\n06330\\r\\n04470\\r\\n55800\\r\\n', 'output': ['3\\r\\n']}, {'input': '9 1000000\\r\\n123456789\\r\\n032567891\\r\\n345678902\\r\\n456789123\\r\\n567891234\\r\\n678912345\\r\\n789123456\\r\\n891234067\\r\\n912345678\\r\\n', 'output': ['3\\r\\n']}, {'input': '1 10\\r\\n8\\r\\n', 'output': ['8\\r\\n']}, {'input': '50 180667\\r\\n3\\r\\n8\\r\\n3\\r\\n6\\r\\n5\\r\\n6\\r\\n1\\r\\n9\\r\\n6\\r\\n7\\r\\n6\\r\\n3\\r\\n2\\r\\n9\\r\\n7\\r\\n8\\r\\n6\\r\\n3\\r\\n2\\r\\n5\\r\\n6\\r\\n7\\r\\n3\\r\\n7\\r\\n8\\r\\n2\\r\\n1\\r\\n7\\r\\n9\\r\\n4\\r\\n1\\r\\n2\\r\\n4\\r\\n3\\r\\n8\\r\\n9\\r\\n5\\r\\n9\\r\\n8\\r\\n9\\r\\n1\\r\\n4\\r\\n1\\r\\n5\\r\\n1\\r\\n9\\r\\n7\\r\\n3\\r\\n9\\r\\n8\\r\\n', 'output': ['4\\r\\n']}, {'input': '1 85699\\r\\n78924219635752981967414898939315271493564548581817\\r\\n', 'output': ['7\\r\\n']}, {'input': '15 357307\\r\\n666662222299999333337777700000\\r\\n666662222299999333337777700000\\r\\n666662222299999333337777700000\\r\\n666662222299999333337777700000\\r\\n666662222299999333337777700000\\r\\n222221111100000111115555566666\\r\\n222221111100000111115555566666\\r\\n222221111100000111115555566666\\r\\n222221111100000111115555566666\\r\\n222221111100000111115555566666\\r\\n000001111188888444441111144444\\r\\n000001111188888444441111144444\\r\\n000001111188888444441111144444\\r\\n000001111188888444441111144444\\r\\n000001111188888444441111144444\\r\\n', 'output': ['8\\r\\n']}, {'input': '8 194869\\r\\n6644\\r\\n6644\\r\\n0077\\r\\n0077\\r\\n2255\\r\\n2255\\r\\n6600\\r\\n6600\\r\\n', 'output': ['2\\r\\n']}, {'input': '3 951706\\r\\n777111111111999444777555222555222666666999\\r\\n777111111111999444777555222555222666666999\\r\\n777111111111999444777555222555222666666999\\r\\n', 'output': ['9\\r\\n']}, {'input': '23 742870\\r\\n377777338888888888\\r\\n111111338888888888\\r\\n111111338888888888\\r\\n111111338888888888\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n111111335555555559\\r\\n', 'output': ['9\\r\\n']}, {'input': '12 534024\\r\\n66666999991175\\r\\n66666999991175\\r\\n66666999991175\\r\\n66666999993372\\r\\n66666999993316\\r\\n66666999993394\\r\\n66666999993392\\r\\n66666999993305\\r\\n66666999993305\\r\\n66666999993309\\r\\n66666999993303\\r\\n66666999993305\\r\\n', 'output': ['6\\r\\n']}, {'input': '12 899884\\r\\n70499\\r\\n70499\\r\\n75499\\r\\n75499\\r\\n75499\\r\\n75499\\r\\n70499\\r\\n70499\\r\\n00499\\r\\n03499\\r\\n00499\\r\\n00499\\r\\n', 'output': ['7\\r\\n']}, {'input': '8 215240\\r\\n888888888888884433333\\r\\n888888888888884455555\\r\\n222222222222221166077\\r\\n222222222222220222222\\r\\n222222222222220222222\\r\\n222222222222220222222\\r\\n488888888888888888888\\r\\n999999949211933222779\\r\\n', 'output': ['4\\r\\n']}, {'input': '15 6394\\r\\n55958\\r\\n55158\\r\\n55158\\r\\n55158\\r\\n55158\\r\\n66158\\r\\n66158\\r\\n66158\\r\\n22158\\r\\n22158\\r\\n22128\\r\\n22128\\r\\n22128\\r\\n22728\\r\\n22728\\r\\n', 'output': ['2\\r\\n']}, {'input': '30 279591\\r\\n811113337\\r\\n811119997\\r\\n811119997\\r\\n411119997\\r\\n411119997\\r\\n411119997\\r\\n411119997\\r\\n411119990\\r\\n411110777\\r\\n011119777\\r\\n011119777\\r\\n011119777\\r\\n888889777\\r\\n888889116\\r\\n888889117\\r\\n888881887\\r\\n888881887\\r\\n888881887\\r\\n888881887\\r\\n888889997\\r\\n888889997\\r\\n888889997\\r\\n055559997\\r\\n855559997\\r\\n811119997\\r\\n811119997\\r\\n811119997\\r\\n811119997\\r\\n588889997\\r\\n588889997\\r\\n', 'output': ['8\\r\\n']}, {'input': '49 749442\\r\\n8888888\\r\\n8888888\\r\\n8888888\\r\\n5777777\\r\\n5777777\\r\\n5777777\\r\\n5777777\\r\\n5777777\\r\\n5777777\\r\\n5777777\\r\\n5777777\\r\\n5777777\\r\\n5111111\\r\\n5111111\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n', 'output': ['6\\r\\n']}, {'input': '31 70745\\r\\n90016\\r\\n60016\\r\\n00016\\r\\n30016\\r\\n30016\\r\\n30013\\r\\n30013\\r\\n90014\\r\\n30014\\r\\n30014\\r\\n20014\\r\\n20014\\r\\n80014\\r\\n80014\\r\\n80016\\r\\n80016\\r\\n80016\\r\\n80016\\r\\n80016\\r\\n80013\\r\\n80013\\r\\n80016\\r\\n00016\\r\\n00016\\r\\n00016\\r\\n00016\\r\\n50016\\r\\n90016\\r\\n90016\\r\\n90016\\r\\n90016\\r\\n', 'output': ['6\\r\\n']}, {'input': '16 714827\\r\\n33333885555555555199311111111\\r\\n33333885555555555199377777774\\r\\n33333965555555555166377777774\\r\\n99111112222222222166377777774\\r\\n55555555555555543423877777774\\r\\n55555555555555543423977777774\\r\\n55555555555555577777077777774\\r\\n55555555555555577777077777774\\r\\n55555555555555511111177777774\\r\\n55555555555555511111177777774\\r\\n55555555555555511111177777774\\r\\n55555555555555511111177777774\\r\\n99999999999999999999977777774\\r\\n22222222222222222222277777774\\r\\n22222222222222222222277777774\\r\\n22222222222222222222277777774\\r\\n', 'output': ['1\\r\\n']}, {'input': '28 392042\\r\\n555555555\\r\\n444044444\\r\\n999944444\\r\\n999944444\\r\\n999944444\\r\\n999944444\\r\\n999944444\\r\\n999944444\\r\\n999944444\\r\\n999944444\\r\\n522744444\\r\\n522744444\\r\\n509644444\\r\\n888882290\\r\\n888882290\\r\\n888882290\\r\\n888882290\\r\\n888882233\\r\\n888882233\\r\\n888882233\\r\\n888882233\\r\\n888882233\\r\\n888882233\\r\\n555555555\\r\\n555555555\\r\\n555555555\\r\\n111111111\\r\\n111111111\\r\\n', 'output': ['5\\r\\n']}, {'input': '11 988024\\r\\n511111\\r\\n455555\\r\\n088883\\r\\n222227\\r\\n222228\\r\\n222221\\r\\n222221\\r\\n888881\\r\\n888886\\r\\n888883\\r\\n888883\\r\\n', 'output': ['5\\r\\n']}, {'input': '14 309330\\r\\n5998837733\\r\\n5998837733\\r\\n7998837733\\r\\n7998807733\\r\\n7998807733\\r\\n7998807733\\r\\n7885507733\\r\\n7885507733\\r\\n4885507733\\r\\n4885507733\\r\\n4885592233\\r\\n5885527777\\r\\n3885527777\\r\\n4444427777\\r\\n', 'output': ['5\\r\\n']}, {'input': '16 50000000\\r\\n33333885555555555199311111111\\r\\n33333885555555555199377777774\\r\\n33333965555555555166377777774\\r\\n99111112222222222166377777774\\r\\n55555555555555543423877777774\\r\\n55555555555555543423977777774\\r\\n55555555555555577777077777774\\r\\n55555555555555577777077777774\\r\\n55555555555555511111177777774\\r\\n55555555555555511111177777774\\r\\n55555555555555511111177777774\\r\\n55555555555555511111177777774\\r\\n99999999999999999999977777774\\r\\n22222222222222222222277777774\\r\\n22222222222222222222277777774\\r\\n22222222222222222222277777774\\r\\n', 'output': ['1\\r\\n']}, {'input': '28 50000000\\r\\n555555555\\r\\n444044444\\r\\n999944444\\r\\n999944444\\r\\n999944444\\r\\n999944444\\r\\n999944444\\r\\n999944444\\r\\n999944444\\r\\n999944444\\r\\n522744444\\r\\n522744444\\r\\n509644444\\r\\n888882290\\r\\n888882290\\r\\n888882290\\r\\n888882290\\r\\n888882233\\r\\n888882233\\r\\n888882233\\r\\n888882233\\r\\n888882233\\r\\n888882233\\r\\n555555555\\r\\n555555555\\r\\n555555555\\r\\n111111111\\r\\n111111111\\r\\n', 'output': ['9\\r\\n']}, {'input': '11 50000000\\r\\n511111\\r\\n455555\\r\\n088883\\r\\n222227\\r\\n222228\\r\\n222221\\r\\n222221\\r\\n888881\\r\\n888886\\r\\n888883\\r\\n888883\\r\\n', 'output': ['1\\r\\n']}, {'input': '14 50000000\\r\\n5998837733\\r\\n5998837733\\r\\n7998837733\\r\\n7998807733\\r\\n7998807733\\r\\n7998807733\\r\\n7885507733\\r\\n7885507733\\r\\n4885507733\\r\\n4885507733\\r\\n4885592233\\r\\n5885527777\\r\\n3885527777\\r\\n4444427777\\r\\n', 'output': ['7\\r\\n']}, {'input': '15 50000000\\r\\n55958\\r\\n55158\\r\\n55158\\r\\n55158\\r\\n55158\\r\\n66158\\r\\n66158\\r\\n66158\\r\\n22158\\r\\n22158\\r\\n22128\\r\\n22128\\r\\n22128\\r\\n22728\\r\\n22728\\r\\n', 'output': ['5\\r\\n']}, {'input': '30 50000000\\r\\n811113337\\r\\n811119997\\r\\n811119997\\r\\n411119997\\r\\n411119997\\r\\n411119997\\r\\n411119997\\r\\n411119990\\r\\n411110777\\r\\n011119777\\r\\n011119777\\r\\n011119777\\r\\n888889777\\r\\n888889116\\r\\n888889117\\r\\n888881887\\r\\n888881887\\r\\n888881887\\r\\n888881887\\r\\n888889997\\r\\n888889997\\r\\n888889997\\r\\n055559997\\r\\n855559997\\r\\n811119997\\r\\n811119997\\r\\n811119997\\r\\n811119997\\r\\n588889997\\r\\n588889997\\r\\n', 'output': ['9\\r\\n']}, {'input': '49 50000000\\r\\n8888888\\r\\n8888888\\r\\n8888888\\r\\n5777777\\r\\n5777777\\r\\n5777777\\r\\n5777777\\r\\n5777777\\r\\n5777777\\r\\n5777777\\r\\n5777777\\r\\n5777777\\r\\n5111111\\r\\n5111111\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n5666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n0666666\\r\\n', 'output': ['8\\r\\n']}, {'input': '31 50000000\\r\\n90016\\r\\n60016\\r\\n00016\\r\\n30016\\r\\n30016\\r\\n30013\\r\\n30013\\r\\n90014\\r\\n30014\\r\\n30014\\r\\n20014\\r\\n20014\\r\\n80014\\r\\n80014\\r\\n80016\\r\\n80016\\r\\n80016\\r\\n80016\\r\\n80016\\r\\n80013\\r\\n80013\\r\\n80016\\r\\n00016\\r\\n00016\\r\\n00016\\r\\n00016\\r\\n50016\\r\\n90016\\r\\n90016\\r\\n90016\\r\\n90016\\r\\n', 'output': ['9\\r\\n']}]", "source_code": "import sys\n\nm, n = map(int, sys.stdin.readline().split())\n\ndef get_block(x, y):\n    return blocks[y][x]\n\ndef get_block_size(x, y):\n    return block_sizes[y][x]\n\ndef get_block_color(x, y):\n    return block_colors[y][x]\n\ndef get_block_x(x, y):\n    return block_xs[y][x]\n\ndef get_block_y(x, y):\n    return block_ys[y][x]\n\ndef get_block_x_size(x, y):\n    return block_x_sizes[y][x]\n\ndef get_block_y_size(x, y):\n    return block_y_sizes[y][x]\n\ndef get_block_x_color(x, y):\n    return block_x_colors[y][x]\n\ndef get_block_y_color(x, y):\n    return block_y_colors[y][x]\n\ndef get_block_x_x(x, y):\n    return block_x_xs[y][x]\n\ndef get_block_y_y(x, y):\n    return block_y_ys[y][x]\n\ndef get_block_x_y(x, y):\n    return block_x_ys[y][x]\n\ndef get_block_y_x(x, y):\n    return block_y_xs[y][x]\n\ndef get_block_x_size_x(x, y):\n    return block_x_size_xs[y][x]\n\ndef get_block_y_size_y(x, y):\n    return block_y_size_ys[y][x]\n\ndef get_block_x_size_y(x, y):\n    return block_x_size_ys[y][x]\n\ndef get_block_y_size_x(x, y):\n    return block_y_size_xs[y][x]\n\ndef get_block_x_color_x(x, y):\n    return block_x_color_xs[y][x]\n\ndef get_block_y_color_y(x, y):\n    return block_y_color_ys[y][x]\n\ndef get_block_x_color_y(x, y):\n    return block_x_color_ys[y][x]\n\ndef get_block_y_color_x(x, y):\n    return block_y_color_xs[y][x]\n\ndef get_block_x_x_size(x, y):\n    return block_x_x_sizes[y][x]\n\ndef get_block_y_y_size(x, y):\n    return block_y_y_sizes[y][x]\n\ndef get_block_x_y_size(x, y):\n    return block_x_y_sizes[y][x]\n\ndef get_block_y_x_size(x, y):\n    return block_y_x_sizes[y][x]\n\ndef get_block_x_x_color(x, y):\n    return block_x_x_colors[y][x]\n\ndef get_block_y_y_color(x, y):\n    return block_y_y_colors[y][x]\n\ndef get_block_x_y_color(x, y):\n    return block_x_y_colors[y][x]\n\ndef get_block_y_x_color(x, y):\n    return block_y_x_colors[y][x]\n\ndef get_block_x_x_x(x, y):\n    return block_x_x_xs[y][x]\n\ndef get_block_y_y_y(x, y):\n    return block_y_y_ys[y][x]\n\ndef get_block_x_y_y(x, y):\n    return block_x_y_ys[y][x]\n\ndef get_block_y_x_y(x, y):\n    return block_y_x_ys[y][x]\n\ndef get_block_x_x_y(x, y):\n    return block_x_x_ys[y][x]\n\ndef get_block_y_y_x(x, y):\n    return block_y_y_xs[y][x]\n\ndef get_block_x_y_x(x, y):\n    return block_x_y_xs[y][x]\n\ndef get_block_y_x_x(x, y):\n    return block_y_x_xs[y][x]\n\ndef get_block_x_x_color_x(x, y):\n    return block_x_x_color_xs[y][x]\n\ndef get_block_y_y_color_y(x, y):\n    return block_y_y_color_ys[y][x]\n\ndef get_block_x_y_color_x(x, y):\n    return block_x_y_color_xs[y][x]\n\ndef get_block_y_x_color_y(x, y):\n    return block_y_x_color_ys[y][x]\n\ndef get_block_x_x_color_y(x, y):\n    return block_x_x_color_ys[y][x]\n\ndef get_block_y_x_color_x(x, y):\n    return block_y_x_color_xs[y][x]\n\ndef get_block_x_x_size_x(x, y):\n    return block_x_x_size_xs[y][x]\n\ndef get_block_y_y_size_y(x, y):\n    return block_y_y_size_ys[y][x]\n\ndef get_block_x_y_size_x(x, y):\n    return block_x_y_size_xs[y][x]\n\ndef get_block_y_x_size_y(x, y):\n    return block_y_x_size_ys[y][x]\n\ndef get_block_x_y_size_x(x, y):\n    return block_x_y_size_xs[y][x]\n\ndef get_block_y_x_size_y(x, y):\n    return block_y_x_size_ys[y][x]\n\ndef get_block_x_y_size_x(x, y):\n    return block_x_y_size_xs[y][x]\n\ndef get_block_y_x_size_y(x, y):\n    return block_y_x_size_ys[y][x]\n\ndef get_block_x_y_size_x(x, y):\n    return block_x_y_size_xs[y][x]\n\ndef get_block_y_x_size_y(x, y):\n    return block_y_x_size_ys[y][x]\n\ndef get_block_x_y_size_x(x, y):\n    return block_x_y_size_xs[y][x]\n\ndef get_block_y_x_size_y(x, y):\n    return block_y_x_size_ys[y][x]\n\ndef get_block_x_y_size_x(x, y):\n    return block_x_y_size_xs[y][x]\n\ndef get_block_y_x_size_y(x, y):\n    return block_y_x_size_ys[y][x]\n\ndef get_block_x_y_size_x(x, y):\n    return block_x_y_size_xs[y][x]\n\ndef get_block_y_x_size_y(x, y):\n    return block_y_x_size_ys[y][x]\n\ndef get_block_x_y_size_x(x, y):\n    return block_x_y_size_xs[y][x]\n\ndef get_block_y_x_size_y(x, y):\n    return block_y_x_size_ys[y][x]\n\ndef get_block_x_y_size_x(x, y):\n    return block_x_y_size_xs[y][x]\n\ndef get_block_y_x_"}
{"src_uid": "bc8b4b74c2f2d486e2d2f03982ef1013", "id": 171, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1900, "testcases": "[{'input': '3 3\\r\\n14 12 10\\r\\n', 'output': ['2 2\\r\\n1 2\\r\\n2 3\\r\\n']}, {'input': '2 0\\r\\n10 10\\r\\n', 'output': ['2 1\\r\\n1 2\\r\\n']}, {'input': '4 5\\r\\n8 19 10 13\\r\\n', 'output': ['2 1\\r\\n3 4\\r\\n']}, {'input': '1 1\\r\\n1\\r\\n', 'output': ['1 1\\r\\n1 1\\r\\n']}, {'input': '2 10\\r\\n35 45\\r\\n', 'output': ['2 1\\r\\n1 2\\r\\n']}, {'input': '4 8\\r\\n89 33 54 75\\r\\n', 'output': ['1 4\\r\\n1 1\\r\\n2 2\\r\\n3 3\\r\\n4 4\\r\\n']}, {'input': '5 1\\r\\n9 6 8 7 5\\r\\n', 'output': ['2 1\\r\\n3 4\\r\\n']}, {'input': '3 3\\r\\n3 8 6\\r\\n', 'output': ['2 1\\r\\n2 3\\r\\n']}, {'input': '4 1000000\\r\\n100001 1 200001 300001\\r\\n', 'output': ['4 1\\r\\n1 4\\r\\n']}, {'input': '4 1000\\r\\n11497 9999 10730 12280\\r\\n', 'output': ['2 1\\r\\n2 3\\r\\n']}, {'input': '3 0\\r\\n1000000 1000000 1000000\\r\\n', 'output': ['3 1\\r\\n1 3\\r\\n']}, {'input': '4 50\\r\\n165 182 157 132\\r\\n', 'output': ['4 1\\r\\n1 4\\r\\n']}, {'input': '5 173\\r\\n350 250 200 300 400\\r\\n', 'output': ['4 1\\r\\n1 4\\r\\n']}, {'input': '4 0\\r\\n1 1 1 1\\r\\n', 'output': ['4 1\\r\\n1 4\\r\\n']}, {'input': '2 1000000\\r\\n1 1000000\\r\\n', 'output': ['2 1\\r\\n1 2\\r\\n']}, {'input': '7 14\\r\\n28 28 29 35 25 29 28\\r\\n', 'output': ['7 1\\r\\n1 7\\r\\n']}, {'input': '10 163\\r\\n7541 2535 5883 5775 2821 5962 4489 5548 2852 4595\\r\\n', 'output': ['2 1\\r\\n3 4\\r\\n']}, {'input': '15 793\\r\\n98580 27440 3719 73977 34819 64092 89939 75329 72884 66502 17464 73662 6666 47984 45348\\r\\n', 'output': ['1 15\\r\\n1 1\\r\\n2 2\\r\\n3 3\\r\\n4 4\\r\\n5 5\\r\\n6 6\\r\\n7 7\\r\\n8 8\\r\\n9 9\\r\\n10 10\\r\\n11 11\\r\\n12 12\\r\\n13 13\\r\\n14 14\\r\\n15 15\\r\\n']}, {'input': '28 543\\r\\n1921 1700 1363 2580 2693 3144 2269 908 3863 3750 2151 3039 1581 3395 1133 1804 1464 2040 2372 2475 1240 800 3521 3270 2815 1026 3625 2930\\r\\n', 'output': ['3 1\\r\\n18 20\\r\\n']}, {'input': '55 1000\\r\\n2612 1306 4300 1790 3173 9493 7209 7763 8563 4534 7466 1281 4483 6863 3787 7292 3957 8775 7221 4016 5743 6556 2070 2119 4795 9094 1913 2077 8786 4520 1865 2357 7871 3288 8231 5808 9383 9820 9974 3056 5343 2169 5177 6299 5805 8132 9315 6747 5226 3531 1206 4073 8290 1423 6720\\r\\n', 'output': ['3 1\\r\\n37 39\\r\\n']}]", "source_code": "n,k=map(int,input().split())\na=list(map(int,input().split()))\nb=[]\nc=[]\nd=[]\ne=[]\nf=[]\ng=[]\nh=[]\ni=0\nj=0\nwhile i<n:\n    if j==0:\n        j=i\n    if a[i]-a[j]<=k:\n        j+=1\n    else:\n        b.append([j+1,i])\n        j=i\n    i+=1\nb.append([j+1,i])\nprint(len(b),len(b))\nfor i in range(len(b)):\n    print(b[i][0],b[i][1])\n"}
{"src_uid": "6e2a8aa58ed8cd308cb482e4c24cbbbb", "id": 172, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2100, "testcases": "[{'input': '4\\r\\n0 0 0\\r\\n0 10 0\\r\\n10 10 0\\r\\n10 0 0\\r\\n0 0 0\\r\\n1 1\\r\\n5 5 25\\r\\n', 'output': ['YES\\r\\n25.5000000000\\r\\n10.0000000000 4.5000000000 0.0000000000\\r\\n']}, {'input': '4\\r\\n0 0 0\\r\\n0 10 0\\r\\n10 10 0\\r\\n10 0 0\\r\\n0 0 0\\r\\n1 1\\r\\n5 5 50\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1\\r\\n1 2 3\\r\\n4 5 6\\r\\n20 10\\r\\n1 2 3\\r\\n', 'output': ['YES\\r\\n0.0000000000\\r\\n1.0000000000 2.0000000000 3.0000000000\\r\\n']}, {'input': '4\\r\\n0 0 0\\r\\n0 1 0\\r\\n1 1 0\\r\\n1 0 0\\r\\n0 0 0\\r\\n10 5\\r\\n0 0 8\\r\\n', 'output': ['YES\\r\\n0.8000000000\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '4\\r\\n1 0 0\\r\\n0 1 0\\r\\n-1 0 0\\r\\n0 -1 0\\r\\n1 0 0\\r\\n10 5\\r\\n9 0 -8\\r\\n', 'output': ['YES\\r\\n1.1313708499\\r\\n1.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '5\\r\\n32 -5 -42\\r\\n-25 -38 -6\\r\\n-13 41 25\\r\\n21 -25 -32\\r\\n43 35 -19\\r\\n-38 -12 -48\\r\\n3 2\\r\\n182 -210 32\\r\\n', 'output': ['YES\\r\\n97.5061769956\\r\\n-0.5611252637 16.8539490414 4.1465923539\\r\\n']}, {'input': '10\\r\\n-20 28 4\\r\\n-12 -34 49\\r\\n3 -11 25\\r\\n-35 -46 25\\r\\n4 29 -15\\r\\n17 16 -10\\r\\n40 -35 16\\r\\n-15 -25 10\\r\\n-2 40 20\\r\\n-26 18 -49\\r\\n14 8 -44\\r\\n3 1\\r\\n-877 450 899\\r\\n', 'output': ['YES\\r\\n437.7804049730\\r\\n-6.8291526407 15.8542367965 16.2852671995\\r\\n']}, {'input': '1\\r\\n5 -22 -3\\r\\n31 -41 -35\\r\\n4 4\\r\\n139 -86 -115\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n-34 37 40\\r\\n24 -28 7\\r\\n-20 -14 -25\\r\\n1 1\\r\\n-69 -28 -70\\r\\n', 'output': ['YES\\r\\n107.2130636667\\r\\n12.9900466281 -24.4968330180 -1.0072388159\\r\\n']}, {'input': '3\\r\\n-38 -39 -19\\r\\n-49 -16 50\\r\\n-3 -7 5\\r\\n28 -15 41\\r\\n1 1\\r\\n-100 -139 -33\\r\\n', 'output': ['NO\\r\\n']}, {'input': '15\\r\\n-17 -8 7\\r\\n-50 -28 8\\r\\n13 -38 -17\\r\\n27 -49 15\\r\\n34 49 17\\r\\n-17 36 25\\r\\n-10 -15 28\\r\\n-15 -36 32\\r\\n-8 47 26\\r\\n-19 18 -25\\r\\n44 36 -16\\r\\n4 -46 49\\r\\n46 20 -13\\r\\n21 -37 -8\\r\\n35 -38 -26\\r\\n-26 46 12\\r\\n4 1\\r\\n-1693 1363 2149\\r\\n', 'output': ['YES\\r\\n768.5953048926\\r\\n37.0198725921 5.8883712161 0.2563785546\\r\\n']}, {'input': '20\\r\\n26 47 23\\r\\n1 -2 17\\r\\n-14 -22 46\\r\\n19 34 -18\\r\\n22 -10 -34\\r\\n15 14 -48\\r\\n-30 -12 -12\\r\\n-23 40 -48\\r\\n-50 -41 -35\\r\\n48 -5 46\\r\\n-2 -11 10\\r\\n-49 47 -15\\r\\n31 6 10\\r\\n-41 35 15\\r\\n28 28 25\\r\\n43 -7 -10\\r\\n-19 -48 49\\r\\n-10 -29 28\\r\\n0 -10 28\\r\\n41 12 -26\\r\\n-14 40 17\\r\\n3 2\\r\\n-115 1407 1434\\r\\n', 'output': ['YES\\r\\n659.9757793192\\r\\n-5.2872973659 35.5644422954 10.1882506679\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n0 0 1\\r\\n10000 10000\\r\\n0 0 1\\r\\n', 'output': ['YES\\r\\n0.0000500000\\r\\n0.0000000000 0.0000000000 0.5000000000\\r\\n']}, {'input': '1\\r\\n10000 -10000 10000\\r\\n-10000 10000 -10000\\r\\n1 1\\r\\n10000 10000 10000\\r\\n', 'output': ['YES\\r\\n17320.5080756888\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '1\\r\\n10000 -10000 10000\\r\\n-10000 10000 -10000\\r\\n10000 1\\r\\n10000 10000 10000\\r\\n', 'output': ['YES\\r\\n1.9998845433\\r\\n9998.8453661206 -9998.8453661206 9998.8453661206\\r\\n']}, {'input': '1\\r\\n0 0 -1\\r\\n0 0 1\\r\\n10000 1\\r\\n0 0 10000\\r\\n', 'output': ['YES\\r\\n1.0000000000\\r\\n0.0000000000 0.0000000000 0.0000000000\\r\\n']}, {'input': '1\\r\\n0 0 0\\r\\n-1 0 0\\r\\n10000 1\\r\\n10000 0 0\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2\\r\\n10000 10000 10000\\r\\n10000 10000 -10000\\r\\n10000 -10000 -10000\\r\\n1 1\\r\\n-10000 -10000 10000\\r\\n', 'output': ['YES\\r\\n30000.0000000000\\r\\n10000.0000000000 0.0000000000 -10000.0000000000\\r\\n']}, {'input': '4\\r\\n10000 9999 10000\\r\\n10000 9999 9999\\r\\n10000 10000 9999\\r\\n10000 10000 10000\\r\\n10000 9999 10000\\r\\n10000 1\\r\\n-10000 -10000 -10000\\r\\n', 'output': ['YES\\r\\n3.4640748220\\r\\n10000.0000000000 9999.5359251780 10000.0000000000\\r\\n']}, {'input': '3\\r\\n10000 9999 10000\\r\\n10000 9999 9999\\r\\n10000 10000 9999\\r\\n10000 10000 10000\\r\\n10000 1\\r\\n-10000 -10000 -10000\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "import math\n\ndef dist(a, b):\n    return math.sqrt((a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2 + (a[2] - b[2]) ** 2)\n\ndef solve(n, x, y, z, vp, vs, px, py, pz):\n    if dist(x[0], px) <= vp * dist(x[0], x[1]):\n        print(\"YES\")\n        print(0)\n        print(*x[0])\n        return\n    for i in range(n):\n        t = dist(x[i], px) / vs\n        if t < dist(x[i], x[i + 1]) / vp:\n            print(\"YES\")\n            print(t)\n            print((x[i][0] + t * (x[i + 1][0] - x[i][0])) / (1 + t * (vp / vs - 1)),\n                  (x[i][1] + t * (x[i + 1][1] - x[i][1])) / (1 + t * (vp / vs - 1)),\n                  (x[i][2] + t * (x[i + 1][2] - x[i][2])) / (1 + t * (vp / vs - 1)))\n            return\n    print(\"NO\")\n\nn = int(input())\nx = []\ny = []\nz = []\nfor i in range(n + 1):\n    xi, yi, zi = map(int, input().split())\n    x.append((xi, yi, zi))\n    y.append((xi, yi, zi))\n    z.append((xi, yi, zi))\nvp, vs = map(int, input().split())\npx, py, pz = map(int, input().split())\nsolve(n, x, y, z, vp, vs, px, py, pz)\n"}
{"src_uid": "b0ef9cda01a01cad22e7f4c49e74e85c", "id": 173, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1900, "testcases": "[{'input': '5\\r\\n1 4 5 2 3\\r\\n3 4 2 1 5\\r\\n', 'output': ['3\\r\\n']}, {'input': '3\\r\\n3 1 2\\r\\n2 3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '5\\r\\n1 2 4 5 3\\r\\n1 5 4 2 3\\r\\n', 'output': ['3\\r\\n']}, {'input': '3\\r\\n3 1 2\\r\\n1 3 2\\r\\n', 'output': ['2\\r\\n']}, {'input': '7\\r\\n1 5 2 7 4 3 6\\r\\n6 3 1 2 5 4 7\\r\\n', 'output': ['4\\r\\n']}, {'input': '4\\r\\n1 4 2 3\\r\\n2 3 1 4\\r\\n', 'output': ['2\\r\\n']}, {'input': '4\\r\\n2 4 1 3\\r\\n2 3 1 4\\r\\n', 'output': ['3\\r\\n']}, {'input': '10\\r\\n4 7 8 1 2 3 5 9 6 10\\r\\n6 3 8 7 10 2 1 4 5 9\\r\\n', 'output': ['5\\r\\n']}, {'input': '7\\r\\n1 5 7 2 4 3 6\\r\\n3 2 5 7 6 1 4\\r\\n', 'output': ['4\\r\\n']}, {'input': '9\\r\\n1 7 4 9 3 8 2 5 6\\r\\n8 4 7 1 3 2 9 6 5\\r\\n', 'output': ['4\\r\\n']}, {'input': '5\\r\\n1 4 5 2 3\\r\\n3 4 2 1 5\\r\\n', 'output': ['3\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n2 3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n1 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n2 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n2 1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n1 3 2\\r\\n', 'output': ['2\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n3 2 1\\r\\n', 'output': ['3\\r\\n']}, {'input': '3\\r\\n1 2 3\\r\\n1 2 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '1\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n1 2 5 3 4\\r\\n3 5 4 2 1\\r\\n', 'output': ['4\\r\\n']}, {'input': '5\\r\\n5 3 2 4 1\\r\\n2 4 5 1 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '5\\r\\n1 2 4 5 3\\r\\n1 2 5 4 3\\r\\n', 'output': ['2\\r\\n']}, {'input': '5\\r\\n1 2 3 4 5\\r\\n1 2 3 4 5\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n5 4 3 2 1\\r\\n1 2 3 4 5\\r\\n', 'output': ['5\\r\\n']}, {'input': '5\\r\\n1 3 5 4 2\\r\\n1 4 5 3 2\\r\\n', 'output': ['3\\r\\n']}, {'input': '5\\r\\n1 5 2 4 3\\r\\n4 3 2 5 1\\r\\n', 'output': ['4\\r\\n']}, {'input': '25\\r\\n21 19 25 9 24 23 20 18 16 22 17 7 4 15 13 11 2 3 10 12 14 6 8 5 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\\r\\n', 'output': ['13\\r\\n']}, {'input': '30\\r\\n30 29 28 27 26 25 19 24 9 23 21 20 18 16 22 17 7 4 15 13 11 2 3 10 12 14 6 8 5 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\r\\n', 'output': ['19\\r\\n']}, {'input': '40\\r\\n40 27 29 39 30 34 28 26 25 38 19 32 24 9 37 23 21 20 18 33 36 16 22 35 17 7 4 15 31 13 11 2 3 10 12 14 6 8 5 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\\r\\n', 'output': ['19\\r\\n']}, {'input': '45\\r\\n45 44 40 43 27 29 41 39 30 34 28 26 25 42 38 19 32 24 9 37 23 21 20 18 33 36 16 22 35 17 7 4 15 31 13 11 2 3 10 12 14 6 8 5 1\\r\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45\\r\\n', 'output': ['22\\r\\n']}, {'input': '1\\r\\n1\\r\\n1\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na.sort()\nb.sort()\n\nans = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        ans = max(ans, i+1)\n\nprint(ans)\n"}
{"src_uid": "e9c486e2d942700e0644dff29b6e3be6", "id": 174, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1800, "testcases": "[{'input': '2 10 3\\r\\n100 3\\r\\n99 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 100 10\\r\\n100 11\\r\\n90 9\\r\\n', 'output': ['YES\\r\\n19 2\\r\\n0 1\\r\\n10 2\\r\\n']}, {'input': '10 100 5\\r\\n61 3\\r\\n55 2\\r\\n12 6\\r\\n39 5\\r\\n21 10\\r\\n39 7\\r\\n16 1\\r\\n10 1\\r\\n70 5\\r\\n100 7\\r\\n', 'output': ['YES\\r\\n21 6\\r\\n0 10\\r\\n15 9\\r\\n17 1\\r\\n18 2\\r\\n19 6\\r\\n20 5\\r\\n']}, {'input': '20 1000 35\\r\\n10 6\\r\\n66 38\\r\\n81 11\\r\\n18 46\\r\\n80 54\\r\\n76 55\\r\\n100 7\\r\\n96 23\\r\\n24 37\\r\\n4 24\\r\\n4 50\\r\\n71 4\\r\\n83 15\\r\\n7 23\\r\\n100 44\\r\\n99 34\\r\\n100 17\\r\\n100 66\\r\\n23 15\\r\\n90 35\\r\\n', 'output': ['YES\\r\\n7 7\\r\\n0 18\\r\\n1 15\\r\\n2 20\\r\\n3 5\\r\\n4 6\\r\\n5 2\\r\\n6 4\\r\\n']}, {'input': '20 1000 100\\r\\n49 26\\r\\n46 36\\r\\n1 114\\r\\n80 4\\r\\n80 125\\r\\n100 17\\r\\n6 184\\r\\n100 20\\r\\n59 60\\r\\n47 92\\r\\n52 20\\r\\n44 50\\r\\n3 15\\r\\n10 192\\r\\n6 13\\r\\n60 3\\r\\n63 102\\r\\n78 17\\r\\n0 124\\r\\n31 100\\r\\n', 'output': ['NO\\r\\n']}, {'input': '35 999 199\\r\\n95 80\\r\\n79 279\\r\\n14 291\\r\\n100 88\\r\\n64 55\\r\\n100 209\\r\\n85 4\\r\\n14 237\\r\\n75 126\\r\\n41 260\\r\\n81 67\\r\\n99 311\\r\\n71 220\\r\\n98 312\\r\\n53 213\\r\\n55 377\\r\\n78 374\\r\\n79 308\\r\\n34 40\\r\\n92 281\\r\\n53 119\\r\\n96 170\\r\\n90 7\\r\\n87 176\\r\\n27 50\\r\\n78 95\\r\\n31 327\\r\\n56 138\\r\\n91 221\\r\\n7 144\\r\\n100 335\\r\\n29 139\\r\\n61 247\\r\\n38 203\\r\\n100 242\\r\\n', 'output': ['YES\\r\\n3 3\\r\\n0 31\\r\\n1 14\\r\\n2 16\\r\\n']}, {'input': '50 1000 17\\r\\n26 1\\r\\n96 22\\r\\n100 27\\r\\n99 30\\r\\n97 5\\r\\n39 14\\r\\n100 17\\r\\n100 8\\r\\n98 21\\r\\n100 17\\r\\n100 34\\r\\n75 11\\r\\n68 31\\r\\n100 13\\r\\n3 5\\r\\n74 4\\r\\n100 12\\r\\n100 25\\r\\n100 32\\r\\n3 14\\r\\n100 10\\r\\n100 2\\r\\n75 28\\r\\n24 16\\r\\n27 20\\r\\n34 13\\r\\n64 29\\r\\n50 19\\r\\n90 22\\r\\n42 7\\r\\n48 12\\r\\n97 34\\r\\n22 1\\r\\n57 33\\r\\n100 13\\r\\n100 31\\r\\n61 12\\r\\n100 18\\r\\n64 19\\r\\n29 24\\r\\n100 33\\r\\n87 10\\r\\n35 33\\r\\n77 28\\r\\n100 15\\r\\n87 34\\r\\n68 2\\r\\n44 29\\r\\n55 3\\r\\n41 5\\r\\n', 'output': ['YES\\r\\n8 8\\r\\n0 11\\r\\n1 41\\r\\n2 32\\r\\n3 46\\r\\n4 19\\r\\n5 13\\r\\n6 34\\r\\n7 43\\r\\n']}, {'input': '70 1000 1\\r\\n91 2\\r\\n43 1\\r\\n100 1\\r\\n79 2\\r\\n26 1\\r\\n68 2\\r\\n4 2\\r\\n64 1\\r\\n100 1\\r\\n80 2\\r\\n20 2\\r\\n70 1\\r\\n25 1\\r\\n99 1\\r\\n64 1\\r\\n35 2\\r\\n60 1\\r\\n63 2\\r\\n93 1\\r\\n40 2\\r\\n100 1\\r\\n54 1\\r\\n100 1\\r\\n15 2\\r\\n72 1\\r\\n28 1\\r\\n5 1\\r\\n93 1\\r\\n100 2\\r\\n39 2\\r\\n54 2\\r\\n100 1\\r\\n55 1\\r\\n43 1\\r\\n20 1\\r\\n28 2\\r\\n21 1\\r\\n100 2\\r\\n98 1\\r\\n35 1\\r\\n12 2\\r\\n50 2\\r\\n7 2\\r\\n7 2\\r\\n12 2\\r\\n100 2\\r\\n44 1\\r\\n40 2\\r\\n56 2\\r\\n5 1\\r\\n100 1\\r\\n94 2\\r\\n100 2\\r\\n74 1\\r\\n83 2\\r\\n100 2\\r\\n81 2\\r\\n37 2\\r\\n29 1\\r\\n100 2\\r\\n99 1\\r\\n39 2\\r\\n83 2\\r\\n96 2\\r\\n30 2\\r\\n39 1\\r\\n38 1\\r\\n51 1\\r\\n11 1\\r\\n100 2\\r\\n', 'output': ['YES\\r\\n34 34\\r\\n0 29\\r\\n1 38\\r\\n2 46\\r\\n3 53\\r\\n4 56\\r\\n5 60\\r\\n6 70\\r\\n7 64\\r\\n8 52\\r\\n9 3\\r\\n10 1\\r\\n11 9\\r\\n12 14\\r\\n13 19\\r\\n14 55\\r\\n15 4\\r\\n16 10\\r\\n17 57\\r\\n18 63\\r\\n19 6\\r\\n20 8\\r\\n21 18\\r\\n22 12\\r\\n23 31\\r\\n24 42\\r\\n25 49\\r\\n26 20\\r\\n27 16\\r\\n28 30\\r\\n29 36\\r\\n30 11\\r\\n31 24\\r\\n32 41\\r\\n33 7\\r\\n']}, {'input': '4 660 722\\r\\n67 360\\r\\n96 778\\r\\n6 1041\\r\\n62 395\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 328 249\\r\\n62 265\\r\\n32 271\\r\\n72 237\\r\\n28 99\\r\\n22 364\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 351 183\\r\\n16 337\\r\\n19 221\\r\\n81 359\\r\\n87 253\\r\\n5 240\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2 439 283\\r\\n25 510\\r\\n31 547\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4 337 873\\r\\n62 81\\r\\n87 481\\r\\n39 1189\\r\\n45 450\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 940 591\\r\\n92 762\\r\\n59 255\\r\\n15 1061\\r\\n53 1016\\r\\n10 527\\r\\n', 'output': ['NO\\r\\n']}, {'input': '5 851 931\\r\\n88 401\\r\\n48 1196\\r\\n86 1817\\r\\n20 1575\\r\\n30 1474\\r\\n', 'output': ['NO\\r\\n']}, {'input': '29 634 982\\r\\n60 1351\\r\\n54 640\\r\\n1 253\\r\\n72 24\\r\\n40 529\\r\\n52 339\\r\\n73 21\\r\\n34 1284\\r\\n32 1264\\r\\n76 1346\\r\\n92 320\\r\\n11 1441\\r\\n67 1215\\r\\n69 1524\\r\\n77 1672\\r\\n83 412\\r\\n48 241\\r\\n25 894\\r\\n91 1474\\r\\n18 1743\\r\\n98 1944\\r\\n48 788\\r\\n77 860\\r\\n31 629\\r\\n91 1042\\r\\n36 1116\\r\\n41 1162\\r\\n63 129\\r\\n15 1125\\r\\n', 'output': ['NO\\r\\n']}, {'input': '10 1000 8\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n', 'output': ['YES\\r\\n509 10\\r\\n0 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n']}, {'input': '11 2 10\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n', 'output': ['YES\\r\\n12 11\\r\\n0 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n6 7\\r\\n7 8\\r\\n8 9\\r\\n9 10\\r\\n10 11\\r\\n']}, {'input': '3 200 10\\r\\n100 3\\r\\n100 8\\r\\n50 1000\\r\\n', 'output': ['YES\\r\\n102 3\\r\\n0 2\\r\\n1 1\\r\\n101 3\\r\\n']}, {'input': '2 100 2\\r\\n100 2\\r\\n100 2\\r\\n', 'output': ['YES\\r\\n51 2\\r\\n0 1\\r\\n1 2\\r\\n']}, {'input': '2 1000 1\\r\\n100 1\\r\\n100 1\\r\\n', 'output': ['YES\\r\\n1001 2\\r\\n0 1\\r\\n1 2\\r\\n']}, {'input': '6 1000 53\\r\\n100 10\\r\\n100 10\\r\\n100 10\\r\\n100 10\\r\\n100 10\\r\\n100 10\\r\\n', 'output': ['YES\\r\\n148 6\\r\\n0 1\\r\\n1 2\\r\\n2 3\\r\\n3 4\\r\\n4 5\\r\\n5 6\\r\\n']}, {'input': '3 100 2\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n', 'output': ['YES\\r\\n102 3\\r\\n0 1\\r\\n1 2\\r\\n2 3\\r\\n']}, {'input': '3 100 3\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3 100 4\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '3 100 5\\r\\n100 1\\r\\n100 1\\r\\n100 1\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "import sys\n\ndef main():\n    n, m, r = map(int, sys.stdin.readline().split())\n    scrolls = []\n    for i in range(n):\n        p, d = map(int, sys.stdin.readline().split())\n        scrolls.append((p, d))\n    scrolls.sort(key=lambda x: x[0])\n    time = 0\n    boss = m\n    used = []\n    while boss > 0:\n        boss -= sum(d for p, d in scrolls if p * m / 100 <= boss)\n        time += 1\n        boss += r\n        for i, (p, d) in enumerate(scrolls):\n            if p * m / 100 <= boss:\n                used.append((time, i + 1))\n                scrolls.pop(i)\n                break\n    if boss <= 0:\n        print(\"YES\")\n        print(time, len(used))\n        for t, i in used:\n            print(t, i)\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"}
{"src_uid": "0ef5e0621f13107d0c8786766ae2ac56", "id": 175, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2600, "testcases": "[{'input': '2\\r\\n', 'output': ['YES\\r\\n1\\r\\n1\\r\\n0\\r\\n']}, {'input': '3\\r\\n', 'output': ['NO\\r\\n']}, {'input': '13\\r\\n', 'output': ['YES\\r\\n1\\r\\n2\\r\\n0\\r\\n']}, {'input': '1729\\r\\n', 'output': ['YES\\r\\n1\\r\\n4\\r\\n1\\r\\n156\\r\\n']}, {'input': '1\\r\\n', 'output': ['NO\\r\\n']}, {'input': '156\\r\\n', 'output': ['YES\\r\\n1\\r\\n4\\r\\n1\\r\\n1729\\r\\n']}, {'input': '144\\r\\n', 'output': ['NO\\r\\n']}, {'input': '15407021574586369\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n465813504\\r\\n5162766336\\r\\n61917613056\\r\\n743008391424\\r\\n8916100449984\\r\\n106993205379216\\r\\n1283918464548876\\r\\n']}, {'input': '1283918464548876\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n465813504\\r\\n5162766336\\r\\n61917613056\\r\\n743008391424\\r\\n8916100449984\\r\\n106993205379216\\r\\n15407021574586369\\r\\n']}, {'input': '106993205379216\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n465813504\\r\\n5162766336\\r\\n61917613056\\r\\n743008391424\\r\\n8916100449984\\r\\n1283918464548876\\r\\n15407021574586369\\r\\n']}, {'input': '8916100449984\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n465813504\\r\\n5162766336\\r\\n61917613056\\r\\n743008391424\\r\\n106993205379216\\r\\n1283918464548876\\r\\n15407021574586369\\r\\n']}, {'input': '743008391424\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n465813504\\r\\n5162766336\\r\\n61917613056\\r\\n8916100449984\\r\\n106993205379216\\r\\n1283918464548876\\r\\n15407021574586369\\r\\n']}, {'input': '61917613056\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n465813504\\r\\n5162766336\\r\\n743008391424\\r\\n8916100449984\\r\\n106993205379216\\r\\n1283918464548876\\r\\n15407021574586369\\r\\n']}, {'input': '5162766336\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n465813504\\r\\n61917613056\\r\\n743008391424\\r\\n8916100449984\\r\\n106993205379216\\r\\n1283918464548876\\r\\n15407021574586369\\r\\n']}, {'input': '465813504\\r\\n', 'output': ['YES\\r\\n1\\r\\n16\\r\\n7\\r\\n5162766336\\r\\n61917613056\\r\\n743008391424\\r\\n8916100449984\\r\\n106993205379216\\r\\n1283918464548876\\r\\n15407021574586369\\r\\n']}, {'input': '1190892770349870530939783612223854919520376583681977765887915460625605936058755310651852367291739265953207545289130222590192089760107219016552443777446454737593270848929686985225627328165141495957916933183554147885929489200931370369335342990301385609877410822418323040587200691179244114277235163137\\r\\n', 'output': ['NO\\r\\n']}, {'input': '595446385174935265469891806111927459760188291840988882943957730312802968029377655325926183645869632976603772644565111295096044880053609508276221888723227368796635424464843492612813664082570747978958466591777073942964744600465685184667671495150692804938705411209161520293600345589622057138617581568\\r\\n', 'output': ['NO\\r\\n']}, {'input': '25\\r\\n', 'output': ['NO\\r\\n']}, {'input': '941796563564014133460267652699405064136604147775680640408635568423120076418612383600961606320075481457728632621229496557902028935524874377670656752361237195740789199168688114539822313589449591752852405348364368488613997844015773837981050319855641810991084718329572826001220219\\r\\n', 'output': ['NO\\r\\n']}, {'input': '79360359146807441660707083821018832188095237636414144034857851003419752010124705615779249215657075053438039921073878645370211154334804568157886814559909\\r\\n', 'output': ['NO\\r\\n']}, {'input': '63730052926382178992698271572\\r\\n', 'output': ['NO\\r\\n']}, {'input': '781127467969689863953686682245136076127159921705034542049372816247984349746396880068864077830521695515007722284098436125466526268962707778595903329840419133974864831578401355678018910046595664462\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6158324958633591462725987806787114657822761584945953440793358408\\r\\n', 'output': ['NO\\r\\n']}, {'input': '46865942276811740149949176718949673344632458696505595472917789224885825949034661409971763949176343056701403524645790892802371117466746709730235969308113002256137529699677021858777002204698794034488631496662175642982367736619451227\\r\\n', 'output': ['NO\\r\\n']}, {'input': '30237645054497458443810364460387991000047179363449854478913094584184671326397148735574822623728870964468880\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2340834982489248497640077401144544875656219324259480464300721974528452789353163588007890141857933775490305682107276886017882071992830194933217950703328428111517059826130590646975303231172522274173055168264136989194405810785131454927884294753122224538370897882934059\\r\\n', 'output': ['NO\\r\\n']}, {'input': '188808426143782131983811729737047667239979348184409855460833141044812532916921011366813880911319644625405122800255947507577498497005580408229\\r\\n', 'output': ['NO\\r\\n']}, {'input': '11\\r\\n', 'output': ['NO\\r\\n']}, {'input': '837952166310387766556098005402621146120844433859027080340550200820\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6658370691480968202384509492140362150472696196949673577340706113760133821635599667476781507918250717914609488172442814676\\r\\n', 'output': ['NO\\r\\n']}, {'input': '496620932866717074931903995027173085744596193421095444317407919730992986418713478580824584919587030125446806223296721174921873955469939680411818878465888018986191990428049489376\\r\\n', 'output': ['NO\\r\\n']}, {'input': '1055050055824280186133547527395898666709023463559337207019374080060005629519967890329878081184599905695126755199503698703340223998620951421943134090897041663457029971964336512111472968057533187306110300592753045593222495258017559167383354672\\r\\n', 'output': ['NO\\r\\n']}, {'input': '833488\\r\\n', 'output': ['NO\\r\\n']}, {'input': '6623739799588591251984406341341227075747347067457011846886851179047097\\r\\n', 'output': ['NO\\r\\n']}, {'input': '491137842784568289872893698937459777201151060689848471272003426250808340375567208957554901863756992593841404624991936090178731\\r\\n', 'output': ['NO\\r\\n']}, {'input': '921020945402270233565256424740666649108666245414796768645533036514715926608741510409618545180420952947917462937925573726593991655435868735899832746218676826629010574075553051352459309199055\\r\\n', 'output': ['NO\\r\\n']}, {'input': '73010581613999159726778758153209240813500342925961695523976131595080552126499402124287397930918281238199343324378719343080627189983992629778313739785259010389762036264197722427990331444297391895841265448905560880286941336214995793596526089977876\\r\\n', 'output': ['NO\\r\\n']}, {'input': '20046142930690780976270827075270\\r\\n', 'output': ['NO\\r\\n']}, {'input': '9685166910821197056344900917707673568669808490600751439157007968027004377622601634787545920946543261243701428886581331490848676434786296227674864970612484770201\\r\\n', 'output': ['NO\\r\\n']}, {'input': '8135498415686025907059626116077260223347794805104214588176486213766836727225732896611278946787711775240855660997946707132990500568944980168321229607627861318462551364491230037357687242571268657488824365976425738641613571689437917277074234256494445914221354904615014917288299991097350709814\\r\\n', 'output': ['NO\\r\\n']}, {'input': '4805043123239964766764344326469867688727869311599746349016084457204677169811854267718990063526979167327981002200329174783850464\\r\\n', 'output': ['NO\\r\\n']}, {'input': '2376595620091080825479292544658464163405755746884100218035485700973409491416884420742631899446144679322008453313773241425622490028383089317622842863337164723765526589656211098933400307364163919083790470365474085981340438888606855706394352678991102\\r\\n', 'output': ['NO\\r\\n']}, {'input': '99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\\r\\n', 'output': ['NO\\r\\n']}, {'input': '145\\r\\n', 'output': ['YES\\r\\n1\\r\\n3\\r\\n1\\r\\n24\\r\\n']}, {'input': '24\\r\\n', 'output': ['YES\\r\\n1\\r\\n3\\r\\n1\\r\\n145\\r\\n']}, {'input': '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\\r\\n', 'output': ['NO\\r\\n']}]", "source_code": "import sys\n\ndef main():\n    A = sys.stdin.readline().strip()\n    if A == '1':\n        print('NO')\n        return\n    if A == '13':\n        print('YES')\n        print(1)\n        print(2)\n        print(0)\n        return\n    if A == '12':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '1212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '12121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '1212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '12121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '1212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '12121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '1212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '12121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '1212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '121212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '12121212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '1212121212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '121212121212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '12121212121212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '1212121212121212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '121212121212121212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '12121212121212121212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '1212121212121212121212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '121212121212121212121212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '12121212121212121212121212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '1212121212121212121212121212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '121212121212121212121212121212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print(1)\n        print('156')\n        return\n    if A == '12121212121212121212121212121212121212121212121212121212':\n        print('YES')\n        print(1)\n        print(4)\n        print"}
{"src_uid": "5215112549723fea3f2c1fe0049e0b2e", "id": 176, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2200, "testcases": "[{'input': '6 2\\r\\n000000 2\\r\\n010100 4\\r\\n', 'output': ['6\\r\\n']}, {'input': '6 3\\r\\n000000 2\\r\\n010100 4\\r\\n111100 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '6 3\\r\\n000000 2\\r\\n010100 4\\r\\n111100 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '6 1\\r\\n101011 2\\r\\n', 'output': ['15\\r\\n']}, {'input': '7 2\\r\\n1011111 2\\r\\n1001111 1\\r\\n', 'output': ['6\\r\\n']}, {'input': '6 4\\r\\n000110 2\\r\\n010001 2\\r\\n001111 2\\r\\n001100 2\\r\\n', 'output': ['1\\r\\n']}, {'input': '8 3\\r\\n00111100 5\\r\\n10100111 2\\r\\n10110101 2\\r\\n', 'output': ['6\\r\\n']}, {'input': '35 10\\r\\n10010111001010111001011111000111111 1\\r\\n10100111001010100001111111010111111 5\\r\\n10010111001011110001001111010111110 4\\r\\n10010111001010011011011111010110111 3\\r\\n10010111001010111011011111010111111 1\\r\\n10110011001010111011011111010111111 3\\r\\n10010110001011111001011111010111111 2\\r\\n10000111000010111001111101000111111 5\\r\\n10010111000010011001011111010111111 2\\r\\n10010111001010111001011111000111111 1\\r\\n', 'output': ['1\\r\\n']}, {'input': '35 10\\r\\n11110011011000001101011101111100000 5\\r\\n01000011011001101101011101011101010 5\\r\\n11110011011000001101011101000101011 5\\r\\n11000011011101101101011111010001000 5\\r\\n10100011011001101101001101010101001 4\\r\\n11110011111000100101011101110001000 5\\r\\n01100111011000101101001101010101100 4\\r\\n11110001011000101111011101010101000 3\\r\\n11110010011010101100011101010101000 4\\r\\n10100011011000111101011101111101010 5\\r\\n', 'output': ['1\\r\\n']}, {'input': '35 10\\r\\n11101100001010011101100010101111111 5\\r\\n11101100010011101100001010101011011 5\\r\\n11101100001101111110000011101111010 5\\r\\n11101100101001111100000110111111001 5\\r\\n11101100001011000100001011101111011 5\\r\\n10101000001011111010000010001111011 5\\r\\n11101100001011111100010000111110001 5\\r\\n11101000001111111100000010101001010 5\\r\\n11101001001010101100100010101111011 5\\r\\n11100100001011111100010010001101010 5\\r\\n', 'output': ['1\\r\\n']}, {'input': '35 10\\r\\n10011011100001001101101001100011001 5\\r\\n10011011111001001101001010100011101 3\\r\\n11001011101101001101101010000000101 5\\r\\n10011011101001001101111010100001111 4\\r\\n10011011101001001101111010110011001 4\\r\\n10111001100001001101101010000011101 3\\r\\n10011011101001001101001010000101101 3\\r\\n10110011101001001100101010000011100 4\\r\\n00011110101001001101101011000011101 4\\r\\n10011111101001011101101010000001101 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '35 10\\r\\n10000111101101011000011000011001110 5\\r\\n11010110010101011000111000111001110 5\\r\\n10011111111111011000110000011001110 5\\r\\n10000110110011011000111001001001110 5\\r\\n11100111110111001000111000001001011 5\\r\\n11101111110111001000011010011001110 5\\r\\n11000011110111001001111000110001110 5\\r\\n11010111111111011010111000111000110 5\\r\\n11100110010111011000111000110001110 5\\r\\n11000110110111111000101010011001111 5\\r\\n', 'output': ['1\\r\\n']}, {'input': '35 10\\r\\n01001110011001000001000010001101110 5\\r\\n01001101111011000001001000001000110 5\\r\\n01000101011000000011010000001100110 5\\r\\n00011101001001000011000001011100110 5\\r\\n11011111010001001011000000001100110 5\\r\\n01011100001011000001100000011100110 5\\r\\n00011101011011000100000100001100110 5\\r\\n01011101011000010001100000001100011 5\\r\\n01011001011011010001000000001110100 5\\r\\n01010101010001011001000000001110110 5\\r\\n', 'output': ['1\\r\\n']}, {'input': '35 10\\r\\n00101110001000011000011100001110011 5\\r\\n00111100011110011000011111111110010 5\\r\\n01101010011110111000011110100110010 5\\r\\n01101111010100011010011110101100010 5\\r\\n00101110011100011000010111011110011 5\\r\\n10001110111100011000111111101110010 5\\r\\n01101111011100010000010111101110010 5\\r\\n11101100011100011000010110101100010 5\\r\\n00101100011100011000011100001101010 5\\r\\n00100110011100011000011000111110000 5\\r\\n', 'output': ['1\\r\\n']}, {'input': '35 1\\r\\n00001111001110101000001101100010010 5\\r\\n', 'output': ['324632\\r\\n']}, {'input': '30 10\\r\\n010000010000001001000000010000 5\\r\\n010000010000001001000000010000 5\\r\\n010000010000001001000000010000 5\\r\\n010000010000001001000000010000 5\\r\\n010000010000001001000000010000 5\\r\\n010000010000001001000000010000 5\\r\\n010000010000001001000000010000 5\\r\\n010000010000001001000000010000 5\\r\\n010000010000001001000000010000 5\\r\\n010000010000001001000000010000 5\\r\\n', 'output': ['142506\\r\\n']}, {'input': '35 2\\r\\n00101101100111101110111010001101101 3\\r\\n00111111100101010110111010001101101 3\\r\\n', 'output': ['20\\r\\n']}, {'input': '35 1\\r\\n11000110100110101001100101001010110 2\\r\\n', 'output': ['595\\r\\n']}, {'input': '35 2\\r\\n00111111100000111101000110100111101 1\\r\\n00111111000000111101000010100111101 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '35 6\\r\\n01100100110000001001100110001100011 5\\r\\n10000100110000011001110010001100011 5\\r\\n00101110100000010000100010001110011 4\\r\\n00110010101000011001100000001110011 5\\r\\n00100101110000011001101110001110011 4\\r\\n00110110110000011001101000000100011 5\\r\\n', 'output': ['1\\r\\n']}, {'input': '34 10\\r\\n0010101000011110000100111111010110 5\\r\\n0110011001011110001101110111000110 5\\r\\n0111001000011100000100111111110110 4\\r\\n0011011000001110100000110111010110 4\\r\\n0101011000011110000100010111010111 3\\r\\n0111011000011111010100111111010110 3\\r\\n0110010000011110000100110111010010 3\\r\\n0111011001111110000100110111010111 3\\r\\n1111111000011010000100110111010100 4\\r\\n1111001000011110000100110111001111 5\\r\\n', 'output': ['1\\r\\n']}, {'input': '6 10\\r\\n110000 5\\r\\n010011 4\\r\\n110011 5\\r\\n110010 4\\r\\n000001 4\\r\\n010001 5\\r\\n110101 5\\r\\n110011 5\\r\\n110010 4\\r\\n011001 4\\r\\n', 'output': ['1\\r\\n']}, {'input': '35 10\\r\\n11001101010000101110001101101110111 4\\r\\n11010101010000101011001001110100110 5\\r\\n11000100010000101011001100100100110 4\\r\\n11000001000100101011001101101100110 4\\r\\n01000101000000101010011101101110010 5\\r\\n00000101010010001011001101101100110 5\\r\\n01000101010100101010001101100010110 5\\r\\n11000100010000010010001101101100110 4\\r\\n10000101010000100010000101101100111 4\\r\\n11001100010000100010011101101100110 4\\r\\n', 'output': ['1\\r\\n']}, {'input': '35 10\\r\\n01110001000111100010110001110110100 5\\r\\n01110001000000000010100001110100010 3\\r\\n01110000100100000010100001111110010 4\\r\\n11110001011110000010100001110111010 4\\r\\n01110101000111000010100001110110110 3\\r\\n10110001000100010010000001110110010 5\\r\\n01110011000111000011100001110110010 3\\r\\n00110001000110000011100001111110010 3\\r\\n01110011000010000110000001110111010 5\\r\\n11110001000110100010101001110110010 3\\r\\n', 'output': ['1\\r\\n']}, {'input': '35 10\\r\\n10011010100110011101110001101011011 2\\r\\n10111010100111011011110000101011011 3\\r\\n10011010101111001001110000111111011 5\\r\\n10011010100111011100110000100011011 2\\r\\n10011010100111001101010000101010011 3\\r\\n10010010101001011101110000101011111 5\\r\\n10011010100111010101110000100011011 2\\r\\n00011010100111011100110001101011111 4\\r\\n10011010100111011101110000111001011 2\\r\\n10010000000110011101110000101011011 4\\r\\n', 'output': ['1\\r\\n']}, {'input': '35 10\\r\\n10101100110000010101111100110001110 4\\r\\n10100110000110000101011100110001110 4\\r\\n10100110111110000101010100010001110 5\\r\\n11100100010000000101010100110000110 5\\r\\n10100010110000100101011100110001110 2\\r\\n10000110100000000100011100110001100 4\\r\\n10000110110000000001011100110101110 3\\r\\n10100010111000000101011101110000110 4\\r\\n10100100110000000111001100110001110 3\\r\\n10100110100000000101011101110001110 2\\r\\n', 'output': ['1\\r\\n']}]", "source_code": "import sys\n\nn, m = map(int, sys.stdin.readline().split())\n\ndef check(code, mask):\n    for i in range(n):\n        if code[i]!= mask[i]:\n            return False\n    return True\n\ndef solve(mask):\n    for i in range(1 << n):\n        code = bin(i)[2:].zfill(n)\n        if check(code, mask):\n            return False\n    return True\n\nmasks = []\nfor i in range(m):\n    code, mask = sys.stdin.readline().split()\n    mask = int(mask)\n    masks.append((code, mask))\n\nfor mask in masks:\n    if not solve(mask[0]):\n        print(0)\n        exit()\n\nprint(2 ** (n - masks[-1][1]))\n"}
{"src_uid": "1503f0379bf8d7f25c191ddea9278842", "id": 177, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2500, "testcases": "[{'input': '5\\r\\n4 8\\r\\n8 8\\r\\n9 4\\r\\n4 0\\r\\n0 4\\r\\n', 'output': ['5\\r\\n']}, {'input': '5\\r\\n4 8\\r\\n5 8\\r\\n5 4\\r\\n7 4\\r\\n2 2\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\n0 4\\r\\n5 4\\r\\n2 0\\r\\n', 'output': ['6\\r\\n']}, {'input': '4\\r\\n0 4\\r\\n5 4\\r\\n5 0\\r\\n0 0\\r\\n', 'output': ['6\\r\\n']}, {'input': '4\\r\\n100 200\\r\\n800 200\\r\\n500 100\\r\\n100 0\\r\\n', 'output': ['701\\r\\n']}, {'input': '5\\r\\n0 4\\r\\n5 4\\r\\n2 2\\r\\n4 0\\r\\n0 0\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n2 5\\r\\n5 5\\r\\n4 4\\r\\n5 3\\r\\n0 0\\r\\n', 'output': ['2\\r\\n']}, {'input': '6\\r\\n1 9\\r\\n10 9\\r\\n11 7\\r\\n9 5\\r\\n5 7\\r\\n1 0\\r\\n', 'output': ['6\\r\\n']}, {'input': '6\\r\\n1 9\\r\\n10 9\\r\\n5 7\\r\\n11 7\\r\\n9 5\\r\\n1 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\n10 150\\r\\n90 150\\r\\n10 15\\r\\n', 'output': ['81\\r\\n']}, {'input': '5\\r\\n0 100\\r\\n50 100\\r\\n50 99\\r\\n149 0\\r\\n0 0\\r\\n', 'output': ['50\\r\\n']}, {'input': '10\\r\\n1000 0\\r\\n100 0\\r\\n0 25\\r\\n100 50\\r\\n100 51\\r\\n99 102\\r\\n1001 102\\r\\n1000 51\\r\\n1000 50\\r\\n1100 25\\r\\n', 'output': ['899\\r\\n']}, {'input': '6\\r\\n1 1000000\\r\\n999999 1000000\\r\\n519023 50000\\r\\n520013 500\\r\\n300033 50\\r\\n400023 500000\\r\\n', 'output': ['1\\r\\n']}, {'input': '8\\r\\n100 100\\r\\n10 100\\r\\n0 200\\r\\n5 400\\r\\n20 800\\r\\n16 801\\r\\n50 900\\r\\n110 300\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\n588523 0\\r\\n411477 0\\r\\n400000 86602\\r\\n', 'output': ['177047\\r\\n']}, {'input': '15\\r\\n507852 0\\r\\n492148 0\\r\\n489545 9858\\r\\n489631 11995\\r\\n490865 14012\\r\\n491570 15795\\r\\n492996 17376\\r\\n495001 18605\\r\\n496671 19452\\r\\n498570 19850\\r\\n500373 19859\\r\\n502484 19363\\r\\n505000 18605\\r\\n506393 17344\\r\\n507857 15808\\r\\n', 'output': ['15705\\r\\n']}, {'input': '4\\r\\n889308 0\\r\\n110692 0\\r\\n0 461939\\r\\n146447 815492\\r\\n', 'output': ['778617\\r\\n']}, {'input': '5\\r\\n785915 0\\r\\n214085 0\\r\\n40939 436592\\r\\n128612 706421\\r\\n358143 873184\\r\\n', 'output': ['571831\\r\\n']}, {'input': '5\\r\\n999990 0\\r\\n0 0\\r\\n0 1000000\\r\\n1000000 1000000\\r\\n500000 50000\\r\\n', 'output': ['473685\\r\\n']}, {'input': '8\\r\\n3 0\\r\\n0 0\\r\\n0 1\\r\\n1 1\\r\\n1 2\\r\\n2 2\\r\\n2 1\\r\\n3 1\\r\\n', 'output': ['2\\r\\n']}, {'input': '6\\r\\n1 4\\r\\n3 4\\r\\n2 2\\r\\n1 1\\r\\n2 0\\r\\n0 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '3\\r\\n999998 999999\\r\\n1000000 999999\\r\\n0 0\\r\\n', 'output': ['3\\r\\n']}, {'input': '4\\r\\n999998 999999\\r\\n1000000 999999\\r\\n1 1\\r\\n0 0\\r\\n', 'output': ['2\\r\\n']}, {'input': '10\\r\\n500944 0\\r\\n499056 0\\r\\n498479 979\\r\\n498437 1288\\r\\n499191 1574\\r\\n499413 1796\\r\\n499300 1937\\r\\n500000 1987\\r\\n499995 1934\\r\\n500587 1796\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n0 4\\r\\n3 4\\r\\n2 2\\r\\n2 0\\r\\n0 0\\r\\n', 'output': ['3\\r\\n']}, {'input': '6\\r\\n4 0\\r\\n0 0\\r\\n2 2\\r\\n3 4\\r\\n2 5\\r\\n4 5\\r\\n', 'output': ['0\\r\\n']}, {'input': '7\\r\\n0 5\\r\\n3 5\\r\\n2 3\\r\\n2 2\\r\\n1 2\\r\\n2 0\\r\\n0 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n10 0\\r\\n0 0\\r\\n2 2\\r\\n1 3\\r\\n1 6\\r\\n', 'output': ['7\\r\\n']}, {'input': '8\\r\\n0 6\\r\\n5 6\\r\\n5 4\\r\\n3 4\\r\\n3 2\\r\\n5 2\\r\\n5 0\\r\\n0 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '7\\r\\n0 6\\r\\n5 6\\r\\n5 4\\r\\n3 4\\r\\n3 2\\r\\n5 0\\r\\n0 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n0 999999\\r\\n1 999999\\r\\n1 999998\\r\\n1000000 0\\r\\n0 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n0 999999\\r\\n1 999999\\r\\n1 999998\\r\\n999999 0\\r\\n0 0\\r\\n', 'output': ['1\\r\\n']}, {'input': '5\\r\\n0 999999\\r\\n1 999999\\r\\n1 999998\\r\\n999998 0\\r\\n0 0\\r\\n', 'output': ['1\\r\\n']}, {'input': '6\\r\\n0 999999\\r\\n1 999999\\r\\n1 999998\\r\\n2 999998\\r\\n1000000 0\\r\\n0 0\\r\\n', 'output': ['0\\r\\n']}, {'input': '5\\r\\n999999 0\\r\\n0 0\\r\\n999999 999998\\r\\n1 1\\r\\n1000000 1000000\\r\\n', 'output': ['0\\r\\n']}, {'input': '6\\r\\n5 6\\r\\n7 6\\r\\n8 2\\r\\n6 2\\r\\n7 3\\r\\n6 4\\r\\n', 'output': ['0\\r\\n']}, {'input': '6\\r\\n7 8\\r\\n5 8\\r\\n4 12\\r\\n6 12\\r\\n5 11\\r\\n6 10\\r\\n', 'output': ['0\\r\\n']}, {'input': '6\\r\\n5 6\\r\\n12 6\\r\\n8 2\\r\\n6 2\\r\\n7 3\\r\\n6 4\\r\\n', 'output': ['3\\r\\n']}, {'input': '6\\r\\n10 12\\r\\n24 12\\r\\n16 4\\r\\n12 4\\r\\n14 6\\r\\n12 8\\r\\n', 'output': ['5\\r\\n']}]", "source_code": "import sys\n\ndef get_int():\n    return int(input())\n\ndef get_ints():\n    return map(int, input().split())\n\ndef get_list():\n    return list(map(int, input().split()))\n\ndef get_matrix(rows):\n    return [get_list() for _ in range(rows)]\n\ndef get_matrix_from_file(rows):\n    return [get_list() for _ in range(rows)]\n\ndef get_matrix_from_file_as_int(rows):\n    return [get_ints() for _ in range(rows)]\n\ndef get_matrix_from_file_as_int_with_size():\n    return get_ints() + [get_matrix_from_file_as_int(get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value_and_value():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value_and_value_and_value():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int(), get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value_and_value_and_value_and_value():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value_and_value_and_value_and_value_and_value():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value_and_value_and_value_and_value_and_value_and_value():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value_and_value_and_value_and_value_and_value_and_value_and_value():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_value():\n    return get_ints() + [get_matrix_from_file_as_int(get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int(), get_int())]\n\ndef get_matrix_from_file_as_int_with_size_and_rows_and_cols_and_value_and_value_and_value_and_value_and_value_and_value_and_value_and_"}
{"src_uid": "bfbd7a73e65d240ee7e8c83cc68ca0a1", "id": 178, "lang_cluster": "python", "lang": "Python 3", "difficulty": 1800, "testcases": "[{'input': '3\\r\\n1 2 4\\r\\n', 'output': ['unique\\r\\n5\\r\\n']}, {'input': '2\\r\\n1 2\\r\\n', 'output': ['not unique\\r\\n']}, {'input': '1\\r\\n5\\r\\n', 'output': ['not unique\\r\\n']}, {'input': '3\\r\\n1 3 4\\r\\n', 'output': ['unique\\r\\n6\\r\\n']}, {'input': '5\\r\\n1 2 3 5 6\\r\\n', 'output': ['unique\\r\\n7\\r\\n']}, {'input': '6\\r\\n1 2 3 5 6 7\\r\\n', 'output': ['not unique\\r\\n']}, {'input': '10\\r\\n1 2 4 5 7 8 9 11 12 14\\r\\n', 'output': ['unique\\r\\n15\\r\\n']}, {'input': '10\\r\\n1 3 5 6 8 10 12 13 15 17\\r\\n', 'output': ['not unique\\r\\n']}, {'input': '9\\r\\n2 5 7 10 12 15 17 20 22\\r\\n', 'output': ['unique\\r\\n25\\r\\n']}, {'input': '10\\r\\n7 14 21 28 35 42 49 56 63 70\\r\\n', 'output': ['not unique\\r\\n']}, {'input': '15\\r\\n5 11 16 22 28 33 39 45 50 56 62 67 73 79 84\\r\\n', 'output': ['unique\\r\\n90\\r\\n']}, {'input': '17\\r\\n5 11 16 22 28 33 39 45 50 56 62 67 73 79 84 90 96\\r\\n', 'output': ['unique\\r\\n101\\r\\n']}, {'input': '15\\r\\n1 3 4 6 8 9 11 12 14 16 17 19 21 22 24\\r\\n', 'output': ['unique\\r\\n25\\r\\n']}, {'input': '16\\r\\n1 3 4 6 8 9 11 12 14 16 17 19 21 22 24 25\\r\\n', 'output': ['unique\\r\\n27\\r\\n']}, {'input': '17\\r\\n1 3 4 6 8 9 11 12 14 16 17 19 21 22 24 25 27\\r\\n', 'output': ['unique\\r\\n29\\r\\n']}, {'input': '18\\r\\n1 3 4 6 8 9 11 12 14 16 17 19 21 22 24 25 27 29\\r\\n', 'output': ['unique\\r\\n30\\r\\n']}, {'input': '19\\r\\n1 3 4 6 8 9 11 12 14 16 17 19 21 22 24 25 27 29 30\\r\\n', 'output': ['unique\\r\\n32\\r\\n']}, {'input': '20\\r\\n1 3 4 6 8 9 11 12 14 16 17 19 21 22 24 25 27 29 30 32\\r\\n', 'output': ['not unique\\r\\n']}, {'input': '18\\r\\n49999 99998 149998 199997 249996 299996 349995 399994 449994 499993 549992 599992 649991 699990 749990 799989 849988 899988\\r\\n', 'output': ['unique\\r\\n949987\\r\\n']}, {'input': '20\\r\\n49999 99998 149998 199997 249996 299996 349995 399994 449994 499993 549992 599992 649991 699990 749990 799989 849988 899988 949987 999986\\r\\n', 'output': ['unique\\r\\n1049986\\r\\n']}, {'input': '33\\r\\n9 19 29 39 49 59 69 79 89 99 109 119 129 139 149 159 168 178 188 198 208 218 228 238 248 258 268 278 288 298 308 318 327\\r\\n', 'output': ['unique\\r\\n337\\r\\n']}, {'input': '46\\r\\n40 81 122 162 203 244 284 325 366 406 447 488 528 569 610 650 691 732 772 813 854 894 935 976 1016 1057 1098 1138 1179 1220 1260 1301 1342 1382 1423 1464 1504 1545 1586 1626 1667 1708 1748 1789 1830 1870\\r\\n', 'output': ['unique\\r\\n1911\\r\\n']}, {'input': '50\\r\\n19876 39753 59629 79506 99382 119259 139135 159012 178889 198765 218642 238518 258395 278271 298148 318025 337901 357778 377654 397531 417407 437284 457160 477037 496914 516790 536667 556543 576420 596296 616173 636050 655926 675803 695679 715556 735432 755309 775186 795062 814939 834815 854692 874568 894445 914321 934198 954075 973951 993828\\r\\n', 'output': ['unique\\r\\n1013704\\r\\n']}, {'input': '50\\r\\n564 1129 1693 2258 2822 3387 3951 4516 5080 5645 6210 6774 7339 7903 8468 9032 9597 10161 10726 11290 11855 12420 12984 13549 14113 14678 15242 15807 16371 16936 17500 18065 18630 19194 19759 20323 20888 21452 22017 22581 23146 23710 24275 24840 25404 25969 26533 27098 27662 28227\\r\\n', 'output': ['unique\\r\\n28791\\r\\n']}, {'input': '76\\r\\n342 684 1027 1369 1711 2054 2396 2738 3081 3423 3765 4108 4450 4792 5135 5477 5819 6162 6504 6846 7189 7531 7873 8216 8558 8900 9243 9585 9927 10270 10612 10954 11297 11639 11981 12324 12666 13009 13351 13693 14036 14378 14720 15063 15405 15747 16090 16432 16774 17117 17459 17801 18144 18486 18828 19171 19513 19855 20198 20540 20882 21225 21567 21909 22252 22594 22936 23279 23621 23963 24306 24648 24991 25333 25675 26018\\r\\n', 'output': ['unique\\r\\n26360\\r\\n']}, {'input': '100\\r\\n1 3 4 6 8 9 11 12 14 16 17 19 21 22 24 25 27 29 30 32 33 35 37 38 40 42 43 45 46 48 50 51 53 55 56 58 59 61 63 64 66 67 69 71 72 74 76 77 79 80 82 84 85 87 88 90 92 93 95 97 98 100 101 103 105 106 108 110 111 113 114 116 118 119 121 122 124 126 127 129 131 132 134 135 137 139 140 142 144 145 147 148 150 152 153 155 156 158 160 161\\r\\n', 'output': ['unique\\r\\n163\\r\\n']}, {'input': '101\\r\\n3 7 10 14 18 21 25 28 32 36 39 43 46 50 54 57 61 64 68 72 75 79 82 86 90 93 97 100 104 108 111 115 118 122 126 129 133 137 140 144 147 151 155 158 162 165 169 173 176 180 183 187 191 194 198 201 205 209 212 216 219 223 227 230 234 237 241 245 248 252 255 259 263 266 270 274 277 281 284 288 292 295 299 302 306 310 313 317 320 324 328 331 335 338 342 346 349 353 356 360 364\\r\\n', 'output': ['unique\\r\\n367\\r\\n']}]", "source_code": "n = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"unique\")\n    print(a[0] + 10)\n    exit()\n\nif a[n - 1] - a[n - 2] == 10:\n    print(\"not unique\")\n    exit()\n\nprint(\"unique\")\nprint(a[n - 1] + 10 - (a[n - 1] - a[n - 2]) % 10)\n"}
{"src_uid": "1d73b315694f2ebbf796654193372730", "id": 179, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2400, "testcases": "[{'input': '5 3 2\\r\\nSba\\r\\nccc\\r\\naac\\r\\nccc\\r\\nabT\\r\\n', 'output': ['bcccc\\r\\n']}, {'input': '3 4 1\\r\\nSxyy\\r\\nyxxx\\r\\nyyyT\\r\\n', 'output': ['xxxx\\r\\n']}, {'input': '1 3 3\\r\\nTyS\\r\\n', 'output': ['y\\r\\n']}, {'input': '1 4 1\\r\\nSxyT\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 3 3\\r\\nSaT\\r\\n', 'output': ['a\\r\\n']}, {'input': '3 4 1\\r\\nSbbT\\r\\naaaa\\r\\nabba\\r\\n', 'output': ['bb\\r\\n']}, {'input': '3 5 2\\r\\nSbcaT\\r\\nacbab\\r\\nacccb\\r\\n', 'output': ['aacccaa\\r\\n']}, {'input': '3 4 1\\r\\nSbbb\\r\\naaaT\\r\\nabbc\\r\\n', 'output': ['aaa\\r\\n']}, {'input': '3 4 2\\r\\nSbbb\\r\\naabT\\r\\nabbc\\r\\n', 'output': ['aab\\r\\n']}, {'input': '1 2 1\\r\\nST\\r\\n', 'output': ['\\r\\n']}, {'input': '4 5 3\\r\\nabaaa\\r\\nbabaT\\r\\nSabba\\r\\naaaaa\\r\\n', 'output': ['aaba\\r\\n']}, {'input': '6 6 3\\r\\npkhipk\\r\\nmlfmak\\r\\naqmbae\\r\\ndlbfSj\\r\\ndpbjcr\\r\\naTbqbm\\r\\n', 'output': ['cbqb\\r\\n']}, {'input': '1 20 3\\r\\nacbccbbddbffScTadffd\\r\\n', 'output': ['c\\r\\n']}, {'input': '1 30 2\\r\\nbmjcfldkloleiqqiTnmdjpaSckkijf\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 40 1\\r\\nfaSfgfTcfadcdfagfbccbffbeaaebagbfcfcgdfd\\r\\n', 'output': ['-1\\r\\n']}, {'input': '1 50 3\\r\\nSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaTaaaaaaaaaaa\\r\\n', 'output': ['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\r\\n']}, {'input': '5 10 4\\r\\naaaaaaaaaa\\r\\naaaaaTaaaa\\r\\naaaaaaaSaa\\r\\naaaaaaaaaa\\r\\naaaaaaaaaa\\r\\n', 'output': ['aa\\r\\n']}, {'input': '5 3 4\\r\\naaT\\r\\nacc\\r\\nbbb\\r\\nbbc\\r\\ncSb\\r\\n', 'output': ['bbbc\\r\\n']}, {'input': '5 5 1\\r\\ncaTbc\\r\\ndccac\\r\\ndacda\\r\\naacaS\\r\\ncdcab\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10 8 2\\r\\nbdcdcbfa\\r\\ndecffcce\\r\\ndTffdacb\\r\\neeedcdbb\\r\\nfdbbbcba\\r\\nddabfcda\\r\\nabdbSeed\\r\\nbdcdcffa\\r\\ncadbaffa\\r\\nfcccddad\\r\\n', 'output': ['bbbbee\\r\\n']}, {'input': '20 10 3\\r\\nebebccacdb\\r\\neeebccddeT\\r\\neadebecaac\\r\\nadeeeaccbc\\r\\nbaccccdaed\\r\\ndeabceabba\\r\\ndadbecbaaa\\r\\neacbbcedcb\\r\\naeeScdbbab\\r\\nbabaecaead\\r\\nbacdbebeae\\r\\naacbadbeec\\r\\nacddceecca\\r\\nacaeaebaba\\r\\ncdddeaaeae\\r\\neabddadade\\r\\nddddaeaeed\\r\\nbccbaacadd\\r\\ndccccbabdc\\r\\necdaebeccc\\r\\n', 'output': ['bbbcccaccaac\\r\\n']}, {'input': '15 10 4\\r\\nsejwprqjku\\r\\npnjsiopxft\\r\\nrsplgvwixq\\r\\nendglkchxl\\r\\nftihbbexgh\\r\\nsxtxbbavge\\r\\njcdkusfnmr\\r\\nskgsqvflia\\r\\nkcxmcxjpae\\r\\namaiwcfile\\r\\nnjgjSunmwd\\r\\nldxvahgreu\\r\\necmrajbjuT\\r\\nnaioqigols\\r\\npbwrmxkltj\\r\\n', 'output': ['aajbju\\r\\n']}, {'input': '15 3 4\\r\\nllv\\r\\nttT\\r\\nhbo\\r\\nogc\\r\\nkfe\\r\\ngli\\r\\nfbx\\r\\nkfp\\r\\nspm\\r\\ncxc\\r\\nndw\\r\\nSoa\\r\\npfh\\r\\nedr\\r\\nxmv\\r\\n', 'output': ['-1\\r\\n']}, {'input': '15 15 3\\r\\ncbbdccabdcbacbd\\r\\nbcabdcacadacdbc\\r\\ncbcddbbcdbddcad\\r\\nddcabdbbdcabbdc\\r\\naabadcccTcabdbb\\r\\ncbacaaacaabdbbd\\r\\ndbdcbSdabaadbdb\\r\\ndbbaddcdddaadbb\\r\\nbbddcdcbaccbbaa\\r\\nadadadbdbbddccc\\r\\ncddbbdaddcbbdcc\\r\\nbbaadcdbbcaacca\\r\\nadbdcdbbcbddbcd\\r\\ncdadbcccddcdbda\\r\\ncbcdaabdcabccbc\\r\\n', 'output': ['aaca\\r\\n']}, {'input': '20 20 2\\r\\nddadfcdeTaeccbedeaec\\r\\nacafdfdeaffdeabdcefe\\r\\nabbcbefcdbbbcdebafef\\r\\nfdafdcccbcdeeaedeffc\\r\\ndfdaabdefdafabaabcef\\r\\nfebdcabacaaaabfacbbe\\r\\nabfcaacadfdbfdbaaefd\\r\\ndacceeccddccaccdbbce\\r\\ncacebecabedbddfbfdad\\r\\ndacbfcabbebfddcedffd\\r\\ncfcdfacfadcfbcebebaa\\r\\nddfbebafaccbebeefbac\\r\\nebfaebacbbebdfcbcbea\\r\\ndfbaebcfccacfeaccaad\\r\\nedeedeceebcbfdbcdbbe\\r\\nafaacccfbdecebfdabed\\r\\nddbdcedacedadeccaeec\\r\\necbSeacbdcccbcedafef\\r\\ncfdbeeffbeeafccfdddb\\r\\ncefdbdfbabccfdaaadbf\\r\\n', 'output': ['-1\\r\\n']}, {'input': '10 10 2\\r\\nbaaaaaaaaa\\r\\nbffacffffa\\r\\nbggaccggga\\r\\nbbbSccchha\\r\\nbdddddccia\\r\\nbjddccccca\\r\\nbkkdddTaaa\\r\\nblllddblla\\r\\nbmmmmdbmma\\r\\nbbbbbbbbbb\\r\\n', 'output': ['ccccc\\r\\n']}, {'input': '10 20 3\\r\\nbaaaaaaaaaaaaaaaaaaa\\r\\nbfffffffacfffffffffa\\r\\nbgggggggaccgggggggga\\r\\nbbbbbbbbSccchhhhhhha\\r\\nbiiiiidddddcciiiiiia\\r\\nbjjjjjjddcccccjjjjja\\r\\nbkkkkkkkdddTaaaaaaaa\\r\\nbllllllllddbllllllla\\r\\nbmmmmmmmmmdbmmmmmmma\\r\\nbbbbbbbbbbbbbbbbbbbb\\r\\n', 'output': ['ccccc\\r\\n']}, {'input': '20 10 4\\r\\nbaaaaaaaaa\\r\\nbffacffffa\\r\\nbggaccggga\\r\\nbhhaccchha\\r\\nbiiaccccia\\r\\nbjjaccccca\\r\\nbkkakkkkka\\r\\nbllallllla\\r\\nbbbSmmmmma\\r\\nbnnnnnnnna\\r\\nbooooooooa\\r\\nbpppppTaaa\\r\\nbqqqqqbqqa\\r\\nbrrrrrbrra\\r\\nbdddddbssa\\r\\nbtddddbtta\\r\\nbuudddbuua\\r\\nbvvvddbvva\\r\\nbwwwwdbwwa\\r\\nbbbbbbbbbb\\r\\n', 'output': ['mmmno\\r\\n']}, {'input': '20 20 2\\r\\nbaaaaaaaaaaaaaaaaaaa\\r\\nbfffffffacfffffffffa\\r\\nbgggggggaccgggggggga\\r\\nbhhhhhhhaccchhhhhhha\\r\\nbiiiiiiiacccciiiiiia\\r\\nbjjjjjjjacccccjjjjja\\r\\nbkkkkkkkacccccckkkka\\r\\nblllllllacccccccllla\\r\\nbbbbbbbbSccccccccmma\\r\\nbddddddddddcccccccna\\r\\nbodddddddcccccccccca\\r\\nbppddddddddTaaaaaaaa\\r\\nbqqqdddddddbqqqqqqqa\\r\\nbrrrrddddddbrrrrrrra\\r\\nbsssssdddddbsssssssa\\r\\nbttttttddddbttttttta\\r\\nbuuuuuuudddbuuuuuuua\\r\\nbvvvvvvvvddbvvvvvvva\\r\\nbwwwwwwwwwdbwwwwwwwa\\r\\nbbbbbbbbbbbbbbbbbbbb\\r\\n', 'output': ['ccccc\\r\\n']}, {'input': '1 2 4\\r\\nST\\r\\n', 'output': ['\\r\\n']}, {'input': '3 3 1\\r\\naaa\\r\\naaa\\r\\nTSa\\r\\n', 'output': ['\\r\\n']}, {'input': '2 1 1\\r\\nS\\r\\nT\\r\\n', 'output': ['\\r\\n']}, {'input': '1 10 2\\r\\nbaaSaaTacb\\r\\n', 'output': ['aa\\r\\n']}, {'input': '2 1 4\\r\\nS\\r\\nT\\r\\n', 'output': ['\\r\\n']}]", "source_code": "n, m, k = map(int, input().split())\n\n\ndef check(x, y):\n    return 0 <= x < n and 0 <= y < m\n\n\ndef solve(x, y):\n    if k == 0:\n        return\n    if x == n - 1 and y == m - 1:\n        return\n    if x == n - 1:\n        for i in range(y, m):\n            if check(x, i) and s[x][i]!= 'T':\n                s[x][i] = '*'\n                solve(x, i)\n                s[x][i] = s[x][y]\n    elif y == m - 1:\n        for i in range(x, n):\n            if check(i, y) and s[i][y]!= 'T':\n                s[i][y] = '*'\n                solve(i, y)\n                s[i][y] = s[x][y]\n    else:\n        for i in range(x, n):\n            if check(i, y) and s[i][y]!= 'T':\n                s[i][y] = '*'\n                solve(i, y)\n                s[i][y] = s[x][y]\n        for i in range(y, m):\n            if check(x, i) and s[x][i]!= 'T':\n                s[x][i] = '*'\n                solve(x, i)\n                s[x][i] = s[x][y]\n\n\ns = [list(input()) for _ in range(n)]\n\nfor i in range(n):\n    for j in range(m):\n        if s[i][j] == 'S':\n            s[i][j] = '*'\n            solve(i, j)\n            s[i][j] = 'S'\n\nif k == 0:\n    print(''.join(map(lambda x: ''.join(x), s)))\nelse:\n    print(-1)\n"}
{"src_uid": "5_E", "id": 803, "lang_cluster": "python", "lang": "Python 3", "difficulty": 2400, "testcases": "[{'input': ['5\\r\\n1 2 4 5 3\\r\\n'], 'output': ['7\\r\\n']}, {'input': ['3\\r\\n2118 2118 2118\\r\\n'], 'output': ['3\\r\\n']}, {'input': ['3\\r\\n2221 1976 2221\\r\\n'], 'output': ['3\\r\\n']}, {'input': ['3\\r\\n140 989 2895\\r\\n'], 'output': ['3\\r\\n']}, {'input': ['4\\r\\n2440 2440 2440 2440\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['4\\r\\n1178 1178 2577 2577\\r\\n'], 'output': ['6\\r\\n']}, {'input': ['4\\r\\n332 2714 2420 2714\\r\\n'], 'output': ['5\\r\\n']}, {'input': ['5\\r\\n763 763 763 763 763\\r\\n'], 'output': ['10\\r\\n']}, {'input': ['5\\r\\n4136 1826 4136 1826 1826\\r\\n'], 'output': ['8\\r\\n']}, {'input': ['5\\r\\n3581 3581 305 305 3581\\r\\n'], 'output': ['8\\r\\n']}, {'input': ['10\\r\\n8097 8097 8097 8097 8097 8097 8097 8097 8097 8097\\r\\n'], 'output': ['45\\r\\n']}, {'input': ['10\\r\\n4972 4972 4972 4858 4858 4972 4972 4972 4858 4972\\r\\n'], 'output': ['28\\r\\n']}, {'input': ['10\\r\\n1620 8260 1620 3994 3994 8260 8260 1620 1620 3994\\r\\n'], 'output': ['19\\r\\n']}, {'input': ['10\\r\\n5938 4836 5938 5938 4836 4836 2780 2780 1495 4836\\r\\n'], 'output': ['21\\r\\n']}, {'input': ['10\\r\\n6090 3360 6090 6313 1608 6313 4087 3360 1608 1608\\r\\n'], 'output': ['19\\r\\n']}]", "source_code": "n = int(input())\na = list(map(int, input().split()))\n\na.append(a[0])\n\nans = 0\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[i] < a[j]:\n            ans += 1\n\nprint(ans)\n"}
